<Type Name="Formatter" FullName="Android.Text.Format.Formatter">
  <TypeSignature Language="C#" Value="public sealed class Formatter : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Formatter extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/text/format/Formatter", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary tool="true">Utility class to aid in formatting common values that are not covered
 by the <c><see cref="T:Java.Util.Formatter" /></c> class in <c><see cref="N:Java.Util" /></c></summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Utility class to aid in formatting common values that are not covered
 by the <c><see cref="T:Java.Util.Formatter" /></c> class in <c><see cref="N:Java.Util" /></c></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/text/format/Formatter.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Formatter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/format/Formatter.html#Formatter()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="FormatFileSize">
      <MemberSignature Language="C#" Value="public static string FormatFileSize (Android.Content.Context context, long number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatFileSize(class Android.Content.Context context, int64 number) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatFileSize", "(Landroid/content/Context;J)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="number" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="context">Context to use to load the localized units</param>
        <param name="number">size value to be formatted</param>
        <summary>Formats a content size to be in the form of bytes, kilobytes, megabytes, etc.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Formats a content size to be in the form of bytes, kilobytes, megabytes, etc.

 If the context has a right-to-left locale, the returned string is wrapped in bidi formatting
 characters to make sure it's displayed correctly if inserted inside a right-to-left string.
 (This is useful in cases where the unit strings, like "MB", are left-to-right, but the
 locale is right-to-left.)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/format/Formatter.html#formatFileSize(android.content.Context, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="FormatIpAddress">
      <MemberSignature Language="C#" Value="public static string FormatIpAddress (int ipv4Address);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatIpAddress(int32 ipv4Address) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatIpAddress", "(I)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipv4Address">To be added.</param>
        <summary>Returns a string in the canonical IPv4 format ###.###.###.### from a packed integer
 containing the IP address.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a string in the canonical IPv4 format ###.###.###.### from a packed integer
 containing the IP address. The IPv4 address is expected to be in little-endian
 format (LSB first). That is, 0x01020304 will return "4.3.2.1".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/format/Formatter.html#formatIpAddress(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="FormatShortFileSize">
      <MemberSignature Language="C#" Value="public static string FormatShortFileSize (Android.Content.Context context, long number);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string FormatShortFileSize(class Android.Content.Context context, int64 number) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("formatShortFileSize", "(Landroid/content/Context;J)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="number" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="number">To be added.</param>
        <summary>Like <c><see cref="M:Android.Text.Format.Formatter.FormatFileSize(Android.Content.Context,System.Int64)" /></c>, but trying to generate shorter numbers
 (showing fewer digits of precision).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Like <c><see cref="M:Android.Text.Format.Formatter.FormatFileSize(Android.Content.Context,System.Int64)" /></c>, but trying to generate shorter numbers
 (showing fewer digits of precision).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/format/Formatter.html#formatShortFileSize(android.content.Context, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
