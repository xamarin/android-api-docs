<Type Name="SimpleDateFormat" FullName="Java.Text.SimpleDateFormat">
  <TypeSignature Language="C#" Value="public class SimpleDateFormat : Java.Text.DateFormat" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SimpleDateFormat extends Java.Text.DateFormat" />
  <TypeSignature Language="DocId" Value="T:Java.Text.SimpleDateFormat" />
  <TypeSignature Language="F#" Value="type SimpleDateFormat = class&#xA;    inherit DateFormat" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Text.DateFormat</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/text/SimpleDateFormat", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/text/SimpleDateFormat", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
      <c>SimpleDateFormat</c> is a concrete class for formatting and
            parsing dates in a locale-sensitive manner.</summary>
    <remarks>
      <para>
        <c>SimpleDateFormat</c> is a concrete class for formatting and
            parsing dates in a locale-sensitive manner. It allows for formatting
            (date &amp;rarr; text), parsing (text &amp;rarr; date), and normalization.</para>
      <para>
        <c>SimpleDateFormat</c> allows you to start by choosing
            any user-defined patterns for date-time formatting. However, you
            are encouraged to create a date-time formatter with either
            <c>getTimeInstance</c>, <c>getDateInstance</c>, or
            <c>getDateTimeInstance</c> in <c>DateFormat</c>. Each
            of these class methods can return a date/time formatter initialized
            with a default format pattern. You may modify the format pattern
            using the <c>applyPattern</c> methods as desired.
            For more information on using these methods, see
            <c>DateFormat</c>.
            
            &lt;h2&gt;Date and Time Patterns&lt;/h2&gt;</para>
      <para>Date and time formats are specified by &lt;em&gt;date and time pattern&lt;/em&gt;
            strings.
            Within date and time pattern strings, unquoted letters from
            <c>'A'</c> to <c>'Z'</c> and from <c>'a'</c> to
            <c>'z'</c> are interpreted as pattern letters representing the
            components of a date or time string.
            Text can be quoted using single quotes (<c>'</c>) to avoid
            interpretation.
            <c>"''"</c> represents a single quote.
            All other characters are not interpreted; they're simply copied into the
            output string during formatting or matched against the input string
            during parsing.</para>
      <para>The following pattern letters are defined (all other characters from
            <c>'A'</c> to <c>'Z'</c> and from <c>'a'</c> to
            <c>'z'</c> are reserved):
            &lt;blockquote&gt;
            &lt;table class="striped"&gt;
            &lt;caption style="display:none"&gt;Chart shows pattern letters, date/time component, presentation, and examples.&lt;/caption&gt;
            &lt;thead&gt;
                &lt;tr&gt;
                    &lt;th scope="col" style="text-align:left"&gt;Letter
                    &lt;th scope="col" style="text-align:left"&gt;Date or Time Component
                    &lt;th scope="col" style="text-align:left"&gt;Presentation
                    &lt;th scope="col" style="text-align:left"&gt;Examples
                    &lt;th scope="col" style="text-align:left"&gt;Supported (API Levels)
            &lt;/thead&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>G</c>&lt;td&gt;Era designator
                    &lt;td&gt;Text&lt;td&gt;<c>AD</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>y</c>&lt;td&gt;Year
                    &lt;td&gt;Year&lt;td&gt;<c>1996</c>; <c>96</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>Y</c>&lt;td&gt;Week year
                    &lt;td&gt;Year&lt;td&gt;<c>2009</c>; <c>09</c>&lt;td&gt;24+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>M</c>&lt;td&gt;Month in year (context sensitive)
                    &lt;td&gt;Month&lt;td&gt;<c>July</c>; <c>Jul</c>; <c>07</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>L</c>&lt;td&gt;Month in year (standalone form)
                    &lt;td&gt;Month&lt;td&gt;<c>July</c>; <c>Jul</c>; <c>07</c>&lt;td&gt;TBD&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>w</c>&lt;td&gt;Week in year
                    &lt;td&gt;Number&lt;td&gt;<c>27</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>W</c>&lt;td&gt;Week in month
                    &lt;td&gt;Number&lt;td&gt;<c>2</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>D</c>&lt;td&gt;Day in year
                    &lt;td&gt;Number&lt;td&gt;<c>189</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>d</c>&lt;td&gt;Day in month
                    &lt;td&gt;Number&lt;td&gt;<c>10</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>F</c>&lt;td&gt;Day of week in month
                    &lt;td&gt;Number&lt;td&gt;<c>2</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>E</c>&lt;td&gt;Day name in week
                    &lt;td&gt;Text&lt;td&gt;<c>Tuesday</c>; <c>Tue</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>u</c>&lt;td&gt;Day number of week (1 = Monday, ..., 7 = Sunday)
                    &lt;td&gt;Number&lt;td&gt;<c>1</c>&lt;td&gt;24+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>a</c>&lt;td&gt;Am/pm marker
                    &lt;td&gt;Text&lt;td&gt;<c>PM</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>H</c>&lt;td&gt;Hour in day (0-23)
                    &lt;td&gt;Number&lt;td&gt;<c>0</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>k</c>&lt;td&gt;Hour in day (1-24)
                    &lt;td&gt;Number&lt;td&gt;<c>24</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>K</c>&lt;td&gt;Hour in am/pm (0-11)
                    &lt;td&gt;Number&lt;td&gt;<c>0</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>h</c>&lt;td&gt;Hour in am/pm (1-12)
                    &lt;td&gt;Number&lt;td&gt;<c>12</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>m</c>&lt;td&gt;Minute in hour
                    &lt;td&gt;Number&lt;td&gt;<c>30</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>s</c>&lt;td&gt;Second in minute
                    &lt;td&gt;Number&lt;td&gt;<c>55</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>S</c>&lt;td&gt;Millisecond
                    &lt;td&gt;Number&lt;td&gt;<c>978</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>z</c>&lt;td&gt;Time zone
                    &lt;td&gt;General time zone&lt;td&gt;<c>Pacific Standard Time</c>; <c>PST</c>; <c>GMT-08:00</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>Z</c>&lt;td&gt;Time zone
                    &lt;td&gt;RFC 822 time zone&lt;td&gt;<c>-0800</c>&lt;td&gt;1+&lt;/td&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>X</c>&lt;td&gt;Time zone
                    &lt;td&gt;ISO 8601 time zone&lt;td&gt;<c>-08</c>; <c>-0800</c>;  <c>-08:00</c>&lt;td&gt;24+&lt;/td&gt;
            &lt;/tbody&gt;
            &lt;/table&gt;
            &lt;/blockquote&gt;
            Pattern letters are usually repeated, as their number determines the
            exact presentation:
            &lt;ul&gt;
            &lt;li&gt;&lt;strong&gt;"text"&gt;Text:&lt;/strong&gt;
                For formatting, if the number of pattern letters is 4 or more,
                the full form is used; otherwise a short or abbreviated form
                is used if available.
                For parsing, both forms are accepted, independent of the number
                of pattern letters.&lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;"number"&gt;Number:&lt;/strong&gt;
                For formatting, the number of pattern letters is the minimum
                number of digits, and shorter numbers are zero-padded to this amount.
                For parsing, the number of pattern letters is ignored unless
                it's needed to separate two adjacent fields.&lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;"year"&gt;Year:&lt;/strong&gt;
                If the formatter's <c>#getCalendar() Calendar</c> is the Gregorian
                calendar, the following rules are applied.
                &lt;ul&gt;
                &lt;li&gt;For formatting, if the number of pattern letters is 2, the year
                    is truncated to 2 digits; otherwise it is interpreted as a
                    number.
                &lt;li&gt;For parsing, if the number of pattern letters is more than 2,
                    the year is interpreted literally, regardless of the number of
                    digits. So using the pattern "MM/dd/yyyy", "01/11/12" parses to
                    Jan 11, 12 A.D.
                &lt;li&gt;For parsing with the abbreviated year pattern ("y" or "yy"),
                    <c>SimpleDateFormat</c> must interpret the abbreviated year
                    relative to some century.  It does this by adjusting dates to be
                    within 80 years before and 20 years after the time the <c>SimpleDateFormat</c>
                    instance is created. For example, using a pattern of "MM/dd/yy" and a
                    <c>SimpleDateFormat</c> instance created on Jan 1, 1997,  the string
                    "01/11/12" would be interpreted as Jan 11, 2012 while the string "05/04/64"
                    would be interpreted as May 4, 1964.
                    During parsing, only strings consisting of exactly two digits, as defined by
                    <c>Character#isDigit(char)</c>, will be parsed into the default century.
                    Any other numeric string, such as a one digit string, a three or more digit
                    string, or a two digit string that isn't all digits (for example, "-1"), is
                    interpreted literally.  So "01/02/3" or "01/02/003" are parsed, using the
                    same pattern, as Jan 2, 3 AD.  Likewise, "01/02/-3" is parsed as Jan 2, 4 BC.
                &lt;/ul&gt;
                Otherwise, calendar system specific forms are applied.
                For both formatting and parsing, if the number of pattern
                letters is 4 or more, a calendar specific Calendar#LONG long form is used. Otherwise, a calendar
                specific Calendar#SHORT short or abbreviated form
                is used.
                &lt;br&gt;
                If week year <c>'Y'</c> is specified and the #getCalendar() calendar doesn't support any  week
                years, the calendar year (<c>'y'</c>) is used instead. The
                support of week years can be tested with a call to <c>DateFormat#getCalendar() getCalendar()</c>.<c>java.util.Calendar#isWeekDateSupported()
                isWeekDateSupported()</c>.&lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;"month"&gt;Month:&lt;/strong&gt;
                If the number of pattern letters is 3 or more, the month is
                interpreted as text; otherwise,
                it is interpreted as a number.
                &lt;ul&gt;
                &lt;li&gt;Letter &lt;em&gt;M&lt;/em&gt; produces context-sensitive month names, such as the
                    embedded form of names. Letter &lt;em&gt;M&lt;/em&gt; is context-sensitive in the
                    sense that when it is used in the standalone pattern, for example,
                    "MMMM", it gives the standalone form of a month name and when it is
                    used in the pattern containing other field(s), for example, "d MMMM",
                    it gives the format form of a month name. For example, January in the
                    Catalan language is "de gener" in the format form while it is "gener"
                    in the standalone form. In this case, "MMMM" will produce "gener" and
                    the month part of the "d MMMM" will produce "de gener". If a
                    <c>DateFormatSymbols</c> has been set explicitly with constructor
                    <c>#SimpleDateFormat(String,DateFormatSymbols)</c> or method <c>#setDateFormatSymbols(DateFormatSymbols)</c>, the month names given by
                    the <c>DateFormatSymbols</c> are used.&lt;/li&gt;
                &lt;li&gt;Letter &lt;em&gt;L&lt;/em&gt; produces the standalone form of month names.&lt;/li&gt;
                &lt;/ul&gt;
                &lt;br&gt;&lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;"timezone"&gt;General time zone:&lt;/strong&gt;
                Time zones are interpreted as text if they have
                names. For time zones representing a GMT offset value, the
                following syntax is used:</para>
      <code lang="text/java">&lt;a id="GMTOffsetTimeZone"&gt;&lt;i&gt;GMTOffsetTimeZone:&lt;/i&gt;&lt;/a&gt;
                        {@code GMT} &lt;i&gt;Sign&lt;/i&gt; &lt;i&gt;Hours&lt;/i&gt; {@code :} &lt;i&gt;Minutes&lt;/i&gt;
                &lt;i&gt;Sign:&lt;/i&gt; one of
                        {@code + -}
                &lt;i&gt;Hours:&lt;/i&gt;
                        &lt;i&gt;Digit&lt;/i&gt;
                        &lt;i&gt;Digit&lt;/i&gt; &lt;i&gt;Digit&lt;/i&gt;
                &lt;i&gt;Minutes:&lt;/i&gt;
                        &lt;i&gt;Digit&lt;/i&gt; &lt;i&gt;Digit&lt;/i&gt;
                &lt;i&gt;Digit:&lt;/i&gt; one of
                        {@code 0 1 2 3 4 5 6 7 8 9}</code>
      <para>
        <i>Hours</i> must be between 0 and 23, and <i>Minutes</i> must be between
                00 and 59. The format is locale independent and digits must be taken
                from the Basic Latin block of the Unicode standard.</para>
      <para>For parsing, RFC 822 time zones are also
                accepted.&lt;/li&gt;
            &lt;li&gt;&lt;strong&gt;"rfc822timezone"&gt;RFC 822 time zone:&lt;/strong&gt;
                For formatting, the RFC 822 4-digit time zone format is used:</para>
      <code lang="text/java">&lt;i&gt;RFC822TimeZone:&lt;/i&gt;
                        &lt;i&gt;Sign&lt;/i&gt; &lt;i&gt;TwoDigitHours&lt;/i&gt; &lt;i&gt;Minutes&lt;/i&gt;
                &lt;i&gt;TwoDigitHours:&lt;/i&gt;
                        &lt;i&gt;Digit Digit&lt;/i&gt;</code>
      <para>
        <i>TwoDigitHours</i> must be between 00 and 23. Other definitions
                are as for general time zones.</para>
      <para>For parsing, general time zones are also
                accepted.
            &lt;li&gt;&lt;strong&gt;"iso8601timezone"&gt;ISO 8601 Time zone:&lt;/strong&gt;
                The number of pattern letters designates the format for both formatting
                and parsing as follows:</para>
      <code lang="text/java">&lt;i&gt;ISO8601TimeZone:&lt;/i&gt;
                        &lt;i&gt;OneLetterISO8601TimeZone&lt;/i&gt;
                        &lt;i&gt;TwoLetterISO8601TimeZone&lt;/i&gt;
                        &lt;i&gt;ThreeLetterISO8601TimeZone&lt;/i&gt;
                &lt;i&gt;OneLetterISO8601TimeZone:&lt;/i&gt;
                        &lt;i&gt;Sign&lt;/i&gt; &lt;i&gt;TwoDigitHours&lt;/i&gt;
                        {@code Z}
                &lt;i&gt;TwoLetterISO8601TimeZone:&lt;/i&gt;
                        &lt;i&gt;Sign&lt;/i&gt; &lt;i&gt;TwoDigitHours&lt;/i&gt; &lt;i&gt;Minutes&lt;/i&gt;
                        {@code Z}
                &lt;i&gt;ThreeLetterISO8601TimeZone:&lt;/i&gt;
                        &lt;i&gt;Sign&lt;/i&gt; &lt;i&gt;TwoDigitHours&lt;/i&gt; {@code :} &lt;i&gt;Minutes&lt;/i&gt;
                        {@code Z}</code>
      <para>Other definitions are as for general time zones or
                RFC 822 time zones.</para>
      <para>For formatting, if the offset value from GMT is 0, <c>"Z"</c> is
                produced. If the number of pattern letters is 1, any fraction of an hour
                is ignored. For example, if the pattern is <c>"X"</c> and the time zone is
                <c>"GMT+05:30"</c>, <c>"+05"</c> is produced.</para>
      <para>For parsing, the letter <c>"Z"</c> is parsed as the UTC time zone designator (therefore
                <c>"09:30Z"</c> is parsed as <c>"09:30 UTC"</c>.
                General time zones are &lt;em&gt;not&lt;/em&gt; accepted.</para>
      <para>If the number of <c>"X"</c> pattern letters is 4 or more (e.g. <c>XXXX</c>), <c>IllegalArgumentException</c> is thrown when constructing a <c>SimpleDateFormat</c> or #applyPattern(String) applying a
                pattern.
            &lt;/ul&gt;
            <c>SimpleDateFormat</c> also supports &lt;em&gt;localized date and time
            pattern&lt;/em&gt; strings. In these strings, the pattern letters described above
            may be replaced with other, locale dependent, pattern letters.
            <c>SimpleDateFormat</c> does not deal with the localization of text
            other than the pattern letters; that's up to the client of the class.
            
            &lt;h3&gt;Examples&lt;/h3&gt;
            
            The following examples show how date and time patterns are interpreted in
            the U.S. locale. The given date and time are 2001-07-04 12:08:56 local time
            in the U.S. Pacific Time time zone.
            &lt;blockquote&gt;
            &lt;table class="striped"&gt;
            &lt;caption style="display:none"&gt;Examples of date and time patterns interpreted in the U.S. locale&lt;/caption&gt;
            &lt;thead&gt;
                &lt;tr&gt;
                    &lt;th scope="col" style="text-align:left"&gt;Date and Time Pattern
                    &lt;th scope="col" style="text-align:left"&gt;Result
            &lt;/thead&gt;
            &lt;tbody&gt;
                &lt;tr&gt;
                    &lt;th scope="row"&gt;<c>"yyyy.MM.dd G 'at' HH:mm:ss z"</c>&lt;td&gt;<c>2001.07.04 AD at 12:08:56 PDT</c>&lt;tr&gt;
                    &lt;th scope="row"&gt;<c>"EEE, MMM d, ''yy"</c>&lt;td&gt;<c>Wed, Jul 4, '01</c>&lt;tr&gt;
                    &lt;th scope="row"&gt;<c>"h:mm a"</c>&lt;td&gt;<c>12:08 PM</c>&lt;tr&gt;
                    &lt;th scope="row"&gt;<c>"hh 'o''clock' a, zzzz"</c>&lt;td&gt;<c>12 o'clock PM, Pacific Daylight Time</c>&lt;tr&gt;
                    &lt;th scope="row"&gt;<c>"K:mm a, z"</c>&lt;td&gt;<c>0:08 PM, PDT</c>&lt;tr&gt;
                    &lt;th scope="row"&gt;<c>"yyyyy.MMMMM.dd GGG hh:mm aaa"</c>&lt;td&gt;<c>02001.July.04 AD 12:08 PM</c>&lt;tr&gt;
                    &lt;th scope="row"&gt;<c>"EEE, d MMM yyyy HH:mm:ss Z"</c>&lt;td&gt;<c>Wed, 4 Jul 2001 12:08:56 -0700</c>&lt;tr&gt;
                    &lt;th scope="row"&gt;<c>"yyMMddHHmmssZ"</c>&lt;td&gt;<c>010704120856-0700</c>&lt;tr&gt;
                    &lt;th scope="row"&gt;<c>"yyyy-MM-dd'T'HH:mm:ss.SSSZ"</c>&lt;td&gt;<c>2001-07-04T12:08:56.235-0700</c>&lt;tr&gt;
                    &lt;th scope="row"&gt;<c>"yyyy-MM-dd'T'HH:mm:ss.SSSXXX"</c>&lt;td&gt;<c>2001-07-04T12:08:56.235-07:00</c>&lt;tr&gt;
                    &lt;th scope="row"&gt;<c>"YYYY-'W'ww-u"</c>&lt;td&gt;<c>2001-W27-3</c>&lt;/tbody&gt;
            &lt;/table&gt;
            &lt;/blockquote&gt;
            
            &lt;h3&gt;"synchronization"&gt;Synchronization&lt;/h3&gt;</para>
      <para>Date formats are not synchronized.
            It is recommended to create separate format instances for each thread.
            If multiple threads access a format concurrently, it must be synchronized
            externally.</para>
      <para>Added in 1.1.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/text/SimpleDateFormat" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleDateFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.SimpleDateFormat.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructs a <c>SimpleDateFormat</c> using the default pattern and
            date format symbols for the default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale.</summary>
        <remarks>
          <para>Constructs a <c>SimpleDateFormat</c> using the default pattern and
            date format symbols for the default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale.
            &lt;b&gt;Note:&lt;/b&gt; This constructor may not support all locales.
            For full coverage, use the factory methods in the <c>DateFormat</c>
            class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#SimpleDateFormat()" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.SimpleDateFormat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleDateFormat (string? pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.SimpleDateFormat.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.Text.SimpleDateFormat : string -&gt; Java.Text.SimpleDateFormat" Usage="new Java.Text.SimpleDateFormat pattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">the pattern describing the date and time format</param>
        <summary>Constructs a <c>SimpleDateFormat</c> using the given pattern and
            the default date format symbols for the default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale.</summary>
        <remarks>
          <para>Constructs a <c>SimpleDateFormat</c> using the given pattern and
            the default date format symbols for the default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale.
            &lt;b&gt;Note:&lt;/b&gt; This constructor may not support all locales.
            For full coverage, use the factory methods in the <c>DateFormat</c>
            class.</para>
          <para>This is equivalent to calling
            <c>#SimpleDateFormat(String, Locale)
                SimpleDateFormat(pattern, Locale.getDefault(Locale.Category.FORMAT))</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#SimpleDateFormat(java.lang.String)" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the pattern is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>pattern</c> is not considered to be usable by this
            formatter.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SimpleDateFormat (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.SimpleDateFormat.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Text.SimpleDateFormat : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Text.SimpleDateFormat" Usage="new Java.Text.SimpleDateFormat (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleDateFormat (string? pattern, Java.Text.DateFormatSymbols? formatSymbols);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, class Java.Text.DateFormatSymbols formatSymbols) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.SimpleDateFormat.#ctor(System.String,Java.Text.DateFormatSymbols)" />
      <MemberSignature Language="F#" Value="new Java.Text.SimpleDateFormat : string * Java.Text.DateFormatSymbols -&gt; Java.Text.SimpleDateFormat" Usage="new Java.Text.SimpleDateFormat (pattern, formatSymbols)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/text/DateFormatSymbols;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/text/DateFormatSymbols;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="formatSymbols" Type="Java.Text.DateFormatSymbols" />
      </Parameters>
      <Docs>
        <param name="pattern">the pattern describing the date and time format</param>
        <param name="formatSymbols">the date format symbols to be used for formatting</param>
        <summary>Constructs a <c>SimpleDateFormat</c> using the given pattern and
            date format symbols.</summary>
        <remarks>
          <para>Constructs a <c>SimpleDateFormat</c> using the given pattern and
            date format symbols.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#SimpleDateFormat(java.lang.String,%20java.text.DateFormatSymbols)" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String, java.text.DateFormatSymbols)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the pattern is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the pattern is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SimpleDateFormat (string? pattern, Java.Util.Locale? locale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pattern, class Java.Util.Locale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.SimpleDateFormat.#ctor(System.String,Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="new Java.Text.SimpleDateFormat : string * Java.Util.Locale -&gt; Java.Text.SimpleDateFormat" Usage="new Java.Text.SimpleDateFormat (pattern, locale)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/util/Locale;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/util/Locale;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="pattern">the pattern describing the date and time format</param>
        <param name="locale">the locale whose date format symbols should be used</param>
        <summary>Constructs a <c>SimpleDateFormat</c> using the given pattern and
            the default date format symbols for the given locale.</summary>
        <remarks>
          <para>Constructs a <c>SimpleDateFormat</c> using the given pattern and
            the default date format symbols for the given locale.
            &lt;b&gt;Note:&lt;/b&gt; This constructor may not support all locales.
            For full coverage, use the factory methods in the <c>DateFormat</c>
            class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#SimpleDateFormat(java.lang.String,%20java.util.Locale)" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.SimpleDateFormat(java.lang.String, java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the pattern is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the pattern is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyLocalizedPattern">
      <MemberSignature Language="C#" Value="public virtual void ApplyLocalizedPattern (string? pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyLocalizedPattern(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.SimpleDateFormat.ApplyLocalizedPattern(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ApplyLocalizedPattern : string -&gt; unit&#xA;override this.ApplyLocalizedPattern : string -&gt; unit" Usage="simpleDateFormat.ApplyLocalizedPattern pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("applyLocalizedPattern", "(Ljava/lang/String;)V", "GetApplyLocalizedPattern_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("applyLocalizedPattern", "(Ljava/lang/String;)V", "GetApplyLocalizedPattern_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">a String to be mapped to the new date and time format
                   pattern for this format</param>
        <summary>Applies the given localized pattern string to this date format.</summary>
        <remarks>
          <para>Applies the given localized pattern string to this date format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#applyLocalizedPattern(java.lang.String)" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.applyLocalizedPattern(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ApplyPattern">
      <MemberSignature Language="C#" Value="public virtual void ApplyPattern (string? pattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyPattern(string pattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.SimpleDateFormat.ApplyPattern(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ApplyPattern : string -&gt; unit&#xA;override this.ApplyPattern : string -&gt; unit" Usage="simpleDateFormat.ApplyPattern pattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("applyPattern", "(Ljava/lang/String;)V", "GetApplyPattern_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("applyPattern", "(Ljava/lang/String;)V", "GetApplyPattern_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pattern">the new date and time pattern for this date format</param>
        <summary>Applies the given pattern string to this date format.</summary>
        <remarks>
          <para>Applies the given pattern string to this date format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#applyPattern(java.lang.String)" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.applyPattern(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.NullPointerException">if the pattern is <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the pattern is invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DateFormatSymbols">
      <MemberSignature Language="C#" Value="public virtual Java.Text.DateFormatSymbols? DateFormatSymbols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Text.DateFormatSymbols DateFormatSymbols" />
      <MemberSignature Language="DocId" Value="P:Java.Text.SimpleDateFormat.DateFormatSymbols" />
      <MemberSignature Language="F#" Value="member this.DateFormatSymbols : Java.Text.DateFormatSymbols with get, set" Usage="Java.Text.SimpleDateFormat.DateFormatSymbols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDateFormatSymbols", "()Ljava/text/DateFormatSymbols;", "GetGetDateFormatSymbolsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDateFormatSymbols", "()Ljava/text/DateFormatSymbols;", "GetGetDateFormatSymbolsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setDateFormatSymbols", "(Ljava/text/DateFormatSymbols;)V", "GetSetDateFormatSymbols_Ljava_text_DateFormatSymbols_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setDateFormatSymbols", "(Ljava/text/DateFormatSymbols;)V", "GetSetDateFormatSymbols_Ljava_text_DateFormatSymbols_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.DateFormatSymbols</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newFormatSymbols">the new date and time format symbols</param>
        <summary>Gets a copy of the date and time format symbols of this date format. -or- Sets the date and time format symbols of this date format.</summary>
        <value>the date and time format symbols of this date format</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets a copy of the date and time format symbols of this date format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#getDateFormatSymbols()" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.getDateFormatSymbols()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the date and time format symbols of this date format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#setDateFormatSymbols(java.text.DateFormatSymbols)" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.setDateFormatSymbols(java.text.DateFormatSymbols)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public override Java.Lang.StringBuffer? Format (Java.Util.Date? date, Java.Lang.StringBuffer? toAppendTo, Java.Text.FieldPosition? pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.StringBuffer Format(class Java.Util.Date date, class Java.Lang.StringBuffer toAppendTo, class Java.Text.FieldPosition pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.SimpleDateFormat.Format(Java.Util.Date,Java.Lang.StringBuffer,Java.Text.FieldPosition)" />
      <MemberSignature Language="F#" Value="override this.Format : Java.Util.Date * Java.Lang.StringBuffer * Java.Text.FieldPosition -&gt; Java.Lang.StringBuffer" Usage="simpleDateFormat.Format (date, toAppendTo, pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_Ljava_util_Date_Ljava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(Ljava/util/Date;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_Ljava_util_Date_Ljava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="Java.Util.Date" />
        <Parameter Name="toAppendTo" Type="Java.Lang.StringBuffer" />
        <Parameter Name="pos" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="date">the date-time value to be formatted into a date-time string.</param>
        <param name="toAppendTo">where the new date-time text is to be appended.</param>
        <param name="pos">keeps track on the position of the field within
            the returned string. For example, given a date-time text
            <c>"1996.07.10 AD at 15:08:56 PDT"</c>, if the given <c>fieldPosition</c>
            is <c>DateFormat#YEAR_FIELD</c>, the begin index and end index of
            <c>fieldPosition</c> will be set to 0 and 4, respectively.
            Notice that if the same date-time field appears more than once in a
            pattern, the <c>fieldPosition</c> will be set for the first occurrence
            of that date-time field. For instance, formatting a <c>Date</c> to the
            date-time string <c>"1 PM PDT (Pacific Daylight Time)"</c> using the
            pattern <c>"h a z (zzzz)"</c> and the alignment field
            <c>DateFormat#TIMEZONE_FIELD</c>, the begin index and end index of
            <c>fieldPosition</c> will be set to 5 and 8, respectively, for the
            first occurrence of the timezone pattern character <c>'z'</c>.</param>
        <summary>Formats the given <c>Date</c> into a date/time string and appends
            the result to the given <c>StringBuffer</c>.</summary>
        <returns>the formatted date-time string.</returns>
        <remarks>
          <para>Formats the given <c>Date</c> into a date/time string and appends
            the result to the given <c>StringBuffer</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#format(java.util.Date,%20java.lang.StringBuffer,%20java.text.FieldPosition)" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.format(java.util.Date, java.lang.StringBuffer, java.text.FieldPosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if there are invalid characters in the pattern.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get2DigitYearStart">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Date? Get2DigitYearStart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Date Get2DigitYearStart() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.SimpleDateFormat.Get2DigitYearStart" />
      <MemberSignature Language="F#" Value="abstract member Get2DigitYearStart : unit -&gt; Java.Util.Date&#xA;override this.Get2DigitYearStart : unit -&gt; Java.Util.Date" Usage="simpleDateFormat.Get2DigitYearStart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get2DigitYearStart", "()Ljava/util/Date;", "GetGet2DigitYearStartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get2DigitYearStart", "()Ljava/util/Date;", "GetGet2DigitYearStartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Date</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the beginning date of the 100-year period 2-digit years are interpreted
            as being within.</summary>
        <returns>the start of the 100-year period into which two digit years are
            parsed</returns>
        <remarks>
          <para>Returns the beginning date of the 100-year period 2-digit years are interpreted
            as being within.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#get2DigitYearStart()" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.get2DigitYearStart()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Text.SimpleDateFormat.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Text.SimpleDateFormat.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public override Java.Util.Date? Parse (string? text, Java.Text.ParsePosition? pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Util.Date Parse(string text, class Java.Text.ParsePosition pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.SimpleDateFormat.Parse(System.String,Java.Text.ParsePosition)" />
      <MemberSignature Language="F#" Value="override this.Parse : string * Java.Text.ParsePosition -&gt; Java.Util.Date" Usage="simpleDateFormat.Parse (text, pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;", "GetParse_Ljava_lang_String_Ljava_text_ParsePosition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;", "GetParse_Ljava_lang_String_Ljava_text_ParsePosition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Date</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="pos" Type="Java.Text.ParsePosition" />
      </Parameters>
      <Docs>
        <param name="text">A <c>String</c>, part of which should be parsed.</param>
        <param name="pos">A <c>ParsePosition</c> object with index and error
                         index information as described above.</param>
        <summary>Parses text from a string to produce a <c>Date</c>.</summary>
        <returns>A <c>Date</c> parsed from the string. In case of
                    error, returns null.</returns>
        <remarks>
          <para>Parses text from a string to produce a <c>Date</c>.</para>
          <para>The method attempts to parse text starting at the index given by
            <c>pos</c>.
            If parsing succeeds, then the index of <c>pos</c> is updated
            to the index after the last character used (parsing does not necessarily
            use all characters up to the end of the string), and the parsed
            date is returned. The updated <c>pos</c> can be used to
            indicate the starting point for the next call to this method.
            If an error occurs, then the index of <c>pos</c> is not
            changed, the error index of <c>pos</c> is set to the index of
            the character where the error occurred, and null is returned.</para>
          <para>This parsing operation uses the <c>DateFormat#calendar
            calendar</c> to produce a <c>Date</c>. All of the <c>calendar</c>'s date-time fields are Calendar#clear()
            cleared before parsing, and the <c>calendar</c>'s default
            values of the date-time fields are used for any missing
            date-time information. For example, the year value of the
            parsed <c>Date</c> is 1970 with <c>GregorianCalendar</c> if
            no year value is given from the parsing operation.  The <c>TimeZone</c> value may be overwritten, depending on the given
            pattern and the time zone value in <c>text</c>. Any <c>TimeZone</c> value that has previously been set by a call to
            <c>#setTimeZone(java.util.TimeZone) setTimeZone</c> may need
            to be restored for further operations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#parse(java.lang.String,%20java.text.ParsePosition)" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.parse(java.lang.String, java.text.ParsePosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if there are invalid characters in the pattern.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Set2DigitYearStart">
      <MemberSignature Language="C#" Value="public virtual void Set2DigitYearStart (Java.Util.Date? startDate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set2DigitYearStart(class Java.Util.Date startDate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.SimpleDateFormat.Set2DigitYearStart(Java.Util.Date)" />
      <MemberSignature Language="F#" Value="abstract member Set2DigitYearStart : Java.Util.Date -&gt; unit&#xA;override this.Set2DigitYearStart : Java.Util.Date -&gt; unit" Usage="simpleDateFormat.Set2DigitYearStart startDate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("set2DigitYearStart", "(Ljava/util/Date;)V", "GetSet2DigitYearStart_Ljava_util_Date_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("set2DigitYearStart", "(Ljava/util/Date;)V", "GetSet2DigitYearStart_Ljava_util_Date_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startDate" Type="Java.Util.Date" />
      </Parameters>
      <Docs>
        <param name="startDate">During parsing, two digit years will be placed in the range
            <c>startDate</c> to <c>startDate + 100 years</c>.</param>
        <summary>Sets the 100-year period 2-digit years will be interpreted as being in
            to begin on the date the user specifies.</summary>
        <remarks>
          <para>Sets the 100-year period 2-digit years will be interpreted as being in
            to begin on the date the user specifies.</para>
          <para>Added in 1.2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#set2DigitYearStart(java.util.Date)" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.set2DigitYearStart(java.util.Date)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Text.SimpleDateFormat.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Text.SimpleDateFormat.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Text.SimpleDateFormat.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Text.SimpleDateFormat.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToLocalizedPattern">
      <MemberSignature Language="C#" Value="public virtual string? ToLocalizedPattern ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToLocalizedPattern() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.SimpleDateFormat.ToLocalizedPattern" />
      <MemberSignature Language="F#" Value="abstract member ToLocalizedPattern : unit -&gt; string&#xA;override this.ToLocalizedPattern : unit -&gt; string" Usage="simpleDateFormat.ToLocalizedPattern " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toLocalizedPattern", "()Ljava/lang/String;", "GetToLocalizedPatternHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toLocalizedPattern", "()Ljava/lang/String;", "GetToLocalizedPatternHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a localized pattern string describing this date format.</summary>
        <returns>a localized pattern string describing this date format.</returns>
        <remarks>
          <para>Returns a localized pattern string describing this date format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#toLocalizedPattern()" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.toLocalizedPattern()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ToPattern">
      <MemberSignature Language="C#" Value="public virtual string? ToPattern ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToPattern() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.SimpleDateFormat.ToPattern" />
      <MemberSignature Language="F#" Value="abstract member ToPattern : unit -&gt; string&#xA;override this.ToPattern : unit -&gt; string" Usage="simpleDateFormat.ToPattern " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toPattern", "()Ljava/lang/String;", "GetToPatternHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toPattern", "()Ljava/lang/String;", "GetToPatternHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a pattern string describing this date format.</summary>
        <returns>a pattern string describing this date format.</returns>
        <remarks>
          <para>Returns a pattern string describing this date format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/SimpleDateFormat#toPattern()" title="Reference documentation">Java documentation for <code>java.text.SimpleDateFormat.toPattern()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
