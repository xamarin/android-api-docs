<Type Name="_Format" FullName="Java.Text._Format">
  <TypeSignature Language="C#" Value="public abstract class _Format : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.IO.ISerializable, Java.Lang.ICloneable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit _Format extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.IO.ISerializable, class Java.Lang.ICloneable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Text._Format" />
  <TypeSignature Language="F#" Value="type _Format = class&#xA;    inherit Object&#xA;    interface ISerializable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/text/Format", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/text/Format", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
      <c>Format</c> is an abstract base class for formatting locale-sensitive
            information such as dates, messages, and numbers.</summary>
    <remarks>
      <para>
        <c>Format</c> is an abstract base class for formatting locale-sensitive
            information such as dates, messages, and numbers.</para>
      <para>
        <c>Format</c> defines the programming interface for formatting
            locale-sensitive objects into <c>String</c>s (the
            <c>format</c> method) and for parsing <c>String</c>s back
            into objects (the <c>parseObject</c> method).</para>
      <para>Generally, a format's <c>parseObject</c> method must be able to parse
            any string formatted by its <c>format</c> method. However, there may
            be exceptional cases where this is not possible. For example, a
            <c>format</c> method might create two adjacent integer numbers with
            no separator in between, and in this case the <c>parseObject</c> could
            not tell which digits belong to which number.
            
            &lt;h2&gt;Subclassing&lt;/h2&gt;</para>
      <para>The Java Platform provides three specialized subclasses of <c>Format</c>--
            <c>DateFormat</c>, <c>MessageFormat</c>, and
            <c>NumberFormat</c>--for formatting dates, messages, and numbers,
            respectively.</para>
      <para>Concrete subclasses must implement three methods:
            &lt;ol&gt;
            &lt;li&gt; <c>format(Object obj, StringBuffer toAppendTo, FieldPosition pos)</c>&lt;li&gt; <c>formatToCharacterIterator(Object obj)</c>&lt;li&gt; <c>parseObject(String source, ParsePosition pos)</c>&lt;/ol&gt;
            These general methods allow polymorphic parsing and formatting of objects
            and are used, for example, by <c>MessageFormat</c>.
            Subclasses often also provide additional <c>format</c> methods for
            specific input types as well as <c>parse</c> methods for specific
            result types. Any <c>parse</c> method that does not take a
            <c>ParsePosition</c> argument should throw <c>ParseException</c>
            when no text in the required format is at the beginning of the input text.</para>
      <para>Most subclasses will also implement the following factory methods:
            &lt;ol&gt;
            &lt;li&gt;
            <c>getInstance</c> for getting a useful format object appropriate
            for the current locale
            &lt;li&gt;
            <c>getInstance(Locale)</c> for getting a useful format
            object appropriate for the specified locale
            &lt;/ol&gt;
            In addition, some subclasses may also implement other
            <c>getXxxxInstance</c> methods for more specialized control. For
            example, the <c>NumberFormat</c> class provides
            <c>getPercentInstance</c> and <c>getCurrencyInstance</c>
            methods for getting specialized number formatters.</para>
      <para>Subclasses of <c>Format</c> that allow programmers to create objects
            for locales (with <c>getInstance(Locale)</c> for example)
            must also implement the following class method:
            &lt;blockquote&gt;</para>
      <code lang="text/java">public static Locale[] getAvailableLocales()
            </code>
      <para>&lt;/blockquote&gt;</para>
      <para>And finally subclasses may define a set of constants to identify the various
            fields in the formatted output. These constants are used to create a FieldPosition
            object which identifies what information is contained in the field and its
            position in the formatted result. These constants should be named
            <c>&lt;em&gt;item&lt;/em&gt;_FIELD</c> where <c>&lt;em&gt;item&lt;/em&gt;</c> identifies
            the field. For examples of these constants, see <c>ERA_FIELD</c> and its
            friends in <c>DateFormat</c>.
            
            &lt;h3&gt;"synchronization"&gt;Synchronization&lt;/h3&gt;</para>
      <para>Formats are generally not synchronized.
            It is recommended to create separate format instances for each thread.
            If multiple threads access a format concurrently, it must be synchronized
            externally.</para>
      <para>Added in 1.1.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/text/Format" title="Reference documentation">Java documentation for <code>java.text.Format</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected _Format ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text._Format.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Sole constructor.</summary>
        <remarks>
          <para>Sole constructor.  (For invocation by subclass constructors, typically
            implicit.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Format#Format()" title="Reference documentation">Java documentation for <code>java.text.Format.Format()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected _Format (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text._Format.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Text._Format : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Text._Format" Usage="new Java.Text._Format (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text._Format.Clone" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; Java.Lang.Object" Usage="_Format.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clone", "()Ljava/lang/Object;", "GetCloneHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clone", "()Ljava/lang/Object;", "GetCloneHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates and returns a copy of this object.</summary>
        <returns>a clone of this instance.</returns>
        <remarks>
          <para>Creates and returns a copy of this object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Format#clone()" title="Reference documentation">Java documentation for <code>java.text.Format.clone()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Java.Lang.ICloneable" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string? Format (Java.Lang.Object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Format(class Java.Lang.Object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text._Format.Format(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="member this.Format : Java.Lang.Object -&gt; string" Usage="_Format.Format obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(Ljava/lang/Object;)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(Ljava/lang/Object;)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to format</param>
        <summary>Formats an object to produce a string.</summary>
        <returns>Formatted string.</returns>
        <remarks>
          <para>Formats an object to produce a string. This is equivalent to
            &lt;blockquote&gt;
            <c>#format(Object, StringBuffer, FieldPosition) format</c><c>(obj,
                    new StringBuffer(), new FieldPosition(0)).toString();</c>&lt;/blockquote&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Format#format(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.text.Format.format(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object cannot be formatted by this format.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.StringBuffer? Format (Java.Lang.Object? obj, Java.Lang.StringBuffer? toAppendTo, Java.Text.FieldPosition? pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.StringBuffer Format(class Java.Lang.Object obj, class Java.Lang.StringBuffer toAppendTo, class Java.Text.FieldPosition pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text._Format.Format(Java.Lang.Object,Java.Lang.StringBuffer,Java.Text.FieldPosition)" />
      <MemberSignature Language="F#" Value="abstract member Format : Java.Lang.Object * Java.Lang.StringBuffer * Java.Text.FieldPosition -&gt; Java.Lang.StringBuffer" Usage="_Format.Format (obj, toAppendTo, pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_Ljava_lang_Object_Ljava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_Ljava_lang_Object_Ljava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
        <Parameter Name="toAppendTo" Type="Java.Lang.StringBuffer" />
        <Parameter Name="pos" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="obj">The object to format</param>
        <param name="toAppendTo">where the text is to be appended</param>
        <param name="pos">A <c>FieldPosition</c> identifying a field
                          in the formatted text</param>
        <summary>Formats an object and appends the resulting text to a given string
            buffer.</summary>
        <returns>the string buffer passed in as <c>toAppendTo</c>,
                          with formatted text appended</returns>
        <remarks>
          <para>Formats an object and appends the resulting text to a given string
            buffer.
            If the <c>pos</c> argument identifies a field used by the format,
            then its indices are set to the beginning and end of the first such
            field encountered.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Format#format(java.lang.Object,%20java.lang.StringBuffer,%20java.text.FieldPosition)" title="Reference documentation">Java documentation for <code>java.text.Format.format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object cannot be formatted by this format.
</exception>
      </Docs>
    </Member>
    <Member MemberName="FormatToCharacterIterator">
      <MemberSignature Language="C#" Value="public virtual Java.Text.IAttributedCharacterIterator? FormatToCharacterIterator (Java.Lang.Object? obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Text.IAttributedCharacterIterator FormatToCharacterIterator(class Java.Lang.Object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text._Format.FormatToCharacterIterator(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member FormatToCharacterIterator : Java.Lang.Object -&gt; Java.Text.IAttributedCharacterIterator&#xA;override this.FormatToCharacterIterator : Java.Lang.Object -&gt; Java.Text.IAttributedCharacterIterator" Usage="_Format.FormatToCharacterIterator obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("formatToCharacterIterator", "(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;", "GetFormatToCharacterIterator_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("formatToCharacterIterator", "(Ljava/lang/Object;)Ljava/text/AttributedCharacterIterator;", "GetFormatToCharacterIterator_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.IAttributedCharacterIterator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to format</param>
        <summary>Formats an Object producing an <c>AttributedCharacterIterator</c>.</summary>
        <returns>AttributedCharacterIterator describing the formatted value.</returns>
        <remarks>
          <para>Formats an Object producing an <c>AttributedCharacterIterator</c>.
            You can use the returned <c>AttributedCharacterIterator</c>
            to build the resulting String, as well as to determine information
            about the resulting String.</para>
          <para>Each attribute key of the AttributedCharacterIterator will be of type
            <c>Field</c>. It is up to each <c>Format</c> implementation
            to define what the legal values are for each attribute in the
            <c>AttributedCharacterIterator</c>, but typically the attribute
            key is also used as the attribute value.</para>
          <para>The default implementation creates an
            <c>AttributedCharacterIterator</c> with no attributes. Subclasses
            that support fields should override this and create an
            <c>AttributedCharacterIterator</c> with meaningful attributes.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Format#formatToCharacterIterator(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.text.Format.formatToCharacterIterator(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the object cannot be formatted by this format.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Text._Format.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Text._Format.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseObject">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? ParseObject (string? source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ParseObject(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text._Format.ParseObject(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ParseObject : string -&gt; Java.Lang.Object&#xA;override this.ParseObject : string -&gt; Java.Lang.Object" Usage="_Format.ParseObject source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parseObject", "(Ljava/lang/String;)Ljava/lang/Object;", "GetParseObject_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parseObject", "(Ljava/lang/String;)Ljava/lang/Object;", "GetParseObject_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">A <c>String</c> whose beginning should be parsed.</param>
        <summary>Parses text from the beginning of the given string to produce an object.</summary>
        <returns>An <c>Object</c> parsed from the string.</returns>
        <remarks>
          <para>Parses text from the beginning of the given string to produce an object.
            The method may not use the entire text of the given string.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Format#parseObject(java.lang.String)" title="Reference documentation">Java documentation for <code>java.text.Format.parseObject(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Text.ParseException">if an error occurs during parsing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ParseObject">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Object? ParseObject (string? source, Java.Text.ParsePosition? pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object ParseObject(string source, class Java.Text.ParsePosition pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text._Format.ParseObject(System.String,Java.Text.ParsePosition)" />
      <MemberSignature Language="F#" Value="abstract member ParseObject : string * Java.Text.ParsePosition -&gt; Java.Lang.Object" Usage="_Format.ParseObject (source, pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parseObject", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;", "GetParseObject_Ljava_lang_String_Ljava_text_ParsePosition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parseObject", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;", "GetParseObject_Ljava_lang_String_Ljava_text_ParsePosition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="pos" Type="Java.Text.ParsePosition" />
      </Parameters>
      <Docs>
        <param name="source">A <c>String</c>, part of which should be parsed.</param>
        <param name="pos">A <c>ParsePosition</c> object with index and error
                       index information as described above.</param>
        <summary>Parses text from a string to produce an object.</summary>
        <returns>An <c>Object</c> parsed from the string. In case of
                    error, returns null.</returns>
        <remarks>
          <para>Parses text from a string to produce an object.</para>
          <para>The method attempts to parse text starting at the index given by
            <c>pos</c>.
            If parsing succeeds, then the index of <c>pos</c> is updated
            to the index after the last character used (parsing does not necessarily
            use all characters up to the end of the string), and the parsed
            object is returned. The updated <c>pos</c> can be used to
            indicate the starting point for the next call to this method.
            If an error occurs, then the index of <c>pos</c> is not
            changed, the error index of <c>pos</c> is set to the index of
            the character where the error occurred, and null is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Format#parseObject(java.lang.String,%20java.text.ParsePosition)" title="Reference documentation">Java documentation for <code>java.text.Format.parseObject(java.lang.String, java.text.ParsePosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Text._Format.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Text._Format.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Text._Format.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Text._Format.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
