<Type Name="ChoiceFormat" FullName="Java.Text.ChoiceFormat">
  <TypeSignature Language="C#" Value="public class ChoiceFormat : Java.Text.NumberFormat" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChoiceFormat extends Java.Text.NumberFormat" />
  <TypeSignature Language="DocId" Value="T:Java.Text.ChoiceFormat" />
  <TypeSignature Language="F#" Value="type ChoiceFormat = class&#xA;    inherit NumberFormat" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Text.NumberFormat</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/text/ChoiceFormat", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/text/ChoiceFormat", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A <c>ChoiceFormat</c> allows you to attach a format to a range of numbers.</summary>
    <remarks>
      <para>A <c>ChoiceFormat</c> allows you to attach a format to a range of numbers.
            It is generally used in a <c>MessageFormat</c> for handling plurals.
            The choice is specified with an ascending list of doubles, where each item
            specifies a half-open interval up to the next item:
            &lt;blockquote&gt;</para>
      <code lang="text/java">X matches j if and only if limit[j] &amp;le; X &amp;lt; limit[j+1]
            </code>
      <para>&lt;/blockquote&gt;
            If there is no match, then either the first or last index is used, depending
            on whether the number (X) is too low or too high.  If the limit array is not
            in ascending order, the results of formatting will be incorrect.  ChoiceFormat
            also accepts <c>&amp;#92;u221E</c> as equivalent to infinity(INF).</para>
      <para>&lt;strong&gt;Note:&lt;/strong&gt;
            <c>ChoiceFormat</c> differs from the other <c>Format</c>
            classes in that you create a <c>ChoiceFormat</c> object with a
            constructor (not with a <c>getInstance</c> style factory
            method). The factory methods aren't necessary because <c>ChoiceFormat</c>
            doesn't require any complex setup for a given locale. In fact,
            <c>ChoiceFormat</c> doesn't implement any locale specific behavior.</para>
      <para>When creating a <c>ChoiceFormat</c>, you must specify an array of formats
            and an array of limits. The length of these arrays must be the same.
            For example,
            &lt;ul&gt;
            &lt;li&gt;
                &lt;em&gt;limits&lt;/em&gt; = {1,2,3,4,5,6,7}&lt;br&gt;
                &lt;em&gt;formats&lt;/em&gt; = {"Sun","Mon","Tue","Wed","Thur","Fri","Sat"}&lt;li&gt;
                &lt;em&gt;limits&lt;/em&gt; = {0, 1, ChoiceFormat.nextDouble(1)}&lt;br&gt;
                &lt;em&gt;formats&lt;/em&gt; = {"no files", "one file", "many files"}&lt;br&gt;
                (<c>nextDouble</c> can be used to get the next higher double, to
                make the half-open interval.)
            &lt;/ul&gt;</para>
      <para>Here is a simple example that shows formatting and parsing:
            &lt;blockquote&gt;</para>
      <code lang="text/java">{@code
            double[] limits = {1,2,3,4,5,6,7};
            String[] dayOfWeekNames = {"Sun","Mon","Tue","Wed","Thur","Fri","Sat"};
            ChoiceFormat form = new ChoiceFormat(limits, dayOfWeekNames);
            ParsePosition status = new ParsePosition(0);
            for (double i = 0.0; i &lt;= 8.0; ++i) {
                status.setIndex(0);
                System.out.println(i + " -&gt; " + form.format(i) + " -&gt; "
                                         + form.parse(form.format(i),status));
            }
            }</code>
      <para>&lt;/blockquote&gt;
            Here is a more complex example, with a pattern format:
            &lt;blockquote&gt;</para>
      <code lang="text/java">{@code
            double[] filelimits = {0,1,2};
            String[] filepart = {"are no files","is one file","are {2} files"};
            ChoiceFormat fileform = new ChoiceFormat(filelimits, filepart);
            Format[] testFormats = {fileform, null, NumberFormat.getInstance()};
            MessageFormat pattform = new MessageFormat("There {0} on {1}");
            pattform.setFormats(testFormats);
            Object[] testArgs = {null, "ADisk", null};
            for (int i = 0; i &lt; 4; ++i) {
                testArgs[0] = new Integer(i);
                testArgs[2] = testArgs[0];
                System.out.println(pattform.format(testArgs));
            }
            }</code>
      <para>&lt;/blockquote&gt;</para>
      <para>Specifying a pattern for ChoiceFormat objects is fairly straightforward.
            For example:
            &lt;blockquote&gt;</para>
      <code lang="text/java">{@code
            ChoiceFormat fmt = new ChoiceFormat(
                 "-1#is negative| 0#is zero or fraction | 1#is one |1.0&lt;is 1+ |2#is two |2&lt;is more than 2.");
            System.out.println("Formatter Pattern : " + fmt.toPattern());
            
            System.out.println("Format with -INF : " + fmt.format(Double.NEGATIVE_INFINITY));
            System.out.println("Format with -1.0 : " + fmt.format(-1.0));
            System.out.println("Format with 0 : " + fmt.format(0));
            System.out.println("Format with 0.9 : " + fmt.format(0.9));
            System.out.println("Format with 1.0 : " + fmt.format(1));
            System.out.println("Format with 1.5 : " + fmt.format(1.5));
            System.out.println("Format with 2 : " + fmt.format(2));
            System.out.println("Format with 2.1 : " + fmt.format(2.1));
            System.out.println("Format with NaN : " + fmt.format(Double.NaN));
            System.out.println("Format with +INF : " + fmt.format(Double.POSITIVE_INFINITY));
            }</code>
      <para>&lt;/blockquote&gt;
            And the output result would be like the following:
            &lt;blockquote&gt;</para>
      <code lang="text/java">{@code
            Format with -INF : is negative
            Format with -1.0 : is negative
            Format with 0 : is zero or fraction
            Format with 0.9 : is zero or fraction
            Format with 1.0 : is one
            Format with 1.5 : is 1+
            Format with 2 : is two
            Format with 2.1 : is more than 2.
            Format with NaN : is negative
            Format with +INF : is more than 2.
            }</code>
      <para>&lt;/blockquote&gt;
            
            &lt;h2&gt;"synchronization"&gt;Synchronization&lt;/h2&gt;</para>
      <para>Choice formats are not synchronized.
            It is recommended to create separate format instances for each thread.
            If multiple threads access a format concurrently, it must be synchronized
            externally.</para>
      <para>Added in 1.1.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/text/ChoiceFormat" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChoiceFormat (string? newPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string newPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Java.Text.ChoiceFormat : string -&gt; Java.Text.ChoiceFormat" Usage="new Java.Text.ChoiceFormat newPattern" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="newPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newPattern">the new pattern string</param>
        <summary>Constructs with limits and corresponding formats based on the pattern.</summary>
        <remarks>
          <para>Constructs with limits and corresponding formats based on the pattern.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/ChoiceFormat#ChoiceFormat(java.lang.String)" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat.ChoiceFormat(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if an error occurs while parsing the pattern.
</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChoiceFormat (double[]? limits, string[]? formats);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(float64[] limits, string[] formats) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.#ctor(System.Double[],System.String[])" />
      <MemberSignature Language="F#" Value="new Java.Text.ChoiceFormat : double[] * string[] -&gt; Java.Text.ChoiceFormat" Usage="new Java.Text.ChoiceFormat (limits, formats)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "([D[Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "([D[Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="limits" Type="System.Double[]" />
        <Parameter Name="formats" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="limits">limits in ascending order</param>
        <param name="formats">corresponding format strings</param>
        <summary>Constructs with the limits and the corresponding formats.</summary>
        <remarks>
          <para>Constructs with the limits and the corresponding formats.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/ChoiceFormat#ChoiceFormat(double[],%20java.lang.String[])" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat.ChoiceFormat(double[], java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChoiceFormat (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Text.ChoiceFormat : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Text.ChoiceFormat" Usage="new Java.Text.ChoiceFormat (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyPattern">
      <MemberSignature Language="C#" Value="public virtual void ApplyPattern (string? newPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyPattern(string newPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.ApplyPattern(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ApplyPattern : string -&gt; unit&#xA;override this.ApplyPattern : string -&gt; unit" Usage="choiceFormat.ApplyPattern newPattern" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("applyPattern", "(Ljava/lang/String;)V", "GetApplyPattern_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("applyPattern", "(Ljava/lang/String;)V", "GetApplyPattern_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newPattern">See the class description.</param>
        <summary>Sets the pattern.</summary>
        <remarks>
          <para>Sets the pattern.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/ChoiceFormat#applyPattern(java.lang.String)" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat.applyPattern(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if an error occurs while parsing the pattern.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public override Java.Lang.StringBuffer? Format (double number, Java.Lang.StringBuffer? toAppendTo, Java.Text.FieldPosition? status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.StringBuffer Format(float64 number, class Java.Lang.StringBuffer toAppendTo, class Java.Text.FieldPosition status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.Format(System.Double,Java.Lang.StringBuffer,Java.Text.FieldPosition)" />
      <MemberSignature Language="F#" Value="override this.Format : double * Java.Lang.StringBuffer * Java.Text.FieldPosition -&gt; Java.Lang.StringBuffer" Usage="choiceFormat.Format (number, toAppendTo, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_DLjava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_DLjava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Double" />
        <Parameter Name="toAppendTo" Type="Java.Lang.StringBuffer" />
        <Parameter Name="status" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="number">number to be formatted and substituted.</param>
        <param name="toAppendTo">where text is appended.</param>
        <param name="status">ignore no useful status is returned.</param>
        <summary>Returns pattern with formatted double.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns pattern with formatted double.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/ChoiceFormat#format(double,%20java.lang.StringBuffer,%20java.text.FieldPosition)" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat.format(double, java.lang.StringBuffer, java.text.FieldPosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public override Java.Lang.StringBuffer? Format (long number, Java.Lang.StringBuffer? toAppendTo, Java.Text.FieldPosition? status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.StringBuffer Format(int64 number, class Java.Lang.StringBuffer toAppendTo, class Java.Text.FieldPosition status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.Format(System.Int64,Java.Lang.StringBuffer,Java.Text.FieldPosition)" />
      <MemberSignature Language="F#" Value="override this.Format : int64 * Java.Lang.StringBuffer * Java.Text.FieldPosition -&gt; Java.Lang.StringBuffer" Usage="choiceFormat.Format (number, toAppendTo, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_JLjava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_JLjava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Int64" />
        <Parameter Name="toAppendTo" Type="Java.Lang.StringBuffer" />
        <Parameter Name="status" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="number">number to be formatted and substituted.</param>
        <param name="toAppendTo">where text is appended.</param>
        <param name="status">ignore no useful status is returned.</param>
        <summary>Specialization of format.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Specialization of format. This method really calls
            <c>format(double, StringBuffer, FieldPosition)</c>
            thus the range of longs that are supported is only equal to
            the range that can be stored by double. This will never be
            a practical limitation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/ChoiceFormat#format(long,%20java.lang.StringBuffer,%20java.text.FieldPosition)" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat.format(long, java.lang.StringBuffer, java.text.FieldPosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object[]? GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.GetFormats" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; Java.Lang.Object[]&#xA;override this.GetFormats : unit -&gt; Java.Lang.Object[]" Usage="choiceFormat.GetFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFormats", "()[Ljava/lang/Object;", "GetGetFormatsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFormats", "()[Ljava/lang/Object;", "GetGetFormatsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the strings associated with the ranges of this <c>ChoiceFormat</c>.</summary>
        <returns>a copy of the <c>String[]</c> array supplied to the constructor or the most recent
            call to <c>#setChoices(double[], String[])</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/ChoiceFormat#getFormats()" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat.getFormats()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLimits">
      <MemberSignature Language="C#" Value="public virtual double[]? GetLimits ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float64[] GetLimits() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.GetLimits" />
      <MemberSignature Language="F#" Value="abstract member GetLimits : unit -&gt; double[]&#xA;override this.GetLimits : unit -&gt; double[]" Usage="choiceFormat.GetLimits " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLimits", "()[D", "GetGetLimitsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLimits", "()[D", "GetGetLimitsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the limits of this <c>ChoiceFormat</c>.</summary>
        <returns>a copy of the <c>double[]</c> array supplied to the constructor or the most recent
            call to <c>#setChoices(double[], String[])</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/ChoiceFormat#getLimits()" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat.getLimits()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Text.ChoiceFormat.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Text.ChoiceFormat.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NextDouble">
      <MemberSignature Language="C#" Value="public static double NextDouble (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 NextDouble(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.NextDouble(System.Double)" />
      <MemberSignature Language="F#" Value="static member NextDouble : double -&gt; double" Usage="Java.Text.ChoiceFormat.NextDouble d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nextDouble", "(D)D", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nextDouble", "(D)D", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">the reference value</param>
        <summary>Finds the least double greater than <c>d</c>.</summary>
        <returns>the least double value greather than <c>d</c></returns>
        <remarks>
          <para>Finds the least double greater than <c>d</c>.
            If <c>NaN</c>, returns same value.</para>
          <para>Used to make half-open intervals.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/ChoiceFormat#nextDouble(double)" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat.nextDouble(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextDouble">
      <MemberSignature Language="C#" Value="public static double NextDouble (double d, bool positive);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 NextDouble(float64 d, bool positive) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.NextDouble(System.Double,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member NextDouble : double * bool -&gt; double" Usage="Java.Text.ChoiceFormat.NextDouble (d, positive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nextDouble", "(DZ)D", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nextDouble", "(DZ)D", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
        <Parameter Name="positive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="d">the reference value</param>
        <param name="positive">
          <c>true</c> if the least double is desired;
                            <c>false</c> otherwise</param>
        <summary>Finds the least double greater than <c>d</c> (if <c>positive</c> is
            <c>true</c>), or the greatest double less than <c>d</c> (if
            <c>positive</c> is <c>false</c>).</summary>
        <returns>the least or greater double value</returns>
        <remarks>
          <para>Finds the least double greater than <c>d</c> (if <c>positive</c> is
            <c>true</c>), or the greatest double less than <c>d</c> (if
            <c>positive</c> is <c>false</c>).
            If <c>NaN</c>, returns same value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/ChoiceFormat#nextDouble(double,%20boolean)" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat.nextDouble(double, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public override Java.Lang.Number? Parse (string? text, Java.Text.ParsePosition? status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Number Parse(string text, class Java.Text.ParsePosition status) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.Parse(System.String,Java.Text.ParsePosition)" />
      <MemberSignature Language="F#" Value="override this.Parse : string * Java.Text.ParsePosition -&gt; Java.Lang.Number" Usage="choiceFormat.Parse (text, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;", "GetParse_Ljava_lang_String_Ljava_text_ParsePosition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;", "GetParse_Ljava_lang_String_Ljava_text_ParsePosition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Number</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="status" Type="Java.Text.ParsePosition" />
      </Parameters>
      <Docs>
        <param name="text">the source text.</param>
        <param name="status">an input-output parameter.  On input, the
            status.index field indicates the first character of the
            source text that should be parsed.  On exit, if no error
            occurred, status.index is set to the first unparsed character
            in the source text.  On exit, if an error did occur,
            status.index is unchanged and status.errorIndex is set to the
            first index of the character that caused the parse to fail.</param>
        <summary>Parses a Number from the input text.</summary>
        <returns>A Number representing the value of the number parsed.</returns>
        <remarks>
          <para>Parses a Number from the input text.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/ChoiceFormat#parse(java.lang.String,%20java.text.ParsePosition)" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat.parse(java.lang.String, java.text.ParsePosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PreviousDouble">
      <MemberSignature Language="C#" Value="public static double PreviousDouble (double d);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 PreviousDouble(float64 d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.PreviousDouble(System.Double)" />
      <MemberSignature Language="F#" Value="static member PreviousDouble : double -&gt; double" Usage="Java.Text.ChoiceFormat.PreviousDouble d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("previousDouble", "(D)D", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("previousDouble", "(D)D", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="d">the reference value</param>
        <summary>Finds the greatest double less than <c>d</c>.</summary>
        <returns>the greatest double value less than <c>d</c></returns>
        <remarks>
          <para>Finds the greatest double less than <c>d</c>.
            If <c>NaN</c>, returns same value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/ChoiceFormat#previousDouble(double)" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat.previousDouble(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetChoices">
      <MemberSignature Language="C#" Value="public virtual void SetChoices (double[]? limits, string[]? formats);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetChoices(float64[] limits, string[] formats) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.SetChoices(System.Double[],System.String[])" />
      <MemberSignature Language="F#" Value="abstract member SetChoices : double[] * string[] -&gt; unit&#xA;override this.SetChoices : double[] * string[] -&gt; unit" Usage="choiceFormat.SetChoices (limits, formats)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setChoices", "([D[Ljava/lang/String;)V", "GetSetChoices_arrayDarrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setChoices", "([D[Ljava/lang/String;)V", "GetSetChoices_arrayDarrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="limits" Type="System.Double[]" />
        <Parameter Name="formats" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="limits">contains the top value that you want
            parsed with that format, and should be in ascending sorted order. When
            formatting X, the choice will be the i, where
            limit[i] &amp;le; X &lt; limit[i+1].
            If the limit array is not in ascending order, the results of formatting
            will be incorrect.</param>
        <param name="formats">are the formats you want to use for each limit.
            They can be either Format objects or Strings.
            When formatting with object Y,
            if the object is a NumberFormat, then ((NumberFormat) Y).format(X)
            is called. Otherwise Y.toString() is called.</param>
        <summary>Set the choices to be used in formatting.</summary>
        <remarks>
          <para>Set the choices to be used in formatting.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/ChoiceFormat#setChoices(double[],%20java.lang.String[])" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat.setChoices(double[], java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Text.ChoiceFormat.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Text.ChoiceFormat.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Text.ChoiceFormat.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Text.ChoiceFormat.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToPattern">
      <MemberSignature Language="C#" Value="public virtual string? ToPattern ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToPattern() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.ChoiceFormat.ToPattern" />
      <MemberSignature Language="F#" Value="abstract member ToPattern : unit -&gt; string&#xA;override this.ToPattern : unit -&gt; string" Usage="choiceFormat.ToPattern " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toPattern", "()Ljava/lang/String;", "GetToPatternHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toPattern", "()Ljava/lang/String;", "GetToPatternHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the pattern.</summary>
        <returns>the pattern string</returns>
        <remarks>
          <para>Gets the pattern.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/ChoiceFormat#toPattern()" title="Reference documentation">Java documentation for <code>java.text.ChoiceFormat.toPattern()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
