<Type Name="NumberFormat" FullName="Java.Text.NumberFormat">
  <TypeSignature Language="C#" Value="public abstract class NumberFormat : Java.Text._Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit NumberFormat extends Java.Text._Format" />
  <TypeSignature Language="DocId" Value="T:Java.Text.NumberFormat" />
  <TypeSignature Language="F#" Value="type NumberFormat = class&#xA;    inherit _Format" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Text._Format</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/text/NumberFormat", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/text/NumberFormat", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>
      <c>NumberFormat</c> is the abstract base class for all number
            formats.</summary>
    <remarks>
      <para>
        <c>NumberFormat</c> is the abstract base class for all number
            formats. This class provides the interface for formatting and parsing
            numbers. <c>NumberFormat</c> also provides methods for determining
            which locales have number formats, and what their names are.</para>
      <para>
        <c>NumberFormat</c> helps you to format and parse numbers for any locale.
            Your code can be completely independent of the locale conventions for
            decimal points, thousands-separators, or even the particular decimal
            digits used, or whether the number format is even decimal.</para>
      <para>To format a number for the current Locale, use one of the factory
            class methods:
            &lt;blockquote&gt;</para>
      <code lang="text/java">{@code
            myString = NumberFormat.getInstance().format(myNumber);
            }</code>
      <para>&lt;/blockquote&gt;
            If you are formatting multiple numbers, it is
            more efficient to get the format and use it multiple times so that
            the system doesn't have to fetch the information about the local
            language and country conventions multiple times.
            &lt;blockquote&gt;</para>
      <code lang="text/java">{@code
            NumberFormat nf = NumberFormat.getInstance();
            for (int i = 0; i &lt; myNumber.length; ++i) {
                output.println(nf.format(myNumber[i]) + "; ");
            }
            }</code>
      <para>&lt;/blockquote&gt;
            To format a number for a different Locale, specify it in the
            call to <c>getInstance</c>.
            &lt;blockquote&gt;</para>
      <code lang="text/java">{@code
            NumberFormat nf = NumberFormat.getInstance(Locale.FRENCH);
            }</code>
      <para>&lt;/blockquote&gt;</para>
      <para>If the locale contains "nu" (numbers)
            Unicode extensions,
            the decimal digits, and/or the country used for formatting are overridden.</para>
      <para>You can also use a <c>NumberFormat</c> to parse numbers:
            &lt;blockquote&gt;</para>
      <code lang="text/java">{@code
            myNumber = nf.parse(myString);
            }</code>
      <para>&lt;/blockquote&gt;
            Use <c>getInstance</c> or <c>getNumberInstance</c> to get the
            normal number format. Use <c>getIntegerInstance</c> to get an
            integer number format. Use <c>getCurrencyInstance</c> to get the
            currency number format. Use <c>getCompactNumberInstance</c> to get the
            compact number format to format a number in shorter form. For example,
            <c>2000</c> can be formatted as <c>"2K"</c> in
            <c>java.util.Locale#US US locale</c>. Use <c>getPercentInstance</c>
            to get a format for displaying percentages. With this format, a fraction
            like 0.53 is displayed as 53%.</para>
      <para>You can also control the display of numbers with such methods as
            <c>setMinimumFractionDigits</c>.
            If you want even more control over the format or parsing,
            or want to give your users more control,
            you can try casting the <c>NumberFormat</c> you get from the factory methods
            to a <c>DecimalFormat</c> or <c>CompactNumberFormat</c> depending on
            the factory method used. This will work for the vast majority of locales;
            just remember to put it in a <c>try</c> block in case you encounter
            an unusual one.</para>
      <para>NumberFormat and DecimalFormat are designed such that some controls
            work for formatting and others work for parsing.  The following is
            the detailed description for each these control methods,</para>
      <para>setParseIntegerOnly : only affects parsing, e.g.
            if true,  "3456.78" &amp;rarr; 3456 (and leaves the parse position just after index 6)
            if false, "3456.78" &amp;rarr; 3456.78 (and leaves the parse position just after index 8)
            This is independent of formatting.  If you want to not show a decimal point
            where there might be no digits after the decimal point, use
            setDecimalSeparatorAlwaysShown.</para>
      <para>setDecimalSeparatorAlwaysShown : only affects formatting, and only where
            there might be no digits after the decimal point, such as with a pattern
            like "#,##0.##", e.g.,
            if true,  3456.00 &amp;rarr; "3,456."
            if false, 3456.00 &amp;rarr; "3456"
            This is independent of parsing.  If you want parsing to stop at the decimal
            point, use setParseIntegerOnly.</para>
      <para>You can also use forms of the <c>parse</c> and <c>format</c>
            methods with <c>ParsePosition</c> and <c>FieldPosition</c> to
            allow you to:
            &lt;ul&gt;
            &lt;li&gt; progressively parse through pieces of a string
            &lt;li&gt; align the decimal point and other areas
            &lt;/ul&gt;
            For example, you can align numbers in two ways:
            &lt;ol&gt;
            &lt;li&gt; If you are using a monospaced font with spacing for alignment,
                 you can pass the <c>FieldPosition</c> in your format call, with
                 <c>field</c> = <c>INTEGER_FIELD</c>. On output,
                 <c>getEndIndex</c> will be set to the offset between the
                 last character of the integer and the decimal. Add
                 (desiredSpaceCount - getEndIndex) spaces at the front of the string.
            
            &lt;li&gt; If you are using proportional fonts,
                 instead of padding with spaces, measure the width
                 of the string in pixels from the start to <c>getEndIndex</c>.
                 Then move the pen by
                 (desiredPixelWidth - widthToAlignmentPoint) before drawing the text.
                 It also works where there is no decimal, but possibly additional
                 characters at the end, e.g., with parentheses in negative
                 numbers: "(12)" for -12.
            &lt;/ol&gt;
            
            &lt;h2&gt;"synchronization"&gt;Synchronization&lt;/h2&gt;</para>
      <para>Number formats are generally not synchronized.
            It is recommended to create separate format instances for each thread.
            If multiple threads access a format concurrently, it must be synchronized
            externally.</para>
      <para>Added in 1.1.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/text/NumberFormat" title="Reference documentation">Java documentation for <code>java.text.NumberFormat</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NumberFormat ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Sole constructor.</summary>
        <remarks>
          <para>Sole constructor.  (For invocation by subclass constructors, typically
            implicit.)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#NumberFormat()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.NumberFormat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected NumberFormat (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Text.NumberFormat : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Text.NumberFormat" Usage="new Java.Text.NumberFormat (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Currency">
      <MemberSignature Language="C#" Value="public virtual Java.Util.Currency? Currency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Util.Currency Currency" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.Currency" />
      <MemberSignature Language="F#" Value="member this.Currency : Java.Util.Currency with get, set" Usage="Java.Text.NumberFormat.Currency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrency", "()Ljava/util/Currency;", "GetGetCurrencyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrency", "()Ljava/util/Currency;", "GetGetCurrencyHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setCurrency", "(Ljava/util/Currency;)V", "GetSetCurrency_Ljava_util_Currency_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setCurrency", "(Ljava/util/Currency;)V", "GetSetCurrency_Ljava_util_Currency_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Currency</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="currency">the new currency to be used by this number format</param>
        <summary>Gets the currency used by this number format when formatting
            currency values. -or- Sets the currency used by this number format when formatting
            currency values.</summary>
        <value>the currency used by this number format, or <c>null</c></value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the currency used by this number format when formatting
            currency values. The initial value is derived in a locale dependent
            way. The returned value may be null if no valid
            currency could be determined and no currency has been set using
            <c>#setCurrency(java.util.Currency) setCurrency</c>.</para>
          <para>The default implementation throws
            <c>UnsupportedOperationException</c>.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getCurrency()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getCurrency()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the currency used by this number format when formatting
            currency values. This does not update the minimum or maximum
            number of fraction digits used by the number format.</para>
          <para>The default implementation throws
            <c>UnsupportedOperationException</c>.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#setCurrency(java.util.Currency)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.setCurrency(java.util.Currency)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
      </Docs>
    </Member>
    <Member MemberName="CurrencyInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat CurrencyInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.NumberFormat CurrencyInstance" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.CurrencyInstance" />
      <MemberSignature Language="F#" Value="static member CurrencyInstance : Java.Text.NumberFormat" Usage="Java.Text.NumberFormat.CurrencyInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrencyInstance", "()Ljava/text/NumberFormat;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrencyInstance", "()Ljava/text/NumberFormat;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a currency format for the current default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale.</summary>
        <value>the <c>NumberFormat</c> instance for currency formatting</value>
        <remarks>
          <para>Returns a currency format for the current default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale.</para>
          <para>This is equivalent to calling
            <c>#getCurrencyInstance(Locale)
                getCurrencyInstance(Locale.getDefault(Locale.Category.FORMAT))</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getCurrencyInstance()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getCurrencyInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format (double number);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Format(float64 number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.Format(System.Double)" />
      <MemberSignature Language="F#" Value="override this.Format : double -&gt; string" Usage="numberFormat.Format number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(D)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(D)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="number">the double number to format</param>
        <summary>Specialization of format.</summary>
        <returns>the formatted String</returns>
        <remarks>
          <para>Specialization of format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#format(double)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.format(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public string Format (long number);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Format(int64 number) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.Format(System.Int64)" />
      <MemberSignature Language="F#" Value="override this.Format : int64 -&gt; string" Usage="numberFormat.Format number" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(J)Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(J)Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="number">the long number to format</param>
        <summary>Specialization of format.</summary>
        <returns>the formatted String</returns>
        <remarks>
          <para>Specialization of format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#format(long)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.format(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public override Java.Lang.StringBuffer Format (Java.Lang.Object number, Java.Lang.StringBuffer toAppendTo, Java.Text.FieldPosition pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.StringBuffer Format(class Java.Lang.Object number, class Java.Lang.StringBuffer toAppendTo, class Java.Text.FieldPosition pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.Format(Java.Lang.Object,Java.Lang.StringBuffer,Java.Text.FieldPosition)" />
      <MemberSignature Language="F#" Value="override this.Format : Java.Lang.Object * Java.Lang.StringBuffer * Java.Text.FieldPosition -&gt; Java.Lang.StringBuffer" Usage="numberFormat.Format (number, toAppendTo, pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_Ljava_lang_Object_Ljava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(Ljava/lang/Object;Ljava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_Ljava_lang_Object_Ljava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="Java.Lang.Object" />
        <Parameter Name="toAppendTo" Type="Java.Lang.StringBuffer" />
        <Parameter Name="pos" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="number">the number to format</param>
        <param name="toAppendTo">the <c>StringBuffer</c> to which the formatted
                              text is to be appended</param>
        <param name="pos">keeps track on the position of the field within the
                              returned string. For example, for formatting a number
                              <c>1234567.89</c> in <c>Locale.US</c> locale,
                              if the given <c>fieldPosition</c> is
                              <c>NumberFormat#INTEGER_FIELD</c>, the begin index
                              and end index of <c>fieldPosition</c> will be set
                              to 0 and 9, respectively for the output string
                              <c>1,234,567.89</c>.</param>
        <summary>Formats a number and appends the resulting text to the given string
            buffer.</summary>
        <returns>the value passed in as <c>toAppendTo</c></returns>
        <remarks>
          <para>Formats a number and appends the resulting text to the given string
            buffer.
            The number can be of any subclass of <c>java.lang.Number</c>.</para>
          <para>This implementation extracts the number's value using
            <c>java.lang.Number#longValue()</c> for all integral type values that
            can be converted to <c>long</c> without loss of information,
            including <c>BigInteger</c> values with a
            <c>java.math.BigInteger#bitLength() bit length</c> of less than 64,
            and <c>java.lang.Number#doubleValue()</c> for all other types. It
            then calls
            <c>#format(long,java.lang.StringBuffer,java.text.FieldPosition)</c>
            or <c>#format(double,java.lang.StringBuffer,java.text.FieldPosition)</c>.
            This may result in loss of magnitude information and precision for
            <c>BigInteger</c> and <c>BigDecimal</c> values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#format(java.lang.Object,%20java.lang.StringBuffer,%20java.text.FieldPosition)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.format(java.lang.Object, java.lang.StringBuffer, java.text.FieldPosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>object</c> is not an instance of <c>Number</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.StringBuffer Format (double number, Java.Lang.StringBuffer toAppendTo, Java.Text.FieldPosition pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.StringBuffer Format(float64 number, class Java.Lang.StringBuffer toAppendTo, class Java.Text.FieldPosition pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.Format(System.Double,Java.Lang.StringBuffer,Java.Text.FieldPosition)" />
      <MemberSignature Language="F#" Value="override this.Format : double * Java.Lang.StringBuffer * Java.Text.FieldPosition -&gt; Java.Lang.StringBuffer" Usage="numberFormat.Format (number, toAppendTo, pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_DLjava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(DLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_DLjava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Double" />
        <Parameter Name="toAppendTo" Type="Java.Lang.StringBuffer" />
        <Parameter Name="pos" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="number">the double number to format</param>
        <param name="toAppendTo">the StringBuffer to which the formatted text is to be
                              appended</param>
        <param name="pos">keeps track on the position of the field within the
                              returned string. For example, for formatting a number
                              <c>1234567.89</c> in <c>Locale.US</c> locale,
                              if the given <c>fieldPosition</c> is
                              <c>NumberFormat#INTEGER_FIELD</c>, the begin index
                              and end index of <c>fieldPosition</c> will be set
                              to 0 and 9, respectively for the output string
                              <c>1,234,567.89</c>.</param>
        <summary>Specialization of format.</summary>
        <returns>the formatted StringBuffer</returns>
        <remarks>
          <para>Specialization of format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#format(double,%20java.lang.StringBuffer,%20java.text.FieldPosition)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.format(double, java.lang.StringBuffer, java.text.FieldPosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.StringBuffer Format (long number, Java.Lang.StringBuffer toAppendTo, Java.Text.FieldPosition pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.StringBuffer Format(int64 number, class Java.Lang.StringBuffer toAppendTo, class Java.Text.FieldPosition pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.Format(System.Int64,Java.Lang.StringBuffer,Java.Text.FieldPosition)" />
      <MemberSignature Language="F#" Value="override this.Format : int64 * Java.Lang.StringBuffer * Java.Text.FieldPosition -&gt; Java.Lang.StringBuffer" Usage="numberFormat.Format (number, toAppendTo, pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("format", "(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_JLjava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("format", "(JLjava/lang/StringBuffer;Ljava/text/FieldPosition;)Ljava/lang/StringBuffer;", "GetFormat_JLjava_lang_StringBuffer_Ljava_text_FieldPosition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.StringBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="number" Type="System.Int64" />
        <Parameter Name="toAppendTo" Type="Java.Lang.StringBuffer" />
        <Parameter Name="pos" Type="Java.Text.FieldPosition" />
      </Parameters>
      <Docs>
        <param name="number">the long number to format</param>
        <param name="toAppendTo">the StringBuffer to which the formatted text is to be
                              appended</param>
        <param name="pos">keeps track on the position of the field within the
                              returned string. For example, for formatting a number
                              <c>123456789</c> in <c>Locale.US</c> locale,
                              if the given <c>fieldPosition</c> is
                              <c>NumberFormat#INTEGER_FIELD</c>, the begin index
                              and end index of <c>fieldPosition</c> will be set
                              to 0 and 11, respectively for the output string
                              <c>123,456,789</c>.</param>
        <summary>Specialization of format.</summary>
        <returns>the formatted StringBuffer</returns>
        <remarks>
          <para>Specialization of format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#format(long,%20java.lang.StringBuffer,%20java.text.FieldPosition)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.format(long, java.lang.StringBuffer, java.text.FieldPosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FractionField">
      <MemberSignature Language="C#" Value="public const int FractionField = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 FractionField = (1)" />
      <MemberSignature Language="DocId" Value="F:Java.Text.NumberFormat.FractionField" />
      <MemberSignature Language="F#" Value="val mutable FractionField : int" Usage="Java.Text.NumberFormat.FractionField" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FRACTION_FIELD")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FRACTION_FIELD")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Field constant used to construct a FieldPosition object.</summary>
        <remarks>
          <para>Field constant used to construct a FieldPosition object. Signifies that
            the position of the fraction part of a formatted number should be returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#FRACTION_FIELD" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.FRACTION_FIELD</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAvailableLocales">
      <MemberSignature Language="C#" Value="public static Java.Util.Locale[] GetAvailableLocales ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Locale[] GetAvailableLocales() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.GetAvailableLocales" />
      <MemberSignature Language="F#" Value="static member GetAvailableLocales : unit -&gt; Java.Util.Locale[]" Usage="Java.Text.NumberFormat.GetAvailableLocales " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAvailableLocales", "()[Ljava/util/Locale;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAvailableLocales", "()[Ljava/util/Locale;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Locale[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <param name="inLocale">the desired locale
            
                /*public* static NumberFormat getScientificInstance(Locale inLocale) {
                    return getInstance(inLocale, null, SCIENTIFICSTYLE);
                }</param>
        <summary>Returns a scientific format for the current default locale.</summary>
        <returns>An array of locales for which localized
                    <c>NumberFormat</c> instances are available.</returns>
        <remarks>
          <para>Returns a scientific format for the current default locale.
            
                /*public* static final NumberFormat getScientificInstance() {
                    return getInstance(Locale.getDefault(Locale.Category.FORMAT), null, SCIENTIFICSTYLE);
                }
            
                /**
            Returns a scientific format for the specified locale.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getAvailableLocales()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getAvailableLocales()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrencyInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat GetCurrencyInstance (Java.Util.Locale inLocale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.NumberFormat GetCurrencyInstance(class Java.Util.Locale inLocale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.GetCurrencyInstance(Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="static member GetCurrencyInstance : Java.Util.Locale -&gt; Java.Text.NumberFormat" Usage="Java.Text.NumberFormat.GetCurrencyInstance inLocale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCurrencyInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCurrencyInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inLocale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="inLocale">the desired locale</param>
        <summary>Returns a currency format for the specified locale.</summary>
        <returns>the <c>NumberFormat</c> instance for currency formatting</returns>
        <remarks>
          <para>Returns a currency format for the specified locale.</para>
          <para>If the specified locale contains the "<c>cf</c>" (
            <see href="https://www.unicode.org/reports/tr35/tr35.html#UnicodeCurrencyFormatIdentifier">
            currency format style</see>)
            Unicode extension,
            the returned currency format uses the style if it is available.
            Otherwise, the style uses the default "<c>standard</c>" currency format.
            For example, if the style designates "<c>account</c>", negative
            currency amounts use a pair of parentheses in some locales.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getCurrencyInstance(java.util.Locale)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getCurrencyInstance(java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat GetInstance (Java.Util.Locale inLocale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.NumberFormat GetInstance(class Java.Util.Locale inLocale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.GetInstance(Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="static member GetInstance : Java.Util.Locale -&gt; Java.Text.NumberFormat" Usage="Java.Text.NumberFormat.GetInstance inLocale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inLocale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="inLocale">the desired locale</param>
        <summary>Returns a general-purpose number format for the specified locale.</summary>
        <returns>the <c>NumberFormat</c> instance for general-purpose number
            formatting</returns>
        <remarks>
          <para>Returns a general-purpose number format for the specified locale.
            This is the same as calling
            <c>#getNumberInstance(java.util.Locale) getNumberInstance(inLocale)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getInstance(java.util.Locale)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getInstance(java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetIntegerInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat GetIntegerInstance (Java.Util.Locale inLocale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.NumberFormat GetIntegerInstance(class Java.Util.Locale inLocale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.GetIntegerInstance(Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="static member GetIntegerInstance : Java.Util.Locale -&gt; Java.Text.NumberFormat" Usage="Java.Text.NumberFormat.GetIntegerInstance inLocale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getIntegerInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getIntegerInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inLocale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="inLocale">the desired locale</param>
        <summary>Returns an integer number format for the specified locale.</summary>
        <returns>a number format for integer values</returns>
        <remarks>
          <para>Returns an integer number format for the specified locale. The
            returned number format is configured to round floating point numbers
            to the nearest integer using half-even rounding (see <c>java.math.RoundingMode#HALF_EVEN RoundingMode.HALF_EVEN</c>) for formatting,
            and to parse only the integer part of an input string (see <c>#isParseIntegerOnly isParseIntegerOnly</c>).</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getIntegerInstance(java.util.Locale)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getIntegerInstance(java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetNumberInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat GetNumberInstance (Java.Util.Locale inLocale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.NumberFormat GetNumberInstance(class Java.Util.Locale inLocale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.GetNumberInstance(Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="static member GetNumberInstance : Java.Util.Locale -&gt; Java.Text.NumberFormat" Usage="Java.Text.NumberFormat.GetNumberInstance inLocale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNumberInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNumberInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inLocale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="inLocale">the desired locale</param>
        <summary>Returns a general-purpose number format for the specified locale.</summary>
        <returns>the <c>NumberFormat</c> instance for general-purpose number
            formatting</returns>
        <remarks>
          <para>Returns a general-purpose number format for the specified locale.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getNumberInstance(java.util.Locale)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getNumberInstance(java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPercentInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat GetPercentInstance (Java.Util.Locale inLocale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Text.NumberFormat GetPercentInstance(class Java.Util.Locale inLocale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.GetPercentInstance(Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="static member GetPercentInstance : Java.Util.Locale -&gt; Java.Text.NumberFormat" Usage="Java.Text.NumberFormat.GetPercentInstance inLocale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPercentInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPercentInstance", "(Ljava/util/Locale;)Ljava/text/NumberFormat;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inLocale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="inLocale">the desired locale</param>
        <summary>Returns a percentage format for the specified locale.</summary>
        <returns>the <c>NumberFormat</c> instance for percentage formatting</returns>
        <remarks>
          <para>Returns a percentage format for the specified locale.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getPercentInstance(java.util.Locale)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getPercentInstance(java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GroupingUsed">
      <MemberSignature Language="C#" Value="public virtual bool GroupingUsed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GroupingUsed" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.GroupingUsed" />
      <MemberSignature Language="F#" Value="member this.GroupingUsed : bool with get, set" Usage="Java.Text.NumberFormat.GroupingUsed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isGroupingUsed", "()Z", "GetIsGroupingUsedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isGroupingUsed", "()Z", "GetIsGroupingUsedHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setGroupingUsed", "(Z)V", "GetSetGroupingUsed_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setGroupingUsed", "(Z)V", "GetSetGroupingUsed_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newValue">
          <c>true</c> if grouping is used;
                            <c>false</c> otherwise</param>
        <summary>Returns true if grouping is used in this format. -or- Set whether or not grouping will be used in this format.</summary>
        <value>
          <c>true</c> if grouping is used;
                    <c>false</c> otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns true if grouping is used in this format. For example, in the
            English locale, with grouping on, the number 1234567 might be formatted
            as "1,234,567". The grouping separator as well as the size of each group
            is locale dependent and is determined by sub-classes of NumberFormat.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#isGroupingUsed()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.isGroupingUsed()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Set whether or not grouping will be used in this format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#setGroupingUsed(boolean)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.setGroupingUsed(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.NumberFormat Instance" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.Instance" />
      <MemberSignature Language="F#" Value="static member Instance : Java.Text.NumberFormat" Usage="Java.Text.NumberFormat.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInstance", "()Ljava/text/NumberFormat;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInstance", "()Ljava/text/NumberFormat;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a general-purpose number format for the current default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale.</summary>
        <value>the <c>NumberFormat</c> instance for general-purpose number
            formatting</value>
        <remarks>
          <para>Returns a general-purpose number format for the current default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale.
            This is the same as calling
            <c>#getNumberInstance() getNumberInstance()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getInstance()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntegerField">
      <MemberSignature Language="C#" Value="public const int IntegerField = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 IntegerField = (0)" />
      <MemberSignature Language="DocId" Value="F:Java.Text.NumberFormat.IntegerField" />
      <MemberSignature Language="F#" Value="val mutable IntegerField : int" Usage="Java.Text.NumberFormat.IntegerField" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INTEGER_FIELD")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INTEGER_FIELD")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Field constant used to construct a FieldPosition object.</summary>
        <remarks>
          <para>Field constant used to construct a FieldPosition object. Signifies that
            the position of the integer part of a formatted number should be returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#INTEGER_FIELD" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.INTEGER_FIELD</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IntegerInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat IntegerInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.NumberFormat IntegerInstance" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.IntegerInstance" />
      <MemberSignature Language="F#" Value="static member IntegerInstance : Java.Text.NumberFormat" Usage="Java.Text.NumberFormat.IntegerInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getIntegerInstance", "()Ljava/text/NumberFormat;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getIntegerInstance", "()Ljava/text/NumberFormat;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an integer number format for the current default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale.</summary>
        <value>a number format for integer values</value>
        <remarks>
          <para>Returns an integer number format for the current default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale. The
            returned number format is configured to round floating point numbers
            to the nearest integer using half-even rounding (see <c>java.math.RoundingMode#HALF_EVEN RoundingMode.HALF_EVEN</c>) for formatting,
            and to parse only the integer part of an input string (see <c>#isParseIntegerOnly isParseIntegerOnly</c>).</para>
          <para>This is equivalent to calling
            <c>#getIntegerInstance(Locale)
                getIntegerInstance(Locale.getDefault(Locale.Category.FORMAT))</c>.</para>
          <para>Added in 1.4.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getIntegerInstance()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getIntegerInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Text.NumberFormat.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumFractionDigits">
      <MemberSignature Language="C#" Value="public virtual int MaximumFractionDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumFractionDigits" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.MaximumFractionDigits" />
      <MemberSignature Language="F#" Value="member this.MaximumFractionDigits : int with get, set" Usage="Java.Text.NumberFormat.MaximumFractionDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaximumFractionDigits", "()I", "GetGetMaximumFractionDigitsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaximumFractionDigits", "()I", "GetGetMaximumFractionDigitsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMaximumFractionDigits", "(I)V", "GetSetMaximumFractionDigits_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setMaximumFractionDigits", "(I)V", "GetSetMaximumFractionDigits_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newValue">the maximum number of fraction digits to be shown; if
            less than zero, then zero is used. The concrete subclass may enforce an
            upper limit to this value appropriate to the numeric type being formatted.</param>
        <summary>Returns the maximum number of digits allowed in the fraction portion of a
            number. -or- Sets the maximum number of digits allowed in the fraction portion of a
            number.</summary>
        <value>the maximum number of digits.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the maximum number of digits allowed in the fraction portion of a
            number.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getMaximumFractionDigits()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getMaximumFractionDigits()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the maximum number of digits allowed in the fraction portion of a
            number. maximumFractionDigits must be &amp;ge; minimumFractionDigits.  If the
            new value for maximumFractionDigits is less than the current value
            of minimumFractionDigits, then minimumFractionDigits will also be set to
            the new value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#setMaximumFractionDigits(int)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.setMaximumFractionDigits(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaximumIntegerDigits">
      <MemberSignature Language="C#" Value="public virtual int MaximumIntegerDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaximumIntegerDigits" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.MaximumIntegerDigits" />
      <MemberSignature Language="F#" Value="member this.MaximumIntegerDigits : int with get, set" Usage="Java.Text.NumberFormat.MaximumIntegerDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaximumIntegerDigits", "()I", "GetGetMaximumIntegerDigitsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaximumIntegerDigits", "()I", "GetGetMaximumIntegerDigitsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMaximumIntegerDigits", "(I)V", "GetSetMaximumIntegerDigits_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setMaximumIntegerDigits", "(I)V", "GetSetMaximumIntegerDigits_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newValue">the maximum number of integer digits to be shown; if
            less than zero, then zero is used. The concrete subclass may enforce an
            upper limit to this value appropriate to the numeric type being formatted.</param>
        <summary>Returns the maximum number of digits allowed in the integer portion of a
            number. -or- Sets the maximum number of digits allowed in the integer portion of a
            number.</summary>
        <value>the maximum number of digits</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the maximum number of digits allowed in the integer portion of a
            number.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getMaximumIntegerDigits()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getMaximumIntegerDigits()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the maximum number of digits allowed in the integer portion of a
            number. maximumIntegerDigits must be &amp;ge; minimumIntegerDigits.  If the
            new value for maximumIntegerDigits is less than the current value
            of minimumIntegerDigits, then minimumIntegerDigits will also be set to
            the new value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#setMaximumIntegerDigits(int)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.setMaximumIntegerDigits(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinimumFractionDigits">
      <MemberSignature Language="C#" Value="public virtual int MinimumFractionDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumFractionDigits" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.MinimumFractionDigits" />
      <MemberSignature Language="F#" Value="member this.MinimumFractionDigits : int with get, set" Usage="Java.Text.NumberFormat.MinimumFractionDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMinimumFractionDigits", "()I", "GetGetMinimumFractionDigitsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMinimumFractionDigits", "()I", "GetGetMinimumFractionDigitsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMinimumFractionDigits", "(I)V", "GetSetMinimumFractionDigits_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setMinimumFractionDigits", "(I)V", "GetSetMinimumFractionDigits_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newValue">the minimum number of fraction digits to be shown; if
            less than zero, then zero is used. The concrete subclass may enforce an
            upper limit to this value appropriate to the numeric type being formatted.</param>
        <summary>Returns the minimum number of digits allowed in the fraction portion of a
            number. -or- Sets the minimum number of digits allowed in the fraction portion of a
            number.</summary>
        <value>the minimum number of digits</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the minimum number of digits allowed in the fraction portion of a
            number.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getMinimumFractionDigits()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getMinimumFractionDigits()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the minimum number of digits allowed in the fraction portion of a
            number. minimumFractionDigits must be &amp;le; maximumFractionDigits.  If the
            new value for minimumFractionDigits exceeds the current value
            of maximumFractionDigits, then maximumFractionDigits will also be set to
            the new value</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#setMinimumFractionDigits(int)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.setMinimumFractionDigits(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MinimumIntegerDigits">
      <MemberSignature Language="C#" Value="public virtual int MinimumIntegerDigits { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumIntegerDigits" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.MinimumIntegerDigits" />
      <MemberSignature Language="F#" Value="member this.MinimumIntegerDigits : int with get, set" Usage="Java.Text.NumberFormat.MinimumIntegerDigits" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMinimumIntegerDigits", "()I", "GetGetMinimumIntegerDigitsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMinimumIntegerDigits", "()I", "GetGetMinimumIntegerDigitsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMinimumIntegerDigits", "(I)V", "GetSetMinimumIntegerDigits_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setMinimumIntegerDigits", "(I)V", "GetSetMinimumIntegerDigits_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="newValue">the minimum number of integer digits to be shown; if
            less than zero, then zero is used. The concrete subclass may enforce an
            upper limit to this value appropriate to the numeric type being formatted.</param>
        <summary>Returns the minimum number of digits allowed in the integer portion of a
            number. -or- Sets the minimum number of digits allowed in the integer portion of a
            number.</summary>
        <value>the minimum number of digits</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the minimum number of digits allowed in the integer portion of a
            number.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getMinimumIntegerDigits()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getMinimumIntegerDigits()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the minimum number of digits allowed in the integer portion of a
            number. minimumIntegerDigits must be &amp;le; maximumIntegerDigits.  If the
            new value for minimumIntegerDigits exceeds the current value
            of maximumIntegerDigits, then maximumIntegerDigits will also be set to
            the new value</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#setMinimumIntegerDigits(int)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.setMinimumIntegerDigits(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NumberInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat NumberInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.NumberFormat NumberInstance" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.NumberInstance" />
      <MemberSignature Language="F#" Value="static member NumberInstance : Java.Text.NumberFormat" Usage="Java.Text.NumberFormat.NumberInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNumberInstance", "()Ljava/text/NumberFormat;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNumberInstance", "()Ljava/text/NumberFormat;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a general-purpose number format for the current default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale.</summary>
        <value>the <c>NumberFormat</c> instance for general-purpose number
            formatting</value>
        <remarks>
          <para>Returns a general-purpose number format for the current default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale.</para>
          <para>This is equivalent to calling
            <c>#getNumberInstance(Locale)
                getNumberInstance(Locale.getDefault(Locale.Category.FORMAT))</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getNumberInstance()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getNumberInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Number? Parse (string source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Number Parse(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.Parse(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Parse : string -&gt; Java.Lang.Number&#xA;override this.Parse : string -&gt; Java.Lang.Number" Usage="numberFormat.Parse source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Ljava/lang/String;)Ljava/lang/Number;", "GetParse_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Ljava/lang/String;)Ljava/lang/Number;", "GetParse_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Number</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">A <c>String</c> whose beginning should be parsed.</param>
        <summary>Parses text from the beginning of the given string to produce a number.</summary>
        <returns>A <c>Number</c> parsed from the string.</returns>
        <remarks>
          <para>Parses text from the beginning of the given string to produce a number.
            The method may not use the entire text of the given string.</para>
          <para>See the <c>#parse(String, ParsePosition)</c> method for more information
            on number parsing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#parse(java.lang.String)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.parse(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Text.ParseException">if an error occurs during parsing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public abstract Java.Lang.Number? Parse (string source, Java.Text.ParsePosition parsePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Number Parse(string source, class Java.Text.ParsePosition parsePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.Parse(System.String,Java.Text.ParsePosition)" />
      <MemberSignature Language="F#" Value="abstract member Parse : string * Java.Text.ParsePosition -&gt; Java.Lang.Number" Usage="numberFormat.Parse (source, parsePosition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parse", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;", "GetParse_Ljava_lang_String_Ljava_text_ParsePosition_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parse", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Number;", "GetParse_Ljava_lang_String_Ljava_text_ParsePosition_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Number</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="parsePosition" Type="Java.Text.ParsePosition" />
      </Parameters>
      <Docs>
        <param name="source">the String to parse</param>
        <param name="parsePosition">the parse position</param>
        <summary>Returns a Long if possible (e.</summary>
        <returns>the parsed value</returns>
        <remarks>
          <para>Returns a Long if possible (e.g., within the range [Long.MIN_VALUE,
            Long.MAX_VALUE] and with no decimals), otherwise a Double.
            If IntegerOnly is set, will stop at a decimal
            point (or equivalent; e.g., for rational numbers "1 2/3", will stop
            after the 1).
            Does not throw an exception; if no object can be parsed, index is
            unchanged!</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#parse(java.lang.String,%20java.text.ParsePosition)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.parse(java.lang.String, java.text.ParsePosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParseIntegerOnly">
      <MemberSignature Language="C#" Value="public virtual bool ParseIntegerOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParseIntegerOnly" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.ParseIntegerOnly" />
      <MemberSignature Language="F#" Value="member this.ParseIntegerOnly : bool with get, set" Usage="Java.Text.NumberFormat.ParseIntegerOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isParseIntegerOnly", "()Z", "GetIsParseIntegerOnlyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isParseIntegerOnly", "()Z", "GetIsParseIntegerOnlyHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setParseIntegerOnly", "(Z)V", "GetSetParseIntegerOnly_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setParseIntegerOnly", "(Z)V", "GetSetParseIntegerOnly_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="value">
          <c>true</c> if numbers should be parsed as integers only;
                         <c>false</c> otherwise</param>
        <summary>Returns true if this format will parse numbers as integers only. -or- Sets whether or not numbers should be parsed as integers only.</summary>
        <value>
          <c>true</c> if numbers should be parsed as integers only;
                    <c>false</c> otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns true if this format will parse numbers as integers only.
            For example in the English locale, with ParseIntegerOnly true, the
            string "1234." would be parsed as the integer value 1234 and parsing
            would stop at the "." character.  Of course, the exact format accepted
            by the parse operation is locale dependent and determined by sub-classes
            of NumberFormat.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#isParseIntegerOnly()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.isParseIntegerOnly()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether or not numbers should be parsed as integers only.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#setParseIntegerOnly(boolean)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.setParseIntegerOnly(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ParseObject">
      <MemberSignature Language="C#" Value="public override sealed Java.Lang.Object? ParseObject (string source, Java.Text.ParsePosition pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Object ParseObject(string source, class Java.Text.ParsePosition pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.NumberFormat.ParseObject(System.String,Java.Text.ParsePosition)" />
      <MemberSignature Language="F#" Value="override this.ParseObject : string * Java.Text.ParsePosition -&gt; Java.Lang.Object" Usage="numberFormat.ParseObject (source, pos)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("parseObject", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("parseObject", "(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="pos" Type="Java.Text.ParsePosition" />
      </Parameters>
      <Docs>
        <param name="source">A <c>String</c>, part of which should be parsed.</param>
        <param name="pos">A <c>ParsePosition</c> object with index and error
                       index information as described above.</param>
        <summary>Parses text from a string to produce a <c>Number</c>.</summary>
        <returns>A <c>Number</c> parsed from the string. In case of
                    error, returns null.</returns>
        <remarks>
          <para>Parses text from a string to produce a <c>Number</c>.</para>
          <para>The method attempts to parse text starting at the index given by
            <c>pos</c>.
            If parsing succeeds, then the index of <c>pos</c> is updated
            to the index after the last character used (parsing does not necessarily
            use all characters up to the end of the string), and the parsed
            number is returned. The updated <c>pos</c> can be used to
            indicate the starting point for the next call to this method.
            If an error occurs, then the index of <c>pos</c> is not
            changed, the error index of <c>pos</c> is set to the index of
            the character where the error occurred, and null is returned.</para>
          <para>See the <c>#parse(String, ParsePosition)</c> method for more information
            on number parsing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#parseObject(java.lang.String,%20java.text.ParsePosition)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.parseObject(java.lang.String, java.text.ParsePosition)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PercentInstance">
      <MemberSignature Language="C#" Value="public static Java.Text.NumberFormat PercentInstance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Text.NumberFormat PercentInstance" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.PercentInstance" />
      <MemberSignature Language="F#" Value="static member PercentInstance : Java.Text.NumberFormat" Usage="Java.Text.NumberFormat.PercentInstance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPercentInstance", "()Ljava/text/NumberFormat;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPercentInstance", "()Ljava/text/NumberFormat;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.NumberFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a percentage format for the current default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale.</summary>
        <value>the <c>NumberFormat</c> instance for percentage formatting</value>
        <remarks>
          <para>Returns a percentage format for the current default
            <c>java.util.Locale.Category#FORMAT FORMAT</c> locale.</para>
          <para>This is equivalent to calling
            <c>#getPercentInstance(Locale)
                getPercentInstance(Locale.getDefault(Locale.Category.FORMAT))</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getPercentInstance()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getPercentInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RoundingMode">
      <MemberSignature Language="C#" Value="public virtual Java.Math.RoundingMode RoundingMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Math.RoundingMode RoundingMode" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.RoundingMode" />
      <MemberSignature Language="F#" Value="member this.RoundingMode : Java.Math.RoundingMode with get, set" Usage="Java.Text.NumberFormat.RoundingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRoundingMode", "()Ljava/math/RoundingMode;", "GetGetRoundingModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRoundingMode", "()Ljava/math/RoundingMode;", "GetGetRoundingModeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setRoundingMode", "(Ljava/math/RoundingMode;)V", "GetSetRoundingMode_Ljava_math_RoundingMode_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setRoundingMode", "(Ljava/math/RoundingMode;)V", "GetSetRoundingMode_Ljava_math_RoundingMode_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Math.RoundingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="roundingMode">The <c>RoundingMode</c> to be used</param>
        <summary>Gets the <c>java.math.RoundingMode</c> used in this NumberFormat. -or- Sets the <c>java.math.RoundingMode</c> used in this NumberFormat.</summary>
        <value>The <c>RoundingMode</c> used for this NumberFormat.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the <c>java.math.RoundingMode</c> used in this NumberFormat.
            The default implementation of this method in NumberFormat
            always throws <c>java.lang.UnsupportedOperationException</c>.
            Subclasses which handle different rounding modes should override
            this method.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#getRoundingMode()" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.getRoundingMode()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the <c>java.math.RoundingMode</c> used in this NumberFormat.
            The default implementation of this method in NumberFormat always
            throws <c>java.lang.UnsupportedOperationException</c>.
            Subclasses which handle different rounding modes should override
            this method.</para>
          <para>Added in 1.6.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/NumberFormat#setRoundingMode(java.math.RoundingMode)" title="Reference documentation">Java documentation for <code>java.text.NumberFormat.setRoundingMode(java.math.RoundingMode)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Text.NumberFormat.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Text.NumberFormat.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Text.NumberFormat.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
