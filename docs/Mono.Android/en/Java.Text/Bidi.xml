<Type Name="Bidi" FullName="Java.Text.Bidi">
  <TypeSignature Language="C#" Value="public sealed class Bidi : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Bidi extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Text.Bidi" />
  <TypeSignature Language="F#" Value="type Bidi = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/text/Bidi", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class implements the Unicode Bidirectional Algorithm.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/text/Bidi" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bidi (Java.Text.IAttributedCharacterIterator paragraph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Text.IAttributedCharacterIterator paragraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.#ctor(Java.Text.IAttributedCharacterIterator)" />
      <MemberSignature Language="F#" Value="new Java.Text.Bidi : Java.Text.IAttributedCharacterIterator -&gt; Java.Text.Bidi" Usage="new Java.Text.Bidi paragraph" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/text/AttributedCharacterIterator;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="paragraph" Type="Java.Text.IAttributedCharacterIterator" />
      </Parameters>
      <Docs>
        <param name="paragraph">a paragraph of text</param>
        <summary>Create Bidi from the given paragraph of text and base direction.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>paragraph == null</c></exception>
        <altmember cref="P:Java.Awt.Font.TextAttribute.BidiEmbedding" />
        <altmember cref="P:Java.Awt.Font.TextAttribute.NumericShaping" />
        <altmember cref="P:Java.Awt.Font.TextAttribute.RunDirection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bidi (string paragraph, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paragraph, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Text.Bidi : string * int -&gt; Java.Text.Bidi" Usage="new Java.Text.Bidi (paragraph, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="paragraph" Type="System.String" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="paragraph">a paragraph of text</param>
        <param name="flags">a collection of flags that control the algorithm.  The
            algorithm understands the flags DIRECTION_LEFT_TO_RIGHT, DIRECTION_RIGHT_TO_LEFT,
            DIRECTION_DEFAULT_LEFT_TO_RIGHT, and DIRECTION_DEFAULT_RIGHT_TO_LEFT.
            Other values are reserved.</param>
        <summary>Create Bidi from the given paragraph of text and base direction.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Java.Text.Bidi.DirectionLeftToRight" />
        <altmember cref="F:Java.Text.Bidi.DirectionRightToLeft" />
        <altmember cref="F:Java.Text.Bidi.DirectionDefaultRightToLeft" />
        <altmember cref="F:Java.Text.Bidi.DirectionDefaultLeftToRight" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bidi (char[] text, int textStart, byte[] embeddings, int embStart, int paragraphLength, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] text, int32 textStart, unsigned int8[] embeddings, int32 embStart, int32 paragraphLength, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.#ctor(System.Char[],System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Text.Bidi : char[] * int * byte[] * int * int * int -&gt; Java.Text.Bidi" Usage="new Java.Text.Bidi (text, textStart, embeddings, embStart, paragraphLength, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "([CI[BIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="textStart" Type="System.Int32" />
        <Parameter Name="embeddings" Type="System.Byte[]" />
        <Parameter Name="embStart" Type="System.Int32" />
        <Parameter Name="paragraphLength" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="textStart">To be added.</param>
        <param name="embeddings">To be added.</param>
        <param name="embStart">To be added.</param>
        <param name="paragraphLength">To be added.</param>
        <param name="flags">a collection of flags that control the algorithm.  The
            algorithm understands the flags DIRECTION_LEFT_TO_RIGHT, DIRECTION_RIGHT_TO_LEFT,
            DIRECTION_DEFAULT_LEFT_TO_RIGHT, and DIRECTION_DEFAULT_RIGHT_TO_LEFT.
            Other values are reserved.</param>
        <summary>Create Bidi from the given paragraph of text and base direction.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>textStart</c>, <c>embStart</c>, or <c>paragraphLength</c> is negative; if
             <c>text.length </c> or
             <c>embeddings.length </c>.</exception>
        <altmember cref="F:Java.Text.Bidi.DirectionLeftToRight" />
        <altmember cref="F:Java.Text.Bidi.DirectionRightToLeft" />
        <altmember cref="F:Java.Text.Bidi.DirectionDefaultRightToLeft" />
        <altmember cref="F:Java.Text.Bidi.DirectionDefaultLeftToRight" />
      </Docs>
    </Member>
    <Member MemberName="BaseIsLeftToRight">
      <MemberSignature Language="C#" Value="public bool BaseIsLeftToRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool BaseIsLeftToRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.BaseIsLeftToRight" />
      <MemberSignature Language="F#" Value="member this.BaseIsLeftToRight : unit -&gt; bool" Usage="bidi.BaseIsLeftToRight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("baseIsLeftToRight", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return true if the base direction is left-to-right.</summary>
        <returns>true if the base direction is left-to-right</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BaseLevel">
      <MemberSignature Language="C#" Value="public int BaseLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BaseLevel" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.BaseLevel" />
      <MemberSignature Language="F#" Value="member this.BaseLevel : int" Usage="Java.Text.Bidi.BaseLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBaseLevel", "()I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the base level (0 if left-to-right, 1 if right-to-left).</summary>
        <value>the base level</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateLineBidi">
      <MemberSignature Language="C#" Value="public Java.Text.Bidi CreateLineBidi (int lineStart, int lineLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Text.Bidi CreateLineBidi(int32 lineStart, int32 lineLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.CreateLineBidi(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.CreateLineBidi : int * int -&gt; Java.Text.Bidi" Usage="bidi.CreateLineBidi (lineStart, lineLimit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createLineBidi", "(II)Ljava/text/Bidi;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.Bidi</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineStart" Type="System.Int32" />
        <Parameter Name="lineLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineStart">the offset from the start of the paragraph to the start of the line.</param>
        <param name="lineLimit">the offset from the start of the paragraph to the limit of the line.</param>
        <summary>Create a Bidi object representing the bidi information on a line of text within
            the paragraph represented by the current Bidi.</summary>
        <returns>a <c>Bidi</c> object</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>lineStart </c>, <c>lineLimit </c>, <c>lineStart &gt; lineLimit</c> or if <c>lineStart</c> is greater
             than the length of this object's paragraph text.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DirectionDefaultLeftToRight">
      <MemberSignature Language="C#" Value="public const int DirectionDefaultLeftToRight = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DirectionDefaultLeftToRight = (-2)" />
      <MemberSignature Language="DocId" Value="F:Java.Text.Bidi.DirectionDefaultLeftToRight" />
      <MemberSignature Language="F#" Value="val mutable DirectionDefaultLeftToRight : int" Usage="Java.Text.Bidi.DirectionDefaultLeftToRight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTION_DEFAULT_LEFT_TO_RIGHT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>Constant indicating that the base direction depends on the first strong
            directional character in the text according to the Unicode
            Bidirectional Algorithm.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionDefaultRightToLeft">
      <MemberSignature Language="C#" Value="public const int DirectionDefaultRightToLeft = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DirectionDefaultRightToLeft = (-1)" />
      <MemberSignature Language="DocId" Value="F:Java.Text.Bidi.DirectionDefaultRightToLeft" />
      <MemberSignature Language="F#" Value="val mutable DirectionDefaultRightToLeft : int" Usage="Java.Text.Bidi.DirectionDefaultRightToLeft" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTION_DEFAULT_RIGHT_TO_LEFT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Constant indicating that the base direction depends on the first strong
            directional character in the text according to the Unicode
            Bidirectional Algorithm.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionLeftToRight">
      <MemberSignature Language="C#" Value="public const int DirectionLeftToRight = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DirectionLeftToRight = (0)" />
      <MemberSignature Language="DocId" Value="F:Java.Text.Bidi.DirectionLeftToRight" />
      <MemberSignature Language="F#" Value="val mutable DirectionLeftToRight : int" Usage="Java.Text.Bidi.DirectionLeftToRight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTION_LEFT_TO_RIGHT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Constant indicating base direction is left-to-right.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionRightToLeft">
      <MemberSignature Language="C#" Value="public const int DirectionRightToLeft = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DirectionRightToLeft = (1)" />
      <MemberSignature Language="DocId" Value="F:Java.Text.Bidi.DirectionRightToLeft" />
      <MemberSignature Language="F#" Value="val mutable DirectionRightToLeft : int" Usage="Java.Text.Bidi.DirectionRightToLeft" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTION_RIGHT_TO_LEFT")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Constant indicating base direction is right-to-left.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLevelAt">
      <MemberSignature Language="C#" Value="public int GetLevelAt (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLevelAt(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.GetLevelAt(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetLevelAt : int -&gt; int" Usage="bidi.GetLevelAt offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLevelAt", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">the index of the character for which to return the level</param>
        <summary>Return the resolved level of the character at offset.</summary>
        <returns>the resolved level of the character at offset</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetRunLevel">
      <MemberSignature Language="C#" Value="public int GetRunLevel (int run);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRunLevel(int32 run) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.GetRunLevel(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetRunLevel : int -&gt; int" Usage="bidi.GetRunLevel run" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getRunLevel", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="run" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="run">the index of the run, between 0 and &lt;code&gt;getRunCount()&lt;/code&gt;</param>
        <summary>Return the level of the nth logical run in this line.</summary>
        <returns>the level of the run</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetRunLimit">
      <MemberSignature Language="C#" Value="public int GetRunLimit (int run);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRunLimit(int32 run) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.GetRunLimit(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetRunLimit : int -&gt; int" Usage="bidi.GetRunLimit run" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getRunLimit", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="run" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="run">the index of the run, between 0 and &lt;code&gt;getRunCount()&lt;/code&gt;</param>
        <summary>Return the index of the character past the end of the nth logical run in this line, as
            an offset from the start of the line.</summary>
        <returns>limit the limit of the run</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetRunStart">
      <MemberSignature Language="C#" Value="public int GetRunStart (int run);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRunStart(int32 run) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.GetRunStart(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetRunStart : int -&gt; int" Usage="bidi.GetRunStart run" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getRunStart", "(I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="run" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="run">the index of the run, between 0 and &lt;code&gt;getRunCount()&lt;/code&gt;</param>
        <summary>Return the index of the character at the start of the nth logical run in this line, as
            an offset from the start of the line.</summary>
        <returns>the start of the run</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLeftToRight">
      <MemberSignature Language="C#" Value="public bool IsLeftToRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLeftToRight" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.IsLeftToRight" />
      <MemberSignature Language="F#" Value="member this.IsLeftToRight : bool" Usage="Java.Text.Bidi.IsLeftToRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isLeftToRight", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the line is all left-to-right text and the base direction is left-to-right.</summary>
        <value>true if the line is all left-to-right text and the base direction is left-to-right</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsMixed">
      <MemberSignature Language="C#" Value="public bool IsMixed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMixed" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.IsMixed" />
      <MemberSignature Language="F#" Value="member this.IsMixed : bool" Usage="Java.Text.Bidi.IsMixed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isMixed", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the line is not left-to-right or right-to-left.</summary>
        <value>true if the line is not left-to-right or right-to-left.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRightToLeft">
      <MemberSignature Language="C#" Value="public bool IsRightToLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.IsRightToLeft" />
      <MemberSignature Language="F#" Value="member this.IsRightToLeft : bool" Usage="Java.Text.Bidi.IsRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isRightToLeft", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the line is all right-to-left text, and the base direction is right-to-left.</summary>
        <value>true if the line is all right-to-left text, and the base direction is right-to-left</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Text.Bidi.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.Length" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="Java.Text.Bidi.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLength", "()I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the length of text in the line.</summary>
        <value>the length of text in the line</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReorderVisually">
      <MemberSignature Language="C#" Value="public static void ReorderVisually (byte[] levels, int levelStart, Java.Lang.Object[] objects, int objectStart, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReorderVisually(unsigned int8[] levels, int32 levelStart, class Java.Lang.Object[] objects, int32 objectStart, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.ReorderVisually(System.Byte[],System.Int32,Java.Lang.Object[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ReorderVisually : byte[] * int * Java.Lang.Object[] * int * int -&gt; unit" Usage="Java.Text.Bidi.ReorderVisually (levels, levelStart, objects, objectStart, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reorderVisually", "([BI[Ljava/lang/Object;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levels" Type="System.Byte[]" />
        <Parameter Name="levelStart" Type="System.Int32" />
        <Parameter Name="objects" Type="Java.Lang.Object[]" />
        <Parameter Name="objectStart" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="levels">an array representing the bidi level of each object</param>
        <param name="levelStart">the start position in the levels array</param>
        <param name="objects">the array of objects to be reordered into visual order</param>
        <param name="objectStart">the start position in the objects array</param>
        <param name="count">the number of objects to reorder</param>
        <summary>Reorder the objects in the array into visual order based on their levels.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>count</c>, <c>levelStart</c> or <c>objectStart</c>
             is negative; if <c>count &gt; levels.length - levelStart</c> or
             if <c>count &gt; objects.length - objectStart</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresBidi">
      <MemberSignature Language="C#" Value="public static bool RequiresBidi (char[] text, int start, int limit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RequiresBidi(char[] text, int32 start, int32 limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.RequiresBidi(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member RequiresBidi : char[] * int * int -&gt; bool" Usage="Java.Text.Bidi.RequiresBidi (text, start, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requiresBidi", "([CII)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="limit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the text containing the characters to test</param>
        <param name="start">the start of the range of characters to test</param>
        <param name="limit">the limit of the range of characters to test</param>
        <summary>Return true if the specified text requires bidi analysis.</summary>
        <returns>true if the range of characters requires bidi analysis</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start</c> or <c>limit</c> is negative; <c>start &gt;
             limit</c> or <c>limit</c> is greater than the length of this
             object's paragraph text.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RunCount">
      <MemberSignature Language="C#" Value="public int RunCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RunCount" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.RunCount" />
      <MemberSignature Language="F#" Value="member this.RunCount : int" Usage="Java.Text.Bidi.RunCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRunCount", "()I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of level runs.</summary>
        <value>the number of level runs</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Text.Bidi.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Text.Bidi.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
