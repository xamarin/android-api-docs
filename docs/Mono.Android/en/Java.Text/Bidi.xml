<Type Name="Bidi" FullName="Java.Text.Bidi">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Bidi&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class Bidi sealed : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public sealed class Bidi : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Bidi extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Text.Bidi" />
  <TypeSignature Language="F#" Value="type Bidi = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/text/Bidi", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/text/Bidi", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class implements the Unicode Bidirectional Algorithm.</summary>
    <remarks>
      <para>This class implements the Unicode Bidirectional Algorithm.</para>
      <para>A Bidi object provides information on the bidirectional reordering of the text
            used to create it.  This is required, for example, to properly display Arabic
            or Hebrew text.  These languages are inherently mixed directional, as they order
            numbers from left-to-right while ordering most other text from right-to-left.</para>
      <para>Once created, a Bidi object can be queried to see if the text it represents is
            all left-to-right or all right-to-left.  Such objects are very lightweight and
            this text is relatively easy to process.</para>
      <para>If there are multiple runs of text, information about the runs can be accessed
            by indexing to get the start, limit, and level of a run.  The level represents
            both the direction and the 'nesting level' of a directional run.  Odd levels
            are right-to-left, while even levels are left-to-right.  So for example level
            0 represents left-to-right text, while level 1 represents right-to-left text, and
            level 2 represents left-to-right text embedded in a right-to-left run.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/text/Bidi" title="Reference documentation">Java documentation for <code>java.text.Bidi</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (paragraph As IAttributedCharacterIterator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bidi(Java::Text::IAttributedCharacterIterator ^ paragraph);" />
      <MemberSignature Language="C#" Value="public Bidi (Java.Text.IAttributedCharacterIterator? paragraph);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Text.IAttributedCharacterIterator paragraph) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.#ctor(Java.Text.IAttributedCharacterIterator)" />
      <MemberSignature Language="F#" Value="new Java.Text.Bidi : Java.Text.IAttributedCharacterIterator -&gt; Java.Text.Bidi" Usage="new Java.Text.Bidi paragraph" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/text/AttributedCharacterIterator;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/text/AttributedCharacterIterator;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="paragraph" Type="Java.Text.IAttributedCharacterIterator" />
      </Parameters>
      <Docs>
        <param name="paragraph">a paragraph of text with optional character and paragraph attribute information</param>
        <summary>Create Bidi from the given paragraph of text.</summary>
        <remarks>
          <para>Create Bidi from the given paragraph of text.</para>
          <para>The RUN_DIRECTION attribute in the text, if present, determines the base
            direction (left-to-right or right-to-left).  If not present, the base
            direction is computes using the Unicode Bidirectional Algorithm, defaulting to left-to-right
            if there are no strong directional characters in the text.  This attribute, if
            present, must be applied to all the text in the paragraph.</para>
          <para>The BIDI_EMBEDDING attribute in the text, if present, represents embedding level
            information.  Negative values from -1 to -62 indicate overrides at the absolute value
            of the level.  Positive values from 1 to 62 indicate embeddings.  Where values are
            zero or not defined, the base embedding level as determined by the base direction
            is assumed.</para>
          <para>The NUMERIC_SHAPING attribute in the text, if present, converts European digits to
            other decimal digits before running the bidi algorithm.  This attribute, if present,
            must be applied to all the text in the paragraph.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#Bidi(java.text.AttributedCharacterIterator)" title="Reference documentation">Java documentation for <code>java.text.Bidi.Bidi(java.text.AttributedCharacterIterator)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>paragraph == null</c></exception>
        <altmember cref="P:Java.Awt.Font.TextAttribute.BidiEmbedding" />
        <altmember cref="P:Java.Awt.Font.TextAttribute.NumericShaping" />
        <altmember cref="P:Java.Awt.Font.TextAttribute.RunDirection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (paragraph As String, flags As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bidi(System::String ^ paragraph, int flags);" />
      <MemberSignature Language="C#" Value="public Bidi (string? paragraph, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paragraph, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Text.Bidi : string * int -&gt; Java.Text.Bidi" Usage="new Java.Text.Bidi (paragraph, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="paragraph" Type="System.String" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="paragraph">a paragraph of text</param>
        <param name="flags">a collection of flags that control the algorithm.  The
            algorithm understands the flags DIRECTION_LEFT_TO_RIGHT, DIRECTION_RIGHT_TO_LEFT,
            DIRECTION_DEFAULT_LEFT_TO_RIGHT, and DIRECTION_DEFAULT_RIGHT_TO_LEFT.
            Other values are reserved.</param>
        <summary>Create Bidi from the given paragraph of text and base direction.</summary>
        <remarks>
          <para>Create Bidi from the given paragraph of text and base direction.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#Bidi(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>java.text.Bidi.Bidi(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Java.Text.Bidi.DirectionLeftToRight" />
        <altmember cref="F:Java.Text.Bidi.DirectionRightToLeft" />
        <altmember cref="F:Java.Text.Bidi.DirectionDefaultRightToLeft" />
        <altmember cref="F:Java.Text.Bidi.DirectionDefaultLeftToRight" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As Char(), textStart As Integer, embeddings As Byte(), embStart As Integer, paragraphLength As Integer, flags As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bidi(cli::array &lt;char&gt; ^ text, int textStart, cli::array &lt;System::Byte&gt; ^ embeddings, int embStart, int paragraphLength, int flags);" />
      <MemberSignature Language="C#" Value="public Bidi (char[]? text, int textStart, byte[]? embeddings, int embStart, int paragraphLength, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] text, int32 textStart, unsigned int8[] embeddings, int32 embStart, int32 paragraphLength, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.#ctor(System.Char[],System.Int32,System.Byte[],System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new Java.Text.Bidi : char[] * int * byte[] * int * int * int -&gt; Java.Text.Bidi" Usage="new Java.Text.Bidi (text, textStart, embeddings, embStart, paragraphLength, flags)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "([CI[BIII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "([CI[BIII)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="textStart" Type="System.Int32" />
        <Parameter Name="embeddings" Type="System.Byte[]" />
        <Parameter Name="embStart" Type="System.Int32" />
        <Parameter Name="paragraphLength" Type="System.Int32" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">an array containing the paragraph of text to process.</param>
        <param name="textStart">the index into the text array of the start of the paragraph.</param>
        <param name="embeddings">an array containing embedding values for each character in the paragraph.
            This can be null, in which case it is assumed that there is no external embedding information.</param>
        <param name="embStart">the index into the embedding array of the start of the paragraph.</param>
        <param name="paragraphLength">the length of the paragraph in the text and embeddings arrays.</param>
        <param name="flags">a collection of flags that control the algorithm.  The
            algorithm understands the flags DIRECTION_LEFT_TO_RIGHT, DIRECTION_RIGHT_TO_LEFT,
            DIRECTION_DEFAULT_LEFT_TO_RIGHT, and DIRECTION_DEFAULT_RIGHT_TO_LEFT.
            Other values are reserved.</param>
        <summary>Create Bidi from the given text, embedding, and direction information.</summary>
        <remarks>
          <para>Create Bidi from the given text, embedding, and direction information.
            The embeddings array may be null.  If present, the values represent embedding level
            information.  Negative values from -1 to -61 indicate overrides at the absolute value
            of the level.  Positive values from 1 to 61 indicate embeddings.  Where values are
            zero, the base embedding level as determined by the base direction is assumed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#Bidi(char[],%20int,%20byte[],%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>java.text.Bidi.Bidi(char[], int, byte[], int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>textStart</c>, <c>embStart</c>, or <c>paragraphLength</c> is negative; if
             <c>text.length </c> or
             <c>embeddings.length </c>.</exception>
        <altmember cref="F:Java.Text.Bidi.DirectionLeftToRight" />
        <altmember cref="F:Java.Text.Bidi.DirectionRightToLeft" />
        <altmember cref="F:Java.Text.Bidi.DirectionDefaultRightToLeft" />
        <altmember cref="F:Java.Text.Bidi.DirectionDefaultLeftToRight" />
      </Docs>
    </Member>
    <Member MemberName="BaseIsLeftToRight">
      <MemberSignature Language="VB.NET" Value="Public Function BaseIsLeftToRight () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool BaseIsLeftToRight();" />
      <MemberSignature Language="C#" Value="public bool BaseIsLeftToRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool BaseIsLeftToRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.BaseIsLeftToRight" />
      <MemberSignature Language="F#" Value="member this.BaseIsLeftToRight : unit -&gt; bool" Usage="bidi.BaseIsLeftToRight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("baseIsLeftToRight", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("baseIsLeftToRight", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return true if the base direction is left-to-right.</summary>
        <returns>true if the base direction is left-to-right</returns>
        <remarks>
          <para>Return true if the base direction is left-to-right.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#baseIsLeftToRight()" title="Reference documentation">Java documentation for <code>java.text.Bidi.baseIsLeftToRight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BaseLevel">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BaseLevel { int get(); };" />
      <MemberSignature Language="C#" Value="public int BaseLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BaseLevel" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.BaseLevel" />
      <MemberSignature Language="F#" Value="member this.BaseLevel : int" Usage="Java.Text.Bidi.BaseLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBaseLevel", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBaseLevel", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the base level (0 if left-to-right, 1 if right-to-left).</summary>
        <value>the base level</value>
        <remarks>
          <para>Return the base level (0 if left-to-right, 1 if right-to-left).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#getBaseLevel()" title="Reference documentation">Java documentation for <code>java.text.Bidi.getBaseLevel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CreateLineBidi">
      <MemberSignature Language="VB.NET" Value="Public Function CreateLineBidi (lineStart As Integer, lineLimit As Integer) As Bidi" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Text::Bidi ^ CreateLineBidi(int lineStart, int lineLimit);" />
      <MemberSignature Language="C#" Value="public Java.Text.Bidi? CreateLineBidi (int lineStart, int lineLimit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Text.Bidi CreateLineBidi(int32 lineStart, int32 lineLimit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.CreateLineBidi(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.CreateLineBidi : int * int -&gt; Java.Text.Bidi" Usage="bidi.CreateLineBidi (lineStart, lineLimit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createLineBidi", "(II)Ljava/text/Bidi;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createLineBidi", "(II)Ljava/text/Bidi;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Text.Bidi</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lineStart" Type="System.Int32" />
        <Parameter Name="lineLimit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lineStart">the offset from the start of the paragraph to the start of the line.</param>
        <param name="lineLimit">the offset from the start of the paragraph to the limit of the line.</param>
        <summary>Create a Bidi object representing the bidi information on a line of text within
            the paragraph represented by the current Bidi.</summary>
        <returns>a <c>Bidi</c> object</returns>
        <remarks>
          <para>Create a Bidi object representing the bidi information on a line of text within
            the paragraph represented by the current Bidi.  This call is not required if the
            entire paragraph fits on one line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#createLineBidi(int,%20int)" title="Reference documentation">Java documentation for <code>java.text.Bidi.createLineBidi(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>lineStart </c>, <c>lineLimit </c>, <c>lineStart &gt; lineLimit</c> or if <c>lineStart</c> is greater
             than the length of this object's paragraph text.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DirectionDefaultLeftToRight">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionDefaultLeftToRight As Integer  = -2" />
      <MemberSignature Language="C++ CLI" Value="public: int DirectionDefaultLeftToRight = -2;" />
      <MemberSignature Language="C#" Value="public const int DirectionDefaultLeftToRight = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DirectionDefaultLeftToRight = (-2)" />
      <MemberSignature Language="DocId" Value="F:Java.Text.Bidi.DirectionDefaultLeftToRight" />
      <MemberSignature Language="F#" Value="val mutable DirectionDefaultLeftToRight : int" Usage="Java.Text.Bidi.DirectionDefaultLeftToRight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTION_DEFAULT_LEFT_TO_RIGHT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTION_DEFAULT_LEFT_TO_RIGHT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>Constant indicating that the base direction depends on the first strong
            directional character in the text according to the Unicode
            Bidirectional Algorithm.</summary>
        <remarks>
          <para>Constant indicating that the base direction depends on the first strong
            directional character in the text according to the Unicode
            Bidirectional Algorithm.  If no strong directional character is present,
            the base direction is left-to-right.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#DIRECTION_DEFAULT_LEFT_TO_RIGHT" title="Reference documentation">Java documentation for <code>java.text.Bidi.DIRECTION_DEFAULT_LEFT_TO_RIGHT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionDefaultRightToLeft">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionDefaultRightToLeft As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int DirectionDefaultRightToLeft = -1;" />
      <MemberSignature Language="C#" Value="public const int DirectionDefaultRightToLeft = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DirectionDefaultRightToLeft = (-1)" />
      <MemberSignature Language="DocId" Value="F:Java.Text.Bidi.DirectionDefaultRightToLeft" />
      <MemberSignature Language="F#" Value="val mutable DirectionDefaultRightToLeft : int" Usage="Java.Text.Bidi.DirectionDefaultRightToLeft" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTION_DEFAULT_RIGHT_TO_LEFT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTION_DEFAULT_RIGHT_TO_LEFT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Constant indicating that the base direction depends on the first strong
            directional character in the text according to the Unicode
            Bidirectional Algorithm.</summary>
        <remarks>
          <para>Constant indicating that the base direction depends on the first strong
            directional character in the text according to the Unicode
            Bidirectional Algorithm.  If no strong directional character is present,
            the base direction is right-to-left.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#DIRECTION_DEFAULT_RIGHT_TO_LEFT" title="Reference documentation">Java documentation for <code>java.text.Bidi.DIRECTION_DEFAULT_RIGHT_TO_LEFT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionLeftToRight">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionLeftToRight As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int DirectionLeftToRight = 0;" />
      <MemberSignature Language="C#" Value="public const int DirectionLeftToRight = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DirectionLeftToRight = (0)" />
      <MemberSignature Language="DocId" Value="F:Java.Text.Bidi.DirectionLeftToRight" />
      <MemberSignature Language="F#" Value="val mutable DirectionLeftToRight : int" Usage="Java.Text.Bidi.DirectionLeftToRight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTION_LEFT_TO_RIGHT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTION_LEFT_TO_RIGHT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Constant indicating base direction is left-to-right.</summary>
        <remarks>
          <para>Constant indicating base direction is left-to-right.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#DIRECTION_LEFT_TO_RIGHT" title="Reference documentation">Java documentation for <code>java.text.Bidi.DIRECTION_LEFT_TO_RIGHT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectionRightToLeft">
      <MemberSignature Language="VB.NET" Value="Public Const DirectionRightToLeft As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int DirectionRightToLeft = 1;" />
      <MemberSignature Language="C#" Value="public const int DirectionRightToLeft = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DirectionRightToLeft = (1)" />
      <MemberSignature Language="DocId" Value="F:Java.Text.Bidi.DirectionRightToLeft" />
      <MemberSignature Language="F#" Value="val mutable DirectionRightToLeft : int" Usage="Java.Text.Bidi.DirectionRightToLeft" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECTION_RIGHT_TO_LEFT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECTION_RIGHT_TO_LEFT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Constant indicating base direction is right-to-left.</summary>
        <remarks>
          <para>Constant indicating base direction is right-to-left.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#DIRECTION_RIGHT_TO_LEFT" title="Reference documentation">Java documentation for <code>java.text.Bidi.DIRECTION_RIGHT_TO_LEFT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLevelAt">
      <MemberSignature Language="VB.NET" Value="Public Function GetLevelAt (offset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLevelAt(int offset);" />
      <MemberSignature Language="C#" Value="public int GetLevelAt (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLevelAt(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.GetLevelAt(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetLevelAt : int -&gt; int" Usage="bidi.GetLevelAt offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLevelAt", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLevelAt", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">the index of the character for which to return the level</param>
        <summary>Return the resolved level of the character at offset.</summary>
        <returns>the resolved level of the character at offset</returns>
        <remarks>
          <para>Return the resolved level of the character at offset.  If offset is
            &lt; 0 or &amp;ge; the length of the line, return the base direction
            level.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#getLevelAt(int)" title="Reference documentation">Java documentation for <code>java.text.Bidi.getLevelAt(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetRunLevel">
      <MemberSignature Language="VB.NET" Value="Public Function GetRunLevel (run As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRunLevel(int run);" />
      <MemberSignature Language="C#" Value="public int GetRunLevel (int run);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRunLevel(int32 run) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.GetRunLevel(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetRunLevel : int -&gt; int" Usage="bidi.GetRunLevel run" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRunLevel", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRunLevel", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="run" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="run">the index of the run, between 0 and <c>getRunCount()</c></param>
        <summary>Return the level of the nth logical run in this line.</summary>
        <returns>the level of the run</returns>
        <remarks>
          <para>Return the level of the nth logical run in this line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#getRunLevel(int)" title="Reference documentation">Java documentation for <code>java.text.Bidi.getRunLevel(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetRunLimit">
      <MemberSignature Language="VB.NET" Value="Public Function GetRunLimit (run As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRunLimit(int run);" />
      <MemberSignature Language="C#" Value="public int GetRunLimit (int run);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRunLimit(int32 run) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.GetRunLimit(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetRunLimit : int -&gt; int" Usage="bidi.GetRunLimit run" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRunLimit", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRunLimit", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="run" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="run">the index of the run, between 0 and <c>getRunCount()</c></param>
        <summary>Return the index of the character past the end of the nth logical run in this line, as
            an offset from the start of the line.</summary>
        <returns>limit the limit of the run</returns>
        <remarks>
          <para>Return the index of the character past the end of the nth logical run in this line, as
            an offset from the start of the line.  For example, this will return the length
            of the line for the last run on the line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#getRunLimit(int)" title="Reference documentation">Java documentation for <code>java.text.Bidi.getRunLimit(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetRunStart">
      <MemberSignature Language="VB.NET" Value="Public Function GetRunStart (run As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetRunStart(int run);" />
      <MemberSignature Language="C#" Value="public int GetRunStart (int run);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetRunStart(int32 run) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.GetRunStart(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetRunStart : int -&gt; int" Usage="bidi.GetRunStart run" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRunStart", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRunStart", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="run" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="run">the index of the run, between 0 and <c>getRunCount()</c></param>
        <summary>Return the index of the character at the start of the nth logical run in this line, as
            an offset from the start of the line.</summary>
        <returns>the start of the run</returns>
        <remarks>
          <para>Return the index of the character at the start of the nth logical run in this line, as
            an offset from the start of the line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#getRunStart(int)" title="Reference documentation">Java documentation for <code>java.text.Bidi.getRunStart(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLeftToRight">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLeftToRight As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLeftToRight { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsLeftToRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLeftToRight" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.IsLeftToRight" />
      <MemberSignature Language="F#" Value="member this.IsLeftToRight : bool" Usage="Java.Text.Bidi.IsLeftToRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLeftToRight", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLeftToRight", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the line is all left-to-right text and the base direction is left-to-right.</summary>
        <value>true if the line is all left-to-right text and the base direction is left-to-right</value>
        <remarks>
          <para>Return true if the line is all left-to-right text and the base direction is left-to-right.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#isLeftToRight()" title="Reference documentation">Java documentation for <code>java.text.Bidi.isLeftToRight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsMixed">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMixed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMixed { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsMixed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMixed" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.IsMixed" />
      <MemberSignature Language="F#" Value="member this.IsMixed : bool" Usage="Java.Text.Bidi.IsMixed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMixed", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMixed", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the line is not left-to-right or right-to-left.</summary>
        <value>true if the line is not left-to-right or right-to-left.</value>
        <remarks>
          <para>Return true if the line is not left-to-right or right-to-left.  This means it either has mixed runs of left-to-right
            and right-to-left text, or the base direction differs from the direction of the only run of text.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#isMixed()" title="Reference documentation">Java documentation for <code>java.text.Bidi.isMixed()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRightToLeft">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRightToLeft As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRightToLeft { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsRightToLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRightToLeft" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.IsRightToLeft" />
      <MemberSignature Language="F#" Value="member this.IsRightToLeft : bool" Usage="Java.Text.Bidi.IsRightToLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRightToLeft", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRightToLeft", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the line is all right-to-left text, and the base direction is right-to-left.</summary>
        <value>true if the line is all right-to-left text, and the base direction is right-to-left</value>
        <remarks>
          <para>Return true if the line is all right-to-left text, and the base direction is right-to-left.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#isRightToLeft()" title="Reference documentation">Java documentation for <code>java.text.Bidi.isRightToLeft()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Text.Bidi.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.Length" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="Java.Text.Bidi.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLength", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLength", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the length of text in the line.</summary>
        <value>the length of text in the line</value>
        <remarks>
          <para>Return the length of text in the line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#getLength()" title="Reference documentation">Java documentation for <code>java.text.Bidi.getLength()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReorderVisually">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReorderVisually (levels As Byte(), levelStart As Integer, objects As Object(), objectStart As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReorderVisually(cli::array &lt;System::Byte&gt; ^ levels, int levelStart, cli::array &lt;Java::Lang::Object ^&gt; ^ objects, int objectStart, int count);" />
      <MemberSignature Language="C#" Value="public static void ReorderVisually (byte[]? levels, int levelStart, Java.Lang.Object[]? objects, int objectStart, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReorderVisually(unsigned int8[] levels, int32 levelStart, class Java.Lang.Object[] objects, int32 objectStart, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.ReorderVisually(System.Byte[],System.Int32,Java.Lang.Object[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member ReorderVisually : byte[] * int * Java.Lang.Object[] * int * int -&gt; unit" Usage="Java.Text.Bidi.ReorderVisually (levels, levelStart, objects, objectStart, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reorderVisually", "([BI[Ljava/lang/Object;II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reorderVisually", "([BI[Ljava/lang/Object;II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levels" Type="System.Byte[]" />
        <Parameter Name="levelStart" Type="System.Int32" />
        <Parameter Name="objects" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="objectStart" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="levels">an array representing the bidi level of each object</param>
        <param name="levelStart">the start position in the levels array</param>
        <param name="objects">the array of objects to be reordered into visual order</param>
        <param name="objectStart">the start position in the objects array</param>
        <param name="count">the number of objects to reorder</param>
        <summary>Reorder the objects in the array into visual order based on their levels.</summary>
        <remarks>
          <para>Reorder the objects in the array into visual order based on their levels.
            This is a utility function to use when you have a collection of objects
            representing runs of text in logical order, each run containing text
            at a single level.  The elements at <c>index</c> from
            <c>objectStart</c> up to <c>objectStart + count</c>
            in the objects array will be reordered into visual order assuming
            each run of text has the level indicated by the corresponding element
            in the levels array (at <c>index - objectStart + levelStart</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#reorderVisually(byte[],%20int,%20java.lang.Object[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.text.Bidi.reorderVisually(byte[], int, java.lang.Object[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>count</c>, <c>levelStart</c> or <c>objectStart</c>
             is negative; if <c>count &gt; levels.length - levelStart</c> or
             if <c>count &gt; objects.length - objectStart</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresBidi">
      <MemberSignature Language="VB.NET" Value="Public Shared Function RequiresBidi (text As Char(), start As Integer, limit As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool RequiresBidi(cli::array &lt;char&gt; ^ text, int start, int limit);" />
      <MemberSignature Language="C#" Value="public static bool RequiresBidi (char[]? text, int start, int limit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool RequiresBidi(char[] text, int32 start, int32 limit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Text.Bidi.RequiresBidi(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member RequiresBidi : char[] * int * int -&gt; bool" Usage="Java.Text.Bidi.RequiresBidi (text, start, limit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requiresBidi", "([CII)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requiresBidi", "([CII)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char[]" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="limit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the text containing the characters to test</param>
        <param name="start">the start of the range of characters to test</param>
        <param name="limit">the limit of the range of characters to test</param>
        <summary>Return true if the specified text requires bidi analysis.</summary>
        <returns>true if the range of characters requires bidi analysis</returns>
        <remarks>
          <para>Return true if the specified text requires bidi analysis.  If this returns false,
            the text will display left-to-right.  Clients can then avoid constructing a Bidi object.
            Text in the Arabic Presentation Forms area of Unicode is presumed to already be shaped
            and ordered for display, and so will not cause this function to return true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#requiresBidi(char[],%20int,%20int)" title="Reference documentation">Java documentation for <code>java.text.Bidi.requiresBidi(char[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>start</c> or <c>limit</c> is negative; <c>start &gt;
             limit</c> or <c>limit</c> is greater than the length of this
             object's paragraph text.
</exception>
      </Docs>
    </Member>
    <Member MemberName="RunCount">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RunCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int RunCount { int get(); };" />
      <MemberSignature Language="C#" Value="public int RunCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RunCount" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.RunCount" />
      <MemberSignature Language="F#" Value="member this.RunCount : int" Usage="Java.Text.Bidi.RunCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRunCount", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRunCount", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of level runs.</summary>
        <value>the number of level runs</value>
        <remarks>
          <para>Return the number of level runs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/text/Bidi#getRunCount()" title="Reference documentation">Java documentation for <code>java.text.Bidi.getRunCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Text.Bidi.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Text.Bidi.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Text.Bidi.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
