<Type Name="ImageWriter+IOnImageReleasedListener" FullName="Android.Media.ImageWriter+IOnImageReleasedListener">
  <TypeSignature Language="C#" Value="public interface ImageWriter.IOnImageReleasedListener : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract beforefieldinit ImageWriter/IOnImageReleasedListener implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.ImageWriter.IOnImageReleasedListener" />
  <TypeSignature Language="F#" Value="type ImageWriter.IOnImageReleasedListener = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/ImageWriter$OnImageReleasedListener", "", "Android.Media.ImageWriter/IOnImageReleasedListenerInvoker", ApiSince=23)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/ImageWriter$OnImageReleasedListener", "", "Android.Media.ImageWriter/IOnImageReleasedListenerInvoker", ApiSince=23)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ImageWriter callback interface, used to to asynchronously notify the
            application of various ImageWriter events.</summary>
    <remarks>
      <para>ImageWriter callback interface, used to to asynchronously notify the
            application of various ImageWriter events.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/ImageWriter.OnImageReleasedListener" title="Reference documentation">Java documentation for <code>android.media.ImageWriter.OnImageReleasedListener</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="OnImageReleased">
      <MemberSignature Language="C#" Value="public void OnImageReleased (Android.Media.ImageWriter? writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnImageReleased(class Android.Media.ImageWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.ImageWriter.IOnImageReleasedListener.OnImageReleased(Android.Media.ImageWriter)" />
      <MemberSignature Language="F#" Value="abstract member OnImageReleased : Android.Media.ImageWriter -&gt; unit" Usage="iOnImageReleasedListener.OnImageReleased writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onImageReleased", "(Landroid/media/ImageWriter;)V", "GetOnImageReleased_Landroid_media_ImageWriter_Handler:Android.Media.ImageWriter/IOnImageReleasedListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onImageReleased", "(Landroid/media/ImageWriter;)V", "GetOnImageReleased_Landroid_media_ImageWriter_Handler:Android.Media.ImageWriter/IOnImageReleasedListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="Android.Media.ImageWriter" />
      </Parameters>
      <Docs>
        <param name="writer">the ImageWriter the callback is associated with.</param>
        <summary>Callback that is called when an input Image is released back to
            ImageWriter after the data consumption.</summary>
        <remarks>
          <para>Callback that is called when an input Image is released back to
            ImageWriter after the data consumption.</para>
          <para>The client can use this callback to be notified that an input Image
            has been consumed and released by the downstream consumer. More
            specifically, this callback will be fired for below cases:
            &lt;li&gt;The application dequeues an input Image via the
            <c>ImageWriter#dequeueInputImage dequeueInputImage()</c> method,
            uses it, and then queues it back to this ImageWriter via the
            <c>ImageWriter#queueInputImage queueInputImage()</c> method. After
            the downstream consumer uses and releases this image to this
            ImageWriter, this callback will be fired. This image will be
            available to be dequeued after this callback.&lt;/li&gt;
            &lt;li&gt;The application obtains an Image from some other component (e.g.
            an <c>ImageReader</c>), uses it, and then queues it to this
            ImageWriter via <c>ImageWriter#queueInputImage queueInputImage()</c>.
            After the downstream consumer uses and releases this image to this
            ImageWriter, this callback will be fired.&lt;/li&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/ImageWriter.OnImageReleasedListener#onImageReleased(android.media.ImageWriter)" title="Reference documentation">Java documentation for <code>android.media.ImageWriter.OnImageReleasedListener.onImageReleased(android.media.ImageWriter)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
