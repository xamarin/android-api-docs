<Type Name="AudioManager" FullName="Android.Media.AudioManager">
  <TypeSignature Language="C#" Value="public class AudioManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AudioManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.AudioManager" />
  <TypeSignature Language="F#" Value="type AudioManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/AudioManager", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>AudioManager provides access to volume and ringer mode control.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/AudioManager" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AudioManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.AudioManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.AudioManager" Usage="new Android.Media.AudioManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AbandonAudioFocus">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFocusRequest AbandonAudioFocus (Android.Media.AudioManager.IOnAudioFocusChangeListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.AudioFocusRequest AbandonAudioFocus(class Android.Media.AudioManager/IOnAudioFocusChangeListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AbandonAudioFocus(Android.Media.AudioManager.IOnAudioFocusChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member AbandonAudioFocus : Android.Media.AudioManager.IOnAudioFocusChangeListener -&gt; Android.Media.AudioFocusRequest&#xA;override this.AbandonAudioFocus : Android.Media.AudioManager.IOnAudioFocusChangeListener -&gt; Android.Media.AudioFocusRequest" Usage="audioManager.AbandonAudioFocus l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("abandonAudioFocus", "(Landroid/media/AudioManager$OnAudioFocusChangeListener;)I", "GetAbandonAudioFocus_Landroid_media_AudioManager_OnAudioFocusChangeListener_Handler", ApiSince=8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Media.AudioManager+IOnAudioFocusChangeListener" />
      </Parameters>
      <Docs>
        <param name="l">the listener with which focus was requested.</param>
        <summary>Abandon audio focus.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AbandonAudioFocusRequest">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFocusRequest AbandonAudioFocusRequest (Android.Media.AudioFocusRequestClass focusRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.AudioFocusRequest AbandonAudioFocusRequest(class Android.Media.AudioFocusRequestClass focusRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AbandonAudioFocusRequest(Android.Media.AudioFocusRequestClass)" />
      <MemberSignature Language="F#" Value="abstract member AbandonAudioFocusRequest : Android.Media.AudioFocusRequestClass -&gt; Android.Media.AudioFocusRequest&#xA;override this.AbandonAudioFocusRequest : Android.Media.AudioFocusRequestClass -&gt; Android.Media.AudioFocusRequest" Usage="audioManager.AbandonAudioFocusRequest focusRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("abandonAudioFocusRequest", "(Landroid/media/AudioFocusRequest;)I", "GetAbandonAudioFocusRequest_Landroid_media_AudioFocusRequest_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusRequest" Type="Android.Media.AudioFocusRequestClass" />
      </Parameters>
      <Docs>
        <param name="focusRequest">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionAudioBecomingNoisy">
      <MemberSignature Language="C#" Value="public const string ActionAudioBecomingNoisy;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionAudioBecomingNoisy" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionAudioBecomingNoisy" />
      <MemberSignature Language="F#" Value="val mutable ActionAudioBecomingNoisy : string" Usage="Android.Media.AudioManager.ActionAudioBecomingNoisy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_AUDIO_BECOMING_NOISY", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent, a hint for applications that audio is about to become
 'noisy' due to a change in audio outputs.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ActionHdmiAudioPlug">
      <MemberSignature Language="C#" Value="public const string ActionHdmiAudioPlug;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionHdmiAudioPlug" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionHdmiAudioPlug" />
      <MemberSignature Language="F#" Value="val mutable ActionHdmiAudioPlug : string" Usage="Android.Media.AudioManager.ActionHdmiAudioPlug" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_HDMI_AUDIO_PLUG", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: A sticky broadcast indicating an HDMI cable was plugged or unplugged.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionHeadsetPlug">
      <MemberSignature Language="C#" Value="public const string ActionHeadsetPlug;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionHeadsetPlug" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionHeadsetPlug" />
      <MemberSignature Language="F#" Value="val mutable ActionHeadsetPlug : string" Usage="Android.Media.AudioManager.ActionHeadsetPlug" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_HEADSET_PLUG", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: Wired Headset plugged in or unplugged.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionScoAudioStateChanged">
      <MemberSignature Language="C#" Value="public const string ActionScoAudioStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionScoAudioStateChanged" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionScoAudioStateChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionScoAudioStateChanged : string" Usage="Android.Media.AudioManager.ActionScoAudioStateChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_SCO_AUDIO_STATE_CHANGED", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sticky broadcast intent action indicating that the bluetoooth SCO audio
 connection state has changed.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.StartBluetoothSco" />
      </Docs>
    </Member>
    <Member MemberName="ActionScoAudioStateUpdated">
      <MemberSignature Language="C#" Value="public const string ActionScoAudioStateUpdated;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionScoAudioStateUpdated" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionScoAudioStateUpdated" />
      <MemberSignature Language="F#" Value="val mutable ActionScoAudioStateUpdated : string" Usage="Android.Media.AudioManager.ActionScoAudioStateUpdated" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_SCO_AUDIO_STATE_UPDATED", ApiSince=14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sticky broadcast intent action indicating that the bluetoooth SCO audio
 connection state has been updated.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.AudioManager.StartBluetoothSco" />
      </Docs>
    </Member>
    <Member MemberName="ActivePlaybackConfigurations">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.AudioPlaybackConfiguration&gt; ActivePlaybackConfigurations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.AudioPlaybackConfiguration&gt; ActivePlaybackConfigurations" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.ActivePlaybackConfigurations" />
      <MemberSignature Language="F#" Value="member this.ActivePlaybackConfigurations : System.Collections.Generic.IList&lt;Android.Media.AudioPlaybackConfiguration&gt;" Usage="Android.Media.AudioManager.ActivePlaybackConfigurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getActivePlaybackConfigurations", "()Ljava/util/List;", "GetGetActivePlaybackConfigurationsHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.AudioPlaybackConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveRecordingConfigurations">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.AudioRecordingConfiguration&gt; ActiveRecordingConfigurations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.AudioRecordingConfiguration&gt; ActiveRecordingConfigurations" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.ActiveRecordingConfigurations" />
      <MemberSignature Language="F#" Value="member this.ActiveRecordingConfigurations : System.Collections.Generic.IList&lt;Android.Media.AudioRecordingConfiguration&gt;" Usage="Android.Media.AudioManager.ActiveRecordingConfigurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getActiveRecordingConfigurations", "()Ljava/util/List;", "GetGetActiveRecordingConfigurationsHandler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.AudioRecordingConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustStreamVolume">
      <MemberSignature Language="C#" Value="public virtual void AdjustStreamVolume (Android.Media.Stream streamType, Android.Media.Adjust direction, Android.Media.VolumeNotificationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdjustStreamVolume(valuetype Android.Media.Stream streamType, valuetype Android.Media.Adjust direction, valuetype Android.Media.VolumeNotificationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AdjustStreamVolume(Android.Media.Stream,Android.Media.Adjust,Android.Media.VolumeNotificationFlags)" />
      <MemberSignature Language="F#" Value="abstract member AdjustStreamVolume : Android.Media.Stream * Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit&#xA;override this.AdjustStreamVolume : Android.Media.Stream * Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit" Usage="audioManager.AdjustStreamVolume (streamType, direction, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("adjustStreamVolume", "(III)V", "GetAdjustStreamVolume_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="direction" Type="Android.Media.Adjust">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Media.VolumeNotificationFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream type to adjust. One of <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager STREAM_VOICE_CALL';scope=Xamarin" title="Android.Media.AudioManager.STREAM_VOICE_CALL">Android.Media.AudioManager.STREAM_VOICE_CALL</a></format>,
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager STREAM_SYSTEM';scope=Xamarin" title="Android.Media.AudioManager.STREAM_SYSTEM">Android.Media.AudioManager.STREAM_SYSTEM</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager STREAM_RING';scope=Xamarin" title="Android.Media.AudioManager.STREAM_RING">Android.Media.AudioManager.STREAM_RING</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager STREAM_MUSIC';scope=Xamarin" title="Android.Media.AudioManager.STREAM_MUSIC">Android.Media.AudioManager.STREAM_MUSIC</a></format> or
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager STREAM_ALARM';scope=Xamarin" title="Android.Media.AudioManager.STREAM_ALARM">Android.Media.AudioManager.STREAM_ALARM</a></format></param>
        <param name="direction">The direction to adjust the volume. One of
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_LOWER';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_LOWER">Android.Media.AudioManager.ADJUST_LOWER</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_RAISE';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_RAISE">Android.Media.AudioManager.ADJUST_RAISE</a></format>, or
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_SAME';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_SAME">Android.Media.AudioManager.ADJUST_SAME</a></format>.</param>
        <param name="flags">One or more flags.</param>
        <summary>Adjusts the volume of a particular stream by one step in a direction.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.AdjustVolume(Android.Media.Adjust, Android.Media.VolumeNotificationFlags)" />
        <altmember cref="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AdjustSuggestedStreamVolume">
      <MemberSignature Language="C#" Value="public virtual void AdjustSuggestedStreamVolume (Android.Media.Adjust direction, Android.Media.Stream suggestedStreamType, Android.Media.VolumeNotificationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdjustSuggestedStreamVolume(valuetype Android.Media.Adjust direction, valuetype Android.Media.Stream suggestedStreamType, valuetype Android.Media.VolumeNotificationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AdjustSuggestedStreamVolume(Android.Media.Adjust,Android.Media.Stream,Android.Media.VolumeNotificationFlags)" />
      <MemberSignature Language="F#" Value="abstract member AdjustSuggestedStreamVolume : Android.Media.Adjust * Android.Media.Stream * Android.Media.VolumeNotificationFlags -&gt; unit&#xA;override this.AdjustSuggestedStreamVolume : Android.Media.Adjust * Android.Media.Stream * Android.Media.VolumeNotificationFlags -&gt; unit" Usage="audioManager.AdjustSuggestedStreamVolume (direction, suggestedStreamType, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("adjustSuggestedStreamVolume", "(III)V", "GetAdjustSuggestedStreamVolume_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Media.Adjust">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="suggestedStreamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Media.VolumeNotificationFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">The direction to adjust the volume. One of
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_LOWER';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_LOWER">Android.Media.AudioManager.ADJUST_LOWER</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_RAISE';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_RAISE">Android.Media.AudioManager.ADJUST_RAISE</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_SAME';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_SAME">Android.Media.AudioManager.ADJUST_SAME</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_MUTE';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_MUTE">Android.Media.AudioManager.ADJUST_MUTE</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_UNMUTE';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_UNMUTE">Android.Media.AudioManager.ADJUST_UNMUTE</a></format>, or <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_TOGGLE_MUTE';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_TOGGLE_MUTE">Android.Media.AudioManager.ADJUST_TOGGLE_MUTE</a></format>.</param>
        <param name="suggestedStreamType">The stream type that will be used if there
            isn't a relevant stream. <see cref="F:Android.Media.AudioManager.UseDefaultStreamType" /> is
            valid here.</param>
        <param name="flags">One or more flags.</param>
        <summary>Adjusts the volume of the most relevant stream, or the given fallback
 stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.AdjustVolume(Android.Media.Adjust, Android.Media.VolumeNotificationFlags)" />
        <altmember cref="M:Android.Media.AudioManager.AdjustStreamVolume(Android.Media.Stream, Android.Media.Adjust, Android.Media.Adjust)" />
        <altmember cref="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="AdjustVolume">
      <MemberSignature Language="C#" Value="public virtual void AdjustVolume (Android.Media.Adjust direction, Android.Media.VolumeNotificationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdjustVolume(valuetype Android.Media.Adjust direction, valuetype Android.Media.VolumeNotificationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AdjustVolume(Android.Media.Adjust,Android.Media.VolumeNotificationFlags)" />
      <MemberSignature Language="F#" Value="abstract member AdjustVolume : Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit&#xA;override this.AdjustVolume : Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit" Usage="audioManager.AdjustVolume (direction, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("adjustVolume", "(II)V", "GetAdjustVolume_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Media.Adjust">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Media.VolumeNotificationFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">The direction to adjust the volume. One of
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_LOWER';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_LOWER">Android.Media.AudioManager.ADJUST_LOWER</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_RAISE';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_RAISE">Android.Media.AudioManager.ADJUST_RAISE</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_SAME';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_SAME">Android.Media.AudioManager.ADJUST_SAME</a></format>, <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_MUTE';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_MUTE">Android.Media.AudioManager.ADJUST_MUTE</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_UNMUTE';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_UNMUTE">Android.Media.AudioManager.ADJUST_UNMUTE</a></format>, or <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager ADJUST_TOGGLE_MUTE';scope=Xamarin" title="Android.Media.AudioManager.ADJUST_TOGGLE_MUTE">Android.Media.AudioManager.ADJUST_TOGGLE_MUTE</a></format>.</param>
        <param name="flags">One or more flags.</param>
        <summary>Adjusts the volume of the most relevant stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.AdjustSuggestedStreamVolume(Android.Media.Adjust, Android.Media.Stream, Android.Media.Stream)" />
        <altmember cref="M:Android.Media.AudioManager.AdjustStreamVolume(Android.Media.Stream, Android.Media.Adjust, Android.Media.Adjust)" />
        <altmember cref="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusGain">
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusGain = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusGain = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusGain" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusGain : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusGain" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUDIOFOCUS_GAIN", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Used to indicate a gain of audio focus, or a request of audio focus, of unknown duration.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.RequestAudioFocus(.IOnAudioFocusChangeListener, Android.Media.Stream, Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusGainTransient">
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusGainTransient = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusGainTransient = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusGainTransient" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusGainTransient : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusGainTransient" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUDIOFOCUS_GAIN_TRANSIENT", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Used to indicate a temporary gain or request of audio focus, anticipated to last a short
 amount of time.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.RequestAudioFocus(.IOnAudioFocusChangeListener, Android.Media.Stream, Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusGainTransientExclusive">
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusGainTransientExclusive = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusGainTransientExclusive = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusGainTransientExclusive" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusGainTransientExclusive : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusGainTransientExclusive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Used to indicate a temporary request of audio focus, anticipated to last a short
 amount of time, during which no other applications, or system components, should play
 anything.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Media.AudioManager.RequestAudioFocus(.IOnAudioFocusChangeListener, Android.Media.Stream, Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusGainTransientMayDuck">
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusGainTransientMayDuck = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusGainTransientMayDuck = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusGainTransientMayDuck" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusGainTransientMayDuck : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusGainTransientMayDuck" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Used to indicate a temporary request of audio focus, anticipated to last a short
 amount of time, and where it is acceptable for other audio applications to keep playing
 after having lowered their output level (also referred to as "ducking").</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.RequestAudioFocus(.IOnAudioFocusChangeListener, Android.Media.Stream, Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusLoss">
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusLoss = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusLoss = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusLoss" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusLoss : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusLoss" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUDIOFOCUS_LOSS", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Used to indicate a loss of audio focus of unknown duration.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusLossTransient">
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusLossTransient = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusLossTransient = (-2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusLossTransient" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusLossTransient : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusLossTransient" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUDIOFOCUS_LOSS_TRANSIENT", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>Used to indicate a transient loss of audio focus.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusLossTransientCanDuck">
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusLossTransientCanDuck = -3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusLossTransientCanDuck = (-3)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusLossTransientCanDuck" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusLossTransientCanDuck : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusLossTransientCanDuck" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>-3</MemberValue>
      <Docs>
        <summary>Used to indicate a transient loss of audio focus where the loser of the audio focus can
 lower its output volume if it wants to continue playing (also referred to as "ducking"), as
 the new focus owner doesn't require others to be silent.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusNone">
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusNone" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusNone : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusNone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUDIOFOCUS_NONE", ApiSince=26)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudiofocusRequestDelayed">
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocusRequest AudiofocusRequestDelayed = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocusRequest AudiofocusRequestDelayed = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusRequestDelayed" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusRequestDelayed : Android.Media.AudioFocusRequest" Usage="Android.Media.AudioManager.AudiofocusRequestDelayed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUDIOFOCUS_REQUEST_DELAYED", ApiSince=26)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocusRequest enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudiofocusRequestFailed">
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocusRequest AudiofocusRequestFailed = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocusRequest AudiofocusRequestFailed = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusRequestFailed" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusRequestFailed : Android.Media.AudioFocusRequest" Usage="Android.Media.AudioManager.AudiofocusRequestFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocusRequest enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUDIOFOCUS_REQUEST_FAILED", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>A failed focus change request.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusRequestGranted">
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocusRequest AudiofocusRequestGranted = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocusRequest AudiofocusRequestGranted = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusRequestGranted" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusRequestGranted : Android.Media.AudioFocusRequest" Usage="Android.Media.AudioManager.AudiofocusRequestGranted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocusRequest enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUDIOFOCUS_REQUEST_GRANTED", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>A successful focus change request.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudioSessionIdGenerate">
      <MemberSignature Language="C#" Value="public const int AudioSessionIdGenerate = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 AudioSessionIdGenerate = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudioSessionIdGenerate" />
      <MemberSignature Language="F#" Value="val mutable AudioSessionIdGenerate : int" Usage="Android.Media.AudioManager.AudioSessionIdGenerate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("AUDIO_SESSION_ID_GENERATE", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>A special audio session ID to indicate that the audio session ID isn't known and the
 framework should generate a new value.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BluetoothA2dpOn">
      <MemberSignature Language="C#" Value="public virtual bool BluetoothA2dpOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BluetoothA2dpOn" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.BluetoothA2dpOn" />
      <MemberSignature Language="F#" Value="member this.BluetoothA2dpOn : bool with get, set" Usage="Android.Media.AudioManager.BluetoothA2dpOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isBluetoothA2dpOn", "()Z", "GetIsBluetoothA2dpOnHandler", ApiSince=3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setBluetoothA2dpOn", "(Z)V", "GetSetBluetoothA2dpOn_ZHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether A2DP audio routing to the Bluetooth headset is on or off.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="BluetoothScoOn">
      <MemberSignature Language="C#" Value="public virtual bool BluetoothScoOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BluetoothScoOn" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.BluetoothScoOn" />
      <MemberSignature Language="F#" Value="member this.BluetoothScoOn : bool with get, set" Usage="Android.Media.AudioManager.BluetoothScoOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isBluetoothScoOn", "()Z", "GetIsBluetoothScoOnHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setBluetoothScoOn", "(Z)V", "GetSetBluetoothScoOn_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether communications use Bluetooth SCO.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DispatchMediaKeyEvent">
      <MemberSignature Language="C#" Value="public virtual void DispatchMediaKeyEvent (Android.Views.KeyEvent keyEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchMediaKeyEvent(class Android.Views.KeyEvent keyEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.DispatchMediaKeyEvent(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchMediaKeyEvent : Android.Views.KeyEvent -&gt; unit&#xA;override this.DispatchMediaKeyEvent : Android.Views.KeyEvent -&gt; unit" Usage="audioManager.DispatchMediaKeyEvent keyEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dispatchMediaKeyEvent", "(Landroid/view/KeyEvent;)V", "GetDispatchMediaKeyEvent_Landroid_view_KeyEvent_Handler", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyEvent" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyEvent">a <see cref="T:Android.Views.KeyEvent" /> instance whose key code is one of
     <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='F:Android Views Keycode MediaMute';scope=Xamarin" title="F:Android.Views.Keycode.MediaMute">F:Android.Views.Keycode.MediaMute</a></format>,
     <see cref="F:Android.Views.Keycode.Headsethook" />,
     <see cref="F:Android.Views.Keycode.MediaPlay" />,
     <see cref="F:Android.Views.Keycode.MediaPause" />,
     <see cref="F:Android.Views.Keycode.MediaPlayPause" />,
     <see cref="F:Android.Views.Keycode.MediaStop" />,
     <see cref="F:Android.Views.Keycode.MediaNext" />,
     <see cref="F:Android.Views.Keycode.MediaPrevious" />,
     <see cref="F:Android.Views.Keycode.MediaRewind" />,
     <see cref="F:Android.Views.Keycode.MediaRecord" />,
     <see cref="F:Android.Views.Keycode.MediaFastForward" />,
     <see cref="F:Android.Views.Keycode.MediaClose" />,
     <see cref="F:Android.Views.Keycode.MediaEject" />,
     or <see cref="F:Android.Views.Keycode.MediaAudioTrack" />.
</param>
        <summary>Sends a simulated key event for a media button.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public const int Error = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Error = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.Error" />
      <MemberSignature Language="F#" Value="val mutable Error : int" Usage="Android.Media.AudioManager.Error" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ERROR", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>A default error code.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDeadObject">
      <MemberSignature Language="C#" Value="public const int ErrorDeadObject = -6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ErrorDeadObject = (-6)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ErrorDeadObject" />
      <MemberSignature Language="F#" Value="val mutable ErrorDeadObject : int" Usage="Android.Media.AudioManager.ErrorDeadObject" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ERROR_DEAD_OBJECT", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-6</MemberValue>
      <Docs>
        <summary>An error code indicating that the object reporting it is no longer valid and needs to
 be recreated.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraAudioPlugState">
      <MemberSignature Language="C#" Value="public const string ExtraAudioPlugState;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraAudioPlugState" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraAudioPlugState" />
      <MemberSignature Language="F#" Value="val mutable ExtraAudioPlugState : string" Usage="Android.Media.AudioManager.ExtraAudioPlugState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_AUDIO_PLUG_STATE", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra used in <see cref="F:Android.Media.AudioManager.ActionHdmiAudioPlug" /> to communicate whether HDMI is plugged in
 or unplugged.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraEncodings">
      <MemberSignature Language="C#" Value="public const string ExtraEncodings;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraEncodings" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraEncodings" />
      <MemberSignature Language="F#" Value="val mutable ExtraEncodings : string" Usage="Android.Media.AudioManager.ExtraEncodings" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_ENCODINGS", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra used in <see cref="F:Android.Media.AudioManager.ActionHdmiAudioPlug" /> to define the audio encodings supported by
 the connected HDMI device.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraMaxChannelCount">
      <MemberSignature Language="C#" Value="public const string ExtraMaxChannelCount;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMaxChannelCount" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraMaxChannelCount" />
      <MemberSignature Language="F#" Value="val mutable ExtraMaxChannelCount : string" Usage="Android.Media.AudioManager.ExtraMaxChannelCount" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_MAX_CHANNEL_COUNT", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra used in <see cref="F:Android.Media.AudioManager.ActionHdmiAudioPlug" /> to define the maximum number of channels
 supported by the HDMI device.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraRingerMode">
      <MemberSignature Language="C#" Value="public const string ExtraRingerMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraRingerMode" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraRingerMode" />
      <MemberSignature Language="F#" Value="val mutable ExtraRingerMode : string" Usage="Android.Media.AudioManager.ExtraRingerMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_RINGER_MODE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The new ringer mode.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.RingerModeChangedAction" />
      </Docs>
    </Member>
    <Member MemberName="ExtraScoAudioPreviousState">
      <MemberSignature Language="C#" Value="public const string ExtraScoAudioPreviousState;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraScoAudioPreviousState" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraScoAudioPreviousState" />
      <MemberSignature Language="F#" Value="val mutable ExtraScoAudioPreviousState : string" Usage="Android.Media.AudioManager.ExtraScoAudioPreviousState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_SCO_AUDIO_PREVIOUS_STATE", ApiSince=14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra for intent <see cref="F:Android.Media.AudioManager.ActionScoAudioStateUpdated" /> containing the previous
 bluetooth SCO connection state.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ExtraScoAudioState">
      <MemberSignature Language="C#" Value="public const string ExtraScoAudioState;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraScoAudioState" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraScoAudioState" />
      <MemberSignature Language="F#" Value="val mutable ExtraScoAudioState : string" Usage="Android.Media.AudioManager.ExtraScoAudioState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_SCO_AUDIO_STATE", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra for intent <see cref="F:Android.Media.AudioManager.ActionScoAudioStateChanged" /> or
 <see cref="F:Android.Media.AudioManager.ActionScoAudioStateUpdated" /> containing the new bluetooth SCO connection state.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ExtraVibrateSetting">
      <MemberSignature Language="C#" Value="public const string ExtraVibrateSetting;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraVibrateSetting" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraVibrateSetting" />
      <MemberSignature Language="F#" Value="val mutable ExtraVibrateSetting : string" Usage="Android.Media.AudioManager.ExtraVibrateSetting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_VIBRATE_SETTING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The new vibrate setting for a particular type.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.VibrateSettingChangedAction" />
        <altmember cref="F:Android.Media.AudioManager.ExtraVibrateType" />
      </Docs>
    </Member>
    <Member MemberName="ExtraVibrateType">
      <MemberSignature Language="C#" Value="public const string ExtraVibrateType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraVibrateType" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraVibrateType" />
      <MemberSignature Language="F#" Value="val mutable ExtraVibrateType : string" Usage="Android.Media.AudioManager.ExtraVibrateType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EXTRA_VIBRATE_TYPE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The vibrate type whose setting has changed.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.VibrateSettingChangedAction" />
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static Android.Media.AudioManager FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.AudioManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.FromContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member FromContext : Android.Content.Context -&gt; Android.Media.AudioManager" Usage="Android.Media.AudioManager.FromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Media.AudioManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateAudioSessionId">
      <MemberSignature Language="C#" Value="public virtual int GenerateAudioSessionId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GenerateAudioSessionId() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GenerateAudioSessionId" />
      <MemberSignature Language="F#" Value="abstract member GenerateAudioSessionId : unit -&gt; int&#xA;override this.GenerateAudioSessionId : unit -&gt; int" Usage="audioManager.GenerateAudioSessionId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("generateAudioSessionId", "()I", "GetGenerateAudioSessionIdHandler", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return a new audio session identifier not associated with any player or effect.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevices">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioDeviceInfo[] GetDevices (Android.Media.GetDevicesTargets flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.AudioDeviceInfo[] GetDevices(valuetype Android.Media.GetDevicesTargets flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetDevices(Android.Media.GetDevicesTargets)" />
      <MemberSignature Language="F#" Value="abstract member GetDevices : Android.Media.GetDevicesTargets -&gt; Android.Media.AudioDeviceInfo[]&#xA;override this.GetDevices : Android.Media.GetDevicesTargets -&gt; Android.Media.AudioDeviceInfo[]" Usage="audioManager.GetDevices flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDevices", "(I)[Landroid/media/AudioDeviceInfo;", "GetGetDevices_IHandler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioDeviceInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Media.GetDevicesTargets">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public virtual string GetParameters (string keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetParameters(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetParameters(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetParameters : string -&gt; string&#xA;override this.GetParameters : string -&gt; string" Usage="audioManager.GetParameters keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getParameters", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetParameters_Ljava_lang_String_Handler", ApiSince=5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">list of parameters</param>
        <summary>Gets a variable number of parameter values from audio hardware.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public virtual string GetProperty (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetProperty(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetProperty(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; string&#xA;override this.GetProperty : string -&gt; string" Usage="audioManager.GetProperty key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetProperty_Ljava_lang_String_Handler", ApiSince=17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">One of the strings corresponding to a property key: either
            <see cref="F:Android.Media.AudioManager.PropertyOutputSampleRate" /> or
            <see cref="F:Android.Media.AudioManager.PropertyOutputFramesPerBuffer" /></param>
        <summary>Returns the value of the property with the specified key.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetRouting">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Route GetRouting (Android.Media.Mode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.Route GetRouting(valuetype Android.Media.Mode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetRouting(Android.Media.Mode)" />
      <MemberSignature Language="F#" Value="abstract member GetRouting : Android.Media.Mode -&gt; Android.Media.Route&#xA;override this.GetRouting : Android.Media.Mode -&gt; Android.Media.Route" Usage="audioManager.GetRouting mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getRouting", "(I)I", "GetGetRouting_IHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Route</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Media.Mode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">audio mode to get route (e.g., MODE_RINGTONE)</param>
        <summary>Returns the current audio routing bit vector for a specified mode.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetStreamMaxVolume">
      <MemberSignature Language="C#" Value="public virtual int GetStreamMaxVolume (Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetStreamMaxVolume(valuetype Android.Media.Stream streamType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetStreamMaxVolume(Android.Media.Stream)" />
      <MemberSignature Language="F#" Value="abstract member GetStreamMaxVolume : Android.Media.Stream -&gt; int&#xA;override this.GetStreamMaxVolume : Android.Media.Stream -&gt; int" Usage="audioManager.GetStreamMaxVolume streamType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getStreamMaxVolume", "(I)I", "GetGetStreamMaxVolume_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream type whose maximum volume index is returned.</param>
        <summary>Returns the maximum volume index for a particular stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.GetStreamVolume(Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="GetStreamVolume">
      <MemberSignature Language="C#" Value="public virtual int GetStreamVolume (Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetStreamVolume(valuetype Android.Media.Stream streamType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetStreamVolume(Android.Media.Stream)" />
      <MemberSignature Language="F#" Value="abstract member GetStreamVolume : Android.Media.Stream -&gt; int&#xA;override this.GetStreamVolume : Android.Media.Stream -&gt; int" Usage="audioManager.GetStreamVolume streamType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getStreamVolume", "(I)I", "GetGetStreamVolume_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream type whose volume index is returned.</param>
        <summary>Returns the current volume index for a particular stream.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.GetStreamMaxVolume(Android.Media.Stream)" />
        <altmember cref="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetVibrateSetting">
      <MemberSignature Language="C#" Value="public virtual Android.Media.VibrateSetting GetVibrateSetting (Android.Media.VibrateType vibrateType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.VibrateSetting GetVibrateSetting(valuetype Android.Media.VibrateType vibrateType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetVibrateSetting(Android.Media.VibrateType)" />
      <MemberSignature Language="F#" Value="abstract member GetVibrateSetting : Android.Media.VibrateType -&gt; Android.Media.VibrateSetting&#xA;override this.GetVibrateSetting : Android.Media.VibrateType -&gt; Android.Media.VibrateSetting" Usage="audioManager.GetVibrateSetting vibrateType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getVibrateSetting", "(I)I", "GetGetVibrateSetting_IHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.VibrateSetting</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vibrateType" Type="Android.Media.VibrateType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vibrateType">The type of vibrate. One of
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager VIBRATE_TYPE_NOTIFICATION';scope=Xamarin" title="Android.Media.AudioManager.VIBRATE_TYPE_NOTIFICATION">Android.Media.AudioManager.VIBRATE_TYPE_NOTIFICATION</a></format> or
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager VIBRATE_TYPE_RINGER';scope=Xamarin" title="Android.Media.AudioManager.VIBRATE_TYPE_RINGER">Android.Media.AudioManager.VIBRATE_TYPE_RINGER</a></format>.</param>
        <summary>Returns whether the user's vibrate setting for a vibrate type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.SetVibrateSetting(Android.Media.VibrateType, Android.Media.VibrateSetting)" />
        <altmember cref="M:Android.Media.AudioManager.ShouldVibrate(Android.Media.VibrateType)" />
      </Docs>
    </Member>
    <Member MemberName="IsBluetoothScoAvailableOffCall">
      <MemberSignature Language="C#" Value="public virtual bool IsBluetoothScoAvailableOffCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBluetoothScoAvailableOffCall" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsBluetoothScoAvailableOffCall" />
      <MemberSignature Language="F#" Value="member this.IsBluetoothScoAvailableOffCall : bool" Usage="Android.Media.AudioManager.IsBluetoothScoAvailableOffCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isBluetoothScoAvailableOffCall", "()Z", "GetIsBluetoothScoAvailableOffCallHandler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if current platform supports use of SCO for off call use cases.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.StartBluetoothSco" />
      </Docs>
    </Member>
    <Member MemberName="IsMusicActive">
      <MemberSignature Language="C#" Value="public virtual bool IsMusicActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMusicActive" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsMusicActive" />
      <MemberSignature Language="F#" Value="member this.IsMusicActive : bool" Usage="Android.Media.AudioManager.IsMusicActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isMusicActive", "()Z", "GetIsMusicActiveHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether any music is active.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsStreamMute">
      <MemberSignature Language="C#" Value="public virtual bool IsStreamMute (Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStreamMute(valuetype Android.Media.Stream streamType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.IsStreamMute(Android.Media.Stream)" />
      <MemberSignature Language="F#" Value="abstract member IsStreamMute : Android.Media.Stream -&gt; bool&#xA;override this.IsStreamMute : Android.Media.Stream -&gt; bool" Usage="audioManager.IsStreamMute streamType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isStreamMute", "(I)Z", "GetIsStreamMute_IHandler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVolumeFixed">
      <MemberSignature Language="C#" Value="public virtual bool IsVolumeFixed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVolumeFixed" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsVolumeFixed" />
      <MemberSignature Language="F#" Value="member this.IsVolumeFixed : bool" Usage="Android.Media.AudioManager.IsVolumeFixed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isVolumeFixed", "()Z", "GetIsVolumeFixedHandler", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the device implements a fixed volume policy.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.AudioManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadSoundEffects">
      <MemberSignature Language="C#" Value="public virtual void LoadSoundEffects ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadSoundEffects() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.LoadSoundEffects" />
      <MemberSignature Language="F#" Value="abstract member LoadSoundEffects : unit -&gt; unit&#xA;override this.LoadSoundEffects : unit -&gt; unit" Usage="audioManager.LoadSoundEffects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("loadSoundEffects", "()V", "GetLoadSoundEffectsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Load Sound effects.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LoadSoundEffectsAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadSoundEffectsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadSoundEffectsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.LoadSoundEffectsAsync" />
      <MemberSignature Language="F#" Value="member this.LoadSoundEffectsAsync : unit -&gt; System.Threading.Tasks.Task" Usage="audioManager.LoadSoundEffectsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MicrophoneMute">
      <MemberSignature Language="C#" Value="public virtual bool MicrophoneMute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MicrophoneMute" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.MicrophoneMute" />
      <MemberSignature Language="F#" Value="member this.MicrophoneMute : bool with get, set" Usage="Android.Media.AudioManager.MicrophoneMute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isMicrophoneMute", "()Z", "GetIsMicrophoneMuteHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMicrophoneMute", "(Z)V", "GetSetMicrophoneMute_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether the microphone mute is on or off.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Mode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Mode Mode" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.Mode" />
      <MemberSignature Language="F#" Value="member this.Mode : Android.Media.Mode with get, set" Usage="Android.Media.AudioManager.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMode", "()I", "GetGetModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setMode", "(I)V", "GetSetMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Mode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current audio mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NumStreams">
      <MemberSignature Language="C#" Value="public const int NumStreams = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NumStreams = (5)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.NumStreams" />
      <MemberSignature Language="F#" Value="val mutable NumStreams : int" Usage="Android.Media.AudioManager.NumStreams" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NUM_STREAMS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PlaySoundEffect">
      <MemberSignature Language="C#" Value="public virtual void PlaySoundEffect (Android.Media.SoundEffect effectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PlaySoundEffect(valuetype Android.Media.SoundEffect effectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.PlaySoundEffect(Android.Media.SoundEffect)" />
      <MemberSignature Language="F#" Value="abstract member PlaySoundEffect : Android.Media.SoundEffect -&gt; unit&#xA;override this.PlaySoundEffect : Android.Media.SoundEffect -&gt; unit" Usage="audioManager.PlaySoundEffect effectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("playSoundEffect", "(I)V", "GetPlaySoundEffect_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effectType" Type="Android.Media.SoundEffect">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="effectType">The type of sound effect. One of
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_KEY_CLICK';scope=Xamarin" title="Android.Media.AudioManager.FX_KEY_CLICK">Android.Media.AudioManager.FX_KEY_CLICK</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_FOCUS_NAVIGATION_UP';scope=Xamarin" title="Android.Media.AudioManager.FX_FOCUS_NAVIGATION_UP">Android.Media.AudioManager.FX_FOCUS_NAVIGATION_UP</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_FOCUS_NAVIGATION_DOWN';scope=Xamarin" title="Android.Media.AudioManager.FX_FOCUS_NAVIGATION_DOWN">Android.Media.AudioManager.FX_FOCUS_NAVIGATION_DOWN</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_FOCUS_NAVIGATION_LEFT';scope=Xamarin" title="Android.Media.AudioManager.FX_FOCUS_NAVIGATION_LEFT">Android.Media.AudioManager.FX_FOCUS_NAVIGATION_LEFT</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_FOCUS_NAVIGATION_RIGHT';scope=Xamarin" title="Android.Media.AudioManager.FX_FOCUS_NAVIGATION_RIGHT">Android.Media.AudioManager.FX_FOCUS_NAVIGATION_RIGHT</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_KEYPRESS_STANDARD';scope=Xamarin" title="Android.Media.AudioManager.FX_KEYPRESS_STANDARD">Android.Media.AudioManager.FX_KEYPRESS_STANDARD</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_KEYPRESS_SPACEBAR';scope=Xamarin" title="Android.Media.AudioManager.FX_KEYPRESS_SPACEBAR">Android.Media.AudioManager.FX_KEYPRESS_SPACEBAR</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_KEYPRESS_DELETE';scope=Xamarin" title="Android.Media.AudioManager.FX_KEYPRESS_DELETE">Android.Media.AudioManager.FX_KEYPRESS_DELETE</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_KEYPRESS_RETURN';scope=Xamarin" title="Android.Media.AudioManager.FX_KEYPRESS_RETURN">Android.Media.AudioManager.FX_KEYPRESS_RETURN</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_KEYPRESS_INVALID';scope=Xamarin" title="Android.Media.AudioManager.FX_KEYPRESS_INVALID">Android.Media.AudioManager.FX_KEYPRESS_INVALID</a></format>,
 NOTE: This version uses the UI settings to determine
 whether sounds are heard or not.
</param>
        <summary tool="true">Plays a sound effect (Key clicks, lid open/close.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PlaySoundEffect">
      <MemberSignature Language="C#" Value="public virtual void PlaySoundEffect (Android.Media.SoundEffect effectType, float volume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PlaySoundEffect(valuetype Android.Media.SoundEffect effectType, float32 volume) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.PlaySoundEffect(Android.Media.SoundEffect,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member PlaySoundEffect : Android.Media.SoundEffect * single -&gt; unit&#xA;override this.PlaySoundEffect : Android.Media.SoundEffect * single -&gt; unit" Usage="audioManager.PlaySoundEffect (effectType, volume)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("playSoundEffect", "(IF)V", "GetPlaySoundEffect_IFHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effectType" Type="Android.Media.SoundEffect">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="volume" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="effectType">The type of sound effect. One of
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_KEY_CLICK';scope=Xamarin" title="Android.Media.AudioManager.FX_KEY_CLICK">Android.Media.AudioManager.FX_KEY_CLICK</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_FOCUS_NAVIGATION_UP';scope=Xamarin" title="Android.Media.AudioManager.FX_FOCUS_NAVIGATION_UP">Android.Media.AudioManager.FX_FOCUS_NAVIGATION_UP</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_FOCUS_NAVIGATION_DOWN';scope=Xamarin" title="Android.Media.AudioManager.FX_FOCUS_NAVIGATION_DOWN">Android.Media.AudioManager.FX_FOCUS_NAVIGATION_DOWN</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_FOCUS_NAVIGATION_LEFT';scope=Xamarin" title="Android.Media.AudioManager.FX_FOCUS_NAVIGATION_LEFT">Android.Media.AudioManager.FX_FOCUS_NAVIGATION_LEFT</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_FOCUS_NAVIGATION_RIGHT';scope=Xamarin" title="Android.Media.AudioManager.FX_FOCUS_NAVIGATION_RIGHT">Android.Media.AudioManager.FX_FOCUS_NAVIGATION_RIGHT</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_KEYPRESS_STANDARD';scope=Xamarin" title="Android.Media.AudioManager.FX_KEYPRESS_STANDARD">Android.Media.AudioManager.FX_KEYPRESS_STANDARD</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_KEYPRESS_SPACEBAR';scope=Xamarin" title="Android.Media.AudioManager.FX_KEYPRESS_SPACEBAR">Android.Media.AudioManager.FX_KEYPRESS_SPACEBAR</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_KEYPRESS_DELETE';scope=Xamarin" title="Android.Media.AudioManager.FX_KEYPRESS_DELETE">Android.Media.AudioManager.FX_KEYPRESS_DELETE</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_KEYPRESS_RETURN';scope=Xamarin" title="Android.Media.AudioManager.FX_KEYPRESS_RETURN">Android.Media.AudioManager.FX_KEYPRESS_RETURN</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager FX_KEYPRESS_INVALID';scope=Xamarin" title="Android.Media.AudioManager.FX_KEYPRESS_INVALID">Android.Media.AudioManager.FX_KEYPRESS_INVALID</a></format>,</param>
        <param name="volume">Sound effect volume.
 The volume value is a raw scalar so UI controls should be scaled logarithmically.
 If a volume of -1 is specified, the AudioManager.STREAM_MUSIC stream volume minus 3dB will be used.
 NOTE: This version is for applications that have their own
 settings panel for enabling and controlling volume.
</param>
        <summary>Plays a sound effect (Key clicks, lid open/close.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PropertyOutputFramesPerBuffer">
      <MemberSignature Language="C#" Value="public const string PropertyOutputFramesPerBuffer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyOutputFramesPerBuffer" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertyOutputFramesPerBuffer" />
      <MemberSignature Language="F#" Value="val mutable PropertyOutputFramesPerBuffer : string" Usage="Android.Media.AudioManager.PropertyOutputFramesPerBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROPERTY_OUTPUT_FRAMES_PER_BUFFER", ApiSince=17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used as a key for <see cref="M:Android.Media.AudioManager.GetProperty(System.String)" /> to request the native or optimal output buffer size
 for this device's primary output stream, in decimal PCM frames.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="PropertyOutputSampleRate">
      <MemberSignature Language="C#" Value="public const string PropertyOutputSampleRate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyOutputSampleRate" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertyOutputSampleRate" />
      <MemberSignature Language="F#" Value="val mutable PropertyOutputSampleRate : string" Usage="Android.Media.AudioManager.PropertyOutputSampleRate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROPERTY_OUTPUT_SAMPLE_RATE", ApiSince=17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used as a key for <see cref="M:Android.Media.AudioManager.GetProperty(System.String)" /> to request the native or optimal output sample rate
 for this device's primary output stream, in decimal Hz.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="PropertySupportAudioSourceUnprocessed">
      <MemberSignature Language="C#" Value="public const string PropertySupportAudioSourceUnprocessed;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertySupportAudioSourceUnprocessed" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertySupportAudioSourceUnprocessed" />
      <MemberSignature Language="F#" Value="val mutable PropertySupportAudioSourceUnprocessed : string" Usage="Android.Media.AudioManager.PropertySupportAudioSourceUnprocessed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertySupportMicNearUltrasound">
      <MemberSignature Language="C#" Value="public const string PropertySupportMicNearUltrasound;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertySupportMicNearUltrasound" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertySupportMicNearUltrasound" />
      <MemberSignature Language="F#" Value="val mutable PropertySupportMicNearUltrasound : string" Usage="Android.Media.AudioManager.PropertySupportMicNearUltrasound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertySupportSpeakerNearUltrasound">
      <MemberSignature Language="C#" Value="public const string PropertySupportSpeakerNearUltrasound;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertySupportSpeakerNearUltrasound" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertySupportSpeakerNearUltrasound" />
      <MemberSignature Language="F#" Value="val mutable PropertySupportSpeakerNearUltrasound : string" Usage="Android.Media.AudioManager.PropertySupportSpeakerNearUltrasound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAudioDeviceCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterAudioDeviceCallback (Android.Media.AudioDeviceCallback callback, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAudioDeviceCallback(class Android.Media.AudioDeviceCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterAudioDeviceCallback(Android.Media.AudioDeviceCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterAudioDeviceCallback : Android.Media.AudioDeviceCallback * Android.OS.Handler -&gt; unit&#xA;override this.RegisterAudioDeviceCallback : Android.Media.AudioDeviceCallback * Android.OS.Handler -&gt; unit" Usage="audioManager.RegisterAudioDeviceCallback (callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerAudioDeviceCallback", "(Landroid/media/AudioDeviceCallback;Landroid/os/Handler;)V", "GetRegisterAudioDeviceCallback_Landroid_media_AudioDeviceCallback_Landroid_os_Handler_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.AudioDeviceCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAudioPlaybackCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterAudioPlaybackCallback (Android.Media.AudioManager.AudioPlaybackCallback cb, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAudioPlaybackCallback(class Android.Media.AudioManager/AudioPlaybackCallback cb, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterAudioPlaybackCallback(Android.Media.AudioManager.AudioPlaybackCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterAudioPlaybackCallback : Android.Media.AudioManager.AudioPlaybackCallback * Android.OS.Handler -&gt; unit&#xA;override this.RegisterAudioPlaybackCallback : Android.Media.AudioManager.AudioPlaybackCallback * Android.OS.Handler -&gt; unit" Usage="audioManager.RegisterAudioPlaybackCallback (cb, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerAudioPlaybackCallback", "(Landroid/media/AudioManager$AudioPlaybackCallback;Landroid/os/Handler;)V", "GetRegisterAudioPlaybackCallback_Landroid_media_AudioManager_AudioPlaybackCallback_Landroid_os_Handler_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioPlaybackCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="cb">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAudioRecordingCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterAudioRecordingCallback (Android.Media.AudioManager.AudioRecordingCallback cb, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAudioRecordingCallback(class Android.Media.AudioManager/AudioRecordingCallback cb, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterAudioRecordingCallback(Android.Media.AudioManager.AudioRecordingCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback * Android.OS.Handler -&gt; unit&#xA;override this.RegisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback * Android.OS.Handler -&gt; unit" Usage="audioManager.RegisterAudioRecordingCallback (cb, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerAudioRecordingCallback", "(Landroid/media/AudioManager$AudioRecordingCallback;Landroid/os/Handler;)V", "GetRegisterAudioRecordingCallback_Landroid_media_AudioManager_AudioRecordingCallback_Landroid_os_Handler_Handler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioRecordingCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="cb">To be added.</param>
        <param name="handler">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterMediaButtonEventReceiver">
      <MemberSignature Language="C#" Value="public virtual void RegisterMediaButtonEventReceiver (Android.App.PendingIntent eventReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterMediaButtonEventReceiver(class Android.App.PendingIntent eventReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterMediaButtonEventReceiver(Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member RegisterMediaButtonEventReceiver : Android.App.PendingIntent -&gt; unit&#xA;override this.RegisterMediaButtonEventReceiver : Android.App.PendingIntent -&gt; unit" Usage="audioManager.RegisterMediaButtonEventReceiver eventReceiver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerMediaButtonEventReceiver", "(Landroid/app/PendingIntent;)V", "GetRegisterMediaButtonEventReceiver_Landroid_app_PendingIntent_Handler", ApiSince=18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventReceiver" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="eventReceiver">target that will receive media button intents.  The PendingIntent
 will be sent an <see cref="F:Android.Content.Intent.ActionMediaButton" /> event when a media button action
 occurs, with <see cref="F:Android.Content.Intent.ExtraKeyEvent" /> added and holding the key code of the
 media button that was pressed.</param>
        <summary>Register a component to be the sole receiver of MEDIA_BUTTON intents.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="RegisterMediaButtonEventReceiver">
      <MemberSignature Language="C#" Value="public virtual void RegisterMediaButtonEventReceiver (Android.Content.ComponentName eventReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterMediaButtonEventReceiver(class Android.Content.ComponentName eventReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterMediaButtonEventReceiver(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member RegisterMediaButtonEventReceiver : Android.Content.ComponentName -&gt; unit&#xA;override this.RegisterMediaButtonEventReceiver : Android.Content.ComponentName -&gt; unit" Usage="audioManager.RegisterMediaButtonEventReceiver eventReceiver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerMediaButtonEventReceiver", "(Landroid/content/ComponentName;)V", "GetRegisterMediaButtonEventReceiver_Landroid_content_ComponentName_Handler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventReceiver" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="eventReceiver">identifier of a <see cref="T:Android.Content.BroadcastReceiver" />
      that will receive the media button intent. This broadcast receiver must be declared
      in the application manifest. The package of the component must match that of
      the context you're registering from.</param>
        <summary>Register a component to be the sole receiver of MEDIA_BUTTON intents.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRemoteControlClient">
      <MemberSignature Language="C#" Value="public virtual void RegisterRemoteControlClient (Android.Media.RemoteControlClient rcClient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRemoteControlClient(class Android.Media.RemoteControlClient rcClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterRemoteControlClient(Android.Media.RemoteControlClient)" />
      <MemberSignature Language="F#" Value="abstract member RegisterRemoteControlClient : Android.Media.RemoteControlClient -&gt; unit&#xA;override this.RegisterRemoteControlClient : Android.Media.RemoteControlClient -&gt; unit" Usage="audioManager.RegisterRemoteControlClient rcClient" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerRemoteControlClient", "(Landroid/media/RemoteControlClient;)V", "GetRegisterRemoteControlClient_Landroid_media_RemoteControlClient_Handler", ApiSince=14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rcClient" Type="Android.Media.RemoteControlClient" />
      </Parameters>
      <Docs>
        <param name="rcClient">The remote control client from which remote controls will receive
      information to display.</param>
        <summary>Registers the remote control client for providing information to display on the remote
 controls.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="T:Android.Media.RemoteControlClient" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRemoteController">
      <MemberSignature Language="C#" Value="public virtual bool RegisterRemoteController (Android.Media.RemoteController rctlr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterRemoteController(class Android.Media.RemoteController rctlr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterRemoteController(Android.Media.RemoteController)" />
      <MemberSignature Language="F#" Value="abstract member RegisterRemoteController : Android.Media.RemoteController -&gt; bool&#xA;override this.RegisterRemoteController : Android.Media.RemoteController -&gt; bool" Usage="audioManager.RegisterRemoteController rctlr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("registerRemoteController", "(Landroid/media/RemoteController;)Z", "GetRegisterRemoteController_Landroid_media_RemoteController_Handler", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rctlr" Type="Android.Media.RemoteController" />
      </Parameters>
      <Docs>
        <param name="rctlr">the object to register.</param>
        <summary>Registers a <see cref="T:Android.Media.RemoteController" /> instance for it to receive media
 metadata updates and playback state information from applications using
 <see cref="T:Android.Media.RemoteControlClient" />, and control their playback.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestAudioFocus">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFocusRequest RequestAudioFocus (Android.Media.AudioFocusRequestClass focusRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.AudioFocusRequest RequestAudioFocus(class Android.Media.AudioFocusRequestClass focusRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RequestAudioFocus(Android.Media.AudioFocusRequestClass)" />
      <MemberSignature Language="F#" Value="abstract member RequestAudioFocus : Android.Media.AudioFocusRequestClass -&gt; Android.Media.AudioFocusRequest&#xA;override this.RequestAudioFocus : Android.Media.AudioFocusRequestClass -&gt; Android.Media.AudioFocusRequest" Usage="audioManager.RequestAudioFocus focusRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestAudioFocus", "(Landroid/media/AudioFocusRequest;)I", "GetRequestAudioFocus_Landroid_media_AudioFocusRequest_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusRequest" Type="Android.Media.AudioFocusRequestClass" />
      </Parameters>
      <Docs>
        <param name="focusRequest">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestAudioFocus">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFocusRequest RequestAudioFocus (Android.Media.AudioManager.IOnAudioFocusChangeListener l, Android.Media.Stream streamType, Android.Media.AudioFocus durationHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.AudioFocusRequest RequestAudioFocus(class Android.Media.AudioManager/IOnAudioFocusChangeListener l, valuetype Android.Media.Stream streamType, valuetype Android.Media.AudioFocus durationHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RequestAudioFocus(Android.Media.AudioManager.IOnAudioFocusChangeListener,Android.Media.Stream,Android.Media.AudioFocus)" />
      <MemberSignature Language="F#" Value="abstract member RequestAudioFocus : Android.Media.AudioManager.IOnAudioFocusChangeListener * Android.Media.Stream * Android.Media.AudioFocus -&gt; Android.Media.AudioFocusRequest&#xA;override this.RequestAudioFocus : Android.Media.AudioManager.IOnAudioFocusChangeListener * Android.Media.Stream * Android.Media.AudioFocus -&gt; Android.Media.AudioFocusRequest" Usage="audioManager.RequestAudioFocus (l, streamType, durationHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("requestAudioFocus", "(Landroid/media/AudioManager$OnAudioFocusChangeListener;II)I", "GetRequestAudioFocus_Landroid_media_AudioManager_OnAudioFocusChangeListener_IIHandler", ApiSince=8)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Media.AudioManager+IOnAudioFocusChangeListener" />
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="durationHint" Type="Android.Media.AudioFocus">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="l">the listener to be notified of audio focus changes</param>
        <param name="streamType">the main audio stream type affected by the focus request</param>
        <param name="durationHint">use <see cref="F:Android.Media.AudioManager.AudiofocusGainTransient" /> to indicate this focus request
      is temporary, and focus will be abandonned shortly. Examples of transient requests are
      for the playback of driving directions, or notifications sounds.
      Use <see cref="F:Android.Media.AudioManager.AudiofocusGainTransientMayDuck" /> to indicate also that it's ok for
      the previous focus owner to keep playing if it ducks its audio output.
      Alternatively use <see cref="F:Android.Media.AudioManager.AudiofocusGainTransientExclusive" /> for a temporary request
      that benefits from the system not playing disruptive sounds like notifications, for
      usecases such as voice memo recording, or speech recognition.
      Use <see cref="F:Android.Media.AudioManager.AudiofocusGain" /> for a focus request of unknown duration such
      as the playback of a song or a video.</param>
        <summary>Request audio focus.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="RingerMode">
      <MemberSignature Language="C#" Value="public virtual Android.Media.RingerMode RingerMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.RingerMode RingerMode" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.RingerMode" />
      <MemberSignature Language="F#" Value="member this.RingerMode : Android.Media.RingerMode with get, set" Usage="Android.Media.AudioManager.RingerMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRingerMode", "()I", "GetGetRingerModeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setRingerMode", "(I)V", "GetSetRingerMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RingerMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current ringtone mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Media.AudioManager.RingerMode" />
        <altmember cref="P:Android.Media.AudioManager.RingerMode" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="RingerModeChangedAction">
      <MemberSignature Language="C#" Value="public const string RingerModeChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string RingerModeChangedAction" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.RingerModeChangedAction" />
      <MemberSignature Language="F#" Value="val mutable RingerModeChangedAction : string" Usage="Android.Media.AudioManager.RingerModeChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("RINGER_MODE_CHANGED_ACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sticky broadcast intent action indicating that the ringer mode has
 changed.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.ExtraRingerMode" />
      </Docs>
    </Member>
    <Member MemberName="ScoAudioStateConnected">
      <MemberSignature Language="C#" Value="public const Android.Media.ScoAudioState ScoAudioStateConnected = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.ScoAudioState ScoAudioStateConnected = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ScoAudioStateConnected" />
      <MemberSignature Language="F#" Value="val mutable ScoAudioStateConnected : Android.Media.ScoAudioState" Usage="Android.Media.AudioManager.ScoAudioStateConnected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCO_AUDIO_STATE_CONNECTED", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ScoAudioState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Value for extra <see cref="F:Android.Media.AudioManager.ExtraScoAudioState" /> or <see cref="F:Android.Media.AudioManager.ExtraScoAudioPreviousState" />
 indicating that the SCO audio channel is established
</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ScoAudioStateConnecting">
      <MemberSignature Language="C#" Value="public const Android.Media.ScoAudioState ScoAudioStateConnecting = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.ScoAudioState ScoAudioStateConnecting = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ScoAudioStateConnecting" />
      <MemberSignature Language="F#" Value="val mutable ScoAudioStateConnecting : Android.Media.ScoAudioState" Usage="Android.Media.AudioManager.ScoAudioStateConnecting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCO_AUDIO_STATE_CONNECTING", ApiSince=14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ScoAudioState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE
 indicating that the SCO audio channel is being established
</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ScoAudioStateDisconnected">
      <MemberSignature Language="C#" Value="public const Android.Media.ScoAudioState ScoAudioStateDisconnected = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.ScoAudioState ScoAudioStateDisconnected = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ScoAudioStateDisconnected" />
      <MemberSignature Language="F#" Value="val mutable ScoAudioStateDisconnected : Android.Media.ScoAudioState" Usage="Android.Media.AudioManager.ScoAudioStateDisconnected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCO_AUDIO_STATE_DISCONNECTED", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ScoAudioState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE
 indicating that the SCO audio channel is not established
</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ScoAudioStateError">
      <MemberSignature Language="C#" Value="public const Android.Media.ScoAudioState ScoAudioStateError = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.ScoAudioState ScoAudioStateError = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ScoAudioStateError" />
      <MemberSignature Language="F#" Value="val mutable ScoAudioStateError : Android.Media.ScoAudioState" Usage="Android.Media.AudioManager.ScoAudioStateError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCO_AUDIO_STATE_ERROR", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ScoAudioState</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Value for extra EXTRA_SCO_AUDIO_STATE indicating that
 there was an error trying to obtain the state
</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public virtual void SetParameters (string keyValuePairs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetParameters(string keyValuePairs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetParameters(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetParameters : string -&gt; unit&#xA;override this.SetParameters : string -&gt; unit" Usage="audioManager.SetParameters keyValuePairs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setParameters", "(Ljava/lang/String;)V", "GetSetParameters_Ljava_lang_String_Handler", ApiSince=5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePairs" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyValuePairs">list of parameters key value pairs in the form:
    key1=value1;key2=value2;...

</param>
        <summary>Sets a variable number of parameter values to audio hardware.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetRouting">
      <MemberSignature Language="C#" Value="public virtual void SetRouting (Android.Media.Mode mode, Android.Media.Route routes, Android.Media.Route mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRouting(valuetype Android.Media.Mode mode, valuetype Android.Media.Route routes, valuetype Android.Media.Route mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetRouting(Android.Media.Mode,Android.Media.Route,Android.Media.Route)" />
      <MemberSignature Language="F#" Value="abstract member SetRouting : Android.Media.Mode * Android.Media.Route * Android.Media.Route -&gt; unit&#xA;override this.SetRouting : Android.Media.Mode * Android.Media.Route * Android.Media.Route -&gt; unit" Usage="audioManager.SetRouting (mode, routes, mask)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRouting", "(III)V", "GetSetRouting_IIIHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Media.Mode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="routes" Type="Android.Media.Route">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="mask" Type="Android.Media.Route">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">audio mode to change route. E.g., MODE_RINGTONE.</param>
        <param name="routes">bit vector of routes requested, created from one or
               more of ROUTE_xxx types. Set bits indicate that route should be on</param>
        <param name="mask">bit vector of routes to change, created from one or more of
 ROUTE_xxx types. Unset bits indicate the route should be left unchanged</param>
        <summary>Sets the audio routing for a specified mode</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetStreamMute">
      <MemberSignature Language="C#" Value="public virtual void SetStreamMute (Android.Media.Stream streamType, bool state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStreamMute(valuetype Android.Media.Stream streamType, bool state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetStreamMute(Android.Media.Stream,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetStreamMute : Android.Media.Stream * bool -&gt; unit&#xA;override this.SetStreamMute : Android.Media.Stream * bool -&gt; unit" Usage="audioManager.SetStreamMute (streamType, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStreamMute", "(IZ)V", "GetSetStreamMute_IZHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="state" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamType">The stream to be muted/unmuted.</param>
        <param name="state">The required mute state: true for mute ON, false for mute
            OFF</param>
        <summary>Mute or unmute an audio stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="SetStreamSolo">
      <MemberSignature Language="C#" Value="public virtual void SetStreamSolo (Android.Media.Stream streamType, bool state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStreamSolo(valuetype Android.Media.Stream streamType, bool state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetStreamSolo(Android.Media.Stream,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetStreamSolo : Android.Media.Stream * bool -&gt; unit&#xA;override this.SetStreamSolo : Android.Media.Stream * bool -&gt; unit" Usage="audioManager.SetStreamSolo (streamType, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStreamSolo", "(IZ)V", "GetSetStreamSolo_IZHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="state" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamType">The stream to be soloed/unsoloed.</param>
        <param name="state">The required solo state: true for solo ON, false for solo
            OFF</param>
        <summary>Solo or unsolo a particular stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="SetStreamVolume">
      <MemberSignature Language="C#" Value="public virtual void SetStreamVolume (Android.Media.Stream streamType, int index, Android.Media.VolumeNotificationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStreamVolume(valuetype Android.Media.Stream streamType, int32 index, valuetype Android.Media.VolumeNotificationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream,System.Int32,Android.Media.VolumeNotificationFlags)" />
      <MemberSignature Language="F#" Value="abstract member SetStreamVolume : Android.Media.Stream * int * Android.Media.VolumeNotificationFlags -&gt; unit&#xA;override this.SetStreamVolume : Android.Media.Stream * int * Android.Media.VolumeNotificationFlags -&gt; unit" Usage="audioManager.SetStreamVolume (streamType, index, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setStreamVolume", "(III)V", "GetSetStreamVolume_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Media.VolumeNotificationFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream whose volume index should be set.</param>
        <param name="index">The volume index to set. See
            <see cref="M:Android.Media.AudioManager.GetStreamMaxVolume(Android.Media.Stream)" /> for the largest valid value.</param>
        <param name="flags">One or more flags.</param>
        <summary>Sets the volume index for a particular stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.GetStreamMaxVolume(Android.Media.Stream)" />
        <altmember cref="M:Android.Media.AudioManager.GetStreamVolume(Android.Media.Stream)" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="SetVibrateSetting">
      <MemberSignature Language="C#" Value="public virtual void SetVibrateSetting (Android.Media.VibrateType vibrateType, Android.Media.VibrateSetting vibrateSetting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVibrateSetting(valuetype Android.Media.VibrateType vibrateType, valuetype Android.Media.VibrateSetting vibrateSetting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetVibrateSetting(Android.Media.VibrateType,Android.Media.VibrateSetting)" />
      <MemberSignature Language="F#" Value="abstract member SetVibrateSetting : Android.Media.VibrateType * Android.Media.VibrateSetting -&gt; unit&#xA;override this.SetVibrateSetting : Android.Media.VibrateType * Android.Media.VibrateSetting -&gt; unit" Usage="audioManager.SetVibrateSetting (vibrateType, vibrateSetting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVibrateSetting", "(II)V", "GetSetVibrateSetting_IIHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vibrateType" Type="Android.Media.VibrateType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="vibrateSetting" Type="Android.Media.VibrateSetting">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vibrateType">The type of vibrate. One of
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager VIBRATE_TYPE_NOTIFICATION';scope=Xamarin" title="Android.Media.AudioManager.VIBRATE_TYPE_NOTIFICATION">Android.Media.AudioManager.VIBRATE_TYPE_NOTIFICATION</a></format> or
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager VIBRATE_TYPE_RINGER';scope=Xamarin" title="Android.Media.AudioManager.VIBRATE_TYPE_RINGER">Android.Media.AudioManager.VIBRATE_TYPE_RINGER</a></format>.</param>
        <param name="vibrateSetting">The vibrate setting, one of
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager VIBRATE_SETTING_ON';scope=Xamarin" title="Android.Media.AudioManager.VIBRATE_SETTING_ON">Android.Media.AudioManager.VIBRATE_SETTING_ON</a></format>,
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager VIBRATE_SETTING_OFF';scope=Xamarin" title="Android.Media.AudioManager.VIBRATE_SETTING_OFF">Android.Media.AudioManager.VIBRATE_SETTING_OFF</a></format>, or
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager VIBRATE_SETTING_ONLY_SILENT';scope=Xamarin" title="Android.Media.AudioManager.VIBRATE_SETTING_ONLY_SILENT">Android.Media.AudioManager.VIBRATE_SETTING_ONLY_SILENT</a></format>.</param>
        <summary>Sets the setting for when the vibrate type should vibrate.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.GetVibrateSetting(Android.Media.VibrateType)" />
        <altmember cref="M:Android.Media.AudioManager.ShouldVibrate(Android.Media.VibrateType)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldVibrate">
      <MemberSignature Language="C#" Value="public virtual bool ShouldVibrate (Android.Media.VibrateType vibrateType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldVibrate(valuetype Android.Media.VibrateType vibrateType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.ShouldVibrate(Android.Media.VibrateType)" />
      <MemberSignature Language="F#" Value="abstract member ShouldVibrate : Android.Media.VibrateType -&gt; bool&#xA;override this.ShouldVibrate : Android.Media.VibrateType -&gt; bool" Usage="audioManager.ShouldVibrate vibrateType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("shouldVibrate", "(I)Z", "GetShouldVibrate_IHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vibrateType" Type="Android.Media.VibrateType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vibrateType">The type of vibrate. One of
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager VIBRATE_TYPE_NOTIFICATION';scope=Xamarin" title="Android.Media.AudioManager.VIBRATE_TYPE_NOTIFICATION">Android.Media.AudioManager.VIBRATE_TYPE_NOTIFICATION</a></format> or
            <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Media AudioManager VIBRATE_TYPE_RINGER';scope=Xamarin" title="Android.Media.AudioManager.VIBRATE_TYPE_RINGER">Android.Media.AudioManager.VIBRATE_TYPE_RINGER</a></format>.</param>
        <summary>Returns whether a particular type should vibrate according to user
 settings and the current ringer mode.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.SetVibrateSetting(Android.Media.VibrateType, Android.Media.VibrateSetting)" />
        <altmember cref="M:Android.Media.AudioManager.GetVibrateSetting(Android.Media.VibrateType)" />
      </Docs>
    </Member>
    <Member MemberName="SpeakerphoneOn">
      <MemberSignature Language="C#" Value="public virtual bool SpeakerphoneOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpeakerphoneOn" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.SpeakerphoneOn" />
      <MemberSignature Language="F#" Value="member this.SpeakerphoneOn : bool with get, set" Usage="Android.Media.AudioManager.SpeakerphoneOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isSpeakerphoneOn", "()Z", "GetIsSpeakerphoneOnHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSpeakerphoneOn", "(Z)V", "GetSetSpeakerphoneOn_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether the speakerphone is on or off.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartBluetoothSco">
      <MemberSignature Language="C#" Value="public virtual void StartBluetoothSco ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartBluetoothSco() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.StartBluetoothSco" />
      <MemberSignature Language="F#" Value="abstract member StartBluetoothSco : unit -&gt; unit&#xA;override this.StartBluetoothSco : unit -&gt; unit" Usage="audioManager.StartBluetoothSco " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startBluetoothSco", "()V", "GetStartBluetoothScoHandler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Start bluetooth SCO audio connection.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.StopBluetoothSco" />
        <altmember cref="F:Android.Media.AudioManager.ActionScoAudioStateUpdated" />
      </Docs>
    </Member>
    <Member MemberName="StopBluetoothSco">
      <MemberSignature Language="C#" Value="public virtual void StopBluetoothSco ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopBluetoothSco() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.StopBluetoothSco" />
      <MemberSignature Language="F#" Value="abstract member StopBluetoothSco : unit -&gt; unit&#xA;override this.StopBluetoothSco : unit -&gt; unit" Usage="audioManager.StopBluetoothSco " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopBluetoothSco", "()V", "GetStopBluetoothScoHandler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop bluetooth SCO audio connection.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.StartBluetoothSco" />
      </Docs>
    </Member>
    <Member MemberName="StreamAccessibility">
      <MemberSignature Language="C#" Value="public const int StreamAccessibility = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 StreamAccessibility = (10)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.StreamAccessibility" />
      <MemberSignature Language="F#" Value="val mutable StreamAccessibility : int" Usage="Android.Media.AudioManager.StreamAccessibility" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STREAM_ACCESSIBILITY", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.AudioManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.AudioManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadSoundEffects">
      <MemberSignature Language="C#" Value="public virtual void UnloadSoundEffects ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnloadSoundEffects() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnloadSoundEffects" />
      <MemberSignature Language="F#" Value="abstract member UnloadSoundEffects : unit -&gt; unit&#xA;override this.UnloadSoundEffects : unit -&gt; unit" Usage="audioManager.UnloadSoundEffects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unloadSoundEffects", "()V", "GetUnloadSoundEffectsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unload Sound effects.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterAudioDeviceCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterAudioDeviceCallback (Android.Media.AudioDeviceCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterAudioDeviceCallback(class Android.Media.AudioDeviceCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterAudioDeviceCallback(Android.Media.AudioDeviceCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterAudioDeviceCallback : Android.Media.AudioDeviceCallback -&gt; unit&#xA;override this.UnregisterAudioDeviceCallback : Android.Media.AudioDeviceCallback -&gt; unit" Usage="audioManager.UnregisterAudioDeviceCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterAudioDeviceCallback", "(Landroid/media/AudioDeviceCallback;)V", "GetUnregisterAudioDeviceCallback_Landroid_media_AudioDeviceCallback_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.AudioDeviceCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAudioPlaybackCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterAudioPlaybackCallback (Android.Media.AudioManager.AudioPlaybackCallback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterAudioPlaybackCallback(class Android.Media.AudioManager/AudioPlaybackCallback cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterAudioPlaybackCallback(Android.Media.AudioManager.AudioPlaybackCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterAudioPlaybackCallback : Android.Media.AudioManager.AudioPlaybackCallback -&gt; unit&#xA;override this.UnregisterAudioPlaybackCallback : Android.Media.AudioManager.AudioPlaybackCallback -&gt; unit" Usage="audioManager.UnregisterAudioPlaybackCallback cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterAudioPlaybackCallback", "(Landroid/media/AudioManager$AudioPlaybackCallback;)V", "GetUnregisterAudioPlaybackCallback_Landroid_media_AudioManager_AudioPlaybackCallback_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioPlaybackCallback" />
      </Parameters>
      <Docs>
        <param name="cb">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAudioRecordingCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterAudioRecordingCallback (Android.Media.AudioManager.AudioRecordingCallback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterAudioRecordingCallback(class Android.Media.AudioManager/AudioRecordingCallback cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterAudioRecordingCallback(Android.Media.AudioManager.AudioRecordingCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback -&gt; unit&#xA;override this.UnregisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback -&gt; unit" Usage="audioManager.UnregisterAudioRecordingCallback cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterAudioRecordingCallback", "(Landroid/media/AudioManager$AudioRecordingCallback;)V", "GetUnregisterAudioRecordingCallback_Landroid_media_AudioManager_AudioRecordingCallback_Handler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioRecordingCallback" />
      </Parameters>
      <Docs>
        <param name="cb">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterMediaButtonEventReceiver">
      <MemberSignature Language="C#" Value="public virtual void UnregisterMediaButtonEventReceiver (Android.App.PendingIntent eventReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterMediaButtonEventReceiver(class Android.App.PendingIntent eventReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterMediaButtonEventReceiver(Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterMediaButtonEventReceiver : Android.App.PendingIntent -&gt; unit&#xA;override this.UnregisterMediaButtonEventReceiver : Android.App.PendingIntent -&gt; unit" Usage="audioManager.UnregisterMediaButtonEventReceiver eventReceiver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterMediaButtonEventReceiver", "(Landroid/app/PendingIntent;)V", "GetUnregisterMediaButtonEventReceiver_Landroid_app_PendingIntent_Handler", ApiSince=18)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventReceiver" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="eventReceiver">same PendingIntent that was registed with
      <see cref="M:Android.Media.AudioManager.RegisterMediaButtonEventReceiver(Android.App.PendingIntent)" />.</param>
        <summary>Unregister the receiver of MEDIA_BUTTON intents.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterMediaButtonEventReceiver">
      <MemberSignature Language="C#" Value="public virtual void UnregisterMediaButtonEventReceiver (Android.Content.ComponentName eventReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterMediaButtonEventReceiver(class Android.Content.ComponentName eventReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterMediaButtonEventReceiver(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterMediaButtonEventReceiver : Android.Content.ComponentName -&gt; unit&#xA;override this.UnregisterMediaButtonEventReceiver : Android.Content.ComponentName -&gt; unit" Usage="audioManager.UnregisterMediaButtonEventReceiver eventReceiver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterMediaButtonEventReceiver", "(Landroid/content/ComponentName;)V", "GetUnregisterMediaButtonEventReceiver_Landroid_content_ComponentName_Handler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventReceiver" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="eventReceiver">identifier of a <see cref="T:Android.Content.BroadcastReceiver" />
      that was registered with <see cref="M:Android.Media.AudioManager.RegisterMediaButtonEventReceiver(Android.Content.ComponentName)" />.</param>
        <summary>Unregister the receiver of MEDIA_BUTTON intents.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterRemoteControlClient">
      <MemberSignature Language="C#" Value="public virtual void UnregisterRemoteControlClient (Android.Media.RemoteControlClient rcClient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterRemoteControlClient(class Android.Media.RemoteControlClient rcClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterRemoteControlClient(Android.Media.RemoteControlClient)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterRemoteControlClient : Android.Media.RemoteControlClient -&gt; unit&#xA;override this.UnregisterRemoteControlClient : Android.Media.RemoteControlClient -&gt; unit" Usage="audioManager.UnregisterRemoteControlClient rcClient" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterRemoteControlClient", "(Landroid/media/RemoteControlClient;)V", "GetUnregisterRemoteControlClient_Landroid_media_RemoteControlClient_Handler", ApiSince=14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rcClient" Type="Android.Media.RemoteControlClient" />
      </Parameters>
      <Docs>
        <param name="rcClient">The remote control client to unregister.</param>
        <summary>Unregisters the remote control client that was providing information to display on the
 remote controls.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.AudioManager.RegisterRemoteControlClient(Android.Media.RemoteControlClient)" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterRemoteController">
      <MemberSignature Language="C#" Value="public virtual void UnregisterRemoteController (Android.Media.RemoteController rctlr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterRemoteController(class Android.Media.RemoteController rctlr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterRemoteController(Android.Media.RemoteController)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterRemoteController : Android.Media.RemoteController -&gt; unit&#xA;override this.UnregisterRemoteController : Android.Media.RemoteController -&gt; unit" Usage="audioManager.UnregisterRemoteController rctlr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unregisterRemoteController", "(Landroid/media/RemoteController;)V", "GetUnregisterRemoteController_Landroid_media_RemoteController_Handler", ApiSince=19)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rctlr" Type="Android.Media.RemoteController" />
      </Parameters>
      <Docs>
        <param name="rctlr">the object to unregister.</param>
        <summary>Unregisters a <see cref="T:Android.Media.RemoteController" />, causing it to no longer receive
 media metadata and playback state information, and no longer be capable
 of controlling playback.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultStreamType">
      <MemberSignature Language="C#" Value="public const int UseDefaultStreamType = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 UseDefaultStreamType = (-2147483648)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.UseDefaultStreamType" />
      <MemberSignature Language="F#" Value="val mutable UseDefaultStreamType : int" Usage="Android.Media.AudioManager.UseDefaultStreamType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("USE_DEFAULT_STREAM_TYPE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary>Suggests using the default stream type.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="VibrateSettingChangedAction">
      <MemberSignature Language="C#" Value="public const string VibrateSettingChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string VibrateSettingChangedAction" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.VibrateSettingChangedAction" />
      <MemberSignature Language="F#" Value="val mutable VibrateSettingChangedAction : string" Usage="Android.Media.AudioManager.VibrateSettingChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("VIBRATE_SETTING_CHANGED_ACTION")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action indicating that the vibrate setting has
 changed.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.ExtraVibrateType" />
        <altmember cref="F:Android.Media.AudioManager.ExtraVibrateSetting" />
      </Docs>
    </Member>
    <Member MemberName="WiredHeadsetOn">
      <MemberSignature Language="C#" Value="public virtual bool WiredHeadsetOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WiredHeadsetOn" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.WiredHeadsetOn" />
      <MemberSignature Language="F#" Value="member this.WiredHeadsetOn : bool with get, set" Usage="Android.Media.AudioManager.WiredHeadsetOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isWiredHeadsetOn", "()Z", "GetIsWiredHeadsetOnHandler", ApiSince=5)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setWiredHeadsetOn", "(Z)V", "GetSetWiredHeadsetOn_ZHandler", ApiSince=5)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether a wired headset is connected or not.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
  </Members>
</Type>
