<Type Name="AudioManager" FullName="Android.Media.AudioManager">
  <TypeSignature Language="VB.NET" Value="Public Class AudioManager&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class AudioManager : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class AudioManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AudioManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.AudioManager" />
  <TypeSignature Language="F#" Value="type AudioManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/AudioManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/AudioManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>AudioManager provides access to volume and ringer mode control.</summary>
    <remarks>
      <para>AudioManager provides access to volume and ringer mode control.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/AudioManager" title="Reference documentation">Java documentation for <code>android.media.AudioManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AudioManager(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected AudioManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.AudioManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.AudioManager" Usage="new Android.Media.AudioManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AbandonAudioFocus">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AbandonAudioFocus (l As AudioManager.IOnAudioFocusChangeListener) As AudioFocusRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::AudioFocusRequest AbandonAudioFocus(Android::Media::AudioManager::IOnAudioFocusChangeListener ^ l);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFocusRequest AbandonAudioFocus (Android.Media.AudioManager.IOnAudioFocusChangeListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.AudioFocusRequest AbandonAudioFocus(class Android.Media.AudioManager/IOnAudioFocusChangeListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AbandonAudioFocus(Android.Media.AudioManager.IOnAudioFocusChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member AbandonAudioFocus : Android.Media.AudioManager.IOnAudioFocusChangeListener -&gt; Android.Media.AudioFocusRequest&#xA;override this.AbandonAudioFocus : Android.Media.AudioManager.IOnAudioFocusChangeListener -&gt; Android.Media.AudioFocusRequest" Usage="audioManager.AbandonAudioFocus l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("abandonAudioFocus", "(Landroid/media/AudioManager$OnAudioFocusChangeListener;)I", "GetAbandonAudioFocus_Landroid_media_AudioManager_OnAudioFocusChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("abandonAudioFocus", "(Landroid/media/AudioManager$OnAudioFocusChangeListener;)I", "GetAbandonAudioFocus_Landroid_media_AudioManager_OnAudioFocusChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Media.AudioManager+IOnAudioFocusChangeListener" />
      </Parameters>
      <Docs>
        <param name="l">the listener with which focus was requested.</param>
        <summary>Abandon audio focus.</summary>
        <returns>
          <c>#AUDIOFOCUS_REQUEST_FAILED</c> or <c>#AUDIOFOCUS_REQUEST_GRANTED</c></returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#abandonAudioFocus(android.media.OnAudioFocusChangeListener)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.abandonAudioFocus(android.media.OnAudioFocusChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AbandonAudioFocusRequest">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AbandonAudioFocusRequest (focusRequest As AudioFocusRequestClass) As AudioFocusRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::AudioFocusRequest AbandonAudioFocusRequest(Android::Media::AudioFocusRequestClass ^ focusRequest);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFocusRequest AbandonAudioFocusRequest (Android.Media.AudioFocusRequestClass focusRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.AudioFocusRequest AbandonAudioFocusRequest(class Android.Media.AudioFocusRequestClass focusRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AbandonAudioFocusRequest(Android.Media.AudioFocusRequestClass)" />
      <MemberSignature Language="F#" Value="abstract member AbandonAudioFocusRequest : Android.Media.AudioFocusRequestClass -&gt; Android.Media.AudioFocusRequest&#xA;override this.AbandonAudioFocusRequest : Android.Media.AudioFocusRequestClass -&gt; Android.Media.AudioFocusRequest" Usage="audioManager.AbandonAudioFocusRequest focusRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("abandonAudioFocusRequest", "(Landroid/media/AudioFocusRequest;)I", "GetAbandonAudioFocusRequest_Landroid_media_AudioFocusRequest_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("abandonAudioFocusRequest", "(Landroid/media/AudioFocusRequest;)I", "GetAbandonAudioFocusRequest_Landroid_media_AudioFocusRequest_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusRequest" Type="Android.Media.AudioFocusRequestClass" />
      </Parameters>
      <Docs>
        <param name="focusRequest">the <c>AudioFocusRequest</c> that was used when requesting focus
                 with <c>#requestAudioFocus(AudioFocusRequest)</c>.</param>
        <summary>Abandon audio focus.</summary>
        <returns>
          <c>#AUDIOFOCUS_REQUEST_FAILED</c> or <c>#AUDIOFOCUS_REQUEST_GRANTED</c></returns>
        <remarks>
          <para>Abandon audio focus. Causes the previous focus owner, if any, to receive focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#abandonAudioFocusRequest(android.media.AudioFocusRequest)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.abandonAudioFocusRequest(android.media.AudioFocusRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionAudioBecomingNoisy">
      <MemberSignature Language="VB.NET" Value="Public Const ActionAudioBecomingNoisy As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionAudioBecomingNoisy;" />
      <MemberSignature Language="C#" Value="public const string ActionAudioBecomingNoisy;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionAudioBecomingNoisy" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionAudioBecomingNoisy" />
      <MemberSignature Language="F#" Value="val mutable ActionAudioBecomingNoisy : string" Usage="Android.Media.AudioManager.ActionAudioBecomingNoisy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_AUDIO_BECOMING_NOISY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_AUDIO_BECOMING_NOISY")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent, a hint for applications that audio is about to become
            'noisy' due to a change in audio outputs.</summary>
        <remarks>
          <para>Broadcast intent, a hint for applications that audio is about to become
            'noisy' due to a change in audio outputs. For example, this intent may
            be sent when a wired headset is unplugged, or when an A2DP audio
            sink is disconnected, and the audio system is about to automatically
            switch audio route to the speaker. Applications that are controlling
            audio streams may consider pausing, reducing volume or some other action
            on receipt of this intent so as not to surprise the user with audio
            from the speaker.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_AUDIO_BECOMING_NOISY" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_AUDIO_BECOMING_NOISY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ActionHdmiAudioPlug">
      <MemberSignature Language="VB.NET" Value="Public Const ActionHdmiAudioPlug As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionHdmiAudioPlug;" />
      <MemberSignature Language="C#" Value="public const string ActionHdmiAudioPlug;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionHdmiAudioPlug" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionHdmiAudioPlug" />
      <MemberSignature Language="F#" Value="val mutable ActionHdmiAudioPlug : string" Usage="Android.Media.AudioManager.ActionHdmiAudioPlug" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_HDMI_AUDIO_PLUG")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_HDMI_AUDIO_PLUG")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: A sticky broadcast indicating an HDMI cable was plugged or unplugged.</summary>
        <remarks>
          <para>Broadcast Action: A sticky broadcast indicating an HDMI cable was plugged or unplugged.
            
            The intent will have the following extra values: <c>#EXTRA_AUDIO_PLUG_STATE</c>,
            <c>#EXTRA_MAX_CHANNEL_COUNT</c>, <c>#EXTRA_ENCODINGS</c>.</para>
          <para>It can only be received by explicitly registering for it with
            <c>Context#registerReceiver(BroadcastReceiver, IntentFilter)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_HDMI_AUDIO_PLUG" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_HDMI_AUDIO_PLUG</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionHeadsetPlug">
      <MemberSignature Language="VB.NET" Value="Public Const ActionHeadsetPlug As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionHeadsetPlug;" />
      <MemberSignature Language="C#" Value="public const string ActionHeadsetPlug;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionHeadsetPlug" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionHeadsetPlug" />
      <MemberSignature Language="F#" Value="val mutable ActionHeadsetPlug : string" Usage="Android.Media.AudioManager.ActionHeadsetPlug" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_HEADSET_PLUG")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_HEADSET_PLUG")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: Wired Headset plugged in or unplugged.</summary>
        <remarks>
          <para>Broadcast Action: Wired Headset plugged in or unplugged.
            
            You &lt;em&gt;cannot&lt;/em&gt; receive this through components declared
            in manifests, only by explicitly registering for it with
            <c>Context#registerReceiver(BroadcastReceiver, IntentFilter)
            Context.registerReceiver()</c>.</para>
          <para>The intent will have the following extra values:
            &lt;ul&gt;
              &lt;li&gt;&lt;em&gt;state&lt;/em&gt; - 0 for unplugged, 1 for plugged. &lt;/li&gt;
              &lt;li&gt;&lt;em&gt;name&lt;/em&gt; - Headset type, human readable string &lt;/li&gt;
              &lt;li&gt;&lt;em&gt;microphone&lt;/em&gt; - 1 if headset has a microphone, 0 otherwise &lt;/li&gt;
            &lt;/ul&gt;
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_HEADSET_PLUG" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_HEADSET_PLUG</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionMicrophoneMuteChanged">
      <MemberSignature Language="VB.NET" Value="Public Const ActionMicrophoneMuteChanged As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionMicrophoneMuteChanged;" />
      <MemberSignature Language="C#" Value="public const string ActionMicrophoneMuteChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionMicrophoneMuteChanged" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionMicrophoneMuteChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionMicrophoneMuteChanged : string" Usage="Android.Media.AudioManager.ActionMicrophoneMuteChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_MICROPHONE_MUTE_CHANGED", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_MICROPHONE_MUTE_CHANGED", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: microphone muting state changed.</summary>
        <remarks>
          <para>Broadcast Action: microphone muting state changed.
            
            You &lt;em&gt;cannot&lt;/em&gt; receive this through components declared
            in manifests, only by explicitly registering for it with
            <c>Context#registerReceiver(BroadcastReceiver, IntentFilter)
            Context.registerReceiver()</c>.</para>
          <para>The intent has no extra values, use <c>#isMicrophoneMute</c> to check whether the
            microphone is muted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_MICROPHONE_MUTE_CHANGED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_MICROPHONE_MUTE_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionScoAudioStateChanged">
      <MemberSignature Language="VB.NET" Value="Public Const ActionScoAudioStateChanged As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionScoAudioStateChanged;" />
      <MemberSignature Language="C#" Value="public const string ActionScoAudioStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionScoAudioStateChanged" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionScoAudioStateChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionScoAudioStateChanged : string" Usage="Android.Media.AudioManager.ActionScoAudioStateChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_SCO_AUDIO_STATE_CHANGED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_SCO_AUDIO_STATE_CHANGED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sticky broadcast intent action indicating that the Bluetooth SCO audio
            connection state has changed.</summary>
        <remarks>
          <para>Sticky broadcast intent action indicating that the Bluetooth SCO audio
            connection state has changed. The intent contains on extra <c>#EXTRA_SCO_AUDIO_STATE</c>
            indicating the new state which is either <c>#SCO_AUDIO_STATE_DISCONNECTED</c>
            or <c>#SCO_AUDIO_STATE_CONNECTED</c></para>
          <para>This member is deprecated. Use  <c>#ACTION_SCO_AUDIO_STATE_UPDATED</c> instead</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_SCO_AUDIO_STATE_CHANGED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_SCO_AUDIO_STATE_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.StartBluetoothSco" />
      </Docs>
    </Member>
    <Member MemberName="ActionScoAudioStateUpdated">
      <MemberSignature Language="VB.NET" Value="Public Const ActionScoAudioStateUpdated As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionScoAudioStateUpdated;" />
      <MemberSignature Language="C#" Value="public const string ActionScoAudioStateUpdated;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionScoAudioStateUpdated" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionScoAudioStateUpdated" />
      <MemberSignature Language="F#" Value="val mutable ActionScoAudioStateUpdated : string" Usage="Android.Media.AudioManager.ActionScoAudioStateUpdated" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_SCO_AUDIO_STATE_UPDATED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_SCO_AUDIO_STATE_UPDATED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sticky broadcast intent action indicating that the Bluetooth SCO audio
            connection state has been updated.</summary>
        <remarks>
          <para>Sticky broadcast intent action indicating that the Bluetooth SCO audio
            connection state has been updated.</para>
          <para>This intent has two extras:
            &lt;ul&gt;
              &lt;li&gt; <c>#EXTRA_SCO_AUDIO_STATE</c> - The new SCO audio state. &lt;/li&gt;
              &lt;li&gt; <c>#EXTRA_SCO_AUDIO_PREVIOUS_STATE</c>- The previous SCO audio state. &lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE can be any of:
            &lt;ul&gt;
              &lt;li&gt; <c>#SCO_AUDIO_STATE_DISCONNECTED</c>, &lt;/li&gt;
              &lt;li&gt; <c>#SCO_AUDIO_STATE_CONNECTING</c> or &lt;/li&gt;
              &lt;li&gt; <c>#SCO_AUDIO_STATE_CONNECTED</c>, &lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_SCO_AUDIO_STATE_UPDATED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_SCO_AUDIO_STATE_UPDATED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.AudioManager.StartBluetoothSco" />
      </Docs>
    </Member>
    <Member MemberName="ActionSpeakerphoneStateChanged">
      <MemberSignature Language="VB.NET" Value="Public Const ActionSpeakerphoneStateChanged As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionSpeakerphoneStateChanged;" />
      <MemberSignature Language="C#" Value="public const string ActionSpeakerphoneStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionSpeakerphoneStateChanged" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionSpeakerphoneStateChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionSpeakerphoneStateChanged : string" Usage="Android.Media.AudioManager.ActionSpeakerphoneStateChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_SPEAKERPHONE_STATE_CHANGED", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_SPEAKERPHONE_STATE_CHANGED", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: speakerphone state changed.</summary>
        <remarks>
          <para>Broadcast Action: speakerphone state changed.
            
            You &lt;em&gt;cannot&lt;/em&gt; receive this through components declared
            in manifests, only by explicitly registering for it with
            <c>Context#registerReceiver(BroadcastReceiver, IntentFilter)
            Context.registerReceiver()</c>.</para>
          <para>The intent has no extra values, use <c>#isSpeakerphoneOn</c> to check whether the
            speakerphone functionality is enabled or not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_SPEAKERPHONE_STATE_CHANGED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_SPEAKERPHONE_STATE_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePlaybackConfigurations">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActivePlaybackConfigurations As IList(Of AudioPlaybackConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;Android::Media::AudioPlaybackConfiguration ^&gt; ^ ActivePlaybackConfigurations { System::Collections::Generic::IList&lt;Android::Media::AudioPlaybackConfiguration ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.AudioPlaybackConfiguration&gt; ActivePlaybackConfigurations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.AudioPlaybackConfiguration&gt; ActivePlaybackConfigurations" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.ActivePlaybackConfigurations" />
      <MemberSignature Language="F#" Value="member this.ActivePlaybackConfigurations : System.Collections.Generic.IList&lt;Android.Media.AudioPlaybackConfiguration&gt;" Usage="Android.Media.AudioManager.ActivePlaybackConfigurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getActivePlaybackConfigurations", "()Ljava/util/List;", "GetGetActivePlaybackConfigurationsHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getActivePlaybackConfigurations", "()Ljava/util/List;", "GetGetActivePlaybackConfigurationsHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.AudioPlaybackConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current active audio playback configurations of the device</summary>
        <value>a non-null list of playback configurations. An empty list indicates there is no
                playback active when queried.</value>
        <remarks>
          <para>Returns the current active audio playback configurations of the device</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getActivePlaybackConfigurations()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getActivePlaybackConfigurations()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveRecordingConfigurations">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActiveRecordingConfigurations As IList(Of AudioRecordingConfiguration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;Android::Media::AudioRecordingConfiguration ^&gt; ^ ActiveRecordingConfigurations { System::Collections::Generic::IList&lt;Android::Media::AudioRecordingConfiguration ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.AudioRecordingConfiguration&gt; ActiveRecordingConfigurations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.AudioRecordingConfiguration&gt; ActiveRecordingConfigurations" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.ActiveRecordingConfigurations" />
      <MemberSignature Language="F#" Value="member this.ActiveRecordingConfigurations : System.Collections.Generic.IList&lt;Android.Media.AudioRecordingConfiguration&gt;" Usage="Android.Media.AudioManager.ActiveRecordingConfigurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getActiveRecordingConfigurations", "()Ljava/util/List;", "GetGetActiveRecordingConfigurationsHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getActiveRecordingConfigurations", "()Ljava/util/List;", "GetGetActiveRecordingConfigurationsHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.AudioRecordingConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current active audio recording configurations of the device.</summary>
        <value>a non-null list of recording configurations. An empty list indicates there is
                no recording active when queried.</value>
        <remarks>
          <para>Returns the current active audio recording configurations of the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getActiveRecordingConfigurations()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getActiveRecordingConfigurations()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnCommunicationDeviceChangedListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddOnCommunicationDeviceChangedListener (executor As IExecutor, listener As AudioManager.IOnCommunicationDeviceChangedListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddOnCommunicationDeviceChangedListener(Java::Util::Concurrent::IExecutor ^ executor, Android::Media::AudioManager::IOnCommunicationDeviceChangedListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void AddOnCommunicationDeviceChangedListener (Java.Util.Concurrent.IExecutor executor, Android.Media.AudioManager.IOnCommunicationDeviceChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnCommunicationDeviceChangedListener(class Java.Util.Concurrent.IExecutor executor, class Android.Media.AudioManager/IOnCommunicationDeviceChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AddOnCommunicationDeviceChangedListener(Java.Util.Concurrent.IExecutor,Android.Media.AudioManager.IOnCommunicationDeviceChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member AddOnCommunicationDeviceChangedListener : Java.Util.Concurrent.IExecutor * Android.Media.AudioManager.IOnCommunicationDeviceChangedListener -&gt; unit&#xA;override this.AddOnCommunicationDeviceChangedListener : Java.Util.Concurrent.IExecutor * Android.Media.AudioManager.IOnCommunicationDeviceChangedListener -&gt; unit" Usage="audioManager.AddOnCommunicationDeviceChangedListener (executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnCommunicationDeviceChangedListener", "(Ljava/util/concurrent/Executor;Landroid/media/AudioManager$OnCommunicationDeviceChangedListener;)V", "GetAddOnCommunicationDeviceChangedListener_Ljava_util_concurrent_Executor_Landroid_media_AudioManager_OnCommunicationDeviceChangedListener_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnCommunicationDeviceChangedListener", "(Ljava/util/concurrent/Executor;Landroid/media/AudioManager$OnCommunicationDeviceChangedListener;)V", "GetAddOnCommunicationDeviceChangedListener_Ljava_util_concurrent_Executor_Landroid_media_AudioManager_OnCommunicationDeviceChangedListener_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Media.AudioManager+IOnCommunicationDeviceChangedListener" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="listener">To be added.</param>
        <summary>Adds a listener for being notified of changes to the communication audio device.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#addOnCommunicationDeviceChangedListener(java.util.concurrent.Executor,%20android.media.OnCommunicationDeviceChangedListener)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.addOnCommunicationDeviceChangedListener(java.util.concurrent.Executor, android.media.OnCommunicationDeviceChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnModeChangedListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddOnModeChangedListener (executor As IExecutor, listener As AudioManager.IOnModeChangedListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddOnModeChangedListener(Java::Util::Concurrent::IExecutor ^ executor, Android::Media::AudioManager::IOnModeChangedListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void AddOnModeChangedListener (Java.Util.Concurrent.IExecutor executor, Android.Media.AudioManager.IOnModeChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnModeChangedListener(class Java.Util.Concurrent.IExecutor executor, class Android.Media.AudioManager/IOnModeChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AddOnModeChangedListener(Java.Util.Concurrent.IExecutor,Android.Media.AudioManager.IOnModeChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member AddOnModeChangedListener : Java.Util.Concurrent.IExecutor * Android.Media.AudioManager.IOnModeChangedListener -&gt; unit&#xA;override this.AddOnModeChangedListener : Java.Util.Concurrent.IExecutor * Android.Media.AudioManager.IOnModeChangedListener -&gt; unit" Usage="audioManager.AddOnModeChangedListener (executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnModeChangedListener", "(Ljava/util/concurrent/Executor;Landroid/media/AudioManager$OnModeChangedListener;)V", "GetAddOnModeChangedListener_Ljava_util_concurrent_Executor_Landroid_media_AudioManager_OnModeChangedListener_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnModeChangedListener", "(Ljava/util/concurrent/Executor;Landroid/media/AudioManager$OnModeChangedListener;)V", "GetAddOnModeChangedListener_Ljava_util_concurrent_Executor_Landroid_media_AudioManager_OnModeChangedListener_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Media.AudioManager+IOnModeChangedListener" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="listener">To be added.</param>
        <summary>Adds a listener to be notified of changes to the audio mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#addOnModeChangedListener(java.util.concurrent.Executor,%20android.media.OnModeChangedListener)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.addOnModeChangedListener(java.util.concurrent.Executor, android.media.OnModeChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnPreferredMixerAttributesChangedListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddOnPreferredMixerAttributesChangedListener (executor As IExecutor, listener As AudioManager.IOnPreferredMixerAttributesChangedListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddOnPreferredMixerAttributesChangedListener(Java::Util::Concurrent::IExecutor ^ executor, Android::Media::AudioManager::IOnPreferredMixerAttributesChangedListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void AddOnPreferredMixerAttributesChangedListener (Java.Util.Concurrent.IExecutor executor, Android.Media.AudioManager.IOnPreferredMixerAttributesChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnPreferredMixerAttributesChangedListener(class Java.Util.Concurrent.IExecutor executor, class Android.Media.AudioManager/IOnPreferredMixerAttributesChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AddOnPreferredMixerAttributesChangedListener(Java.Util.Concurrent.IExecutor,Android.Media.AudioManager.IOnPreferredMixerAttributesChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member AddOnPreferredMixerAttributesChangedListener : Java.Util.Concurrent.IExecutor * Android.Media.AudioManager.IOnPreferredMixerAttributesChangedListener -&gt; unit&#xA;override this.AddOnPreferredMixerAttributesChangedListener : Java.Util.Concurrent.IExecutor * Android.Media.AudioManager.IOnPreferredMixerAttributesChangedListener -&gt; unit" Usage="audioManager.AddOnPreferredMixerAttributesChangedListener (executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnPreferredMixerAttributesChangedListener", "(Ljava/util/concurrent/Executor;Landroid/media/AudioManager$OnPreferredMixerAttributesChangedListener;)V", "GetAddOnPreferredMixerAttributesChangedListener_Ljava_util_concurrent_Executor_Landroid_media_AudioManager_OnPreferredMixerAttributesChangedListener_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnPreferredMixerAttributesChangedListener", "(Ljava/util/concurrent/Executor;Landroid/media/AudioManager$OnPreferredMixerAttributesChangedListener;)V", "GetAddOnPreferredMixerAttributesChangedListener_Ljava_util_concurrent_Executor_Landroid_media_AudioManager_OnPreferredMixerAttributesChangedListener_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Media.AudioManager+IOnPreferredMixerAttributesChangedListener" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustStreamVolume">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AdjustStreamVolume (streamType As Stream, direction As Adjust, flags As VolumeNotificationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AdjustStreamVolume(Android::Media::Stream streamType, Android::Media::Adjust direction, Android::Media::VolumeNotificationFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void AdjustStreamVolume (Android.Media.Stream streamType, Android.Media.Adjust direction, Android.Media.VolumeNotificationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdjustStreamVolume(valuetype Android.Media.Stream streamType, valuetype Android.Media.Adjust direction, valuetype Android.Media.VolumeNotificationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AdjustStreamVolume(Android.Media.Stream,Android.Media.Adjust,Android.Media.VolumeNotificationFlags)" />
      <MemberSignature Language="F#" Value="abstract member AdjustStreamVolume : Android.Media.Stream * Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit&#xA;override this.AdjustStreamVolume : Android.Media.Stream * Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit" Usage="audioManager.AdjustStreamVolume (streamType, direction, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("adjustStreamVolume", "(III)V", "GetAdjustStreamVolume_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("adjustStreamVolume", "(III)V", "GetAdjustStreamVolume_IIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="direction" Type="Android.Media.Adjust">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Media.VolumeNotificationFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream type to adjust. One of <c>#STREAM_VOICE_CALL</c>,
            <c>#STREAM_SYSTEM</c>, <c>#STREAM_RING</c>, <c>#STREAM_MUSIC</c>,
            <c>#STREAM_ALARM</c> or <c>#STREAM_ACCESSIBILITY</c>.</param>
        <param name="direction">The direction to adjust the volume. One of
                       <c>#ADJUST_LOWER</c>, <c>#ADJUST_RAISE</c>, or
                       <c>#ADJUST_SAME</c>.</param>
        <param name="flags">flags</param>
        <summary>Adjusts the volume of a particular stream by one step in a direction.</summary>
        <remarks>
          <para>Adjusts the volume of a particular stream by one step in a direction.</para>
          <para>This method should only be used by applications that replace the platform-wide
            management of audio settings or the main telephony application.</para>
          <para>This method has no effect if the device implements a fixed volume policy
            as indicated by <c>#isVolumeFixed()</c>.</para>
          <para>From N onward, ringer mode adjustments that would toggle Do Not Disturb are not allowed
            unless the app has been granted Do Not Disturb Access.
            See <c>NotificationManager#isNotificationPolicyAccessGranted()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#adjustStreamVolume(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.adjustStreamVolume(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.AdjustVolume(Android.Media.Adjust, Android.Media.VolumeNotificationFlags)" />
        <altmember cref="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AdjustSuggestedStreamVolume">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AdjustSuggestedStreamVolume (direction As Adjust, suggestedStreamType As Stream, flags As VolumeNotificationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AdjustSuggestedStreamVolume(Android::Media::Adjust direction, Android::Media::Stream suggestedStreamType, Android::Media::VolumeNotificationFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void AdjustSuggestedStreamVolume (Android.Media.Adjust direction, Android.Media.Stream suggestedStreamType, Android.Media.VolumeNotificationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdjustSuggestedStreamVolume(valuetype Android.Media.Adjust direction, valuetype Android.Media.Stream suggestedStreamType, valuetype Android.Media.VolumeNotificationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AdjustSuggestedStreamVolume(Android.Media.Adjust,Android.Media.Stream,Android.Media.VolumeNotificationFlags)" />
      <MemberSignature Language="F#" Value="abstract member AdjustSuggestedStreamVolume : Android.Media.Adjust * Android.Media.Stream * Android.Media.VolumeNotificationFlags -&gt; unit&#xA;override this.AdjustSuggestedStreamVolume : Android.Media.Adjust * Android.Media.Stream * Android.Media.VolumeNotificationFlags -&gt; unit" Usage="audioManager.AdjustSuggestedStreamVolume (direction, suggestedStreamType, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("adjustSuggestedStreamVolume", "(III)V", "GetAdjustSuggestedStreamVolume_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("adjustSuggestedStreamVolume", "(III)V", "GetAdjustSuggestedStreamVolume_IIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Media.Adjust">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="suggestedStreamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Media.VolumeNotificationFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">The direction to adjust the volume. One of
                       <c>#ADJUST_LOWER</c>, <c>#ADJUST_RAISE</c>,
                       <c>#ADJUST_SAME</c>, <c>#ADJUST_MUTE</c>,
                       <c>#ADJUST_UNMUTE</c>, or <c>#ADJUST_TOGGLE_MUTE</c>.</param>
        <param name="suggestedStreamType">The stream type that will be used if there
                       isn't a relevant stream. <c>#USE_DEFAULT_STREAM_TYPE</c> is
                       valid here.</param>
        <param name="flags">flags</param>
        <summary>Adjusts the volume of the most relevant stream, or the given fallback
            stream.</summary>
        <remarks>
          <para>Adjusts the volume of the most relevant stream, or the given fallback
            stream.</para>
          <para>This method should only be used by applications that replace the
            platform-wide management of audio settings or the main telephony
            application.</para>
          <para>This method has no effect if the device implements a fixed volume policy
            as indicated by <c>#isVolumeFixed()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#adjustSuggestedStreamVolume(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.adjustSuggestedStreamVolume(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.AdjustVolume(Android.Media.Adjust, Android.Media.VolumeNotificationFlags)" />
        <altmember cref="M:Android.Media.AudioManager.AdjustStreamVolume(Android.Media.Stream, Android.Media.Adjust, Android.Media.Adjust)" />
        <altmember cref="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="AdjustVolume">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AdjustVolume (direction As Adjust, flags As VolumeNotificationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AdjustVolume(Android::Media::Adjust direction, Android::Media::VolumeNotificationFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void AdjustVolume (Android.Media.Adjust direction, Android.Media.VolumeNotificationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdjustVolume(valuetype Android.Media.Adjust direction, valuetype Android.Media.VolumeNotificationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AdjustVolume(Android.Media.Adjust,Android.Media.VolumeNotificationFlags)" />
      <MemberSignature Language="F#" Value="abstract member AdjustVolume : Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit&#xA;override this.AdjustVolume : Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit" Usage="audioManager.AdjustVolume (direction, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("adjustVolume", "(II)V", "GetAdjustVolume_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("adjustVolume", "(II)V", "GetAdjustVolume_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Media.Adjust">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Media.VolumeNotificationFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">The direction to adjust the volume. One of
                       <c>#ADJUST_LOWER</c>, <c>#ADJUST_RAISE</c>,
                       <c>#ADJUST_SAME</c>, <c>#ADJUST_MUTE</c>,
                       <c>#ADJUST_UNMUTE</c>, or <c>#ADJUST_TOGGLE_MUTE</c>.</param>
        <param name="flags">flags</param>
        <summary>Adjusts the volume of the most relevant stream.</summary>
        <remarks>
          <para>Adjusts the volume of the most relevant stream. For example, if a call is
            active, it will have the highest priority regardless of if the in-call
            screen is showing. Another example, if music is playing in the background
            and a call is not active, the music stream will be adjusted.</para>
          <para>This method should only be used by applications that replace the
            platform-wide management of audio settings or the main telephony
            application.</para>
          <para>This method has no effect if the device implements a fixed volume policy
            as indicated by <c>#isVolumeFixed()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#adjustVolume(int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.adjustVolume(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.AdjustSuggestedStreamVolume(Android.Media.Adjust, Android.Media.Stream, Android.Media.Stream)" />
        <altmember cref="M:Android.Media.AudioManager.AdjustStreamVolume(Android.Media.Stream, Android.Media.Adjust, Android.Media.Adjust)" />
        <altmember cref="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="AdjustVolumeGroupVolume">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AdjustVolumeGroupVolume (groupId As Integer, direction As Adjust, flags As VolumeNotificationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AdjustVolumeGroupVolume(int groupId, Android::Media::Adjust direction, Android::Media::VolumeNotificationFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void AdjustVolumeGroupVolume (int groupId, Android.Media.Adjust direction, Android.Media.VolumeNotificationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdjustVolumeGroupVolume(int32 groupId, valuetype Android.Media.Adjust direction, valuetype Android.Media.VolumeNotificationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AdjustVolumeGroupVolume(System.Int32,Android.Media.Adjust,Android.Media.VolumeNotificationFlags)" />
      <MemberSignature Language="F#" Value="abstract member AdjustVolumeGroupVolume : int * Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit&#xA;override this.AdjustVolumeGroupVolume : int * Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit" Usage="audioManager.AdjustVolumeGroupVolume (groupId, direction, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("adjustVolumeGroupVolume", "(III)V", "GetAdjustVolumeGroupVolume_IIIHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("adjustVolumeGroupVolume", "(III)V", "GetAdjustVolumeGroupVolume_IIIHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.Int32" />
        <Parameter Name="direction" Type="Android.Media.Adjust">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Media.VolumeNotificationFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="groupId">of the <c>android.media.audiopolicy.AudioVolumeGroup</c> to consider.</param>
        <param name="direction">The direction to adjust the volume. One of
                       <c>#ADJUST_LOWER</c>, <c>#ADJUST_RAISE</c>, or
                       <c>#ADJUST_SAME</c>.</param>
        <param name="flags">flags</param>
        <summary>Adjusts the volume of a particular group associated to given id by one step in a direction.</summary>
        <remarks>
          <para>Adjusts the volume of a particular group associated to given id by one step in a direction.</para>
          <para>If the volume group is associated to a stream type, it fallbacks on
            <c>#adjustStreamVolume(int, int, int)</c> for compatibility reason.</para>
          <para>Call first in prior <c>#getVolumeGroupIdForAttributes(AudioAttributes)</c> to retrieve
            the volume group id supporting the given <c>AudioAttributes</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#adjustVolumeGroupVolume(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.adjustVolumeGroupVolume(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowedCapturePolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowedCapturePolicy As CapturePolicies" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::CapturePolicies AllowedCapturePolicy { Android::Media::CapturePolicies get(); void set(Android::Media::CapturePolicies value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.CapturePolicies AllowedCapturePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.CapturePolicies AllowedCapturePolicy" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.AllowedCapturePolicy" />
      <MemberSignature Language="F#" Value="member this.AllowedCapturePolicy : Android.Media.CapturePolicies with get, set" Usage="Android.Media.AudioManager.AllowedCapturePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllowedCapturePolicy", "()I", "GetGetAllowedCapturePolicyHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAllowedCapturePolicy", "()I", "GetGetAllowedCapturePolicyHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAllowedCapturePolicy", "(I)V", "GetSetAllowedCapturePolicy_IHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setAllowedCapturePolicy", "(I)V", "GetSetAllowedCapturePolicy_IHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.CapturePolicies</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="capturePolicy">one of
                <c>AudioAttributes#ALLOW_CAPTURE_BY_ALL</c>,
                <c>AudioAttributes#ALLOW_CAPTURE_BY_SYSTEM</c>,
                <c>AudioAttributes#ALLOW_CAPTURE_BY_NONE</c>.</param>
        <summary>Return the capture policy. -or- Specifies whether the audio played by this app may or may not be captured by other apps or
            the system.</summary>
        <value>the capture policy set by <c>#setAllowedCapturePolicy(int)</c> or
                    the default if it was not called.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Return the capture policy.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getAllowedCapturePolicy()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getAllowedCapturePolicy()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Specifies whether the audio played by this app may or may not be captured by other apps or
            the system.
            
            The default is <c>AudioAttributes#ALLOW_CAPTURE_BY_ALL</c>.
            
            There are multiple ways to set this policy:
            &lt;ul&gt;
            &lt;li&gt; for each track independently, see
               <c>AudioAttributes.Builder#setAllowedCapturePolicy(int)</c>&lt;/li&gt;
            &lt;li&gt; application-wide at runtime, with this method &lt;/li&gt;
            &lt;li&gt; application-wide at build time, see <c>allowAudioPlaybackCapture</c> in the application
                  manifest. &lt;/li&gt;
            &lt;/ul&gt;
            The most restrictive policy is always applied.
            
            See <c>AudioPlaybackCaptureConfiguration</c> for more details on
            which audio signals can be captured.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setAllowedCapturePolicy(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setAllowedCapturePolicy(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudiofocusGain">
      <MemberSignature Language="VB.NET" Value="Public Const AudiofocusGain As AudioFocus  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioFocus AudiofocusGain = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusGain = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusGain = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusGain" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusGain : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusGain" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_GAIN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIOFOCUS_GAIN")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Used to indicate a gain of audio focus, or a request of audio focus, of unknown duration.</summary>
        <remarks>
          <para>Used to indicate a gain of audio focus, or a request of audio focus, of unknown duration.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_GAIN" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_GAIN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.RequestAudioFocus(.IOnAudioFocusChangeListener, Android.Media.Stream, Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusGainTransient">
      <MemberSignature Language="VB.NET" Value="Public Const AudiofocusGainTransient As AudioFocus  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioFocus AudiofocusGainTransient = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusGainTransient = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusGainTransient = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusGainTransient" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusGainTransient : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusGainTransient" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_GAIN_TRANSIENT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIOFOCUS_GAIN_TRANSIENT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Used to indicate a temporary gain or request of audio focus, anticipated to last a short
            amount of time.</summary>
        <remarks>
          <para>Used to indicate a temporary gain or request of audio focus, anticipated to last a short
            amount of time. Examples of temporary changes are the playback of driving directions, or an
            event notification.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_GAIN_TRANSIENT" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_GAIN_TRANSIENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.RequestAudioFocus(.IOnAudioFocusChangeListener, Android.Media.Stream, Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusGainTransientExclusive">
      <MemberSignature Language="VB.NET" Value="Public Const AudiofocusGainTransientExclusive As AudioFocus  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioFocus AudiofocusGainTransientExclusive = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusGainTransientExclusive = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusGainTransientExclusive = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusGainTransientExclusive" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusGainTransientExclusive : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusGainTransientExclusive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Used to indicate a temporary request of audio focus, anticipated to last a short
            amount of time, during which no other applications, or system components, should play
            anything.</summary>
        <remarks>
          <para>Used to indicate a temporary request of audio focus, anticipated to last a short
            amount of time, during which no other applications, or system components, should play
            anything. Examples of exclusive and transient audio focus requests are voice
            memo recording and speech recognition, during which the system shouldn't play any
            notifications, and media playback should have paused.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Media.AudioManager.RequestAudioFocus(.IOnAudioFocusChangeListener, Android.Media.Stream, Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusGainTransientMayDuck">
      <MemberSignature Language="VB.NET" Value="Public Const AudiofocusGainTransientMayDuck As AudioFocus  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioFocus AudiofocusGainTransientMayDuck = 3;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusGainTransientMayDuck = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusGainTransientMayDuck = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusGainTransientMayDuck" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusGainTransientMayDuck : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusGainTransientMayDuck" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Used to indicate a temporary request of audio focus, anticipated to last a short
            amount of time, and where it is acceptable for other audio applications to keep playing
            after having lowered their output level (also referred to as "ducking").</summary>
        <remarks>
          <para>Used to indicate a temporary request of audio focus, anticipated to last a short
            amount of time, and where it is acceptable for other audio applications to keep playing
            after having lowered their output level (also referred to as "ducking").
            Examples of temporary changes are the playback of driving directions where playback of music
            in the background is acceptable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.RequestAudioFocus(.IOnAudioFocusChangeListener, Android.Media.Stream, Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusLoss">
      <MemberSignature Language="VB.NET" Value="Public Const AudiofocusLoss As AudioFocus  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioFocus AudiofocusLoss = -1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusLoss = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusLoss = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusLoss" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusLoss : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusLoss" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_LOSS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIOFOCUS_LOSS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Used to indicate a loss of audio focus of unknown duration.</summary>
        <remarks>
          <para>Used to indicate a loss of audio focus of unknown duration.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_LOSS" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_LOSS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusLossTransient">
      <MemberSignature Language="VB.NET" Value="Public Const AudiofocusLossTransient As AudioFocus  = -2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioFocus AudiofocusLossTransient = -2;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusLossTransient = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusLossTransient = (-2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusLossTransient" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusLossTransient : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusLossTransient" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_LOSS_TRANSIENT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIOFOCUS_LOSS_TRANSIENT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>Used to indicate a transient loss of audio focus.</summary>
        <remarks>
          <para>Used to indicate a transient loss of audio focus.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_LOSS_TRANSIENT" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusLossTransientCanDuck">
      <MemberSignature Language="VB.NET" Value="Public Const AudiofocusLossTransientCanDuck As AudioFocus  = -3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioFocus AudiofocusLossTransientCanDuck = -3;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusLossTransientCanDuck = -3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusLossTransientCanDuck = (-3)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusLossTransientCanDuck" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusLossTransientCanDuck : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusLossTransientCanDuck" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>-3</MemberValue>
      <Docs>
        <summary>Used to indicate a transient loss of audio focus where the loser of the audio focus can
            lower its output volume if it wants to continue playing (also referred to as "ducking"), as
            the new focus owner doesn't require others to be silent.</summary>
        <remarks>
          <para>Used to indicate a transient loss of audio focus where the loser of the audio focus can
            lower its output volume if it wants to continue playing (also referred to as "ducking"), as
            the new focus owner doesn't require others to be silent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusNone">
      <MemberSignature Language="VB.NET" Value="Public Const AudiofocusNone As AudioFocus  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioFocus AudiofocusNone = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusNone" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusNone : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusNone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_NONE", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIOFOCUS_NONE", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Used to indicate no audio focus has been gained or lost, or requested.</summary>
        <remarks>
          <para>Used to indicate no audio focus has been gained or lost, or requested.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_NONE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_NONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudiofocusRequestDelayed">
      <MemberSignature Language="VB.NET" Value="Public Const AudiofocusRequestDelayed As AudioFocusRequest  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioFocusRequest AudiofocusRequestDelayed = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocusRequest AudiofocusRequestDelayed = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocusRequest AudiofocusRequestDelayed = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusRequestDelayed" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusRequestDelayed : Android.Media.AudioFocusRequest" Usage="Android.Media.AudioManager.AudiofocusRequestDelayed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_REQUEST_DELAYED", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIOFOCUS_REQUEST_DELAYED", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocusRequest enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocusRequest enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>A focus change request whose granting is delayed: the request was successful, but the
            requester will only be granted audio focus once the condition that prevented immediate
            granting has ended.</summary>
        <remarks>
          <para>A focus change request whose granting is delayed: the request was successful, but the
            requester will only be granted audio focus once the condition that prevented immediate
            granting has ended.
            See <c>#requestAudioFocus(AudioFocusRequest)</c> and
            <c>AudioFocusRequest.Builder#setAcceptsDelayedFocusGain(boolean)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_REQUEST_DELAYED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_REQUEST_DELAYED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudiofocusRequestFailed">
      <MemberSignature Language="VB.NET" Value="Public Const AudiofocusRequestFailed As AudioFocusRequest  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioFocusRequest AudiofocusRequestFailed = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocusRequest AudiofocusRequestFailed = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocusRequest AudiofocusRequestFailed = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusRequestFailed" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusRequestFailed : Android.Media.AudioFocusRequest" Usage="Android.Media.AudioManager.AudiofocusRequestFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_REQUEST_FAILED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIOFOCUS_REQUEST_FAILED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocusRequest enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocusRequest enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>A failed focus change request.</summary>
        <remarks>
          <para>A failed focus change request.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_REQUEST_FAILED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_REQUEST_FAILED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusRequestGranted">
      <MemberSignature Language="VB.NET" Value="Public Const AudiofocusRequestGranted As AudioFocusRequest  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioFocusRequest AudiofocusRequestGranted = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocusRequest AudiofocusRequestGranted = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocusRequest AudiofocusRequestGranted = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusRequestGranted" />
      <MemberSignature Language="F#" Value="val mutable AudiofocusRequestGranted : Android.Media.AudioFocusRequest" Usage="Android.Media.AudioManager.AudiofocusRequestGranted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_REQUEST_GRANTED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIOFOCUS_REQUEST_GRANTED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocusRequest enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocusRequest enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>A successful focus change request.</summary>
        <remarks>
          <para>A successful focus change request.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_REQUEST_GRANTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_REQUEST_GRANTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudioSessionIdGenerate">
      <MemberSignature Language="VB.NET" Value="Public Const AudioSessionIdGenerate As Integer  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: int AudioSessionIdGenerate = 0;" />
      <MemberSignature Language="C#" Value="public const int AudioSessionIdGenerate = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 AudioSessionIdGenerate = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudioSessionIdGenerate" />
      <MemberSignature Language="F#" Value="val mutable AudioSessionIdGenerate : int" Usage="Android.Media.AudioManager.AudioSessionIdGenerate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIO_SESSION_ID_GENERATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("AUDIO_SESSION_ID_GENERATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>A special audio session ID to indicate that the audio session ID isn't known and the
            framework should generate a new value.</summary>
        <remarks>
          <para>A special audio session ID to indicate that the audio session ID isn't known and the
            framework should generate a new value. This can be used when building a new
            <c>AudioTrack</c> instance with
            <c>AudioTrack#AudioTrack(AudioAttributes, AudioFormat, int, int, int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIO_SESSION_ID_GENERATE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIO_SESSION_ID_GENERATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableCommunicationDevices">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AvailableCommunicationDevices As IList(Of AudioDeviceInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;Android::Media::AudioDeviceInfo ^&gt; ^ AvailableCommunicationDevices { System::Collections::Generic::IList&lt;Android::Media::AudioDeviceInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.AudioDeviceInfo&gt; AvailableCommunicationDevices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.AudioDeviceInfo&gt; AvailableCommunicationDevices" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.AvailableCommunicationDevices" />
      <MemberSignature Language="F#" Value="member this.AvailableCommunicationDevices : System.Collections.Generic.IList&lt;Android.Media.AudioDeviceInfo&gt;" Usage="Android.Media.AudioManager.AvailableCommunicationDevices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAvailableCommunicationDevices", "()Ljava/util/List;", "GetGetAvailableCommunicationDevicesHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAvailableCommunicationDevices", "()Ljava/util/List;", "GetGetAvailableCommunicationDevicesHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.AudioDeviceInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a list of audio devices that can be selected for communication use cases via
            <c>#setCommunicationDevice(AudioDeviceInfo)</c>.</summary>
        <value>a list of <c>AudioDeviceInfo</c> suitable for use with setCommunicationDevice().</value>
        <remarks>
          <para>Returns a list of audio devices that can be selected for communication use cases via
            <c>#setCommunicationDevice(AudioDeviceInfo)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getAvailableCommunicationDevices()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getAvailableCommunicationDevices()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BluetoothA2dpOn">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BluetoothA2dpOn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool BluetoothA2dpOn { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool BluetoothA2dpOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BluetoothA2dpOn" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.BluetoothA2dpOn" />
      <MemberSignature Language="F#" Value="member this.BluetoothA2dpOn : bool with get, set" Usage="Android.Media.AudioManager.BluetoothA2dpOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBluetoothA2dpOn", "()Z", "GetIsBluetoothA2dpOnHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isBluetoothA2dpOn", "()Z", "GetIsBluetoothA2dpOnHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBluetoothA2dpOn", "(Z)V", "GetSetBluetoothA2dpOn_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setBluetoothA2dpOn", "(Z)V", "GetSetBluetoothA2dpOn_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether a Bluetooth A2DP audio peripheral is connected or not. -or- This member is deprecated.</summary>
        <value>true if a Bluetooth A2DP peripheral is connected
                    false if otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Checks whether a Bluetooth A2DP audio peripheral is connected or not.</para>
          <para>This member is deprecated. Use <c>AudioManager#getDevices(int)</c> instead to list available audio devices.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isBluetoothA2dpOn()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isBluetoothA2dpOn()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>This member is deprecated. Use <c>MediaRouter#selectRoute</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setBluetoothA2dpOn(boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setBluetoothA2dpOn(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="BluetoothScoOn">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BluetoothScoOn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool BluetoothScoOn { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool BluetoothScoOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BluetoothScoOn" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.BluetoothScoOn" />
      <MemberSignature Language="F#" Value="member this.BluetoothScoOn : bool with get, set" Usage="Android.Media.AudioManager.BluetoothScoOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBluetoothScoOn", "()Z", "GetIsBluetoothScoOnHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isBluetoothScoOn", "()Z", "GetIsBluetoothScoOnHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBluetoothScoOn", "(Z)V", "GetSetBluetoothScoOn_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setBluetoothScoOn", "(Z)V", "GetSetBluetoothScoOn_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">set &lt;var&gt;true&lt;/var&gt; to use bluetooth SCO for communications;
                          &lt;var&gt;false&lt;/var&gt; to not use bluetooth SCO for communications</param>
        <summary>Checks whether communications use Bluetooth SCO. -or- Request use of Bluetooth SCO headset for communications.</summary>
        <value>true if SCO is used for communications;
                    false if otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Checks whether communications use Bluetooth SCO.</para>
          <para>This member is deprecated. Use <c>AudioManager#getCommunicationDevice()</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isBluetoothScoOn()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isBluetoothScoOn()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Request use of Bluetooth SCO headset for communications.</para>
          <para>This method should only be used by applications that replace the platform-wide
            management of audio settings or the main telephony application.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setBluetoothScoOn(boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setBluetoothScoOn(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearCommunicationDevice">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearCommunicationDevice ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearCommunicationDevice();" />
      <MemberSignature Language="C#" Value="public virtual void ClearCommunicationDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCommunicationDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.ClearCommunicationDevice" />
      <MemberSignature Language="F#" Value="abstract member ClearCommunicationDevice : unit -&gt; unit&#xA;override this.ClearCommunicationDevice : unit -&gt; unit" Usage="audioManager.ClearCommunicationDevice " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearCommunicationDevice", "()V", "GetClearCommunicationDeviceHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearCommunicationDevice", "()V", "GetClearCommunicationDeviceHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels previous communication device selection made with
            <c>#setCommunicationDevice(AudioDeviceInfo)</c>.</summary>
        <remarks>
          <para>Cancels previous communication device selection made with
            <c>#setCommunicationDevice(AudioDeviceInfo)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#clearCommunicationDevice()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.clearCommunicationDevice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPreferredMixerAttributes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ClearPreferredMixerAttributes (attributes As AudioAttributes, device As AudioDeviceInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ClearPreferredMixerAttributes(Android::Media::AudioAttributes ^ attributes, Android::Media::AudioDeviceInfo ^ device);" />
      <MemberSignature Language="C#" Value="public virtual bool ClearPreferredMixerAttributes (Android.Media.AudioAttributes attributes, Android.Media.AudioDeviceInfo device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ClearPreferredMixerAttributes(class Android.Media.AudioAttributes attributes, class Android.Media.AudioDeviceInfo device) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.ClearPreferredMixerAttributes(Android.Media.AudioAttributes,Android.Media.AudioDeviceInfo)" />
      <MemberSignature Language="F#" Value="abstract member ClearPreferredMixerAttributes : Android.Media.AudioAttributes * Android.Media.AudioDeviceInfo -&gt; bool&#xA;override this.ClearPreferredMixerAttributes : Android.Media.AudioAttributes * Android.Media.AudioDeviceInfo -&gt; bool" Usage="audioManager.ClearPreferredMixerAttributes (attributes, device)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearPreferredMixerAttributes", "(Landroid/media/AudioAttributes;Landroid/media/AudioDeviceInfo;)Z", "GetClearPreferredMixerAttributes_Landroid_media_AudioAttributes_Landroid_media_AudioDeviceInfo_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearPreferredMixerAttributes", "(Landroid/media/AudioAttributes;Landroid/media/AudioDeviceInfo;)Z", "GetClearPreferredMixerAttributes_Landroid_media_AudioAttributes_Landroid_media_AudioDeviceInfo_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MODIFY_AUDIO_SETTINGS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MODIFY_AUDIO_SETTINGS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
        <Parameter Name="device" Type="Android.Media.AudioDeviceInfo" />
      </Parameters>
      <Docs>
        <param name="attributes">the <c>AudioAttributes</c> whose mixer attributes should be cleared.</param>
        <param name="device">the expected routing device</param>
        <summary>Clears the current preferred mixer attributes that were previously set via
            <c>#setPreferredMixerAttributes(AudioAttributes, AudioDeviceInfo, AudioMixerAttributes)</c></summary>
        <returns>true only if the preferred mixer attributes are removed successfully.</returns>
        <remarks>
          <para>Clears the current preferred mixer attributes that were previously set via
            <c>#setPreferredMixerAttributes(AudioAttributes, AudioDeviceInfo, AudioMixerAttributes)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#clearPreferredMixerAttributes(android.media.AudioAttributes,%20android.media.AudioDeviceInfo)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.clearPreferredMixerAttributes(android.media.AudioAttributes, android.media.AudioDeviceInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommunicationDevice">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CommunicationDevice As AudioDeviceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::AudioDeviceInfo ^ CommunicationDevice { Android::Media::AudioDeviceInfo ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioDeviceInfo? CommunicationDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioDeviceInfo CommunicationDevice" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.CommunicationDevice" />
      <MemberSignature Language="F#" Value="member this.CommunicationDevice : Android.Media.AudioDeviceInfo" Usage="Android.Media.AudioManager.CommunicationDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCommunicationDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetCommunicationDeviceHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCommunicationDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetCommunicationDeviceHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioDeviceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns currently selected audio device for communication.</summary>
        <value>an <c>AudioDeviceInfo</c> indicating which audio device is
            currently selected for communication use cases. Can be null on platforms
            not supporting <c>android.content.pm.PackageManager#FEATURE_TELEPHONY</c>.
            is used.</value>
        <remarks>
          <para>Returns currently selected audio device for communication.</para>
          <para>This API replaces the following deprecated APIs:
            &lt;ul&gt;
              &lt;li&gt; <c>#isBluetoothScoOn()</c>&lt;li&gt; <c>#isSpeakerphoneOn()</c>&lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getCommunicationDevice()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getCommunicationDevice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectPlaybackBitstreamSupported">
      <MemberSignature Language="VB.NET" Value="Public Const DirectPlaybackBitstreamSupported As DirectPlaybackSupport  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::DirectPlaybackSupport DirectPlaybackBitstreamSupported = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Media.DirectPlaybackSupport DirectPlaybackBitstreamSupported = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.DirectPlaybackSupport DirectPlaybackBitstreamSupported = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.DirectPlaybackBitstreamSupported" />
      <MemberSignature Language="F#" Value="val mutable DirectPlaybackBitstreamSupported : Android.Media.DirectPlaybackSupport" Usage="Android.Media.AudioManager.DirectPlaybackBitstreamSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECT_PLAYBACK_BITSTREAM_SUPPORTED", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECT_PLAYBACK_BITSTREAM_SUPPORTED", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.DirectPlaybackSupport enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.DirectPlaybackSupport enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.DirectPlaybackSupport</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Return value for <c>#getDirectPlaybackSupport(AudioFormat, AudioAttributes)</c>:
                    direct playback supported.</summary>
        <remarks>
          <para>Return value for <c>#getDirectPlaybackSupport(AudioFormat, AudioAttributes)</c>:
                    direct playback supported. This value covers direct playback that is bitstream pass-through
                    such as compressed pass-through.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#DIRECT_PLAYBACK_BITSTREAM_SUPPORTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.DIRECT_PLAYBACK_BITSTREAM_SUPPORTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectPlaybackNotSupported">
      <MemberSignature Language="VB.NET" Value="Public Const DirectPlaybackNotSupported As DirectPlaybackSupport  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::DirectPlaybackSupport DirectPlaybackNotSupported = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Media.DirectPlaybackSupport DirectPlaybackNotSupported = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.DirectPlaybackSupport DirectPlaybackNotSupported = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.DirectPlaybackNotSupported" />
      <MemberSignature Language="F#" Value="val mutable DirectPlaybackNotSupported : Android.Media.DirectPlaybackSupport" Usage="Android.Media.AudioManager.DirectPlaybackNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECT_PLAYBACK_NOT_SUPPORTED", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECT_PLAYBACK_NOT_SUPPORTED", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.DirectPlaybackSupport enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.DirectPlaybackSupport enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.DirectPlaybackSupport</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Return value for <c>#getDirectPlaybackSupport(AudioFormat, AudioAttributes)</c>:
                    direct playback not supported.</summary>
        <remarks>
          <para>Return value for <c>#getDirectPlaybackSupport(AudioFormat, AudioAttributes)</c>:
                    direct playback not supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#DIRECT_PLAYBACK_NOT_SUPPORTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.DIRECT_PLAYBACK_NOT_SUPPORTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectPlaybackOffloadGaplessSupported">
      <MemberSignature Language="VB.NET" Value="Public Const DirectPlaybackOffloadGaplessSupported As DirectPlaybackSupport  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::DirectPlaybackSupport DirectPlaybackOffloadGaplessSupported = 3;" />
      <MemberSignature Language="C#" Value="public const Android.Media.DirectPlaybackSupport DirectPlaybackOffloadGaplessSupported = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.DirectPlaybackSupport DirectPlaybackOffloadGaplessSupported = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.DirectPlaybackOffloadGaplessSupported" />
      <MemberSignature Language="F#" Value="val mutable DirectPlaybackOffloadGaplessSupported : Android.Media.DirectPlaybackSupport" Usage="Android.Media.AudioManager.DirectPlaybackOffloadGaplessSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECT_PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECT_PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.DirectPlaybackSupport enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.DirectPlaybackSupport enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.DirectPlaybackSupport</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Return value for <c>#getDirectPlaybackSupport(AudioFormat, AudioAttributes)</c>:
                    direct offload playback supported with gapless transitions.</summary>
        <remarks>
          <para>Return value for <c>#getDirectPlaybackSupport(AudioFormat, AudioAttributes)</c>:
                    direct offload playback supported with gapless transitions. Compressed offload is a variant
                    of direct playback. It is the feature that allows audio processing tasks to be done on the
                    Android device but not on the application processor, instead, it is handled by dedicated
                    hardware such as audio DSPs. That will allow the application processor to be idle as much as
                    possible, which is good for power saving. Compressed offload playback supports
                    <c>AudioTrack.StreamEventCallback</c> for event notifications. Gapless transitions
                    indicates the ability to play consecutive audio tracks without an audio silence in
                    between.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#DIRECT_PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.DIRECT_PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectPlaybackOffloadSupported">
      <MemberSignature Language="VB.NET" Value="Public Const DirectPlaybackOffloadSupported As DirectPlaybackSupport  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::DirectPlaybackSupport DirectPlaybackOffloadSupported = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.DirectPlaybackSupport DirectPlaybackOffloadSupported = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.DirectPlaybackSupport DirectPlaybackOffloadSupported = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.DirectPlaybackOffloadSupported" />
      <MemberSignature Language="F#" Value="val mutable DirectPlaybackOffloadSupported : Android.Media.DirectPlaybackSupport" Usage="Android.Media.AudioManager.DirectPlaybackOffloadSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DIRECT_PLAYBACK_OFFLOAD_SUPPORTED", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DIRECT_PLAYBACK_OFFLOAD_SUPPORTED", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.DirectPlaybackSupport enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.DirectPlaybackSupport enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.DirectPlaybackSupport</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Return value for <c>#getDirectPlaybackSupport(AudioFormat, AudioAttributes)</c>:
                    direct offload playback supported.</summary>
        <remarks>
          <para>Return value for <c>#getDirectPlaybackSupport(AudioFormat, AudioAttributes)</c>:
                    direct offload playback supported. Compressed offload is a variant of direct playback.
                    It is the feature that allows audio processing tasks to be done on the Android device but
                    not on the application processor, instead, it is handled by dedicated hardware such as audio
                    DSPs. That will allow the application processor to be idle as much as possible, which is
                    good for power saving. Compressed offload playback supports
                    <c>AudioTrack.StreamEventCallback</c> for event notifications.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#DIRECT_PLAYBACK_OFFLOAD_SUPPORTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.DIRECT_PLAYBACK_OFFLOAD_SUPPORTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchMediaKeyEvent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DispatchMediaKeyEvent (keyEvent As KeyEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DispatchMediaKeyEvent(Android::Views::KeyEvent ^ keyEvent);" />
      <MemberSignature Language="C#" Value="public virtual void DispatchMediaKeyEvent (Android.Views.KeyEvent? keyEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchMediaKeyEvent(class Android.Views.KeyEvent keyEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.DispatchMediaKeyEvent(Android.Views.KeyEvent)" />
      <MemberSignature Language="F#" Value="abstract member DispatchMediaKeyEvent : Android.Views.KeyEvent -&gt; unit&#xA;override this.DispatchMediaKeyEvent : Android.Views.KeyEvent -&gt; unit" Usage="audioManager.DispatchMediaKeyEvent keyEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchMediaKeyEvent", "(Landroid/view/KeyEvent;)V", "GetDispatchMediaKeyEvent_Landroid_view_KeyEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dispatchMediaKeyEvent", "(Landroid/view/KeyEvent;)V", "GetDispatchMediaKeyEvent_Landroid_view_KeyEvent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyEvent" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyEvent">a <c>KeyEvent</c> instance whose key code is one of
                <c>KeyEvent#KEYCODE_MUTE</c>,
                <c>KeyEvent#KEYCODE_HEADSETHOOK</c>,
                <c>KeyEvent#KEYCODE_MEDIA_PLAY</c>,
                <c>KeyEvent#KEYCODE_MEDIA_PAUSE</c>,
                <c>KeyEvent#KEYCODE_MEDIA_PLAY_PAUSE</c>,
                <c>KeyEvent#KEYCODE_MEDIA_STOP</c>,
                <c>KeyEvent#KEYCODE_MEDIA_NEXT</c>,
                <c>KeyEvent#KEYCODE_MEDIA_PREVIOUS</c>,
                <c>KeyEvent#KEYCODE_MEDIA_REWIND</c>,
                <c>KeyEvent#KEYCODE_MEDIA_RECORD</c>,
                <c>KeyEvent#KEYCODE_MEDIA_FAST_FORWARD</c>,
                <c>KeyEvent#KEYCODE_MEDIA_CLOSE</c>,
                <c>KeyEvent#KEYCODE_MEDIA_EJECT</c>,
                or <c>KeyEvent#KEYCODE_MEDIA_AUDIO_TRACK</c>.</param>
        <summary>Sends a simulated key event for a media button.</summary>
        <remarks>
          <para>Sends a simulated key event for a media button.
            To simulate a key press, you must first send a KeyEvent built with a
            <c>KeyEvent#ACTION_DOWN</c> action, then another event with the <c>KeyEvent#ACTION_UP</c>
            action.</para>
          <para>The key event will be sent to the current media key event consumer which registered with
            <c>AudioManager#registerMediaButtonEventReceiver(PendingIntent)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#dispatchMediaKeyEvent(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.dispatchMediaKeyEvent(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedSurroundMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncodedSurroundMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EncodedSurroundMode { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int EncodedSurroundMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EncodedSurroundMode" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.EncodedSurroundMode" />
      <MemberSignature Language="F#" Value="member this.EncodedSurroundMode : int" Usage="Android.Media.AudioManager.EncodedSurroundMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEncodedSurroundMode", "()I", "GetGetEncodedSurroundModeHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEncodedSurroundMode", "()I", "GetGetEncodedSurroundModeHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the surround sound mode.</summary>
        <value>true if successful, otherwise false</value>
        <remarks>
          <para>Gets the surround sound mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getEncodedSurroundMode()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getEncodedSurroundMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedSurroundOutputAlways">
      <MemberSignature Language="VB.NET" Value="Public Const EncodedSurroundOutputAlways As EncodedSurroundOutput  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::EncodedSurroundOutput EncodedSurroundOutputAlways = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Media.EncodedSurroundOutput EncodedSurroundOutputAlways = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.EncodedSurroundOutput EncodedSurroundOutputAlways = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.EncodedSurroundOutputAlways" />
      <MemberSignature Language="F#" Value="val mutable EncodedSurroundOutputAlways : Android.Media.EncodedSurroundOutput" Usage="Android.Media.AudioManager.EncodedSurroundOutputAlways" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_ALWAYS", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_ALWAYS", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.EncodedSurroundOutput</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The surround sound formats are ALWAYS available, even if they are not detected by the
            hardware.</summary>
        <remarks>
          <para>The surround sound formats are ALWAYS available, even if they are not detected by the
            hardware. Those formats will be reported as part of the HDMI output capability.
            Applications are then free to use either PCM or encoded output.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ENCODED_SURROUND_OUTPUT_ALWAYS" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ENCODED_SURROUND_OUTPUT_ALWAYS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedSurroundOutputAuto">
      <MemberSignature Language="VB.NET" Value="Public Const EncodedSurroundOutputAuto As EncodedSurroundOutput  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::EncodedSurroundOutput EncodedSurroundOutputAuto = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Media.EncodedSurroundOutput EncodedSurroundOutputAuto = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.EncodedSurroundOutput EncodedSurroundOutputAuto = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.EncodedSurroundOutputAuto" />
      <MemberSignature Language="F#" Value="val mutable EncodedSurroundOutputAuto : Android.Media.EncodedSurroundOutput" Usage="Android.Media.AudioManager.EncodedSurroundOutputAuto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_AUTO", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_AUTO", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.EncodedSurroundOutput</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The surround sound formats are available for use if they are detected.</summary>
        <remarks>
          <para>The surround sound formats are available for use if they are detected. This is the default
            mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ENCODED_SURROUND_OUTPUT_AUTO" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ENCODED_SURROUND_OUTPUT_AUTO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedSurroundOutputManual">
      <MemberSignature Language="VB.NET" Value="Public Const EncodedSurroundOutputManual As EncodedSurroundOutput  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::EncodedSurroundOutput EncodedSurroundOutputManual = 3;" />
      <MemberSignature Language="C#" Value="public const Android.Media.EncodedSurroundOutput EncodedSurroundOutputManual = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.EncodedSurroundOutput EncodedSurroundOutputManual = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.EncodedSurroundOutputManual" />
      <MemberSignature Language="F#" Value="val mutable EncodedSurroundOutputManual : Android.Media.EncodedSurroundOutput" Usage="Android.Media.AudioManager.EncodedSurroundOutputManual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_MANUAL", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_MANUAL", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.EncodedSurroundOutput</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Surround sound formats are available according to the choice of user, even if they are not
            detected by the hardware.</summary>
        <remarks>
          <para>Surround sound formats are available according to the choice of user, even if they are not
            detected by the hardware. Those formats will be reported as part of the HDMI output
            capability. Applications are then free to use either PCM or encoded output.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ENCODED_SURROUND_OUTPUT_MANUAL" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ENCODED_SURROUND_OUTPUT_MANUAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedSurroundOutputNever">
      <MemberSignature Language="VB.NET" Value="Public Const EncodedSurroundOutputNever As EncodedSurroundOutput  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::EncodedSurroundOutput EncodedSurroundOutputNever = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.EncodedSurroundOutput EncodedSurroundOutputNever = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.EncodedSurroundOutput EncodedSurroundOutputNever = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.EncodedSurroundOutputNever" />
      <MemberSignature Language="F#" Value="val mutable EncodedSurroundOutputNever : Android.Media.EncodedSurroundOutput" Usage="Android.Media.AudioManager.EncodedSurroundOutputNever" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_NEVER", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_NEVER", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.EncodedSurroundOutput</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The surround sound formats are NEVER available, even if they are detected by the hardware.</summary>
        <remarks>
          <para>The surround sound formats are NEVER available, even if they are detected by the hardware.
            Those formats will not be reported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ENCODED_SURROUND_OUTPUT_NEVER" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ENCODED_SURROUND_OUTPUT_NEVER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedSurroundOutputUnknown">
      <MemberSignature Language="VB.NET" Value="Public Const EncodedSurroundOutputUnknown As EncodedSurroundOutput  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::EncodedSurroundOutput EncodedSurroundOutputUnknown = -1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.EncodedSurroundOutput EncodedSurroundOutputUnknown = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.EncodedSurroundOutput EncodedSurroundOutputUnknown = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.EncodedSurroundOutputUnknown" />
      <MemberSignature Language="F#" Value="val mutable EncodedSurroundOutputUnknown : Android.Media.EncodedSurroundOutput" Usage="Android.Media.AudioManager.EncodedSurroundOutputUnknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_UNKNOWN", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_UNKNOWN", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.EncodedSurroundOutput</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>The mode for surround sound formats is unknown.</summary>
        <remarks>
          <para>The mode for surround sound formats is unknown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ENCODED_SURROUND_OUTPUT_UNKNOWN" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ENCODED_SURROUND_OUTPUT_UNKNOWN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="VB.NET" Value="Public Const Error As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int Error = -1;" />
      <MemberSignature Language="C#" Value="public const int Error = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Error = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.Error" />
      <MemberSignature Language="F#" Value="val mutable Error : int" Usage="Android.Media.AudioManager.Error" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ERROR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ERROR")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>A default error code.</summary>
        <remarks>
          <para>A default error code.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ERROR" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ERROR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDeadObject">
      <MemberSignature Language="VB.NET" Value="Public Const ErrorDeadObject As Integer  = -6" />
      <MemberSignature Language="C++ CLI" Value="public: int ErrorDeadObject = -6;" />
      <MemberSignature Language="C#" Value="public const int ErrorDeadObject = -6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ErrorDeadObject = (-6)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ErrorDeadObject" />
      <MemberSignature Language="F#" Value="val mutable ErrorDeadObject : int" Usage="Android.Media.AudioManager.ErrorDeadObject" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ERROR_DEAD_OBJECT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ERROR_DEAD_OBJECT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-6</MemberValue>
      <Docs>
        <summary>An error code indicating that the object reporting it is no longer valid and needs to
            be recreated.</summary>
        <remarks>
          <para>An error code indicating that the object reporting it is no longer valid and needs to
            be recreated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ERROR_DEAD_OBJECT" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ERROR_DEAD_OBJECT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraAudioPlugState">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraAudioPlugState As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraAudioPlugState;" />
      <MemberSignature Language="C#" Value="public const string ExtraAudioPlugState;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraAudioPlugState" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraAudioPlugState" />
      <MemberSignature Language="F#" Value="val mutable ExtraAudioPlugState : string" Usage="Android.Media.AudioManager.ExtraAudioPlugState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_AUDIO_PLUG_STATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_AUDIO_PLUG_STATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra used in <c>#ACTION_HDMI_AUDIO_PLUG</c> to communicate whether HDMI is plugged in
            or unplugged.</summary>
        <remarks>
          <para>Extra used in <c>#ACTION_HDMI_AUDIO_PLUG</c> to communicate whether HDMI is plugged in
            or unplugged.
            An integer value of 1 indicates a plugged-in state, 0 is unplugged.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_AUDIO_PLUG_STATE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_AUDIO_PLUG_STATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraEncodings">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraEncodings As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraEncodings;" />
      <MemberSignature Language="C#" Value="public const string ExtraEncodings;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraEncodings" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraEncodings" />
      <MemberSignature Language="F#" Value="val mutable ExtraEncodings : string" Usage="Android.Media.AudioManager.ExtraEncodings" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_ENCODINGS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_ENCODINGS")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra used in <c>#ACTION_HDMI_AUDIO_PLUG</c> to define the audio encodings supported by
            the connected HDMI device.</summary>
        <remarks>
          <para>Extra used in <c>#ACTION_HDMI_AUDIO_PLUG</c> to define the audio encodings supported by
            the connected HDMI device.
            The corresponding array of encoding values is only available when the device is plugged in
            (as expressed by <c>#EXTRA_AUDIO_PLUG_STATE</c>). Encoding values are defined in
            <c>AudioFormat</c> (for instance see <c>AudioFormat#ENCODING_PCM_16BIT</c>). Use
            <c>android.content.Intent#getIntArrayExtra(String)</c> to retrieve the encoding values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_ENCODINGS" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_ENCODINGS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraMaxChannelCount">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraMaxChannelCount As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraMaxChannelCount;" />
      <MemberSignature Language="C#" Value="public const string ExtraMaxChannelCount;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMaxChannelCount" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraMaxChannelCount" />
      <MemberSignature Language="F#" Value="val mutable ExtraMaxChannelCount : string" Usage="Android.Media.AudioManager.ExtraMaxChannelCount" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_MAX_CHANNEL_COUNT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_MAX_CHANNEL_COUNT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra used in <c>#ACTION_HDMI_AUDIO_PLUG</c> to define the maximum number of channels
            supported by the HDMI device.</summary>
        <remarks>
          <para>Extra used in <c>#ACTION_HDMI_AUDIO_PLUG</c> to define the maximum number of channels
            supported by the HDMI device.
            The corresponding integer value is only available when the device is plugged in (as expressed
            by <c>#EXTRA_AUDIO_PLUG_STATE</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_MAX_CHANNEL_COUNT" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_MAX_CHANNEL_COUNT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraRingerMode">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraRingerMode As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraRingerMode;" />
      <MemberSignature Language="C#" Value="public const string ExtraRingerMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraRingerMode" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraRingerMode" />
      <MemberSignature Language="F#" Value="val mutable ExtraRingerMode : string" Usage="Android.Media.AudioManager.ExtraRingerMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_RINGER_MODE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_RINGER_MODE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The new ringer mode.</summary>
        <remarks>
          <para>The new ringer mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_RINGER_MODE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_RINGER_MODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.RingerModeChangedAction" />
      </Docs>
    </Member>
    <Member MemberName="ExtraScoAudioPreviousState">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraScoAudioPreviousState As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraScoAudioPreviousState;" />
      <MemberSignature Language="C#" Value="public const string ExtraScoAudioPreviousState;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraScoAudioPreviousState" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraScoAudioPreviousState" />
      <MemberSignature Language="F#" Value="val mutable ExtraScoAudioPreviousState : string" Usage="Android.Media.AudioManager.ExtraScoAudioPreviousState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_SCO_AUDIO_PREVIOUS_STATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_SCO_AUDIO_PREVIOUS_STATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra for intent <c>#ACTION_SCO_AUDIO_STATE_UPDATED</c> containing the previous
            bluetooth SCO connection state.</summary>
        <remarks>
          <para>Extra for intent <c>#ACTION_SCO_AUDIO_STATE_UPDATED</c> containing the previous
            bluetooth SCO connection state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_SCO_AUDIO_PREVIOUS_STATE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_SCO_AUDIO_PREVIOUS_STATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ExtraScoAudioState">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraScoAudioState As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraScoAudioState;" />
      <MemberSignature Language="C#" Value="public const string ExtraScoAudioState;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraScoAudioState" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraScoAudioState" />
      <MemberSignature Language="F#" Value="val mutable ExtraScoAudioState : string" Usage="Android.Media.AudioManager.ExtraScoAudioState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_SCO_AUDIO_STATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_SCO_AUDIO_STATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra for intent <c>#ACTION_SCO_AUDIO_STATE_CHANGED</c> or
            <c>#ACTION_SCO_AUDIO_STATE_UPDATED</c> containing the new bluetooth SCO connection state.</summary>
        <remarks>
          <para>Extra for intent <c>#ACTION_SCO_AUDIO_STATE_CHANGED</c> or
            <c>#ACTION_SCO_AUDIO_STATE_UPDATED</c> containing the new bluetooth SCO connection state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_SCO_AUDIO_STATE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_SCO_AUDIO_STATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ExtraVibrateSetting">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraVibrateSetting As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraVibrateSetting;" />
      <MemberSignature Language="C#" Value="public const string ExtraVibrateSetting;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraVibrateSetting" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraVibrateSetting" />
      <MemberSignature Language="F#" Value="val mutable ExtraVibrateSetting : string" Usage="Android.Media.AudioManager.ExtraVibrateSetting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_VIBRATE_SETTING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_VIBRATE_SETTING")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The new vibrate setting for a particular type.</summary>
        <remarks>
          <para>The new vibrate setting for a particular type.</para>
          <para>This member is deprecated. Applications should maintain their own vibrate policy based on
            current ringer mode and listen to <c>#RINGER_MODE_CHANGED_ACTION</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_VIBRATE_SETTING" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_VIBRATE_SETTING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.VibrateSettingChangedAction" />
        <altmember cref="F:Android.Media.AudioManager.ExtraVibrateType" />
      </Docs>
    </Member>
    <Member MemberName="ExtraVibrateType">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraVibrateType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraVibrateType;" />
      <MemberSignature Language="C#" Value="public const string ExtraVibrateType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraVibrateType" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraVibrateType" />
      <MemberSignature Language="F#" Value="val mutable ExtraVibrateType : string" Usage="Android.Media.AudioManager.ExtraVibrateType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_VIBRATE_TYPE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_VIBRATE_TYPE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The vibrate type whose setting has changed.</summary>
        <remarks>
          <para>The vibrate type whose setting has changed.</para>
          <para>This member is deprecated. Applications should maintain their own vibrate policy based on
            current ringer mode and listen to <c>#RINGER_MODE_CHANGED_ACTION</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_VIBRATE_TYPE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_VIBRATE_TYPE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.VibrateSettingChangedAction" />
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromContext (context As Context) As AudioManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Media::AudioManager ^ FromContext(Android::Content::Context ^ context);" />
      <MemberSignature Language="C#" Value="public static Android.Media.AudioManager? FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.AudioManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.FromContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member FromContext : Android.Content.Context -&gt; Android.Media.AudioManager" Usage="Android.Media.AudioManager.FromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Media.AudioManager</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FxBack">
      <MemberSignature Language="VB.NET" Value="Public Const FxBack As SoundEffect  = 10" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::SoundEffect FxBack = 10;" />
      <MemberSignature Language="C#" Value="public const Android.Media.SoundEffect FxBack = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.SoundEffect FxBack = (10)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.FxBack" />
      <MemberSignature Language="F#" Value="val mutable FxBack : Android.Media.SoundEffect" Usage="Android.Media.AudioManager.FxBack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FX_BACK", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FX_BACK", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.SoundEffect enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.SoundEffect enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.SoundEffect</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>Back sound</summary>
        <remarks>
          <para>Back sound</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#FX_BACK" title="Reference documentation">Java documentation for <code>android.media.AudioManager.FX_BACK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateAudioSessionId">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateAudioSessionId () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GenerateAudioSessionId();" />
      <MemberSignature Language="C#" Value="public virtual int GenerateAudioSessionId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GenerateAudioSessionId() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GenerateAudioSessionId" />
      <MemberSignature Language="F#" Value="abstract member GenerateAudioSessionId : unit -&gt; int&#xA;override this.GenerateAudioSessionId : unit -&gt; int" Usage="audioManager.GenerateAudioSessionId " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateAudioSessionId", "()I", "GetGenerateAudioSessionIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateAudioSessionId", "()I", "GetGenerateAudioSessionIdHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return a new audio session identifier not associated with any player or effect.</summary>
        <returns>a new unclaimed and unused audio session identifier, or <c>#ERROR</c> when the
              system failed to generate a new session, a condition in which audio playback or recording
              will subsequently fail as well.</returns>
        <remarks>
          <para>Return a new audio session identifier not associated with any player or effect.
            An audio session identifier is a system wide unique identifier for a set of audio streams
            (one or more mixed together).</para>
          <para>The primary use of the audio session ID is to associate audio effects to audio players,
            such as <c>MediaPlayer</c> or <c>AudioTrack</c>: all audio effects sharing the same audio
            session ID will be applied to the mixed audio content of the players that share the same
            audio session.</para>
          <para>This method can for instance be used when creating one of the
            <c>android.media.audiofx.AudioEffect</c> objects to define the audio session of the effect,
            or to specify a session for a speech synthesis utterance
            in <c>android.speech.tts.TextToSpeech.Engine</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#generateAudioSessionId()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.generateAudioSessionId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAudioDevicesForAttributes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAudioDevicesForAttributes (attributes As AudioAttributes) As IList(Of AudioDeviceInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Android::Media::AudioDeviceInfo ^&gt; ^ GetAudioDevicesForAttributes(Android::Media::AudioAttributes ^ attributes);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.AudioDeviceInfo&gt; GetAudioDevicesForAttributes (Android.Media.AudioAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Media.AudioDeviceInfo&gt; GetAudioDevicesForAttributes(class Android.Media.AudioAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetAudioDevicesForAttributes(Android.Media.AudioAttributes)" />
      <MemberSignature Language="F#" Value="abstract member GetAudioDevicesForAttributes : Android.Media.AudioAttributes -&gt; System.Collections.Generic.IList&lt;Android.Media.AudioDeviceInfo&gt;&#xA;override this.GetAudioDevicesForAttributes : Android.Media.AudioAttributes -&gt; System.Collections.Generic.IList&lt;Android.Media.AudioDeviceInfo&gt;" Usage="audioManager.GetAudioDevicesForAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAudioDevicesForAttributes", "(Landroid/media/AudioAttributes;)Ljava/util/List;", "GetGetAudioDevicesForAttributes_Landroid_media_AudioAttributes_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAudioDevicesForAttributes", "(Landroid/media/AudioAttributes;)Ljava/util/List;", "GetGetAudioDevicesForAttributes_Landroid_media_AudioAttributes_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.AudioDeviceInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes">the <c>AudioAttributes</c> for which the routing is being queried</param>
        <summary>Get the audio devices that would be used for the routing of the given audio attributes.</summary>
        <returns>an empty list if there was an issue with the request, a list of
            <c>AudioDeviceInfo</c> otherwise (typically one device, except for duplicated paths).</returns>
        <remarks>
          <para>Get the audio devices that would be used for the routing of the given audio attributes.
            These are the devices anticipated to play sound from an <c>AudioTrack</c> created with
            the specified <c>AudioAttributes</c>.
            The audio routing can change if audio devices are physically connected or disconnected or
            concurrently through <c>AudioRouting</c> or <c>MediaRouter</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getAudioDevicesForAttributes(android.media.AudioAttributes)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getAudioDevicesForAttributes(android.media.AudioAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAudioHwSyncForSession">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAudioHwSyncForSession (sessionId As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetAudioHwSyncForSession(int sessionId);" />
      <MemberSignature Language="C#" Value="public virtual int GetAudioHwSyncForSession (int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetAudioHwSyncForSession(int32 sessionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetAudioHwSyncForSession(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetAudioHwSyncForSession : int -&gt; int&#xA;override this.GetAudioHwSyncForSession : int -&gt; int" Usage="audioManager.GetAudioHwSyncForSession sessionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAudioHwSyncForSession", "(I)I", "GetGetAudioHwSyncForSession_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAudioHwSyncForSession", "(I)I", "GetGetAudioHwSyncForSession_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sessionId">the audio session ID for which the HW A/V sync ID is retrieved.</param>
        <summary>Retrieves the Hardware A/V synchronization ID corresponding to the given audio session ID.</summary>
        <returns>the HW A/V sync ID for this audio session (an integer different from 0).</returns>
        <remarks>
          <para>Retrieves the Hardware A/V synchronization ID corresponding to the given audio session ID.
            For more details on Hardware A/V synchronization please refer to
             <see href="https://source.android.com/devices/tv/multimedia-tunneling/">
            media tunneling documentation</see>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getAudioHwSyncForSession(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getAudioHwSyncForSession(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevices">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDevices (flags As GetDevicesTargets) As AudioDeviceInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Android::Media::AudioDeviceInfo ^&gt; ^ GetDevices(Android::Media::GetDevicesTargets flags);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioDeviceInfo[]? GetDevices (Android.Media.GetDevicesTargets flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.AudioDeviceInfo[] GetDevices(valuetype Android.Media.GetDevicesTargets flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetDevices(Android.Media.GetDevicesTargets)" />
      <MemberSignature Language="F#" Value="abstract member GetDevices : Android.Media.GetDevicesTargets -&gt; Android.Media.AudioDeviceInfo[]&#xA;override this.GetDevices : Android.Media.GetDevicesTargets -&gt; Android.Media.AudioDeviceInfo[]" Usage="audioManager.GetDevices flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDevices", "(I)[Landroid/media/AudioDeviceInfo;", "GetGetDevices_IHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDevices", "(I)[Landroid/media/AudioDeviceInfo;", "GetGetDevices_IHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioDeviceInfo[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Media.GetDevicesTargets">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">A set of bitflags specifying the criteria to test.</param>
        <summary>Returns an array of <c>AudioDeviceInfo</c> objects corresponding to the audio devices
            currently connected to the system and meeting the criteria specified in the
            <c>flags</c> parameter.</summary>
        <returns>A (possibly zero-length) array of AudioDeviceInfo objects.</returns>
        <remarks>
          <para>Returns an array of <c>AudioDeviceInfo</c> objects corresponding to the audio devices
            currently connected to the system and meeting the criteria specified in the
            <c>flags</c> parameter.
            Notes that Android audio framework only support one device per device type. In that case,
            if there are multiple audio device with the same device type connected to the Android device,
            only the last reported device will be known by Android audio framework and returned by this
            API.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getDevices(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getDevices(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectPlaybackSupport">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDirectPlaybackSupport (format As AudioFormat, attributes As AudioAttributes) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetDirectPlaybackSupport(Android::Media::AudioFormat ^ format, Android::Media::AudioAttributes ^ attributes);" />
      <MemberSignature Language="C#" Value="public static int GetDirectPlaybackSupport (Android.Media.AudioFormat format, Android.Media.AudioAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetDirectPlaybackSupport(class Android.Media.AudioFormat format, class Android.Media.AudioAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetDirectPlaybackSupport(Android.Media.AudioFormat,Android.Media.AudioAttributes)" />
      <MemberSignature Language="F#" Value="static member GetDirectPlaybackSupport : Android.Media.AudioFormat * Android.Media.AudioAttributes -&gt; int" Usage="Android.Media.AudioManager.GetDirectPlaybackSupport (format, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDirectPlaybackSupport", "(Landroid/media/AudioFormat;Landroid/media/AudioAttributes;)I", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDirectPlaybackSupport", "(Landroid/media/AudioFormat;Landroid/media/AudioAttributes;)I", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Media.AudioFormat" />
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
      </Parameters>
      <Docs>
        <param name="format">the audio format (codec, sample rate, channels) being checked.</param>
        <param name="attributes">the <c>AudioAttributes</c> to be used for playback</param>
        <summary>Returns a bitfield representing the different forms of direct playback currently available
            for a given audio format.</summary>
        <returns>the direct playback mode available with given format and attributes. The returned
                    value will be <c>#DIRECT_PLAYBACK_NOT_SUPPORTED</c> or a combination of
                    <c>#DIRECT_PLAYBACK_OFFLOAD_SUPPORTED</c>,
                    <c>#DIRECT_PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED</c> and
                    <c>#DIRECT_PLAYBACK_BITSTREAM_SUPPORTED</c>. Note that if
                    <c>#DIRECT_PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED</c> is present in the returned value,
                    then <c>#DIRECT_PLAYBACK_OFFLOAD_SUPPORTED</c> will be too.</returns>
        <remarks>
          <para>Returns a bitfield representing the different forms of direct playback currently available
            for a given audio format.</para>
          <para>Direct playback means that the audio stream is not altered by the framework. The audio
            stream will not be resampled, volume scaled, downmixed or mixed with other content by
            the framework. But it may be wrapped in a higher level protocol such as IEC61937 for
            passthrough.</para>
          <para>Checking for direct support can help the app select the representation of audio content
            that most closely matches the capabilities of the device and peripherals (e.g. A/V receiver)
            connected to it. Note that the provided stream can still be re-encoded or mixed with other
            streams, if needed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getDirectPlaybackSupport(android.media.AudioFormat,%20android.media.AudioAttributes)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getDirectPlaybackSupport(android.media.AudioFormat, android.media.AudioAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDirectProfilesForAttributes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDirectProfilesForAttributes (attributes As AudioAttributes) As IList(Of AudioProfile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Android::Media::AudioProfile ^&gt; ^ GetDirectProfilesForAttributes(Android::Media::AudioAttributes ^ attributes);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.AudioProfile&gt; GetDirectProfilesForAttributes (Android.Media.AudioAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Media.AudioProfile&gt; GetDirectProfilesForAttributes(class Android.Media.AudioAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetDirectProfilesForAttributes(Android.Media.AudioAttributes)" />
      <MemberSignature Language="F#" Value="abstract member GetDirectProfilesForAttributes : Android.Media.AudioAttributes -&gt; System.Collections.Generic.IList&lt;Android.Media.AudioProfile&gt;&#xA;override this.GetDirectProfilesForAttributes : Android.Media.AudioAttributes -&gt; System.Collections.Generic.IList&lt;Android.Media.AudioProfile&gt;" Usage="audioManager.GetDirectProfilesForAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDirectProfilesForAttributes", "(Landroid/media/AudioAttributes;)Ljava/util/List;", "GetGetDirectProfilesForAttributes_Landroid_media_AudioAttributes_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDirectProfilesForAttributes", "(Landroid/media/AudioAttributes;)Ljava/util/List;", "GetGetDirectProfilesForAttributes_Landroid_media_AudioAttributes_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.AudioProfile&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes">a non-null <c>AudioAttributes</c> instance.</param>
        <summary>Returns a list of direct <c>AudioProfile</c> that are supported for the specified
            <c>AudioAttributes</c>.</summary>
        <returns>a list of <c>AudioProfile</c></returns>
        <remarks>
          <para>Returns a list of direct <c>AudioProfile</c> that are supported for the specified
            <c>AudioAttributes</c>. This can be empty in case of an error or if no direct playback
            is possible.</para>
          <para>Direct playback means that the audio stream is not resampled or downmixed
            by the framework. Checking for direct support can help the app select the representation
            of audio content that most closely matches the capabilities of the device and peripherals
            (e.g. A/V receiver) connected to it. Note that the provided stream can still be re-encoded
            or mixed with other streams, if needed.</para>
          <para>When using this information to inform your application which audio format to play,
            query again whenever audio output devices change (see <c>AudioDeviceCallback</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getDirectProfilesForAttributes(android.media.AudioAttributes)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getDirectProfilesForAttributes(android.media.AudioAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetParameters (keys As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetParameters(System::String ^ keys);" />
      <MemberSignature Language="C#" Value="public virtual string? GetParameters (string? keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetParameters(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetParameters(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetParameters : string -&gt; string&#xA;override this.GetParameters : string -&gt; string" Usage="audioManager.GetParameters keys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getParameters", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetParameters_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getParameters", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetParameters_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">list of parameters</param>
        <summary>Gets a variable number of parameter values from audio hardware.</summary>
        <returns>list of parameters key value pairs in the form:
               key1=value1;key2=value2;...</returns>
        <remarks>
          <para>Gets a variable number of parameter values from audio hardware.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getParameters(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getParameters(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetPlaybackOffloadSupport">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPlaybackOffloadSupport (format As AudioFormat, attributes As AudioAttributes) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetPlaybackOffloadSupport(Android::Media::AudioFormat ^ format, Android::Media::AudioAttributes ^ attributes);" />
      <MemberSignature Language="C#" Value="public static int GetPlaybackOffloadSupport (Android.Media.AudioFormat format, Android.Media.AudioAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetPlaybackOffloadSupport(class Android.Media.AudioFormat format, class Android.Media.AudioAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetPlaybackOffloadSupport(Android.Media.AudioFormat,Android.Media.AudioAttributes)" />
      <MemberSignature Language="F#" Value="static member GetPlaybackOffloadSupport : Android.Media.AudioFormat * Android.Media.AudioAttributes -&gt; int" Usage="Android.Media.AudioManager.GetPlaybackOffloadSupport (format, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPlaybackOffloadSupport", "(Landroid/media/AudioFormat;Landroid/media/AudioAttributes;)I", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPlaybackOffloadSupport", "(Landroid/media/AudioFormat;Landroid/media/AudioAttributes;)I", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Media.AudioFormat" />
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
      </Parameters>
      <Docs>
        <param name="format">the audio format (codec, sample rate, channels) being checked.</param>
        <param name="attributes">the <c>AudioAttributes</c> to be used for playback</param>
        <summary>Returns whether offloaded playback of an audio format is supported on the device or not and
            when supported whether gapless transitions are possible or not.</summary>
        <returns>
          <c>#PLAYBACK_OFFLOAD_NOT_SUPPORTED</c> if offload playback if not supported,
                    <c>#PLAYBACK_OFFLOAD_SUPPORTED</c> if offload playback is supported or
                    <c>#PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED</c> if gapless transitions are
                    also supported.</returns>
        <remarks>
          <para>Returns whether offloaded playback of an audio format is supported on the device or not and
            when supported whether gapless transitions are possible or not.</para>
          <para>Offloaded playback is the feature where the decoding and playback of an audio stream
            is not competing with other software resources. In general, it is supported by dedicated
            hardware, such as audio DSPs.</para>
          <para>Note that this query only provides information about the support of an audio format,
            it does not indicate whether the resources necessary for the offloaded playback are
            available at that instant.</para>
          <para>This member is deprecated. Use <c>#getDirectPlaybackSupport(AudioFormat, AudioAttributes)</c> instead</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getPlaybackOffloadSupport(android.media.AudioFormat,%20android.media.AudioAttributes)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getPlaybackOffloadSupport(android.media.AudioFormat, android.media.AudioAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredMixerAttributes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPreferredMixerAttributes (attributes As AudioAttributes, device As AudioDeviceInfo) As AudioMixerAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::AudioMixerAttributes ^ GetPreferredMixerAttributes(Android::Media::AudioAttributes ^ attributes, Android::Media::AudioDeviceInfo ^ device);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioMixerAttributes? GetPreferredMixerAttributes (Android.Media.AudioAttributes attributes, Android.Media.AudioDeviceInfo device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.AudioMixerAttributes GetPreferredMixerAttributes(class Android.Media.AudioAttributes attributes, class Android.Media.AudioDeviceInfo device) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetPreferredMixerAttributes(Android.Media.AudioAttributes,Android.Media.AudioDeviceInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetPreferredMixerAttributes : Android.Media.AudioAttributes * Android.Media.AudioDeviceInfo -&gt; Android.Media.AudioMixerAttributes&#xA;override this.GetPreferredMixerAttributes : Android.Media.AudioAttributes * Android.Media.AudioDeviceInfo -&gt; Android.Media.AudioMixerAttributes" Usage="audioManager.GetPreferredMixerAttributes (attributes, device)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPreferredMixerAttributes", "(Landroid/media/AudioAttributes;Landroid/media/AudioDeviceInfo;)Landroid/media/AudioMixerAttributes;", "GetGetPreferredMixerAttributes_Landroid_media_AudioAttributes_Landroid_media_AudioDeviceInfo_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPreferredMixerAttributes", "(Landroid/media/AudioAttributes;Landroid/media/AudioDeviceInfo;)Landroid/media/AudioMixerAttributes;", "GetGetPreferredMixerAttributes_Landroid_media_AudioAttributes_Landroid_media_AudioDeviceInfo_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioMixerAttributes</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
        <Parameter Name="device" Type="Android.Media.AudioDeviceInfo" />
      </Parameters>
      <Docs>
        <param name="attributes">the <c>AudioAttributes</c> whose mixer attributes should be set.</param>
        <param name="device">the expected routing device</param>
        <summary>Returns current preferred mixer attributes that is set via
            <c>#setPreferredMixerAttributes(AudioAttributes, AudioDeviceInfo, AudioMixerAttributes)</c></summary>
        <returns>the preferred mixer attributes, which will be null when no preferred mixer attributes
                    have been set, or when they have been cleared.</returns>
        <remarks>
          <para>Returns current preferred mixer attributes that is set via
            <c>#setPreferredMixerAttributes(AudioAttributes, AudioDeviceInfo, AudioMixerAttributes)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getPreferredMixerAttributes(android.media.AudioAttributes,%20android.media.AudioDeviceInfo)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getPreferredMixerAttributes(android.media.AudioAttributes, android.media.AudioDeviceInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperty (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetProperty(System::String ^ key);" />
      <MemberSignature Language="C#" Value="public virtual string? GetProperty (string? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetProperty(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetProperty(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; string&#xA;override this.GetProperty : string -&gt; string" Usage="audioManager.GetProperty key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetProperty_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetProperty_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">One of the strings corresponding to a property key: either
                       <c>#PROPERTY_OUTPUT_SAMPLE_RATE</c>,
                       <c>#PROPERTY_OUTPUT_FRAMES_PER_BUFFER</c>,
                       <c>#PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND</c>,
                       <c>#PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND</c>, or
                       <c>#PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED</c>.</param>
        <summary>Returns the value of the property with the specified key.</summary>
        <returns>A string representing the associated value for that property key,
                    or null if there is no value for that key.</returns>
        <remarks>
          <para>Returns the value of the property with the specified key.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getProperty(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getProperty(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetRouting">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRouting (mode As Mode) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::Route GetRouting(Android::Media::Mode mode);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.Route GetRouting (Android.Media.Mode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.Route GetRouting(valuetype Android.Media.Mode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetRouting(Android.Media.Mode)" />
      <MemberSignature Language="F#" Value="abstract member GetRouting : Android.Media.Mode -&gt; Android.Media.Route&#xA;override this.GetRouting : Android.Media.Mode -&gt; Android.Media.Route" Usage="audioManager.GetRouting mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRouting", "(I)I", "GetGetRouting_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRouting", "(I)I", "GetGetRouting_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Route</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Media.Mode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">audio mode to get route (e.g., MODE_RINGTONE)</param>
        <summary>Returns the current audio routing bit vector for a specified mode.</summary>
        <returns>an audio route bit vector that can be compared with ROUTE_xxx
            bits</returns>
        <remarks>
          <para>Returns the current audio routing bit vector for a specified mode.</para>
          <para>This member is deprecated. Do not query audio routing directly, use isSpeakerphoneOn(),
            isBluetoothScoOn(), isBluetoothA2dpOn() and isWiredHeadsetOn() methods instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getRouting(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getRouting(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetStreamMaxVolume">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamMaxVolume (streamType As Stream) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetStreamMaxVolume(Android::Media::Stream streamType);" />
      <MemberSignature Language="C#" Value="public virtual int GetStreamMaxVolume (Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetStreamMaxVolume(valuetype Android.Media.Stream streamType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetStreamMaxVolume(Android.Media.Stream)" />
      <MemberSignature Language="F#" Value="abstract member GetStreamMaxVolume : Android.Media.Stream -&gt; int&#xA;override this.GetStreamMaxVolume : Android.Media.Stream -&gt; int" Usage="audioManager.GetStreamMaxVolume streamType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStreamMaxVolume", "(I)I", "GetGetStreamMaxVolume_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStreamMaxVolume", "(I)I", "GetGetStreamMaxVolume_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream type whose maximum volume index is returned.</param>
        <summary>Returns the maximum volume index for a particular stream.</summary>
        <returns>The maximum valid volume index for the stream.</returns>
        <remarks>
          <para>Returns the maximum volume index for a particular stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getStreamMaxVolume(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getStreamMaxVolume(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.GetStreamVolume(Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="GetStreamMinVolume">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamMinVolume (streamType As Stream) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetStreamMinVolume(Android::Media::Stream streamType);" />
      <MemberSignature Language="C#" Value="public virtual int GetStreamMinVolume (Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetStreamMinVolume(valuetype Android.Media.Stream streamType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetStreamMinVolume(Android.Media.Stream)" />
      <MemberSignature Language="F#" Value="abstract member GetStreamMinVolume : Android.Media.Stream -&gt; int&#xA;override this.GetStreamMinVolume : Android.Media.Stream -&gt; int" Usage="audioManager.GetStreamMinVolume streamType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStreamMinVolume", "(I)I", "GetGetStreamMinVolume_IHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStreamMinVolume", "(I)I", "GetGetStreamMinVolume_IHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream type whose minimum volume index is returned. Must be one of
                <c>#STREAM_VOICE_CALL</c>, <c>#STREAM_SYSTEM</c>,
                <c>#STREAM_RING</c>, <c>#STREAM_MUSIC</c>, <c>#STREAM_ALARM</c>,
                <c>#STREAM_NOTIFICATION</c>, <c>#STREAM_DTMF</c> or <c>#STREAM_ACCESSIBILITY</c>.</param>
        <summary>Returns the minimum volume index for a particular stream.</summary>
        <returns>The minimum valid volume index for the stream.</returns>
        <remarks>
          <para>Returns the minimum volume index for a particular stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getStreamMinVolume(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getStreamMinVolume(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamVolume">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamVolume (streamType As Stream) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetStreamVolume(Android::Media::Stream streamType);" />
      <MemberSignature Language="C#" Value="public virtual int GetStreamVolume (Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetStreamVolume(valuetype Android.Media.Stream streamType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetStreamVolume(Android.Media.Stream)" />
      <MemberSignature Language="F#" Value="abstract member GetStreamVolume : Android.Media.Stream -&gt; int&#xA;override this.GetStreamVolume : Android.Media.Stream -&gt; int" Usage="audioManager.GetStreamVolume streamType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStreamVolume", "(I)I", "GetGetStreamVolume_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStreamVolume", "(I)I", "GetGetStreamVolume_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream type whose volume index is returned.</param>
        <summary>Returns the current volume index for a particular stream.</summary>
        <returns>The current volume index for the stream.</returns>
        <remarks>
          <para>Returns the current volume index for a particular stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getStreamVolume(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getStreamVolume(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.GetStreamMaxVolume(Android.Media.Stream)" />
        <altmember cref="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetStreamVolumeDb">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStreamVolumeDb (streamType As Stream, index As Integer, deviceType As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float GetStreamVolumeDb(Android::Media::Stream streamType, int index, int deviceType);" />
      <MemberSignature Language="C#" Value="public virtual float GetStreamVolumeDb (Android.Media.Stream streamType, int index, int deviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetStreamVolumeDb(valuetype Android.Media.Stream streamType, int32 index, int32 deviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetStreamVolumeDb(Android.Media.Stream,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetStreamVolumeDb : Android.Media.Stream * int * int -&gt; single&#xA;override this.GetStreamVolumeDb : Android.Media.Stream * int * int -&gt; single" Usage="audioManager.GetStreamVolumeDb (streamType, index, deviceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStreamVolumeDb", "(III)F", "GetGetStreamVolumeDb_IIIHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStreamVolumeDb", "(III)F", "GetGetStreamVolumeDb_IIIHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="deviceType" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" }, Flag=true, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" }, Flag=true, Type="")&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "TypeHdmiEarc", "TypeBuiltinSpeakerSafe", "TypeBleHeadset", "TypeBleSpeaker", "TypeBleBroadcast", "TypeDockAnalog" }, Flag=true, Type="Android.Media.AudioDeviceInfo")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "TypeHdmiEarc", "TypeBuiltinSpeakerSafe", "TypeBleHeadset", "TypeBleSpeaker", "TypeBleBroadcast", "TypeDockAnalog" }, Flag=true, Type="Android.Media.AudioDeviceInfo")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">stream type for which the volume is queried.</param>
        <param name="index">the volume index for which the volume is queried. The index value must be
                between the minimum and maximum index values for the given stream type (see
                <c>#getStreamMinVolume(int)</c> and <c>#getStreamMaxVolume(int)</c>).</param>
        <param name="deviceType">the type of audio output device for which volume is queried.</param>
        <summary>Returns the volume in dB (decibel) for the given stream type at the given volume index, on
            the given type of audio output device.</summary>
        <returns>a volume expressed in dB.
                A negative value indicates the audio signal is attenuated. A typical maximum value
                at the maximum volume index is 0 dB (no attenuation nor amplification). Muting is
                reflected by a value of <c>Float#NEGATIVE_INFINITY</c>.</returns>
        <remarks>
          <para>Returns the volume in dB (decibel) for the given stream type at the given volume index, on
            the given type of audio output device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getStreamVolumeDb(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getStreamVolumeDb(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSupportedMixerAttributes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSupportedMixerAttributes (device As AudioDeviceInfo) As IList(Of AudioMixerAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Android::Media::AudioMixerAttributes ^&gt; ^ GetSupportedMixerAttributes(Android::Media::AudioDeviceInfo ^ device);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.AudioMixerAttributes&gt; GetSupportedMixerAttributes (Android.Media.AudioDeviceInfo device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Media.AudioMixerAttributes&gt; GetSupportedMixerAttributes(class Android.Media.AudioDeviceInfo device) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetSupportedMixerAttributes(Android.Media.AudioDeviceInfo)" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedMixerAttributes : Android.Media.AudioDeviceInfo -&gt; System.Collections.Generic.IList&lt;Android.Media.AudioMixerAttributes&gt;&#xA;override this.GetSupportedMixerAttributes : Android.Media.AudioDeviceInfo -&gt; System.Collections.Generic.IList&lt;Android.Media.AudioMixerAttributes&gt;" Usage="audioManager.GetSupportedMixerAttributes device" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSupportedMixerAttributes", "(Landroid/media/AudioDeviceInfo;)Ljava/util/List;", "GetGetSupportedMixerAttributes_Landroid_media_AudioDeviceInfo_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSupportedMixerAttributes", "(Landroid/media/AudioDeviceInfo;)Ljava/util/List;", "GetGetSupportedMixerAttributes_Landroid_media_AudioDeviceInfo_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.AudioMixerAttributes&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="Android.Media.AudioDeviceInfo" />
      </Parameters>
      <Docs>
        <param name="device">the device to query</param>
        <summary>Returns the <c>AudioMixerAttributes</c> that can be used to set as preferred mixer
            attributes via <c>#setPreferredMixerAttributes(
            AudioAttributes, AudioDeviceInfo, AudioMixerAttributes)</c>.</summary>
        <returns>a list of <c>AudioMixerAttributes</c> that can be used as preferred mixer attributes
                    for the given device.</returns>
        <remarks>
          <para>Returns the <c>AudioMixerAttributes</c> that can be used to set as preferred mixer
            attributes via <c>#setPreferredMixerAttributes(
            AudioAttributes, AudioDeviceInfo, AudioMixerAttributes)</c>.</para>
          <para>Note that only USB devices are guaranteed to expose configurable mixer attributes. An
            empty list may be returned for all other types of devices as they may not allow dynamic
            configuration.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getSupportedMixerAttributes(android.media.AudioDeviceInfo)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getSupportedMixerAttributes(android.media.AudioDeviceInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVibrateSetting">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVibrateSetting (vibrateType As VibrateType) As VibrateSetting" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::VibrateSetting GetVibrateSetting(Android::Media::VibrateType vibrateType);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.VibrateSetting GetVibrateSetting (Android.Media.VibrateType vibrateType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.VibrateSetting GetVibrateSetting(valuetype Android.Media.VibrateType vibrateType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetVibrateSetting(Android.Media.VibrateType)" />
      <MemberSignature Language="F#" Value="abstract member GetVibrateSetting : Android.Media.VibrateType -&gt; Android.Media.VibrateSetting&#xA;override this.GetVibrateSetting : Android.Media.VibrateType -&gt; Android.Media.VibrateSetting" Usage="audioManager.GetVibrateSetting vibrateType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getVibrateSetting", "(I)I", "GetGetVibrateSetting_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getVibrateSetting", "(I)I", "GetGetVibrateSetting_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.VibrateSetting</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vibrateType" Type="Android.Media.VibrateType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vibrateType">The type of vibrate. One of
                       <c>#VIBRATE_TYPE_NOTIFICATION</c> or
                       <c>#VIBRATE_TYPE_RINGER</c>.</param>
        <summary>Returns whether the user's vibrate setting for a vibrate type.</summary>
        <returns>The vibrate setting, one of <c>#VIBRATE_SETTING_ON</c>,
                    <c>#VIBRATE_SETTING_OFF</c>, or
                    <c>#VIBRATE_SETTING_ONLY_SILENT</c>.</returns>
        <remarks>
          <para>Returns whether the user's vibrate setting for a vibrate type.</para>
          <para>This shouldn't be needed by most clients that want to vibrate, instead
            see <c>#shouldVibrate(int)</c>.</para>
          <para>This member is deprecated. Applications should maintain their own vibrate policy based on
            current ringer mode that can be queried via <c>#getRingerMode()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getVibrateSetting(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getVibrateSetting(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.SetVibrateSetting(Android.Media.VibrateType, Android.Media.VibrateSetting)" />
        <altmember cref="M:Android.Media.AudioManager.ShouldVibrate(Android.Media.VibrateType)" />
      </Docs>
    </Member>
    <Member MemberName="GetVolumeGroupIdForAttributes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetVolumeGroupIdForAttributes (attributes As AudioAttributes) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetVolumeGroupIdForAttributes(Android::Media::AudioAttributes ^ attributes);" />
      <MemberSignature Language="C#" Value="public virtual int GetVolumeGroupIdForAttributes (Android.Media.AudioAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetVolumeGroupIdForAttributes(class Android.Media.AudioAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetVolumeGroupIdForAttributes(Android.Media.AudioAttributes)" />
      <MemberSignature Language="F#" Value="abstract member GetVolumeGroupIdForAttributes : Android.Media.AudioAttributes -&gt; int&#xA;override this.GetVolumeGroupIdForAttributes : Android.Media.AudioAttributes -&gt; int" Usage="audioManager.GetVolumeGroupIdForAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getVolumeGroupIdForAttributes", "(Landroid/media/AudioAttributes;)I", "GetGetVolumeGroupIdForAttributes_Landroid_media_AudioAttributes_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getVolumeGroupIdForAttributes", "(Landroid/media/AudioAttributes;)I", "GetGetVolumeGroupIdForAttributes_Landroid_media_AudioAttributes_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes">The <c>AudioAttributes</c> to consider.</param>
        <summary>Returns the volume group id associated to the given <c>AudioAttributes</c>.</summary>
        <returns>
          <c>android.media.audiopolicy.AudioVolumeGroup</c> id supporting the given
            <c>AudioAttributes</c> if found,
            <c>android.media.audiopolicy.AudioVolumeGroup.DEFAULT_VOLUME_GROUP</c> otherwise.</returns>
        <remarks>
          <para>Returns the volume group id associated to the given <c>AudioAttributes</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getVolumeGroupIdForAttributes(android.media.AudioAttributes)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getVolumeGroupIdForAttributes(android.media.AudioAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBluetoothScoAvailableOffCall">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBluetoothScoAvailableOffCall As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBluetoothScoAvailableOffCall { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsBluetoothScoAvailableOffCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBluetoothScoAvailableOffCall" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsBluetoothScoAvailableOffCall" />
      <MemberSignature Language="F#" Value="member this.IsBluetoothScoAvailableOffCall : bool" Usage="Android.Media.AudioManager.IsBluetoothScoAvailableOffCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBluetoothScoAvailableOffCall", "()Z", "GetIsBluetoothScoAvailableOffCallHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isBluetoothScoAvailableOffCall", "()Z", "GetIsBluetoothScoAvailableOffCallHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if current platform supports use of SCO for off call use cases.</summary>
        <value>true if bluetooth SCO can be used for audio when not in call
                    false otherwise</value>
        <remarks>
          <para>Indicates if current platform supports use of SCO for off call use cases.
            Application wanted to use bluetooth SCO audio when the phone is not in call
            must first call this method to make sure that the platform supports this
            feature.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isBluetoothScoAvailableOffCall()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isBluetoothScoAvailableOffCall()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.StartBluetoothSco" />
      </Docs>
    </Member>
    <Member MemberName="IsCallScreeningModeSupported">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCallScreeningModeSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCallScreeningModeSupported { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsCallScreeningModeSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCallScreeningModeSupported" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsCallScreeningModeSupported" />
      <MemberSignature Language="F#" Value="member this.IsCallScreeningModeSupported : bool" Usage="Android.Media.AudioManager.IsCallScreeningModeSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isCallScreeningModeSupported", "()Z", "GetIsCallScreeningModeSupportedHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isCallScreeningModeSupported", "()Z", "GetIsCallScreeningModeSupportedHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the platform supports a special call screening and call monitoring mode.</summary>
        <value>true if call screening mode is supported, false otherwise.</value>
        <remarks>
          <para>Indicates if the platform supports a special call screening and call monitoring mode.</para>
          <para>When this mode is supported, it is possible to perform call screening and monitoring
            functions while other use cases like music or movie playback are active.</para>
          <para>Use <c>#setMode(int)</c> with mode <c>#MODE_CALL_SCREENING</c> to place the platform in
            call screening mode.</para>
          <para>If call screening mode is not supported, setting mode to
            MODE_CALL_SCREENING will be ignored and will not change current mode reported by
             <c>#getMode()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isCallScreeningModeSupported()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isCallScreeningModeSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHapticPlaybackSupported">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsHapticPlaybackSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsHapticPlaybackSupported { bool get(); };" />
      <MemberSignature Language="C#" Value="public static bool IsHapticPlaybackSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsHapticPlaybackSupported" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsHapticPlaybackSupported" />
      <MemberSignature Language="F#" Value="member this.IsHapticPlaybackSupported : bool" Usage="Android.Media.AudioManager.IsHapticPlaybackSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isHapticPlaybackSupported", "()Z", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isHapticPlaybackSupported", "()Z", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return if audio haptic coupled playback is supported or not.</summary>
        <value>whether audio haptic playback supported.</value>
        <remarks>
          <para>Return if audio haptic coupled playback is supported or not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isHapticPlaybackSupported()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isHapticPlaybackSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMusicActive">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsMusicActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMusicActive { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsMusicActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMusicActive" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsMusicActive" />
      <MemberSignature Language="F#" Value="member this.IsMusicActive : bool" Usage="Android.Media.AudioManager.IsMusicActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMusicActive", "()Z", "GetIsMusicActiveHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMusicActive", "()Z", "GetIsMusicActiveHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether any music is active.</summary>
        <value>true if any music tracks are active.</value>
        <remarks>
          <para>Checks whether any music is active.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isMusicActive()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isMusicActive()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsOffloadedPlaybackSupported">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsOffloadedPlaybackSupported (format As AudioFormat, attributes As AudioAttributes) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsOffloadedPlaybackSupported(Android::Media::AudioFormat ^ format, Android::Media::AudioAttributes ^ attributes);" />
      <MemberSignature Language="C#" Value="public static bool IsOffloadedPlaybackSupported (Android.Media.AudioFormat format, Android.Media.AudioAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsOffloadedPlaybackSupported(class Android.Media.AudioFormat format, class Android.Media.AudioAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.IsOffloadedPlaybackSupported(Android.Media.AudioFormat,Android.Media.AudioAttributes)" />
      <MemberSignature Language="F#" Value="static member IsOffloadedPlaybackSupported : Android.Media.AudioFormat * Android.Media.AudioAttributes -&gt; bool" Usage="Android.Media.AudioManager.IsOffloadedPlaybackSupported (format, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isOffloadedPlaybackSupported", "(Landroid/media/AudioFormat;Landroid/media/AudioAttributes;)Z", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isOffloadedPlaybackSupported", "(Landroid/media/AudioFormat;Landroid/media/AudioAttributes;)Z", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Media.AudioFormat" />
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
      </Parameters>
      <Docs>
        <param name="format">the audio format (codec, sample rate, channels) being checked.</param>
        <param name="attributes">the <c>AudioAttributes</c> to be used for playback</param>
        <summary>Returns whether offloaded playback of an audio format is supported on the device.</summary>
        <returns>true if the given audio format can be offloaded.</returns>
        <remarks>
          <para>Returns whether offloaded playback of an audio format is supported on the device.</para>
          <para>Offloaded playback is the feature where the decoding and playback of an audio stream
            is not competing with other software resources. In general, it is supported by dedicated
            hardware, such as audio DSPs.</para>
          <para>Note that this query only provides information about the support of an audio format,
            it does not indicate whether the resources necessary for the offloaded playback are
            available at that instant.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isOffloadedPlaybackSupported(android.media.AudioFormat,%20android.media.AudioAttributes)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isOffloadedPlaybackSupported(android.media.AudioFormat, android.media.AudioAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRampingRingerEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsRampingRingerEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsRampingRingerEnabled { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsRampingRingerEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRampingRingerEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsRampingRingerEnabled" />
      <MemberSignature Language="F#" Value="member this.IsRampingRingerEnabled : bool" Usage="Android.Media.AudioManager.IsRampingRingerEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRampingRingerEnabled", "()Z", "GetIsRampingRingerEnabledHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRampingRingerEnabled", "()Z", "GetIsRampingRingerEnabledHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current user setting for ramping ringer on incoming phone call ringtone.</summary>
        <value>true if the incoming phone call ringtone is configured to gradually increase its
            volume, false otherwise.</value>
        <remarks>
          <para>Returns the current user setting for ramping ringer on incoming phone call ringtone.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isRampingRingerEnabled()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isRampingRingerEnabled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStreamMute">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsStreamMute (streamType As Stream) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsStreamMute(Android::Media::Stream streamType);" />
      <MemberSignature Language="C#" Value="public virtual bool IsStreamMute (Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStreamMute(valuetype Android.Media.Stream streamType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.IsStreamMute(Android.Media.Stream)" />
      <MemberSignature Language="F#" Value="abstract member IsStreamMute : Android.Media.Stream -&gt; bool&#xA;override this.IsStreamMute : Android.Media.Stream -&gt; bool" Usage="audioManager.IsStreamMute streamType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isStreamMute", "(I)Z", "GetIsStreamMute_IHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isStreamMute", "(I)Z", "GetIsStreamMute_IHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream to get mute state for.</param>
        <summary>Returns the current mute state for a particular stream.</summary>
        <returns>The mute state for the given stream.</returns>
        <remarks>
          <para>Returns the current mute state for a particular stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isStreamMute(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isStreamMute(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSurroundFormatEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSurroundFormatEnabled (audioFormat As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSurroundFormatEnabled(int audioFormat);" />
      <MemberSignature Language="C#" Value="public virtual bool IsSurroundFormatEnabled (int audioFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSurroundFormatEnabled(int32 audioFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.IsSurroundFormatEnabled(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IsSurroundFormatEnabled : int -&gt; bool&#xA;override this.IsSurroundFormatEnabled : int -&gt; bool" Usage="audioManager.IsSurroundFormatEnabled audioFormat" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSurroundFormatEnabled", "(I)Z", "GetIsSurroundFormatEnabled_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSurroundFormatEnabled", "(I)Z", "GetIsSurroundFormatEnabled_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFormat" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "", "", "", "" }, Flag=true, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "", "", "", "" }, Flag=true, Type="")&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "EncodingMpeghBlL3", "EncodingMpeghBlL4", "EncodingMpeghLcL3", "EncodingMpeghLcL4", "EncodingDtsUhdP1", "EncodingDra", "EncodingDtsHdMa", "EncodingDtsUhdP2" }, Flag=true, Type="Android.Media.AudioFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "EncodingMpeghBlL3", "EncodingMpeghBlL4", "EncodingMpeghLcL3", "EncodingMpeghLcL4", "EncodingDtsUhdP1", "EncodingDra", "EncodingDtsHdMa", "EncodingDtsUhdP2" }, Flag=true, Type="Android.Media.AudioFormat")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioFormat">a surround format</param>
        <summary>Gets whether a certain surround format is enabled or not.</summary>
        <returns>whether the required surround format is enabled</returns>
        <remarks>
          <para>Gets whether a certain surround format is enabled or not.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isSurroundFormatEnabled(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isSurroundFormatEnabled(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVolumeFixed">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsVolumeFixed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsVolumeFixed { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsVolumeFixed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVolumeFixed" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsVolumeFixed" />
      <MemberSignature Language="F#" Value="member this.IsVolumeFixed : bool" Usage="Android.Media.AudioManager.IsVolumeFixed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isVolumeFixed", "()Z", "GetIsVolumeFixedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isVolumeFixed", "()Z", "GetIsVolumeFixedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the device implements a fixed volume policy.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Indicates if the device implements a fixed volume policy.</para>
          <para>Some devices may not have volume control and may operate at a fixed volume,
            and may not enable muting or changing the volume of audio streams.
            This method will return true on such devices.</para>
          <para>The following APIs have no effect when volume is fixed:
            &lt;ul&gt;
              &lt;li&gt; <c>#adjustVolume(int, int)</c>&lt;li&gt; <c>#adjustSuggestedStreamVolume(int, int, int)</c>&lt;li&gt; <c>#adjustStreamVolume(int, int, int)</c>&lt;li&gt; <c>#setStreamVolume(int, int, int)</c>&lt;li&gt; <c>#setRingerMode(int)</c>&lt;li&gt; <c>#setStreamSolo(int, boolean)</c>&lt;li&gt; <c>#setStreamMute(int, boolean)</c>&lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isVolumeFixed()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isVolumeFixed()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVolumeGroupMuted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsVolumeGroupMuted (groupId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsVolumeGroupMuted(int groupId);" />
      <MemberSignature Language="C#" Value="public virtual bool IsVolumeGroupMuted (int groupId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsVolumeGroupMuted(int32 groupId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.IsVolumeGroupMuted(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IsVolumeGroupMuted : int -&gt; bool&#xA;override this.IsVolumeGroupMuted : int -&gt; bool" Usage="audioManager.IsVolumeGroupMuted groupId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isVolumeGroupMuted", "(I)Z", "GetIsVolumeGroupMuted_IHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isVolumeGroupMuted", "(I)Z", "GetIsVolumeGroupMuted_IHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="groupId">of the <c>android.media.audiopolicy.AudioVolumeGroup</c> to consider.</param>
        <summary>Returns the current mute state for a particular volume group associated to the given id.</summary>
        <returns>The mute state for the given <c>android.media.audiopolicy.AudioVolumeGroup</c> id.</returns>
        <remarks>
          <para>Returns the current mute state for a particular volume group associated to the given id.</para>
          <para>Call first in prior <c>#getVolumeGroupIdForAttributes(AudioAttributes)</c> to retrieve
            the volume group id supporting the given <c>AudioAttributes</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isVolumeGroupMuted(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isVolumeGroupMuted(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.AudioManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadSoundEffects">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LoadSoundEffects ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LoadSoundEffects();" />
      <MemberSignature Language="C#" Value="public virtual void LoadSoundEffects ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadSoundEffects() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.LoadSoundEffects" />
      <MemberSignature Language="F#" Value="abstract member LoadSoundEffects : unit -&gt; unit&#xA;override this.LoadSoundEffects : unit -&gt; unit" Usage="audioManager.LoadSoundEffects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("loadSoundEffects", "()V", "GetLoadSoundEffectsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("loadSoundEffects", "()V", "GetLoadSoundEffectsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Load Sound effects.</summary>
        <remarks>
          <para>Load Sound effects.
             This method must be called when sound effects are enabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#loadSoundEffects()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.loadSoundEffects()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LoadSoundEffectsAsync">
      <MemberSignature Language="VB.NET" Value="Public Function LoadSoundEffectsAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ LoadSoundEffectsAsync();" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadSoundEffectsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadSoundEffectsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.LoadSoundEffectsAsync" />
      <MemberSignature Language="F#" Value="member this.LoadSoundEffectsAsync : unit -&gt; System.Threading.Tasks.Task" Usage="audioManager.LoadSoundEffectsAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MicrophoneMute">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MicrophoneMute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool MicrophoneMute { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool MicrophoneMute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MicrophoneMute" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.MicrophoneMute" />
      <MemberSignature Language="F#" Value="member this.MicrophoneMute : bool with get, set" Usage="Android.Media.AudioManager.MicrophoneMute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMicrophoneMute", "()Z", "GetIsMicrophoneMuteHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMicrophoneMute", "()Z", "GetIsMicrophoneMuteHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMicrophoneMute", "(Z)V", "GetSetMicrophoneMute_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setMicrophoneMute", "(Z)V", "GetSetMicrophoneMute_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">set &lt;var&gt;true&lt;/var&gt; to mute the microphone;
                      &lt;var&gt;false&lt;/var&gt; to turn mute off</param>
        <summary>Checks whether the microphone mute is on or off. -or- Sets the microphone mute on or off.</summary>
        <value>true if microphone is muted, false if it's not</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Checks whether the microphone mute is on or off.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isMicrophoneMute()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isMicrophoneMute()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the microphone mute on or off.</para>
          <para>This method should only be used by applications that replace the platform-wide
            management of audio settings or the main telephony application.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setMicrophoneMute(boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setMicrophoneMute(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Microphones">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Microphones As IList(Of MicrophoneInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;Android::Media::MicrophoneInfo ^&gt; ^ Microphones { System::Collections::Generic::IList&lt;Android::Media::MicrophoneInfo ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.MicrophoneInfo&gt;? Microphones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.MicrophoneInfo&gt; Microphones" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.Microphones" />
      <MemberSignature Language="F#" Value="member this.Microphones : System.Collections.Generic.IList&lt;Android.Media.MicrophoneInfo&gt;" Usage="Android.Media.AudioManager.Microphones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMicrophones", "()Ljava/util/List;", "GetGetMicrophonesHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMicrophones", "()Ljava/util/List;", "GetGetMicrophonesHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.MicrophoneInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a list of <c>MicrophoneInfo</c> that corresponds to the characteristics
            of all available microphones.</summary>
        <value>a list that contains all microphones' characteristics</value>
        <remarks>
          <para>Returns a list of <c>MicrophoneInfo</c> that corresponds to the characteristics
            of all available microphones. The list is empty when no microphones are available
            on the device. An error during the query will result in an IOException being thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getMicrophones()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getMicrophones()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Mode As Mode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::Mode Mode { Android::Media::Mode get(); void set(Android::Media::Mode value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.Mode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Mode Mode" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.Mode" />
      <MemberSignature Language="F#" Value="member this.Mode : Android.Media.Mode with get, set" Usage="Android.Media.AudioManager.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMode", "()I", "GetGetModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMode", "()I", "GetGetModeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMode", "(I)V", "GetSetMode_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setMode", "(I)V", "GetSetMode_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Mode</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="mode">the requested audio mode.
                         Informs the HAL about the current audio state so that
                         it can route the audio appropriately.</param>
        <summary>Returns the current audio mode. -or- Sets the audio mode.</summary>
        <value>the current audio mode.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current audio mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getMode()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getMode()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the audio mode.</para>
          <para>The audio mode encompasses audio routing AND the behavior of
            the telephony layer. Therefore this method should only be used by applications that
            replace the platform-wide management of audio settings or the main telephony application.
            In particular, the <c>#MODE_IN_CALL</c> mode should only be used by the telephony
            application when it places a phone call, as it will cause signals from the radio layer
            to feed the platform mixer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setMode(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ModeCallRedirect">
      <MemberSignature Language="VB.NET" Value="Public Const ModeCallRedirect As Mode  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::Mode ModeCallRedirect = 5;" />
      <MemberSignature Language="C#" Value="public const Android.Media.Mode ModeCallRedirect = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Mode ModeCallRedirect = (5)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ModeCallRedirect" />
      <MemberSignature Language="F#" Value="val mutable ModeCallRedirect : Android.Media.Mode" Usage="Android.Media.AudioManager.ModeCallRedirect" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MODE_CALL_REDIRECT", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MODE_CALL_REDIRECT", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.Mode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.Mode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Mode</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>A telephony call is established and its audio is being redirected to another device.</summary>
        <remarks>
          <para>A telephony call is established and its audio is being redirected to another device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#MODE_CALL_REDIRECT" title="Reference documentation">Java documentation for <code>android.media.AudioManager.MODE_CALL_REDIRECT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModeCallScreening">
      <MemberSignature Language="VB.NET" Value="Public Const ModeCallScreening As Mode  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::Mode ModeCallScreening = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Media.Mode ModeCallScreening = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Mode ModeCallScreening = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ModeCallScreening" />
      <MemberSignature Language="F#" Value="val mutable ModeCallScreening : Android.Media.Mode" Usage="Android.Media.AudioManager.ModeCallScreening" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MODE_CALL_SCREENING", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MODE_CALL_SCREENING", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.Mode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.Mode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Mode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Call screening in progress.</summary>
        <remarks>
          <para>Call screening in progress. Call is connected and audio is accessible to call
            screening applications but other audio use cases are still possible.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#MODE_CALL_SCREENING" title="Reference documentation">Java documentation for <code>android.media.AudioManager.MODE_CALL_SCREENING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ModeCommunicationRedirect">
      <MemberSignature Language="VB.NET" Value="Public Const ModeCommunicationRedirect As Mode  = 6" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::Mode ModeCommunicationRedirect = 6;" />
      <MemberSignature Language="C#" Value="public const Android.Media.Mode ModeCommunicationRedirect = 6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Mode ModeCommunicationRedirect = (6)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ModeCommunicationRedirect" />
      <MemberSignature Language="F#" Value="val mutable ModeCommunicationRedirect : Android.Media.Mode" Usage="Android.Media.AudioManager.ModeCommunicationRedirect" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MODE_COMMUNICATION_REDIRECT", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MODE_COMMUNICATION_REDIRECT", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.Mode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.Mode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Mode</ReturnType>
      </ReturnValue>
      <MemberValue>6</MemberValue>
      <Docs>
        <summary>An audio/video chat or VoIP call is established and its audio is being redirected to another
            device.</summary>
        <remarks>
          <para>An audio/video chat or VoIP call is established and its audio is being redirected to another
            device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#MODE_COMMUNICATION_REDIRECT" title="Reference documentation">Java documentation for <code>android.media.AudioManager.MODE_COMMUNICATION_REDIRECT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumStreams">
      <MemberSignature Language="VB.NET" Value="Public Const NumStreams As Integer  = 5" />
      <MemberSignature Language="C++ CLI" Value="public: int NumStreams = 5;" />
      <MemberSignature Language="C#" Value="public const int NumStreams = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NumStreams = (5)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.NumStreams" />
      <MemberSignature Language="F#" Value="val mutable NumStreams : int" Usage="Android.Media.AudioManager.NumStreams" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NUM_STREAMS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NUM_STREAMS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>This member is deprecated.</summary>
        <remarks>
          <para>This member is deprecated. Do not iterate on volume stream type values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#NUM_STREAMS" title="Reference documentation">Java documentation for <code>android.media.AudioManager.NUM_STREAMS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PlaybackOffloadGaplessSupported">
      <MemberSignature Language="VB.NET" Value="Public Const PlaybackOffloadGaplessSupported As PlaybackOffload  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::PlaybackOffload PlaybackOffloadGaplessSupported = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Media.PlaybackOffload PlaybackOffloadGaplessSupported = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.PlaybackOffload PlaybackOffloadGaplessSupported = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PlaybackOffloadGaplessSupported" />
      <MemberSignature Language="F#" Value="val mutable PlaybackOffloadGaplessSupported : Android.Media.PlaybackOffload" Usage="Android.Media.AudioManager.PlaybackOffloadGaplessSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.PlaybackOffload enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.PlaybackOffload enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.PlaybackOffload</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Return value for <c>#getPlaybackOffloadSupport(AudioFormat, AudioAttributes)</c>:
                    offload playback supported with gapless transitions</summary>
        <remarks>
          <para>Return value for <c>#getPlaybackOffloadSupport(AudioFormat, AudioAttributes)</c>:
                    offload playback supported with gapless transitions</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaybackOffloadNotSupported">
      <MemberSignature Language="VB.NET" Value="Public Const PlaybackOffloadNotSupported As PlaybackOffload  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::PlaybackOffload PlaybackOffloadNotSupported = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Media.PlaybackOffload PlaybackOffloadNotSupported = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.PlaybackOffload PlaybackOffloadNotSupported = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PlaybackOffloadNotSupported" />
      <MemberSignature Language="F#" Value="val mutable PlaybackOffloadNotSupported : Android.Media.PlaybackOffload" Usage="Android.Media.AudioManager.PlaybackOffloadNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PLAYBACK_OFFLOAD_NOT_SUPPORTED", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PLAYBACK_OFFLOAD_NOT_SUPPORTED", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.PlaybackOffload enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.PlaybackOffload enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.PlaybackOffload</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Return value for <c>#getPlaybackOffloadSupport(AudioFormat, AudioAttributes)</c>:
                    offload playback not supported</summary>
        <remarks>
          <para>Return value for <c>#getPlaybackOffloadSupport(AudioFormat, AudioAttributes)</c>:
                    offload playback not supported</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PLAYBACK_OFFLOAD_NOT_SUPPORTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PLAYBACK_OFFLOAD_NOT_SUPPORTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaybackOffloadSupported">
      <MemberSignature Language="VB.NET" Value="Public Const PlaybackOffloadSupported As PlaybackOffload  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::PlaybackOffload PlaybackOffloadSupported = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.PlaybackOffload PlaybackOffloadSupported = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.PlaybackOffload PlaybackOffloadSupported = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PlaybackOffloadSupported" />
      <MemberSignature Language="F#" Value="val mutable PlaybackOffloadSupported : Android.Media.PlaybackOffload" Usage="Android.Media.AudioManager.PlaybackOffloadSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PLAYBACK_OFFLOAD_SUPPORTED", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PLAYBACK_OFFLOAD_SUPPORTED", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.PlaybackOffload enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.PlaybackOffload enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.PlaybackOffload</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Return value for <c>#getPlaybackOffloadSupport(AudioFormat, AudioAttributes)</c>:
                    offload playback supported</summary>
        <remarks>
          <para>Return value for <c>#getPlaybackOffloadSupport(AudioFormat, AudioAttributes)</c>:
                    offload playback supported</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PLAYBACK_OFFLOAD_SUPPORTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PLAYBACK_OFFLOAD_SUPPORTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaySoundEffect">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PlaySoundEffect (effectType As SoundEffect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PlaySoundEffect(Android::Media::SoundEffect effectType);" />
      <MemberSignature Language="C#" Value="public virtual void PlaySoundEffect (Android.Media.SoundEffect effectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PlaySoundEffect(valuetype Android.Media.SoundEffect effectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.PlaySoundEffect(Android.Media.SoundEffect)" />
      <MemberSignature Language="F#" Value="abstract member PlaySoundEffect : Android.Media.SoundEffect -&gt; unit&#xA;override this.PlaySoundEffect : Android.Media.SoundEffect -&gt; unit" Usage="audioManager.PlaySoundEffect effectType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("playSoundEffect", "(I)V", "GetPlaySoundEffect_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("playSoundEffect", "(I)V", "GetPlaySoundEffect_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effectType" Type="Android.Media.SoundEffect">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="effectType">The type of sound effect.
            NOTE: This version uses the UI settings to determine
            whether sounds are heard or not.</param>
        <summary>Plays a sound effect (Key clicks, lid open/close.</summary>
        <remarks>
          <para>Plays a sound effect (Key clicks, lid open/close...)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#playSoundEffect(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.playSoundEffect(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PlaySoundEffect">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub PlaySoundEffect (effectType As SoundEffect, volume As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void PlaySoundEffect(Android::Media::SoundEffect effectType, float volume);" />
      <MemberSignature Language="C#" Value="public virtual void PlaySoundEffect (Android.Media.SoundEffect effectType, float volume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PlaySoundEffect(valuetype Android.Media.SoundEffect effectType, float32 volume) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.PlaySoundEffect(Android.Media.SoundEffect,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member PlaySoundEffect : Android.Media.SoundEffect * single -&gt; unit&#xA;override this.PlaySoundEffect : Android.Media.SoundEffect * single -&gt; unit" Usage="audioManager.PlaySoundEffect (effectType, volume)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("playSoundEffect", "(IF)V", "GetPlaySoundEffect_IFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("playSoundEffect", "(IF)V", "GetPlaySoundEffect_IFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effectType" Type="Android.Media.SoundEffect">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="volume" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="effectType">The type of sound effect.</param>
        <param name="volume">Sound effect volume.
            The volume value is a raw scalar so UI controls should be scaled logarithmically.
            If a volume of -1 is specified, the AudioManager.STREAM_MUSIC stream volume minus 3dB will be used.
            NOTE: This version is for applications that have their own
            settings panel for enabling and controlling volume.</param>
        <summary>Plays a sound effect (Key clicks, lid open/close.</summary>
        <remarks>
          <para>Plays a sound effect (Key clicks, lid open/close...)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#playSoundEffect(int,%20float)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.playSoundEffect(int, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PropertyOutputFramesPerBuffer">
      <MemberSignature Language="VB.NET" Value="Public Const PropertyOutputFramesPerBuffer As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ PropertyOutputFramesPerBuffer;" />
      <MemberSignature Language="C#" Value="public const string PropertyOutputFramesPerBuffer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyOutputFramesPerBuffer" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertyOutputFramesPerBuffer" />
      <MemberSignature Language="F#" Value="val mutable PropertyOutputFramesPerBuffer : string" Usage="Android.Media.AudioManager.PropertyOutputFramesPerBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_OUTPUT_FRAMES_PER_BUFFER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_OUTPUT_FRAMES_PER_BUFFER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used as a key for <c>#getProperty</c> to request the native or optimal output buffer size
            for this device's low latency output stream, in decimal PCM frames.</summary>
        <remarks>
          <para>Used as a key for <c>#getProperty</c> to request the native or optimal output buffer size
            for this device's low latency output stream, in decimal PCM frames.  Latency-sensitive apps
            should use this value as a minimum, and offer the user the option to override it.
            The low latency output stream is typically either the device's primary output stream,
            or another output stream with smaller buffers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PROPERTY_OUTPUT_FRAMES_PER_BUFFER" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PROPERTY_OUTPUT_FRAMES_PER_BUFFER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="PropertyOutputSampleRate">
      <MemberSignature Language="VB.NET" Value="Public Const PropertyOutputSampleRate As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ PropertyOutputSampleRate;" />
      <MemberSignature Language="C#" Value="public const string PropertyOutputSampleRate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyOutputSampleRate" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertyOutputSampleRate" />
      <MemberSignature Language="F#" Value="val mutable PropertyOutputSampleRate : string" Usage="Android.Media.AudioManager.PropertyOutputSampleRate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_OUTPUT_SAMPLE_RATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_OUTPUT_SAMPLE_RATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used as a key for <c>#getProperty</c> to request the native or optimal output sample rate
            for this device's low latency output stream, in decimal Hz.</summary>
        <remarks>
          <para>Used as a key for <c>#getProperty</c> to request the native or optimal output sample rate
            for this device's low latency output stream, in decimal Hz.  Latency-sensitive apps
            should use this value as a default, and offer the user the option to override it.
            The low latency output stream is typically either the device's primary output stream,
            or another output stream with smaller buffers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PROPERTY_OUTPUT_SAMPLE_RATE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PROPERTY_OUTPUT_SAMPLE_RATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="PropertySupportAudioSourceUnprocessed">
      <MemberSignature Language="VB.NET" Value="Public Const PropertySupportAudioSourceUnprocessed As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ PropertySupportAudioSourceUnprocessed;" />
      <MemberSignature Language="C#" Value="public const string PropertySupportAudioSourceUnprocessed;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertySupportAudioSourceUnprocessed" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertySupportAudioSourceUnprocessed" />
      <MemberSignature Language="F#" Value="val mutable PropertySupportAudioSourceUnprocessed : string" Usage="Android.Media.AudioManager.PropertySupportAudioSourceUnprocessed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used as a key for <c>#getProperty</c> to determine if the unprocessed audio source is
            available and supported with the expected frequency range and level response.</summary>
        <remarks>
          <para>Used as a key for <c>#getProperty</c> to determine if the unprocessed audio source is
            available and supported with the expected frequency range and level response.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertySupportMicNearUltrasound">
      <MemberSignature Language="VB.NET" Value="Public Const PropertySupportMicNearUltrasound As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ PropertySupportMicNearUltrasound;" />
      <MemberSignature Language="C#" Value="public const string PropertySupportMicNearUltrasound;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertySupportMicNearUltrasound" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertySupportMicNearUltrasound" />
      <MemberSignature Language="F#" Value="val mutable PropertySupportMicNearUltrasound : string" Usage="Android.Media.AudioManager.PropertySupportMicNearUltrasound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used as a key for <c>#getProperty</c> to determine if the default microphone audio source
            supports near-ultrasound frequencies (range of 18 - 21 kHz).</summary>
        <remarks>
          <para>Used as a key for <c>#getProperty</c> to determine if the default microphone audio source
            supports near-ultrasound frequencies (range of 18 - 21 kHz).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertySupportSpeakerNearUltrasound">
      <MemberSignature Language="VB.NET" Value="Public Const PropertySupportSpeakerNearUltrasound As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ PropertySupportSpeakerNearUltrasound;" />
      <MemberSignature Language="C#" Value="public const string PropertySupportSpeakerNearUltrasound;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertySupportSpeakerNearUltrasound" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertySupportSpeakerNearUltrasound" />
      <MemberSignature Language="F#" Value="val mutable PropertySupportSpeakerNearUltrasound : string" Usage="Android.Media.AudioManager.PropertySupportSpeakerNearUltrasound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used as a key for <c>#getProperty</c> to determine if the default speaker audio path
            supports near-ultrasound frequencies (range of 18 - 21 kHz).</summary>
        <remarks>
          <para>Used as a key for <c>#getProperty</c> to determine if the default speaker audio path
            supports near-ultrasound frequencies (range of 18 - 21 kHz).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAudioDeviceCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterAudioDeviceCallback (callback As AudioDeviceCallback, handler As Handler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterAudioDeviceCallback(Android::Media::AudioDeviceCallback ^ callback, Android::OS::Handler ^ handler);" />
      <MemberSignature Language="C#" Value="public virtual void RegisterAudioDeviceCallback (Android.Media.AudioDeviceCallback? callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAudioDeviceCallback(class Android.Media.AudioDeviceCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterAudioDeviceCallback(Android.Media.AudioDeviceCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterAudioDeviceCallback : Android.Media.AudioDeviceCallback * Android.OS.Handler -&gt; unit&#xA;override this.RegisterAudioDeviceCallback : Android.Media.AudioDeviceCallback * Android.OS.Handler -&gt; unit" Usage="audioManager.RegisterAudioDeviceCallback (callback, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAudioDeviceCallback", "(Landroid/media/AudioDeviceCallback;Landroid/os/Handler;)V", "GetRegisterAudioDeviceCallback_Landroid_media_AudioDeviceCallback_Landroid_os_Handler_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerAudioDeviceCallback", "(Landroid/media/AudioDeviceCallback;Landroid/os/Handler;)V", "GetRegisterAudioDeviceCallback_Landroid_media_AudioDeviceCallback_Landroid_os_Handler_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.AudioDeviceCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">The <c>AudioDeviceCallback</c> object to receive connect/disconnect
            notifications.</param>
        <param name="handler">Specifies the <c>Handler</c> object for the thread on which to execute
            the callback. If <c>null</c>, the <c>Handler</c> associated with the main
            <c>Looper</c> will be used.</param>
        <summary>Registers an <c>AudioDeviceCallback</c> object to receive notifications of changes
            to the set of connected audio devices.</summary>
        <remarks>
          <para>Registers an <c>AudioDeviceCallback</c> object to receive notifications of changes
            to the set of connected audio devices.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerAudioDeviceCallback(android.media.AudioDeviceCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerAudioDeviceCallback(android.media.AudioDeviceCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAudioPlaybackCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterAudioPlaybackCallback (cb As AudioManager.AudioPlaybackCallback, handler As Handler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterAudioPlaybackCallback(Android::Media::AudioManager::AudioPlaybackCallback ^ cb, Android::OS::Handler ^ handler);" />
      <MemberSignature Language="C#" Value="public virtual void RegisterAudioPlaybackCallback (Android.Media.AudioManager.AudioPlaybackCallback cb, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAudioPlaybackCallback(class Android.Media.AudioManager/AudioPlaybackCallback cb, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterAudioPlaybackCallback(Android.Media.AudioManager.AudioPlaybackCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterAudioPlaybackCallback : Android.Media.AudioManager.AudioPlaybackCallback * Android.OS.Handler -&gt; unit&#xA;override this.RegisterAudioPlaybackCallback : Android.Media.AudioManager.AudioPlaybackCallback * Android.OS.Handler -&gt; unit" Usage="audioManager.RegisterAudioPlaybackCallback (cb, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAudioPlaybackCallback", "(Landroid/media/AudioManager$AudioPlaybackCallback;Landroid/os/Handler;)V", "GetRegisterAudioPlaybackCallback_Landroid_media_AudioManager_AudioPlaybackCallback_Landroid_os_Handler_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerAudioPlaybackCallback", "(Landroid/media/AudioManager$AudioPlaybackCallback;Landroid/os/Handler;)V", "GetRegisterAudioPlaybackCallback_Landroid_media_AudioManager_AudioPlaybackCallback_Landroid_os_Handler_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioPlaybackCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cb">non-null callback to register</param>
        <param name="handler">the <c>Handler</c> object for the thread on which to execute
            the callback. If &lt;code&gt;null&lt;/code&gt;, the <c>Handler</c> associated with the main
            <c>Looper</c> will be used.</param>
        <summary>Register a callback to be notified of audio playback changes through
            <c>AudioPlaybackCallback</c></summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerAudioPlaybackCallback(android.media.AudioPlaybackCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerAudioPlaybackCallback(android.media.AudioPlaybackCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAudioRecordingCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterAudioRecordingCallback (cb As AudioManager.AudioRecordingCallback, handler As Handler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterAudioRecordingCallback(Android::Media::AudioManager::AudioRecordingCallback ^ cb, Android::OS::Handler ^ handler);" />
      <MemberSignature Language="C#" Value="public virtual void RegisterAudioRecordingCallback (Android.Media.AudioManager.AudioRecordingCallback cb, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAudioRecordingCallback(class Android.Media.AudioManager/AudioRecordingCallback cb, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterAudioRecordingCallback(Android.Media.AudioManager.AudioRecordingCallback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member RegisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback * Android.OS.Handler -&gt; unit&#xA;override this.RegisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback * Android.OS.Handler -&gt; unit" Usage="audioManager.RegisterAudioRecordingCallback (cb, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAudioRecordingCallback", "(Landroid/media/AudioManager$AudioRecordingCallback;Landroid/os/Handler;)V", "GetRegisterAudioRecordingCallback_Landroid_media_AudioManager_AudioRecordingCallback_Landroid_os_Handler_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerAudioRecordingCallback", "(Landroid/media/AudioManager$AudioRecordingCallback;Landroid/os/Handler;)V", "GetRegisterAudioRecordingCallback_Landroid_media_AudioManager_AudioRecordingCallback_Landroid_os_Handler_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioRecordingCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="cb">non-null callback to register</param>
        <param name="handler">the <c>Handler</c> object for the thread on which to execute
            the callback. If &lt;code&gt;null&lt;/code&gt;, the <c>Handler</c> associated with the main
            <c>Looper</c> will be used.</param>
        <summary>Register a callback to be notified of audio recording changes through
            <c>AudioRecordingCallback</c></summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerAudioRecordingCallback(android.media.AudioRecordingCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerAudioRecordingCallback(android.media.AudioRecordingCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterMediaButtonEventReceiver">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterMediaButtonEventReceiver (eventReceiver As PendingIntent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterMediaButtonEventReceiver(Android::App::PendingIntent ^ eventReceiver);" />
      <MemberSignature Language="C#" Value="public virtual void RegisterMediaButtonEventReceiver (Android.App.PendingIntent? eventReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterMediaButtonEventReceiver(class Android.App.PendingIntent eventReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterMediaButtonEventReceiver(Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member RegisterMediaButtonEventReceiver : Android.App.PendingIntent -&gt; unit&#xA;override this.RegisterMediaButtonEventReceiver : Android.App.PendingIntent -&gt; unit" Usage="audioManager.RegisterMediaButtonEventReceiver eventReceiver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerMediaButtonEventReceiver", "(Landroid/app/PendingIntent;)V", "GetRegisterMediaButtonEventReceiver_Landroid_app_PendingIntent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerMediaButtonEventReceiver", "(Landroid/app/PendingIntent;)V", "GetRegisterMediaButtonEventReceiver_Landroid_app_PendingIntent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventReceiver" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="eventReceiver">target that will receive media button intents.  The PendingIntent
            will be sent an <c>Intent#ACTION_MEDIA_BUTTON</c> event when a media button action
            occurs, with <c>Intent#EXTRA_KEY_EVENT</c> added and holding the key code of the
            media button that was pressed.</param>
        <summary>Register a component to be the sole receiver of MEDIA_BUTTON intents.</summary>
        <remarks>
          <para>Register a component to be the sole receiver of MEDIA_BUTTON intents.  This is like
            <c>#registerMediaButtonEventReceiver(android.content.ComponentName)</c>, but allows
            the buttons to go to any PendingIntent.  Note that you should only use this form if
            you know you will continue running for the full time until unregistering the
            PendingIntent.</para>
          <para>This member is deprecated. Use <c>MediaSession#setMediaButtonReceiver(PendingIntent)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerMediaButtonEventReceiver(android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerMediaButtonEventReceiver(android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="RegisterMediaButtonEventReceiver">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterMediaButtonEventReceiver (eventReceiver As ComponentName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterMediaButtonEventReceiver(Android::Content::ComponentName ^ eventReceiver);" />
      <MemberSignature Language="C#" Value="public virtual void RegisterMediaButtonEventReceiver (Android.Content.ComponentName? eventReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterMediaButtonEventReceiver(class Android.Content.ComponentName eventReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterMediaButtonEventReceiver(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member RegisterMediaButtonEventReceiver : Android.Content.ComponentName -&gt; unit&#xA;override this.RegisterMediaButtonEventReceiver : Android.Content.ComponentName -&gt; unit" Usage="audioManager.RegisterMediaButtonEventReceiver eventReceiver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerMediaButtonEventReceiver", "(Landroid/content/ComponentName;)V", "GetRegisterMediaButtonEventReceiver_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerMediaButtonEventReceiver", "(Landroid/content/ComponentName;)V", "GetRegisterMediaButtonEventReceiver_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventReceiver" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="eventReceiver">identifier of a <c>android.content.BroadcastReceiver</c>
                 that will receive the media button intent. This broadcast receiver must be declared
                 in the application manifest. The package of the component must match that of
                 the context you're registering from.</param>
        <summary>Register a component to be the sole receiver of MEDIA_BUTTON intents.</summary>
        <remarks>
          <para>Register a component to be the sole receiver of MEDIA_BUTTON intents.</para>
          <para>This member is deprecated. Use <c>MediaSession#setMediaButtonReceiver(PendingIntent)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerMediaButtonEventReceiver(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerMediaButtonEventReceiver(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRemoteControlClient">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterRemoteControlClient (rcClient As RemoteControlClient)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRemoteControlClient(Android::Media::RemoteControlClient ^ rcClient);" />
      <MemberSignature Language="C#" Value="public virtual void RegisterRemoteControlClient (Android.Media.RemoteControlClient? rcClient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRemoteControlClient(class Android.Media.RemoteControlClient rcClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterRemoteControlClient(Android.Media.RemoteControlClient)" />
      <MemberSignature Language="F#" Value="abstract member RegisterRemoteControlClient : Android.Media.RemoteControlClient -&gt; unit&#xA;override this.RegisterRemoteControlClient : Android.Media.RemoteControlClient -&gt; unit" Usage="audioManager.RegisterRemoteControlClient rcClient" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerRemoteControlClient", "(Landroid/media/RemoteControlClient;)V", "GetRegisterRemoteControlClient_Landroid_media_RemoteControlClient_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerRemoteControlClient", "(Landroid/media/RemoteControlClient;)V", "GetRegisterRemoteControlClient_Landroid_media_RemoteControlClient_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rcClient" Type="Android.Media.RemoteControlClient" />
      </Parameters>
      <Docs>
        <param name="rcClient">The remote control client from which remote controls will receive
                 information to display.</param>
        <summary>Registers the remote control client for providing information to display on the remote
            controls.</summary>
        <remarks>
          <para>Registers the remote control client for providing information to display on the remote
            controls.</para>
          <para>This member is deprecated. Use <c>MediaSession</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerRemoteControlClient(android.media.RemoteControlClient)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerRemoteControlClient(android.media.RemoteControlClient)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="T:Android.Media.RemoteControlClient" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRemoteController">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RegisterRemoteController (rctlr As RemoteController) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RegisterRemoteController(Android::Media::RemoteController ^ rctlr);" />
      <MemberSignature Language="C#" Value="public virtual bool RegisterRemoteController (Android.Media.RemoteController? rctlr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterRemoteController(class Android.Media.RemoteController rctlr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterRemoteController(Android.Media.RemoteController)" />
      <MemberSignature Language="F#" Value="abstract member RegisterRemoteController : Android.Media.RemoteController -&gt; bool&#xA;override this.RegisterRemoteController : Android.Media.RemoteController -&gt; bool" Usage="audioManager.RegisterRemoteController rctlr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerRemoteController", "(Landroid/media/RemoteController;)Z", "GetRegisterRemoteController_Landroid_media_RemoteController_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerRemoteController", "(Landroid/media/RemoteController;)Z", "GetRegisterRemoteController_Landroid_media_RemoteController_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rctlr" Type="Android.Media.RemoteController" />
      </Parameters>
      <Docs>
        <param name="rctlr">the object to register.</param>
        <summary>Registers a <c>RemoteController</c> instance for it to receive media
            metadata updates and playback state information from applications using
            <c>RemoteControlClient</c>, and control their playback.</summary>
        <returns>true if the <c>RemoteController</c> was successfully registered,
                    false if an error occurred, due to an internal system error, or
                    insufficient permissions.</returns>
        <remarks>
          <para>Registers a <c>RemoteController</c> instance for it to receive media
            metadata updates and playback state information from applications using
            <c>RemoteControlClient</c>, and control their playback.</para>
          <para>Registration requires the <c>RemoteController.OnClientUpdateListener</c> listener to be
            one of the enabled notification listeners (see
            <c>android.service.notification.NotificationListenerService</c>).</para>
          <para>This member is deprecated. Use
                        <c>MediaSessionManager#addOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener, ComponentName)</c>
                        and <c>MediaController</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerRemoteController(android.media.RemoteController)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerRemoteController(android.media.RemoteController)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnCommunicationDeviceChangedListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveOnCommunicationDeviceChangedListener (listener As AudioManager.IOnCommunicationDeviceChangedListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveOnCommunicationDeviceChangedListener(Android::Media::AudioManager::IOnCommunicationDeviceChangedListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void RemoveOnCommunicationDeviceChangedListener (Android.Media.AudioManager.IOnCommunicationDeviceChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnCommunicationDeviceChangedListener(class Android.Media.AudioManager/IOnCommunicationDeviceChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RemoveOnCommunicationDeviceChangedListener(Android.Media.AudioManager.IOnCommunicationDeviceChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnCommunicationDeviceChangedListener : Android.Media.AudioManager.IOnCommunicationDeviceChangedListener -&gt; unit&#xA;override this.RemoveOnCommunicationDeviceChangedListener : Android.Media.AudioManager.IOnCommunicationDeviceChangedListener -&gt; unit" Usage="audioManager.RemoveOnCommunicationDeviceChangedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnCommunicationDeviceChangedListener", "(Landroid/media/AudioManager$OnCommunicationDeviceChangedListener;)V", "GetRemoveOnCommunicationDeviceChangedListener_Landroid_media_AudioManager_OnCommunicationDeviceChangedListener_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnCommunicationDeviceChangedListener", "(Landroid/media/AudioManager$OnCommunicationDeviceChangedListener;)V", "GetRemoveOnCommunicationDeviceChangedListener_Landroid_media_AudioManager_OnCommunicationDeviceChangedListener_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioManager+IOnCommunicationDeviceChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnModeChangedListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveOnModeChangedListener (listener As AudioManager.IOnModeChangedListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveOnModeChangedListener(Android::Media::AudioManager::IOnModeChangedListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void RemoveOnModeChangedListener (Android.Media.AudioManager.IOnModeChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnModeChangedListener(class Android.Media.AudioManager/IOnModeChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RemoveOnModeChangedListener(Android.Media.AudioManager.IOnModeChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnModeChangedListener : Android.Media.AudioManager.IOnModeChangedListener -&gt; unit&#xA;override this.RemoveOnModeChangedListener : Android.Media.AudioManager.IOnModeChangedListener -&gt; unit" Usage="audioManager.RemoveOnModeChangedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnModeChangedListener", "(Landroid/media/AudioManager$OnModeChangedListener;)V", "GetRemoveOnModeChangedListener_Landroid_media_AudioManager_OnModeChangedListener_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnModeChangedListener", "(Landroid/media/AudioManager$OnModeChangedListener;)V", "GetRemoveOnModeChangedListener_Landroid_media_AudioManager_OnModeChangedListener_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioManager+IOnModeChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnPreferredMixerAttributesChangedListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveOnPreferredMixerAttributesChangedListener (listener As AudioManager.IOnPreferredMixerAttributesChangedListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveOnPreferredMixerAttributesChangedListener(Android::Media::AudioManager::IOnPreferredMixerAttributesChangedListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void RemoveOnPreferredMixerAttributesChangedListener (Android.Media.AudioManager.IOnPreferredMixerAttributesChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnPreferredMixerAttributesChangedListener(class Android.Media.AudioManager/IOnPreferredMixerAttributesChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RemoveOnPreferredMixerAttributesChangedListener(Android.Media.AudioManager.IOnPreferredMixerAttributesChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnPreferredMixerAttributesChangedListener : Android.Media.AudioManager.IOnPreferredMixerAttributesChangedListener -&gt; unit&#xA;override this.RemoveOnPreferredMixerAttributesChangedListener : Android.Media.AudioManager.IOnPreferredMixerAttributesChangedListener -&gt; unit" Usage="audioManager.RemoveOnPreferredMixerAttributesChangedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnPreferredMixerAttributesChangedListener", "(Landroid/media/AudioManager$OnPreferredMixerAttributesChangedListener;)V", "GetRemoveOnPreferredMixerAttributesChangedListener_Landroid_media_AudioManager_OnPreferredMixerAttributesChangedListener_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnPreferredMixerAttributesChangedListener", "(Landroid/media/AudioManager$OnPreferredMixerAttributesChangedListener;)V", "GetRemoveOnPreferredMixerAttributesChangedListener_Landroid_media_AudioManager_OnPreferredMixerAttributesChangedListener_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioManager+IOnPreferredMixerAttributesChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestAudioFocus">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RequestAudioFocus (focusRequest As AudioFocusRequestClass) As AudioFocusRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::AudioFocusRequest RequestAudioFocus(Android::Media::AudioFocusRequestClass ^ focusRequest);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFocusRequest RequestAudioFocus (Android.Media.AudioFocusRequestClass focusRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.AudioFocusRequest RequestAudioFocus(class Android.Media.AudioFocusRequestClass focusRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RequestAudioFocus(Android.Media.AudioFocusRequestClass)" />
      <MemberSignature Language="F#" Value="abstract member RequestAudioFocus : Android.Media.AudioFocusRequestClass -&gt; Android.Media.AudioFocusRequest&#xA;override this.RequestAudioFocus : Android.Media.AudioFocusRequestClass -&gt; Android.Media.AudioFocusRequest" Usage="audioManager.RequestAudioFocus focusRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestAudioFocus", "(Landroid/media/AudioFocusRequest;)I", "GetRequestAudioFocus_Landroid_media_AudioFocusRequest_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestAudioFocus", "(Landroid/media/AudioFocusRequest;)I", "GetRequestAudioFocus_Landroid_media_AudioFocusRequest_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusRequest" Type="Android.Media.AudioFocusRequestClass" />
      </Parameters>
      <Docs>
        <param name="focusRequest">a <c>AudioFocusRequest</c> instance used to configure how focus is
              requested.</param>
        <summary>Request audio focus.</summary>
        <returns>
          <c>#AUDIOFOCUS_REQUEST_FAILED</c>, <c>#AUDIOFOCUS_REQUEST_GRANTED</c>
                or <c>#AUDIOFOCUS_REQUEST_DELAYED</c>.
                &lt;br&gt;Note that the return value is never <c>#AUDIOFOCUS_REQUEST_DELAYED</c> when focus
                is requested without building the <c>AudioFocusRequest</c> with
                <c>AudioFocusRequest.Builder#setAcceptsDelayedFocusGain(boolean)</c> set to
                <c>true</c>.</returns>
        <remarks>
          <para>Request audio focus.
            See the <c>AudioFocusRequest</c> for information about the options available to configure
            your request, and notification of focus gain and loss.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#requestAudioFocus(android.media.AudioFocusRequest)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.requestAudioFocus(android.media.AudioFocusRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestAudioFocus">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RequestAudioFocus (l As AudioManager.IOnAudioFocusChangeListener, streamType As Stream, durationHint As AudioFocus) As AudioFocusRequest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::AudioFocusRequest RequestAudioFocus(Android::Media::AudioManager::IOnAudioFocusChangeListener ^ l, Android::Media::Stream streamType, Android::Media::AudioFocus durationHint);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFocusRequest RequestAudioFocus (Android.Media.AudioManager.IOnAudioFocusChangeListener? l, Android.Media.Stream streamType, Android.Media.AudioFocus durationHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.AudioFocusRequest RequestAudioFocus(class Android.Media.AudioManager/IOnAudioFocusChangeListener l, valuetype Android.Media.Stream streamType, valuetype Android.Media.AudioFocus durationHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RequestAudioFocus(Android.Media.AudioManager.IOnAudioFocusChangeListener,Android.Media.Stream,Android.Media.AudioFocus)" />
      <MemberSignature Language="F#" Value="abstract member RequestAudioFocus : Android.Media.AudioManager.IOnAudioFocusChangeListener * Android.Media.Stream * Android.Media.AudioFocus -&gt; Android.Media.AudioFocusRequest&#xA;override this.RequestAudioFocus : Android.Media.AudioManager.IOnAudioFocusChangeListener * Android.Media.Stream * Android.Media.AudioFocus -&gt; Android.Media.AudioFocusRequest" Usage="audioManager.RequestAudioFocus (l, streamType, durationHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestAudioFocus", "(Landroid/media/AudioManager$OnAudioFocusChangeListener;II)I", "GetRequestAudioFocus_Landroid_media_AudioManager_OnAudioFocusChangeListener_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestAudioFocus", "(Landroid/media/AudioManager$OnAudioFocusChangeListener;II)I", "GetRequestAudioFocus_Landroid_media_AudioManager_OnAudioFocusChangeListener_IIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Media.AudioManager+IOnAudioFocusChangeListener" />
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="durationHint" Type="Android.Media.AudioFocus">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="l">the listener to be notified of audio focus changes</param>
        <param name="streamType">the main audio stream type affected by the focus request</param>
        <param name="durationHint">use <see cref="F:Android.Media.AudioManager.AudiofocusGainTransient" /> to indicate this focus request
      is temporary, and focus will be abandonned shortly. Examples of transient requests are
      for the playback of driving directions, or notifications sounds.
      Use <see cref="F:Android.Media.AudioManager.AudiofocusGainTransientMayDuck" /> to indicate also that it's ok for
      the previous focus owner to keep playing if it ducks its audio output.
      Alternatively use <see cref="F:Android.Media.AudioManager.AudiofocusGainTransientExclusive" /> for a temporary request
      that benefits from the system not playing disruptive sounds like notifications, for
      usecases such as voice memo recording, or speech recognition.
      Use <see cref="F:Android.Media.AudioManager.AudiofocusGain" /> for a focus request of unknown duration such
      as the playback of a song or a video.</param>
        <summary>Request audio focus.</summary>
        <returns>
          <c>#AUDIOFOCUS_REQUEST_FAILED</c>, <c>#AUDIOFOCUS_REQUEST_GRANTED</c>
                or <c>#AUDIOFOCUS_REQUEST_DELAYED</c>.
                &lt;br&gt;Note that the return value is never <c>#AUDIOFOCUS_REQUEST_DELAYED</c> when focus
                is requested without building the <c>AudioFocusRequest</c> with
                <c>AudioFocusRequest.Builder#setAcceptsDelayedFocusGain(boolean)</c> set to
                <c>true</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#requestAudioFocus(android.media.AudioFocusRequest)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.requestAudioFocus(android.media.AudioFocusRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="RingerMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RingerMode As RingerMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::RingerMode RingerMode { Android::Media::RingerMode get(); void set(Android::Media::RingerMode value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.RingerMode RingerMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.RingerMode RingerMode" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.RingerMode" />
      <MemberSignature Language="F#" Value="member this.RingerMode : Android.Media.RingerMode with get, set" Usage="Android.Media.AudioManager.RingerMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRingerMode", "()I", "GetGetRingerModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRingerMode", "()I", "GetGetRingerModeHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setRingerMode", "(I)V", "GetSetRingerMode_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setRingerMode", "(I)V", "GetSetRingerMode_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RingerMode</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="ringerMode">The ringer mode, one of <c>#RINGER_MODE_NORMAL</c>,
                       <c>#RINGER_MODE_SILENT</c>, or <c>#RINGER_MODE_VIBRATE</c>.</param>
        <summary>Returns the current ringtone mode. -or- Sets the ringer mode.</summary>
        <value>The current ringtone mode, one of <c>#RINGER_MODE_NORMAL</c>,
                    <c>#RINGER_MODE_SILENT</c>, or <c>#RINGER_MODE_VIBRATE</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current ringtone mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getRingerMode()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getRingerMode()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the ringer mode.</para>
          <para>Silent mode will mute the volume and will not vibrate. Vibrate mode will
            mute the volume and vibrate. Normal mode will be audible and may vibrate
            according to user settings.</para>
          <para>This method has no effect if the device implements a fixed volume policy
            as indicated by <c>#isVolumeFixed()</c>.
            *</para>
          <para>From N onward, ringer mode adjustments that would toggle Do Not Disturb are not allowed
            unless the app has been granted Do Not Disturb Access.
            See <c>NotificationManager#isNotificationPolicyAccessGranted()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setRingerMode(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setRingerMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Media.AudioManager.RingerMode" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="RingerModeChangedAction">
      <MemberSignature Language="VB.NET" Value="Public Const RingerModeChangedAction As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ RingerModeChangedAction;" />
      <MemberSignature Language="C#" Value="public const string RingerModeChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string RingerModeChangedAction" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.RingerModeChangedAction" />
      <MemberSignature Language="F#" Value="val mutable RingerModeChangedAction : string" Usage="Android.Media.AudioManager.RingerModeChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("RINGER_MODE_CHANGED_ACTION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("RINGER_MODE_CHANGED_ACTION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sticky broadcast intent action indicating that the ringer mode has
            changed.</summary>
        <remarks>
          <para>Sticky broadcast intent action indicating that the ringer mode has
            changed. Includes the new ringer mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#RINGER_MODE_CHANGED_ACTION" title="Reference documentation">Java documentation for <code>android.media.AudioManager.RINGER_MODE_CHANGED_ACTION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.ExtraRingerMode" />
      </Docs>
    </Member>
    <Member MemberName="ScoAudioStateConnected">
      <MemberSignature Language="VB.NET" Value="Public Const ScoAudioStateConnected As ScoAudioState  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::ScoAudioState ScoAudioStateConnected = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.ScoAudioState ScoAudioStateConnected = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.ScoAudioState ScoAudioStateConnected = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ScoAudioStateConnected" />
      <MemberSignature Language="F#" Value="val mutable ScoAudioStateConnected : Android.Media.ScoAudioState" Usage="Android.Media.AudioManager.ScoAudioStateConnected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCO_AUDIO_STATE_CONNECTED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCO_AUDIO_STATE_CONNECTED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ScoAudioState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Value for extra <c>#EXTRA_SCO_AUDIO_STATE</c> or <c>#EXTRA_SCO_AUDIO_PREVIOUS_STATE</c>
            indicating that the SCO audio channel is established</summary>
        <remarks>
          <para>Value for extra <c>#EXTRA_SCO_AUDIO_STATE</c> or <c>#EXTRA_SCO_AUDIO_PREVIOUS_STATE</c>
            indicating that the SCO audio channel is established</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#SCO_AUDIO_STATE_CONNECTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.SCO_AUDIO_STATE_CONNECTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ScoAudioStateConnecting">
      <MemberSignature Language="VB.NET" Value="Public Const ScoAudioStateConnecting As ScoAudioState  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::ScoAudioState ScoAudioStateConnecting = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Media.ScoAudioState ScoAudioStateConnecting = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.ScoAudioState ScoAudioStateConnecting = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ScoAudioStateConnecting" />
      <MemberSignature Language="F#" Value="val mutable ScoAudioStateConnecting : Android.Media.ScoAudioState" Usage="Android.Media.AudioManager.ScoAudioStateConnecting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCO_AUDIO_STATE_CONNECTING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCO_AUDIO_STATE_CONNECTING")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ScoAudioState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE
            indicating that the SCO audio channel is being established</summary>
        <remarks>
          <para>Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE
            indicating that the SCO audio channel is being established</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#SCO_AUDIO_STATE_CONNECTING" title="Reference documentation">Java documentation for <code>android.media.AudioManager.SCO_AUDIO_STATE_CONNECTING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ScoAudioStateDisconnected">
      <MemberSignature Language="VB.NET" Value="Public Const ScoAudioStateDisconnected As ScoAudioState  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::ScoAudioState ScoAudioStateDisconnected = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Media.ScoAudioState ScoAudioStateDisconnected = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.ScoAudioState ScoAudioStateDisconnected = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ScoAudioStateDisconnected" />
      <MemberSignature Language="F#" Value="val mutable ScoAudioStateDisconnected : Android.Media.ScoAudioState" Usage="Android.Media.AudioManager.ScoAudioStateDisconnected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCO_AUDIO_STATE_DISCONNECTED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCO_AUDIO_STATE_DISCONNECTED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ScoAudioState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE
            indicating that the SCO audio channel is not established</summary>
        <remarks>
          <para>Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE
            indicating that the SCO audio channel is not established</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#SCO_AUDIO_STATE_DISCONNECTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.SCO_AUDIO_STATE_DISCONNECTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ScoAudioStateError">
      <MemberSignature Language="VB.NET" Value="Public Const ScoAudioStateError As ScoAudioState  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::ScoAudioState ScoAudioStateError = -1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.ScoAudioState ScoAudioStateError = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.ScoAudioState ScoAudioStateError = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ScoAudioStateError" />
      <MemberSignature Language="F#" Value="val mutable ScoAudioStateError : Android.Media.ScoAudioState" Usage="Android.Media.AudioManager.ScoAudioStateError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCO_AUDIO_STATE_ERROR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SCO_AUDIO_STATE_ERROR")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ScoAudioState</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Value for extra EXTRA_SCO_AUDIO_STATE indicating that
            there was an error trying to obtain the state</summary>
        <remarks>
          <para>Value for extra EXTRA_SCO_AUDIO_STATE indicating that
            there was an error trying to obtain the state</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#SCO_AUDIO_STATE_ERROR" title="Reference documentation">Java documentation for <code>android.media.AudioManager.SCO_AUDIO_STATE_ERROR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetCommunicationDevice">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetCommunicationDevice (device As AudioDeviceInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetCommunicationDevice(Android::Media::AudioDeviceInfo ^ device);" />
      <MemberSignature Language="C#" Value="public virtual bool SetCommunicationDevice (Android.Media.AudioDeviceInfo device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetCommunicationDevice(class Android.Media.AudioDeviceInfo device) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetCommunicationDevice(Android.Media.AudioDeviceInfo)" />
      <MemberSignature Language="F#" Value="abstract member SetCommunicationDevice : Android.Media.AudioDeviceInfo -&gt; bool&#xA;override this.SetCommunicationDevice : Android.Media.AudioDeviceInfo -&gt; bool" Usage="audioManager.SetCommunicationDevice device" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCommunicationDevice", "(Landroid/media/AudioDeviceInfo;)Z", "GetSetCommunicationDevice_Landroid_media_AudioDeviceInfo_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCommunicationDevice", "(Landroid/media/AudioDeviceInfo;)Z", "GetSetCommunicationDevice_Landroid_media_AudioDeviceInfo_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="Android.Media.AudioDeviceInfo" />
      </Parameters>
      <Docs>
        <param name="device">the requested audio device.</param>
        <summary>Selects the audio device that should be used for communication use cases, for instance voice
            or video calls.</summary>
        <returns>
          <c>true</c> if the request was accepted, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Selects the audio device that should be used for communication use cases, for instance voice
            or video calls. This method can be used by voice or video chat applications to select a
            different audio device than the one selected by default by the platform.</para>
          <para>The device selection is expressed as an <c>AudioDeviceInfo</c> among devices returned by
            <c>#getAvailableCommunicationDevices()</c>. Note that only devices in a sink role
            (AKA output devices, see <c>AudioDeviceInfo#isSink()</c>) can be specified. The matching
            source device is selected automatically by the platform.</para>
          <para>The selection is active as long as the requesting application process lives, until
            <c>#clearCommunicationDevice</c> is called or until the device is disconnected.
            It is therefore important for applications to clear the request when a call ends or the
            the requesting activity or service is stopped or destroyed.</para>
          <para>In case of simultaneous requests by multiple applications the priority is given to the
            application currently controlling the audio mode (see <c>#setMode(int)</c>). This is the
            latest application having selected mode <c>#MODE_IN_COMMUNICATION</c> or mode
            <c>#MODE_IN_CALL</c>. Note that <c>MODE_IN_CALL</c> can only be selected by the main
            telephony application with permission
            <c>Manifest.permission#MODIFY_PHONE_STATE</c>.</para>
          <para>If the requested devices is not currently available, the request will be rejected and
            the method will return false.</para>
          <para>This API replaces the following deprecated APIs:
            &lt;ul&gt;
              &lt;li&gt; <c>#startBluetoothSco()</c>&lt;li&gt; <c>#stopBluetoothSco()</c>&lt;li&gt; <c>#setSpeakerphoneOn(boolean)</c>&lt;/ul&gt;
            &lt;h4&gt;Example&lt;/h4&gt;</para>
          <para>The example below shows how to enable and disable speakerphone mode.</para>
          <code lang="text/java">// Get an AudioManager instance
            AudioManager audioManager = Context.getSystemService(AudioManager.class);
            AudioDeviceInfo speakerDevice = null;
            List&lt;AudioDeviceInfo&gt; devices = audioManager.getAvailableCommunicationDevices();
            for (AudioDeviceInfo device : devices) {
                if (device.getType() == AudioDeviceInfo.TYPE_BUILTIN_SPEAKER) {
                    speakerDevice = device;
                    break;
                }
            }
            if (speakerDevice != null) {
                // Turn speakerphone ON.
                boolean result = audioManager.setCommunicationDevice(speakerDevice);
                if (!result) {
                    // Handle error.
                }
                // Turn speakerphone OFF.
                audioManager.clearCommunicationDevice();
            }
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setCommunicationDevice(android.media.AudioDeviceInfo)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setCommunicationDevice(android.media.AudioDeviceInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEncodedSurroundMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetEncodedSurroundMode (mode As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetEncodedSurroundMode(int mode);" />
      <MemberSignature Language="C#" Value="public virtual bool SetEncodedSurroundMode (int mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetEncodedSurroundMode(int32 mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetEncodedSurroundMode(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetEncodedSurroundMode : int -&gt; bool&#xA;override this.SetEncodedSurroundMode : int -&gt; bool" Usage="audioManager.SetEncodedSurroundMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEncodedSurroundMode", "(I)Z", "GetSetEncodedSurroundMode_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEncodedSurroundMode", "(I)Z", "GetSetEncodedSurroundMode_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.WRITE_SETTINGS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.WRITE_SETTINGS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "EncodedSurroundOutputUnknown", "EncodedSurroundOutputAuto", "EncodedSurroundOutputNever", "EncodedSurroundOutputAlways", "EncodedSurroundOutputManual" }, Type="Android.Media.AudioManager")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "EncodedSurroundOutputUnknown", "EncodedSurroundOutputAuto", "EncodedSurroundOutputNever", "EncodedSurroundOutputAlways", "EncodedSurroundOutputManual" }, Type="Android.Media.AudioManager")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <summary>Sets the surround sound mode.</summary>
        <returns>true if successful, otherwise false</returns>
        <remarks>
          <para>Sets the surround sound mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setEncodedSurroundMode(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setEncodedSurroundMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetParameters (keyValuePairs As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetParameters(System::String ^ keyValuePairs);" />
      <MemberSignature Language="C#" Value="public virtual void SetParameters (string? keyValuePairs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetParameters(string keyValuePairs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetParameters(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetParameters : string -&gt; unit&#xA;override this.SetParameters : string -&gt; unit" Usage="audioManager.SetParameters keyValuePairs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setParameters", "(Ljava/lang/String;)V", "GetSetParameters_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setParameters", "(Ljava/lang/String;)V", "GetSetParameters_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePairs" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyValuePairs">list of parameters key value pairs in the form:
               key1=value1;key2=value2;...</param>
        <summary>Sets a variable number of parameter values to audio hardware.</summary>
        <remarks>
          <para>Sets a variable number of parameter values to audio hardware.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setParameters(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setParameters(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetPreferredMixerAttributes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPreferredMixerAttributes (attributes As AudioAttributes, device As AudioDeviceInfo, mixerAttributes As AudioMixerAttributes) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetPreferredMixerAttributes(Android::Media::AudioAttributes ^ attributes, Android::Media::AudioDeviceInfo ^ device, Android::Media::AudioMixerAttributes ^ mixerAttributes);" />
      <MemberSignature Language="C#" Value="public virtual bool SetPreferredMixerAttributes (Android.Media.AudioAttributes attributes, Android.Media.AudioDeviceInfo device, Android.Media.AudioMixerAttributes mixerAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPreferredMixerAttributes(class Android.Media.AudioAttributes attributes, class Android.Media.AudioDeviceInfo device, class Android.Media.AudioMixerAttributes mixerAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetPreferredMixerAttributes(Android.Media.AudioAttributes,Android.Media.AudioDeviceInfo,Android.Media.AudioMixerAttributes)" />
      <MemberSignature Language="F#" Value="abstract member SetPreferredMixerAttributes : Android.Media.AudioAttributes * Android.Media.AudioDeviceInfo * Android.Media.AudioMixerAttributes -&gt; bool&#xA;override this.SetPreferredMixerAttributes : Android.Media.AudioAttributes * Android.Media.AudioDeviceInfo * Android.Media.AudioMixerAttributes -&gt; bool" Usage="audioManager.SetPreferredMixerAttributes (attributes, device, mixerAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPreferredMixerAttributes", "(Landroid/media/AudioAttributes;Landroid/media/AudioDeviceInfo;Landroid/media/AudioMixerAttributes;)Z", "GetSetPreferredMixerAttributes_Landroid_media_AudioAttributes_Landroid_media_AudioDeviceInfo_Landroid_media_AudioMixerAttributes_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPreferredMixerAttributes", "(Landroid/media/AudioAttributes;Landroid/media/AudioDeviceInfo;Landroid/media/AudioMixerAttributes;)Z", "GetSetPreferredMixerAttributes_Landroid_media_AudioAttributes_Landroid_media_AudioDeviceInfo_Landroid_media_AudioMixerAttributes_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MODIFY_AUDIO_SETTINGS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MODIFY_AUDIO_SETTINGS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
        <Parameter Name="device" Type="Android.Media.AudioDeviceInfo" />
        <Parameter Name="mixerAttributes" Type="Android.Media.AudioMixerAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes">the <c>AudioAttributes</c> whose mixer attributes should be set.
                              Currently, only <c>AudioAttributes#USAGE_MEDIA</c> is supported. When
                              playing audio targeted at the given device, use the same attributes for
                              playback.</param>
        <param name="device">the device to be routed. Currently, only USB device will be allowed.</param>
        <param name="mixerAttributes">the preferred mixer attributes. When playing audio targeted at the
                                   given device, use the same <c>AudioFormat</c> for both playback
                                   and the mixer attributes.</param>
        <summary>Configures the mixer attributes for a particular <c>AudioAttributes</c> over a given
            <c>AudioDeviceInfo</c>.</summary>
        <returns>true only if the preferred mixer attributes are set successfully.</returns>
        <remarks>
          <para>Configures the mixer attributes for a particular <c>AudioAttributes</c> over a given
            <c>AudioDeviceInfo</c>.</para>
          <para>Call <c>#getSupportedMixerAttributes(AudioDeviceInfo)</c> to determine which mixer
            attributes can be used with the given device.</para>
          <para>The ownership of preferred mixer attributes is recognized by uid. When a playback from the
            same uid is routed to the given audio device when calling this API, the output mixer/stream
            will be configured with the values previously set via this API.</para>
          <para>Use <c>#clearPreferredMixerAttributes(AudioAttributes, AudioDeviceInfo)</c>
            to cancel setting mixer attributes for this <c>AudioAttributes</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setPreferredMixerAttributes(android.media.AudioAttributes,%20android.media.AudioDeviceInfo,%20android.media.AudioMixerAttributes)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setPreferredMixerAttributes(android.media.AudioAttributes, android.media.AudioDeviceInfo, android.media.AudioMixerAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRouting">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRouting (mode As Mode, routes As Route, mask As Route)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRouting(Android::Media::Mode mode, Android::Media::Route routes, Android::Media::Route mask);" />
      <MemberSignature Language="C#" Value="public virtual void SetRouting (Android.Media.Mode mode, Android.Media.Route routes, Android.Media.Route mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRouting(valuetype Android.Media.Mode mode, valuetype Android.Media.Route routes, valuetype Android.Media.Route mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetRouting(Android.Media.Mode,Android.Media.Route,Android.Media.Route)" />
      <MemberSignature Language="F#" Value="abstract member SetRouting : Android.Media.Mode * Android.Media.Route * Android.Media.Route -&gt; unit&#xA;override this.SetRouting : Android.Media.Mode * Android.Media.Route * Android.Media.Route -&gt; unit" Usage="audioManager.SetRouting (mode, routes, mask)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRouting", "(III)V", "GetSetRouting_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRouting", "(III)V", "GetSetRouting_IIIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Media.Mode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="routes" Type="Android.Media.Route">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="mask" Type="Android.Media.Route">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">audio mode to change route. E.g., MODE_RINGTONE.</param>
        <param name="routes">bit vector of routes requested, created from one or
                          more of ROUTE_xxx types. Set bits indicate that route should be on</param>
        <param name="mask">bit vector of routes to change, created from one or more of
            ROUTE_xxx types. Unset bits indicate the route should be left unchanged</param>
        <summary>Sets the audio routing for a specified mode</summary>
        <remarks>
          <para>Sets the audio routing for a specified mode</para>
          <para>This member is deprecated. Do not set audio routing directly, use setSpeakerphoneOn(),
            setBluetoothScoOn() methods instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setRouting(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setRouting(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetStreamMute">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetStreamMute (streamType As Stream, state As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetStreamMute(Android::Media::Stream streamType, bool state);" />
      <MemberSignature Language="C#" Value="public virtual void SetStreamMute (Android.Media.Stream streamType, bool state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStreamMute(valuetype Android.Media.Stream streamType, bool state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetStreamMute(Android.Media.Stream,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetStreamMute : Android.Media.Stream * bool -&gt; unit&#xA;override this.SetStreamMute : Android.Media.Stream * bool -&gt; unit" Usage="audioManager.SetStreamMute (streamType, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStreamMute", "(IZ)V", "GetSetStreamMute_IZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStreamMute", "(IZ)V", "GetSetStreamMute_IZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="state" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamType">The stream to be muted/unmuted.</param>
        <param name="state">The required mute state: true for mute ON, false for mute
                       OFF</param>
        <summary>Mute or unmute an audio stream.</summary>
        <remarks>
          <para>Mute or unmute an audio stream.</para>
          <para>This method should only be used by applications that replace the
            platform-wide management of audio settings or the main telephony
            application.</para>
          <para>This method has no effect if the device implements a fixed volume policy
            as indicated by <c>#isVolumeFixed()</c>.</para>
          <para>This method was deprecated in API level 22. Prior to API level 22 this
            method had significantly different behavior and should be used carefully.
            The following applies only to pre-22 platforms:
            &lt;ul&gt;
            &lt;li&gt;The mute command is protected against client process death: if a
            process with an active mute request on a stream dies, this stream will be
            unmuted automatically.&lt;/li&gt;
            &lt;li&gt;The mute requests for a given stream are cumulative: the AudioManager
            can receive several mute requests from one or more clients and the stream
            will be unmuted only when the same number of unmute requests are
            received.&lt;/li&gt;
            &lt;li&gt;For a better user experience, applications MUST unmute a muted stream
            in onPause() and mute is again in onResume() if appropriate.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>This member is deprecated. Use <c>#adjustStreamVolume(int, int, int)</c> with
                        <c>#ADJUST_MUTE</c> or <c>#ADJUST_UNMUTE</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setStreamMute(int,%20boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setStreamMute(int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="SetStreamSolo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetStreamSolo (streamType As Stream, state As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetStreamSolo(Android::Media::Stream streamType, bool state);" />
      <MemberSignature Language="C#" Value="public virtual void SetStreamSolo (Android.Media.Stream streamType, bool state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStreamSolo(valuetype Android.Media.Stream streamType, bool state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetStreamSolo(Android.Media.Stream,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetStreamSolo : Android.Media.Stream * bool -&gt; unit&#xA;override this.SetStreamSolo : Android.Media.Stream * bool -&gt; unit" Usage="audioManager.SetStreamSolo (streamType, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStreamSolo", "(IZ)V", "GetSetStreamSolo_IZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStreamSolo", "(IZ)V", "GetSetStreamSolo_IZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="state" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamType">The stream to be soloed/unsoloed.</param>
        <param name="state">The required solo state: true for solo ON, false for solo
                       OFF</param>
        <summary>Solo or unsolo a particular stream.</summary>
        <remarks>
          <para>Solo or unsolo a particular stream.</para>
          <para>Do not use. This method has been deprecated and is now a no-op.
            <c>#requestAudioFocus</c> should be used for exclusive audio playback.</para>
          <para>This member is deprecated. Do not use. If you need exclusive audio playback use
                        <c>#requestAudioFocus</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setStreamSolo(int,%20boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setStreamSolo(int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="SetStreamVolume">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetStreamVolume (streamType As Stream, index As Integer, flags As VolumeNotificationFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetStreamVolume(Android::Media::Stream streamType, int index, Android::Media::VolumeNotificationFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void SetStreamVolume (Android.Media.Stream streamType, int index, Android.Media.VolumeNotificationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStreamVolume(valuetype Android.Media.Stream streamType, int32 index, valuetype Android.Media.VolumeNotificationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream,System.Int32,Android.Media.VolumeNotificationFlags)" />
      <MemberSignature Language="F#" Value="abstract member SetStreamVolume : Android.Media.Stream * int * Android.Media.VolumeNotificationFlags -&gt; unit&#xA;override this.SetStreamVolume : Android.Media.Stream * int * Android.Media.VolumeNotificationFlags -&gt; unit" Usage="audioManager.SetStreamVolume (streamType, index, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStreamVolume", "(III)V", "GetSetStreamVolume_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStreamVolume", "(III)V", "GetSetStreamVolume_IIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Media.VolumeNotificationFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream whose volume index should be set.</param>
        <param name="index">The volume index to set. See
                       <c>#getStreamMaxVolume(int)</c> for the largest valid value.</param>
        <param name="flags">flags</param>
        <summary>Sets the volume index for a particular stream.</summary>
        <remarks>
          <para>Sets the volume index for a particular stream.</para>
          <para>This method has no effect if the device implements a fixed volume policy
            as indicated by <c>#isVolumeFixed()</c>.</para>
          <para>From N onward, volume adjustments that would toggle Do Not Disturb are not allowed unless
            the app has been granted Do Not Disturb Access.
            See <c>NotificationManager#isNotificationPolicyAccessGranted()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setStreamVolume(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setStreamVolume(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.GetStreamMaxVolume(Android.Media.Stream)" />
        <altmember cref="M:Android.Media.AudioManager.GetStreamVolume(Android.Media.Stream)" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="SetSurroundFormatEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetSurroundFormatEnabled (audioFormat As Integer, enabled As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetSurroundFormatEnabled(int audioFormat, bool enabled);" />
      <MemberSignature Language="C#" Value="public virtual bool SetSurroundFormatEnabled (int audioFormat, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetSurroundFormatEnabled(int32 audioFormat, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetSurroundFormatEnabled(System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetSurroundFormatEnabled : int * bool -&gt; bool&#xA;override this.SetSurroundFormatEnabled : int * bool -&gt; bool" Usage="audioManager.SetSurroundFormatEnabled (audioFormat, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSurroundFormatEnabled", "(IZ)Z", "GetSetSurroundFormatEnabled_IZHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSurroundFormatEnabled", "(IZ)Z", "GetSetSurroundFormatEnabled_IZHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.WRITE_SETTINGS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.WRITE_SETTINGS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFormat" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "", "", "", "" }, Flag=true, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "", "", "", "" }, Flag=true, Type="")&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "EncodingMpeghBlL3", "EncodingMpeghBlL4", "EncodingMpeghLcL3", "EncodingMpeghLcL4", "EncodingDtsUhdP1", "EncodingDra", "EncodingDtsHdMa", "EncodingDtsUhdP2" }, Flag=true, Type="Android.Media.AudioFormat")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "EncodingMpeghBlL3", "EncodingMpeghBlL4", "EncodingMpeghLcL3", "EncodingMpeghLcL4", "EncodingDtsUhdP1", "EncodingDra", "EncodingDtsHdMa", "EncodingDtsUhdP2" }, Flag=true, Type="Android.Media.AudioFormat")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="audioFormat">To be added.</param>
        <param name="enabled">the required surround format state, true for enabled, false for disabled</param>
        <summary>Sets and persists a certain surround format as enabled or not.</summary>
        <returns>true if successful, otherwise false</returns>
        <remarks>
          <para>Sets and persists a certain surround format as enabled or not.</para>
          <para>This API is called by TvSettings surround sound menu when user enables or disables a
            surround sound format. This setting is persisted as global user setting.
            Applications should revert their changes to surround sound settings unless they intend to
            modify the global user settings across all apps. The framework does not auto-revert an
            application's settings after a lifecycle event. Audio focus is not required to apply these
            settings.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setSurroundFormatEnabled(int,%20boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setSurroundFormatEnabled(int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVibrateSetting">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetVibrateSetting (vibrateType As VibrateType, vibrateSetting As VibrateSetting)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetVibrateSetting(Android::Media::VibrateType vibrateType, Android::Media::VibrateSetting vibrateSetting);" />
      <MemberSignature Language="C#" Value="public virtual void SetVibrateSetting (Android.Media.VibrateType vibrateType, Android.Media.VibrateSetting vibrateSetting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVibrateSetting(valuetype Android.Media.VibrateType vibrateType, valuetype Android.Media.VibrateSetting vibrateSetting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetVibrateSetting(Android.Media.VibrateType,Android.Media.VibrateSetting)" />
      <MemberSignature Language="F#" Value="abstract member SetVibrateSetting : Android.Media.VibrateType * Android.Media.VibrateSetting -&gt; unit&#xA;override this.SetVibrateSetting : Android.Media.VibrateType * Android.Media.VibrateSetting -&gt; unit" Usage="audioManager.SetVibrateSetting (vibrateType, vibrateSetting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVibrateSetting", "(II)V", "GetSetVibrateSetting_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVibrateSetting", "(II)V", "GetSetVibrateSetting_IIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vibrateType" Type="Android.Media.VibrateType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="vibrateSetting" Type="Android.Media.VibrateSetting">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vibrateType">The type of vibrate. One of
                       <c>#VIBRATE_TYPE_NOTIFICATION</c> or
                       <c>#VIBRATE_TYPE_RINGER</c>.</param>
        <param name="vibrateSetting">The vibrate setting, one of
                       <c>#VIBRATE_SETTING_ON</c>,
                       <c>#VIBRATE_SETTING_OFF</c>, or
                       <c>#VIBRATE_SETTING_ONLY_SILENT</c>.</param>
        <summary>Sets the setting for when the vibrate type should vibrate.</summary>
        <remarks>
          <para>Sets the setting for when the vibrate type should vibrate.</para>
          <para>This method should only be used by applications that replace the platform-wide
            management of audio settings or the main telephony application.</para>
          <para>This member is deprecated. Applications should maintain their own vibrate policy based on
            current ringer mode that can be queried via <c>#getRingerMode()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setVibrateSetting(int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setVibrateSetting(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.GetVibrateSetting(Android.Media.VibrateType)" />
        <altmember cref="M:Android.Media.AudioManager.ShouldVibrate(Android.Media.VibrateType)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldVibrate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldVibrate (vibrateType As VibrateType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ShouldVibrate(Android::Media::VibrateType vibrateType);" />
      <MemberSignature Language="C#" Value="public virtual bool ShouldVibrate (Android.Media.VibrateType vibrateType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldVibrate(valuetype Android.Media.VibrateType vibrateType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.ShouldVibrate(Android.Media.VibrateType)" />
      <MemberSignature Language="F#" Value="abstract member ShouldVibrate : Android.Media.VibrateType -&gt; bool&#xA;override this.ShouldVibrate : Android.Media.VibrateType -&gt; bool" Usage="audioManager.ShouldVibrate vibrateType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldVibrate", "(I)Z", "GetShouldVibrate_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("shouldVibrate", "(I)Z", "GetShouldVibrate_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vibrateType" Type="Android.Media.VibrateType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vibrateType">The type of vibrate. One of
                       <c>#VIBRATE_TYPE_NOTIFICATION</c> or
                       <c>#VIBRATE_TYPE_RINGER</c>.</param>
        <summary>Returns whether a particular type should vibrate according to user
            settings and the current ringer mode.</summary>
        <returns>Whether the type should vibrate at the instant this method is
                    called.</returns>
        <remarks>
          <para>Returns whether a particular type should vibrate according to user
            settings and the current ringer mode.</para>
          <para>This shouldn't be needed by most clients that use notifications to
            vibrate. The notification manager will not vibrate if the policy doesn't
            allow it, so the client should always set a vibrate pattern and let the
            notification manager control whether or not to actually vibrate.</para>
          <para>This member is deprecated. Applications should maintain their own vibrate policy based on
            current ringer mode that can be queried via <c>#getRingerMode()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#shouldVibrate(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.shouldVibrate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.SetVibrateSetting(Android.Media.VibrateType, Android.Media.VibrateSetting)" />
        <altmember cref="M:Android.Media.AudioManager.GetVibrateSetting(Android.Media.VibrateType)" />
      </Docs>
    </Member>
    <Member MemberName="Spatializer">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Spatializer As Spatializer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::Spatializer ^ Spatializer { Android::Media::Spatializer ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.Spatializer Spatializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Spatializer Spatializer" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.Spatializer" />
      <MemberSignature Language="F#" Value="member this.Spatializer : Android.Media.Spatializer" Usage="Android.Media.AudioManager.Spatializer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android32.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android32.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSpatializer", "()Landroid/media/Spatializer;", "GetGetSpatializerHandler", ApiSince=32)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSpatializer", "()Landroid/media/Spatializer;", "GetGetSpatializerHandler", ApiSince=32)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Spatializer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a handle to the optional platform's <c>Spatializer</c></summary>
        <value>the <c>Spatializer</c> instance.</value>
        <remarks>
          <para>Return a handle to the optional platform's <c>Spatializer</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getSpatializer()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getSpatializer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeakerphoneOn">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SpeakerphoneOn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SpeakerphoneOn { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool SpeakerphoneOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpeakerphoneOn" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.SpeakerphoneOn" />
      <MemberSignature Language="F#" Value="member this.SpeakerphoneOn : bool with get, set" Usage="Android.Media.AudioManager.SpeakerphoneOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSpeakerphoneOn", "()Z", "GetIsSpeakerphoneOnHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSpeakerphoneOn", "()Z", "GetIsSpeakerphoneOnHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSpeakerphoneOn", "(Z)V", "GetSetSpeakerphoneOn_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSpeakerphoneOn", "(Z)V", "GetSetSpeakerphoneOn_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">set &lt;var&gt;true&lt;/var&gt; to turn on speakerphone;
                      &lt;var&gt;false&lt;/var&gt; to turn it off</param>
        <summary>Checks whether the speakerphone is on or off. -or- Sets the speakerphone on or off.</summary>
        <value>true if speakerphone is on, false if it's off</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Checks whether the speakerphone is on or off.</para>
          <para>This member is deprecated. Use <c>AudioManager#getCommunicationDevice()</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isSpeakerphoneOn()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isSpeakerphoneOn()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the speakerphone on or off.</para>
          <para>This method should only be used by applications that replace the platform-wide
            management of audio settings or the main telephony application.</para>
          <para>This member is deprecated. Use <c>AudioManager#setCommunicationDevice(AudioDeviceInfo)</c> or
                      <c>AudioManager#clearCommunicationDevice()</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setSpeakerphoneOn(boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setSpeakerphoneOn(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartBluetoothSco">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StartBluetoothSco ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartBluetoothSco();" />
      <MemberSignature Language="C#" Value="public virtual void StartBluetoothSco ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartBluetoothSco() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.StartBluetoothSco" />
      <MemberSignature Language="F#" Value="abstract member StartBluetoothSco : unit -&gt; unit&#xA;override this.StartBluetoothSco : unit -&gt; unit" Usage="audioManager.StartBluetoothSco " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startBluetoothSco", "()V", "GetStartBluetoothScoHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startBluetoothSco", "()V", "GetStartBluetoothScoHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Start bluetooth SCO audio connection.</summary>
        <remarks>
          <para>Start bluetooth SCO audio connection.</para>
          <para>Requires Permission:
              <c>Manifest.permission#MODIFY_AUDIO_SETTINGS</c>.</para>
          <para>This method can be used by applications wanting to send and received audio
            to/from a bluetooth SCO headset while the phone is not in call.</para>
          <para>As the SCO connection establishment can take several seconds,
            applications should not rely on the connection to be available when the method
            returns but instead register to receive the intent <c>#ACTION_SCO_AUDIO_STATE_UPDATED</c>
            and wait for the state to be <c>#SCO_AUDIO_STATE_CONNECTED</c>.</para>
          <para>As the ACTION_SCO_AUDIO_STATE_UPDATED intent is sticky, the application can check the SCO
            audio state before calling startBluetoothSco() by reading the intent returned by the receiver
            registration. If the state is already CONNECTED, no state change will be received via the
            intent after calling startBluetoothSco(). It is however useful to call startBluetoothSco()
            so that the connection stays active in case the current initiator stops the connection.</para>
          <para>Unless the connection is already active as described above, the state will always
            transition from DISCONNECTED to CONNECTING and then either to CONNECTED if the connection
            succeeds or back to DISCONNECTED if the connection fails (e.g no headset is connected).</para>
          <para>When finished with the SCO connection or if the establishment fails, the application must
            call <c>#stopBluetoothSco()</c> to clear the request and turn down the bluetooth connection.</para>
          <para>Even if a SCO connection is established, the following restrictions apply on audio
            output streams so that they can be routed to SCO headset:
            &lt;ul&gt;
              &lt;li&gt; the stream type must be <c>#STREAM_VOICE_CALL</c>&lt;/li&gt;
              &lt;li&gt; the format must be mono &lt;/li&gt;
              &lt;li&gt; the sampling must be 16kHz or 8kHz &lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>The following restrictions apply on input streams:
            &lt;ul&gt;
              &lt;li&gt; the format must be mono &lt;/li&gt;
              &lt;li&gt; the sampling must be 8kHz &lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>Note that the phone application always has the priority on the usage of the SCO
            connection for telephony. If this method is called while the phone is in call
            it will be ignored. Similarly, if a call is received or sent while an application
            is using the SCO connection, the connection will be lost for the application and NOT
            returned automatically when the call ends.</para>
          <para>NOTE: up to and including API version
            <c>android.os.Build.VERSION_CODES#JELLY_BEAN_MR1</c>, this method initiates a virtual
            voice call to the bluetooth headset.
            After API version <c>android.os.Build.VERSION_CODES#JELLY_BEAN_MR2</c> only a raw SCO audio
            connection is established.</para>
          <para>This member is deprecated. Use <c>AudioManager#setCommunicationDevice(AudioDeviceInfo)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#startBluetoothSco()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.startBluetoothSco()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.StopBluetoothSco" />
        <altmember cref="F:Android.Media.AudioManager.ActionScoAudioStateUpdated" />
      </Docs>
    </Member>
    <Member MemberName="StopBluetoothSco">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StopBluetoothSco ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopBluetoothSco();" />
      <MemberSignature Language="C#" Value="public virtual void StopBluetoothSco ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopBluetoothSco() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.StopBluetoothSco" />
      <MemberSignature Language="F#" Value="abstract member StopBluetoothSco : unit -&gt; unit&#xA;override this.StopBluetoothSco : unit -&gt; unit" Usage="audioManager.StopBluetoothSco " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopBluetoothSco", "()V", "GetStopBluetoothScoHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopBluetoothSco", "()V", "GetStopBluetoothScoHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop bluetooth SCO audio connection.</summary>
        <remarks>
          <para>Stop bluetooth SCO audio connection.</para>
          <para>Requires Permission:
              <c>Manifest.permission#MODIFY_AUDIO_SETTINGS</c>.</para>
          <para>This method must be called by applications having requested the use of
            bluetooth SCO audio with <c>#startBluetoothSco()</c> when finished with the SCO
            connection or if connection fails.</para>
          <para>This member is deprecated. Use <c>AudioManager#clearCommunicationDevice()</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#stopBluetoothSco()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.stopBluetoothSco()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.StartBluetoothSco" />
      </Docs>
    </Member>
    <Member MemberName="StreamAccessibility">
      <MemberSignature Language="VB.NET" Value="Public Const StreamAccessibility As Integer  = 10" />
      <MemberSignature Language="C++ CLI" Value="public: int StreamAccessibility = 10;" />
      <MemberSignature Language="C#" Value="public const int StreamAccessibility = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 StreamAccessibility = (10)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.StreamAccessibility" />
      <MemberSignature Language="F#" Value="val mutable StreamAccessibility : int" Usage="Android.Media.AudioManager.StreamAccessibility" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("STREAM_ACCESSIBILITY", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("STREAM_ACCESSIBILITY", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.Stream enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.Stream enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>Used to identify the volume of audio streams for accessibility prompts</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#STREAM_ACCESSIBILITY" title="Reference documentation">Java documentation for <code>android.media.AudioManager.STREAM_ACCESSIBILITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.AudioManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.AudioManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadSoundEffects">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnloadSoundEffects ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnloadSoundEffects();" />
      <MemberSignature Language="C#" Value="public virtual void UnloadSoundEffects ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnloadSoundEffects() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnloadSoundEffects" />
      <MemberSignature Language="F#" Value="abstract member UnloadSoundEffects : unit -&gt; unit&#xA;override this.UnloadSoundEffects : unit -&gt; unit" Usage="audioManager.UnloadSoundEffects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unloadSoundEffects", "()V", "GetUnloadSoundEffectsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unloadSoundEffects", "()V", "GetUnloadSoundEffectsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unload Sound effects.</summary>
        <remarks>
          <para>Unload Sound effects.
             This method can be called to free some memory when
             sound effects are disabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unloadSoundEffects()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unloadSoundEffects()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterAudioDeviceCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnregisterAudioDeviceCallback (callback As AudioDeviceCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterAudioDeviceCallback(Android::Media::AudioDeviceCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterAudioDeviceCallback (Android.Media.AudioDeviceCallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterAudioDeviceCallback(class Android.Media.AudioDeviceCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterAudioDeviceCallback(Android.Media.AudioDeviceCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterAudioDeviceCallback : Android.Media.AudioDeviceCallback -&gt; unit&#xA;override this.UnregisterAudioDeviceCallback : Android.Media.AudioDeviceCallback -&gt; unit" Usage="audioManager.UnregisterAudioDeviceCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterAudioDeviceCallback", "(Landroid/media/AudioDeviceCallback;)V", "GetUnregisterAudioDeviceCallback_Landroid_media_AudioDeviceCallback_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterAudioDeviceCallback", "(Landroid/media/AudioDeviceCallback;)V", "GetUnregisterAudioDeviceCallback_Landroid_media_AudioDeviceCallback_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.AudioDeviceCallback" />
      </Parameters>
      <Docs>
        <param name="callback">The <c>AudioDeviceCallback</c> object that was previously registered
            with <c>AudioManager#registerAudioDeviceCallback</c> to be unregistered.</param>
        <summary>Unregisters an <c>AudioDeviceCallback</c> object which has been previously registered
            to receive notifications of changes to the set of connected audio devices.</summary>
        <remarks>
          <para>Unregisters an <c>AudioDeviceCallback</c> object which has been previously registered
            to receive notifications of changes to the set of connected audio devices.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterAudioDeviceCallback(android.media.AudioDeviceCallback)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterAudioDeviceCallback(android.media.AudioDeviceCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAudioPlaybackCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnregisterAudioPlaybackCallback (cb As AudioManager.AudioPlaybackCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterAudioPlaybackCallback(Android::Media::AudioManager::AudioPlaybackCallback ^ cb);" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterAudioPlaybackCallback (Android.Media.AudioManager.AudioPlaybackCallback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterAudioPlaybackCallback(class Android.Media.AudioManager/AudioPlaybackCallback cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterAudioPlaybackCallback(Android.Media.AudioManager.AudioPlaybackCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterAudioPlaybackCallback : Android.Media.AudioManager.AudioPlaybackCallback -&gt; unit&#xA;override this.UnregisterAudioPlaybackCallback : Android.Media.AudioManager.AudioPlaybackCallback -&gt; unit" Usage="audioManager.UnregisterAudioPlaybackCallback cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterAudioPlaybackCallback", "(Landroid/media/AudioManager$AudioPlaybackCallback;)V", "GetUnregisterAudioPlaybackCallback_Landroid_media_AudioManager_AudioPlaybackCallback_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterAudioPlaybackCallback", "(Landroid/media/AudioManager$AudioPlaybackCallback;)V", "GetUnregisterAudioPlaybackCallback_Landroid_media_AudioManager_AudioPlaybackCallback_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioPlaybackCallback" />
      </Parameters>
      <Docs>
        <param name="cb">non-null callback to unregister</param>
        <summary>Unregister an audio playback callback previously registered with
            <c>#registerAudioPlaybackCallback(AudioPlaybackCallback, Handler)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterAudioPlaybackCallback(android.media.AudioPlaybackCallback)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterAudioPlaybackCallback(android.media.AudioPlaybackCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAudioRecordingCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnregisterAudioRecordingCallback (cb As AudioManager.AudioRecordingCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterAudioRecordingCallback(Android::Media::AudioManager::AudioRecordingCallback ^ cb);" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterAudioRecordingCallback (Android.Media.AudioManager.AudioRecordingCallback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterAudioRecordingCallback(class Android.Media.AudioManager/AudioRecordingCallback cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterAudioRecordingCallback(Android.Media.AudioManager.AudioRecordingCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback -&gt; unit&#xA;override this.UnregisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback -&gt; unit" Usage="audioManager.UnregisterAudioRecordingCallback cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterAudioRecordingCallback", "(Landroid/media/AudioManager$AudioRecordingCallback;)V", "GetUnregisterAudioRecordingCallback_Landroid_media_AudioManager_AudioRecordingCallback_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterAudioRecordingCallback", "(Landroid/media/AudioManager$AudioRecordingCallback;)V", "GetUnregisterAudioRecordingCallback_Landroid_media_AudioManager_AudioRecordingCallback_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioRecordingCallback" />
      </Parameters>
      <Docs>
        <param name="cb">non-null callback to unregister</param>
        <summary>Unregister an audio recording callback previously registered with
            <c>#registerAudioRecordingCallback(AudioRecordingCallback, Handler)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterAudioRecordingCallback(android.media.AudioRecordingCallback)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterAudioRecordingCallback(android.media.AudioRecordingCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterMediaButtonEventReceiver">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnregisterMediaButtonEventReceiver (eventReceiver As PendingIntent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterMediaButtonEventReceiver(Android::App::PendingIntent ^ eventReceiver);" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterMediaButtonEventReceiver (Android.App.PendingIntent? eventReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterMediaButtonEventReceiver(class Android.App.PendingIntent eventReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterMediaButtonEventReceiver(Android.App.PendingIntent)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterMediaButtonEventReceiver : Android.App.PendingIntent -&gt; unit&#xA;override this.UnregisterMediaButtonEventReceiver : Android.App.PendingIntent -&gt; unit" Usage="audioManager.UnregisterMediaButtonEventReceiver eventReceiver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterMediaButtonEventReceiver", "(Landroid/app/PendingIntent;)V", "GetUnregisterMediaButtonEventReceiver_Landroid_app_PendingIntent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterMediaButtonEventReceiver", "(Landroid/app/PendingIntent;)V", "GetUnregisterMediaButtonEventReceiver_Landroid_app_PendingIntent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventReceiver" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="eventReceiver">same PendingIntent that was registed with
                 <c>#registerMediaButtonEventReceiver(PendingIntent)</c>.</param>
        <summary>Unregister the receiver of MEDIA_BUTTON intents.</summary>
        <remarks>
          <para>Unregister the receiver of MEDIA_BUTTON intents.</para>
          <para>This member is deprecated. Use <c>MediaSession</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterMediaButtonEventReceiver(android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterMediaButtonEventReceiver(android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterMediaButtonEventReceiver">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnregisterMediaButtonEventReceiver (eventReceiver As ComponentName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterMediaButtonEventReceiver(Android::Content::ComponentName ^ eventReceiver);" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterMediaButtonEventReceiver (Android.Content.ComponentName? eventReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterMediaButtonEventReceiver(class Android.Content.ComponentName eventReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterMediaButtonEventReceiver(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterMediaButtonEventReceiver : Android.Content.ComponentName -&gt; unit&#xA;override this.UnregisterMediaButtonEventReceiver : Android.Content.ComponentName -&gt; unit" Usage="audioManager.UnregisterMediaButtonEventReceiver eventReceiver" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterMediaButtonEventReceiver", "(Landroid/content/ComponentName;)V", "GetUnregisterMediaButtonEventReceiver_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterMediaButtonEventReceiver", "(Landroid/content/ComponentName;)V", "GetUnregisterMediaButtonEventReceiver_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventReceiver" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="eventReceiver">identifier of a <c>android.content.BroadcastReceiver</c>
                 that was registered with <c>#registerMediaButtonEventReceiver(ComponentName)</c>.</param>
        <summary>Unregister the receiver of MEDIA_BUTTON intents.</summary>
        <remarks>
          <para>Unregister the receiver of MEDIA_BUTTON intents.</para>
          <para>This member is deprecated. Use <c>MediaSession</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterMediaButtonEventReceiver(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterMediaButtonEventReceiver(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterRemoteControlClient">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnregisterRemoteControlClient (rcClient As RemoteControlClient)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterRemoteControlClient(Android::Media::RemoteControlClient ^ rcClient);" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterRemoteControlClient (Android.Media.RemoteControlClient? rcClient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterRemoteControlClient(class Android.Media.RemoteControlClient rcClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterRemoteControlClient(Android.Media.RemoteControlClient)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterRemoteControlClient : Android.Media.RemoteControlClient -&gt; unit&#xA;override this.UnregisterRemoteControlClient : Android.Media.RemoteControlClient -&gt; unit" Usage="audioManager.UnregisterRemoteControlClient rcClient" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterRemoteControlClient", "(Landroid/media/RemoteControlClient;)V", "GetUnregisterRemoteControlClient_Landroid_media_RemoteControlClient_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterRemoteControlClient", "(Landroid/media/RemoteControlClient;)V", "GetUnregisterRemoteControlClient_Landroid_media_RemoteControlClient_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rcClient" Type="Android.Media.RemoteControlClient" />
      </Parameters>
      <Docs>
        <param name="rcClient">The remote control client to unregister.</param>
        <summary>Unregisters the remote control client that was providing information to display on the
            remote controls.</summary>
        <remarks>
          <para>Unregisters the remote control client that was providing information to display on the
            remote controls.</para>
          <para>This member is deprecated. Use <c>MediaSession</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterRemoteControlClient(android.media.RemoteControlClient)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterRemoteControlClient(android.media.RemoteControlClient)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.AudioManager.RegisterRemoteControlClient(Android.Media.RemoteControlClient)" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterRemoteController">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnregisterRemoteController (rctlr As RemoteController)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterRemoteController(Android::Media::RemoteController ^ rctlr);" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterRemoteController (Android.Media.RemoteController? rctlr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterRemoteController(class Android.Media.RemoteController rctlr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterRemoteController(Android.Media.RemoteController)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterRemoteController : Android.Media.RemoteController -&gt; unit&#xA;override this.UnregisterRemoteController : Android.Media.RemoteController -&gt; unit" Usage="audioManager.UnregisterRemoteController rctlr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterRemoteController", "(Landroid/media/RemoteController;)V", "GetUnregisterRemoteController_Landroid_media_RemoteController_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterRemoteController", "(Landroid/media/RemoteController;)V", "GetUnregisterRemoteController_Landroid_media_RemoteController_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rctlr" Type="Android.Media.RemoteController" />
      </Parameters>
      <Docs>
        <param name="rctlr">the object to unregister.</param>
        <summary>Unregisters a <c>RemoteController</c>, causing it to no longer receive
            media metadata and playback state information, and no longer be capable
            of controlling playback.</summary>
        <remarks>
          <para>Unregisters a <c>RemoteController</c>, causing it to no longer receive
            media metadata and playback state information, and no longer be capable
            of controlling playback.</para>
          <para>This member is deprecated. Use
                        <c>MediaSessionManager#removeOnActiveSessionsChangedListener(android.media.session.MediaSessionManager.OnActiveSessionsChangedListener)</c>
                        instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterRemoteController(android.media.RemoteController)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterRemoteController(android.media.RemoteController)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultStreamType">
      <MemberSignature Language="VB.NET" Value="Public Const UseDefaultStreamType As Integer  = -2147483648" />
      <MemberSignature Language="C++ CLI" Value="public: int UseDefaultStreamType = -2147483648;" />
      <MemberSignature Language="C#" Value="public const int UseDefaultStreamType = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 UseDefaultStreamType = (-2147483648)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.UseDefaultStreamType" />
      <MemberSignature Language="F#" Value="val mutable UseDefaultStreamType : int" Usage="Android.Media.AudioManager.UseDefaultStreamType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("USE_DEFAULT_STREAM_TYPE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("USE_DEFAULT_STREAM_TYPE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary>Suggests using the default stream type.</summary>
        <remarks>
          <para>Suggests using the default stream type. This may not be used in all
            places a stream type is needed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#USE_DEFAULT_STREAM_TYPE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.USE_DEFAULT_STREAM_TYPE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="VibrateSettingChangedAction">
      <MemberSignature Language="VB.NET" Value="Public Const VibrateSettingChangedAction As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ VibrateSettingChangedAction;" />
      <MemberSignature Language="C#" Value="public const string VibrateSettingChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string VibrateSettingChangedAction" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.VibrateSettingChangedAction" />
      <MemberSignature Language="F#" Value="val mutable VibrateSettingChangedAction : string" Usage="Android.Media.AudioManager.VibrateSettingChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("VIBRATE_SETTING_CHANGED_ACTION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("VIBRATE_SETTING_CHANGED_ACTION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action indicating that the vibrate setting has
            changed.</summary>
        <remarks>
          <para>Broadcast intent action indicating that the vibrate setting has
            changed. Includes the vibrate type and its new setting.</para>
          <para>This member is deprecated. Applications should maintain their own vibrate policy based on
            current ringer mode and listen to <c>#RINGER_MODE_CHANGED_ACTION</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#VIBRATE_SETTING_CHANGED_ACTION" title="Reference documentation">Java documentation for <code>android.media.AudioManager.VIBRATE_SETTING_CHANGED_ACTION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.ExtraVibrateType" />
        <altmember cref="F:Android.Media.AudioManager.ExtraVibrateSetting" />
      </Docs>
    </Member>
    <Member MemberName="WiredHeadsetOn">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property WiredHeadsetOn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool WiredHeadsetOn { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool WiredHeadsetOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WiredHeadsetOn" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.WiredHeadsetOn" />
      <MemberSignature Language="F#" Value="member this.WiredHeadsetOn : bool with get, set" Usage="Android.Media.AudioManager.WiredHeadsetOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isWiredHeadsetOn", "()Z", "GetIsWiredHeadsetOnHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isWiredHeadsetOn", "()Z", "GetIsWiredHeadsetOnHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setWiredHeadsetOn", "(Z)V", "GetSetWiredHeadsetOn_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setWiredHeadsetOn", "(Z)V", "GetSetWiredHeadsetOn_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">set &lt;var&gt;true&lt;/var&gt; to route audio to/from wired
                      headset; &lt;var&gt;false&lt;/var&gt; disable wired headset audio</param>
        <summary>Checks whether a wired headset is connected or not. -or- Sets audio routing to the wired headset on or off.</summary>
        <value>true if a wired headset is connected.
                    false if otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Checks whether a wired headset is connected or not.</para>
          <para>This is not a valid indication that audio playback is
            actually over the wired headset as audio routing depends on other conditions.</para>
          <para>This member is deprecated. Use <c>AudioManager#getDevices(int)</c> instead to list available audio devices.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isWiredHeadsetOn()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isWiredHeadsetOn()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets audio routing to the wired headset on or off.</para>
          <para>This member is deprecated. Do not use.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setWiredHeadsetOn(boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setWiredHeadsetOn(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
  </Members>
</Type>
