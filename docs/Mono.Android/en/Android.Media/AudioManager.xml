<Type Name="AudioManager" FullName="Android.Media.AudioManager">
  <TypeSignature Language="F#" Value="type AudioManager = class&#xA;    inherit Object" />
  <TypeSignature Language="C#" Value="public class AudioManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AudioManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.AudioManager" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/AudioManager", DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>AudioManager provides access to volume and ringer mode control.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/AudioManager" title="Reference documentation">Java documentation for <code>android.media.AudioManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Media.AudioManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.AudioManager" Usage="new Android.Media.AudioManager (javaReference, transfer)" />
      <MemberSignature Language="C#" Value="protected AudioManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AbandonAudioFocus">
      <MemberSignature Language="F#" Value="abstract member AbandonAudioFocus : Android.Media.AudioManager.IOnAudioFocusChangeListener -&gt; Android.Media.AudioFocusRequest&#xA;override this.AbandonAudioFocus : Android.Media.AudioManager.IOnAudioFocusChangeListener -&gt; Android.Media.AudioFocusRequest" Usage="audioManager.AbandonAudioFocus l" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFocusRequest AbandonAudioFocus (Android.Media.AudioManager.IOnAudioFocusChangeListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.AudioFocusRequest AbandonAudioFocus(class Android.Media.AudioManager/IOnAudioFocusChangeListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AbandonAudioFocus(Android.Media.AudioManager.IOnAudioFocusChangeListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("abandonAudioFocus", "(Landroid/media/AudioManager$OnAudioFocusChangeListener;)I", "GetAbandonAudioFocus_Landroid_media_AudioManager_OnAudioFocusChangeListener_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Media.AudioManager+IOnAudioFocusChangeListener" />
      </Parameters>
      <Docs>
        <param name="l">the listener with which focus was requested.</param>
        <summary>Abandon audio focus.</summary>
        <returns>
          <c>#AUDIOFOCUS_REQUEST_FAILED</c> or <c>#AUDIOFOCUS_REQUEST_GRANTED</c></returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#abandonAudioFocus(android.media.OnAudioFocusChangeListener)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.abandonAudioFocus(android.media.OnAudioFocusChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AbandonAudioFocusRequest">
      <MemberSignature Language="F#" Value="abstract member AbandonAudioFocusRequest : Android.Media.AudioFocusRequestClass -&gt; Android.Media.AudioFocusRequest&#xA;override this.AbandonAudioFocusRequest : Android.Media.AudioFocusRequestClass -&gt; Android.Media.AudioFocusRequest" Usage="audioManager.AbandonAudioFocusRequest focusRequest" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFocusRequest AbandonAudioFocusRequest (Android.Media.AudioFocusRequestClass focusRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.AudioFocusRequest AbandonAudioFocusRequest(class Android.Media.AudioFocusRequestClass focusRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AbandonAudioFocusRequest(Android.Media.AudioFocusRequestClass)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("abandonAudioFocusRequest", "(Landroid/media/AudioFocusRequest;)I", "GetAbandonAudioFocusRequest_Landroid_media_AudioFocusRequest_Handler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusRequest" Type="Android.Media.AudioFocusRequestClass" />
      </Parameters>
      <Docs>
        <param name="focusRequest">the <c>AudioFocusRequest</c> that was used when requesting focus
                 with <c>#requestAudioFocus(AudioFocusRequest)</c>.</param>
        <summary>Abandon audio focus.</summary>
        <returns>
          <c>#AUDIOFOCUS_REQUEST_FAILED</c> or <c>#AUDIOFOCUS_REQUEST_GRANTED</c></returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#abandonAudioFocusRequest(android.media.AudioFocusRequest)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.abandonAudioFocusRequest(android.media.AudioFocusRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionAudioBecomingNoisy">
      <MemberSignature Language="F#" Value="val mutable ActionAudioBecomingNoisy : string" Usage="Android.Media.AudioManager.ActionAudioBecomingNoisy" />
      <MemberSignature Language="C#" Value="public const string ActionAudioBecomingNoisy;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionAudioBecomingNoisy" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionAudioBecomingNoisy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_AUDIO_BECOMING_NOISY")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent, a hint for applications that audio is about to become
            'noisy' due to a change in audio outputs.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_AUDIO_BECOMING_NOISY" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_AUDIO_BECOMING_NOISY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ActionHdmiAudioPlug">
      <MemberSignature Language="F#" Value="val mutable ActionHdmiAudioPlug : string" Usage="Android.Media.AudioManager.ActionHdmiAudioPlug" />
      <MemberSignature Language="C#" Value="public const string ActionHdmiAudioPlug;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionHdmiAudioPlug" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionHdmiAudioPlug" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_HDMI_AUDIO_PLUG")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: A sticky broadcast indicating an HDMI cable was plugged or unplugged.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_HDMI_AUDIO_PLUG" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_HDMI_AUDIO_PLUG</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionHeadsetPlug">
      <MemberSignature Language="F#" Value="val mutable ActionHeadsetPlug : string" Usage="Android.Media.AudioManager.ActionHeadsetPlug" />
      <MemberSignature Language="C#" Value="public const string ActionHeadsetPlug;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionHeadsetPlug" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionHeadsetPlug" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_HEADSET_PLUG")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: Wired Headset plugged in or unplugged.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_HEADSET_PLUG" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_HEADSET_PLUG</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionMicrophoneMuteChanged">
      <MemberSignature Language="C#" Value="public const string ActionMicrophoneMuteChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionMicrophoneMuteChanged" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionMicrophoneMuteChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_MICROPHONE_MUTE_CHANGED", ApiSince=28)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: microphone muting state changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_MICROPHONE_MUTE_CHANGED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_MICROPHONE_MUTE_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionScoAudioStateChanged">
      <MemberSignature Language="F#" Value="val mutable ActionScoAudioStateChanged : string" Usage="Android.Media.AudioManager.ActionScoAudioStateChanged" />
      <MemberSignature Language="C#" Value="public const string ActionScoAudioStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionScoAudioStateChanged" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionScoAudioStateChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_SCO_AUDIO_STATE_CHANGED")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sticky broadcast intent action indicating that the Bluetooth SCO audio
            connection state has changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_SCO_AUDIO_STATE_CHANGED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_SCO_AUDIO_STATE_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.StartBluetoothSco" />
      </Docs>
    </Member>
    <Member MemberName="ActionScoAudioStateUpdated">
      <MemberSignature Language="F#" Value="val mutable ActionScoAudioStateUpdated : string" Usage="Android.Media.AudioManager.ActionScoAudioStateUpdated" />
      <MemberSignature Language="C#" Value="public const string ActionScoAudioStateUpdated;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionScoAudioStateUpdated" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionScoAudioStateUpdated" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_SCO_AUDIO_STATE_UPDATED")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sticky broadcast intent action indicating that the Bluetooth SCO audio
            connection state has been updated.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_SCO_AUDIO_STATE_UPDATED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_SCO_AUDIO_STATE_UPDATED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.AudioManager.StartBluetoothSco" />
      </Docs>
    </Member>
    <Member MemberName="ActionSpeakerphoneStateChanged">
      <MemberSignature Language="C#" Value="public const string ActionSpeakerphoneStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionSpeakerphoneStateChanged" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ActionSpeakerphoneStateChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_SPEAKERPHONE_STATE_CHANGED", ApiSince=29)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: speakerphone state changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ACTION_SPEAKERPHONE_STATE_CHANGED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ACTION_SPEAKERPHONE_STATE_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActivePlaybackConfigurations">
      <MemberSignature Language="F#" Value="member this.ActivePlaybackConfigurations : System.Collections.Generic.IList&lt;Android.Media.AudioPlaybackConfiguration&gt;" Usage="Android.Media.AudioManager.ActivePlaybackConfigurations" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.AudioPlaybackConfiguration&gt; ActivePlaybackConfigurations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.AudioPlaybackConfiguration&gt; ActivePlaybackConfigurations" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.ActivePlaybackConfigurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getActivePlaybackConfigurations", "()Ljava/util/List;", "GetGetActivePlaybackConfigurationsHandler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.AudioPlaybackConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current active audio playback configurations of the device</summary>
        <value>a non-null list of playback configurations. An empty list indicates there is no
                playback active when queried.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getActivePlaybackConfigurations()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getActivePlaybackConfigurations()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveRecordingConfigurations">
      <MemberSignature Language="F#" Value="member this.ActiveRecordingConfigurations : System.Collections.Generic.IList&lt;Android.Media.AudioRecordingConfiguration&gt;" Usage="Android.Media.AudioManager.ActiveRecordingConfigurations" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.AudioRecordingConfiguration&gt; ActiveRecordingConfigurations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.AudioRecordingConfiguration&gt; ActiveRecordingConfigurations" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.ActiveRecordingConfigurations" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getActiveRecordingConfigurations", "()Ljava/util/List;", "GetGetActiveRecordingConfigurationsHandler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.AudioRecordingConfiguration&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current active audio recording configurations of the device.</summary>
        <value>a non-null list of recording configurations. An empty list indicates there is
                no recording active when queried.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getActiveRecordingConfigurations()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getActiveRecordingConfigurations()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnCommunicationDeviceChangedListener">
      <MemberSignature Language="C#" Value="public virtual void AddOnCommunicationDeviceChangedListener (Java.Util.Concurrent.IExecutor executor, Android.Media.AudioManager.IOnCommunicationDeviceChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnCommunicationDeviceChangedListener(class Java.Util.Concurrent.IExecutor executor, class Android.Media.AudioManager/IOnCommunicationDeviceChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AddOnCommunicationDeviceChangedListener(Java.Util.Concurrent.IExecutor,Android.Media.AudioManager.IOnCommunicationDeviceChangedListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnCommunicationDeviceChangedListener", "(Ljava/util/concurrent/Executor;Landroid/media/AudioManager$OnCommunicationDeviceChangedListener;)V", "GetAddOnCommunicationDeviceChangedListener_Ljava_util_concurrent_Executor_Landroid_media_AudioManager_OnCommunicationDeviceChangedListener_Handler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Media.AudioManager+IOnCommunicationDeviceChangedListener" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="listener">To be added.</param>
        <param name="executor&#xA;@param&#xA;@param">listener</param>
        <summary>Adds a listener for being notified of changes to the communication audio device.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#addOnCommunicationDeviceChangedListener(java.util.concurrent.Executor,%20android.media.OnCommunicationDeviceChangedListener)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.addOnCommunicationDeviceChangedListener(java.util.concurrent.Executor, android.media.OnCommunicationDeviceChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnModeChangedListener">
      <MemberSignature Language="C#" Value="public virtual void AddOnModeChangedListener (Java.Util.Concurrent.IExecutor executor, Android.Media.AudioManager.IOnModeChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnModeChangedListener(class Java.Util.Concurrent.IExecutor executor, class Android.Media.AudioManager/IOnModeChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AddOnModeChangedListener(Java.Util.Concurrent.IExecutor,Android.Media.AudioManager.IOnModeChangedListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnModeChangedListener", "(Ljava/util/concurrent/Executor;Landroid/media/AudioManager$OnModeChangedListener;)V", "GetAddOnModeChangedListener_Ljava_util_concurrent_Executor_Landroid_media_AudioManager_OnModeChangedListener_Handler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Media.AudioManager+IOnModeChangedListener" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="listener">To be added.</param>
        <param name="executor&#xA;@param&#xA;@param">listener</param>
        <summary>Adds a listener to be notified of changes to the audio mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#addOnModeChangedListener(java.util.concurrent.Executor,%20android.media.OnModeChangedListener)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.addOnModeChangedListener(java.util.concurrent.Executor, android.media.OnModeChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdjustStreamVolume">
      <MemberSignature Language="F#" Value="abstract member AdjustStreamVolume : Android.Media.Stream * Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit&#xA;override this.AdjustStreamVolume : Android.Media.Stream * Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit" Usage="audioManager.AdjustStreamVolume (streamType, direction, flags)" />
      <MemberSignature Language="C#" Value="public virtual void AdjustStreamVolume (Android.Media.Stream streamType, Android.Media.Adjust direction, Android.Media.VolumeNotificationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdjustStreamVolume(valuetype Android.Media.Stream streamType, valuetype Android.Media.Adjust direction, valuetype Android.Media.VolumeNotificationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AdjustStreamVolume(Android.Media.Stream,Android.Media.Adjust,Android.Media.VolumeNotificationFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("adjustStreamVolume", "(III)V", "GetAdjustStreamVolume_IIIHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="direction" Type="Android.Media.Adjust">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Media.VolumeNotificationFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream type to adjust. One of <c>#STREAM_VOICE_CALL</c>,
            <c>#STREAM_SYSTEM</c>, <c>#STREAM_RING</c>, <c>#STREAM_MUSIC</c>,
            <c>#STREAM_ALARM</c> or <c>#STREAM_ACCESSIBILITY</c>.</param>
        <param name="direction">The direction to adjust the volume. One of
                       <c>#ADJUST_LOWER</c>, <c>#ADJUST_RAISE</c>, or
                       <c>#ADJUST_SAME</c>.</param>
        <param name="flags">One or more flags.</param>
        <summary>Adjusts the volume of a particular stream by one step in a direction.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#adjustStreamVolume(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.adjustStreamVolume(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.AdjustVolume(Android.Media.Adjust, Android.Media.VolumeNotificationFlags)" />
        <altmember cref="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="AdjustSuggestedStreamVolume">
      <MemberSignature Language="F#" Value="abstract member AdjustSuggestedStreamVolume : Android.Media.Adjust * Android.Media.Stream * Android.Media.VolumeNotificationFlags -&gt; unit&#xA;override this.AdjustSuggestedStreamVolume : Android.Media.Adjust * Android.Media.Stream * Android.Media.VolumeNotificationFlags -&gt; unit" Usage="audioManager.AdjustSuggestedStreamVolume (direction, suggestedStreamType, flags)" />
      <MemberSignature Language="C#" Value="public virtual void AdjustSuggestedStreamVolume (Android.Media.Adjust direction, Android.Media.Stream suggestedStreamType, Android.Media.VolumeNotificationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdjustSuggestedStreamVolume(valuetype Android.Media.Adjust direction, valuetype Android.Media.Stream suggestedStreamType, valuetype Android.Media.VolumeNotificationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AdjustSuggestedStreamVolume(Android.Media.Adjust,Android.Media.Stream,Android.Media.VolumeNotificationFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("adjustSuggestedStreamVolume", "(III)V", "GetAdjustSuggestedStreamVolume_IIIHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Media.Adjust">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="suggestedStreamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Media.VolumeNotificationFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">The direction to adjust the volume. One of
                       <c>#ADJUST_LOWER</c>, <c>#ADJUST_RAISE</c>,
                       <c>#ADJUST_SAME</c>, <c>#ADJUST_MUTE</c>,
                       <c>#ADJUST_UNMUTE</c>, or <c>#ADJUST_TOGGLE_MUTE</c>.</param>
        <param name="suggestedStreamType">The stream type that will be used if there
                       isn't a relevant stream. <c>#USE_DEFAULT_STREAM_TYPE</c> is
                       valid here.</param>
        <param name="flags">One or more flags.</param>
        <summary>Adjusts the volume of the most relevant stream, or the given fallback
            stream.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#adjustSuggestedStreamVolume(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.adjustSuggestedStreamVolume(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.AdjustVolume(Android.Media.Adjust, Android.Media.VolumeNotificationFlags)" />
        <altmember cref="M:Android.Media.AudioManager.AdjustStreamVolume(Android.Media.Stream, Android.Media.Adjust, Android.Media.Adjust)" />
        <altmember cref="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="AdjustVolume">
      <MemberSignature Language="F#" Value="abstract member AdjustVolume : Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit&#xA;override this.AdjustVolume : Android.Media.Adjust * Android.Media.VolumeNotificationFlags -&gt; unit" Usage="audioManager.AdjustVolume (direction, flags)" />
      <MemberSignature Language="C#" Value="public virtual void AdjustVolume (Android.Media.Adjust direction, Android.Media.VolumeNotificationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AdjustVolume(valuetype Android.Media.Adjust direction, valuetype Android.Media.VolumeNotificationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.AdjustVolume(Android.Media.Adjust,Android.Media.VolumeNotificationFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("adjustVolume", "(II)V", "GetAdjustVolume_IIHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Media.Adjust">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Media.VolumeNotificationFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">The direction to adjust the volume. One of
                       <c>#ADJUST_LOWER</c>, <c>#ADJUST_RAISE</c>,
                       <c>#ADJUST_SAME</c>, <c>#ADJUST_MUTE</c>,
                       <c>#ADJUST_UNMUTE</c>, or <c>#ADJUST_TOGGLE_MUTE</c>.</param>
        <param name="flags">One or more flags.</param>
        <summary>Adjusts the volume of the most relevant stream.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#adjustVolume(int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.adjustVolume(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.AdjustSuggestedStreamVolume(Android.Media.Adjust, Android.Media.Stream, Android.Media.Stream)" />
        <altmember cref="M:Android.Media.AudioManager.AdjustStreamVolume(Android.Media.Stream, Android.Media.Adjust, Android.Media.Adjust)" />
        <altmember cref="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream, System.Int32, System.Int32)" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="AllowedCapturePolicy">
      <MemberSignature Language="C#" Value="public virtual Android.Media.CapturePolicies AllowedCapturePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.CapturePolicies AllowedCapturePolicy" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.AllowedCapturePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAllowedCapturePolicy", "()I", "GetGetAllowedCapturePolicyHandler", ApiSince=29)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setAllowedCapturePolicy", "(I)V", "GetSetAllowedCapturePolicy_IHandler", ApiSince=29)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.CapturePolicies</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="capturePolicy">one of
                <c>AudioAttributes#ALLOW_CAPTURE_BY_ALL</c>,
                <c>AudioAttributes#ALLOW_CAPTURE_BY_SYSTEM</c>,
                <c>AudioAttributes#ALLOW_CAPTURE_BY_NONE</c>.</param>
        <summary>Return the capture policy. -or- Specifies whether the audio played by this app may or may not be captured by other apps or
            the system.</summary>
        <value>the capture policy set by <c>#setAllowedCapturePolicy(int)</c> or
                    the default if it was not called.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getAllowedCapturePolicy()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getAllowedCapturePolicy()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setAllowedCapturePolicy(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setAllowedCapturePolicy(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <c>AudioAttributes#ALLOW_CAPTURE_BY_ALL</c>
        <c>AudioAttributes#ALLOW_CAPTURE_BY_SYSTEM</c>
        <c>AudioAttributes#ALLOW_CAPTURE_BY_NONE</c>
      </Docs>
    </Member>
    <Member MemberName="AudiofocusGain">
      <MemberSignature Language="F#" Value="val mutable AudiofocusGain : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusGain" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusGain = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusGain = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusGain" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_GAIN")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Used to indicate a gain of audio focus, or a request of audio focus, of unknown duration.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_GAIN" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_GAIN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.RequestAudioFocus(.IOnAudioFocusChangeListener, Android.Media.Stream, Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusGainTransient">
      <MemberSignature Language="F#" Value="val mutable AudiofocusGainTransient : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusGainTransient" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusGainTransient = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusGainTransient = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusGainTransient" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_GAIN_TRANSIENT")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Used to indicate a temporary gain or request of audio focus, anticipated to last a short
            amount of time.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_GAIN_TRANSIENT" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_GAIN_TRANSIENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.RequestAudioFocus(.IOnAudioFocusChangeListener, Android.Media.Stream, Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusGainTransientExclusive">
      <MemberSignature Language="F#" Value="val mutable AudiofocusGainTransientExclusive : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusGainTransientExclusive" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusGainTransientExclusive = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusGainTransientExclusive = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusGainTransientExclusive" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Used to indicate a temporary request of audio focus, anticipated to last a short
            amount of time, during which no other applications, or system components, should play
            anything.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Media.AudioManager.RequestAudioFocus(.IOnAudioFocusChangeListener, Android.Media.Stream, Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusGainTransientMayDuck">
      <MemberSignature Language="F#" Value="val mutable AudiofocusGainTransientMayDuck : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusGainTransientMayDuck" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusGainTransientMayDuck = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusGainTransientMayDuck = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusGainTransientMayDuck" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Used to indicate a temporary request of audio focus, anticipated to last a short
            amount of time, and where it is acceptable for other audio applications to keep playing
            after having lowered their output level (also referred to as "ducking").</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.RequestAudioFocus(.IOnAudioFocusChangeListener, Android.Media.Stream, Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusLoss">
      <MemberSignature Language="F#" Value="val mutable AudiofocusLoss : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusLoss" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusLoss = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusLoss = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusLoss" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_LOSS")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Used to indicate a loss of audio focus of unknown duration.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_LOSS" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_LOSS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusLossTransient">
      <MemberSignature Language="F#" Value="val mutable AudiofocusLossTransient : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusLossTransient" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusLossTransient = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusLossTransient = (-2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusLossTransient" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_LOSS_TRANSIENT")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>Used to indicate a transient loss of audio focus.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_LOSS_TRANSIENT" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusLossTransientCanDuck">
      <MemberSignature Language="F#" Value="val mutable AudiofocusLossTransientCanDuck : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusLossTransientCanDuck" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusLossTransientCanDuck = -3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusLossTransientCanDuck = (-3)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusLossTransientCanDuck" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>-3</MemberValue>
      <Docs>
        <summary>Used to indicate a transient loss of audio focus where the loser of the audio focus can
            lower its output volume if it wants to continue playing (also referred to as "ducking"), as
            the new focus owner doesn't require others to be silent.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusNone">
      <MemberSignature Language="F#" Value="val mutable AudiofocusNone : Android.Media.AudioFocus" Usage="Android.Media.AudioManager.AudiofocusNone" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocus AudiofocusNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocus AudiofocusNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusNone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_NONE", ApiSince=26)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocus enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocus</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Used to indicate no audio focus has been gained or lost, or requested.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_NONE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_NONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudiofocusRequestDelayed">
      <MemberSignature Language="F#" Value="val mutable AudiofocusRequestDelayed : Android.Media.AudioFocusRequest" Usage="Android.Media.AudioManager.AudiofocusRequestDelayed" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocusRequest AudiofocusRequestDelayed = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocusRequest AudiofocusRequestDelayed = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusRequestDelayed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_REQUEST_DELAYED", ApiSince=26)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocusRequest enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>A focus change request whose granting is delayed: the request was successful, but the
            requester will only be granted audio focus once the condition that prevented immediate
            granting has ended.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_REQUEST_DELAYED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_REQUEST_DELAYED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudiofocusRequestFailed">
      <MemberSignature Language="F#" Value="val mutable AudiofocusRequestFailed : Android.Media.AudioFocusRequest" Usage="Android.Media.AudioManager.AudiofocusRequestFailed" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocusRequest AudiofocusRequestFailed = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocusRequest AudiofocusRequestFailed = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusRequestFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_REQUEST_FAILED")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocusRequest enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>A failed focus change request.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_REQUEST_FAILED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_REQUEST_FAILED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudiofocusRequestGranted">
      <MemberSignature Language="F#" Value="val mutable AudiofocusRequestGranted : Android.Media.AudioFocusRequest" Usage="Android.Media.AudioManager.AudiofocusRequestGranted" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioFocusRequest AudiofocusRequestGranted = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioFocusRequest AudiofocusRequestGranted = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudiofocusRequestGranted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIOFOCUS_REQUEST_GRANTED")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioFocusRequest enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>A successful focus change request.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIOFOCUS_REQUEST_GRANTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIOFOCUS_REQUEST_GRANTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AudioSessionIdGenerate">
      <MemberSignature Language="F#" Value="val mutable AudioSessionIdGenerate : int" Usage="Android.Media.AudioManager.AudioSessionIdGenerate" />
      <MemberSignature Language="C#" Value="public const int AudioSessionIdGenerate = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 AudioSessionIdGenerate = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.AudioSessionIdGenerate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("AUDIO_SESSION_ID_GENERATE")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>A special audio session ID to indicate that the audio session ID isn't known and the
            framework should generate a new value.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#AUDIO_SESSION_ID_GENERATE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.AUDIO_SESSION_ID_GENERATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AvailableCommunicationDevices">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.AudioDeviceInfo&gt; AvailableCommunicationDevices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.AudioDeviceInfo&gt; AvailableCommunicationDevices" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.AvailableCommunicationDevices" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAvailableCommunicationDevices", "()Ljava/util/List;", "GetGetAvailableCommunicationDevicesHandler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.AudioDeviceInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a list of audio devices that can be selected for communication use cases via
            <c>#setCommunicationDevice(AudioDeviceInfo)</c>.</summary>
        <value>a list of <c>AudioDeviceInfo</c> suitable for use with setCommunicationDevice().</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getAvailableCommunicationDevices()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getAvailableCommunicationDevices()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BluetoothA2dpOn">
      <MemberSignature Language="F#" Value="member this.BluetoothA2dpOn : bool with get, set" Usage="Android.Media.AudioManager.BluetoothA2dpOn" />
      <MemberSignature Language="C#" Value="public virtual bool BluetoothA2dpOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BluetoothA2dpOn" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.BluetoothA2dpOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBluetoothA2dpOn", "()Z", "GetIsBluetoothA2dpOnHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBluetoothA2dpOn", "(Z)V", "GetSetBluetoothA2dpOn_ZHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">set &lt;var&gt;true&lt;/var&gt; to route A2DP audio to/from Bluetooth
                      headset; &lt;var&gt;false&lt;/var&gt; disable A2DP audio</param>
        <summary>Checks whether a Bluetooth A2DP audio peripheral is connected or not.</summary>
        <value>true if a Bluetooth A2DP peripheral is connected
                    false if otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isBluetoothA2dpOn()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isBluetoothA2dpOn()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setBluetoothA2dpOn(boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setBluetoothA2dpOn(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="BluetoothScoOn">
      <MemberSignature Language="F#" Value="member this.BluetoothScoOn : bool with get, set" Usage="Android.Media.AudioManager.BluetoothScoOn" />
      <MemberSignature Language="C#" Value="public virtual bool BluetoothScoOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BluetoothScoOn" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.BluetoothScoOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBluetoothScoOn", "()Z", "GetIsBluetoothScoOnHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setBluetoothScoOn", "(Z)V", "GetSetBluetoothScoOn_ZHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">set &lt;var&gt;true&lt;/var&gt; to use bluetooth SCO for communications;
                          &lt;var&gt;false&lt;/var&gt; to not use bluetooth SCO for communications</param>
        <summary>Checks whether communications use Bluetooth SCO. -or- Request use of Bluetooth SCO headset for communications.</summary>
        <value>true if SCO is used for communications;
                    false if otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isBluetoothScoOn()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isBluetoothScoOn()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setBluetoothScoOn(boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setBluetoothScoOn(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearCommunicationDevice">
      <MemberSignature Language="C#" Value="public virtual void ClearCommunicationDevice ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCommunicationDevice() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.ClearCommunicationDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearCommunicationDevice", "()V", "GetClearCommunicationDeviceHandler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cancels previous communication device selection made with
            <c>#setCommunicationDevice(AudioDeviceInfo)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#clearCommunicationDevice()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.clearCommunicationDevice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommunicationDevice">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioDeviceInfo? CommunicationDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioDeviceInfo CommunicationDevice" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.CommunicationDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCommunicationDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetCommunicationDeviceHandler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioDeviceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns currently selected audio device for communication.</summary>
        <value>an <c>AudioDeviceInfo</c> indicating which audio device is
            currently selected for communication use cases. Can be null on platforms
            not supporting <c>android.content.pm.PackageManager#FEATURE_TELEPHONY</c>.
            is used.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getCommunicationDevice()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getCommunicationDevice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DispatchMediaKeyEvent">
      <MemberSignature Language="F#" Value="abstract member DispatchMediaKeyEvent : Android.Views.KeyEvent -&gt; unit&#xA;override this.DispatchMediaKeyEvent : Android.Views.KeyEvent -&gt; unit" Usage="audioManager.DispatchMediaKeyEvent keyEvent" />
      <MemberSignature Language="C#" Value="public virtual void DispatchMediaKeyEvent (Android.Views.KeyEvent? keyEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DispatchMediaKeyEvent(class Android.Views.KeyEvent keyEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.DispatchMediaKeyEvent(Android.Views.KeyEvent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dispatchMediaKeyEvent", "(Landroid/view/KeyEvent;)V", "GetDispatchMediaKeyEvent_Landroid_view_KeyEvent_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyEvent" Type="Android.Views.KeyEvent" />
      </Parameters>
      <Docs>
        <param name="keyEvent">a <c>KeyEvent</c> instance whose key code is one of
                <c>KeyEvent#KEYCODE_MUTE</c>,
                <c>KeyEvent#KEYCODE_HEADSETHOOK</c>,
                <c>KeyEvent#KEYCODE_MEDIA_PLAY</c>,
                <c>KeyEvent#KEYCODE_MEDIA_PAUSE</c>,
                <c>KeyEvent#KEYCODE_MEDIA_PLAY_PAUSE</c>,
                <c>KeyEvent#KEYCODE_MEDIA_STOP</c>,
                <c>KeyEvent#KEYCODE_MEDIA_NEXT</c>,
                <c>KeyEvent#KEYCODE_MEDIA_PREVIOUS</c>,
                <c>KeyEvent#KEYCODE_MEDIA_REWIND</c>,
                <c>KeyEvent#KEYCODE_MEDIA_RECORD</c>,
                <c>KeyEvent#KEYCODE_MEDIA_FAST_FORWARD</c>,
                <c>KeyEvent#KEYCODE_MEDIA_CLOSE</c>,
                <c>KeyEvent#KEYCODE_MEDIA_EJECT</c>,
                or <c>KeyEvent#KEYCODE_MEDIA_AUDIO_TRACK</c>.</param>
        <summary>Sends a simulated key event for a media button.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#dispatchMediaKeyEvent(android.view.KeyEvent)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.dispatchMediaKeyEvent(android.view.KeyEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedSurroundMode">
      <MemberSignature Language="C#" Value="public virtual int EncodedSurroundMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EncodedSurroundMode" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.EncodedSurroundMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEncodedSurroundMode", "()I", "GetGetEncodedSurroundModeHandler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the surround sound mode.</summary>
        <value>true if successful, otherwise false</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getEncodedSurroundMode()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getEncodedSurroundMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedSurroundOutputAlways">
      <MemberSignature Language="C#" Value="public const Android.Media.EncodedSurroundOutput EncodedSurroundOutputAlways = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.EncodedSurroundOutput EncodedSurroundOutputAlways = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.EncodedSurroundOutputAlways" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_ALWAYS", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.EncodedSurroundOutput</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The surround sound formats are ALWAYS available, even if they are not detected by the
            hardware.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ENCODED_SURROUND_OUTPUT_ALWAYS" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ENCODED_SURROUND_OUTPUT_ALWAYS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedSurroundOutputAuto">
      <MemberSignature Language="C#" Value="public const Android.Media.EncodedSurroundOutput EncodedSurroundOutputAuto = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.EncodedSurroundOutput EncodedSurroundOutputAuto = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.EncodedSurroundOutputAuto" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_AUTO", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.EncodedSurroundOutput</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The surround sound formats are available for use if they are detected.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ENCODED_SURROUND_OUTPUT_AUTO" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ENCODED_SURROUND_OUTPUT_AUTO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedSurroundOutputManual">
      <MemberSignature Language="C#" Value="public const Android.Media.EncodedSurroundOutput EncodedSurroundOutputManual = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.EncodedSurroundOutput EncodedSurroundOutputManual = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.EncodedSurroundOutputManual" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_MANUAL", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.EncodedSurroundOutput</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Surround sound formats are available according to the choice of user, even if they are not
            detected by the hardware.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ENCODED_SURROUND_OUTPUT_MANUAL" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ENCODED_SURROUND_OUTPUT_MANUAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedSurroundOutputNever">
      <MemberSignature Language="C#" Value="public const Android.Media.EncodedSurroundOutput EncodedSurroundOutputNever = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.EncodedSurroundOutput EncodedSurroundOutputNever = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.EncodedSurroundOutputNever" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_NEVER", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.EncodedSurroundOutput</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The surround sound formats are NEVER available, even if they are detected by the hardware.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ENCODED_SURROUND_OUTPUT_NEVER" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ENCODED_SURROUND_OUTPUT_NEVER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncodedSurroundOutputUnknown">
      <MemberSignature Language="C#" Value="public const Android.Media.EncodedSurroundOutput EncodedSurroundOutputUnknown = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.EncodedSurroundOutput EncodedSurroundOutputUnknown = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.EncodedSurroundOutputUnknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCODED_SURROUND_OUTPUT_UNKNOWN", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.EncodedSurroundOutput enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.EncodedSurroundOutput</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>The mode for surround sound formats is unknown.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ENCODED_SURROUND_OUTPUT_UNKNOWN" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ENCODED_SURROUND_OUTPUT_UNKNOWN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="F#" Value="val mutable Error : int" Usage="Android.Media.AudioManager.Error" />
      <MemberSignature Language="C#" Value="public const int Error = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 Error = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.Error" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ERROR")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>A default error code.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ERROR" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ERROR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorDeadObject">
      <MemberSignature Language="F#" Value="val mutable ErrorDeadObject : int" Usage="Android.Media.AudioManager.ErrorDeadObject" />
      <MemberSignature Language="C#" Value="public const int ErrorDeadObject = -6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ErrorDeadObject = (-6)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ErrorDeadObject" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ERROR_DEAD_OBJECT")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-6</MemberValue>
      <Docs>
        <summary>An error code indicating that the object reporting it is no longer valid and needs to
            be recreated.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#ERROR_DEAD_OBJECT" title="Reference documentation">Java documentation for <code>android.media.AudioManager.ERROR_DEAD_OBJECT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraAudioPlugState">
      <MemberSignature Language="F#" Value="val mutable ExtraAudioPlugState : string" Usage="Android.Media.AudioManager.ExtraAudioPlugState" />
      <MemberSignature Language="C#" Value="public const string ExtraAudioPlugState;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraAudioPlugState" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraAudioPlugState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_AUDIO_PLUG_STATE")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra used in <c>#ACTION_HDMI_AUDIO_PLUG</c> to communicate whether HDMI is plugged in
            or unplugged.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_AUDIO_PLUG_STATE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_AUDIO_PLUG_STATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraEncodings">
      <MemberSignature Language="F#" Value="val mutable ExtraEncodings : string" Usage="Android.Media.AudioManager.ExtraEncodings" />
      <MemberSignature Language="C#" Value="public const string ExtraEncodings;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraEncodings" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraEncodings" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_ENCODINGS")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra used in <c>#ACTION_HDMI_AUDIO_PLUG</c> to define the audio encodings supported by
            the connected HDMI device.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_ENCODINGS" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_ENCODINGS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraMaxChannelCount">
      <MemberSignature Language="F#" Value="val mutable ExtraMaxChannelCount : string" Usage="Android.Media.AudioManager.ExtraMaxChannelCount" />
      <MemberSignature Language="C#" Value="public const string ExtraMaxChannelCount;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraMaxChannelCount" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraMaxChannelCount" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_MAX_CHANNEL_COUNT")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra used in <c>#ACTION_HDMI_AUDIO_PLUG</c> to define the maximum number of channels
            supported by the HDMI device.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_MAX_CHANNEL_COUNT" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_MAX_CHANNEL_COUNT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraRingerMode">
      <MemberSignature Language="F#" Value="val mutable ExtraRingerMode : string" Usage="Android.Media.AudioManager.ExtraRingerMode" />
      <MemberSignature Language="C#" Value="public const string ExtraRingerMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraRingerMode" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraRingerMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_RINGER_MODE")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The new ringer mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_RINGER_MODE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_RINGER_MODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.RingerModeChangedAction" />
      </Docs>
    </Member>
    <Member MemberName="ExtraScoAudioPreviousState">
      <MemberSignature Language="F#" Value="val mutable ExtraScoAudioPreviousState : string" Usage="Android.Media.AudioManager.ExtraScoAudioPreviousState" />
      <MemberSignature Language="C#" Value="public const string ExtraScoAudioPreviousState;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraScoAudioPreviousState" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraScoAudioPreviousState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_SCO_AUDIO_PREVIOUS_STATE")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra for intent <c>#ACTION_SCO_AUDIO_STATE_UPDATED</c> containing the previous
            bluetooth SCO connection state.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_SCO_AUDIO_PREVIOUS_STATE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_SCO_AUDIO_PREVIOUS_STATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ExtraScoAudioState">
      <MemberSignature Language="F#" Value="val mutable ExtraScoAudioState : string" Usage="Android.Media.AudioManager.ExtraScoAudioState" />
      <MemberSignature Language="C#" Value="public const string ExtraScoAudioState;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraScoAudioState" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraScoAudioState" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_SCO_AUDIO_STATE")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Extra for intent <c>#ACTION_SCO_AUDIO_STATE_CHANGED</c> or
            <c>#ACTION_SCO_AUDIO_STATE_UPDATED</c> containing the new bluetooth SCO connection state.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_SCO_AUDIO_STATE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_SCO_AUDIO_STATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ExtraVibrateSetting">
      <MemberSignature Language="F#" Value="val mutable ExtraVibrateSetting : string" Usage="Android.Media.AudioManager.ExtraVibrateSetting" />
      <MemberSignature Language="C#" Value="public const string ExtraVibrateSetting;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraVibrateSetting" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraVibrateSetting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_VIBRATE_SETTING")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The new vibrate setting for a particular type.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_VIBRATE_SETTING" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_VIBRATE_SETTING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.VibrateSettingChangedAction" />
        <altmember cref="F:Android.Media.AudioManager.ExtraVibrateType" />
      </Docs>
    </Member>
    <Member MemberName="ExtraVibrateType">
      <MemberSignature Language="F#" Value="val mutable ExtraVibrateType : string" Usage="Android.Media.AudioManager.ExtraVibrateType" />
      <MemberSignature Language="C#" Value="public const string ExtraVibrateType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraVibrateType" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ExtraVibrateType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_VIBRATE_TYPE")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The vibrate type whose setting has changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#EXTRA_VIBRATE_TYPE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.EXTRA_VIBRATE_TYPE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.VibrateSettingChangedAction" />
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="F#" Value="static member FromContext : Android.Content.Context -&gt; Android.Media.AudioManager" Usage="Android.Media.AudioManager.FromContext context" />
      <MemberSignature Language="C#" Value="public static Android.Media.AudioManager? FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.AudioManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.FromContext(Android.Content.Context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Media.AudioManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FxBack">
      <MemberSignature Language="C#" Value="public const Android.Media.SoundEffect FxBack = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.SoundEffect FxBack = (10)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.FxBack" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FX_BACK", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.SoundEffect enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.SoundEffect</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>Back sound</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#FX_BACK" title="Reference documentation">Java documentation for <code>android.media.AudioManager.FX_BACK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateAudioSessionId">
      <MemberSignature Language="F#" Value="abstract member GenerateAudioSessionId : unit -&gt; int&#xA;override this.GenerateAudioSessionId : unit -&gt; int" Usage="audioManager.GenerateAudioSessionId " />
      <MemberSignature Language="C#" Value="public virtual int GenerateAudioSessionId ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GenerateAudioSessionId() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GenerateAudioSessionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateAudioSessionId", "()I", "GetGenerateAudioSessionIdHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return a new audio session identifier not associated with any player or effect.</summary>
        <returns>a new unclaimed and unused audio session identifier, or <c>#ERROR</c> when the
              system failed to generate a new session, a condition in which audio playback or recording
              will subsequently fail as well.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#generateAudioSessionId()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.generateAudioSessionId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAudioHwSyncForSession">
      <MemberSignature Language="C#" Value="public virtual int GetAudioHwSyncForSession (int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetAudioHwSyncForSession(int32 sessionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetAudioHwSyncForSession(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAudioHwSyncForSession", "(I)I", "GetGetAudioHwSyncForSession_IHandler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sessionId">the audio session ID for which the HW A/V sync ID is retrieved.</param>
        <summary>Retrieves the Hardware A/V synchronization ID corresponding to the given audio session ID.</summary>
        <returns>the HW A/V sync ID for this audio session (an integer different from 0).</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getAudioHwSyncForSession(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getAudioHwSyncForSession(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDevices">
      <MemberSignature Language="F#" Value="abstract member GetDevices : Android.Media.GetDevicesTargets -&gt; Android.Media.AudioDeviceInfo[]&#xA;override this.GetDevices : Android.Media.GetDevicesTargets -&gt; Android.Media.AudioDeviceInfo[]" Usage="audioManager.GetDevices flags" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioDeviceInfo[]? GetDevices (Android.Media.GetDevicesTargets flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.AudioDeviceInfo[] GetDevices(valuetype Android.Media.GetDevicesTargets flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetDevices(Android.Media.GetDevicesTargets)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDevices", "(I)[Landroid/media/AudioDeviceInfo;", "GetGetDevices_IHandler", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioDeviceInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Media.GetDevicesTargets">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">A set of bitflags specifying the criteria to test.</param>
        <summary>Returns an array of <c>AudioDeviceInfo</c> objects corresponding to the audio devices
            currently connected to the system and meeting the criteria specified in the
            &lt;code&gt;flags&lt;/code&gt; parameter.</summary>
        <returns>A (possibly zero-length) array of AudioDeviceInfo objects.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getDevices(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getDevices(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="F#" Value="abstract member GetParameters : string -&gt; string&#xA;override this.GetParameters : string -&gt; string" Usage="audioManager.GetParameters keys" />
      <MemberSignature Language="C#" Value="public virtual string? GetParameters (string? keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetParameters(string keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetParameters(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getParameters", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetParameters_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">list of parameters</param>
        <summary>Gets a variable number of parameter values from audio hardware.</summary>
        <returns>list of parameters key value pairs in the form:
               key1=value1;key2=value2;...</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getParameters(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getParameters(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetPlaybackOffloadSupport">
      <MemberSignature Language="C#" Value="public static int GetPlaybackOffloadSupport (Android.Media.AudioFormat format, Android.Media.AudioAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetPlaybackOffloadSupport(class Android.Media.AudioFormat format, class Android.Media.AudioAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetPlaybackOffloadSupport(Android.Media.AudioFormat,Android.Media.AudioAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPlaybackOffloadSupport", "(Landroid/media/AudioFormat;Landroid/media/AudioAttributes;)I", "", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Media.AudioFormat" />
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
      </Parameters>
      <Docs>
        <param name="format">the audio format (codec, sample rate, channels) being checked.</param>
        <param name="attributes">the <c>AudioAttributes</c> to be used for playback</param>
        <summary>Returns whether offloaded playback of an audio format is supported on the device or not and
            when supported whether gapless transitions are possible or not.</summary>
        <returns>
          <c>#PLAYBACK_OFFLOAD_NOT_SUPPORTED</c> if offload playback if not supported,
                    <c>#PLAYBACK_OFFLOAD_SUPPORTED</c> if offload playback is supported or
                    <c>#PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED</c> if gapless transitions are
                    also supported.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getPlaybackOffloadSupport(android.media.AudioFormat,%20android.media.AudioAttributes)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getPlaybackOffloadSupport(android.media.AudioFormat, android.media.AudioAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; string&#xA;override this.GetProperty : string -&gt; string" Usage="audioManager.GetProperty key" />
      <MemberSignature Language="C#" Value="public virtual string? GetProperty (string? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetProperty(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetProperty(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetProperty_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">One of the strings corresponding to a property key: either
                       <c>#PROPERTY_OUTPUT_SAMPLE_RATE</c>,
                       <c>#PROPERTY_OUTPUT_FRAMES_PER_BUFFER</c>,
                       <c>#PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND</c>,
                       <c>#PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND</c>, or
                       <c>#PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED</c>.</param>
        <summary>Returns the value of the property with the specified key.</summary>
        <returns>A string representing the associated value for that property key,
                    or null if there is no value for that key.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getProperty(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getProperty(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetRouting">
      <MemberSignature Language="F#" Value="abstract member GetRouting : Android.Media.Mode -&gt; Android.Media.Route&#xA;override this.GetRouting : Android.Media.Mode -&gt; Android.Media.Route" Usage="audioManager.GetRouting mode" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.Route GetRouting (Android.Media.Mode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.Route GetRouting(valuetype Android.Media.Mode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetRouting(Android.Media.Mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRouting", "(I)I", "GetGetRouting_IHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Route</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Media.Mode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">audio mode to get route (e.g., MODE_RINGTONE)</param>
        <summary>Returns the current audio routing bit vector for a specified mode.</summary>
        <returns>an audio route bit vector that can be compared with ROUTE_xxx
            bits</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getRouting(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getRouting(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetStreamMaxVolume">
      <MemberSignature Language="F#" Value="abstract member GetStreamMaxVolume : Android.Media.Stream -&gt; int&#xA;override this.GetStreamMaxVolume : Android.Media.Stream -&gt; int" Usage="audioManager.GetStreamMaxVolume streamType" />
      <MemberSignature Language="C#" Value="public virtual int GetStreamMaxVolume (Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetStreamMaxVolume(valuetype Android.Media.Stream streamType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetStreamMaxVolume(Android.Media.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStreamMaxVolume", "(I)I", "GetGetStreamMaxVolume_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream type whose maximum volume index is returned.</param>
        <summary>Returns the maximum volume index for a particular stream.</summary>
        <returns>The maximum valid volume index for the stream.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getStreamMaxVolume(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getStreamMaxVolume(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.GetStreamVolume(Android.Media.Stream)" />
      </Docs>
    </Member>
    <Member MemberName="GetStreamMinVolume">
      <MemberSignature Language="C#" Value="public virtual int GetStreamMinVolume (Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetStreamMinVolume(valuetype Android.Media.Stream streamType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetStreamMinVolume(Android.Media.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStreamMinVolume", "(I)I", "GetGetStreamMinVolume_IHandler", ApiSince=28)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream type whose minimum volume index is returned. Must be one of
                <c>#STREAM_VOICE_CALL</c>, <c>#STREAM_SYSTEM</c>,
                <c>#STREAM_RING</c>, <c>#STREAM_MUSIC</c>, <c>#STREAM_ALARM</c>,
                <c>#STREAM_NOTIFICATION</c>, <c>#STREAM_DTMF</c> or <c>#STREAM_ACCESSIBILITY</c>.</param>
        <summary>Returns the minimum volume index for a particular stream.</summary>
        <returns>The minimum valid volume index for the stream.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getStreamMinVolume(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getStreamMinVolume(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStreamVolume">
      <MemberSignature Language="F#" Value="abstract member GetStreamVolume : Android.Media.Stream -&gt; int&#xA;override this.GetStreamVolume : Android.Media.Stream -&gt; int" Usage="audioManager.GetStreamVolume streamType" />
      <MemberSignature Language="C#" Value="public virtual int GetStreamVolume (Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetStreamVolume(valuetype Android.Media.Stream streamType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetStreamVolume(Android.Media.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStreamVolume", "(I)I", "GetGetStreamVolume_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream type whose volume index is returned.</param>
        <summary>Returns the current volume index for a particular stream.</summary>
        <returns>The current volume index for the stream.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getStreamVolume(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getStreamVolume(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.GetStreamMaxVolume(Android.Media.Stream)" />
        <altmember cref="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetStreamVolumeDb">
      <MemberSignature Language="C#" Value="public virtual float GetStreamVolumeDb (Android.Media.Stream streamType, int index, int deviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetStreamVolumeDb(valuetype Android.Media.Stream streamType, int32 index, int32 deviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetStreamVolumeDb(Android.Media.Stream,System.Int32,System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStreamVolumeDb", "(III)F", "GetGetStreamVolumeDb_IIIHandler", ApiSince=28)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="deviceType" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "" }, Flag=true, Type="")]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "TypeHdmiEarc", "TypeBuiltinSpeakerSafe", "TypeBleHeadset", "TypeBleSpeaker" }, Flag=true, Type="Android.Media.AudioDeviceInfo")]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">stream type for which the volume is queried.</param>
        <param name="index">the volume index for which the volume is queried. The index value must be
                between the minimum and maximum index values for the given stream type (see
                <c>#getStreamMinVolume(int)</c> and <c>#getStreamMaxVolume(int)</c>).</param>
        <param name="deviceType">the type of audio output device for which volume is queried.</param>
        <summary>Returns the volume in dB (decibel) for the given stream type at the given volume index, on
            the given type of audio output device.</summary>
        <returns>a volume expressed in dB.
                A negative value indicates the audio signal is attenuated. A typical maximum value
                at the maximum volume index is 0 dB (no attenuation nor amplification). Muting is
                reflected by a value of <c>Float#NEGATIVE_INFINITY</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getStreamVolumeDb(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getStreamVolumeDb(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVibrateSetting">
      <MemberSignature Language="F#" Value="abstract member GetVibrateSetting : Android.Media.VibrateType -&gt; Android.Media.VibrateSetting&#xA;override this.GetVibrateSetting : Android.Media.VibrateType -&gt; Android.Media.VibrateSetting" Usage="audioManager.GetVibrateSetting vibrateType" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.VibrateSetting GetVibrateSetting (Android.Media.VibrateType vibrateType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.VibrateSetting GetVibrateSetting(valuetype Android.Media.VibrateType vibrateType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.GetVibrateSetting(Android.Media.VibrateType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getVibrateSetting", "(I)I", "GetGetVibrateSetting_IHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.VibrateSetting</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vibrateType" Type="Android.Media.VibrateType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vibrateType">The type of vibrate. One of
                       <c>#VIBRATE_TYPE_NOTIFICATION</c> or
                       <c>#VIBRATE_TYPE_RINGER</c>.</param>
        <summary>Returns whether the user's vibrate setting for a vibrate type.</summary>
        <returns>The vibrate setting, one of <c>#VIBRATE_SETTING_ON</c>,
                    <c>#VIBRATE_SETTING_OFF</c>, or
                    <c>#VIBRATE_SETTING_ONLY_SILENT</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getVibrateSetting(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getVibrateSetting(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.SetVibrateSetting(Android.Media.VibrateType, Android.Media.VibrateSetting)" />
        <altmember cref="M:Android.Media.AudioManager.ShouldVibrate(Android.Media.VibrateType)" />
      </Docs>
    </Member>
    <Member MemberName="IsBluetoothScoAvailableOffCall">
      <MemberSignature Language="F#" Value="member this.IsBluetoothScoAvailableOffCall : bool" Usage="Android.Media.AudioManager.IsBluetoothScoAvailableOffCall" />
      <MemberSignature Language="C#" Value="public virtual bool IsBluetoothScoAvailableOffCall { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBluetoothScoAvailableOffCall" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsBluetoothScoAvailableOffCall" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBluetoothScoAvailableOffCall", "()Z", "GetIsBluetoothScoAvailableOffCallHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if current platform supports use of SCO for off call use cases.</summary>
        <value>true if bluetooth SCO can be used for audio when not in call
                    false otherwise</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isBluetoothScoAvailableOffCall()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isBluetoothScoAvailableOffCall()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.StartBluetoothSco" />
      </Docs>
    </Member>
    <Member MemberName="IsCallScreeningModeSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsCallScreeningModeSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCallScreeningModeSupported" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsCallScreeningModeSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isCallScreeningModeSupported", "()Z", "GetIsCallScreeningModeSupportedHandler", ApiSince=30)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the platform supports a special call screening and call monitoring mode.</summary>
        <value>true if call screening mode is supported, false otherwise.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isCallScreeningModeSupported()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isCallScreeningModeSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHapticPlaybackSupported">
      <MemberSignature Language="C#" Value="public static bool IsHapticPlaybackSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsHapticPlaybackSupported" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsHapticPlaybackSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isHapticPlaybackSupported", "()Z", "", ApiSince=29)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return if audio haptic coupled playback is supported or not.</summary>
        <value>whether audio haptic playback supported.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isHapticPlaybackSupported()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isHapticPlaybackSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMusicActive">
      <MemberSignature Language="F#" Value="member this.IsMusicActive : bool" Usage="Android.Media.AudioManager.IsMusicActive" />
      <MemberSignature Language="C#" Value="public virtual bool IsMusicActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMusicActive" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsMusicActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMusicActive", "()Z", "GetIsMusicActiveHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether any music is active.</summary>
        <value>true if any music tracks are active.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isMusicActive()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isMusicActive()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsOffloadedPlaybackSupported">
      <MemberSignature Language="C#" Value="public static bool IsOffloadedPlaybackSupported (Android.Media.AudioFormat format, Android.Media.AudioAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsOffloadedPlaybackSupported(class Android.Media.AudioFormat format, class Android.Media.AudioAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.IsOffloadedPlaybackSupported(Android.Media.AudioFormat,Android.Media.AudioAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isOffloadedPlaybackSupported", "(Landroid/media/AudioFormat;Landroid/media/AudioAttributes;)Z", "", ApiSince=29)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Media.AudioFormat" />
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
      </Parameters>
      <Docs>
        <param name="format">the audio format (codec, sample rate, channels) being checked.</param>
        <param name="attributes">the <c>AudioAttributes</c> to be used for playback</param>
        <summary>Returns whether offloaded playback of an audio format is supported on the device.</summary>
        <returns>true if the given audio format can be offloaded.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isOffloadedPlaybackSupported(android.media.AudioFormat,%20android.media.AudioAttributes)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isOffloadedPlaybackSupported(android.media.AudioFormat, android.media.AudioAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStreamMute">
      <MemberSignature Language="F#" Value="abstract member IsStreamMute : Android.Media.Stream -&gt; bool&#xA;override this.IsStreamMute : Android.Media.Stream -&gt; bool" Usage="audioManager.IsStreamMute streamType" />
      <MemberSignature Language="C#" Value="public virtual bool IsStreamMute (Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsStreamMute(valuetype Android.Media.Stream streamType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.IsStreamMute(Android.Media.Stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isStreamMute", "(I)Z", "GetIsStreamMute_IHandler", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream to get mute state for.</param>
        <summary>Returns the current mute state for a particular stream.</summary>
        <returns>The mute state for the given stream.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isStreamMute(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isStreamMute(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSurroundFormatEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsSurroundFormatEnabled (int audioFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSurroundFormatEnabled(int32 audioFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.IsSurroundFormatEnabled(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSurroundFormatEnabled", "(I)Z", "GetIsSurroundFormatEnabled_IHandler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFormat" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "", "", "", "" }, Flag=true, Type="")]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "EncodingMpeghBlL3", "EncodingMpeghBlL4", "EncodingMpeghLcL3", "EncodingMpeghLcL4", "EncodingDtsUhd", "EncodingDra" }, Flag=true, Type="Android.Media.AudioFormat")]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioFormat">a surround format</param>
        <summary>Gets whether a certain surround format is enabled or not.</summary>
        <returns>whether the required surround format is enabled</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isSurroundFormatEnabled(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isSurroundFormatEnabled(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVolumeFixed">
      <MemberSignature Language="F#" Value="member this.IsVolumeFixed : bool" Usage="Android.Media.AudioManager.IsVolumeFixed" />
      <MemberSignature Language="C#" Value="public virtual bool IsVolumeFixed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVolumeFixed" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.IsVolumeFixed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isVolumeFixed", "()Z", "GetIsVolumeFixedHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates if the device implements a fixed volume policy.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isVolumeFixed()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isVolumeFixed()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.AudioManager.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadSoundEffects">
      <MemberSignature Language="F#" Value="abstract member LoadSoundEffects : unit -&gt; unit&#xA;override this.LoadSoundEffects : unit -&gt; unit" Usage="audioManager.LoadSoundEffects " />
      <MemberSignature Language="C#" Value="public virtual void LoadSoundEffects ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadSoundEffects() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.LoadSoundEffects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("loadSoundEffects", "()V", "GetLoadSoundEffectsHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Load Sound effects.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#loadSoundEffects()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.loadSoundEffects()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LoadSoundEffectsAsync">
      <MemberSignature Language="F#" Value="member this.LoadSoundEffectsAsync : unit -&gt; System.Threading.Tasks.Task" Usage="audioManager.LoadSoundEffectsAsync " />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadSoundEffectsAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadSoundEffectsAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.LoadSoundEffectsAsync" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MicrophoneMute">
      <MemberSignature Language="F#" Value="member this.MicrophoneMute : bool with get, set" Usage="Android.Media.AudioManager.MicrophoneMute" />
      <MemberSignature Language="C#" Value="public virtual bool MicrophoneMute { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MicrophoneMute" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.MicrophoneMute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMicrophoneMute", "()Z", "GetIsMicrophoneMuteHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMicrophoneMute", "(Z)V", "GetSetMicrophoneMute_ZHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">set &lt;var&gt;true&lt;/var&gt; to mute the microphone;
                      &lt;var&gt;false&lt;/var&gt; to turn mute off</param>
        <summary>Checks whether the microphone mute is on or off. -or- Sets the microphone mute on or off.</summary>
        <value>true if microphone is muted, false if it's not</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isMicrophoneMute()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isMicrophoneMute()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setMicrophoneMute(boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setMicrophoneMute(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Microphones">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.MicrophoneInfo&gt;? Microphones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.MicrophoneInfo&gt; Microphones" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.Microphones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMicrophones", "()Ljava/util/List;", "GetGetMicrophonesHandler", ApiSince=28)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.MicrophoneInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a list of <c>MicrophoneInfo</c> that corresponds to the characteristics
            of all available microphones.</summary>
        <value>a list that contains all microphones' characteristics</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getMicrophones()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getMicrophones()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="F#" Value="member this.Mode : Android.Media.Mode with get, set" Usage="Android.Media.AudioManager.Mode" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.Mode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Mode Mode" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMode", "()I", "GetGetModeHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMode", "(I)V", "GetSetMode_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Mode</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="mode">the requested audio mode.
                         Informs the HAL about the current audio state so that
                         it can route the audio appropriately.</param>
        <summary>Returns the current audio mode. -or- Sets the audio mode.</summary>
        <value>the current audio mode.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getMode()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getMode()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setMode(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ModeCallScreening">
      <MemberSignature Language="C#" Value="public const Android.Media.Mode ModeCallScreening = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Mode ModeCallScreening = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ModeCallScreening" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MODE_CALL_SCREENING", ApiSince=30)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.Mode enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Mode</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Call screening in progress.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#MODE_CALL_SCREENING" title="Reference documentation">Java documentation for <code>android.media.AudioManager.MODE_CALL_SCREENING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumStreams">
      <MemberSignature Language="F#" Value="val mutable NumStreams : int" Usage="Android.Media.AudioManager.NumStreams" />
      <MemberSignature Language="C#" Value="public const int NumStreams = 5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 NumStreams = (5)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.NumStreams" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NUM_STREAMS")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>5</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#NUM_STREAMS" title="Reference documentation">Java documentation for <code>android.media.AudioManager.NUM_STREAMS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PlaybackOffloadGaplessSupported">
      <MemberSignature Language="C#" Value="public const Android.Media.PlaybackOffload PlaybackOffloadGaplessSupported = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.PlaybackOffload PlaybackOffloadGaplessSupported = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PlaybackOffloadGaplessSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.PlaybackOffload enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.PlaybackOffload</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Return value for <c>#getPlaybackOffloadSupport(AudioFormat, AudioAttributes)</c>:
                    offload playback supported with gapless transitions</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PLAYBACK_OFFLOAD_GAPLESS_SUPPORTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaybackOffloadNotSupported">
      <MemberSignature Language="C#" Value="public const Android.Media.PlaybackOffload PlaybackOffloadNotSupported = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.PlaybackOffload PlaybackOffloadNotSupported = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PlaybackOffloadNotSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PLAYBACK_OFFLOAD_NOT_SUPPORTED", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.PlaybackOffload enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.PlaybackOffload</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Return value for <c>#getPlaybackOffloadSupport(AudioFormat, AudioAttributes)</c>:
                    offload playback not supported</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PLAYBACK_OFFLOAD_NOT_SUPPORTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PLAYBACK_OFFLOAD_NOT_SUPPORTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaybackOffloadSupported">
      <MemberSignature Language="C#" Value="public const Android.Media.PlaybackOffload PlaybackOffloadSupported = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.PlaybackOffload PlaybackOffloadSupported = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PlaybackOffloadSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PLAYBACK_OFFLOAD_SUPPORTED", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.PlaybackOffload enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.PlaybackOffload</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Return value for <c>#getPlaybackOffloadSupport(AudioFormat, AudioAttributes)</c>:
                    offload playback supported</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PLAYBACK_OFFLOAD_SUPPORTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PLAYBACK_OFFLOAD_SUPPORTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaySoundEffect">
      <MemberSignature Language="F#" Value="abstract member PlaySoundEffect : Android.Media.SoundEffect -&gt; unit&#xA;override this.PlaySoundEffect : Android.Media.SoundEffect -&gt; unit" Usage="audioManager.PlaySoundEffect effectType" />
      <MemberSignature Language="C#" Value="public virtual void PlaySoundEffect (Android.Media.SoundEffect effectType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PlaySoundEffect(valuetype Android.Media.SoundEffect effectType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.PlaySoundEffect(Android.Media.SoundEffect)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("playSoundEffect", "(I)V", "GetPlaySoundEffect_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effectType" Type="Android.Media.SoundEffect">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="effectType">The type of sound effect.
            NOTE: This version uses the UI settings to determine
            whether sounds are heard or not.</param>
        <summary>Plays a sound effect (Key clicks, lid open/close.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#playSoundEffect(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.playSoundEffect(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PlaySoundEffect">
      <MemberSignature Language="F#" Value="abstract member PlaySoundEffect : Android.Media.SoundEffect * single -&gt; unit&#xA;override this.PlaySoundEffect : Android.Media.SoundEffect * single -&gt; unit" Usage="audioManager.PlaySoundEffect (effectType, volume)" />
      <MemberSignature Language="C#" Value="public virtual void PlaySoundEffect (Android.Media.SoundEffect effectType, float volume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PlaySoundEffect(valuetype Android.Media.SoundEffect effectType, float32 volume) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.PlaySoundEffect(Android.Media.SoundEffect,System.Single)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("playSoundEffect", "(IF)V", "GetPlaySoundEffect_IFHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effectType" Type="Android.Media.SoundEffect">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="volume" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="volume">Sound effect volume.
 The volume value is a raw scalar so UI controls should be scaled logarithmically.
 If a volume of -1 is specified, the AudioManager.STREAM_MUSIC stream volume minus 3dB will be used.
 NOTE: This version is for applications that have their own
 settings panel for enabling and controlling volume.
</param>
        <param name="effectType">The type of sound effect.
            NOTE: This version uses the UI settings to determine
            whether sounds are heard or not.</param>
        <summary>Plays a sound effect (Key clicks, lid open/close.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#playSoundEffect(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.playSoundEffect(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PropertyOutputFramesPerBuffer">
      <MemberSignature Language="F#" Value="val mutable PropertyOutputFramesPerBuffer : string" Usage="Android.Media.AudioManager.PropertyOutputFramesPerBuffer" />
      <MemberSignature Language="C#" Value="public const string PropertyOutputFramesPerBuffer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyOutputFramesPerBuffer" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertyOutputFramesPerBuffer" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_OUTPUT_FRAMES_PER_BUFFER")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used as a key for <c>#getProperty</c> to request the native or optimal output buffer size
            for this device's low latency output stream, in decimal PCM frames.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PROPERTY_OUTPUT_FRAMES_PER_BUFFER" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PROPERTY_OUTPUT_FRAMES_PER_BUFFER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="PropertyOutputSampleRate">
      <MemberSignature Language="F#" Value="val mutable PropertyOutputSampleRate : string" Usage="Android.Media.AudioManager.PropertyOutputSampleRate" />
      <MemberSignature Language="C#" Value="public const string PropertyOutputSampleRate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyOutputSampleRate" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertyOutputSampleRate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_OUTPUT_SAMPLE_RATE")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used as a key for <c>#getProperty</c> to request the native or optimal output sample rate
            for this device's low latency output stream, in decimal Hz.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PROPERTY_OUTPUT_SAMPLE_RATE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PROPERTY_OUTPUT_SAMPLE_RATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="PropertySupportAudioSourceUnprocessed">
      <MemberSignature Language="F#" Value="val mutable PropertySupportAudioSourceUnprocessed : string" Usage="Android.Media.AudioManager.PropertySupportAudioSourceUnprocessed" />
      <MemberSignature Language="C#" Value="public const string PropertySupportAudioSourceUnprocessed;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertySupportAudioSourceUnprocessed" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertySupportAudioSourceUnprocessed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used as a key for <c>#getProperty</c> to determine if the unprocessed audio source is
            available and supported with the expected frequency range and level response.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PROPERTY_SUPPORT_AUDIO_SOURCE_UNPROCESSED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertySupportMicNearUltrasound">
      <MemberSignature Language="F#" Value="val mutable PropertySupportMicNearUltrasound : string" Usage="Android.Media.AudioManager.PropertySupportMicNearUltrasound" />
      <MemberSignature Language="C#" Value="public const string PropertySupportMicNearUltrasound;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertySupportMicNearUltrasound" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertySupportMicNearUltrasound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used as a key for <c>#getProperty</c> to determine if the default microphone audio source
            supports near-ultrasound frequencies (range of 18 - 21 kHz).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PROPERTY_SUPPORT_MIC_NEAR_ULTRASOUND</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertySupportSpeakerNearUltrasound">
      <MemberSignature Language="F#" Value="val mutable PropertySupportSpeakerNearUltrasound : string" Usage="Android.Media.AudioManager.PropertySupportSpeakerNearUltrasound" />
      <MemberSignature Language="C#" Value="public const string PropertySupportSpeakerNearUltrasound;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertySupportSpeakerNearUltrasound" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.PropertySupportSpeakerNearUltrasound" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Used as a key for <c>#getProperty</c> to determine if the default speaker audio path
            supports near-ultrasound frequencies (range of 18 - 21 kHz).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND" title="Reference documentation">Java documentation for <code>android.media.AudioManager.PROPERTY_SUPPORT_SPEAKER_NEAR_ULTRASOUND</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAudioDeviceCallback">
      <MemberSignature Language="F#" Value="abstract member RegisterAudioDeviceCallback : Android.Media.AudioDeviceCallback * Android.OS.Handler -&gt; unit&#xA;override this.RegisterAudioDeviceCallback : Android.Media.AudioDeviceCallback * Android.OS.Handler -&gt; unit" Usage="audioManager.RegisterAudioDeviceCallback (callback, handler)" />
      <MemberSignature Language="C#" Value="public virtual void RegisterAudioDeviceCallback (Android.Media.AudioDeviceCallback? callback, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAudioDeviceCallback(class Android.Media.AudioDeviceCallback callback, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterAudioDeviceCallback(Android.Media.AudioDeviceCallback,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAudioDeviceCallback", "(Landroid/media/AudioDeviceCallback;Landroid/os/Handler;)V", "GetRegisterAudioDeviceCallback_Landroid_media_AudioDeviceCallback_Landroid_os_Handler_Handler", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.AudioDeviceCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="callback">The <c>AudioDeviceCallback</c> object to receive connect/disconnect
            notifications.</param>
        <param name="handler">Specifies the <c>Handler</c> object for the thread on which to execute
            the callback. If &lt;code&gt;null&lt;/code&gt;, the <c>Handler</c> associated with the main
            <c>Looper</c> will be used.</param>
        <summary>Registers an <c>AudioDeviceCallback</c> object to receive notifications of changes
            to the set of connected audio devices.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerAudioDeviceCallback(android.media.AudioDeviceCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerAudioDeviceCallback(android.media.AudioDeviceCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAudioPlaybackCallback">
      <MemberSignature Language="F#" Value="abstract member RegisterAudioPlaybackCallback : Android.Media.AudioManager.AudioPlaybackCallback * Android.OS.Handler -&gt; unit&#xA;override this.RegisterAudioPlaybackCallback : Android.Media.AudioManager.AudioPlaybackCallback * Android.OS.Handler -&gt; unit" Usage="audioManager.RegisterAudioPlaybackCallback (cb, handler)" />
      <MemberSignature Language="C#" Value="public virtual void RegisterAudioPlaybackCallback (Android.Media.AudioManager.AudioPlaybackCallback cb, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAudioPlaybackCallback(class Android.Media.AudioManager/AudioPlaybackCallback cb, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterAudioPlaybackCallback(Android.Media.AudioManager.AudioPlaybackCallback,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAudioPlaybackCallback", "(Landroid/media/AudioManager$AudioPlaybackCallback;Landroid/os/Handler;)V", "GetRegisterAudioPlaybackCallback_Landroid_media_AudioManager_AudioPlaybackCallback_Landroid_os_Handler_Handler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioPlaybackCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="cb">non-null callback to register</param>
        <param name="handler">the <c>Handler</c> object for the thread on which to execute
            the callback. If &lt;code&gt;null&lt;/code&gt;, the <c>Handler</c> associated with the main
            <c>Looper</c> will be used.</param>
        <summary>Register a callback to be notified of audio playback changes through
            <c>AudioPlaybackCallback</c></summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerAudioPlaybackCallback(android.media.AudioPlaybackCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerAudioPlaybackCallback(android.media.AudioPlaybackCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAudioRecordingCallback">
      <MemberSignature Language="F#" Value="abstract member RegisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback * Android.OS.Handler -&gt; unit&#xA;override this.RegisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback * Android.OS.Handler -&gt; unit" Usage="audioManager.RegisterAudioRecordingCallback (cb, handler)" />
      <MemberSignature Language="C#" Value="public virtual void RegisterAudioRecordingCallback (Android.Media.AudioManager.AudioRecordingCallback cb, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAudioRecordingCallback(class Android.Media.AudioManager/AudioRecordingCallback cb, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterAudioRecordingCallback(Android.Media.AudioManager.AudioRecordingCallback,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAudioRecordingCallback", "(Landroid/media/AudioManager$AudioRecordingCallback;Landroid/os/Handler;)V", "GetRegisterAudioRecordingCallback_Landroid_media_AudioManager_AudioRecordingCallback_Landroid_os_Handler_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioRecordingCallback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="cb">non-null callback to register</param>
        <param name="handler">the <c>Handler</c> object for the thread on which to execute
            the callback. If &lt;code&gt;null&lt;/code&gt;, the <c>Handler</c> associated with the main
            <c>Looper</c> will be used.</param>
        <summary>Register a callback to be notified of audio recording changes through
            <c>AudioRecordingCallback</c></summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerAudioRecordingCallback(android.media.AudioRecordingCallback,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerAudioRecordingCallback(android.media.AudioRecordingCallback, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterMediaButtonEventReceiver">
      <MemberSignature Language="F#" Value="abstract member RegisterMediaButtonEventReceiver : Android.App.PendingIntent -&gt; unit&#xA;override this.RegisterMediaButtonEventReceiver : Android.App.PendingIntent -&gt; unit" Usage="audioManager.RegisterMediaButtonEventReceiver eventReceiver" />
      <MemberSignature Language="C#" Value="public virtual void RegisterMediaButtonEventReceiver (Android.App.PendingIntent? eventReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterMediaButtonEventReceiver(class Android.App.PendingIntent eventReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterMediaButtonEventReceiver(Android.App.PendingIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerMediaButtonEventReceiver", "(Landroid/app/PendingIntent;)V", "GetRegisterMediaButtonEventReceiver_Landroid_app_PendingIntent_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventReceiver" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="eventReceiver">target that will receive media button intents.  The PendingIntent
            will be sent an <c>Intent#ACTION_MEDIA_BUTTON</c> event when a media button action
            occurs, with <c>Intent#EXTRA_KEY_EVENT</c> added and holding the key code of the
            media button that was pressed.</param>
        <summary>Register a component to be the sole receiver of MEDIA_BUTTON intents.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerMediaButtonEventReceiver(android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerMediaButtonEventReceiver(android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="RegisterMediaButtonEventReceiver">
      <MemberSignature Language="F#" Value="abstract member RegisterMediaButtonEventReceiver : Android.Content.ComponentName -&gt; unit&#xA;override this.RegisterMediaButtonEventReceiver : Android.Content.ComponentName -&gt; unit" Usage="audioManager.RegisterMediaButtonEventReceiver eventReceiver" />
      <MemberSignature Language="C#" Value="public virtual void RegisterMediaButtonEventReceiver (Android.Content.ComponentName? eventReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterMediaButtonEventReceiver(class Android.Content.ComponentName eventReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterMediaButtonEventReceiver(Android.Content.ComponentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerMediaButtonEventReceiver", "(Landroid/content/ComponentName;)V", "GetRegisterMediaButtonEventReceiver_Landroid_content_ComponentName_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventReceiver" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="eventReceiver">target that will receive media button intents.  The PendingIntent
            will be sent an <c>Intent#ACTION_MEDIA_BUTTON</c> event when a media button action
            occurs, with <c>Intent#EXTRA_KEY_EVENT</c> added and holding the key code of the
            media button that was pressed.</param>
        <summary>Register a component to be the sole receiver of MEDIA_BUTTON intents.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerMediaButtonEventReceiver(android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerMediaButtonEventReceiver(android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRemoteControlClient">
      <MemberSignature Language="F#" Value="abstract member RegisterRemoteControlClient : Android.Media.RemoteControlClient -&gt; unit&#xA;override this.RegisterRemoteControlClient : Android.Media.RemoteControlClient -&gt; unit" Usage="audioManager.RegisterRemoteControlClient rcClient" />
      <MemberSignature Language="C#" Value="public virtual void RegisterRemoteControlClient (Android.Media.RemoteControlClient? rcClient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRemoteControlClient(class Android.Media.RemoteControlClient rcClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterRemoteControlClient(Android.Media.RemoteControlClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerRemoteControlClient", "(Landroid/media/RemoteControlClient;)V", "GetRegisterRemoteControlClient_Landroid_media_RemoteControlClient_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rcClient" Type="Android.Media.RemoteControlClient" />
      </Parameters>
      <Docs>
        <param name="rcClient">The remote control client from which remote controls will receive
                 information to display.</param>
        <summary>Registers the remote control client for providing information to display on the remote
            controls.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerRemoteControlClient(android.media.RemoteControlClient)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerRemoteControlClient(android.media.RemoteControlClient)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="T:Android.Media.RemoteControlClient" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRemoteController">
      <MemberSignature Language="F#" Value="abstract member RegisterRemoteController : Android.Media.RemoteController -&gt; bool&#xA;override this.RegisterRemoteController : Android.Media.RemoteController -&gt; bool" Usage="audioManager.RegisterRemoteController rctlr" />
      <MemberSignature Language="C#" Value="public virtual bool RegisterRemoteController (Android.Media.RemoteController? rctlr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RegisterRemoteController(class Android.Media.RemoteController rctlr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RegisterRemoteController(Android.Media.RemoteController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerRemoteController", "(Landroid/media/RemoteController;)Z", "GetRegisterRemoteController_Landroid_media_RemoteController_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rctlr" Type="Android.Media.RemoteController" />
      </Parameters>
      <Docs>
        <param name="rctlr">the object to register.</param>
        <summary>Registers a <c>RemoteController</c> instance for it to receive media
            metadata updates and playback state information from applications using
            <c>RemoteControlClient</c>, and control their playback.</summary>
        <returns>true if the <c>RemoteController</c> was successfully registered,
                    false if an error occurred, due to an internal system error, or
                    insufficient permissions.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#registerRemoteController(android.media.RemoteController)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.registerRemoteController(android.media.RemoteController)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnCommunicationDeviceChangedListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveOnCommunicationDeviceChangedListener (Android.Media.AudioManager.IOnCommunicationDeviceChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnCommunicationDeviceChangedListener(class Android.Media.AudioManager/IOnCommunicationDeviceChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RemoveOnCommunicationDeviceChangedListener(Android.Media.AudioManager.IOnCommunicationDeviceChangedListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnCommunicationDeviceChangedListener", "(Landroid/media/AudioManager$OnCommunicationDeviceChangedListener;)V", "GetRemoveOnCommunicationDeviceChangedListener_Landroid_media_AudioManager_OnCommunicationDeviceChangedListener_Handler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioManager+IOnCommunicationDeviceChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnModeChangedListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveOnModeChangedListener (Android.Media.AudioManager.IOnModeChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnModeChangedListener(class Android.Media.AudioManager/IOnModeChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RemoveOnModeChangedListener(Android.Media.AudioManager.IOnModeChangedListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnModeChangedListener", "(Landroid/media/AudioManager$OnModeChangedListener;)V", "GetRemoveOnModeChangedListener_Landroid_media_AudioManager_OnModeChangedListener_Handler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioManager+IOnModeChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestAudioFocus">
      <MemberSignature Language="F#" Value="abstract member RequestAudioFocus : Android.Media.AudioFocusRequestClass -&gt; Android.Media.AudioFocusRequest&#xA;override this.RequestAudioFocus : Android.Media.AudioFocusRequestClass -&gt; Android.Media.AudioFocusRequest" Usage="audioManager.RequestAudioFocus focusRequest" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFocusRequest RequestAudioFocus (Android.Media.AudioFocusRequestClass focusRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.AudioFocusRequest RequestAudioFocus(class Android.Media.AudioFocusRequestClass focusRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RequestAudioFocus(Android.Media.AudioFocusRequestClass)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestAudioFocus", "(Landroid/media/AudioFocusRequest;)I", "GetRequestAudioFocus_Landroid_media_AudioFocusRequest_Handler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusRequest" Type="Android.Media.AudioFocusRequestClass" />
      </Parameters>
      <Docs>
        <param name="focusRequest">a <c>AudioFocusRequest</c> instance used to configure how focus is
              requested.</param>
        <summary>Request audio focus.</summary>
        <returns>
          <c>#AUDIOFOCUS_REQUEST_FAILED</c>, <c>#AUDIOFOCUS_REQUEST_GRANTED</c>
                or <c>#AUDIOFOCUS_REQUEST_DELAYED</c>.
                &lt;br&gt;Note that the return value is never <c>#AUDIOFOCUS_REQUEST_DELAYED</c> when focus
                is requested without building the <c>AudioFocusRequest</c> with
                <c>AudioFocusRequest.Builder#setAcceptsDelayedFocusGain(boolean)</c> set to
                <c>true</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#requestAudioFocus(android.media.AudioFocusRequest)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.requestAudioFocus(android.media.AudioFocusRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestAudioFocus">
      <MemberSignature Language="F#" Value="abstract member RequestAudioFocus : Android.Media.AudioManager.IOnAudioFocusChangeListener * Android.Media.Stream * Android.Media.AudioFocus -&gt; Android.Media.AudioFocusRequest&#xA;override this.RequestAudioFocus : Android.Media.AudioManager.IOnAudioFocusChangeListener * Android.Media.Stream * Android.Media.AudioFocus -&gt; Android.Media.AudioFocusRequest" Usage="audioManager.RequestAudioFocus (l, streamType, durationHint)" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFocusRequest RequestAudioFocus (Android.Media.AudioManager.IOnAudioFocusChangeListener? l, Android.Media.Stream streamType, Android.Media.AudioFocus durationHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.AudioFocusRequest RequestAudioFocus(class Android.Media.AudioManager/IOnAudioFocusChangeListener l, valuetype Android.Media.Stream streamType, valuetype Android.Media.AudioFocus durationHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.RequestAudioFocus(Android.Media.AudioManager.IOnAudioFocusChangeListener,Android.Media.Stream,Android.Media.AudioFocus)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestAudioFocus", "(Landroid/media/AudioManager$OnAudioFocusChangeListener;II)I", "GetRequestAudioFocus_Landroid_media_AudioManager_OnAudioFocusChangeListener_IIHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFocusRequest</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Media.AudioManager+IOnAudioFocusChangeListener" />
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="durationHint" Type="Android.Media.AudioFocus">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="l">the listener to be notified of audio focus changes</param>
        <param name="streamType">the main audio stream type affected by the focus request</param>
        <param name="durationHint">use <see cref="F:Android.Media.AudioManager.AudiofocusGainTransient" /> to indicate this focus request
      is temporary, and focus will be abandonned shortly. Examples of transient requests are
      for the playback of driving directions, or notifications sounds.
      Use <see cref="F:Android.Media.AudioManager.AudiofocusGainTransientMayDuck" /> to indicate also that it's ok for
      the previous focus owner to keep playing if it ducks its audio output.
      Alternatively use <see cref="F:Android.Media.AudioManager.AudiofocusGainTransientExclusive" /> for a temporary request
      that benefits from the system not playing disruptive sounds like notifications, for
      usecases such as voice memo recording, or speech recognition.
      Use <see cref="F:Android.Media.AudioManager.AudiofocusGain" /> for a focus request of unknown duration such
      as the playback of a song or a video.</param>
        <param name="focusRequest">a <c>AudioFocusRequest</c> instance used to configure how focus is
              requested.</param>
        <summary>Request audio focus.</summary>
        <returns>
          <c>#AUDIOFOCUS_REQUEST_FAILED</c>, <c>#AUDIOFOCUS_REQUEST_GRANTED</c>
                or <c>#AUDIOFOCUS_REQUEST_DELAYED</c>.
                &lt;br&gt;Note that the return value is never <c>#AUDIOFOCUS_REQUEST_DELAYED</c> when focus
                is requested without building the <c>AudioFocusRequest</c> with
                <c>AudioFocusRequest.Builder#setAcceptsDelayedFocusGain(boolean)</c> set to
                <c>true</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#requestAudioFocus(android.media.AudioFocusRequest)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.requestAudioFocus(android.media.AudioFocusRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="RingerMode">
      <MemberSignature Language="F#" Value="member this.RingerMode : Android.Media.RingerMode with get, set" Usage="Android.Media.AudioManager.RingerMode" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.RingerMode RingerMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.RingerMode RingerMode" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.RingerMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRingerMode", "()I", "GetGetRingerModeHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setRingerMode", "(I)V", "GetSetRingerMode_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RingerMode</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="ringerMode">The ringer mode, one of <c>#RINGER_MODE_NORMAL</c>,
                       <c>#RINGER_MODE_SILENT</c>, or <c>#RINGER_MODE_VIBRATE</c>.</param>
        <summary>Returns the current ringtone mode. -or- Sets the ringer mode.</summary>
        <value>The current ringtone mode, one of <c>#RINGER_MODE_NORMAL</c>,
                    <c>#RINGER_MODE_SILENT</c>, or <c>#RINGER_MODE_VIBRATE</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#getRingerMode()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.getRingerMode()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setRingerMode(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setRingerMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Media.AudioManager.RingerMode" />
        <altmember cref="P:Android.Media.AudioManager.RingerMode" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
        <c>#RINGER_MODE_NORMAL</c>
        <c>#RINGER_MODE_SILENT</c>
        <c>#RINGER_MODE_VIBRATE</c>
      </Docs>
    </Member>
    <Member MemberName="RingerModeChangedAction">
      <MemberSignature Language="F#" Value="val mutable RingerModeChangedAction : string" Usage="Android.Media.AudioManager.RingerModeChangedAction" />
      <MemberSignature Language="C#" Value="public const string RingerModeChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string RingerModeChangedAction" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.RingerModeChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("RINGER_MODE_CHANGED_ACTION")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sticky broadcast intent action indicating that the ringer mode has
            changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#RINGER_MODE_CHANGED_ACTION" title="Reference documentation">Java documentation for <code>android.media.AudioManager.RINGER_MODE_CHANGED_ACTION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.ExtraRingerMode" />
      </Docs>
    </Member>
    <Member MemberName="ScoAudioStateConnected">
      <MemberSignature Language="F#" Value="val mutable ScoAudioStateConnected : Android.Media.ScoAudioState" Usage="Android.Media.AudioManager.ScoAudioStateConnected" />
      <MemberSignature Language="C#" Value="public const Android.Media.ScoAudioState ScoAudioStateConnected = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.ScoAudioState ScoAudioStateConnected = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ScoAudioStateConnected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCO_AUDIO_STATE_CONNECTED")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ScoAudioState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Value for extra <c>#EXTRA_SCO_AUDIO_STATE</c> or <c>#EXTRA_SCO_AUDIO_PREVIOUS_STATE</c>
            indicating that the SCO audio channel is established</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#SCO_AUDIO_STATE_CONNECTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.SCO_AUDIO_STATE_CONNECTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ScoAudioStateConnecting">
      <MemberSignature Language="F#" Value="val mutable ScoAudioStateConnecting : Android.Media.ScoAudioState" Usage="Android.Media.AudioManager.ScoAudioStateConnecting" />
      <MemberSignature Language="C#" Value="public const Android.Media.ScoAudioState ScoAudioStateConnecting = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.ScoAudioState ScoAudioStateConnecting = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ScoAudioStateConnecting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCO_AUDIO_STATE_CONNECTING")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ScoAudioState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE
            indicating that the SCO audio channel is being established</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#SCO_AUDIO_STATE_CONNECTING" title="Reference documentation">Java documentation for <code>android.media.AudioManager.SCO_AUDIO_STATE_CONNECTING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ScoAudioStateDisconnected">
      <MemberSignature Language="F#" Value="val mutable ScoAudioStateDisconnected : Android.Media.ScoAudioState" Usage="Android.Media.AudioManager.ScoAudioStateDisconnected" />
      <MemberSignature Language="C#" Value="public const Android.Media.ScoAudioState ScoAudioStateDisconnected = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.ScoAudioState ScoAudioStateDisconnected = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ScoAudioStateDisconnected" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCO_AUDIO_STATE_DISCONNECTED")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ScoAudioState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Value for extra EXTRA_SCO_AUDIO_STATE or EXTRA_SCO_AUDIO_PREVIOUS_STATE
            indicating that the SCO audio channel is not established</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#SCO_AUDIO_STATE_DISCONNECTED" title="Reference documentation">Java documentation for <code>android.media.AudioManager.SCO_AUDIO_STATE_DISCONNECTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ScoAudioStateError">
      <MemberSignature Language="F#" Value="val mutable ScoAudioStateError : Android.Media.ScoAudioState" Usage="Android.Media.AudioManager.ScoAudioStateError" />
      <MemberSignature Language="C#" Value="public const Android.Media.ScoAudioState ScoAudioStateError = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.ScoAudioState ScoAudioStateError = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.ScoAudioStateError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SCO_AUDIO_STATE_ERROR")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.ScoAudioState enum directly instead of this field.", true)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ScoAudioState</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Value for extra EXTRA_SCO_AUDIO_STATE indicating that
            there was an error trying to obtain the state</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#SCO_AUDIO_STATE_ERROR" title="Reference documentation">Java documentation for <code>android.media.AudioManager.SCO_AUDIO_STATE_ERROR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetCommunicationDevice">
      <MemberSignature Language="C#" Value="public virtual bool SetCommunicationDevice (Android.Media.AudioDeviceInfo device);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetCommunicationDevice(class Android.Media.AudioDeviceInfo device) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetCommunicationDevice(Android.Media.AudioDeviceInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCommunicationDevice", "(Landroid/media/AudioDeviceInfo;)Z", "GetSetCommunicationDevice_Landroid_media_AudioDeviceInfo_Handler", ApiSince=31)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="device" Type="Android.Media.AudioDeviceInfo" />
      </Parameters>
      <Docs>
        <param name="device">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEncodedSurroundMode">
      <MemberSignature Language="C#" Value="public virtual bool SetEncodedSurroundMode (int mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetEncodedSurroundMode(int32 mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetEncodedSurroundMode(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEncodedSurroundMode", "(I)Z", "GetSetEncodedSurroundMode_IHandler", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.WRITE_SETTINGS")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "EncodedSurroundOutputUnknown", "EncodedSurroundOutputAuto", "EncodedSurroundOutputNever", "EncodedSurroundOutputAlways", "EncodedSurroundOutputManual" }, Type="Android.Media.AudioManager")]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <summary>Sets the surround sound mode.</summary>
        <returns>true if successful, otherwise false</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setEncodedSurroundMode(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setEncodedSurroundMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="F#" Value="abstract member SetParameters : string -&gt; unit&#xA;override this.SetParameters : string -&gt; unit" Usage="audioManager.SetParameters keyValuePairs" />
      <MemberSignature Language="C#" Value="public virtual void SetParameters (string? keyValuePairs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetParameters(string keyValuePairs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetParameters(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setParameters", "(Ljava/lang/String;)V", "GetSetParameters_Ljava_lang_String_Handler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyValuePairs" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyValuePairs">list of parameters key value pairs in the form:
               key1=value1;key2=value2;...</param>
        <summary>Sets a variable number of parameter values to audio hardware.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setParameters(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setParameters(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="SetRouting">
      <MemberSignature Language="F#" Value="abstract member SetRouting : Android.Media.Mode * Android.Media.Route * Android.Media.Route -&gt; unit&#xA;override this.SetRouting : Android.Media.Mode * Android.Media.Route * Android.Media.Route -&gt; unit" Usage="audioManager.SetRouting (mode, routes, mask)" />
      <MemberSignature Language="C#" Value="public virtual void SetRouting (Android.Media.Mode mode, Android.Media.Route routes, Android.Media.Route mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRouting(valuetype Android.Media.Mode mode, valuetype Android.Media.Route routes, valuetype Android.Media.Route mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetRouting(Android.Media.Mode,Android.Media.Route,Android.Media.Route)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRouting", "(III)V", "GetSetRouting_IIIHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Media.Mode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="routes" Type="Android.Media.Route">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="mask" Type="Android.Media.Route">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">audio mode to change route. E.g., MODE_RINGTONE.</param>
        <param name="routes">bit vector of routes requested, created from one or
                          more of ROUTE_xxx types. Set bits indicate that route should be on</param>
        <param name="mask">bit vector of routes to change, created from one or more of
            ROUTE_xxx types. Unset bits indicate the route should be left unchanged</param>
        <summary>Sets the audio routing for a specified mode</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setRouting(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setRouting(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetStreamMute">
      <MemberSignature Language="F#" Value="abstract member SetStreamMute : Android.Media.Stream * bool -&gt; unit&#xA;override this.SetStreamMute : Android.Media.Stream * bool -&gt; unit" Usage="audioManager.SetStreamMute (streamType, state)" />
      <MemberSignature Language="C#" Value="public virtual void SetStreamMute (Android.Media.Stream streamType, bool state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStreamMute(valuetype Android.Media.Stream streamType, bool state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetStreamMute(Android.Media.Stream,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStreamMute", "(IZ)V", "GetSetStreamMute_IZHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="state" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamType">The stream to be muted/unmuted.</param>
        <param name="state">The required mute state: true for mute ON, false for mute
                       OFF</param>
        <summary>Mute or unmute an audio stream.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setStreamMute(int,%20boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setStreamMute(int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="SetStreamSolo">
      <MemberSignature Language="F#" Value="abstract member SetStreamSolo : Android.Media.Stream * bool -&gt; unit&#xA;override this.SetStreamSolo : Android.Media.Stream * bool -&gt; unit" Usage="audioManager.SetStreamSolo (streamType, state)" />
      <MemberSignature Language="C#" Value="public virtual void SetStreamSolo (Android.Media.Stream streamType, bool state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStreamSolo(valuetype Android.Media.Stream streamType, bool state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetStreamSolo(Android.Media.Stream,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStreamSolo", "(IZ)V", "GetSetStreamSolo_IZHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="state" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="streamType">The stream to be soloed/unsoloed.</param>
        <param name="state">The required solo state: true for solo ON, false for solo
                       OFF</param>
        <summary>Solo or unsolo a particular stream.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setStreamSolo(int,%20boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setStreamSolo(int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="SetStreamVolume">
      <MemberSignature Language="F#" Value="abstract member SetStreamVolume : Android.Media.Stream * int * Android.Media.VolumeNotificationFlags -&gt; unit&#xA;override this.SetStreamVolume : Android.Media.Stream * int * Android.Media.VolumeNotificationFlags -&gt; unit" Usage="audioManager.SetStreamVolume (streamType, index, flags)" />
      <MemberSignature Language="C#" Value="public virtual void SetStreamVolume (Android.Media.Stream streamType, int index, Android.Media.VolumeNotificationFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStreamVolume(valuetype Android.Media.Stream streamType, int32 index, valuetype Android.Media.VolumeNotificationFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetStreamVolume(Android.Media.Stream,System.Int32,Android.Media.VolumeNotificationFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStreamVolume", "(III)V", "GetSetStreamVolume_IIIHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Media.VolumeNotificationFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">The stream whose volume index should be set.</param>
        <param name="index">The volume index to set. See
                       <c>#getStreamMaxVolume(int)</c> for the largest valid value.</param>
        <param name="flags">One or more flags.</param>
        <summary>Sets the volume index for a particular stream.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setStreamVolume(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setStreamVolume(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.GetStreamMaxVolume(Android.Media.Stream)" />
        <altmember cref="M:Android.Media.AudioManager.GetStreamVolume(Android.Media.Stream)" />
        <altmember cref="P:Android.Media.AudioManager.IsVolumeFixed" />
      </Docs>
    </Member>
    <Member MemberName="SetSurroundFormatEnabled">
      <MemberSignature Language="C#" Value="public virtual bool SetSurroundFormatEnabled (int audioFormat, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetSurroundFormatEnabled(int32 audioFormat, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetSurroundFormatEnabled(System.Int32,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSurroundFormatEnabled", "(IZ)Z", "GetSetSurroundFormatEnabled_IZHandler", ApiSince=31)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.WRITE_SETTINGS")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioFormat" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "", "", "", "", "", "", "", "" }, Flag=true, Type="")]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "EncodingMpeghBlL3", "EncodingMpeghBlL4", "EncodingMpeghLcL3", "EncodingMpeghLcL4", "EncodingDtsUhd", "EncodingDra" }, Flag=true, Type="Android.Media.AudioFormat")]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="audioFormat">To be added.</param>
        <param name="enabled">the required surround format state, true for enabled, false for disabled</param>
        <summary>Sets and persists a certain surround format as enabled or not.</summary>
        <returns>true if successful, otherwise false</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setSurroundFormatEnabled(int,%20boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setSurroundFormatEnabled(int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVibrateSetting">
      <MemberSignature Language="F#" Value="abstract member SetVibrateSetting : Android.Media.VibrateType * Android.Media.VibrateSetting -&gt; unit&#xA;override this.SetVibrateSetting : Android.Media.VibrateType * Android.Media.VibrateSetting -&gt; unit" Usage="audioManager.SetVibrateSetting (vibrateType, vibrateSetting)" />
      <MemberSignature Language="C#" Value="public virtual void SetVibrateSetting (Android.Media.VibrateType vibrateType, Android.Media.VibrateSetting vibrateSetting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVibrateSetting(valuetype Android.Media.VibrateType vibrateType, valuetype Android.Media.VibrateSetting vibrateSetting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.SetVibrateSetting(Android.Media.VibrateType,Android.Media.VibrateSetting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVibrateSetting", "(II)V", "GetSetVibrateSetting_IIHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vibrateType" Type="Android.Media.VibrateType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="vibrateSetting" Type="Android.Media.VibrateSetting">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vibrateType">The type of vibrate. One of
                       <c>#VIBRATE_TYPE_NOTIFICATION</c> or
                       <c>#VIBRATE_TYPE_RINGER</c>.</param>
        <param name="vibrateSetting">The vibrate setting, one of
                       <c>#VIBRATE_SETTING_ON</c>,
                       <c>#VIBRATE_SETTING_OFF</c>, or
                       <c>#VIBRATE_SETTING_ONLY_SILENT</c>.</param>
        <summary>Sets the setting for when the vibrate type should vibrate.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setVibrateSetting(int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setVibrateSetting(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.GetVibrateSetting(Android.Media.VibrateType)" />
        <altmember cref="M:Android.Media.AudioManager.ShouldVibrate(Android.Media.VibrateType)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldVibrate">
      <MemberSignature Language="F#" Value="abstract member ShouldVibrate : Android.Media.VibrateType -&gt; bool&#xA;override this.ShouldVibrate : Android.Media.VibrateType -&gt; bool" Usage="audioManager.ShouldVibrate vibrateType" />
      <MemberSignature Language="C#" Value="public virtual bool ShouldVibrate (Android.Media.VibrateType vibrateType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ShouldVibrate(valuetype Android.Media.VibrateType vibrateType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.ShouldVibrate(Android.Media.VibrateType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("shouldVibrate", "(I)Z", "GetShouldVibrate_IHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vibrateType" Type="Android.Media.VibrateType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="vibrateType">The type of vibrate. One of
                       <c>#VIBRATE_TYPE_NOTIFICATION</c> or
                       <c>#VIBRATE_TYPE_RINGER</c>.</param>
        <summary>Returns whether a particular type should vibrate according to user
            settings and the current ringer mode.</summary>
        <returns>Whether the type should vibrate at the instant this method is
                    called.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#shouldVibrate(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.shouldVibrate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Media.AudioManager.SetVibrateSetting(Android.Media.VibrateType, Android.Media.VibrateSetting)" />
        <altmember cref="M:Android.Media.AudioManager.GetVibrateSetting(Android.Media.VibrateType)" />
      </Docs>
    </Member>
    <Member MemberName="SpeakerphoneOn">
      <MemberSignature Language="F#" Value="member this.SpeakerphoneOn : bool with get, set" Usage="Android.Media.AudioManager.SpeakerphoneOn" />
      <MemberSignature Language="C#" Value="public virtual bool SpeakerphoneOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SpeakerphoneOn" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.SpeakerphoneOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSpeakerphoneOn", "()Z", "GetIsSpeakerphoneOnHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSpeakerphoneOn", "(Z)V", "GetSetSpeakerphoneOn_ZHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">set &lt;var&gt;true&lt;/var&gt; to turn on speakerphone;
                      &lt;var&gt;false&lt;/var&gt; to turn it off</param>
        <summary>Checks whether the speakerphone is on or off. -or- Sets the speakerphone on or off.</summary>
        <value>true if speakerphone is on, false if it's off</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isSpeakerphoneOn()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isSpeakerphoneOn()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setSpeakerphoneOn(boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setSpeakerphoneOn(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartBluetoothSco">
      <MemberSignature Language="F#" Value="abstract member StartBluetoothSco : unit -&gt; unit&#xA;override this.StartBluetoothSco : unit -&gt; unit" Usage="audioManager.StartBluetoothSco " />
      <MemberSignature Language="C#" Value="public virtual void StartBluetoothSco ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartBluetoothSco() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.StartBluetoothSco" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startBluetoothSco", "()V", "GetStartBluetoothScoHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Start bluetooth SCO audio connection.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#startBluetoothSco()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.startBluetoothSco()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.StopBluetoothSco" />
        <altmember cref="F:Android.Media.AudioManager.ActionScoAudioStateUpdated" />
      </Docs>
    </Member>
    <Member MemberName="StopBluetoothSco">
      <MemberSignature Language="F#" Value="abstract member StopBluetoothSco : unit -&gt; unit&#xA;override this.StopBluetoothSco : unit -&gt; unit" Usage="audioManager.StopBluetoothSco " />
      <MemberSignature Language="C#" Value="public virtual void StopBluetoothSco ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopBluetoothSco() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.StopBluetoothSco" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopBluetoothSco", "()V", "GetStopBluetoothScoHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop bluetooth SCO audio connection.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#stopBluetoothSco()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.stopBluetoothSco()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.AudioManager.StartBluetoothSco" />
      </Docs>
    </Member>
    <Member MemberName="StreamAccessibility">
      <MemberSignature Language="F#" Value="val mutable StreamAccessibility : int" Usage="Android.Media.AudioManager.StreamAccessibility" />
      <MemberSignature Language="C#" Value="public const int StreamAccessibility = 10;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 StreamAccessibility = (10)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.StreamAccessibility" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("STREAM_ACCESSIBILITY", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>10</MemberValue>
      <Docs>
        <summary>Used to identify the volume of audio streams for accessibility prompts</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#STREAM_ACCESSIBILITY" title="Reference documentation">Java documentation for <code>android.media.AudioManager.STREAM_ACCESSIBILITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.AudioManager.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.AudioManager.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnloadSoundEffects">
      <MemberSignature Language="F#" Value="abstract member UnloadSoundEffects : unit -&gt; unit&#xA;override this.UnloadSoundEffects : unit -&gt; unit" Usage="audioManager.UnloadSoundEffects " />
      <MemberSignature Language="C#" Value="public virtual void UnloadSoundEffects ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnloadSoundEffects() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnloadSoundEffects" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unloadSoundEffects", "()V", "GetUnloadSoundEffectsHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Unload Sound effects.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unloadSoundEffects()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unloadSoundEffects()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterAudioDeviceCallback">
      <MemberSignature Language="F#" Value="abstract member UnregisterAudioDeviceCallback : Android.Media.AudioDeviceCallback -&gt; unit&#xA;override this.UnregisterAudioDeviceCallback : Android.Media.AudioDeviceCallback -&gt; unit" Usage="audioManager.UnregisterAudioDeviceCallback callback" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterAudioDeviceCallback (Android.Media.AudioDeviceCallback? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterAudioDeviceCallback(class Android.Media.AudioDeviceCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterAudioDeviceCallback(Android.Media.AudioDeviceCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterAudioDeviceCallback", "(Landroid/media/AudioDeviceCallback;)V", "GetUnregisterAudioDeviceCallback_Landroid_media_AudioDeviceCallback_Handler", ApiSince=23)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.AudioDeviceCallback" />
      </Parameters>
      <Docs>
        <param name="callback">The <c>AudioDeviceCallback</c> object that was previously registered
            with <c>AudioManager#registerAudioDeviceCallback</c> to be unregistered.</param>
        <summary>Unregisters an <c>AudioDeviceCallback</c> object which has been previously registered
            to receive notifications of changes to the set of connected audio devices.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterAudioDeviceCallback(android.media.AudioDeviceCallback)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterAudioDeviceCallback(android.media.AudioDeviceCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAudioPlaybackCallback">
      <MemberSignature Language="F#" Value="abstract member UnregisterAudioPlaybackCallback : Android.Media.AudioManager.AudioPlaybackCallback -&gt; unit&#xA;override this.UnregisterAudioPlaybackCallback : Android.Media.AudioManager.AudioPlaybackCallback -&gt; unit" Usage="audioManager.UnregisterAudioPlaybackCallback cb" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterAudioPlaybackCallback (Android.Media.AudioManager.AudioPlaybackCallback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterAudioPlaybackCallback(class Android.Media.AudioManager/AudioPlaybackCallback cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterAudioPlaybackCallback(Android.Media.AudioManager.AudioPlaybackCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterAudioPlaybackCallback", "(Landroid/media/AudioManager$AudioPlaybackCallback;)V", "GetUnregisterAudioPlaybackCallback_Landroid_media_AudioManager_AudioPlaybackCallback_Handler", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioPlaybackCallback" />
      </Parameters>
      <Docs>
        <param name="cb">non-null callback to unregister</param>
        <summary>Unregister an audio playback callback previously registered with
            <c>#registerAudioPlaybackCallback(AudioPlaybackCallback, Handler)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterAudioPlaybackCallback(android.media.AudioPlaybackCallback)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterAudioPlaybackCallback(android.media.AudioPlaybackCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAudioRecordingCallback">
      <MemberSignature Language="F#" Value="abstract member UnregisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback -&gt; unit&#xA;override this.UnregisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback -&gt; unit" Usage="audioManager.UnregisterAudioRecordingCallback cb" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterAudioRecordingCallback (Android.Media.AudioManager.AudioRecordingCallback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterAudioRecordingCallback(class Android.Media.AudioManager/AudioRecordingCallback cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterAudioRecordingCallback(Android.Media.AudioManager.AudioRecordingCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterAudioRecordingCallback", "(Landroid/media/AudioManager$AudioRecordingCallback;)V", "GetUnregisterAudioRecordingCallback_Landroid_media_AudioManager_AudioRecordingCallback_Handler", ApiSince=24)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioRecordingCallback" />
      </Parameters>
      <Docs>
        <param name="cb">non-null callback to unregister</param>
        <summary>Unregister an audio recording callback previously registered with
            <c>#registerAudioRecordingCallback(AudioRecordingCallback, Handler)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterAudioRecordingCallback(android.media.AudioRecordingCallback)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterAudioRecordingCallback(android.media.AudioRecordingCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterMediaButtonEventReceiver">
      <MemberSignature Language="F#" Value="abstract member UnregisterMediaButtonEventReceiver : Android.App.PendingIntent -&gt; unit&#xA;override this.UnregisterMediaButtonEventReceiver : Android.App.PendingIntent -&gt; unit" Usage="audioManager.UnregisterMediaButtonEventReceiver eventReceiver" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterMediaButtonEventReceiver (Android.App.PendingIntent? eventReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterMediaButtonEventReceiver(class Android.App.PendingIntent eventReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterMediaButtonEventReceiver(Android.App.PendingIntent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterMediaButtonEventReceiver", "(Landroid/app/PendingIntent;)V", "GetUnregisterMediaButtonEventReceiver_Landroid_app_PendingIntent_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventReceiver" Type="Android.App.PendingIntent" />
      </Parameters>
      <Docs>
        <param name="eventReceiver">same PendingIntent that was registed with
                 <c>#registerMediaButtonEventReceiver(PendingIntent)</c>.</param>
        <summary>Unregister the receiver of MEDIA_BUTTON intents.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterMediaButtonEventReceiver(android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterMediaButtonEventReceiver(android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterMediaButtonEventReceiver">
      <MemberSignature Language="F#" Value="abstract member UnregisterMediaButtonEventReceiver : Android.Content.ComponentName -&gt; unit&#xA;override this.UnregisterMediaButtonEventReceiver : Android.Content.ComponentName -&gt; unit" Usage="audioManager.UnregisterMediaButtonEventReceiver eventReceiver" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterMediaButtonEventReceiver (Android.Content.ComponentName? eventReceiver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterMediaButtonEventReceiver(class Android.Content.ComponentName eventReceiver) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterMediaButtonEventReceiver(Android.Content.ComponentName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterMediaButtonEventReceiver", "(Landroid/content/ComponentName;)V", "GetUnregisterMediaButtonEventReceiver_Landroid_content_ComponentName_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventReceiver" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="eventReceiver">same PendingIntent that was registed with
                 <c>#registerMediaButtonEventReceiver(PendingIntent)</c>.</param>
        <summary>Unregister the receiver of MEDIA_BUTTON intents.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterMediaButtonEventReceiver(android.app.PendingIntent)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterMediaButtonEventReceiver(android.app.PendingIntent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterRemoteControlClient">
      <MemberSignature Language="F#" Value="abstract member UnregisterRemoteControlClient : Android.Media.RemoteControlClient -&gt; unit&#xA;override this.UnregisterRemoteControlClient : Android.Media.RemoteControlClient -&gt; unit" Usage="audioManager.UnregisterRemoteControlClient rcClient" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterRemoteControlClient (Android.Media.RemoteControlClient? rcClient);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterRemoteControlClient(class Android.Media.RemoteControlClient rcClient) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterRemoteControlClient(Android.Media.RemoteControlClient)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterRemoteControlClient", "(Landroid/media/RemoteControlClient;)V", "GetUnregisterRemoteControlClient_Landroid_media_RemoteControlClient_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rcClient" Type="Android.Media.RemoteControlClient" />
      </Parameters>
      <Docs>
        <param name="rcClient">The remote control client to unregister.</param>
        <summary>Unregisters the remote control client that was providing information to display on the
            remote controls.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterRemoteControlClient(android.media.RemoteControlClient)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterRemoteControlClient(android.media.RemoteControlClient)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <altmember cref="M:Android.Media.AudioManager.RegisterRemoteControlClient(Android.Media.RemoteControlClient)" />
      </Docs>
    </Member>
    <Member MemberName="UnregisterRemoteController">
      <MemberSignature Language="F#" Value="abstract member UnregisterRemoteController : Android.Media.RemoteController -&gt; unit&#xA;override this.UnregisterRemoteController : Android.Media.RemoteController -&gt; unit" Usage="audioManager.UnregisterRemoteController rctlr" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterRemoteController (Android.Media.RemoteController? rctlr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterRemoteController(class Android.Media.RemoteController rctlr) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.UnregisterRemoteController(Android.Media.RemoteController)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterRemoteController", "(Landroid/media/RemoteController;)V", "GetUnregisterRemoteController_Landroid_media_RemoteController_Handler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rctlr" Type="Android.Media.RemoteController" />
      </Parameters>
      <Docs>
        <param name="rctlr">the object to unregister.</param>
        <summary>Unregisters a <c>RemoteController</c>, causing it to no longer receive
            media metadata and playback state information, and no longer be capable
            of controlling playback.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#unregisterRemoteController(android.media.RemoteController)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.unregisterRemoteController(android.media.RemoteController)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultStreamType">
      <MemberSignature Language="F#" Value="val mutable UseDefaultStreamType : int" Usage="Android.Media.AudioManager.UseDefaultStreamType" />
      <MemberSignature Language="C#" Value="public const int UseDefaultStreamType = -2147483648;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 UseDefaultStreamType = (-2147483648)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.UseDefaultStreamType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("USE_DEFAULT_STREAM_TYPE")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-2147483648</MemberValue>
      <Docs>
        <summary>Suggests using the default stream type.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#USE_DEFAULT_STREAM_TYPE" title="Reference documentation">Java documentation for <code>android.media.AudioManager.USE_DEFAULT_STREAM_TYPE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="VibrateSettingChangedAction">
      <MemberSignature Language="F#" Value="val mutable VibrateSettingChangedAction : string" Usage="Android.Media.AudioManager.VibrateSettingChangedAction" />
      <MemberSignature Language="C#" Value="public const string VibrateSettingChangedAction;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string VibrateSettingChangedAction" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioManager.VibrateSettingChangedAction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("VIBRATE_SETTING_CHANGED_ACTION")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast intent action indicating that the vibrate setting has
            changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#VIBRATE_SETTING_CHANGED_ACTION" title="Reference documentation">Java documentation for <code>android.media.AudioManager.VIBRATE_SETTING_CHANGED_ACTION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="F:Android.Media.AudioManager.ExtraVibrateType" />
        <altmember cref="F:Android.Media.AudioManager.ExtraVibrateSetting" />
      </Docs>
    </Member>
    <Member MemberName="WiredHeadsetOn">
      <MemberSignature Language="F#" Value="member this.WiredHeadsetOn : bool with get, set" Usage="Android.Media.AudioManager.WiredHeadsetOn" />
      <MemberSignature Language="C#" Value="public virtual bool WiredHeadsetOn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WiredHeadsetOn" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioManager.WiredHeadsetOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isWiredHeadsetOn", "()Z", "GetIsWiredHeadsetOnHandler")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setWiredHeadsetOn", "(Z)V", "GetSetWiredHeadsetOn_ZHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="on">set &lt;var&gt;true&lt;/var&gt; to route audio to/from wired
                      headset; &lt;var&gt;false&lt;/var&gt; disable wired headset audio</param>
        <summary>Checks whether a wired headset is connected or not. -or- Sets audio routing to the wired headset on or off.</summary>
        <value>true if a wired headset is connected.
                    false if otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#isWiredHeadsetOn()" title="Reference documentation">Java documentation for <code>android.media.AudioManager.isWiredHeadsetOn()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager#setWiredHeadsetOn(boolean)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.setWiredHeadsetOn(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
  </Members>
</Type>
