<Type Name="MediaCodec" FullName="Android.Media.MediaCodec">
  <TypeSignature Language="C#" Value="public sealed class MediaCodec : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MediaCodec extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaCodec" />
  <TypeSignature Language="F#" Value="type MediaCodec = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/MediaCodec", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/MediaCodec", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="16">
    <summary>MediaCodec class can be used to access low-level media codecs, i.e. encoder/decoder components.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/MediaCodec" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName="BufferFlagCodecConfig">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaCodecBufferFlags BufferFlagCodecConfig = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaCodecBufferFlags BufferFlagCodecConfig = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.BufferFlagCodecConfig" />
      <MemberSignature Language="F#" Value="val mutable BufferFlagCodecConfig : Android.Media.MediaCodecBufferFlags" Usage="Android.Media.MediaCodec.BufferFlagCodecConfig" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("BUFFER_FLAG_CODEC_CONFIG")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("BUFFER_FLAG_CODEC_CONFIG")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecBufferFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecBufferFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecBufferFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>This indicated that the buffer marked as such contains codec
            initialization / codec specific data instead of media data.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#BUFFER_FLAG_CODEC_CONFIG" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.BUFFER_FLAG_CODEC_CONFIG</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="BufferFlagEndOfStream">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaCodecBufferFlags BufferFlagEndOfStream = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaCodecBufferFlags BufferFlagEndOfStream = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.BufferFlagEndOfStream" />
      <MemberSignature Language="F#" Value="val mutable BufferFlagEndOfStream : Android.Media.MediaCodecBufferFlags" Usage="Android.Media.MediaCodec.BufferFlagEndOfStream" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("BUFFER_FLAG_END_OF_STREAM")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("BUFFER_FLAG_END_OF_STREAM")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecBufferFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecBufferFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecBufferFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>This signals the end of stream, i.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#BUFFER_FLAG_END_OF_STREAM" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.BUFFER_FLAG_END_OF_STREAM</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="BufferFlagKeyFrame">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaCodecBufferFlags BufferFlagKeyFrame = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaCodecBufferFlags BufferFlagKeyFrame = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.BufferFlagKeyFrame" />
      <MemberSignature Language="F#" Value="val mutable BufferFlagKeyFrame : Android.Media.MediaCodecBufferFlags" Usage="Android.Media.MediaCodec.BufferFlagKeyFrame" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("BUFFER_FLAG_KEY_FRAME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("BUFFER_FLAG_KEY_FRAME")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecBufferFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecBufferFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecBufferFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>This indicates that the (encoded) buffer marked as such contains
            the data for a key frame.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#BUFFER_FLAG_KEY_FRAME" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.BUFFER_FLAG_KEY_FRAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferFlagPartialFrame">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaCodecBufferFlags BufferFlagPartialFrame = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaCodecBufferFlags BufferFlagPartialFrame = (8)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.BufferFlagPartialFrame" />
      <MemberSignature Language="F#" Value="val mutable BufferFlagPartialFrame : Android.Media.MediaCodecBufferFlags" Usage="Android.Media.MediaCodec.BufferFlagPartialFrame" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("BUFFER_FLAG_PARTIAL_FRAME", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("BUFFER_FLAG_PARTIAL_FRAME", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecBufferFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecBufferFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecBufferFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>This indicates that the buffer only contains part of a frame,
            and the decoder should batch the data until a buffer without
            this flag appears before decoding the frame.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#BUFFER_FLAG_PARTIAL_FRAME" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.BUFFER_FLAG_PARTIAL_FRAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferFlagSyncFrame">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaCodecBufferFlags BufferFlagSyncFrame = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaCodecBufferFlags BufferFlagSyncFrame = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.BufferFlagSyncFrame" />
      <MemberSignature Language="F#" Value="val mutable BufferFlagSyncFrame : Android.Media.MediaCodecBufferFlags" Usage="Android.Media.MediaCodec.BufferFlagSyncFrame" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("BUFFER_FLAG_SYNC_FRAME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("BUFFER_FLAG_SYNC_FRAME")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecBufferFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecBufferFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecBufferFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>This indicates that the (encoded) buffer marked as such contains
            the data for a key frame.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#BUFFER_FLAG_SYNC_FRAME" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.BUFFER_FLAG_SYNC_FRAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="CanonicalName">
      <MemberSignature Language="C#" Value="public string CanonicalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CanonicalName" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.CanonicalName" />
      <MemberSignature Language="F#" Value="member this.CanonicalName : string" Usage="Android.Media.MediaCodec.CanonicalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCanonicalName", "()Ljava/lang/String;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCanonicalName", "()Ljava/lang/String;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the underlying codec name.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getCanonicalName()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getCanonicalName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodecInfo">
      <MemberSignature Language="C#" Value="public Android.Media.MediaCodecInfo CodecInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.MediaCodecInfo CodecInfo" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.CodecInfo" />
      <MemberSignature Language="F#" Value="member this.CodecInfo : Android.Media.MediaCodecInfo" Usage="Android.Media.MediaCodec.CodecInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCodecInfo", "()Landroid/media/MediaCodecInfo;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCodecInfo", "()Landroid/media/MediaCodecInfo;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the codec info.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getCodecInfo()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getCodecInfo()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
        <exception cref="T:Java.Lang.IllegalStateException">if in the Released state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public void Configure (Android.Media.MediaFormat? format, Android.Views.Surface? surface, Android.Media.MediaCodecConfigFlags flags, Android.Media.MediaDescrambler? descrambler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Configure(class Android.Media.MediaFormat format, class Android.Views.Surface surface, valuetype Android.Media.MediaCodecConfigFlags flags, class Android.Media.MediaDescrambler descrambler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.Configure(Android.Media.MediaFormat,Android.Views.Surface,Android.Media.MediaCodecConfigFlags,Android.Media.MediaDescrambler)" />
      <MemberSignature Language="F#" Value="member this.Configure : Android.Media.MediaFormat * Android.Views.Surface * Android.Media.MediaCodecConfigFlags * Android.Media.MediaDescrambler -&gt; unit" Usage="mediaCodec.Configure (format, surface, flags, descrambler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("configure", "(Landroid/media/MediaFormat;Landroid/view/Surface;ILandroid/media/MediaDescrambler;)V", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("configure", "(Landroid/media/MediaFormat;Landroid/view/Surface;ILandroid/media/MediaDescrambler;)V", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Media.MediaFormat" />
        <Parameter Name="surface" Type="Android.Views.Surface" />
        <Parameter Name="flags" Type="Android.Media.MediaCodecConfigFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="descrambler" Type="Android.Media.MediaDescrambler" />
      </Parameters>
      <Docs>
        <param name="format">The format of the input data (decoder) or the desired
                          format of the output data (encoder). Passing <c>null</c>
                          as <c>format</c> is equivalent to passing an
                          <c>MediaFormat#MediaFormat an empty mediaformat</c>.</param>
        <param name="surface">Specify a surface on which to render the output of this
                           decoder. Pass <c>null</c> as <c>surface</c> if the
                           codec does not generate raw video output (e.g. not a video
                           decoder) and/or if you want to configure the codec for
                           <c>ByteBuffer</c> output.</param>
        <param name="flags">Specify <c>#CONFIGURE_FLAG_ENCODE</c> to configure the
                           component as an encoder.</param>
        <param name="descrambler">Specify a descrambler object to facilitate secure
                           descrambling of the media data, or null for non-secure codecs.</param>
        <summary>Configure a component to be used with a descrambler.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#configure(android.media.MediaFormat,%20android.view.Surface,%20int,%20android.media.MediaDescrambler)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.configure(android.media.MediaFormat, android.view.Surface, int, android.media.MediaDescrambler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Configure">
      <MemberSignature Language="C#" Value="public void Configure (Android.Media.MediaFormat? format, Android.Views.Surface? surface, Android.Media.MediaCrypto? crypto, Android.Media.MediaCodecConfigFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Configure(class Android.Media.MediaFormat format, class Android.Views.Surface surface, class Android.Media.MediaCrypto crypto, valuetype Android.Media.MediaCodecConfigFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.Configure(Android.Media.MediaFormat,Android.Views.Surface,Android.Media.MediaCrypto,Android.Media.MediaCodecConfigFlags)" />
      <MemberSignature Language="F#" Value="member this.Configure : Android.Media.MediaFormat * Android.Views.Surface * Android.Media.MediaCrypto * Android.Media.MediaCodecConfigFlags -&gt; unit" Usage="mediaCodec.Configure (format, surface, crypto, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("configure", "(Landroid/media/MediaFormat;Landroid/view/Surface;Landroid/media/MediaCrypto;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("configure", "(Landroid/media/MediaFormat;Landroid/view/Surface;Landroid/media/MediaCrypto;I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Media.MediaFormat" />
        <Parameter Name="surface" Type="Android.Views.Surface" />
        <Parameter Name="crypto" Type="Android.Media.MediaCrypto" />
        <Parameter Name="flags" Type="Android.Media.MediaCodecConfigFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="crypto">Specify a crypto object to facilitate secure decryption
                of the media data. Pass <c>null</c> as <c>crypto</c> for
                non-secure codecs.</param>
        <param name="format">The format of the input data (decoder) or the desired
                          format of the output data (encoder). Passing <c>null</c>
                          as <c>format</c> is equivalent to passing an
                          <c>MediaFormat#MediaFormat an empty mediaformat</c>.</param>
        <param name="surface">Specify a surface on which to render the output of this
                           decoder. Pass <c>null</c> as <c>surface</c> if the
                           codec does not generate raw video output (e.g. not a video
                           decoder) and/or if you want to configure the codec for
                           <c>ByteBuffer</c> output.</param>
        <param name="flags">Specify <c>#CONFIGURE_FLAG_ENCODE</c> to configure the
                           component as an encoder.</param>
        <param name="descrambler">Specify a descrambler object to facilitate secure
                           descrambling of the media data, or null for non-secure codecs.</param>
        <summary>Configure a component to be used with a descrambler.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#configure(android.media.MediaFormat,%20android.view.Surface,%20int,%20android.media.MediaDescrambler)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.configure(android.media.MediaFormat, android.view.Surface, int, android.media.MediaDescrambler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the surface has been released (or is invalid),
 or the format is unacceptable (e.g. missing a mandatory key),
 or the flags are not set properly
 (e.g. missing <see cref="F:Android.Media.MediaCodec.ConfigureFlagEncode" /> for an encoder).</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Uninitialized state.</exception>
        <exception cref="T:Android.Media.MediaCodec.CryptoException">upon DRM error.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ConfigureFlagEncode">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaCodecConfigFlags ConfigureFlagEncode = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaCodecConfigFlags ConfigureFlagEncode = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.ConfigureFlagEncode" />
      <MemberSignature Language="F#" Value="val mutable ConfigureFlagEncode : Android.Media.MediaCodecConfigFlags" Usage="Android.Media.MediaCodec.ConfigureFlagEncode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CONFIGURE_FLAG_ENCODE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CONFIGURE_FLAG_ENCODE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecConfigFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecConfigFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecConfigFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>If this codec is to be used as an encoder, pass this flag.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#CONFIGURE_FLAG_ENCODE" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.CONFIGURE_FLAG_ENCODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ConfigureFlagUseBlockModel">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaCodecConfigFlags ConfigureFlagUseBlockModel = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaCodecConfigFlags ConfigureFlagUseBlockModel = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.ConfigureFlagUseBlockModel" />
      <MemberSignature Language="F#" Value="val mutable ConfigureFlagUseBlockModel : Android.Media.MediaCodecConfigFlags" Usage="Android.Media.MediaCodec.ConfigureFlagUseBlockModel" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CONFIGURE_FLAG_USE_BLOCK_MODEL", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CONFIGURE_FLAG_USE_BLOCK_MODEL", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecConfigFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecConfigFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecConfigFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>If this codec is to be used with <c>LinearBlock</c> and/or <c>HardwareBuffer</c>, pass this flag.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#CONFIGURE_FLAG_USE_BLOCK_MODEL" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.CONFIGURE_FLAG_USE_BLOCK_MODEL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateByCodecName">
      <MemberSignature Language="C#" Value="public static Android.Media.MediaCodec CreateByCodecName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.MediaCodec CreateByCodecName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.CreateByCodecName(System.String)" />
      <MemberSignature Language="F#" Value="static member CreateByCodecName : string -&gt; Android.Media.MediaCodec" Usage="Android.Media.MediaCodec.CreateByCodecName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createByCodecName", "(Ljava/lang/String;)Landroid/media/MediaCodec;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createByCodecName", "(Ljava/lang/String;)Landroid/media/MediaCodec;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the codec to be instantiated.</param>
        <summary>If you know the exact name of the component you want to instantiate
            use this method to instantiate it.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#createByCodecName(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.createByCodecName(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.IO.IOException">if the codec cannot be created.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if name is not valid.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if name is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDecoderByType">
      <MemberSignature Language="C#" Value="public static Android.Media.MediaCodec CreateDecoderByType (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.MediaCodec CreateDecoderByType(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.CreateDecoderByType(System.String)" />
      <MemberSignature Language="F#" Value="static member CreateDecoderByType : string -&gt; Android.Media.MediaCodec" Usage="Android.Media.MediaCodec.CreateDecoderByType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createDecoderByType", "(Ljava/lang/String;)Landroid/media/MediaCodec;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createDecoderByType", "(Ljava/lang/String;)Landroid/media/MediaCodec;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">The mime type of the input data.</param>
        <summary>Instantiate the preferred decoder supporting input data of the given mime type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#createDecoderByType(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.createDecoderByType(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.IO.IOException">if the codec cannot be created.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if type is not a valid mime type.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if type is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateEncoderByType">
      <MemberSignature Language="C#" Value="public static Android.Media.MediaCodec CreateEncoderByType (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.MediaCodec CreateEncoderByType(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.CreateEncoderByType(System.String)" />
      <MemberSignature Language="F#" Value="static member CreateEncoderByType : string -&gt; Android.Media.MediaCodec" Usage="Android.Media.MediaCodec.CreateEncoderByType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createEncoderByType", "(Ljava/lang/String;)Landroid/media/MediaCodec;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createEncoderByType", "(Ljava/lang/String;)Landroid/media/MediaCodec;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodec</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">The desired mime type of the output data.</param>
        <summary>Instantiate the preferred encoder supporting output data of the given mime type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#createEncoderByType(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.createEncoderByType(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.IO.IOException">if the codec cannot be created.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if type is not a valid mime type.</exception>
        <exception cref="T:Java.Lang.NullPointerException">if type is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInputSurface">
      <MemberSignature Language="C#" Value="public Android.Views.Surface CreateInputSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.Surface CreateInputSurface() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.CreateInputSurface" />
      <MemberSignature Language="F#" Value="member this.CreateInputSurface : unit -&gt; Android.Views.Surface" Usage="mediaCodec.CreateInputSurface " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createInputSurface", "()Landroid/view/Surface;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createInputSurface", "()Landroid/view/Surface;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Surface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Requests a Surface to use as the input to an encoder, in place of input buffers.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#createInputSurface()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.createInputSurface()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Configured state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreatePersistentInputSurface">
      <MemberSignature Language="C#" Value="public static Android.Views.Surface CreatePersistentInputSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Views.Surface CreatePersistentInputSurface() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.CreatePersistentInputSurface" />
      <MemberSignature Language="F#" Value="static member CreatePersistentInputSurface : unit -&gt; Android.Views.Surface" Usage="Android.Media.MediaCodec.CreatePersistentInputSurface " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createPersistentInputSurface", "()Landroid/view/Surface;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createPersistentInputSurface", "()Landroid/view/Surface;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Surface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create a persistent input surface that can be used with codecs that normally have an input
            surface, such as video encoders.</summary>
        <returns>an input surface that can be used with <c>#setInputSurface</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#createPersistentInputSurface()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.createPersistentInputSurface()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptoModeAesCbc">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaCodecCryptoMode CryptoModeAesCbc = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaCodecCryptoMode CryptoModeAesCbc = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.CryptoModeAesCbc" />
      <MemberSignature Language="F#" Value="val mutable CryptoModeAesCbc : Android.Media.MediaCodecCryptoMode" Usage="Android.Media.MediaCodec.CryptoModeAesCbc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CRYPTO_MODE_AES_CBC", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CRYPTO_MODE_AES_CBC", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecCryptoMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecCryptoMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecCryptoMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CryptoModeAesCtr">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaCodecCryptoMode CryptoModeAesCtr = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaCodecCryptoMode CryptoModeAesCtr = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.CryptoModeAesCtr" />
      <MemberSignature Language="F#" Value="val mutable CryptoModeAesCtr : Android.Media.MediaCodecCryptoMode" Usage="Android.Media.MediaCodec.CryptoModeAesCtr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CRYPTO_MODE_AES_CTR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CRYPTO_MODE_AES_CTR")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecCryptoMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecCryptoMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecCryptoMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="CryptoModeUnencrypted">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaCodecCryptoMode CryptoModeUnencrypted = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaCodecCryptoMode CryptoModeUnencrypted = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.CryptoModeUnencrypted" />
      <MemberSignature Language="F#" Value="val mutable CryptoModeUnencrypted : Android.Media.MediaCodecCryptoMode" Usage="Android.Media.MediaCodec.CryptoModeUnencrypted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CRYPTO_MODE_UNENCRYPTED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CRYPTO_MODE_UNENCRYPTED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecCryptoMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecCryptoMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecCryptoMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="DequeueInputBuffer">
      <MemberSignature Language="C#" Value="public int DequeueInputBuffer (long timeoutUs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DequeueInputBuffer(int64 timeoutUs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.DequeueInputBuffer(System.Int64)" />
      <MemberSignature Language="F#" Value="member this.DequeueInputBuffer : int64 -&gt; int" Usage="mediaCodec.DequeueInputBuffer timeoutUs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dequeueInputBuffer", "(J)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dequeueInputBuffer", "(J)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeoutUs" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timeoutUs">The timeout in microseconds, a negative timeout indicates "infinite".</param>
        <summary>Returns the index of an input buffer to be filled with valid data
            or -1 if no such buffer is currently available.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#dequeueInputBuffer(long)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.dequeueInputBuffer(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state,
         or codec is configured in asynchronous mode.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DequeueOutputBuffer">
      <MemberSignature Language="C#" Value="public int DequeueOutputBuffer (Android.Media.MediaCodec.BufferInfo info, long timeoutUs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DequeueOutputBuffer(class Android.Media.MediaCodec/BufferInfo info, int64 timeoutUs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.DequeueOutputBuffer(Android.Media.MediaCodec.BufferInfo,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.DequeueOutputBuffer : Android.Media.MediaCodec.BufferInfo * int64 -&gt; int" Usage="mediaCodec.DequeueOutputBuffer (info, timeoutUs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dequeueOutputBuffer", "(Landroid/media/MediaCodec$BufferInfo;J)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dequeueOutputBuffer", "(Landroid/media/MediaCodec$BufferInfo;J)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Media.MediaCodec+BufferInfo" />
        <Parameter Name="timeoutUs" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="info">Will be filled with buffer meta data.</param>
        <param name="timeoutUs">The timeout in microseconds, a negative timeout indicates "infinite".</param>
        <summary>Dequeue an output buffer, block at most "timeoutUs" microseconds.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#dequeueOutputBuffer(android.media.BufferInfo,%20long)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.dequeueOutputBuffer(android.media.BufferInfo, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state,
         or codec is configured in asynchronous mode.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.Flush" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="mediaCodec.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flush", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("flush", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Flush both input and output ports of the component.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#flush()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.flush()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInputBuffer">
      <MemberSignature Language="C#" Value="public Java.Nio.ByteBuffer? GetInputBuffer (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.ByteBuffer GetInputBuffer(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.GetInputBuffer(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetInputBuffer : int -&gt; Java.Nio.ByteBuffer" Usage="mediaCodec.GetInputBuffer index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInputBuffer", "(I)Ljava/nio/ByteBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInputBuffer", "(I)Ljava/nio/ByteBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of a client-owned input buffer previously
                         returned from a call to <c>#dequeueInputBuffer</c>,
                         or received via an onInputBufferAvailable callback.</param>
        <summary>Returns a <c>java.nio.Buffer#clear cleared</c>, writable ByteBuffer
            object for a dequeued input buffer index to contain the input data.</summary>
        <returns>the input buffer, or null if the index is not a dequeued
            input buffer, or if the codec is configured for surface input.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getInputBuffer(int)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getInputBuffer(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInputBuffers">
      <MemberSignature Language="C#" Value="public Java.Nio.ByteBuffer[] GetInputBuffers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.ByteBuffer[] GetInputBuffers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.GetInputBuffers" />
      <MemberSignature Language="F#" Value="member this.GetInputBuffers : unit -&gt; Java.Nio.ByteBuffer[]" Usage="mediaCodec.GetInputBuffers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInputBuffers", "()[Ljava/nio/ByteBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInputBuffers", "()[Ljava/nio/ByteBuffer;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the set of input buffers.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getInputBuffers()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getInputBuffers()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state,
         or codec is configured in asynchronous mode.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetInputImage">
      <MemberSignature Language="C#" Value="public Android.Media.Image? GetInputImage (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.Image GetInputImage(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.GetInputImage(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetInputImage : int -&gt; Android.Media.Image" Usage="mediaCodec.GetInputImage index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInputImage", "(I)Landroid/media/Image;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInputImage", "(I)Landroid/media/Image;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of a client-owned input buffer previously
                         returned from a call to <c>#dequeueInputBuffer</c>,
                         or received via an onInputBufferAvailable callback.</param>
        <summary>Returns a writable Image object for a dequeued input buffer
            index to contain the raw input video frame.</summary>
        <returns>the input image, or null if the index is not a
            dequeued input buffer, or not a ByteBuffer that contains a
            raw image.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getInputImage(int)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getInputImage(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutputBuffer">
      <MemberSignature Language="C#" Value="public Java.Nio.ByteBuffer? GetOutputBuffer (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.ByteBuffer GetOutputBuffer(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.GetOutputBuffer(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetOutputBuffer : int -&gt; Java.Nio.ByteBuffer" Usage="mediaCodec.GetOutputBuffer index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutputBuffer", "(I)Ljava/nio/ByteBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutputBuffer", "(I)Ljava/nio/ByteBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of a client-owned output buffer previously
                         returned from a call to <c>#dequeueOutputBuffer</c>,
                         or received via an onOutputBufferAvailable callback.</param>
        <summary>Returns a read-only ByteBuffer for a dequeued output buffer
            index.</summary>
        <returns>the output buffer, or null if the index is not a dequeued
            output buffer, or the codec is configured with an output surface.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getOutputBuffer(int)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getOutputBuffer(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutputBuffers">
      <MemberSignature Language="C#" Value="public Java.Nio.ByteBuffer[] GetOutputBuffers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.ByteBuffer[] GetOutputBuffers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.GetOutputBuffers" />
      <MemberSignature Language="F#" Value="member this.GetOutputBuffers : unit -&gt; Java.Nio.ByteBuffer[]" Usage="mediaCodec.GetOutputBuffers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutputBuffers", "()[Ljava/nio/ByteBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutputBuffers", "()[Ljava/nio/ByteBuffer;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieve the set of output buffers.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getOutputBuffers()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getOutputBuffers()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state,
         or codec is configured in asynchronous mode.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetOutputFormat">
      <MemberSignature Language="C#" Value="public Android.Media.MediaFormat GetOutputFormat (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.MediaFormat GetOutputFormat(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.GetOutputFormat(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetOutputFormat : int -&gt; Android.Media.MediaFormat" Usage="mediaCodec.GetOutputFormat index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutputFormat", "(I)Landroid/media/MediaFormat;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutputFormat", "(I)Landroid/media/MediaFormat;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of a client-owned input buffer previously
              returned from a call to <see cref="M:Android.Media.MediaCodec.DequeueInputBuffer(System.Int64)" />.</param>
        <summary>Call this after dequeueOutputBuffer signals a format change by returning
            <c>#INFO_OUTPUT_FORMAT_CHANGED</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getOutputFormat()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getOutputFormat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputFrame">
      <MemberSignature Language="C#" Value="public Android.Media.MediaCodec.OutputFrame GetOutputFrame (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.MediaCodec/OutputFrame GetOutputFrame(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.GetOutputFrame(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetOutputFrame : int -&gt; Android.Media.MediaCodec.OutputFrame" Usage="mediaCodec.GetOutputFrame index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutputFrame", "(I)Landroid/media/MediaCodec$OutputFrame;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutputFrame", "(I)Landroid/media/MediaCodec$OutputFrame;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodec+OutputFrame</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">output buffer index from
                         <c>Callback#onOutputBufferAvailable</c></param>
        <summary>Returns an <c>OutputFrame</c> object.</summary>
        <returns>
          <c>OutputFrame</c> object describing the output buffer</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getOutputFrame(int)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getOutputFrame(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOutputImage">
      <MemberSignature Language="C#" Value="public Android.Media.Image? GetOutputImage (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.Image GetOutputImage(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.GetOutputImage(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetOutputImage : int -&gt; Android.Media.Image" Usage="mediaCodec.GetOutputImage index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOutputImage", "(I)Landroid/media/Image;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOutputImage", "(I)Landroid/media/Image;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">The index of a client-owned output buffer previously
                         returned from a call to <c>#dequeueOutputBuffer</c>,
                         or received via an onOutputBufferAvailable callback.</param>
        <summary>Returns a read-only Image object for a dequeued output buffer
            index that contains the raw video frame.</summary>
        <returns>the output image, or null if the index is not a
            dequeued output buffer, not a raw video frame, or if the codec
            was configured with an output surface.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getOutputImage(int)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getOutputImage(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParameterDescriptor">
      <MemberSignature Language="C#" Value="public Android.Media.MediaCodec.ParameterDescriptor? GetParameterDescriptor (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.MediaCodec/ParameterDescriptor GetParameterDescriptor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.GetParameterDescriptor(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetParameterDescriptor : string -&gt; Android.Media.MediaCodec.ParameterDescriptor" Usage="mediaCodec.GetParameterDescriptor name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getParameterDescriptor", "(Ljava/lang/String;)Landroid/media/MediaCodec$ParameterDescriptor;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getParameterDescriptor", "(Ljava/lang/String;)Landroid/media/MediaCodec$ParameterDescriptor;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodec+ParameterDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">name of the parameter to describe, typically one from
                        <c>#getSupportedVendorParameters</c>.</param>
        <summary>Describe a parameter with the name.</summary>
        <returns>
          <c>ParameterDescriptor</c> object that describes the parameter.
                    <c>null</c> if unrecognized / not able to describe.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getParameterDescriptor(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getParameterDescriptor(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueueRequest">
      <MemberSignature Language="C#" Value="public Android.Media.MediaCodec.QueueRequest GetQueueRequest (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.MediaCodec/QueueRequest GetQueueRequest(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.GetQueueRequest(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetQueueRequest : int -&gt; Android.Media.MediaCodec.QueueRequest" Usage="mediaCodec.GetQueueRequest index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getQueueRequest", "(I)Landroid/media/MediaCodec$QueueRequest;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getQueueRequest", "(I)Landroid/media/MediaCodec$QueueRequest;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodec+QueueRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">input slot index from
                         <c>Callback#onInputBufferAvailable</c></param>
        <summary>Return a <c>QueueRequest</c> object for an input slot index.</summary>
        <returns>queue request object</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getQueueRequest(int)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getQueueRequest(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InfoOutputBuffersChanged">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaCodecInfoState InfoOutputBuffersChanged = -3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaCodecInfoState InfoOutputBuffersChanged = (-3)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.InfoOutputBuffersChanged" />
      <MemberSignature Language="F#" Value="val mutable InfoOutputBuffersChanged : Android.Media.MediaCodecInfoState" Usage="Android.Media.MediaCodec.InfoOutputBuffersChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INFO_OUTPUT_BUFFERS_CHANGED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INFO_OUTPUT_BUFFERS_CHANGED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecInfoState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecInfoState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecInfoState</ReturnType>
      </ReturnValue>
      <MemberValue>-3</MemberValue>
      <Docs>
        <summary>The output buffers have changed, the client must refer to the new
            set of output buffers returned by <c>#getOutputBuffers</c> from
            this point on.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#INFO_OUTPUT_BUFFERS_CHANGED" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.INFO_OUTPUT_BUFFERS_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="InfoOutputFormatChanged">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaCodecInfoState InfoOutputFormatChanged = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaCodecInfoState InfoOutputFormatChanged = (-2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.InfoOutputFormatChanged" />
      <MemberSignature Language="F#" Value="val mutable InfoOutputFormatChanged : Android.Media.MediaCodecInfoState" Usage="Android.Media.MediaCodec.InfoOutputFormatChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INFO_OUTPUT_FORMAT_CHANGED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INFO_OUTPUT_FORMAT_CHANGED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecInfoState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecInfoState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecInfoState</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>The output format has changed, subsequent data will follow the new
            format.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#INFO_OUTPUT_FORMAT_CHANGED" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.INFO_OUTPUT_FORMAT_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="InfoTryAgainLater">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaCodecInfoState InfoTryAgainLater = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaCodecInfoState InfoTryAgainLater = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.InfoTryAgainLater" />
      <MemberSignature Language="F#" Value="val mutable InfoTryAgainLater : Android.Media.MediaCodecInfoState" Usage="Android.Media.MediaCodec.InfoTryAgainLater" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INFO_TRY_AGAIN_LATER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INFO_TRY_AGAIN_LATER")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecInfoState enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaCodecInfoState enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecInfoState</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>If a non-negative timeout had been specified in the call
            to <c>#dequeueOutputBuffer</c>, indicates that the call timed out.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#INFO_TRY_AGAIN_LATER" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.INFO_TRY_AGAIN_LATER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="InputFormat">
      <MemberSignature Language="C#" Value="public Android.Media.MediaFormat InputFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.MediaFormat InputFormat" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.InputFormat" />
      <MemberSignature Language="F#" Value="member this.InputFormat : Android.Media.MediaFormat" Usage="Android.Media.MediaCodec.InputFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInputFormat", "()Landroid/media/MediaFormat;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInputFormat", "()Landroid/media/MediaFormat;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Call this after <c>#configure</c> returns successfully to
            get the input format accepted by the codec.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getInputFormat()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getInputFormat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 21" />
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing or
                               Configured state.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.MediaCodec.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapHardwareBuffer">
      <MemberSignature Language="C#" Value="public static Android.Media.Image? MapHardwareBuffer (Android.Hardware.HardwareBuffer hardwareBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.Image MapHardwareBuffer(class Android.Hardware.HardwareBuffer hardwareBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.MapHardwareBuffer(Android.Hardware.HardwareBuffer)" />
      <MemberSignature Language="F#" Value="static member MapHardwareBuffer : Android.Hardware.HardwareBuffer -&gt; Android.Media.Image" Usage="Android.Media.MediaCodec.MapHardwareBuffer hardwareBuffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("mapHardwareBuffer", "(Landroid/hardware/HardwareBuffer;)Landroid/media/Image;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("mapHardwareBuffer", "(Landroid/hardware/HardwareBuffer;)Landroid/media/Image;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hardwareBuffer" Type="Android.Hardware.HardwareBuffer" />
      </Parameters>
      <Docs>
        <param name="hardwareBuffer">
          <c>HardwareBuffer</c> to map.</param>
        <summary>Map a <c>HardwareBuffer</c> object into <c>Image</c>, so that the content of the buffer is
            accessible.</summary>
        <returns>Mapped <c>Image</c> object, or null if the buffer is not mappable.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#mapHardwareBuffer(android.hardware.HardwareBuffer)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.mapHardwareBuffer(android.hardware.HardwareBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metrics">
      <MemberSignature Language="C#" Value="public Android.OS.PersistableBundle? Metrics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.PersistableBundle Metrics" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.Metrics" />
      <MemberSignature Language="F#" Value="member this.Metrics : Android.OS.PersistableBundle" Usage="Android.Media.MediaCodec.Metrics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMetrics", "()Landroid/os/PersistableBundle;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMetrics", "()Landroid/os/PersistableBundle;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.PersistableBundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return Metrics data about the current codec instance.</summary>
        <value>a <c>PersistableBundle</c> containing the set of attributes and values
            available for the media being handled by this instance of MediaCodec
            The attributes are descibed in <c>MetricsConstants</c>.
            
            Additional vendor-specific fields may also be present in
            the return value.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getMetrics()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getMetrics()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Android.Media.MediaCodec.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the codec name.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getName()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
        <exception cref="T:Java.Lang.IllegalStateException">if in the Released state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OutputFormat">
      <MemberSignature Language="C#" Value="public Android.Media.MediaFormat OutputFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.MediaFormat OutputFormat" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.OutputFormat" />
      <MemberSignature Language="F#" Value="member this.OutputFormat : Android.Media.MediaFormat" Usage="Android.Media.MediaCodec.OutputFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOutputFormat", "()Landroid/media/MediaFormat;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOutputFormat", "()Landroid/media/MediaFormat;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Call this after dequeueOutputBuffer signals a format change by returning
            <c>#INFO_OUTPUT_FORMAT_CHANGED</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getOutputFormat()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getOutputFormat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing or
                               Configured state.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ParameterKeyHdr10PlusInfo">
      <MemberSignature Language="C#" Value="public const string ParameterKeyHdr10PlusInfo;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ParameterKeyHdr10PlusInfo" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.ParameterKeyHdr10PlusInfo" />
      <MemberSignature Language="F#" Value="val mutable ParameterKeyHdr10PlusInfo : string" Usage="Android.Media.MediaCodec.ParameterKeyHdr10PlusInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PARAMETER_KEY_HDR10_PLUS_INFO", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PARAMETER_KEY_HDR10_PLUS_INFO", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Set the HDR10+ metadata on the next queued input frame.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#PARAMETER_KEY_HDR10_PLUS_INFO" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.PARAMETER_KEY_HDR10_PLUS_INFO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterKeyLowLatency">
      <MemberSignature Language="C#" Value="public const string ParameterKeyLowLatency;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ParameterKeyLowLatency" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.ParameterKeyLowLatency" />
      <MemberSignature Language="F#" Value="val mutable ParameterKeyLowLatency : string" Usage="Android.Media.MediaCodec.ParameterKeyLowLatency" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PARAMETER_KEY_LOW_LATENCY", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PARAMETER_KEY_LOW_LATENCY", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Enable/disable low latency decoding mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#PARAMETER_KEY_LOW_LATENCY" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.PARAMETER_KEY_LOW_LATENCY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterKeyOffsetTime">
      <MemberSignature Language="C#" Value="public const string ParameterKeyOffsetTime;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ParameterKeyOffsetTime" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.ParameterKeyOffsetTime" />
      <MemberSignature Language="F#" Value="val mutable ParameterKeyOffsetTime : string" Usage="Android.Media.MediaCodec.ParameterKeyOffsetTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PARAMETER_KEY_OFFSET_TIME", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PARAMETER_KEY_OFFSET_TIME", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Specify an offset (in micro-second) to be added on top of the timestamps
            onward.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#PARAMETER_KEY_OFFSET_TIME" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.PARAMETER_KEY_OFFSET_TIME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterKeyRequestSyncFrame">
      <MemberSignature Language="C#" Value="public const string ParameterKeyRequestSyncFrame;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ParameterKeyRequestSyncFrame" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.ParameterKeyRequestSyncFrame" />
      <MemberSignature Language="F#" Value="val mutable ParameterKeyRequestSyncFrame : string" Usage="Android.Media.MediaCodec.ParameterKeyRequestSyncFrame" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PARAMETER_KEY_REQUEST_SYNC_FRAME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PARAMETER_KEY_REQUEST_SYNC_FRAME")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Request that the encoder produce a sync frame "soon".</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#PARAMETER_KEY_REQUEST_SYNC_FRAME" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.PARAMETER_KEY_REQUEST_SYNC_FRAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterKeySuspend">
      <MemberSignature Language="C#" Value="public const string ParameterKeySuspend;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ParameterKeySuspend" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.ParameterKeySuspend" />
      <MemberSignature Language="F#" Value="val mutable ParameterKeySuspend : string" Usage="Android.Media.MediaCodec.ParameterKeySuspend" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PARAMETER_KEY_SUSPEND")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PARAMETER_KEY_SUSPEND")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Temporarily suspend/resume encoding of input data.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#PARAMETER_KEY_SUSPEND" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.PARAMETER_KEY_SUSPEND</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterKeySuspendTime">
      <MemberSignature Language="C#" Value="public const string ParameterKeySuspendTime;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ParameterKeySuspendTime" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.ParameterKeySuspendTime" />
      <MemberSignature Language="F#" Value="val mutable ParameterKeySuspendTime : string" Usage="Android.Media.MediaCodec.ParameterKeySuspendTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PARAMETER_KEY_SUSPEND_TIME", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PARAMETER_KEY_SUSPEND_TIME", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>When <c>#PARAMETER_KEY_SUSPEND</c> is present, the client can also
            optionally use this key to specify the timestamp (in micro-second)
            at which the suspend/resume operation takes effect.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#PARAMETER_KEY_SUSPEND_TIME" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.PARAMETER_KEY_SUSPEND_TIME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterKeyTunnelPeek">
      <MemberSignature Language="C#" Value="public const string ParameterKeyTunnelPeek;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ParameterKeyTunnelPeek" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.ParameterKeyTunnelPeek" />
      <MemberSignature Language="F#" Value="val mutable ParameterKeyTunnelPeek : string" Usage="Android.Media.MediaCodec.ParameterKeyTunnelPeek" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PARAMETER_KEY_TUNNEL_PEEK", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PARAMETER_KEY_TUNNEL_PEEK", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Control video peek of the first frame when a codec is configured for tunnel mode with
            <c>MediaFormat#KEY_AUDIO_SESSION_ID</c> while the <c>AudioTrack</c> is paused.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#PARAMETER_KEY_TUNNEL_PEEK" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.PARAMETER_KEY_TUNNEL_PEEK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParameterKeyVideoBitrate">
      <MemberSignature Language="C#" Value="public const string ParameterKeyVideoBitrate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ParameterKeyVideoBitrate" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.ParameterKeyVideoBitrate" />
      <MemberSignature Language="F#" Value="val mutable ParameterKeyVideoBitrate : string" Usage="Android.Media.MediaCodec.ParameterKeyVideoBitrate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PARAMETER_KEY_VIDEO_BITRATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PARAMETER_KEY_VIDEO_BITRATE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Change a video encoder's target bitrate on the fly.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#PARAMETER_KEY_VIDEO_BITRATE" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.PARAMETER_KEY_VIDEO_BITRATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueInputBuffer">
      <MemberSignature Language="C#" Value="public void QueueInputBuffer (int index, int offset, int size, long presentationTimeUs, Android.Media.MediaCodecBufferFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueueInputBuffer(int32 index, int32 offset, int32 size, int64 presentationTimeUs, valuetype Android.Media.MediaCodecBufferFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.QueueInputBuffer(System.Int32,System.Int32,System.Int32,System.Int64,Android.Media.MediaCodecBufferFlags)" />
      <MemberSignature Language="F#" Value="member this.QueueInputBuffer : int * int * int * int64 * Android.Media.MediaCodecBufferFlags -&gt; unit" Usage="mediaCodec.QueueInputBuffer (index, offset, size, presentationTimeUs, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queueInputBuffer", "(IIIJI)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queueInputBuffer", "(IIIJI)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="presentationTimeUs" Type="System.Int64" />
        <Parameter Name="flags" Type="Android.Media.MediaCodecBufferFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index of a client-owned input buffer previously returned
                         in a call to <c>#dequeueInputBuffer</c>.</param>
        <param name="offset">The byte offset into the input buffer at which the data starts.</param>
        <param name="size">The number of bytes of valid input data.</param>
        <param name="presentationTimeUs">The presentation timestamp in microseconds for this
                                      buffer. This is normally the media time at which this
                                      buffer should be presented (rendered). When using an output
                                      surface, this will be propagated as the <c>SurfaceTexture#getTimestamp timestamp</c> for the frame (after
                                      conversion to nanoseconds).</param>
        <param name="flags">A bitmask of flags
                         <c>#BUFFER_FLAG_CODEC_CONFIG</c> and <c>#BUFFER_FLAG_END_OF_STREAM</c>.
                         While not prohibited, most codecs do not use the
                         <c>#BUFFER_FLAG_KEY_FRAME</c> flag for input buffers.</param>
        <summary>After filling a range of the input buffer at the specified index
            submit it to the component.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#queueInputBuffer(int,%20int,%20int,%20long,%20int)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.queueInputBuffer(int, int, int, long, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.</exception>
        <exception cref="T:Android.Media.MediaCodec.CryptoException">if a crypto object has been specified in
         <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Media MediaCodec Configure(Android Media MediaFormat,Android Views Surface,Android Views Surface,Android Views Surface)';scope=Xamarin" title="M:Android.Media.MediaCodec.Configure(Android.Media.MediaFormat,Android.Views.Surface,Android.Views.Surface,Android.Views.Surface)">M:Android.Media.MediaCodec.Configure(Android.Media.MediaFormat,Android.Views.Surface,Android.Views.Surface,Android.Views.Surface)</a></format></exception>
      </Docs>
    </Member>
    <Member MemberName="QueueSecureInputBuffer">
      <MemberSignature Language="C#" Value="public void QueueSecureInputBuffer (int index, int offset, Android.Media.MediaCodec.CryptoInfo info, long presentationTimeUs, Android.Media.MediaCodecBufferFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueueSecureInputBuffer(int32 index, int32 offset, class Android.Media.MediaCodec/CryptoInfo info, int64 presentationTimeUs, valuetype Android.Media.MediaCodecBufferFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.QueueSecureInputBuffer(System.Int32,System.Int32,Android.Media.MediaCodec.CryptoInfo,System.Int64,Android.Media.MediaCodecBufferFlags)" />
      <MemberSignature Language="F#" Value="member this.QueueSecureInputBuffer : int * int * Android.Media.MediaCodec.CryptoInfo * int64 * Android.Media.MediaCodecBufferFlags -&gt; unit" Usage="mediaCodec.QueueSecureInputBuffer (index, offset, info, presentationTimeUs, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queueSecureInputBuffer", "(IILandroid/media/MediaCodec$CryptoInfo;JI)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queueSecureInputBuffer", "(IILandroid/media/MediaCodec$CryptoInfo;JI)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="info" Type="Android.Media.MediaCodec+CryptoInfo" />
        <Parameter Name="presentationTimeUs" Type="System.Int64" />
        <Parameter Name="flags" Type="Android.Media.MediaCodecBufferFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="index">The index of a client-owned input buffer previously returned
                         in a call to <c>#dequeueInputBuffer</c>.</param>
        <param name="offset">The byte offset into the input buffer at which the data starts.</param>
        <param name="info">Metadata required to facilitate decryption, the object can be
                        reused immediately after this call returns.</param>
        <param name="presentationTimeUs">The presentation timestamp in microseconds for this
                                      buffer. This is normally the media time at which this
                                      buffer should be presented (rendered).</param>
        <param name="flags">A bitmask of flags
                         <c>#BUFFER_FLAG_CODEC_CONFIG</c> and <c>#BUFFER_FLAG_END_OF_STREAM</c>.
                         While not prohibited, most codecs do not use the
                         <c>#BUFFER_FLAG_KEY_FRAME</c> flag for input buffers.</param>
        <summary>Similar to <c>#queueInputBuffer queueInputBuffer</c> but submits a buffer that is
            potentially encrypted.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#queueSecureInputBuffer(int,%20int,%20android.media.CryptoInfo,%20long,%20int)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.queueSecureInputBuffer(int, int, android.media.CryptoInfo, long, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.</exception>
        <exception cref="T:Android.Media.MediaCodec.CryptoException">if an error occurs while attempting to decrypt the buffer.
              An error code associated with the exception helps identify the
              reason for the failure.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.Release" />
      <MemberSignature Language="F#" Value="member this.Release : unit -&gt; unit" Usage="mediaCodec.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Free up resources used by the codec instance.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#release()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseOutputBuffer">
      <MemberSignature Language="C#" Value="public void ReleaseOutputBuffer (int index, bool render);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseOutputBuffer(int32 index, bool render) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.ReleaseOutputBuffer(System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.ReleaseOutputBuffer : int * bool -&gt; unit" Usage="mediaCodec.ReleaseOutputBuffer (index, render)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("releaseOutputBuffer", "(IZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("releaseOutputBuffer", "(IZ)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="render" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="render">If a valid surface was specified when configuring the codec,
               passing true renders this output buffer to the surface.</param>
        <param name="index">The index of a client-owned output buffer previously returned
                         from a call to <c>#dequeueOutputBuffer</c>.</param>
        <param name="renderTimestampNs">The timestamp to associate with this buffer when
                         it is sent to the Surface.</param>
        <summary>If you are done with a buffer, use this call to update its surface timestamp
            and return it to the codec to render it on the output surface.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#releaseOutputBuffer(int,%20long)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.releaseOutputBuffer(int, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ReleaseOutputBuffer">
      <MemberSignature Language="C#" Value="public void ReleaseOutputBuffer (int index, long renderTimestampNs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseOutputBuffer(int32 index, int64 renderTimestampNs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.ReleaseOutputBuffer(System.Int32,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.ReleaseOutputBuffer : int * int64 -&gt; unit" Usage="mediaCodec.ReleaseOutputBuffer (index, renderTimestampNs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("releaseOutputBuffer", "(IJ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("releaseOutputBuffer", "(IJ)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="renderTimestampNs" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index">The index of a client-owned output buffer previously returned
                         from a call to <c>#dequeueOutputBuffer</c>.</param>
        <param name="renderTimestampNs">The timestamp to associate with this buffer when
                         it is sent to the Surface.</param>
        <summary>If you are done with a buffer, use this call to update its surface timestamp
            and return it to the codec to render it on the output surface.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#releaseOutputBuffer(int,%20long)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.releaseOutputBuffer(int, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.Reset" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; unit" Usage="mediaCodec.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the codec to its initial (Uninitialized) state.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#reset()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.reset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Android.Media.MediaCodec.CodecException">if an unrecoverable error has occured and the codec
 could not be reset.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if in the Released state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAudioPresentation">
      <MemberSignature Language="C#" Value="public void SetAudioPresentation (Android.Media.AudioPresentation presentation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAudioPresentation(class Android.Media.AudioPresentation presentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.SetAudioPresentation(Android.Media.AudioPresentation)" />
      <MemberSignature Language="F#" Value="member this.SetAudioPresentation : Android.Media.AudioPresentation -&gt; unit" Usage="mediaCodec.SetAudioPresentation presentation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAudioPresentation", "(Landroid/media/AudioPresentation;)V", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAudioPresentation", "(Landroid/media/AudioPresentation;)V", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presentation" Type="Android.Media.AudioPresentation" />
      </Parameters>
      <Docs>
        <param name="presentation">see <c>AudioPresentation</c>. In particular, id should be set.</param>
        <summary>Sets the audio presentation.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#setAudioPresentation(android.media.AudioPresentation)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.setAudioPresentation(android.media.AudioPresentation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCallback">
      <MemberSignature Language="C#" Value="public void SetCallback (Android.Media.MediaCodec.Callback? cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCallback(class Android.Media.MediaCodec/Callback cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.SetCallback(Android.Media.MediaCodec.Callback)" />
      <MemberSignature Language="F#" Value="member this.SetCallback : Android.Media.MediaCodec.Callback -&gt; unit" Usage="mediaCodec.SetCallback cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCallback", "(Landroid/media/MediaCodec$Callback;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCallback", "(Landroid/media/MediaCodec$Callback;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.MediaCodec+Callback" />
      </Parameters>
      <Docs>
        <param name="cb">The callback that will run.  Use <c>null</c> to clear a previously
                      set callback (before <c>#configure configure</c> is called and run
                      in synchronous mode).</param>
        <summary>Sets an asynchronous callback for actionable MediaCodec events on the default
            looper.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#setCallback(android.media.Callback)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.setCallback(android.media.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.Media.MediaCodec.SetCallback(.Callback, Android.OS.Handler)" />
      </Docs>
    </Member>
    <Member MemberName="SetCallback">
      <MemberSignature Language="C#" Value="public void SetCallback (Android.Media.MediaCodec.Callback? cb, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCallback(class Android.Media.MediaCodec/Callback cb, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.SetCallback(Android.Media.MediaCodec.Callback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="member this.SetCallback : Android.Media.MediaCodec.Callback * Android.OS.Handler -&gt; unit" Usage="mediaCodec.SetCallback (cb, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCallback", "(Landroid/media/MediaCodec$Callback;Landroid/os/Handler;)V", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCallback", "(Landroid/media/MediaCodec$Callback;Landroid/os/Handler;)V", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.MediaCodec+Callback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="handler">To be added.</param>
        <param name="cb">The callback that will run.  Use <c>null</c> to clear a previously
                      set callback (before <c>#configure configure</c> is called and run
                      in synchronous mode).</param>
        <summary>Sets an asynchronous callback for actionable MediaCodec events on the default
            looper.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#setCallback(android.media.Callback)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.setCallback(android.media.Callback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInputSurface">
      <MemberSignature Language="C#" Value="public void SetInputSurface (Android.Views.Surface surface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetInputSurface(class Android.Views.Surface surface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.SetInputSurface(Android.Views.Surface)" />
      <MemberSignature Language="F#" Value="member this.SetInputSurface : Android.Views.Surface -&gt; unit" Usage="mediaCodec.SetInputSurface surface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInputSurface", "(Landroid/view/Surface;)V", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInputSurface", "(Landroid/view/Surface;)V", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Views.Surface" />
      </Parameters>
      <Docs>
        <param name="surface">a persistent input surface created by <c>#createPersistentInputSurface</c></param>
        <summary>Configures the codec (e.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#setInputSurface(android.view.Surface)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.setInputSurface(android.view.Surface)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnFirstTunnelFrameReadyListener">
      <MemberSignature Language="C#" Value="public void SetOnFirstTunnelFrameReadyListener (Android.OS.Handler? handler, Android.Media.MediaCodec.IOnFirstTunnelFrameReadyListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOnFirstTunnelFrameReadyListener(class Android.OS.Handler handler, class Android.Media.MediaCodec/IOnFirstTunnelFrameReadyListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.SetOnFirstTunnelFrameReadyListener(Android.OS.Handler,Android.Media.MediaCodec.IOnFirstTunnelFrameReadyListener)" />
      <MemberSignature Language="F#" Value="member this.SetOnFirstTunnelFrameReadyListener : Android.OS.Handler * Android.Media.MediaCodec.IOnFirstTunnelFrameReadyListener -&gt; unit" Usage="mediaCodec.SetOnFirstTunnelFrameReadyListener (handler, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnFirstTunnelFrameReadyListener", "(Landroid/os/Handler;Landroid/media/MediaCodec$OnFirstTunnelFrameReadyListener;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnFirstTunnelFrameReadyListener", "(Landroid/os/Handler;Landroid/media/MediaCodec$OnFirstTunnelFrameReadyListener;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="Android.OS.Handler" />
        <Parameter Name="listener" Type="Android.Media.MediaCodec+IOnFirstTunnelFrameReadyListener" />
      </Parameters>
      <Docs>
        <param name="handler">the callback will be run on the handler's thread. If <c>null</c>, the callback will be run on the default thread, which is the looper from
            which the codec was created, or a new thread if there was none.</param>
        <param name="listener">the callback that will be run. If <c>null</c>, clears any registered
            listener.</param>
        <summary>Registers a callback to be invoked when the first output frame has been decoded
            and is ready to be rendered on a codec configured for tunnel mode with <c>KEY_AUDIO_SESSION_ID</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#setOnFirstTunnelFrameReadyListener(android.os.Handler,%20android.media.OnFirstTunnelFrameReadyListener)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.setOnFirstTunnelFrameReadyListener(android.os.Handler, android.media.OnFirstTunnelFrameReadyListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnFrameRenderedListener">
      <MemberSignature Language="C#" Value="public void SetOnFrameRenderedListener (Android.Media.MediaCodec.IOnFrameRenderedListener? listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOnFrameRenderedListener(class Android.Media.MediaCodec/IOnFrameRenderedListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.SetOnFrameRenderedListener(Android.Media.MediaCodec.IOnFrameRenderedListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="member this.SetOnFrameRenderedListener : Android.Media.MediaCodec.IOnFrameRenderedListener * Android.OS.Handler -&gt; unit" Usage="mediaCodec.SetOnFrameRenderedListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnFrameRenderedListener", "(Landroid/media/MediaCodec$OnFrameRenderedListener;Landroid/os/Handler;)V", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnFrameRenderedListener", "(Landroid/media/MediaCodec$OnFrameRenderedListener;Landroid/os/Handler;)V", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaCodec+IOnFrameRenderedListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <param name="handler">the callback will be run on the handler's thread. If <c>null</c>,
                      the callback will be run on the default thread, which is the looper
                      from which the codec was created, or a new thread if there was none.</param>
        <summary>Registers a callback to be invoked when an output frame is rendered on the output surface.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#setOnFrameRenderedListener(android.media.OnFrameRenderedListener,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.setOnFrameRenderedListener(android.media.OnFrameRenderedListener, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputSurface">
      <MemberSignature Language="C#" Value="public void SetOutputSurface (Android.Views.Surface surface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutputSurface(class Android.Views.Surface surface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.SetOutputSurface(Android.Views.Surface)" />
      <MemberSignature Language="F#" Value="member this.SetOutputSurface : Android.Views.Surface -&gt; unit" Usage="mediaCodec.SetOutputSurface surface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOutputSurface", "(Landroid/view/Surface;)V", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOutputSurface", "(Landroid/view/Surface;)V", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Views.Surface" />
      </Parameters>
      <Docs>
        <param name="surface">the output surface to use. It must not be <c>null</c>.</param>
        <summary>Dynamically sets the output surface of a codec.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#setOutputSurface(android.view.Surface)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.setOutputSurface(android.view.Surface)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetParameters">
      <MemberSignature Language="C#" Value="public void SetParameters (Android.OS.Bundle? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetParameters(class Android.OS.Bundle params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.SetParameters(Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="member this.SetParameters : Android.OS.Bundle -&gt; unit" Usage="mediaCodec.SetParameters params" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setParameters", "(Landroid/os/Bundle;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setParameters", "(Landroid/os/Bundle;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="params">The bundle of parameters to set.</param>
        <summary>Communicate additional parameter changes to the component instance.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#setParameters(android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.setParameters(android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException">if in the Released state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetVideoScalingMode">
      <MemberSignature Language="C#" Value="public void SetVideoScalingMode (Android.Media.VideoScalingMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVideoScalingMode(valuetype Android.Media.VideoScalingMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.SetVideoScalingMode(Android.Media.VideoScalingMode)" />
      <MemberSignature Language="F#" Value="member this.SetVideoScalingMode : Android.Media.VideoScalingMode -&gt; unit" Usage="mediaCodec.SetVideoScalingMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVideoScalingMode", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVideoScalingMode", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Media.VideoScalingMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">To be added.</param>
        <summary>If a surface has been specified in a previous call to <c>#configure</c>
            specifies the scaling mode to use.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#setVideoScalingMode(int)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.setVideoScalingMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if mode is not recognized.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if in the Released state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SignalEndOfInputStream">
      <MemberSignature Language="C#" Value="public void SignalEndOfInputStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SignalEndOfInputStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.SignalEndOfInputStream" />
      <MemberSignature Language="F#" Value="member this.SignalEndOfInputStream : unit -&gt; unit" Usage="mediaCodec.SignalEndOfInputStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("signalEndOfInputStream", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("signalEndOfInputStream", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signals end-of-stream on input.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#signalEndOfInputStream()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.signalEndOfInputStream()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Executing state.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.Start" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="mediaCodec.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("start", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("start", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>After successfully configuring the component, call <c>start</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#start()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.start()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if not in the Configured state
         or just after <see cref="M:Android.Media.MediaCodec.Flush" /> for a codec that is configured
         in asynchronous mode.</exception>
        <exception cref="T:Android.Media.MediaCodec.CodecException">upon codec error. Note that some codec errors
 for start may be attributed to future method calls.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.Stop" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="mediaCodec.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stop", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stop", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Finish the decode/encode session, note that the codec instance
            remains active and ready to be <c>#start</c>ed again.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#stop()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.stop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if in the Released state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SubscribeToVendorParameters">
      <MemberSignature Language="C#" Value="public void SubscribeToVendorParameters (System.Collections.Generic.IList&lt;string&gt; names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SubscribeToVendorParameters(class System.Collections.Generic.IList`1&lt;string&gt; names) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.SubscribeToVendorParameters(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="member this.SubscribeToVendorParameters : System.Collections.Generic.IList&lt;string&gt; -&gt; unit" Usage="mediaCodec.SubscribeToVendorParameters names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("subscribeToVendorParameters", "(Ljava/util/List;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("subscribeToVendorParameters", "(Ljava/util/List;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="names">names of the vendor parameters to subscribe. This may be an empty list,
                         and in that case this method will not change the list of subscribed parameters.</param>
        <summary>Subscribe to vendor parameters, so that these parameters will be present in
            <c>#getOutputFormat</c> and changes to these parameters generate
            output format change event.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#subscribeToVendorParameters(java.util.List)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.subscribeToVendorParameters(java.util.List)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportedVendorParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; SupportedVendorParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; SupportedVendorParameters" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.SupportedVendorParameters" />
      <MemberSignature Language="F#" Value="member this.SupportedVendorParameters : System.Collections.Generic.IList&lt;string&gt;" Usage="Android.Media.MediaCodec.SupportedVendorParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSupportedVendorParameters", "()Ljava/util/List;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSupportedVendorParameters", "()Ljava/util/List;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a list of vendor parameter names.</summary>
        <value>a list containing supported vendor parameters; an empty
                    list if no vendor parameters are supported. The order of the
                    parameters is arbitrary.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#getSupportedVendorParameters()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.getSupportedVendorParameters()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.MediaCodec.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.MediaCodec.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsubscribeFromVendorParameters">
      <MemberSignature Language="C#" Value="public void UnsubscribeFromVendorParameters (System.Collections.Generic.IList&lt;string&gt; names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnsubscribeFromVendorParameters(class System.Collections.Generic.IList`1&lt;string&gt; names) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.UnsubscribeFromVendorParameters(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="member this.UnsubscribeFromVendorParameters : System.Collections.Generic.IList&lt;string&gt; -&gt; unit" Usage="mediaCodec.UnsubscribeFromVendorParameters names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unsubscribeFromVendorParameters", "(Ljava/util/List;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unsubscribeFromVendorParameters", "(Ljava/util/List;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="names">names of the vendor parameters to unsubscribe. This may be an empty list,
                         and in that case this method will not change the list of subscribed parameters.</param>
        <summary>Unsubscribe from vendor parameters, so that these parameters will not be present in
            <c>#getOutputFormat</c> and changes to these parameters no longer generate
            output format change event.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#unsubscribeFromVendorParameters(java.util.List)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.unsubscribeFromVendorParameters(java.util.List)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoScalingModeScaleToFit">
      <MemberSignature Language="C#" Value="public const Android.Media.VideoScalingMode VideoScalingModeScaleToFit = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.VideoScalingMode VideoScalingModeScaleToFit = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.VideoScalingModeScaleToFit" />
      <MemberSignature Language="F#" Value="val mutable VideoScalingModeScaleToFit : Android.Media.VideoScalingMode" Usage="Android.Media.MediaCodec.VideoScalingModeScaleToFit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("VIDEO_SCALING_MODE_SCALE_TO_FIT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("VIDEO_SCALING_MODE_SCALE_TO_FIT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.VideoScalingMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.VideoScalingMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.VideoScalingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The content is scaled to the surface dimensions</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#VIDEO_SCALING_MODE_SCALE_TO_FIT" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.VIDEO_SCALING_MODE_SCALE_TO_FIT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="VideoScalingModeScaleToFitWithCropping">
      <MemberSignature Language="C#" Value="public const Android.Media.VideoScalingMode VideoScalingModeScaleToFitWithCropping = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.VideoScalingMode VideoScalingModeScaleToFitWithCropping = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaCodec.VideoScalingModeScaleToFitWithCropping" />
      <MemberSignature Language="F#" Value="val mutable VideoScalingModeScaleToFitWithCropping : Android.Media.VideoScalingMode" Usage="Android.Media.MediaCodec.VideoScalingModeScaleToFitWithCropping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.VideoScalingMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.VideoScalingMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.VideoScalingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The content is scaled, maintaining its aspect ratio, the whole
            surface area is used, content may be cropped.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec#VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
  </Members>
</Type>
