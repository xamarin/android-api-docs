<Type Name="MediaParser+IOutputConsumer" FullName="Android.Media.MediaParser+IOutputConsumer">
  <TypeSignature Language="C#" Value="public interface MediaParser.IOutputConsumer : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract MediaParser/IOutputConsumer implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaParser.IOutputConsumer" />
  <TypeSignature Language="F#" Value="type MediaParser.IOutputConsumer = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/MediaParser$OutputConsumer", "", "Android.Media.MediaParser/IOutputConsumerInvoker", ApiSince=30)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/MediaParser$OutputConsumer", "", "Android.Media.MediaParser/IOutputConsumerInvoker", ApiSince=30)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="OnSampleCompleted">
      <MemberSignature Language="C#" Value="public void OnSampleCompleted (int trackIndex, long timeMicros, int flags, int size, int offset, Android.Media.MediaCodec.CryptoInfo? cryptoInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSampleCompleted(int32 trackIndex, int64 timeMicros, int32 flags, int32 size, int32 offset, class Android.Media.MediaCodec/CryptoInfo cryptoInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaParser.IOutputConsumer.OnSampleCompleted(System.Int32,System.Int64,System.Int32,System.Int32,System.Int32,Android.Media.MediaCodec.CryptoInfo)" />
      <MemberSignature Language="F#" Value="abstract member OnSampleCompleted : int * int64 * int * int * int * Android.Media.MediaCodec.CryptoInfo -&gt; unit" Usage="iOutputConsumer.OnSampleCompleted (trackIndex, timeMicros, flags, size, offset, cryptoInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSampleCompleted", "(IJIIILandroid/media/MediaCodec$CryptoInfo;)V", "GetOnSampleCompleted_IJIIILandroid_media_MediaCodec_CryptoInfo_Handler:Android.Media.MediaParser/IOutputConsumerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSampleCompleted", "(IJIIILandroid/media/MediaCodec$CryptoInfo;)V", "GetOnSampleCompleted_IJIIILandroid_media_MediaCodec_CryptoInfo_Handler:Android.Media.MediaParser/IOutputConsumerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trackIndex" Type="System.Int32" />
        <Parameter Name="timeMicros" Type="System.Int64" />
        <Parameter Name="flags" Type="System.Int32" />
        <Parameter Name="size" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="cryptoInfo" Type="Android.Media.MediaCodec+CryptoInfo" />
      </Parameters>
      <Docs>
        <param name="trackIndex">To be added.</param>
        <param name="timeMicros">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="size">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="cryptoInfo">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSampleDataFound">
      <MemberSignature Language="C#" Value="public void OnSampleDataFound (int trackIndex, Android.Media.MediaParser.IInputReader inputReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSampleDataFound(int32 trackIndex, class Android.Media.MediaParser/IInputReader inputReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaParser.IOutputConsumer.OnSampleDataFound(System.Int32,Android.Media.MediaParser.IInputReader)" />
      <MemberSignature Language="F#" Value="abstract member OnSampleDataFound : int * Android.Media.MediaParser.IInputReader -&gt; unit" Usage="iOutputConsumer.OnSampleDataFound (trackIndex, inputReader)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSampleDataFound", "(ILandroid/media/MediaParser$InputReader;)V", "GetOnSampleDataFound_ILandroid_media_MediaParser_InputReader_Handler:Android.Media.MediaParser/IOutputConsumerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSampleDataFound", "(ILandroid/media/MediaParser$InputReader;)V", "GetOnSampleDataFound_ILandroid_media_MediaParser_InputReader_Handler:Android.Media.MediaParser/IOutputConsumerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trackIndex" Type="System.Int32" />
        <Parameter Name="inputReader" Type="Android.Media.MediaParser+IInputReader" />
      </Parameters>
      <Docs>
        <param name="trackIndex">To be added.</param>
        <param name="inputReader">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSeekMapFound">
      <MemberSignature Language="C#" Value="public void OnSeekMapFound (Android.Media.MediaParser.SeekMap seekMap);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSeekMapFound(class Android.Media.MediaParser/SeekMap seekMap) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaParser.IOutputConsumer.OnSeekMapFound(Android.Media.MediaParser.SeekMap)" />
      <MemberSignature Language="F#" Value="abstract member OnSeekMapFound : Android.Media.MediaParser.SeekMap -&gt; unit" Usage="iOutputConsumer.OnSeekMapFound seekMap" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSeekMapFound", "(Landroid/media/MediaParser$SeekMap;)V", "GetOnSeekMapFound_Landroid_media_MediaParser_SeekMap_Handler:Android.Media.MediaParser/IOutputConsumerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSeekMapFound", "(Landroid/media/MediaParser$SeekMap;)V", "GetOnSeekMapFound_Landroid_media_MediaParser_SeekMap_Handler:Android.Media.MediaParser/IOutputConsumerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="seekMap" Type="Android.Media.MediaParser+SeekMap" />
      </Parameters>
      <Docs>
        <param name="seekMap">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTrackCountFound">
      <MemberSignature Language="C#" Value="public void OnTrackCountFound (int numberOfTracks);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTrackCountFound(int32 numberOfTracks) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaParser.IOutputConsumer.OnTrackCountFound(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnTrackCountFound : int -&gt; unit" Usage="iOutputConsumer.OnTrackCountFound numberOfTracks" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTrackCountFound", "(I)V", "GetOnTrackCountFound_IHandler:Android.Media.MediaParser/IOutputConsumerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTrackCountFound", "(I)V", "GetOnTrackCountFound_IHandler:Android.Media.MediaParser/IOutputConsumerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numberOfTracks" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numberOfTracks">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTrackDataFound">
      <MemberSignature Language="C#" Value="public void OnTrackDataFound (int trackIndex, Android.Media.MediaParser.TrackData trackData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTrackDataFound(int32 trackIndex, class Android.Media.MediaParser/TrackData trackData) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaParser.IOutputConsumer.OnTrackDataFound(System.Int32,Android.Media.MediaParser.TrackData)" />
      <MemberSignature Language="F#" Value="abstract member OnTrackDataFound : int * Android.Media.MediaParser.TrackData -&gt; unit" Usage="iOutputConsumer.OnTrackDataFound (trackIndex, trackData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTrackDataFound", "(ILandroid/media/MediaParser$TrackData;)V", "GetOnTrackDataFound_ILandroid_media_MediaParser_TrackData_Handler:Android.Media.MediaParser/IOutputConsumerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTrackDataFound", "(ILandroid/media/MediaParser$TrackData;)V", "GetOnTrackDataFound_ILandroid_media_MediaParser_TrackData_Handler:Android.Media.MediaParser/IOutputConsumerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trackIndex" Type="System.Int32" />
        <Parameter Name="trackData" Type="Android.Media.MediaParser+TrackData" />
      </Parameters>
      <Docs>
        <param name="trackIndex">To be added.</param>
        <param name="trackData">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
