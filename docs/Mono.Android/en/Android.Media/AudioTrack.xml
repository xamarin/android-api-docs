<Type Name="AudioTrack" FullName="Android.Media.AudioTrack">
  <TypeSignature Language="VB.NET" Value="Public Class AudioTrack&#xA;Inherits Object&#xA;Implements IAudioRouting, IDisposable, IJavaPeerable, IVolumeAutomation" />
  <TypeSignature Language="C++ CLI" Value="public ref class AudioTrack : Java::Lang::Object, Android::Media::IAudioRouting, Android::Media::IVolumeAutomation, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public class AudioTrack : Java.Lang.Object, Android.Media.IAudioRouting, Android.Media.IVolumeAutomation, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AudioTrack extends Java.Lang.Object implements class Android.Media.IAudioRouting, class Android.Media.IVolumeAutomation, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.AudioTrack" />
  <TypeSignature Language="F#" Value="type AudioTrack = class&#xA;    inherit Object&#xA;    interface IAudioRouting&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IVolumeAutomation" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Media.IAudioRouting</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Media.IVolumeAutomation</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/AudioTrack", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/AudioTrack", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>The AudioTrack class manages and plays a single audio resource for Java applications.</summary>
    <remarks>
      <para>The AudioTrack class manages and plays a single audio resource for Java applications.
            It allows streaming of PCM audio buffers to the audio sink for playback. This is
            achieved by "pushing" the data to the AudioTrack object using one of the
             <c>#write(byte[], int, int)</c>, <c>#write(short[], int, int)</c>,
             and <c>#write(float[], int, int, int)</c> methods.</para>
      <para>An AudioTrack instance can operate under two modes: static or streaming.&lt;br&gt;
            In Streaming mode, the application writes a continuous stream of data to the AudioTrack, using
            one of the <c>write()</c> methods. These are blocking and return when the data has been
            transferred from the Java layer to the native layer and queued for playback. The streaming
            mode is most useful when playing blocks of audio data that for instance are:
            
            &lt;ul&gt;
              &lt;li&gt;too big to fit in memory because of the duration of the sound to play,&lt;/li&gt;
              &lt;li&gt;too big to fit in memory because of the characteristics of the audio data
                    (high sampling rate, bits per sample ...)&lt;/li&gt;
              &lt;li&gt;received or generated while previously queued audio is playing.&lt;/li&gt;
            &lt;/ul&gt;
            
            The static mode should be chosen when dealing with short sounds that fit in memory and
            that need to be played with the smallest latency possible. The static mode will
            therefore be preferred for UI and game sounds that are played often, and with the
            smallest overhead possible.</para>
      <para>Upon creation, an AudioTrack object initializes its associated audio buffer.
            The size of this buffer, specified during the construction, determines how long an AudioTrack
            can play before running out of data.&lt;br&gt;
            For an AudioTrack using the static mode, this size is the maximum size of the sound that can
            be played from it.&lt;br&gt;
            For the streaming mode, data will be written to the audio sink in chunks of
            sizes less than or equal to the total buffer size.
            
            AudioTrack is not final and thus permits subclasses, but such use is not recommended.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/AudioTrack" title="Reference documentation">Java documentation for <code>android.media.AudioTrack</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AudioTrack(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected AudioTrack (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.AudioTrack : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.AudioTrack" Usage="new Android.Media.AudioTrack (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (attributes As AudioAttributes, format As AudioFormat, bufferSizeInBytes As Integer, mode As AudioTrackMode, sessionId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AudioTrack(Android::Media::AudioAttributes ^ attributes, Android::Media::AudioFormat ^ format, int bufferSizeInBytes, Android::Media::AudioTrackMode mode, int sessionId);" />
      <MemberSignature Language="C#" Value="public AudioTrack (Android.Media.AudioAttributes? attributes, Android.Media.AudioFormat? format, int bufferSizeInBytes, Android.Media.AudioTrackMode mode, int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Media.AudioAttributes attributes, class Android.Media.AudioFormat format, int32 bufferSizeInBytes, valuetype Android.Media.AudioTrackMode mode, int32 sessionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.#ctor(Android.Media.AudioAttributes,Android.Media.AudioFormat,System.Int32,Android.Media.AudioTrackMode,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Media.AudioTrack : Android.Media.AudioAttributes * Android.Media.AudioFormat * int * Android.Media.AudioTrackMode * int -&gt; Android.Media.AudioTrack" Usage="new Android.Media.AudioTrack (attributes, format, bufferSizeInBytes, mode, sessionId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/media/AudioAttributes;Landroid/media/AudioFormat;III)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/media/AudioAttributes;Landroid/media/AudioFormat;III)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
        <Parameter Name="format" Type="Android.Media.AudioFormat" />
        <Parameter Name="bufferSizeInBytes" Type="System.Int32" />
        <Parameter Name="mode" Type="Android.Media.AudioTrackMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="attributes">a non-null <c>AudioAttributes</c> instance.</param>
        <param name="format">a non-null <c>AudioFormat</c> instance describing the format of the data
                that will be played through this AudioTrack. See <c>AudioFormat.Builder</c> for
                configuring the audio format parameters such as encoding, channel mask and sample rate.</param>
        <param name="bufferSizeInBytes">the total size (in bytes) of the internal buffer where audio data is
              read from for playback. This should be a nonzero multiple of the frame size in bytes.
              &lt;p&gt; If the track's creation mode is <c>#MODE_STATIC</c>,
              this is the maximum length sample, or audio clip, that can be played by this instance.
              &lt;p&gt; If the track's creation mode is <c>#MODE_STREAM</c>,
              this should be the desired buffer size
              for the <c>AudioTrack</c> to satisfy the application's
              latency requirements.
              If <c>bufferSizeInBytes</c> is less than the
              minimum buffer size for the output sink, it is increased to the minimum
              buffer size.
              The method <c>#getBufferSizeInFrames()</c> returns the
              actual size in frames of the buffer created, which
              determines the minimum frequency to write
              to the streaming <c>AudioTrack</c> to avoid underrun.
              See <c>#getMinBufferSize(int, int, int)</c> to determine the estimated minimum buffer size
              for an AudioTrack instance in streaming mode.</param>
        <param name="mode">streaming or static buffer. See <c>#MODE_STATIC</c> and <c>#MODE_STREAM</c>.</param>
        <param name="sessionId">ID of audio session the AudioTrack must be attached to, or
              <c>AudioManager#AUDIO_SESSION_ID_GENERATE</c> if the session isn't known at construction
              time. See also <c>AudioManager#generateAudioSessionId()</c> to obtain a session ID before
              construction.</param>
        <summary>Class constructor with <c>AudioAttributes</c> and <c>AudioFormat</c>.</summary>
        <remarks>
          <para>Class constructor with <c>AudioAttributes</c> and <c>AudioFormat</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#AudioTrack(android.media.AudioAttributes,%20android.media.AudioFormat,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.AudioTrack(android.media.AudioAttributes, android.media.AudioFormat, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (streamType As Stream, sampleRateInHz As Integer, channelConfig As ChannelConfiguration, audioFormat As Encoding, bufferSizeInBytes As Integer, mode As AudioTrackMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AudioTrack(Android::Media::Stream streamType, int sampleRateInHz, Android::Media::ChannelConfiguration channelConfig, Android::Media::Encoding audioFormat, int bufferSizeInBytes, Android::Media::AudioTrackMode mode);" />
      <MemberSignature Language="C#" Value="public AudioTrack (Android.Media.Stream streamType, int sampleRateInHz, Android.Media.ChannelConfiguration channelConfig, Android.Media.Encoding audioFormat, int bufferSizeInBytes, Android.Media.AudioTrackMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Media.Stream streamType, int32 sampleRateInHz, valuetype Android.Media.ChannelConfiguration channelConfig, valuetype Android.Media.Encoding audioFormat, int32 bufferSizeInBytes, valuetype Android.Media.AudioTrackMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.#ctor(Android.Media.Stream,System.Int32,Android.Media.ChannelConfiguration,Android.Media.Encoding,System.Int32,Android.Media.AudioTrackMode)" />
      <MemberSignature Language="F#" Value="new Android.Media.AudioTrack : Android.Media.Stream * int * Android.Media.ChannelConfiguration * Android.Media.Encoding * int * Android.Media.AudioTrackMode -&gt; Android.Media.AudioTrack" Usage="new Android.Media.AudioTrack (streamType, sampleRateInHz, channelConfig, audioFormat, bufferSizeInBytes, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("ChannelConfiguration is obsolete. Please use another overload with ChannelOut instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("ChannelConfiguration is obsolete. Please use another overload with ChannelOut instead")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelConfiguration">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="bufferSizeInBytes" Type="System.Int32" />
        <Parameter Name="mode" Type="Android.Media.AudioTrackMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">To be added.</param>
        <param name="sampleRateInHz">To be added.</param>
        <param name="channelConfig">To be added.</param>
        <param name="audioFormat">To be added.</param>
        <param name="bufferSizeInBytes">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>Class constructor.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (streamType As Stream, sampleRateInHz As Integer, channelConfig As ChannelOut, audioFormat As Encoding, bufferSizeInBytes As Integer, mode As AudioTrackMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AudioTrack(Android::Media::Stream streamType, int sampleRateInHz, Android::Media::ChannelOut channelConfig, Android::Media::Encoding audioFormat, int bufferSizeInBytes, Android::Media::AudioTrackMode mode);" />
      <MemberSignature Language="C#" Value="public AudioTrack (Android.Media.Stream streamType, int sampleRateInHz, Android.Media.ChannelOut channelConfig, Android.Media.Encoding audioFormat, int bufferSizeInBytes, Android.Media.AudioTrackMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Media.Stream streamType, int32 sampleRateInHz, valuetype Android.Media.ChannelOut channelConfig, valuetype Android.Media.Encoding audioFormat, int32 bufferSizeInBytes, valuetype Android.Media.AudioTrackMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.#ctor(Android.Media.Stream,System.Int32,Android.Media.ChannelOut,Android.Media.Encoding,System.Int32,Android.Media.AudioTrackMode)" />
      <MemberSignature Language="F#" Value="new Android.Media.AudioTrack : Android.Media.Stream * int * Android.Media.ChannelOut * Android.Media.Encoding * int * Android.Media.AudioTrackMode -&gt; Android.Media.AudioTrack" Usage="new Android.Media.AudioTrack (streamType, sampleRateInHz, channelConfig, audioFormat, bufferSizeInBytes, mode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(IIIIII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(IIIIII)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelOut">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="bufferSizeInBytes" Type="System.Int32" />
        <Parameter Name="mode" Type="Android.Media.AudioTrackMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">the type of the audio stream. See
              <c>AudioManager#STREAM_VOICE_CALL</c>, <c>AudioManager#STREAM_SYSTEM</c>,
              <c>AudioManager#STREAM_RING</c>, <c>AudioManager#STREAM_MUSIC</c>,
              <c>AudioManager#STREAM_ALARM</c>, and <c>AudioManager#STREAM_NOTIFICATION</c>.</param>
        <param name="sampleRateInHz">the initial source sample rate expressed in Hz.
              <c>AudioFormat#SAMPLE_RATE_UNSPECIFIED</c> means to use a route-dependent value
              which is usually the sample rate of the sink.
              <c>#getSampleRate()</c> can be used to retrieve the actual sample rate chosen.</param>
        <param name="channelConfig">describes the configuration of the audio channels.
              See <c>AudioFormat#CHANNEL_OUT_MONO</c> and
              <c>AudioFormat#CHANNEL_OUT_STEREO</c></param>
        <param name="audioFormat">the format in which the audio data is represented.
              See <c>AudioFormat#ENCODING_PCM_16BIT</c>,
              <c>AudioFormat#ENCODING_PCM_8BIT</c>,
              and <c>AudioFormat#ENCODING_PCM_FLOAT</c>.</param>
        <param name="bufferSizeInBytes">the total size (in bytes) of the internal buffer where audio data is
              read from for playback. This should be a nonzero multiple of the frame size in bytes.
              &lt;p&gt; If the track's creation mode is <c>#MODE_STATIC</c>,
              this is the maximum length sample, or audio clip, that can be played by this instance.
              &lt;p&gt; If the track's creation mode is <c>#MODE_STREAM</c>,
              this should be the desired buffer size
              for the <c>AudioTrack</c> to satisfy the application's
              latency requirements.
              If <c>bufferSizeInBytes</c> is less than the
              minimum buffer size for the output sink, it is increased to the minimum
              buffer size.
              The method <c>#getBufferSizeInFrames()</c> returns the
              actual size in frames of the buffer created, which
              determines the minimum frequency to write
              to the streaming <c>AudioTrack</c> to avoid underrun.
              See <c>#getMinBufferSize(int, int, int)</c> to determine the estimated minimum buffer size
              for an AudioTrack instance in streaming mode.</param>
        <param name="mode">streaming or static buffer. See <c>#MODE_STATIC</c> and <c>#MODE_STREAM</c></param>
        <summary>Class constructor.</summary>
        <remarks>
          <para>Class constructor.</para>
          <para>This member is deprecated. use <c>Builder</c> or
              <c>#AudioTrack(AudioAttributes, AudioFormat, int, int, int)</c> to specify the
              <c>AudioAttributes</c> instead of the stream type which is only for volume control.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#AudioTrack(int,%20int,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.AudioTrack(int, int, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (streamType As Stream, sampleRateInHz As Integer, channelConfig As ChannelConfiguration, audioFormat As Encoding, bufferSizeInBytes As Integer, mode As AudioTrackMode, sessionId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AudioTrack(Android::Media::Stream streamType, int sampleRateInHz, Android::Media::ChannelConfiguration channelConfig, Android::Media::Encoding audioFormat, int bufferSizeInBytes, Android::Media::AudioTrackMode mode, int sessionId);" />
      <MemberSignature Language="C#" Value="public AudioTrack (Android.Media.Stream streamType, int sampleRateInHz, Android.Media.ChannelConfiguration channelConfig, Android.Media.Encoding audioFormat, int bufferSizeInBytes, Android.Media.AudioTrackMode mode, int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Media.Stream streamType, int32 sampleRateInHz, valuetype Android.Media.ChannelConfiguration channelConfig, valuetype Android.Media.Encoding audioFormat, int32 bufferSizeInBytes, valuetype Android.Media.AudioTrackMode mode, int32 sessionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.#ctor(Android.Media.Stream,System.Int32,Android.Media.ChannelConfiguration,Android.Media.Encoding,System.Int32,Android.Media.AudioTrackMode,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Media.AudioTrack : Android.Media.Stream * int * Android.Media.ChannelConfiguration * Android.Media.Encoding * int * Android.Media.AudioTrackMode * int -&gt; Android.Media.AudioTrack" Usage="new Android.Media.AudioTrack (streamType, sampleRateInHz, channelConfig, audioFormat, bufferSizeInBytes, mode, sessionId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("ChannelConfiguration is obsolete. Please use another overload with ChannelOut instead")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("ChannelConfiguration is obsolete. Please use another overload with ChannelOut instead")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelConfiguration">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="bufferSizeInBytes" Type="System.Int32" />
        <Parameter Name="mode" Type="Android.Media.AudioTrackMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="streamType">To be added.</param>
        <param name="sampleRateInHz">To be added.</param>
        <param name="channelConfig">To be added.</param>
        <param name="audioFormat">To be added.</param>
        <param name="bufferSizeInBytes">To be added.</param>
        <param name="mode">To be added.</param>
        <param name="sessionId">To be added.</param>
        <summary>Class constructor with audio session.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (streamType As Stream, sampleRateInHz As Integer, channelConfig As ChannelOut, audioFormat As Encoding, bufferSizeInBytes As Integer, mode As AudioTrackMode, sessionId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AudioTrack(Android::Media::Stream streamType, int sampleRateInHz, Android::Media::ChannelOut channelConfig, Android::Media::Encoding audioFormat, int bufferSizeInBytes, Android::Media::AudioTrackMode mode, int sessionId);" />
      <MemberSignature Language="C#" Value="public AudioTrack (Android.Media.Stream streamType, int sampleRateInHz, Android.Media.ChannelOut channelConfig, Android.Media.Encoding audioFormat, int bufferSizeInBytes, Android.Media.AudioTrackMode mode, int sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Media.Stream streamType, int32 sampleRateInHz, valuetype Android.Media.ChannelOut channelConfig, valuetype Android.Media.Encoding audioFormat, int32 bufferSizeInBytes, valuetype Android.Media.AudioTrackMode mode, int32 sessionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.#ctor(Android.Media.Stream,System.Int32,Android.Media.ChannelOut,Android.Media.Encoding,System.Int32,Android.Media.AudioTrackMode,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Media.AudioTrack : Android.Media.Stream * int * Android.Media.ChannelOut * Android.Media.Encoding * int * Android.Media.AudioTrackMode * int -&gt; Android.Media.AudioTrack" Usage="new Android.Media.AudioTrack (streamType, sampleRateInHz, channelConfig, audioFormat, bufferSizeInBytes, mode, sessionId)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(IIIIIII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(IIIIIII)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelOut">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="bufferSizeInBytes" Type="System.Int32" />
        <Parameter Name="mode" Type="Android.Media.AudioTrackMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="streamType">the type of the audio stream. See
              <c>AudioManager#STREAM_VOICE_CALL</c>, <c>AudioManager#STREAM_SYSTEM</c>,
              <c>AudioManager#STREAM_RING</c>, <c>AudioManager#STREAM_MUSIC</c>,
              <c>AudioManager#STREAM_ALARM</c>, and <c>AudioManager#STREAM_NOTIFICATION</c>.</param>
        <param name="sampleRateInHz">the initial source sample rate expressed in Hz.
              <c>AudioFormat#SAMPLE_RATE_UNSPECIFIED</c> means to use a route-dependent value
              which is usually the sample rate of the sink.</param>
        <param name="channelConfig">describes the configuration of the audio channels.
              See <c>AudioFormat#CHANNEL_OUT_MONO</c> and
              <c>AudioFormat#CHANNEL_OUT_STEREO</c></param>
        <param name="audioFormat">the format in which the audio data is represented.
              See <c>AudioFormat#ENCODING_PCM_16BIT</c> and
              <c>AudioFormat#ENCODING_PCM_8BIT</c>,
              and <c>AudioFormat#ENCODING_PCM_FLOAT</c>.</param>
        <param name="bufferSizeInBytes">the total size (in bytes) of the internal buffer where audio data is
              read from for playback. This should be a nonzero multiple of the frame size in bytes.
              &lt;p&gt; If the track's creation mode is <c>#MODE_STATIC</c>,
              this is the maximum length sample, or audio clip, that can be played by this instance.
              &lt;p&gt; If the track's creation mode is <c>#MODE_STREAM</c>,
              this should be the desired buffer size
              for the <c>AudioTrack</c> to satisfy the application's
              latency requirements.
              If <c>bufferSizeInBytes</c> is less than the
              minimum buffer size for the output sink, it is increased to the minimum
              buffer size.
              The method <c>#getBufferSizeInFrames()</c> returns the
              actual size in frames of the buffer created, which
              determines the minimum frequency to write
              to the streaming <c>AudioTrack</c> to avoid underrun.
              You can write data into this buffer in smaller chunks than this size.
              See <c>#getMinBufferSize(int, int, int)</c> to determine the estimated minimum buffer size
              for an AudioTrack instance in streaming mode.</param>
        <param name="mode">streaming or static buffer. See <c>#MODE_STATIC</c> and <c>#MODE_STREAM</c></param>
        <param name="sessionId">Id of audio session the AudioTrack must be attached to</param>
        <summary>Class constructor with audio session.</summary>
        <remarks>
          <para>Class constructor with audio session. Use this constructor when the AudioTrack must be
            attached to a particular audio session. The primary use of the audio session ID is to
            associate audio effects to a particular instance of AudioTrack: if an audio session ID
            is provided when creating an AudioEffect, this effect will be applied only to audio tracks
            and media players in the same session and not to the output mix.
            When an AudioTrack is created without specifying a session, it will create its own session
            which can be retrieved by calling the <c>#getAudioSessionId()</c> method.
            If a non-zero session ID is provided, this AudioTrack will share effects attached to this
            session
            with all other media players or audio tracks in the same session, otherwise a new session
            will be created for this track if none is supplied.</para>
          <para>This member is deprecated. use <c>Builder</c> or
              <c>#AudioTrack(AudioAttributes, AudioFormat, int, int, int)</c> to specify the
              <c>AudioAttributes</c> instead of the stream type which is only for volume control.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#AudioTrack(int,%20int,%20int,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.AudioTrack(int, int, int, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="AddOnCodecFormatChangedListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddOnCodecFormatChangedListener (executor As IExecutor, listener As AudioTrack.IOnCodecFormatChangedListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddOnCodecFormatChangedListener(Java::Util::Concurrent::IExecutor ^ executor, Android::Media::AudioTrack::IOnCodecFormatChangedListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void AddOnCodecFormatChangedListener (Java.Util.Concurrent.IExecutor executor, Android.Media.AudioTrack.IOnCodecFormatChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnCodecFormatChangedListener(class Java.Util.Concurrent.IExecutor executor, class Android.Media.AudioTrack/IOnCodecFormatChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.AddOnCodecFormatChangedListener(Java.Util.Concurrent.IExecutor,Android.Media.AudioTrack.IOnCodecFormatChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member AddOnCodecFormatChangedListener : Java.Util.Concurrent.IExecutor * Android.Media.AudioTrack.IOnCodecFormatChangedListener -&gt; unit&#xA;override this.AddOnCodecFormatChangedListener : Java.Util.Concurrent.IExecutor * Android.Media.AudioTrack.IOnCodecFormatChangedListener -&gt; unit" Usage="audioTrack.AddOnCodecFormatChangedListener (executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnCodecFormatChangedListener", "(Ljava/util/concurrent/Executor;Landroid/media/AudioTrack$OnCodecFormatChangedListener;)V", "GetAddOnCodecFormatChangedListener_Ljava_util_concurrent_Executor_Landroid_media_AudioTrack_OnCodecFormatChangedListener_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnCodecFormatChangedListener", "(Ljava/util/concurrent/Executor;Landroid/media/AudioTrack$OnCodecFormatChangedListener;)V", "GetAddOnCodecFormatChangedListener_Ljava_util_concurrent_Executor_Landroid_media_AudioTrack_OnCodecFormatChangedListener_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.Media.AudioTrack+IOnCodecFormatChangedListener" />
      </Parameters>
      <Docs>
        <param name="executor">Specifies the <c>Executor</c> object to control execution.</param>
        <param name="listener">The <c>OnCodecFormatChangedListener</c> interface to receive
                notifications of codec events.</param>
        <summary>Adds an <c>OnCodecFormatChangedListener</c> to receive notifications of
            codec format change events on this <c>AudioTrack</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#addOnCodecFormatChangedListener(java.util.concurrent.Executor,%20android.media.OnCodecFormatChangedListener)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.addOnCodecFormatChangedListener(java.util.concurrent.Executor, android.media.OnCodecFormatChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnRoutingChangedListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddOnRoutingChangedListener (listener As AudioTrack.IOnRoutingChangedListener, handler As Handler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddOnRoutingChangedListener(Android::Media::AudioTrack::IOnRoutingChangedListener ^ listener, Android::OS::Handler ^ handler);" />
      <MemberSignature Language="C#" Value="public virtual void AddOnRoutingChangedListener (Android.Media.AudioTrack.IOnRoutingChangedListener? listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnRoutingChangedListener(class Android.Media.AudioTrack/IOnRoutingChangedListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.AddOnRoutingChangedListener(Android.Media.AudioTrack.IOnRoutingChangedListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member AddOnRoutingChangedListener : Android.Media.AudioTrack.IOnRoutingChangedListener * Android.OS.Handler -&gt; unit&#xA;override this.AddOnRoutingChangedListener : Android.Media.AudioTrack.IOnRoutingChangedListener * Android.OS.Handler -&gt; unit" Usage="audioTrack.AddOnRoutingChangedListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnRoutingChangedListener", "(Landroid/media/AudioTrack$OnRoutingChangedListener;Landroid/os/Handler;)V", "GetAddOnRoutingChangedListener_Landroid_media_AudioTrack_OnRoutingChangedListener_Landroid_os_Handler_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnRoutingChangedListener", "(Landroid/media/AudioTrack$OnRoutingChangedListener;Landroid/os/Handler;)V", "GetAddOnRoutingChangedListener_Landroid_media_AudioTrack_OnRoutingChangedListener_Landroid_os_Handler_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioTrack+IOnRoutingChangedListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">The <c>AudioRouting.OnRoutingChangedListener</c> interface to receive
            notifications of rerouting events.</param>
        <param name="handler">Specifies the <c>Handler</c> object for the thread on which to execute
            the callback. If &lt;code&gt;null&lt;/code&gt;, the <c>Handler</c> associated with the main
            <c>Looper</c> will be used.</param>
        <summary>Adds an <c>AudioRouting.OnRoutingChangedListener</c> to receive notifications of routing
            changes on this AudioTrack.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#addOnRoutingChangedListener(android.media.OnRoutingChangedListener,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.addOnRoutingChangedListener(android.media.OnRoutingChangedListener, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnRoutingChangedListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddOnRoutingChangedListener (listener As IAudioRoutingOnRoutingChangedListener, handler As Handler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddOnRoutingChangedListener(Android::Media::IAudioRoutingOnRoutingChangedListener ^ listener, Android::OS::Handler ^ handler);" />
      <MemberSignature Language="C#" Value="public virtual void AddOnRoutingChangedListener (Android.Media.IAudioRoutingOnRoutingChangedListener? listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnRoutingChangedListener(class Android.Media.IAudioRoutingOnRoutingChangedListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.AddOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member AddOnRoutingChangedListener : Android.Media.IAudioRoutingOnRoutingChangedListener * Android.OS.Handler -&gt; unit&#xA;override this.AddOnRoutingChangedListener : Android.Media.IAudioRoutingOnRoutingChangedListener * Android.OS.Handler -&gt; unit" Usage="audioTrack.AddOnRoutingChangedListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IAudioRouting.AddOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener,Android.OS.Handler)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;Landroid/os/Handler;)V", "GetAddOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Landroid_os_Handler_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;Landroid/os/Handler;)V", "GetAddOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Landroid_os_Handler_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.IAudioRoutingOnRoutingChangedListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">The <c>AudioRouting.OnRoutingChangedListener</c> interface to receive
            notifications of rerouting events.</param>
        <param name="handler">Specifies the <c>Handler</c> object for the thread on which to execute
            the callback. If &lt;code&gt;null&lt;/code&gt;, the <c>Handler</c> associated with the main
            <c>Looper</c> will be used.</param>
        <summary>Adds an <c>AudioRouting.OnRoutingChangedListener</c> to receive notifications of routing
            changes on this AudioTrack.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#addOnRoutingChangedListener(android.media.OnRoutingChangedListener,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.addOnRoutingChangedListener(android.media.OnRoutingChangedListener, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachAuxEffect">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AttachAuxEffect (effectId As Integer) As TrackStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::TrackStatus AttachAuxEffect(int effectId);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus AttachAuxEffect (int effectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus AttachAuxEffect(int32 effectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.AttachAuxEffect(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member AttachAuxEffect : int -&gt; Android.Media.TrackStatus&#xA;override this.AttachAuxEffect : int -&gt; Android.Media.TrackStatus" Usage="audioTrack.AttachAuxEffect effectId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("attachAuxEffect", "(I)I", "GetAttachAuxEffect_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("attachAuxEffect", "(I)I", "GetAttachAuxEffect_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effectId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="effectId">system wide unique id of the effect to attach</param>
        <summary>Attaches an auxiliary effect to the audio track.</summary>
        <returns>error code or success, see <c>#SUCCESS</c>,
               <c>#ERROR_INVALID_OPERATION</c>, <c>#ERROR_BAD_VALUE</c></returns>
        <remarks>
          <para>Attaches an auxiliary effect to the audio track. A typical auxiliary
            effect is a reverberation effect which can be applied on any sound source
            that directs a certain amount of its energy to this effect. This amount
            is defined by setAuxEffectSendLevel().
            <c>#setAuxEffectSendLevel(float)</c>.</para>
          <para>After creating an auxiliary effect (e.g.
            <c>android.media.audiofx.EnvironmentalReverb</c>), retrieve its ID with
            <c>android.media.audiofx.AudioEffect#getId()</c> and use it when calling
            this method to attach the audio track to the effect.</para>
          <para>To detach the effect from the audio track, call this method with a
            null effect id.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#attachAuxEffect(int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.attachAuxEffect(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <altmember cref="M:Android.Media.AudioTrack.SetAuxEffectSendLevel(System.Single)" />
      </Docs>
    </Member>
    <Member MemberName="AudioAttributes">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AudioAttributes As AudioAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::AudioAttributes ^ AudioAttributes { Android::Media::AudioAttributes ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioAttributes AudioAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioAttributes AudioAttributes" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.AudioAttributes" />
      <MemberSignature Language="F#" Value="member this.AudioAttributes : Android.Media.AudioAttributes" Usage="Android.Media.AudioTrack.AudioAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAudioAttributes", "()Landroid/media/AudioAttributes;", "GetGetAudioAttributesHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAudioAttributes", "()Landroid/media/AudioAttributes;", "GetGetAudioAttributesHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the <c>AudioAttributes</c> used in configuration.</summary>
        <value>The <c>AudioAttributes</c> used to configure the AudioTrack.</value>
        <remarks>
          <para>Returns the <c>AudioAttributes</c> used in configuration.
            If a <c>streamType</c> is used instead of an <c>AudioAttributes</c>
            to configure the AudioTrack
            (the use of <c>streamType</c> for configuration is deprecated),
            then the <c>AudioAttributes</c>
            equivalent to the <c>streamType</c> is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getAudioAttributes()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getAudioAttributes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioDescriptionMixLeveldB">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AudioDescriptionMixLeveldB As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property float AudioDescriptionMixLeveldB { float get(); };" />
      <MemberSignature Language="C#" Value="public virtual float AudioDescriptionMixLeveldB { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 AudioDescriptionMixLeveldB" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.AudioDescriptionMixLeveldB" />
      <MemberSignature Language="F#" Value="member this.AudioDescriptionMixLeveldB : single" Usage="Android.Media.AudioTrack.AudioDescriptionMixLeveldB" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAudioDescriptionMixLeveldB", "()F", "GetGetAudioDescriptionMixLeveldBHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAudioDescriptionMixLeveldB", "()F", "GetGetAudioDescriptionMixLeveldBHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Audio Description mix level in dB.</summary>
        <value>the current Audio Description Mix Level in dB.
                A value of <c>Float.NEGATIVE_INFINITY</c> means
                that the audio description is not mixed or
                the hardware is not available.
                This should reflect the &lt;strong&gt;true&lt;/strong&gt; internal device mix level;
                hence the application might receive any floating value
                except <c>Float.NaN</c>.</value>
        <remarks>
          <para>Returns the Audio Description mix level in dB.
            
            If Audio Description mixing is unavailable from the hardware device,
            a value of <c>Float.NEGATIVE_INFINITY</c> is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getAudioDescriptionMixLeveldB()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getAudioDescriptionMixLeveldB()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioFormat">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AudioFormat As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::Encoding AudioFormat { Android::Media::Encoding get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.Encoding AudioFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Encoding AudioFormat" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.AudioFormat" />
      <MemberSignature Language="F#" Value="member this.AudioFormat : Android.Media.Encoding" Usage="Android.Media.AudioTrack.AudioFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAudioFormat", "()I", "GetGetAudioFormatHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAudioFormat", "()I", "GetGetAudioFormatHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured audio data encoding.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the configured audio data encoding. See <c>AudioFormat#ENCODING_PCM_8BIT</c>,
            <c>AudioFormat#ENCODING_PCM_16BIT</c>, and <c>AudioFormat#ENCODING_PCM_FLOAT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getAudioFormat()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getAudioFormat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="AudioSessionId">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AudioSessionId As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int AudioSessionId { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int AudioSessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AudioSessionId" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.AudioSessionId" />
      <MemberSignature Language="F#" Value="member this.AudioSessionId : int" Usage="Android.Media.AudioTrack.AudioSessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAudioSessionId", "()I", "GetGetAudioSessionIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAudioSessionId", "()I", "GetGetAudioSessionIdHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the audio session ID.</summary>
        <value>the ID of the audio session this AudioTrack belongs to.</value>
        <remarks>
          <para>Returns the audio session ID.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getAudioSessionId()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getAudioSessionId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="BufferCapacityInFrames">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BufferCapacityInFrames As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int BufferCapacityInFrames { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int BufferCapacityInFrames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferCapacityInFrames" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.BufferCapacityInFrames" />
      <MemberSignature Language="F#" Value="member this.BufferCapacityInFrames : int" Usage="Android.Media.AudioTrack.BufferCapacityInFrames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBufferCapacityInFrames", "()I", "GetGetBufferCapacityInFramesHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBufferCapacityInFrames", "()I", "GetGetBufferCapacityInFramesHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum size of the <c>AudioTrack</c> buffer in frames.</summary>
        <value>maximum size in frames of the <c>AudioTrack</c> buffer.</value>
        <remarks>
          <para>Returns the maximum size of the <c>AudioTrack</c> buffer in frames.</para>
          <para>If the track's creation mode is <c>#MODE_STATIC</c>,
             it is equal to the specified bufferSizeInBytes on construction, converted to frame units.
             A static track's frame count will not change.</para>
          <para>If the track's creation mode is <c>#MODE_STREAM</c>,
             it is greater than or equal to the specified bufferSizeInBytes converted to frame units.
             For streaming tracks, this value may be rounded up to a larger value if needed by
             the target output sink, and
             if the track is subsequently routed to a different output sink, the
             frame count may enlarge to accommodate.</para>
          <para>If the <c>AudioTrack</c> encoding indicates compressed data,
             e.g. <c>AudioFormat#ENCODING_AC3</c>, then the frame count returned is
             the size of the <c>AudioTrack</c> buffer in bytes.</para>
          <para>See also <c>AudioManager#getProperty(String)</c> for key
             <c>AudioManager#PROPERTY_OUTPUT_FRAMES_PER_BUFFER</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getBufferCapacityInFrames()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getBufferCapacityInFrames()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferSizeInFrames">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BufferSizeInFrames As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int BufferSizeInFrames { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int BufferSizeInFrames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSizeInFrames" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.BufferSizeInFrames" />
      <MemberSignature Language="F#" Value="member this.BufferSizeInFrames : int" Usage="Android.Media.AudioTrack.BufferSizeInFrames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBufferSizeInFrames", "()I", "GetGetBufferSizeInFramesHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBufferSizeInFrames", "()I", "GetGetBufferSizeInFramesHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the effective size of the <c>AudioTrack</c> buffer
            that the application writes to.</summary>
        <value>current size in frames of the <c>AudioTrack</c> buffer.</value>
        <remarks>
          <para>Returns the effective size of the <c>AudioTrack</c> buffer
            that the application writes to.</para>
          <para>This will be less than or equal to the result of
            <c>#getBufferCapacityInFrames()</c>.
            It will be equal if <c>#setBufferSizeInFrames(int)</c> has never been called.</para>
          <para>If the track is subsequently routed to a different output sink, the buffer
            size and capacity may enlarge to accommodate.</para>
          <para>If the <c>AudioTrack</c> encoding indicates compressed data,
            e.g. <c>AudioFormat#ENCODING_AC3</c>, then the frame count returned is
            the size of the <c>AudioTrack</c> buffer in bytes.</para>
          <para>See also <c>AudioManager#getProperty(String)</c> for key
            <c>AudioManager#PROPERTY_OUTPUT_FRAMES_PER_BUFFER</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getBufferSizeInFrames()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getBufferSizeInFrames()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelConfiguration">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChannelConfiguration As ChannelOut" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::ChannelOut ChannelConfiguration { Android::Media::ChannelOut get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.ChannelOut ChannelConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.ChannelOut ChannelConfiguration" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.ChannelConfiguration" />
      <MemberSignature Language="F#" Value="member this.ChannelConfiguration : Android.Media.ChannelOut" Usage="Android.Media.AudioTrack.ChannelConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getChannelConfiguration", "()I", "GetGetChannelConfigurationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getChannelConfiguration", "()I", "GetGetChannelConfigurationHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ChannelOut</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured channel position mask.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the configured channel position mask.</para>
          <para>For example, refer to <c>AudioFormat#CHANNEL_OUT_MONO</c>,
            <c>AudioFormat#CHANNEL_OUT_STEREO</c>, <c>AudioFormat#CHANNEL_OUT_5POINT1</c>.
            This method may return <c>AudioFormat#CHANNEL_INVALID</c> if
            a channel index mask was used. Consider
            <c>#getFormat()</c> instead, to obtain an <c>AudioFormat</c>,
            which contains both the channel position mask and the channel index mask.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getChannelConfiguration()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getChannelConfiguration()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ChannelCount">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ChannelCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ChannelCount { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int ChannelCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelCount" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.ChannelCount" />
      <MemberSignature Language="F#" Value="member this.ChannelCount : int" Usage="Android.Media.AudioTrack.ChannelCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getChannelCount", "()I", "GetGetChannelCountHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getChannelCount", "()I", "GetGetChannelCountHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured number of channels.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the configured number of channels.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getChannelCount()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getChannelCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="CreateVolumeShaper">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateVolumeShaper (configuration As VolumeShaper.Configuration) As VolumeShaper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::VolumeShaper ^ CreateVolumeShaper(Android::Media::VolumeShaper::Configuration ^ configuration);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.VolumeShaper CreateVolumeShaper (Android.Media.VolumeShaper.Configuration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.VolumeShaper CreateVolumeShaper(class Android.Media.VolumeShaper/Configuration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.CreateVolumeShaper(Android.Media.VolumeShaper.Configuration)" />
      <MemberSignature Language="F#" Value="abstract member CreateVolumeShaper : Android.Media.VolumeShaper.Configuration -&gt; Android.Media.VolumeShaper&#xA;override this.CreateVolumeShaper : Android.Media.VolumeShaper.Configuration -&gt; Android.Media.VolumeShaper" Usage="audioTrack.CreateVolumeShaper configuration" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IVolumeAutomation.CreateVolumeShaper(Android.Media.VolumeShaper.Configuration)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createVolumeShaper", "(Landroid/media/VolumeShaper$Configuration;)Landroid/media/VolumeShaper;", "GetCreateVolumeShaper_Landroid_media_VolumeShaper_Configuration_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createVolumeShaper", "(Landroid/media/VolumeShaper$Configuration;)Landroid/media/VolumeShaper;", "GetCreateVolumeShaper_Landroid_media_VolumeShaper_Configuration_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.VolumeShaper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="Android.Media.VolumeShaper+Configuration" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DualMonoMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DualMonoMode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DualMonoMode { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int DualMonoMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DualMonoMode" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.DualMonoMode" />
      <MemberSignature Language="F#" Value="member this.DualMonoMode : int" Usage="Android.Media.AudioTrack.DualMonoMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDualMonoMode", "()I", "GetGetDualMonoModeHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDualMonoMode", "()I", "GetGetDualMonoModeHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the Dual Mono mode presentation setting.</summary>
        <value>one of <c>#DUAL_MONO_MODE_OFF</c>,
                <c>#DUAL_MONO_MODE_LR</c>,
                <c>#DUAL_MONO_MODE_LL</c>,
                <c>#DUAL_MONO_MODE_RR</c>.</value>
        <remarks>
          <para>Returns the Dual Mono mode presentation setting.
            
            If no Dual Mono presentation is available for the output device,
            then <c>#DUAL_MONO_MODE_OFF</c> is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getDualMonoMode()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getDualMonoMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DualMonoModeLl">
      <MemberSignature Language="VB.NET" Value="Public Const DualMonoModeLl As AudioTrackDualMonoMode  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioTrackDualMonoMode DualMonoModeLl = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioTrackDualMonoMode DualMonoModeLl = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioTrackDualMonoMode DualMonoModeLl = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.DualMonoModeLl" />
      <MemberSignature Language="F#" Value="val mutable DualMonoModeLl : Android.Media.AudioTrackDualMonoMode" Usage="Android.Media.AudioTrack.DualMonoModeLl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DUAL_MONO_MODE_LL", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DUAL_MONO_MODE_LL", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackDualMonoMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackDualMonoMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackDualMonoMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>This mode indicates that a stereo stream should be presented
            with the left audio channel replicated into the right audio channel.</summary>
        <remarks>
          <para>This mode indicates that a stereo stream should be presented
            with the left audio channel replicated into the right audio channel.</para>
          <para>Behavior for non-stereo streams is implementation defined.
            A suggested guideline is that all channels with left-right
            stereo symmetry will have the left channel position replicated
            into the right channel position.
            The center channels (with no left/right symmetry) or unbalanced
            channels are left alone.</para>
          <para>The Dual Mono effect occurs before volume scaling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#DUAL_MONO_MODE_LL" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.DUAL_MONO_MODE_LL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DualMonoModeLr">
      <MemberSignature Language="VB.NET" Value="Public Const DualMonoModeLr As AudioTrackDualMonoMode  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioTrackDualMonoMode DualMonoModeLr = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioTrackDualMonoMode DualMonoModeLr = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioTrackDualMonoMode DualMonoModeLr = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.DualMonoModeLr" />
      <MemberSignature Language="F#" Value="val mutable DualMonoModeLr : Android.Media.AudioTrackDualMonoMode" Usage="Android.Media.AudioTrack.DualMonoModeLr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DUAL_MONO_MODE_LR", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DUAL_MONO_MODE_LR", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackDualMonoMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackDualMonoMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackDualMonoMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>This mode indicates that a stereo stream should be presented
            with the left and right audio channels blended together
            and delivered to both channels.</summary>
        <remarks>
          <para>This mode indicates that a stereo stream should be presented
            with the left and right audio channels blended together
            and delivered to both channels.</para>
          <para>Behavior for non-stereo streams is implementation defined.
            A suggested guideline is that the left-right stereo symmetric
            channels are pairwise blended;
            the other channels such as center are left alone.</para>
          <para>The Dual Mono effect occurs before volume scaling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#DUAL_MONO_MODE_LR" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.DUAL_MONO_MODE_LR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DualMonoModeOff">
      <MemberSignature Language="VB.NET" Value="Public Const DualMonoModeOff As AudioTrackDualMonoMode  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioTrackDualMonoMode DualMonoModeOff = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioTrackDualMonoMode DualMonoModeOff = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioTrackDualMonoMode DualMonoModeOff = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.DualMonoModeOff" />
      <MemberSignature Language="F#" Value="val mutable DualMonoModeOff : Android.Media.AudioTrackDualMonoMode" Usage="Android.Media.AudioTrack.DualMonoModeOff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DUAL_MONO_MODE_OFF", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DUAL_MONO_MODE_OFF", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackDualMonoMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackDualMonoMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackDualMonoMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>This mode disables any Dual Mono presentation effect.</summary>
        <remarks>
          <para>This mode disables any Dual Mono presentation effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#DUAL_MONO_MODE_OFF" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.DUAL_MONO_MODE_OFF</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DualMonoModeRr">
      <MemberSignature Language="VB.NET" Value="Public Const DualMonoModeRr As AudioTrackDualMonoMode  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioTrackDualMonoMode DualMonoModeRr = 3;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioTrackDualMonoMode DualMonoModeRr = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioTrackDualMonoMode DualMonoModeRr = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.DualMonoModeRr" />
      <MemberSignature Language="F#" Value="val mutable DualMonoModeRr : Android.Media.AudioTrackDualMonoMode" Usage="Android.Media.AudioTrack.DualMonoModeRr" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DUAL_MONO_MODE_RR", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DUAL_MONO_MODE_RR", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackDualMonoMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackDualMonoMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackDualMonoMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>This mode indicates that a stereo stream should be presented
            with the right audio channel replicated into the left audio channel.</summary>
        <remarks>
          <para>This mode indicates that a stereo stream should be presented
            with the right audio channel replicated into the left audio channel.</para>
          <para>Behavior for non-stereo streams is implementation defined.
            A suggested guideline is that all channels with left-right
            stereo symmetry will have the right channel position replicated
            into the left channel position.
            The center channels (with no left/right symmetry) or unbalanced
            channels are left alone.</para>
          <para>The Dual Mono effect occurs before volume scaling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#DUAL_MONO_MODE_RR" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.DUAL_MONO_MODE_RR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncapsulationMetadataTypeDvbAdDescriptor">
      <MemberSignature Language="VB.NET" Value="Public Const EncapsulationMetadataTypeDvbAdDescriptor As AudioTrackEncapsulationMetadataType  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioTrackEncapsulationMetadataType EncapsulationMetadataTypeDvbAdDescriptor = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioTrackEncapsulationMetadataType EncapsulationMetadataTypeDvbAdDescriptor = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioTrackEncapsulationMetadataType EncapsulationMetadataTypeDvbAdDescriptor = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.EncapsulationMetadataTypeDvbAdDescriptor" />
      <MemberSignature Language="F#" Value="val mutable EncapsulationMetadataTypeDvbAdDescriptor : Android.Media.AudioTrackEncapsulationMetadataType" Usage="Android.Media.AudioTrack.EncapsulationMetadataTypeDvbAdDescriptor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCAPSULATION_METADATA_TYPE_DVB_AD_DESCRIPTOR", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENCAPSULATION_METADATA_TYPE_DVB_AD_DESCRIPTOR", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackEncapsulationMetadataType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackEncapsulationMetadataType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackEncapsulationMetadataType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Encapsulation metadata type for DVB AD descriptor.</summary>
        <remarks>
          <para>Encapsulation metadata type for DVB AD descriptor.</para>
          <para>This metadata is formatted per ETSI TS 101 154 Table E.1: AD_descriptor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#ENCAPSULATION_METADATA_TYPE_DVB_AD_DESCRIPTOR" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.ENCAPSULATION_METADATA_TYPE_DVB_AD_DESCRIPTOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncapsulationMetadataTypeFrameworkTuner">
      <MemberSignature Language="VB.NET" Value="Public Const EncapsulationMetadataTypeFrameworkTuner As AudioTrackEncapsulationMetadataType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioTrackEncapsulationMetadataType EncapsulationMetadataTypeFrameworkTuner = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioTrackEncapsulationMetadataType EncapsulationMetadataTypeFrameworkTuner = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioTrackEncapsulationMetadataType EncapsulationMetadataTypeFrameworkTuner = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.EncapsulationMetadataTypeFrameworkTuner" />
      <MemberSignature Language="F#" Value="val mutable EncapsulationMetadataTypeFrameworkTuner : Android.Media.AudioTrackEncapsulationMetadataType" Usage="Android.Media.AudioTrack.EncapsulationMetadataTypeFrameworkTuner" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCAPSULATION_METADATA_TYPE_FRAMEWORK_TUNER", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENCAPSULATION_METADATA_TYPE_FRAMEWORK_TUNER", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackEncapsulationMetadataType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackEncapsulationMetadataType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackEncapsulationMetadataType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Encapsulation metadata type for framework tuner information.</summary>
        <remarks>
          <para>Encapsulation metadata type for framework tuner information.</para>
          <para>Refer to the Android Media TV Tuner API for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#ENCAPSULATION_METADATA_TYPE_FRAMEWORK_TUNER" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.ENCAPSULATION_METADATA_TYPE_FRAMEWORK_TUNER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncapsulationMetadataTypeSupplementaryAudioPlacement">
      <MemberSignature Language="VB.NET" Value="Public Const EncapsulationMetadataTypeSupplementaryAudioPlacement As AudioTrackEncapsulationMetadataType  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioTrackEncapsulationMetadataType EncapsulationMetadataTypeSupplementaryAudioPlacement = 3;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioTrackEncapsulationMetadataType EncapsulationMetadataTypeSupplementaryAudioPlacement = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioTrackEncapsulationMetadataType EncapsulationMetadataTypeSupplementaryAudioPlacement = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.EncapsulationMetadataTypeSupplementaryAudioPlacement" />
      <MemberSignature Language="F#" Value="val mutable EncapsulationMetadataTypeSupplementaryAudioPlacement : Android.Media.AudioTrackEncapsulationMetadataType" Usage="Android.Media.AudioTrack.EncapsulationMetadataTypeSupplementaryAudioPlacement" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCAPSULATION_METADATA_TYPE_SUPPLEMENTARY_AUDIO_PLACEMENT", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENCAPSULATION_METADATA_TYPE_SUPPLEMENTARY_AUDIO_PLACEMENT", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackEncapsulationMetadataType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackEncapsulationMetadataType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackEncapsulationMetadataType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Encapsulation metadata type for placement of supplementary audio.</summary>
        <remarks>
          <para>Encapsulation metadata type for placement of supplementary audio.
            
            A 32 bit integer constant, one of <c>#SUPPLEMENTARY_AUDIO_PLACEMENT_NORMAL</c>, <c>#SUPPLEMENTARY_AUDIO_PLACEMENT_LEFT</c>, <c>#SUPPLEMENTARY_AUDIO_PLACEMENT_RIGHT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#ENCAPSULATION_METADATA_TYPE_SUPPLEMENTARY_AUDIO_PLACEMENT" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.ENCAPSULATION_METADATA_TYPE_SUPPLEMENTARY_AUDIO_PLACEMENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncapsulationModeElementaryStream">
      <MemberSignature Language="VB.NET" Value="Public Const EncapsulationModeElementaryStream As AudioTrackEncapsulationMode  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioTrackEncapsulationMode EncapsulationModeElementaryStream = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioTrackEncapsulationMode EncapsulationModeElementaryStream = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioTrackEncapsulationMode EncapsulationModeElementaryStream = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.EncapsulationModeElementaryStream" />
      <MemberSignature Language="F#" Value="val mutable EncapsulationModeElementaryStream : Android.Media.AudioTrackEncapsulationMode" Usage="Android.Media.AudioTrack.EncapsulationModeElementaryStream" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCAPSULATION_MODE_ELEMENTARY_STREAM", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENCAPSULATION_MODE_ELEMENTARY_STREAM", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackEncapsulationMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackEncapsulationMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackEncapsulationMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>This mode indicates metadata encapsulation with an elementary stream payload.</summary>
        <remarks>
          <para>This mode indicates metadata encapsulation with an elementary stream payload.
            Both compressed and PCM format is allowed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#ENCAPSULATION_MODE_ELEMENTARY_STREAM" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.ENCAPSULATION_MODE_ELEMENTARY_STREAM</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncapsulationModeNone">
      <MemberSignature Language="VB.NET" Value="Public Const EncapsulationModeNone As AudioTrackEncapsulationMode  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioTrackEncapsulationMode EncapsulationModeNone = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioTrackEncapsulationMode EncapsulationModeNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioTrackEncapsulationMode EncapsulationModeNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.EncapsulationModeNone" />
      <MemberSignature Language="F#" Value="val mutable EncapsulationModeNone : Android.Media.AudioTrackEncapsulationMode" Usage="Android.Media.AudioTrack.EncapsulationModeNone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ENCAPSULATION_MODE_NONE", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ENCAPSULATION_MODE_NONE", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackEncapsulationMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackEncapsulationMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackEncapsulationMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>This mode indicates no metadata encapsulation,
            which is the default mode for sending audio data
            through <c>AudioTrack</c>.</summary>
        <remarks>
          <para>This mode indicates no metadata encapsulation,
            which is the default mode for sending audio data
            through <c>AudioTrack</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#ENCAPSULATION_MODE_NONE" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.ENCAPSULATION_MODE_NONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="VB.NET" Value="Public Const Error As TrackStatus  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::TrackStatus Error = -1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.TrackStatus Error = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.TrackStatus Error = (-1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.Error" />
      <MemberSignature Language="F#" Value="val mutable Error : Android.Media.TrackStatus" Usage="Android.Media.AudioTrack.Error" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ERROR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ERROR")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Denotes a generic operation failure.</summary>
        <remarks>
          <para>Denotes a generic operation failure.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#ERROR" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.ERROR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ErrorBadValue">
      <MemberSignature Language="VB.NET" Value="Public Const ErrorBadValue As TrackStatus  = -2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::TrackStatus ErrorBadValue = -2;" />
      <MemberSignature Language="C#" Value="public const Android.Media.TrackStatus ErrorBadValue = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.TrackStatus ErrorBadValue = (-2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.ErrorBadValue" />
      <MemberSignature Language="F#" Value="val mutable ErrorBadValue : Android.Media.TrackStatus" Usage="Android.Media.AudioTrack.ErrorBadValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ERROR_BAD_VALUE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ERROR_BAD_VALUE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>Denotes a failure due to the use of an invalid value.</summary>
        <remarks>
          <para>Denotes a failure due to the use of an invalid value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#ERROR_BAD_VALUE" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.ERROR_BAD_VALUE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ErrorDeadObject">
      <MemberSignature Language="VB.NET" Value="Public Const ErrorDeadObject As TrackStatus  = -6" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::TrackStatus ErrorDeadObject = -6;" />
      <MemberSignature Language="C#" Value="public const Android.Media.TrackStatus ErrorDeadObject = -6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.TrackStatus ErrorDeadObject = (-6)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.ErrorDeadObject" />
      <MemberSignature Language="F#" Value="val mutable ErrorDeadObject : Android.Media.TrackStatus" Usage="Android.Media.AudioTrack.ErrorDeadObject" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ERROR_DEAD_OBJECT", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ERROR_DEAD_OBJECT", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-6</MemberValue>
      <Docs>
        <summary>An error code indicating that the object reporting it is no longer valid and needs to
            be recreated.</summary>
        <remarks>
          <para>An error code indicating that the object reporting it is no longer valid and needs to
            be recreated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#ERROR_DEAD_OBJECT" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.ERROR_DEAD_OBJECT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorInvalidOperation">
      <MemberSignature Language="VB.NET" Value="Public Const ErrorInvalidOperation As TrackStatus  = -3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::TrackStatus ErrorInvalidOperation = -3;" />
      <MemberSignature Language="C#" Value="public const Android.Media.TrackStatus ErrorInvalidOperation = -3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.TrackStatus ErrorInvalidOperation = (-3)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.ErrorInvalidOperation" />
      <MemberSignature Language="F#" Value="val mutable ErrorInvalidOperation : Android.Media.TrackStatus" Usage="Android.Media.AudioTrack.ErrorInvalidOperation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ERROR_INVALID_OPERATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ERROR_INVALID_OPERATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-3</MemberValue>
      <Docs>
        <summary>Denotes a failure due to the improper use of a method.</summary>
        <remarks>
          <para>Denotes a failure due to the improper use of a method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#ERROR_INVALID_OPERATION" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.ERROR_INVALID_OPERATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Flush();" />
      <MemberSignature Language="C#" Value="public virtual void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.Flush" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="audioTrack.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flush", "()V", "GetFlushHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("flush", "()V", "GetFlushHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Flushes the audio data currently queued for playback.</summary>
        <remarks>
          <para>Flushes the audio data currently queued for playback. Any data that has
            been written but not yet presented will be discarded.  No-op if not stopped or paused,
            or if the track's creation mode is not <c>#MODE_STREAM</c>.
            &lt;BR&gt; Note that although data written but not yet presented is discarded, there is no
            guarantee that all of the buffer space formerly used by that data
            is available for a subsequent write.
            For example, a call to <c>#write(byte[], int, int)</c> with <c>sizeInBytes</c>
            less than or equal to the total buffer size
            may return a short actual transfer count.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#flush()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.flush()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Format As AudioFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::AudioFormat ^ Format { Android::Media::AudioFormat ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioFormat Format" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.Format" />
      <MemberSignature Language="F#" Value="member this.Format : Android.Media.AudioFormat" Usage="Android.Media.AudioTrack.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFormat", "()Landroid/media/AudioFormat;", "GetGetFormatHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFormat", "()Landroid/media/AudioFormat;", "GetGetFormatHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured <c>AudioTrack</c> format.</summary>
        <value>an <c>AudioFormat</c> containing the
            <c>AudioTrack</c> parameters at the time of configuration.</value>
        <remarks>
          <para>Returns the configured <c>AudioTrack</c> format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getFormat()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getFormat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinBufferSize">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMinBufferSize (sampleRateInHz As Integer, channelConfig As ChannelOut, audioFormat As Encoding) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetMinBufferSize(int sampleRateInHz, Android::Media::ChannelOut channelConfig, Android::Media::Encoding audioFormat);" />
      <MemberSignature Language="C#" Value="public static int GetMinBufferSize (int sampleRateInHz, Android.Media.ChannelOut channelConfig, Android.Media.Encoding audioFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMinBufferSize(int32 sampleRateInHz, valuetype Android.Media.ChannelOut channelConfig, valuetype Android.Media.Encoding audioFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.GetMinBufferSize(System.Int32,Android.Media.ChannelOut,Android.Media.Encoding)" />
      <MemberSignature Language="F#" Value="static member GetMinBufferSize : int * Android.Media.ChannelOut * Android.Media.Encoding -&gt; int" Usage="Android.Media.AudioTrack.GetMinBufferSize (sampleRateInHz, channelConfig, audioFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMinBufferSize", "(III)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMinBufferSize", "(III)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelOut">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sampleRateInHz">the source sample rate expressed in Hz.
              <c>AudioFormat#SAMPLE_RATE_UNSPECIFIED</c> is not permitted.</param>
        <param name="channelConfig">describes the configuration of the audio channels.
              See <c>AudioFormat#CHANNEL_OUT_MONO</c> and
              <c>AudioFormat#CHANNEL_OUT_STEREO</c></param>
        <param name="audioFormat">the format in which the audio data is represented.
              See <c>AudioFormat#ENCODING_PCM_16BIT</c> and
              <c>AudioFormat#ENCODING_PCM_8BIT</c>,
              and <c>AudioFormat#ENCODING_PCM_FLOAT</c>.</param>
        <summary>Returns the estimated minimum buffer size required for an AudioTrack
            object to be created in the <c>#MODE_STREAM</c> mode.</summary>
        <returns>
          <c>#ERROR_BAD_VALUE</c> if an invalid parameter was passed,
              or <c>#ERROR</c> if unable to query for output properties,
              or the minimum buffer size expressed in bytes.</returns>
        <remarks>
          <para>Returns the estimated minimum buffer size required for an AudioTrack
            object to be created in the <c>#MODE_STREAM</c> mode.
            The size is an estimate because it does not consider either the route or the sink,
            since neither is known yet.  Note that this size doesn't
            guarantee a smooth playback under load, and higher values should be chosen according to
            the expected frequency at which the buffer will be refilled with additional data to play.
            For example, if you intend to dynamically set the source sample rate of an AudioTrack
            to a higher value than the initial source sample rate, be sure to configure the buffer size
            based on the highest planned sample rate.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getMinBufferSize(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getMinBufferSize(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetNativeOutputSampleRate">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNativeOutputSampleRate (streamType As Stream) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetNativeOutputSampleRate(Android::Media::Stream streamType);" />
      <MemberSignature Language="C#" Value="public static int GetNativeOutputSampleRate (Android.Media.Stream streamType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetNativeOutputSampleRate(valuetype Android.Media.Stream streamType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.GetNativeOutputSampleRate(Android.Media.Stream)" />
      <MemberSignature Language="F#" Value="static member GetNativeOutputSampleRate : Android.Media.Stream -&gt; int" Usage="Android.Media.AudioTrack.GetNativeOutputSampleRate streamType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNativeOutputSampleRate", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNativeOutputSampleRate", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamType">To be added.</param>
        <summary>Returns the output sample rate in Hz for the specified stream type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the output sample rate in Hz for the specified stream type.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getNativeOutputSampleRate(int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getNativeOutputSampleRate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetTimestamp">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTimestamp (timestamp As AudioTimestamp) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetTimestamp(Android::Media::AudioTimestamp ^ timestamp);" />
      <MemberSignature Language="C#" Value="public virtual bool GetTimestamp (Android.Media.AudioTimestamp? timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetTimestamp(class Android.Media.AudioTimestamp timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.GetTimestamp(Android.Media.AudioTimestamp)" />
      <MemberSignature Language="F#" Value="abstract member GetTimestamp : Android.Media.AudioTimestamp -&gt; bool&#xA;override this.GetTimestamp : Android.Media.AudioTimestamp -&gt; bool" Usage="audioTrack.GetTimestamp timestamp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTimestamp", "(Landroid/media/AudioTimestamp;)Z", "GetGetTimestamp_Landroid_media_AudioTimestamp_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTimestamp", "(Landroid/media/AudioTimestamp;)Z", "GetGetTimestamp_Landroid_media_AudioTimestamp_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timestamp" Type="Android.Media.AudioTimestamp" />
      </Parameters>
      <Docs>
        <param name="timestamp">a reference to a non-null AudioTimestamp instance allocated
                   and owned by caller.</param>
        <summary>Poll for a timestamp on demand.</summary>
        <returns>true if a timestamp is available, or false if no timestamp is available.
                    If a timestamp is available,
                    the AudioTimestamp instance is filled in with a position in frame units, together
                    with the estimated time when that frame was presented or is committed to
                    be presented.
                    In the case that no timestamp is available, any supplied instance is left unaltered.
                    A timestamp may be temporarily unavailable while the audio clock is stabilizing,
                    or during and immediately after a route change.
                    A timestamp is permanently unavailable for a given route if the route does not support
                    timestamps.  In this case, the approximate frame position can be obtained
                    using <c>#getPlaybackHeadPosition</c>.
                    However, it may be useful to continue to query for
                    timestamps occasionally, to recover after a route change.</returns>
        <remarks>
          <para>Poll for a timestamp on demand.</para>
          <para>If you need to track timestamps during initial warmup or after a routing or mode change,
            you should request a new timestamp periodically until the reported timestamps
            show that the frame position is advancing, or until it becomes clear that
            timestamps are unavailable for this route.</para>
          <para>After the clock is advancing at a stable rate,
            query for a new timestamp approximately once every 10 seconds to once per minute.
            Calling this method more often is inefficient.
            It is also counter-productive to call this method more often than recommended,
            because the short-term differences between successive timestamp reports are not meaningful.
            If you need a high-resolution mapping between frame position and presentation time,
            consider implementing that at application level, based on low-resolution timestamps.</para>
          <para>The audio data at the returned position may either already have been
            presented, or may have not yet been presented but is committed to be presented.
            It is not possible to request the time corresponding to a particular position,
            or to request the (fractional) position corresponding to a particular time.
            If you need such features, consider implementing them at application level.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getTimestamp(android.media.AudioTimestamp)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getTimestamp(android.media.AudioTimestamp)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirectPlaybackSupported">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDirectPlaybackSupported (format As AudioFormat, attributes As AudioAttributes) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDirectPlaybackSupported(Android::Media::AudioFormat ^ format, Android::Media::AudioAttributes ^ attributes);" />
      <MemberSignature Language="C#" Value="public static bool IsDirectPlaybackSupported (Android.Media.AudioFormat format, Android.Media.AudioAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDirectPlaybackSupported(class Android.Media.AudioFormat format, class Android.Media.AudioAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.IsDirectPlaybackSupported(Android.Media.AudioFormat,Android.Media.AudioAttributes)" />
      <MemberSignature Language="F#" Value="static member IsDirectPlaybackSupported : Android.Media.AudioFormat * Android.Media.AudioAttributes -&gt; bool" Usage="Android.Media.AudioTrack.IsDirectPlaybackSupported (format, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isDirectPlaybackSupported", "(Landroid/media/AudioFormat;Landroid/media/AudioAttributes;)Z", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isDirectPlaybackSupported", "(Landroid/media/AudioFormat;Landroid/media/AudioAttributes;)Z", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="Android.Media.AudioFormat" />
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
      </Parameters>
      <Docs>
        <param name="format">a non-null <c>AudioFormat</c> instance describing the format of
              the audio data.</param>
        <param name="attributes">a non-null <c>AudioAttributes</c> instance.</param>
        <summary>Returns whether direct playback of an audio format with the provided attributes is
            currently supported on the system.</summary>
        <returns>true if the given audio format can be played directly.</returns>
        <remarks>
          <para>Returns whether direct playback of an audio format with the provided attributes is
            currently supported on the system.</para>
          <para>Direct playback means that the audio stream is not resampled or downmixed
            by the framework. Checking for direct support can help the app select the representation
            of audio content that most closely matches the capabilities of the device and peripherials
            (e.g. A/V receiver) connected to it. Note that the provided stream can still be re-encoded
            or mixed with other streams, if needed.</para>
          <para>Also note that this query only provides information about the support of an audio format.
            It does not indicate whether the resources necessary for the playback are available
            at that instant.</para>
          <para>This member is deprecated. Use <c>AudioManager#getDirectPlaybackSupport(AudioFormat, AudioAttributes)</c>
                        instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#isDirectPlaybackSupported(android.media.AudioFormat,%20android.media.AudioAttributes)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.isDirectPlaybackSupported(android.media.AudioFormat, android.media.AudioAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOffloadedPlayback">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsOffloadedPlayback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsOffloadedPlayback { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsOffloadedPlayback { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOffloadedPlayback" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.IsOffloadedPlayback" />
      <MemberSignature Language="F#" Value="member this.IsOffloadedPlayback : bool" Usage="Android.Media.AudioTrack.IsOffloadedPlayback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isOffloadedPlayback", "()Z", "GetIsOffloadedPlaybackHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isOffloadedPlayback", "()Z", "GetIsOffloadedPlaybackHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the track was built with <c>Builder#setOffloadedPlayback(boolean)</c> set
            to <c>true</c>.</summary>
        <value>true if the track is using offloaded playback.</value>
        <remarks>
          <para>Returns whether the track was built with <c>Builder#setOffloadedPlayback(boolean)</c> set
            to <c>true</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#isOffloadedPlayback()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.isOffloadedPlayback()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.AudioTrack.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSessionId">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LogSessionId As LogSessionId" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::Metrics::LogSessionId ^ LogSessionId { Android::Media::Metrics::LogSessionId ^ get(); void set(Android::Media::Metrics::LogSessionId ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.Metrics.LogSessionId LogSessionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Metrics.LogSessionId LogSessionId" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.LogSessionId" />
      <MemberSignature Language="F#" Value="member this.LogSessionId : Android.Media.Metrics.LogSessionId with get, set" Usage="Android.Media.AudioTrack.LogSessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLogSessionId", "()Landroid/media/metrics/LogSessionId;", "GetGetLogSessionIdHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLogSessionId", "()Landroid/media/metrics/LogSessionId;", "GetGetLogSessionIdHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setLogSessionId", "(Landroid/media/metrics/LogSessionId;)V", "GetSetLogSessionId_Landroid_media_metrics_LogSessionId_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setLogSessionId", "(Landroid/media/metrics/LogSessionId;)V", "GetSetLogSessionId_Landroid_media_metrics_LogSessionId_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Metrics.LogSessionId</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="logSessionId">a <c>LogSessionId</c> instance which is used to
                   identify this object to the metrics service. Proper generated
                   Ids must be obtained from the Java metrics service and should
                   be considered opaque. Use
                   <c>LogSessionId#LOG_SESSION_ID_NONE</c> to remove the
                   logSessionId association.</param>
        <summary>Returns the <c>LogSessionId</c>. -or- Sets a <c>LogSessionId</c> instance to this AudioTrack for metrics collection.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the <c>LogSessionId</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getLogSessionId()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getLogSessionId()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets a <c>LogSessionId</c> instance to this AudioTrack for metrics collection.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setLogSessionId(android.media.metrics.LogSessionId)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setLogSessionId(android.media.metrics.LogSessionId)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerReached">
      <MemberSignature Language="VB.NET" Value="Public Custom Event MarkerReached As EventHandler(Of AudioTrack.MarkerReachedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Media::AudioTrack::MarkerReachedEventArgs ^&gt; ^ MarkerReached;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.AudioTrack.MarkerReachedEventArgs&gt; MarkerReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.AudioTrack/MarkerReachedEventArgs&gt; MarkerReached" />
      <MemberSignature Language="DocId" Value="E:Android.Media.AudioTrack.MarkerReached" />
      <MemberSignature Language="F#" Value="member this.MarkerReached : EventHandler&lt;Android.Media.AudioTrack.MarkerReachedEventArgs&gt; " Usage="member this.MarkerReached : System.EventHandler&lt;Android.Media.AudioTrack.MarkerReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.AudioTrack+MarkerReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxVolume">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MaxVolume As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property float MaxVolume { float get(); };" />
      <MemberSignature Language="C#" Value="public static float MaxVolume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float32 MaxVolume" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.MaxVolume" />
      <MemberSignature Language="F#" Value="member this.MaxVolume : single" Usage="Android.Media.AudioTrack.MaxVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaxVolume", "()F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaxVolume", "()F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum gain value, which is greater than or equal to 1.</summary>
        <value>the maximum value, which is greater than or equal to 1.0.</value>
        <remarks>
          <para>Returns the maximum gain value, which is greater than or equal to 1.0.
            Gain values greater than the maximum will be clamped to the maximum.</para>
          <para>The word "volume" in the API name is historical; this is actually a gain.
            expressed as a linear multiplier on sample values, where a maximum value of 1.0
            corresponds to a gain of 0 dB (sample values left unmodified).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getMaxVolume()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getMaxVolume()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Metrics">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Metrics As PersistableBundle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::OS::PersistableBundle ^ Metrics { Android::OS::PersistableBundle ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.PersistableBundle? Metrics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.PersistableBundle Metrics" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.Metrics" />
      <MemberSignature Language="F#" Value="member this.Metrics : Android.OS.PersistableBundle" Usage="Android.Media.AudioTrack.Metrics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMetrics", "()Landroid/os/PersistableBundle;", "GetGetMetricsHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMetrics", "()Landroid/os/PersistableBundle;", "GetGetMetricsHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.PersistableBundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return Metrics data about the current AudioTrack instance.</summary>
        <value>a <c>PersistableBundle</c> containing the set of attributes and values
            available for the media being handled by this instance of AudioTrack
            The attributes are descibed in <c>MetricsConstants</c>.
            
            Additional vendor-specific fields may also be present in
            the return value.</value>
        <remarks>
          <para>Return Metrics data about the current AudioTrack instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getMetrics()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getMetrics()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinVolume">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MinVolume As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property float MinVolume { float get(); };" />
      <MemberSignature Language="C#" Value="public static float MinVolume { get; }" />
      <MemberSignature Language="ILAsm" Value=".property float32 MinVolume" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.MinVolume" />
      <MemberSignature Language="F#" Value="member this.MinVolume : single" Usage="Android.Media.AudioTrack.MinVolume" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMinVolume", "()F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMinVolume", "()F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the minimum gain value, which is the constant 0.</summary>
        <value>the minimum value, which is the constant 0.0.</value>
        <remarks>
          <para>Returns the minimum gain value, which is the constant 0.0.
            Gain values less than 0.0 will be clamped to 0.0.</para>
          <para>The word "volume" in the API name is historical; this is actually a linear gain.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getMinVolume()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getMinVolume()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="NativeFrameCount">
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property NativeFrameCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int NativeFrameCount { int get(); };" />
      <MemberSignature Language="C#" Value="protected virtual int NativeFrameCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NativeFrameCount" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.NativeFrameCount" />
      <MemberSignature Language="F#" Value="member this.NativeFrameCount : int" Usage="Android.Media.AudioTrack.NativeFrameCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNativeFrameCount", "()I", "GetGetNativeFrameCountHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNativeFrameCount", "()I", "GetGetNativeFrameCountHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the frame count of the native <c>AudioTrack</c> buffer.</summary>
        <value>current size in frames of the <c>AudioTrack</c> buffer.</value>
        <remarks>
          <para>Returns the frame count of the native <c>AudioTrack</c> buffer.</para>
          <para>This member is deprecated. Use the identical public method <c>#getBufferSizeInFrames()</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getNativeFrameCount()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getNativeFrameCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="NotificationMarkerPosition">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property NotificationMarkerPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NotificationMarkerPosition { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int NotificationMarkerPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NotificationMarkerPosition" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.NotificationMarkerPosition" />
      <MemberSignature Language="F#" Value="member this.NotificationMarkerPosition : int" Usage="Android.Media.AudioTrack.NotificationMarkerPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNotificationMarkerPosition", "()I", "GetGetNotificationMarkerPositionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNotificationMarkerPosition", "()I", "GetGetNotificationMarkerPositionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns marker position expressed in frames.</summary>
        <value>marker position in wrapping frame units similar to <c>#getPlaybackHeadPosition</c>,
            or zero if marker is disabled.</value>
        <remarks>
          <para>Returns marker position expressed in frames.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getNotificationMarkerPosition()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getNotificationMarkerPosition()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OffloadDelay">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OffloadDelay As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int OffloadDelay { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int OffloadDelay { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OffloadDelay" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.OffloadDelay" />
      <MemberSignature Language="F#" Value="member this.OffloadDelay : int" Usage="Android.Media.AudioTrack.OffloadDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOffloadDelay", "()I", "GetGetOffloadDelayHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOffloadDelay", "()I", "GetGetOffloadDelayHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the decoder delay of an offloaded track, expressed in frames, previously set with
            <c>#setOffloadDelayPadding(int, int)</c>, or 0 if it was never modified.</summary>
        <value>decoder delay expressed in frames.</value>
        <remarks>
          <para>Return the decoder delay of an offloaded track, expressed in frames, previously set with
            <c>#setOffloadDelayPadding(int, int)</c>, or 0 if it was never modified.</para>
          <para>This delay indicates the number of frames to be ignored at the beginning of the stream.
            This value can only be queried on a track successfully initialized with
            <c>AudioTrack.Builder#setOffloadedPlayback(boolean)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getOffloadDelay()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getOffloadDelay()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OffloadPadding">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property OffloadPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int OffloadPadding { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int OffloadPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 OffloadPadding" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.OffloadPadding" />
      <MemberSignature Language="F#" Value="member this.OffloadPadding : int" Usage="Android.Media.AudioTrack.OffloadPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getOffloadPadding", "()I", "GetGetOffloadPaddingHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getOffloadPadding", "()I", "GetGetOffloadPaddingHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the decoder padding of an offloaded track, expressed in frames, previously set with
            <c>#setOffloadDelayPadding(int, int)</c>, or 0 if it was never modified.</summary>
        <value>decoder padding expressed in frames.</value>
        <remarks>
          <para>Return the decoder padding of an offloaded track, expressed in frames, previously set with
            <c>#setOffloadDelayPadding(int, int)</c>, or 0 if it was never modified.</para>
          <para>This padding indicates the number of frames to be ignored at the end of the stream.
            This value can only be queried on a track successfully initialized with
            <c>AudioTrack.Builder#setOffloadedPlayback(boolean)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getOffloadPadding()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getOffloadPadding()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Pause();" />
      <MemberSignature Language="C#" Value="public virtual void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.Pause" />
      <MemberSignature Language="F#" Value="abstract member Pause : unit -&gt; unit&#xA;override this.Pause : unit -&gt; unit" Usage="audioTrack.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pause", "()V", "GetPauseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pause", "()V", "GetPauseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pauses the playback of the audio data.</summary>
        <remarks>
          <para>Pauses the playback of the audio data. Data that has not been played
            back will not be discarded. Subsequent calls to <c>#play</c> will play
            this data back. See <c>#flush()</c> to discard this data.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#pause()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.pause()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="PerformanceMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PerformanceMode As AudioTrackPerformanceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::AudioTrackPerformanceMode PerformanceMode { Android::Media::AudioTrackPerformanceMode get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioTrackPerformanceMode PerformanceMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.AudioTrackPerformanceMode PerformanceMode" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.PerformanceMode" />
      <MemberSignature Language="F#" Value="member this.PerformanceMode : Android.Media.AudioTrackPerformanceMode" Usage="Android.Media.AudioTrack.PerformanceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPerformanceMode", "()I", "GetGetPerformanceModeHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPerformanceMode", "()I", "GetGetPerformanceModeHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackPerformanceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current performance mode of the <c>AudioTrack</c>.</summary>
        <value>one of <c>AudioTrack#PERFORMANCE_MODE_NONE</c>,
            <c>AudioTrack#PERFORMANCE_MODE_LOW_LATENCY</c>,
            or <c>AudioTrack#PERFORMANCE_MODE_POWER_SAVING</c>.
            Use <c>AudioTrack.Builder#setPerformanceMode</c>
            in the <c>AudioTrack.Builder</c> to enable a performance mode.</value>
        <remarks>
          <para>Returns the current performance mode of the <c>AudioTrack</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getPerformanceMode()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getPerformanceMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeriodicNotification">
      <MemberSignature Language="VB.NET" Value="Public Custom Event PeriodicNotification As EventHandler(Of AudioTrack.PeriodicNotificationEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Media::AudioTrack::PeriodicNotificationEventArgs ^&gt; ^ PeriodicNotification;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.AudioTrack.PeriodicNotificationEventArgs&gt; PeriodicNotification;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.AudioTrack/PeriodicNotificationEventArgs&gt; PeriodicNotification" />
      <MemberSignature Language="DocId" Value="E:Android.Media.AudioTrack.PeriodicNotification" />
      <MemberSignature Language="F#" Value="member this.PeriodicNotification : EventHandler&lt;Android.Media.AudioTrack.PeriodicNotificationEventArgs&gt; " Usage="member this.PeriodicNotification : System.EventHandler&lt;Android.Media.AudioTrack.PeriodicNotificationEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.AudioTrack+PeriodicNotificationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Play ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Play();" />
      <MemberSignature Language="C#" Value="public virtual void Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.Play" />
      <MemberSignature Language="F#" Value="abstract member Play : unit -&gt; unit&#xA;override this.Play : unit -&gt; unit" Usage="audioTrack.Play " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("play", "()V", "GetPlayHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("play", "()V", "GetPlayHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts playing an AudioTrack.</summary>
        <remarks>
          <para>Starts playing an AudioTrack.</para>
          <para>If track's creation mode is <c>#MODE_STATIC</c>, you must have called one of
            the write methods (<c>#write(byte[], int, int)</c>, <c>#write(byte[], int, int, int)</c>,
            <c>#write(short[], int, int)</c>, <c>#write(short[], int, int, int)</c>,
            <c>#write(float[], int, int, int)</c>, or <c>#write(ByteBuffer, int, int)</c>) prior to
            play().</para>
          <para>If the mode is <c>#MODE_STREAM</c>, you can optionally prime the data path prior to
            calling play(), by writing up to <c>bufferSizeInBytes</c> (from constructor).
            If you don't call write() first, or if you call write() but with an insufficient amount of
            data, then the track will be in underrun state at play().  In this case,
            playback will not actually start playing until the data path is filled to a
            device-specific minimum level.  This requirement for the path to be filled
            to a minimum level is also true when resuming audio playback after calling stop().
            Similarly the buffer will need to be filled up again after
            the track underruns due to failure to call write() in a timely manner with sufficient data.
            For portability, an application should prime the data path to the maximum allowed
            by writing data until the write() method returns a short transfer count.
            This allows play() to start immediately, and reduces the chance of underrun.</para>
          <para>As of <c>android.os.Build.VERSION_CODES#S</c> the minimum level to start playing
            can be obtained using <c>#getStartThresholdInFrames()</c> and set with
            <c>#setStartThresholdInFrames(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#play()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.play()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if the track isn't properly initialized
</exception>
      </Docs>
    </Member>
    <Member MemberName="PlaybackHeadPosition">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PlaybackHeadPosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PlaybackHeadPosition { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int PlaybackHeadPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PlaybackHeadPosition" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.PlaybackHeadPosition" />
      <MemberSignature Language="F#" Value="member this.PlaybackHeadPosition : int" Usage="Android.Media.AudioTrack.PlaybackHeadPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPlaybackHeadPosition", "()I", "GetGetPlaybackHeadPositionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPlaybackHeadPosition", "()I", "GetGetPlaybackHeadPositionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the playback head position expressed in frames.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the playback head position expressed in frames.
            Though the "int" type is signed 32-bits, the value should be reinterpreted as if it is
            unsigned 32-bits.  That is, the next position after 0x7FFFFFFF is (int) 0x80000000.
            This is a continuously advancing counter.  It will wrap (overflow) periodically,
            for example approximately once every 27:03:11 hours:minutes:seconds at 44.1 kHz.
            It is reset to zero by <c>#flush()</c>, <c>#reloadStaticData()</c>, and <c>#stop()</c>.
            If the track's creation mode is <c>#MODE_STATIC</c>, the return value indicates
            the total number of frames played since reset,
            <i>not</i> the current offset within the buffer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getPlaybackHeadPosition()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getPlaybackHeadPosition()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PlaybackParams">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PlaybackParams As PlaybackParams" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::PlaybackParams ^ PlaybackParams { Android::Media::PlaybackParams ^ get(); void set(Android::Media::PlaybackParams ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.PlaybackParams PlaybackParams { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.PlaybackParams PlaybackParams" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.PlaybackParams" />
      <MemberSignature Language="F#" Value="member this.PlaybackParams : Android.Media.PlaybackParams with get, set" Usage="Android.Media.AudioTrack.PlaybackParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPlaybackParams", "()Landroid/media/PlaybackParams;", "GetGetPlaybackParamsHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPlaybackParams", "()Landroid/media/PlaybackParams;", "GetGetPlaybackParamsHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPlaybackParams", "(Landroid/media/PlaybackParams;)V", "GetSetPlaybackParams_Landroid_media_PlaybackParams_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPlaybackParams", "(Landroid/media/PlaybackParams;)V", "GetSetPlaybackParams_Landroid_media_PlaybackParams_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.PlaybackParams</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="params">see <c>PlaybackParams</c>. In particular,
            speed, pitch, and audio mode should be set.</param>
        <summary>Returns the current playback parameters. -or- Sets the playback parameters.</summary>
        <value>current <c>PlaybackParams</c>.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current playback parameters.
            See <c>#setPlaybackParams(PlaybackParams)</c> to set playback parameters</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getPlaybackParams()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getPlaybackParams()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the playback parameters.
            This method returns failure if it cannot apply the playback parameters.
            One possible cause is that the parameters for speed or pitch are out of range.
            Another possible cause is that the <c>AudioTrack</c> is streaming
            (see <c>#MODE_STREAM</c>) and the
            buffer size is too small. For speeds greater than 1.0f, the <c>AudioTrack</c> buffer
            on configuration must be larger than the speed multiplied by the minimum size
            <c>#getMinBufferSize(int, int, int)</c>) to allow proper playback.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setPlaybackParams(android.media.PlaybackParams)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setPlaybackParams(android.media.PlaybackParams)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaybackRate">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PlaybackRate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PlaybackRate { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int PlaybackRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PlaybackRate" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.PlaybackRate" />
      <MemberSignature Language="F#" Value="member this.PlaybackRate : int" Usage="Android.Media.AudioTrack.PlaybackRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPlaybackRate", "()I", "GetGetPlaybackRateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPlaybackRate", "()I", "GetGetPlaybackRateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current playback sample rate rate in Hz.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the current playback sample rate rate in Hz.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getPlaybackRate()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getPlaybackRate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PlayState">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PlayState As PlayState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::PlayState PlayState { Android::Media::PlayState get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.PlayState PlayState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.PlayState PlayState" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.PlayState" />
      <MemberSignature Language="F#" Value="member this.PlayState : Android.Media.PlayState" Usage="Android.Media.AudioTrack.PlayState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPlayState", "()I", "GetGetPlayStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPlayState", "()I", "GetGetPlayStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.PlayState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the playback state of the AudioTrack instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the playback state of the AudioTrack instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getPlayState()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getPlayState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PositionNotificationPeriod">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PositionNotificationPeriod As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PositionNotificationPeriod { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int PositionNotificationPeriod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionNotificationPeriod" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.PositionNotificationPeriod" />
      <MemberSignature Language="F#" Value="member this.PositionNotificationPeriod : int" Usage="Android.Media.AudioTrack.PositionNotificationPeriod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPositionNotificationPeriod", "()I", "GetGetPositionNotificationPeriodHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPositionNotificationPeriod", "()I", "GetGetPositionNotificationPeriodHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the notification update period expressed in frames.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the notification update period expressed in frames.
            Zero means that no position update notifications are being delivered.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getPositionNotificationPeriod()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getPositionNotificationPeriod()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PreferredDevice">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreferredDevice As AudioDeviceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::AudioDeviceInfo ^ PreferredDevice { Android::Media::AudioDeviceInfo ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioDeviceInfo? PreferredDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioDeviceInfo PreferredDevice" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.PreferredDevice" />
      <MemberSignature Language="F#" Value="member this.PreferredDevice : Android.Media.AudioDeviceInfo" Usage="Android.Media.AudioTrack.PreferredDevice" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Android.Media.IAudioRouting.PreferredDevice</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPreferredDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetPreferredDeviceHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPreferredDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetPreferredDeviceHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioDeviceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the selected output specified by <c>#setPreferredDevice</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the selected output specified by <c>#setPreferredDevice</c>. Note that this
            is not guaranteed to correspond to the actual device being used for playback.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getPreferredDevice()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getPreferredDevice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterStreamEventCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RegisterStreamEventCallback (executor As IExecutor, eventCallback As AudioTrack.StreamEventCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterStreamEventCallback(Java::Util::Concurrent::IExecutor ^ executor, Android::Media::AudioTrack::StreamEventCallback ^ eventCallback);" />
      <MemberSignature Language="C#" Value="public virtual void RegisterStreamEventCallback (Java.Util.Concurrent.IExecutor executor, Android.Media.AudioTrack.StreamEventCallback eventCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterStreamEventCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Media.AudioTrack/StreamEventCallback eventCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.RegisterStreamEventCallback(Java.Util.Concurrent.IExecutor,Android.Media.AudioTrack.StreamEventCallback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterStreamEventCallback : Java.Util.Concurrent.IExecutor * Android.Media.AudioTrack.StreamEventCallback -&gt; unit&#xA;override this.RegisterStreamEventCallback : Java.Util.Concurrent.IExecutor * Android.Media.AudioTrack.StreamEventCallback -&gt; unit" Usage="audioTrack.RegisterStreamEventCallback (executor, eventCallback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerStreamEventCallback", "(Ljava/util/concurrent/Executor;Landroid/media/AudioTrack$StreamEventCallback;)V", "GetRegisterStreamEventCallback_Ljava_util_concurrent_Executor_Landroid_media_AudioTrack_StreamEventCallback_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerStreamEventCallback", "(Ljava/util/concurrent/Executor;Landroid/media/AudioTrack$StreamEventCallback;)V", "GetRegisterStreamEventCallback_Ljava_util_concurrent_Executor_Landroid_media_AudioTrack_StreamEventCallback_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="eventCallback" Type="Android.Media.AudioTrack+StreamEventCallback" />
      </Parameters>
      <Docs>
        <param name="executor">
          <c>Executor</c> to handle the callbacks.</param>
        <param name="eventCallback">the callback to receive the stream event notifications.</param>
        <summary>Registers a callback for the notification of stream events.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#registerStreamEventCallback(java.util.concurrent.Executor,%20android.media.StreamEventCallback)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.registerStreamEventCallback(java.util.concurrent.Executor, android.media.StreamEventCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Release ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Release();" />
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.Release" />
      <MemberSignature Language="F#" Value="abstract member Release : unit -&gt; unit&#xA;override this.Release : unit -&gt; unit" Usage="audioTrack.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "GetReleaseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "()V", "GetReleaseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the native AudioTrack resources.</summary>
        <remarks>
          <para>Releases the native AudioTrack resources.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#release()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ReloadStaticData">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ReloadStaticData () As TrackStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::TrackStatus ReloadStaticData();" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus ReloadStaticData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus ReloadStaticData() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.ReloadStaticData" />
      <MemberSignature Language="F#" Value="abstract member ReloadStaticData : unit -&gt; Android.Media.TrackStatus&#xA;override this.ReloadStaticData : unit -&gt; Android.Media.TrackStatus" Usage="audioTrack.ReloadStaticData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reloadStaticData", "()I", "GetReloadStaticDataHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reloadStaticData", "()I", "GetReloadStaticDataHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Sets the playback head position within the static buffer to zero,
            that is it rewinds to start of static buffer.</summary>
        <returns>error code or success, see <c>#SUCCESS</c>, <c>#ERROR_BAD_VALUE</c>,
             <c>#ERROR_INVALID_OPERATION</c></returns>
        <remarks>
          <para>Sets the playback head position within the static buffer to zero,
            that is it rewinds to start of static buffer.
            The track must be stopped or paused, and
            the track's creation mode must be <c>#MODE_STATIC</c>.</para>
          <para>As of <c>android.os.Build.VERSION_CODES#M</c>, also resets the value returned by
            <c>#getPlaybackHeadPosition()</c> to zero.
            For earlier API levels, the reset behavior is unspecified.</para>
          <para>Use <c>#setPlaybackHeadPosition(int)</c> with a zero position
            if the reset of <c>getPlaybackHeadPosition()</c> is not needed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#reloadStaticData()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.reloadStaticData()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOnCodecFormatChangedListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveOnCodecFormatChangedListener (listener As AudioTrack.IOnCodecFormatChangedListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveOnCodecFormatChangedListener(Android::Media::AudioTrack::IOnCodecFormatChangedListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void RemoveOnCodecFormatChangedListener (Android.Media.AudioTrack.IOnCodecFormatChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnCodecFormatChangedListener(class Android.Media.AudioTrack/IOnCodecFormatChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.RemoveOnCodecFormatChangedListener(Android.Media.AudioTrack.IOnCodecFormatChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnCodecFormatChangedListener : Android.Media.AudioTrack.IOnCodecFormatChangedListener -&gt; unit&#xA;override this.RemoveOnCodecFormatChangedListener : Android.Media.AudioTrack.IOnCodecFormatChangedListener -&gt; unit" Usage="audioTrack.RemoveOnCodecFormatChangedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnCodecFormatChangedListener", "(Landroid/media/AudioTrack$OnCodecFormatChangedListener;)V", "GetRemoveOnCodecFormatChangedListener_Landroid_media_AudioTrack_OnCodecFormatChangedListener_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnCodecFormatChangedListener", "(Landroid/media/AudioTrack$OnCodecFormatChangedListener;)V", "GetRemoveOnCodecFormatChangedListener_Landroid_media_AudioTrack_OnCodecFormatChangedListener_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioTrack+IOnCodecFormatChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">The previously added <c>OnCodecFormatChangedListener</c> interface
            to remove.</param>
        <summary>Removes an <c>OnCodecFormatChangedListener</c> which has been previously added
            to receive codec format change events.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#removeOnCodecFormatChangedListener(android.media.OnCodecFormatChangedListener)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.removeOnCodecFormatChangedListener(android.media.OnCodecFormatChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnRoutingChangedListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveOnRoutingChangedListener (listener As AudioTrack.IOnRoutingChangedListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveOnRoutingChangedListener(Android::Media::AudioTrack::IOnRoutingChangedListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void RemoveOnRoutingChangedListener (Android.Media.AudioTrack.IOnRoutingChangedListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnRoutingChangedListener(class Android.Media.AudioTrack/IOnRoutingChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.RemoveOnRoutingChangedListener(Android.Media.AudioTrack.IOnRoutingChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnRoutingChangedListener : Android.Media.AudioTrack.IOnRoutingChangedListener -&gt; unit&#xA;override this.RemoveOnRoutingChangedListener : Android.Media.AudioTrack.IOnRoutingChangedListener -&gt; unit" Usage="audioTrack.RemoveOnRoutingChangedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnRoutingChangedListener", "(Landroid/media/AudioTrack$OnRoutingChangedListener;)V", "GetRemoveOnRoutingChangedListener_Landroid_media_AudioTrack_OnRoutingChangedListener_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnRoutingChangedListener", "(Landroid/media/AudioTrack$OnRoutingChangedListener;)V", "GetRemoveOnRoutingChangedListener_Landroid_media_AudioTrack_OnRoutingChangedListener_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioTrack+IOnRoutingChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">The previously added <c>AudioRouting.OnRoutingChangedListener</c> interface
            to remove.</param>
        <summary>Removes an <c>AudioRouting.OnRoutingChangedListener</c> which has been previously added
            to receive rerouting notifications.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnRoutingChangedListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveOnRoutingChangedListener (listener As IAudioRoutingOnRoutingChangedListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveOnRoutingChangedListener(Android::Media::IAudioRoutingOnRoutingChangedListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void RemoveOnRoutingChangedListener (Android.Media.IAudioRoutingOnRoutingChangedListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnRoutingChangedListener(class Android.Media.IAudioRoutingOnRoutingChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.RemoveOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnRoutingChangedListener : Android.Media.IAudioRoutingOnRoutingChangedListener -&gt; unit&#xA;override this.RemoveOnRoutingChangedListener : Android.Media.IAudioRoutingOnRoutingChangedListener -&gt; unit" Usage="audioTrack.RemoveOnRoutingChangedListener listener" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IAudioRouting.RemoveOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;)V", "GetRemoveOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;)V", "GetRemoveOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.IAudioRoutingOnRoutingChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">The previously added <c>AudioRouting.OnRoutingChangedListener</c> interface
            to remove.</param>
        <summary>Removes an <c>AudioRouting.OnRoutingChangedListener</c> which has been previously added
            to receive rerouting notifications.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutedDevice">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property RoutedDevice As AudioDeviceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::AudioDeviceInfo ^ RoutedDevice { Android::Media::AudioDeviceInfo ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioDeviceInfo? RoutedDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioDeviceInfo RoutedDevice" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.RoutedDevice" />
      <MemberSignature Language="F#" Value="member this.RoutedDevice : Android.Media.AudioDeviceInfo" Usage="Android.Media.AudioTrack.RoutedDevice" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Android.Media.IAudioRouting.RoutedDevice</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRoutedDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetRoutedDeviceHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRoutedDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetRoutedDeviceHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioDeviceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an <c>AudioDeviceInfo</c> identifying the current routing of this AudioTrack.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns an <c>AudioDeviceInfo</c> identifying the current routing of this AudioTrack.
            Note: The query is only valid if the AudioTrack is currently playing. If it is not,
            <c>getRoutedDevice()</c> will return null.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getRoutedDevice()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getRoutedDevice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutingChanged">
      <MemberSignature Language="VB.NET" Value="Public Custom Event RoutingChanged As EventHandler(Of AudioRoutingOnRoutingChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Media::AudioRoutingOnRoutingChangedEventArgs ^&gt; ^ RoutingChanged;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; RoutingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; RoutingChanged" />
      <MemberSignature Language="DocId" Value="E:Android.Media.AudioTrack.RoutingChanged" />
      <MemberSignature Language="F#" Value="member this.RoutingChanged : EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; " Usage="member this.RoutingChanged : System.EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleRate">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SampleRate As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SampleRate { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int SampleRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SampleRate" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.SampleRate" />
      <MemberSignature Language="F#" Value="member this.SampleRate : int" Usage="Android.Media.AudioTrack.SampleRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSampleRate", "()I", "GetGetSampleRateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSampleRate", "()I", "GetGetSampleRateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured audio source sample rate in Hz.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the configured audio source sample rate in Hz.
            The initial source sample rate depends on the constructor parameters,
            but the source sample rate may change if <c>#setPlaybackRate(int)</c> is called.
            If the constructor had a specific sample rate, then the initial sink sample rate is that
            value.
            If the constructor had <c>AudioFormat#SAMPLE_RATE_UNSPECIFIED</c>,
            then the initial sink sample rate is a route-dependent default value based on the source [sic].</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getSampleRate()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getSampleRate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioDescriptionMixLeveldB">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAudioDescriptionMixLeveldB (level As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetAudioDescriptionMixLeveldB(float level);" />
      <MemberSignature Language="C#" Value="public virtual bool SetAudioDescriptionMixLeveldB (float level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetAudioDescriptionMixLeveldB(float32 level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetAudioDescriptionMixLeveldB(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioDescriptionMixLeveldB : single -&gt; bool&#xA;override this.SetAudioDescriptionMixLeveldB : single -&gt; bool" Usage="audioTrack.SetAudioDescriptionMixLeveldB level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAudioDescriptionMixLeveldB", "(F)Z", "GetSetAudioDescriptionMixLeveldB_FHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAudioDescriptionMixLeveldB", "(F)Z", "GetSetAudioDescriptionMixLeveldB_FHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="level">a floating point value between
                <c>Float.NEGATIVE_INFINITY</c> to <c>+48.f</c>,
                where <c>Float.NEGATIVE_INFINITY</c> means the Audio Description is not mixed
                and a level of <c>0.f</c> means the Audio Description is mixed without scaling.</param>
        <summary>Sets the Audio Description mix level in dB.</summary>
        <returns>true on success, false on failure.</returns>
        <remarks>
          <para>Sets the Audio Description mix level in dB.
            
            For AudioTracks incorporating a secondary Audio Description stream
            (where such contents may be sent through an Encapsulation Mode
            other than <c>#ENCAPSULATION_MODE_NONE</c>).
            or internally by a HW channel),
            the level of mixing of the Audio Description to the Main Audio stream
            is controlled by this method.
            
            Such mixing occurs &lt;strong&gt;prior&lt;/strong&gt; to overall volume scaling.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setAudioDescriptionMixLeveldB(float)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setAudioDescriptionMixLeveldB(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAuxEffectSendLevel">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetAuxEffectSendLevel (level As Single) As TrackStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::TrackStatus SetAuxEffectSendLevel(float level);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetAuxEffectSendLevel (float level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetAuxEffectSendLevel(float32 level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetAuxEffectSendLevel(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetAuxEffectSendLevel : single -&gt; Android.Media.TrackStatus&#xA;override this.SetAuxEffectSendLevel : single -&gt; Android.Media.TrackStatus" Usage="audioTrack.SetAuxEffectSendLevel level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAuxEffectSendLevel", "(F)I", "GetSetAuxEffectSendLevel_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAuxEffectSendLevel", "(F)I", "GetSetAuxEffectSendLevel_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="level">linear send level</param>
        <summary>Sets the send level of the audio track to the attached auxiliary effect
            <c>#attachAuxEffect(int)</c>.</summary>
        <returns>error code or success, see <c>#SUCCESS</c>,
               <c>#ERROR_INVALID_OPERATION</c>, <c>#ERROR</c></returns>
        <remarks>
          <para>Sets the send level of the audio track to the attached auxiliary effect
            <c>#attachAuxEffect(int)</c>.  Effect levels
            are clamped to the closed interval [0.0, max] where
            max is the value of <c>#getMaxVolume</c>.
            A value of 0.0 results in no effect, and a value of 1.0 is full send.</para>
          <para>By default the send level is 0.0f, so even if an effect is attached to the player
            this method must be called for the effect to be applied.</para>
          <para>Note that the passed level value is a linear scalar. UI controls should be scaled
            logarithmically: the gain applied by audio framework ranges from -72dB to at least 0dB,
            so an appropriate conversion from linear UI input x to level is:
            x == 0 -&amp;gt; level = 0
            0 &amp;lt; x &amp;lt;= R -&amp;gt; level = 10^(72*(x-R)/20/R)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setAuxEffectSendLevel(float)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setAuxEffectSendLevel(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetBufferSizeInFrames">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetBufferSizeInFrames (bufferSizeInFrames As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int SetBufferSizeInFrames(int bufferSizeInFrames);" />
      <MemberSignature Language="C#" Value="public virtual int SetBufferSizeInFrames (int bufferSizeInFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SetBufferSizeInFrames(int32 bufferSizeInFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetBufferSizeInFrames(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetBufferSizeInFrames : int -&gt; int&#xA;override this.SetBufferSizeInFrames : int -&gt; int" Usage="audioTrack.SetBufferSizeInFrames bufferSizeInFrames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setBufferSizeInFrames", "(I)I", "GetSetBufferSizeInFrames_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setBufferSizeInFrames", "(I)I", "GetSetBufferSizeInFrames_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bufferSizeInFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bufferSizeInFrames">requested buffer size in frames</param>
        <summary>Limits the effective size of the <c>AudioTrack</c> buffer
            that the application writes to.</summary>
        <returns>the actual buffer size in frames or an error code,
               <c>#ERROR_BAD_VALUE</c>, <c>#ERROR_INVALID_OPERATION</c></returns>
        <remarks>
          <para>Limits the effective size of the <c>AudioTrack</c> buffer
            that the application writes to.</para>
          <para>A write to this AudioTrack will not fill the buffer beyond this limit.
            If a blocking write is used then the write will block until the data
            can fit within this limit.</para>
          <para>Changing this limit modifies the latency associated with
            the buffer for this track. A smaller size will give lower latency
            but there may be more glitches due to buffer underruns.</para>
          <para>The actual size used may not be equal to this requested size.
            It will be limited to a valid range with a maximum of
            <c>#getBufferCapacityInFrames()</c>.
            It may also be adjusted slightly for internal reasons.
            If bufferSizeInFrames is less than zero then <c>#ERROR_BAD_VALUE</c>
            will be returned.</para>
          <para>This method is supported for PCM audio at all API levels.
            Compressed audio is supported in API levels 33 and above.
            For compressed streams the size of a frame is considered to be exactly one byte.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setBufferSizeInFrames(int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setBufferSizeInFrames(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDualMonoMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetDualMonoMode (dualMonoMode As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetDualMonoMode(int dualMonoMode);" />
      <MemberSignature Language="C#" Value="public virtual bool SetDualMonoMode (int dualMonoMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDualMonoMode(int32 dualMonoMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetDualMonoMode(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetDualMonoMode : int -&gt; bool&#xA;override this.SetDualMonoMode : int -&gt; bool" Usage="audioTrack.SetDualMonoMode dualMonoMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDualMonoMode", "(I)Z", "GetSetDualMonoMode_IHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDualMonoMode", "(I)Z", "GetSetDualMonoMode_IHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dualMonoMode" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "DualMonoModeOff", "DualMonoModeLr", "DualMonoModeLl", "DualMonoModeRr" }, Type="Android.Media.AudioTrack")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "DualMonoModeOff", "DualMonoModeLr", "DualMonoModeLl", "DualMonoModeRr" }, Type="Android.Media.AudioTrack")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="dualMonoMode">one of <c>#DUAL_MONO_MODE_OFF</c>,
                <c>#DUAL_MONO_MODE_LR</c>,
                <c>#DUAL_MONO_MODE_LL</c>,
                <c>#DUAL_MONO_MODE_RR</c>.</param>
        <summary>Sets the Dual Mono mode presentation on the output device.</summary>
        <returns>true on success, false on failure if the output device
                does not support Dual Mono mode.</returns>
        <remarks>
          <para>Sets the Dual Mono mode presentation on the output device.</para>
          <para>The Dual Mono mode is generally applied to stereo audio streams
            where the left and right channels come from separate sources.</para>
          <para>For compressed audio, where the decoding is done in hardware,
            Dual Mono presentation needs to be performed
            by the hardware output device
            as the PCM audio is not available to the framework.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setDualMonoMode(int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setDualMonoMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLoopPoints">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetLoopPoints (startInFrames As Integer, endInFrames As Integer, loopCount As Integer) As TrackStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::TrackStatus SetLoopPoints(int startInFrames, int endInFrames, int loopCount);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetLoopPoints (int startInFrames, int endInFrames, int loopCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetLoopPoints(int32 startInFrames, int32 endInFrames, int32 loopCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetLoopPoints(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetLoopPoints : int * int * int -&gt; Android.Media.TrackStatus&#xA;override this.SetLoopPoints : int * int * int -&gt; Android.Media.TrackStatus" Usage="audioTrack.SetLoopPoints (startInFrames, endInFrames, loopCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLoopPoints", "(III)I", "GetSetLoopPoints_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLoopPoints", "(III)I", "GetSetLoopPoints_IIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startInFrames" Type="System.Int32" />
        <Parameter Name="endInFrames" Type="System.Int32" />
        <Parameter Name="loopCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startInFrames">loop start marker expressed in frames.
            Zero corresponds to start of buffer.
            The start marker must not be greater than or equal to the buffer size in frames, or negative.</param>
        <param name="endInFrames">loop end marker expressed in frames.
            The total buffer size in frames corresponds to end of buffer.
            The end marker must not be greater than the buffer size in frames.
            For looping, the end marker must not be less than or equal to the start marker,
            but to disable looping
            it is permitted for start marker, end marker, and loop count to all be 0.
            If any input parameters are out of range, this method returns <c>#ERROR_BAD_VALUE</c>.
            If the loop period (endInFrames - startInFrames) is too small for the implementation to
            support,
            <c>#ERROR_BAD_VALUE</c> is returned.
            The loop range is the interval [startInFrames, endInFrames).
            &lt;br&gt;
            As of <c>android.os.Build.VERSION_CODES#M</c>, the position is left unchanged,
            unless it is greater than or equal to the loop end marker, in which case
            it is forced to the loop start marker.
            For earlier API levels, the effect on position is unspecified.</param>
        <param name="loopCount">the number of times the loop is looped; must be greater than or equal to -1.
               A value of -1 means infinite looping, and 0 disables looping.
               A value of positive N means to "loop" (go back) N times.  For example,
               a value of one means to play the region two times in total.</param>
        <summary>Sets the loop points and the loop count.</summary>
        <returns>error code or success, see <c>#SUCCESS</c>, <c>#ERROR_BAD_VALUE</c>,
               <c>#ERROR_INVALID_OPERATION</c></returns>
        <remarks>
          <para>Sets the loop points and the loop count. The loop can be infinite.
            Similarly to setPlaybackHeadPosition,
            the track must be stopped or paused for the loop points to be changed,
            and must use the <c>#MODE_STATIC</c> mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setLoopPoints(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setLoopPoints(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetNotificationMarkerPosition">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetNotificationMarkerPosition (markerInFrames As Integer) As TrackStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::TrackStatus SetNotificationMarkerPosition(int markerInFrames);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetNotificationMarkerPosition (int markerInFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetNotificationMarkerPosition(int32 markerInFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetNotificationMarkerPosition(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetNotificationMarkerPosition : int -&gt; Android.Media.TrackStatus&#xA;override this.SetNotificationMarkerPosition : int -&gt; Android.Media.TrackStatus" Usage="audioTrack.SetNotificationMarkerPosition markerInFrames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setNotificationMarkerPosition", "(I)I", "GetSetNotificationMarkerPosition_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setNotificationMarkerPosition", "(I)I", "GetSetNotificationMarkerPosition_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="markerInFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="markerInFrames">marker position in wrapping frame units similar to
            <c>#getPlaybackHeadPosition</c>, or zero to disable the marker.
            To set a marker at a position which would appear as zero due to wraparound,
            a workaround is to use a non-zero position near zero, such as -1 or 1.</param>
        <summary>Sets the position of the notification marker.</summary>
        <returns>error code or success, see <c>#SUCCESS</c>, <c>#ERROR_BAD_VALUE</c>,
             <c>#ERROR_INVALID_OPERATION</c></returns>
        <remarks>
          <para>Sets the position of the notification marker.  At most one marker can be active.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setNotificationMarkerPosition(int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setNotificationMarkerPosition(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetOffloadDelayPadding">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOffloadDelayPadding (delayInFrames As Integer, paddingInFrames As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOffloadDelayPadding(int delayInFrames, int paddingInFrames);" />
      <MemberSignature Language="C#" Value="public virtual void SetOffloadDelayPadding (int delayInFrames, int paddingInFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOffloadDelayPadding(int32 delayInFrames, int32 paddingInFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetOffloadDelayPadding(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetOffloadDelayPadding : int * int -&gt; unit&#xA;override this.SetOffloadDelayPadding : int * int -&gt; unit" Usage="audioTrack.SetOffloadDelayPadding (delayInFrames, paddingInFrames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOffloadDelayPadding", "(II)V", "GetSetOffloadDelayPadding_IIHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOffloadDelayPadding", "(II)V", "GetSetOffloadDelayPadding_IIHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delayInFrames" Type="System.Int32" />
        <Parameter Name="paddingInFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="delayInFrames">number of frames to be ignored at the beginning of the stream. A value
                of 0 indicates no delay is to be applied.</param>
        <param name="paddingInFrames">number of frames to be ignored at the end of the stream. A value of 0
                of 0 indicates no padding is to be applied.</param>
        <summary>Configures the delay and padding values for the current compressed stream playing
            in offload mode.</summary>
        <remarks>
          <para>Configures the delay and padding values for the current compressed stream playing
            in offload mode.
            This can only be used on a track successfully initialized with
            <c>AudioTrack.Builder#setOffloadedPlayback(boolean)</c>. The unit is frames, where a
            frame indicates the number of samples per channel, e.g. 100 frames for a stereo compressed
            stream corresponds to 200 decoded interleaved PCM samples.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setOffloadDelayPadding(int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setOffloadDelayPadding(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOffloadEndOfStream">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOffloadEndOfStream ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOffloadEndOfStream();" />
      <MemberSignature Language="C#" Value="public virtual void SetOffloadEndOfStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOffloadEndOfStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetOffloadEndOfStream" />
      <MemberSignature Language="F#" Value="abstract member SetOffloadEndOfStream : unit -&gt; unit&#xA;override this.SetOffloadEndOfStream : unit -&gt; unit" Usage="audioTrack.SetOffloadEndOfStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOffloadEndOfStream", "()V", "GetSetOffloadEndOfStreamHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOffloadEndOfStream", "()V", "GetSetOffloadEndOfStreamHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Declares that the last write() operation on this track provided the last buffer of this
            stream.</summary>
        <remarks>
          <para>Declares that the last write() operation on this track provided the last buffer of this
            stream.
            After the end of stream, previously set padding and delay values are ignored.
            Can only be called only if the AudioTrack is opened in offload mode
            <c>Builder#setOffloadedPlayback(boolean)</c>.
            Can only be called only if the AudioTrack is in state <c>#PLAYSTATE_PLAYING</c><c>#getPlayState()</c>.
            Use this method in the same thread as any write() operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setOffloadEndOfStream()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setOffloadEndOfStream()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPlaybackHeadPosition">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPlaybackHeadPosition (positionInFrames As Integer) As TrackStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::TrackStatus SetPlaybackHeadPosition(int positionInFrames);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetPlaybackHeadPosition (int positionInFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetPlaybackHeadPosition(int32 positionInFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetPlaybackHeadPosition(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPlaybackHeadPosition : int -&gt; Android.Media.TrackStatus&#xA;override this.SetPlaybackHeadPosition : int -&gt; Android.Media.TrackStatus" Usage="audioTrack.SetPlaybackHeadPosition positionInFrames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPlaybackHeadPosition", "(I)I", "GetSetPlaybackHeadPosition_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPlaybackHeadPosition", "(I)I", "GetSetPlaybackHeadPosition_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="positionInFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="positionInFrames">playback head position within buffer, expressed in frames.
            Zero corresponds to start of buffer.
            The position must not be greater than the buffer size in frames, or negative.
            Though this method and <c>#getPlaybackHeadPosition()</c> have similar names,
            the position values have different meanings.
            &lt;br&gt;
            If looping is currently enabled and the new position is greater than or equal to the
            loop end marker, the behavior varies by API level:
            as of <c>android.os.Build.VERSION_CODES#M</c>,
            the looping is first disabled and then the position is set.
            For earlier API levels, the behavior is unspecified.</param>
        <summary>Sets the playback head position within the static buffer.</summary>
        <returns>error code or success, see <c>#SUCCESS</c>, <c>#ERROR_BAD_VALUE</c>,
               <c>#ERROR_INVALID_OPERATION</c></returns>
        <remarks>
          <para>Sets the playback head position within the static buffer.
            The track must be stopped or paused for the position to be changed,
            and must use the <c>#MODE_STATIC</c> mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setPlaybackHeadPosition(int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setPlaybackHeadPosition(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPlaybackPositionUpdateListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPlaybackPositionUpdateListener (listener As AudioTrack.IOnPlaybackPositionUpdateListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPlaybackPositionUpdateListener(Android::Media::AudioTrack::IOnPlaybackPositionUpdateListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void SetPlaybackPositionUpdateListener (Android.Media.AudioTrack.IOnPlaybackPositionUpdateListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPlaybackPositionUpdateListener(class Android.Media.AudioTrack/IOnPlaybackPositionUpdateListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetPlaybackPositionUpdateListener(Android.Media.AudioTrack.IOnPlaybackPositionUpdateListener)" />
      <MemberSignature Language="F#" Value="abstract member SetPlaybackPositionUpdateListener : Android.Media.AudioTrack.IOnPlaybackPositionUpdateListener -&gt; unit&#xA;override this.SetPlaybackPositionUpdateListener : Android.Media.AudioTrack.IOnPlaybackPositionUpdateListener -&gt; unit" Usage="audioTrack.SetPlaybackPositionUpdateListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPlaybackPositionUpdateListener", "(Landroid/media/AudioTrack$OnPlaybackPositionUpdateListener;)V", "GetSetPlaybackPositionUpdateListener_Landroid_media_AudioTrack_OnPlaybackPositionUpdateListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPlaybackPositionUpdateListener", "(Landroid/media/AudioTrack$OnPlaybackPositionUpdateListener;)V", "GetSetPlaybackPositionUpdateListener_Landroid_media_AudioTrack_OnPlaybackPositionUpdateListener_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioTrack+IOnPlaybackPositionUpdateListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>Sets the listener the AudioTrack notifies when a previously set marker is reached or
 for each periodic playback head position update.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPlaybackPositionUpdateListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPlaybackPositionUpdateListener (listener As AudioTrack.IOnPlaybackPositionUpdateListener, handler As Handler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPlaybackPositionUpdateListener(Android::Media::AudioTrack::IOnPlaybackPositionUpdateListener ^ listener, Android::OS::Handler ^ handler);" />
      <MemberSignature Language="C#" Value="public virtual void SetPlaybackPositionUpdateListener (Android.Media.AudioTrack.IOnPlaybackPositionUpdateListener? listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPlaybackPositionUpdateListener(class Android.Media.AudioTrack/IOnPlaybackPositionUpdateListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetPlaybackPositionUpdateListener(Android.Media.AudioTrack.IOnPlaybackPositionUpdateListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member SetPlaybackPositionUpdateListener : Android.Media.AudioTrack.IOnPlaybackPositionUpdateListener * Android.OS.Handler -&gt; unit&#xA;override this.SetPlaybackPositionUpdateListener : Android.Media.AudioTrack.IOnPlaybackPositionUpdateListener * Android.OS.Handler -&gt; unit" Usage="audioTrack.SetPlaybackPositionUpdateListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPlaybackPositionUpdateListener", "(Landroid/media/AudioTrack$OnPlaybackPositionUpdateListener;Landroid/os/Handler;)V", "GetSetPlaybackPositionUpdateListener_Landroid_media_AudioTrack_OnPlaybackPositionUpdateListener_Landroid_os_Handler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPlaybackPositionUpdateListener", "(Landroid/media/AudioTrack$OnPlaybackPositionUpdateListener;Landroid/os/Handler;)V", "GetSetPlaybackPositionUpdateListener_Landroid_media_AudioTrack_OnPlaybackPositionUpdateListener_Landroid_os_Handler_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioTrack+IOnPlaybackPositionUpdateListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <param name="handler">the Handler that will receive the event notification messages.
</param>
        <summary>Sets the listener the AudioTrack notifies when a previously set marker is reached or
 for each periodic playback head position update.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPlaybackRate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPlaybackRate (sampleRateInHz As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int SetPlaybackRate(int sampleRateInHz);" />
      <MemberSignature Language="C#" Value="public virtual int SetPlaybackRate (int sampleRateInHz);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SetPlaybackRate(int32 sampleRateInHz) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetPlaybackRate(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPlaybackRate : int -&gt; int&#xA;override this.SetPlaybackRate : int -&gt; int" Usage="audioTrack.SetPlaybackRate sampleRateInHz" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPlaybackRate", "(I)I", "GetSetPlaybackRate_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPlaybackRate", "(I)I", "GetSetPlaybackRate_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sampleRateInHz">the sample rate expressed in Hz</param>
        <summary>Sets the playback sample rate for this track.</summary>
        <returns>error code or success, see <c>#SUCCESS</c>, <c>#ERROR_BAD_VALUE</c>,
               <c>#ERROR_INVALID_OPERATION</c></returns>
        <remarks>
          <para>Sets the playback sample rate for this track. This sets the sampling rate at which
            the audio data will be consumed and played back
            (as set by the sampleRateInHz parameter in the
            <c>#AudioTrack(int, int, int, int, int, int)</c> constructor),
            not the original sampling rate of the
            content. For example, setting it to half the sample rate of the content will cause the
            playback to last twice as long, but will also result in a pitch shift down by one octave.
            The valid sample rate range is from 1 Hz to twice the value returned by
            <c>#getNativeOutputSampleRate(int)</c>.
            Use <c>#setPlaybackParams(PlaybackParams)</c> for speed control.</para>
          <para>This method may also be used to repurpose an existing <c>AudioTrack</c>
            for playback of content of differing sample rate,
            but with identical encoding and channel mask.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setPlaybackRate(int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setPlaybackRate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPositionNotificationPeriod">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPositionNotificationPeriod (periodInFrames As Integer) As TrackStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::TrackStatus SetPositionNotificationPeriod(int periodInFrames);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetPositionNotificationPeriod (int periodInFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetPositionNotificationPeriod(int32 periodInFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetPositionNotificationPeriod(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPositionNotificationPeriod : int -&gt; Android.Media.TrackStatus&#xA;override this.SetPositionNotificationPeriod : int -&gt; Android.Media.TrackStatus" Usage="audioTrack.SetPositionNotificationPeriod periodInFrames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPositionNotificationPeriod", "(I)I", "GetSetPositionNotificationPeriod_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPositionNotificationPeriod", "(I)I", "GetSetPositionNotificationPeriod_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="periodInFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="periodInFrames">update period expressed in frames.
            Zero period means no position updates.  A negative period is not allowed.</param>
        <summary>Sets the period for the periodic notification event.</summary>
        <returns>error code or success, see <c>#SUCCESS</c>, <c>#ERROR_INVALID_OPERATION</c></returns>
        <remarks>
          <para>Sets the period for the periodic notification event.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setPositionNotificationPeriod(int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setPositionNotificationPeriod(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPreferredDevice">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPreferredDevice (deviceInfo As AudioDeviceInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetPreferredDevice(Android::Media::AudioDeviceInfo ^ deviceInfo);" />
      <MemberSignature Language="C#" Value="public virtual bool SetPreferredDevice (Android.Media.AudioDeviceInfo? deviceInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPreferredDevice(class Android.Media.AudioDeviceInfo deviceInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetPreferredDevice(Android.Media.AudioDeviceInfo)" />
      <MemberSignature Language="F#" Value="abstract member SetPreferredDevice : Android.Media.AudioDeviceInfo -&gt; bool&#xA;override this.SetPreferredDevice : Android.Media.AudioDeviceInfo -&gt; bool" Usage="audioTrack.SetPreferredDevice deviceInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IAudioRouting.SetPreferredDevice(Android.Media.AudioDeviceInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPreferredDevice", "(Landroid/media/AudioDeviceInfo;)Z", "GetSetPreferredDevice_Landroid_media_AudioDeviceInfo_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPreferredDevice", "(Landroid/media/AudioDeviceInfo;)Z", "GetSetPreferredDevice_Landroid_media_AudioDeviceInfo_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceInfo" Type="Android.Media.AudioDeviceInfo" />
      </Parameters>
      <Docs>
        <param name="deviceInfo">The <c>AudioDeviceInfo</c> specifying the audio sink.
             If deviceInfo is null, default routing is restored.</param>
        <summary>Specifies an audio device (via an <c>AudioDeviceInfo</c> object) to route
            the output from this AudioTrack.</summary>
        <returns>true if succesful, false if the specified <c>AudioDeviceInfo</c> is non-null and
            does not correspond to a valid audio output device.</returns>
        <remarks>
          <para>Specifies an audio device (via an <c>AudioDeviceInfo</c> object) to route
            the output from this AudioTrack.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setPreferredDevice(android.media.AudioDeviceInfo)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setPreferredDevice(android.media.AudioDeviceInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPresentation">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPresentation (presentation As AudioPresentation) As TrackStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::TrackStatus SetPresentation(Android::Media::AudioPresentation ^ presentation);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetPresentation (Android.Media.AudioPresentation presentation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetPresentation(class Android.Media.AudioPresentation presentation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetPresentation(Android.Media.AudioPresentation)" />
      <MemberSignature Language="F#" Value="abstract member SetPresentation : Android.Media.AudioPresentation -&gt; Android.Media.TrackStatus&#xA;override this.SetPresentation : Android.Media.AudioPresentation -&gt; Android.Media.TrackStatus" Usage="audioTrack.SetPresentation presentation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPresentation", "(Landroid/media/AudioPresentation;)I", "GetSetPresentation_Landroid_media_AudioPresentation_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPresentation", "(Landroid/media/AudioPresentation;)I", "GetSetPresentation_Landroid_media_AudioPresentation_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presentation" Type="Android.Media.AudioPresentation" />
      </Parameters>
      <Docs>
        <param name="presentation">see <c>AudioPresentation</c>. In particular, id should be set.</param>
        <summary>Sets the audio presentation.</summary>
        <returns>error code or success, see <c>#SUCCESS</c>, <c>#ERROR</c>,
               <c>#ERROR_BAD_VALUE</c>, <c>#ERROR_INVALID_OPERATION</c></returns>
        <remarks>
          <para>Sets the audio presentation.
            If the audio presentation is invalid then <c>#ERROR_BAD_VALUE</c> will be returned.
            If a multi-stream decoder (MSD) is not present, or the format does not support
            multiple presentations, then <c>#ERROR_INVALID_OPERATION</c> will be returned.
            <c>#ERROR</c> is returned in case of any other error.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setPresentation(android.media.AudioPresentation)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setPresentation(android.media.AudioPresentation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStartThresholdInFrames">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetStartThresholdInFrames (startThresholdInFrames As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int SetStartThresholdInFrames(int startThresholdInFrames);" />
      <MemberSignature Language="C#" Value="public virtual int SetStartThresholdInFrames (int startThresholdInFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SetStartThresholdInFrames(int32 startThresholdInFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetStartThresholdInFrames(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetStartThresholdInFrames : int -&gt; int&#xA;override this.SetStartThresholdInFrames : int -&gt; int" Usage="audioTrack.SetStartThresholdInFrames startThresholdInFrames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStartThresholdInFrames", "(I)I", "GetSetStartThresholdInFrames_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStartThresholdInFrames", "(I)I", "GetSetStartThresholdInFrames_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startThresholdInFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startThresholdInFrames">the desired start threshold.</param>
        <summary>Sets the streaming start threshold for an <c>AudioTrack</c>.</summary>
        <returns>the actual start threshold in frames value. This is
                    an integer between 1 to the buffer capacity
                    (see <c>#getBufferCapacityInFrames()</c>),
                    and might change if the output sink changes after track creation.</returns>
        <remarks>
          <para>Sets the streaming start threshold for an <c>AudioTrack</c>.</para>
          <para>The streaming start threshold is the buffer level that the written audio
            data must reach for audio streaming to start after <c>#play()</c> is called.</para>
          <para>For compressed streams, the size of a frame is considered to be exactly one byte.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setStartThresholdInFrames(int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setStartThresholdInFrames(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetState">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub SetState (state As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void SetState(int state);" />
      <MemberSignature Language="C#" Value="protected virtual void SetState (int state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetState(int32 state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetState(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetState : int -&gt; unit&#xA;override this.SetState : int -&gt; unit" Usage="audioTrack.SetState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setState", "(I)V", "GetSetState_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setState", "(I)V", "GetSetState_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="state">the state of the AudioTrack instance</param>
        <summary>Sets the initialization state of the instance.</summary>
        <remarks>
          <para>Sets the initialization state of the instance. This method was originally intended to be used
            in an AudioTrack subclass constructor to set a subclass-specific post-initialization state.
            However, subclasses of AudioTrack are no longer recommended, so this method is obsolete.</para>
          <para>This member is deprecated. Only accessible by subclasses, which are not recommended for AudioTrack.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setState(int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setState(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetStereoVolume">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetStereoVolume (leftGain As Single, rightGain As Single) As TrackStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::TrackStatus SetStereoVolume(float leftGain, float rightGain);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetStereoVolume (float leftGain, float rightGain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetStereoVolume(float32 leftGain, float32 rightGain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetStereoVolume(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetStereoVolume : single * single -&gt; Android.Media.TrackStatus&#xA;override this.SetStereoVolume : single * single -&gt; Android.Media.TrackStatus" Usage="audioTrack.SetStereoVolume (leftGain, rightGain)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStereoVolume", "(FF)I", "GetSetStereoVolume_FFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStereoVolume", "(FF)I", "GetSetStereoVolume_FFHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftGain" Type="System.Single" />
        <Parameter Name="rightGain" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="leftGain">output gain for the left channel.</param>
        <param name="rightGain">output gain for the right channel</param>
        <summary>Sets the specified left and right output gain values on the AudioTrack.</summary>
        <returns>error code or success, see <c>#SUCCESS</c>,
               <c>#ERROR_INVALID_OPERATION</c></returns>
        <remarks>
          <para>Sets the specified left and right output gain values on the AudioTrack.</para>
          <para>Gain values are clamped to the closed interval [0.0, max] where
            max is the value of <c>#getMaxVolume</c>.
            A value of 0.0 results in zero gain (silence), and
            a value of 1.0 means unity gain (signal unchanged).
            The default value is 1.0 meaning unity gain.</para>
          <para>The word "volume" in the API name is historical; this is actually a linear gain.</para>
          <para>This member is deprecated. Applications should use <c>#setVolume</c> instead, as it
            more gracefully scales down to mono, and up to multi-channel content beyond stereo.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setStereoVolume(float,%20float)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setStereoVolume(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetVolume">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetVolume (gain As Single) As TrackStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Media::TrackStatus SetVolume(float gain);" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.TrackStatus SetVolume (float gain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.TrackStatus SetVolume(float32 gain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.SetVolume(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetVolume : single -&gt; Android.Media.TrackStatus&#xA;override this.SetVolume : single -&gt; Android.Media.TrackStatus" Usage="audioTrack.SetVolume gain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVolume", "(F)I", "GetSetVolume_FHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVolume", "(F)I", "GetSetVolume_FHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="gain" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="gain">output gain for all channels.</param>
        <summary>Sets the specified output gain value on all channels of this track.</summary>
        <returns>error code or success, see <c>#SUCCESS</c>,
               <c>#ERROR_INVALID_OPERATION</c></returns>
        <remarks>
          <para>Sets the specified output gain value on all channels of this track.</para>
          <para>Gain values are clamped to the closed interval [0.0, max] where
            max is the value of <c>#getMaxVolume</c>.
            A value of 0.0 results in zero gain (silence), and
            a value of 1.0 means unity gain (signal unchanged).
            The default value is 1.0 meaning unity gain.</para>
          <para>This API is preferred over <c>#setStereoVolume</c>, as it
            more gracefully scales down to mono, and up to multi-channel content beyond stereo.</para>
          <para>The word "volume" in the API name is historical; this is actually a linear gain.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#setVolume(float)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.setVolume(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartThresholdInFrames">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StartThresholdInFrames As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int StartThresholdInFrames { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int StartThresholdInFrames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 StartThresholdInFrames" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.StartThresholdInFrames" />
      <MemberSignature Language="F#" Value="member this.StartThresholdInFrames : int" Usage="Android.Media.AudioTrack.StartThresholdInFrames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStartThresholdInFrames", "()I", "GetGetStartThresholdInFramesHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStartThresholdInFrames", "()I", "GetGetStartThresholdInFramesHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the streaming start threshold of the <c>AudioTrack</c>.</summary>
        <value>the current start threshold in frames value. This is
                    an integer between 1 to the buffer capacity
                    (see <c>#getBufferCapacityInFrames()</c>),
                    and might change if the  output sink changes after track creation.</value>
        <remarks>
          <para>Returns the streaming start threshold of the <c>AudioTrack</c>.</para>
          <para>The streaming start threshold is the buffer level that the written audio
            data must reach for audio streaming to start after <c>#play()</c> is called.
            When an <c>AudioTrack</c> is created, the streaming start threshold
            is the buffer capacity in frames. If the buffer size in frames is reduced
            by <c>#setBufferSizeInFrames(int)</c> to a value smaller than the start threshold
            then that value will be used instead for the streaming start threshold.</para>
          <para>For compressed streams, the size of a frame is considered to be exactly one byte.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getStartThresholdInFrames()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getStartThresholdInFrames()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property State As AudioTrackState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::AudioTrackState State { Android::Media::AudioTrackState get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioTrackState State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.AudioTrackState State" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.State" />
      <MemberSignature Language="F#" Value="member this.State : Android.Media.AudioTrackState" Usage="Android.Media.AudioTrack.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getState", "()I", "GetGetStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getState", "()I", "GetGetStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the state of the AudioTrack instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the state of the AudioTrack instance. This is useful after the
            AudioTrack instance has been created to check if it was initialized
            properly. This ensures that the appropriate resources have been acquired.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getState()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Stop();" />
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.Stop" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="audioTrack.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stop", "()V", "GetStopHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stop", "()V", "GetStopHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops playing the audio data.</summary>
        <remarks>
          <para>Stops playing the audio data.
            When used on an instance created in <c>#MODE_STREAM</c> mode, audio will stop playing
            after the last buffer that was written has been played. For an immediate stop, use
            <c>#pause()</c>, followed by <c>#flush()</c> to discard audio data that hasn't been played
            back yet.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#stop()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.stop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="StreamType">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StreamType As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Media::Stream StreamType { Android::Media::Stream get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Media.Stream StreamType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Stream StreamType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.StreamType" />
      <MemberSignature Language="F#" Value="member this.StreamType : Android.Media.Stream" Usage="Android.Media.AudioTrack.StreamType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStreamType", "()I", "GetGetStreamTypeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStreamType", "()I", "GetGetStreamTypeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the volume stream type of this AudioTrack.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the volume stream type of this AudioTrack.
            Compare the result against <c>AudioManager#STREAM_VOICE_CALL</c>,
            <c>AudioManager#STREAM_SYSTEM</c>, <c>AudioManager#STREAM_RING</c>,
            <c>AudioManager#STREAM_MUSIC</c>, <c>AudioManager#STREAM_ALARM</c>,
            <c>AudioManager#STREAM_NOTIFICATION</c>, <c>AudioManager#STREAM_DTMF</c> or
            <c>AudioManager#STREAM_ACCESSIBILITY</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getStreamType()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getStreamType()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="VB.NET" Value="Public Const Success As TrackStatus  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::TrackStatus Success = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Media.TrackStatus Success = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.TrackStatus Success = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.Success" />
      <MemberSignature Language="F#" Value="val mutable Success : Android.Media.TrackStatus" Usage="Android.Media.AudioTrack.Success" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SUCCESS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SUCCESS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.TrackStatus enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.TrackStatus</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Denotes a successful operation.</summary>
        <remarks>
          <para>Denotes a successful operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#SUCCESS" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.SUCCESS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SupplementaryAudioPlacementLeft">
      <MemberSignature Language="VB.NET" Value="Public Const SupplementaryAudioPlacementLeft As AudioTrackSupplementaryAudioPlacement  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioTrackSupplementaryAudioPlacement SupplementaryAudioPlacementLeft = 1;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioTrackSupplementaryAudioPlacement SupplementaryAudioPlacementLeft = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioTrackSupplementaryAudioPlacement SupplementaryAudioPlacementLeft = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.SupplementaryAudioPlacementLeft" />
      <MemberSignature Language="F#" Value="val mutable SupplementaryAudioPlacementLeft : Android.Media.AudioTrackSupplementaryAudioPlacement" Usage="Android.Media.AudioTrack.SupplementaryAudioPlacementLeft" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SUPPLEMENTARY_AUDIO_PLACEMENT_LEFT", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SUPPLEMENTARY_AUDIO_PLACEMENT_LEFT", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackSupplementaryAudioPlacement enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackSupplementaryAudioPlacement enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackSupplementaryAudioPlacement</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Supplementary audio placement left.</summary>
        <remarks>
          <para>Supplementary audio placement left.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#SUPPLEMENTARY_AUDIO_PLACEMENT_LEFT" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.SUPPLEMENTARY_AUDIO_PLACEMENT_LEFT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupplementaryAudioPlacementNormal">
      <MemberSignature Language="VB.NET" Value="Public Const SupplementaryAudioPlacementNormal As AudioTrackSupplementaryAudioPlacement  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioTrackSupplementaryAudioPlacement SupplementaryAudioPlacementNormal = 0;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioTrackSupplementaryAudioPlacement SupplementaryAudioPlacementNormal = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioTrackSupplementaryAudioPlacement SupplementaryAudioPlacementNormal = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.SupplementaryAudioPlacementNormal" />
      <MemberSignature Language="F#" Value="val mutable SupplementaryAudioPlacementNormal : Android.Media.AudioTrackSupplementaryAudioPlacement" Usage="Android.Media.AudioTrack.SupplementaryAudioPlacementNormal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SUPPLEMENTARY_AUDIO_PLACEMENT_NORMAL", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SUPPLEMENTARY_AUDIO_PLACEMENT_NORMAL", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackSupplementaryAudioPlacement enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackSupplementaryAudioPlacement enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackSupplementaryAudioPlacement</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Supplementary audio placement normal.</summary>
        <remarks>
          <para>Supplementary audio placement normal.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#SUPPLEMENTARY_AUDIO_PLACEMENT_NORMAL" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.SUPPLEMENTARY_AUDIO_PLACEMENT_NORMAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupplementaryAudioPlacementRight">
      <MemberSignature Language="VB.NET" Value="Public Const SupplementaryAudioPlacementRight As AudioTrackSupplementaryAudioPlacement  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Media::AudioTrackSupplementaryAudioPlacement SupplementaryAudioPlacementRight = 2;" />
      <MemberSignature Language="C#" Value="public const Android.Media.AudioTrackSupplementaryAudioPlacement SupplementaryAudioPlacementRight = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.AudioTrackSupplementaryAudioPlacement SupplementaryAudioPlacementRight = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.AudioTrack.SupplementaryAudioPlacementRight" />
      <MemberSignature Language="F#" Value="val mutable SupplementaryAudioPlacementRight : Android.Media.AudioTrackSupplementaryAudioPlacement" Usage="Android.Media.AudioTrack.SupplementaryAudioPlacementRight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SUPPLEMENTARY_AUDIO_PLACEMENT_RIGHT", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SUPPLEMENTARY_AUDIO_PLACEMENT_RIGHT", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackSupplementaryAudioPlacement enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.AudioTrackSupplementaryAudioPlacement enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioTrackSupplementaryAudioPlacement</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Supplementary audio placement right.</summary>
        <remarks>
          <para>Supplementary audio placement right.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#SUPPLEMENTARY_AUDIO_PLACEMENT_RIGHT" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.SUPPLEMENTARY_AUDIO_PLACEMENT_RIGHT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.AudioTrack.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.AudioTrack.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderrunCount">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UnderrunCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int UnderrunCount { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int UnderrunCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UnderrunCount" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioTrack.UnderrunCount" />
      <MemberSignature Language="F#" Value="member this.UnderrunCount : int" Usage="Android.Media.AudioTrack.UnderrunCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUnderrunCount", "()I", "GetGetUnderrunCountHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUnderrunCount", "()I", "GetGetUnderrunCountHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of underrun occurrences in the application-level write buffer
            since the AudioTrack was created.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the number of underrun occurrences in the application-level write buffer
            since the AudioTrack was created.
            An underrun occurs if the application does not write audio
            data quickly enough, causing the buffer to underflow
            and a potential audio glitch or pop.</para>
          <para>Underruns are less likely when buffer sizes are large.
            It may be possible to eliminate underruns by recreating the AudioTrack with
            a larger buffer.
            Or by using <c>#setBufferSizeInFrames(int)</c> to dynamically increase the
            effective size of the buffer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#getUnderrunCount()" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.getUnderrunCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterStreamEventCallback">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UnregisterStreamEventCallback (eventCallback As AudioTrack.StreamEventCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterStreamEventCallback(Android::Media::AudioTrack::StreamEventCallback ^ eventCallback);" />
      <MemberSignature Language="C#" Value="public virtual void UnregisterStreamEventCallback (Android.Media.AudioTrack.StreamEventCallback eventCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterStreamEventCallback(class Android.Media.AudioTrack/StreamEventCallback eventCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.UnregisterStreamEventCallback(Android.Media.AudioTrack.StreamEventCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterStreamEventCallback : Android.Media.AudioTrack.StreamEventCallback -&gt; unit&#xA;override this.UnregisterStreamEventCallback : Android.Media.AudioTrack.StreamEventCallback -&gt; unit" Usage="audioTrack.UnregisterStreamEventCallback eventCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterStreamEventCallback", "(Landroid/media/AudioTrack$StreamEventCallback;)V", "GetUnregisterStreamEventCallback_Landroid_media_AudioTrack_StreamEventCallback_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterStreamEventCallback", "(Landroid/media/AudioTrack$StreamEventCallback;)V", "GetUnregisterStreamEventCallback_Landroid_media_AudioTrack_StreamEventCallback_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCallback" Type="Android.Media.AudioTrack+StreamEventCallback" />
      </Parameters>
      <Docs>
        <param name="eventCallback">the callback to unregister.</param>
        <summary>Unregisters the callback for notification of stream events, previously registered
            with <c>#registerStreamEventCallback(Executor, StreamEventCallback)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#unregisterStreamEventCallback(android.media.StreamEventCallback)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.unregisterStreamEventCallback(android.media.StreamEventCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Write (audioData As ByteBuffer, sizeInBytes As Integer, writeMode As WriteMode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Write(Java::Nio::ByteBuffer ^ audioData, int sizeInBytes, Android::Media::WriteMode writeMode);" />
      <MemberSignature Language="C#" Value="public virtual int Write (Java.Nio.ByteBuffer audioData, int sizeInBytes, Android.Media.WriteMode writeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(class Java.Nio.ByteBuffer audioData, int32 sizeInBytes, valuetype Android.Media.WriteMode writeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.Write(Java.Nio.ByteBuffer,System.Int32,Android.Media.WriteMode)" />
      <MemberSignature Language="F#" Value="abstract member Write : Java.Nio.ByteBuffer * int * Android.Media.WriteMode -&gt; int&#xA;override this.Write : Java.Nio.ByteBuffer * int * Android.Media.WriteMode -&gt; int" Usage="audioTrack.Write (audioData, sizeInBytes, writeMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "(Ljava/nio/ByteBuffer;II)I", "GetWrite_Ljava_nio_ByteBuffer_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "(Ljava/nio/ByteBuffer;II)I", "GetWrite_Ljava_nio_ByteBuffer_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">the buffer that holds the data to write, starting at the position reported
                by <c>audioData.position()</c>.
                &lt;BR&gt;Note that upon return, the buffer position (<c>audioData.position()</c>) will
                have been advanced to reflect the amount of data that was successfully written to
                the AudioTrack.</param>
        <param name="sizeInBytes">number of bytes to write.  It is recommended but not enforced
                that the number of bytes requested be a multiple of the frame size (sample size in
                bytes multiplied by the channel count).
                &lt;BR&gt;Note this may differ from <c>audioData.remaining()</c>, but cannot exceed it.</param>
        <param name="writeMode">one of <c>#WRITE_BLOCKING</c>, <c>#WRITE_NON_BLOCKING</c>. It has no
                effect in static mode.
                &lt;BR&gt;With <c>#WRITE_BLOCKING</c>, the write will block until all data has been written
                    to the audio sink.
                &lt;BR&gt;With <c>#WRITE_NON_BLOCKING</c>, the write will return immediately after
                queuing as much audio data for playback as possible without blocking.</param>
        <summary>Writes the audio data to the audio sink for playback (streaming mode),
            or copies audio data for later playback (static buffer mode).</summary>
        <returns>zero or the positive number of bytes that were written, or one of the following
               error codes.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the track isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the AudioTrack is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next write()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;</returns>
        <remarks>
          <para>Writes the audio data to the audio sink for playback (streaming mode),
            or copies audio data for later playback (static buffer mode).
            The audioData in ByteBuffer should match the format specified in the AudioTrack constructor.</para>
          <para>In streaming mode, the blocking behavior depends on the write mode.  If the write mode is
            <c>#WRITE_BLOCKING</c>, the write will normally block until all the data has been enqueued
            for playback, and will return a full transfer count.  However, if the write mode is
            <c>#WRITE_NON_BLOCKING</c>, or the track is stopped or paused on entry, or another thread
            interrupts the write by calling stop or pause, or an I/O error
            occurs during the write, then the write may return a short transfer count.</para>
          <para>In static buffer mode, copies the data to the buffer starting at offset 0,
            and the write mode is ignored.
            Note that the actual playback of this data might occur after this function returns.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#write(java.nio.ByteBuffer,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.write(java.nio.ByteBuffer, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Write (audioData As Byte(), offsetInBytes As Integer, sizeInBytes As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Write(cli::array &lt;System::Byte&gt; ^ audioData, int offsetInBytes, int sizeInBytes);" />
      <MemberSignature Language="C#" Value="public virtual int Write (byte[] audioData, int offsetInBytes, int sizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(unsigned int8[] audioData, int32 offsetInBytes, int32 sizeInBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.Write(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] * int * int -&gt; int&#xA;override this.Write : byte[] * int * int -&gt; int" Usage="audioTrack.Write (audioData, offsetInBytes, sizeInBytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "([BII)I", "GetWrite_arrayBIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "([BII)I", "GetWrite_arrayBIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Byte[]" />
        <Parameter Name="offsetInBytes" Type="System.Int32" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">the array that holds the data to play.</param>
        <param name="offsetInBytes">the offset expressed in bytes in audioData where the data to write
               starts.
               Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="sizeInBytes">the number of bytes to write in audioData after the offset.
               Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <summary>Writes the audio data to the audio sink for playback (streaming mode),
            or copies audio data for later playback (static buffer mode).</summary>
        <returns>zero or the positive number of bytes that were written, or one of the following
               error codes. The number of bytes will be a multiple of the frame size in bytes
               not to exceed sizeInBytes.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the track isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the AudioTrack is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next write()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;
            This is equivalent to <c>#write(byte[], int, int, int)</c> with <c>writeMode</c>
            set to  <c>#WRITE_BLOCKING</c>.</returns>
        <remarks>
          <para>Writes the audio data to the audio sink for playback (streaming mode),
            or copies audio data for later playback (static buffer mode).
            The format specified in the AudioTrack constructor should be
            <c>AudioFormat#ENCODING_PCM_8BIT</c> to correspond to the data in the array.
            The format can be <c>AudioFormat#ENCODING_PCM_16BIT</c>, but this is deprecated.</para>
          <para>In streaming mode, the write will normally block until all the data has been enqueued for
            playback, and will return a full transfer count.  However, if the track is stopped or paused
            on entry, or another thread interrupts the write by calling stop or pause, or an I/O error
            occurs during the write, then the write may return a short transfer count.</para>
          <para>In static buffer mode, copies the data to the buffer starting at offset 0.
            Note that the actual playback of this data might occur after this function returns.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#write(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.write(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Write (audioData As Short(), offsetInShorts As Integer, sizeInShorts As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Write(cli::array &lt;short&gt; ^ audioData, int offsetInShorts, int sizeInShorts);" />
      <MemberSignature Language="C#" Value="public virtual int Write (short[] audioData, int offsetInShorts, int sizeInShorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(int16[] audioData, int32 offsetInShorts, int32 sizeInShorts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.Write(System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Write : int16[] * int * int -&gt; int&#xA;override this.Write : int16[] * int * int -&gt; int" Usage="audioTrack.Write (audioData, offsetInShorts, sizeInShorts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "([SII)I", "GetWrite_arraySIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "([SII)I", "GetWrite_arraySIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Int16[]" />
        <Parameter Name="offsetInShorts" Type="System.Int32" />
        <Parameter Name="sizeInShorts" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">the array that holds the data to play.</param>
        <param name="offsetInShorts">the offset expressed in shorts in audioData where the data to play
                starts.
               Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="sizeInShorts">the number of shorts to read in audioData after the offset.
               Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <summary>Writes the audio data to the audio sink for playback (streaming mode),
            or copies audio data for later playback (static buffer mode).</summary>
        <returns>zero or the positive number of shorts that were written, or one of the following
               error codes. The number of shorts will be a multiple of the channel count not to
               exceed sizeInShorts.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the track isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the AudioTrack is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next write()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;
            This is equivalent to <c>#write(short[], int, int, int)</c> with <c>writeMode</c>
            set to  <c>#WRITE_BLOCKING</c>.</returns>
        <remarks>
          <para>Writes the audio data to the audio sink for playback (streaming mode),
            or copies audio data for later playback (static buffer mode).
            The format specified in the AudioTrack constructor should be
            <c>AudioFormat#ENCODING_PCM_16BIT</c> to correspond to the data in the array.</para>
          <para>In streaming mode, the write will normally block until all the data has been enqueued for
            playback, and will return a full transfer count.  However, if the track is stopped or paused
            on entry, or another thread interrupts the write by calling stop or pause, or an I/O error
            occurs during the write, then the write may return a short transfer count.</para>
          <para>In static buffer mode, copies the data to the buffer starting at offset 0.
            Note that the actual playback of this data might occur after this function returns.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#write(short[],%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.write(short[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Write (audioData As ByteBuffer, sizeInBytes As Integer, writeMode As WriteMode, timestamp As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Write(Java::Nio::ByteBuffer ^ audioData, int sizeInBytes, Android::Media::WriteMode writeMode, long timestamp);" />
      <MemberSignature Language="C#" Value="public virtual int Write (Java.Nio.ByteBuffer audioData, int sizeInBytes, Android.Media.WriteMode writeMode, long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(class Java.Nio.ByteBuffer audioData, int32 sizeInBytes, valuetype Android.Media.WriteMode writeMode, int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.Write(Java.Nio.ByteBuffer,System.Int32,Android.Media.WriteMode,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member Write : Java.Nio.ByteBuffer * int * Android.Media.WriteMode * int64 -&gt; int&#xA;override this.Write : Java.Nio.ByteBuffer * int * Android.Media.WriteMode * int64 -&gt; int" Usage="audioTrack.Write (audioData, sizeInBytes, writeMode, timestamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "(Ljava/nio/ByteBuffer;IIJ)I", "GetWrite_Ljava_nio_ByteBuffer_IIJHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "(Ljava/nio/ByteBuffer;IIJ)I", "GetWrite_Ljava_nio_ByteBuffer_IIJHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="audioData">the buffer that holds the data to write, starting at the position reported
                by <c>audioData.position()</c>.
                &lt;BR&gt;Note that upon return, the buffer position (<c>audioData.position()</c>) will
                have been advanced to reflect the amount of data that was successfully written to
                the AudioTrack.</param>
        <param name="sizeInBytes">number of bytes to write.  It is recommended but not enforced
                that the number of bytes requested be a multiple of the frame size (sample size in
                bytes multiplied by the channel count).
                &lt;BR&gt;Note this may differ from <c>audioData.remaining()</c>, but cannot exceed it.</param>
        <param name="writeMode">one of <c>#WRITE_BLOCKING</c>, <c>#WRITE_NON_BLOCKING</c>.
                &lt;BR&gt;With <c>#WRITE_BLOCKING</c>, the write will block until all data has been written
                    to the audio sink.
                &lt;BR&gt;With <c>#WRITE_NON_BLOCKING</c>, the write will return immediately after
                queuing as much audio data for playback as possible without blocking.</param>
        <param name="timestamp">The timestamp, in nanoseconds, of the first decodable audio frame in the
                provided audioData.</param>
        <summary>Writes the audio data to the audio sink for playback in streaming mode on a HW_AV_SYNC track.</summary>
        <returns>zero or the positive number of bytes that were written, or one of the following
               error codes.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the track isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the AudioTrack is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next write()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;</returns>
        <remarks>
          <para>Writes the audio data to the audio sink for playback in streaming mode on a HW_AV_SYNC track.
            The blocking behavior will depend on the write mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#write(java.nio.ByteBuffer,%20int,%20int,%20long)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.write(java.nio.ByteBuffer, int, int, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Write (audioData As Byte(), offsetInBytes As Integer, sizeInBytes As Integer, writeMode As WriteMode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Write(cli::array &lt;System::Byte&gt; ^ audioData, int offsetInBytes, int sizeInBytes, Android::Media::WriteMode writeMode);" />
      <MemberSignature Language="C#" Value="public virtual int Write (byte[] audioData, int offsetInBytes, int sizeInBytes, Android.Media.WriteMode writeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(unsigned int8[] audioData, int32 offsetInBytes, int32 sizeInBytes, valuetype Android.Media.WriteMode writeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.Write(System.Byte[],System.Int32,System.Int32,Android.Media.WriteMode)" />
      <MemberSignature Language="F#" Value="abstract member Write : byte[] * int * int * Android.Media.WriteMode -&gt; int&#xA;override this.Write : byte[] * int * int * Android.Media.WriteMode -&gt; int" Usage="audioTrack.Write (audioData, offsetInBytes, sizeInBytes, writeMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "([BIII)I", "GetWrite_arrayBIIIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "([BIII)I", "GetWrite_arrayBIIIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Byte[]" />
        <Parameter Name="offsetInBytes" Type="System.Int32" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">the array that holds the data to play.</param>
        <param name="offsetInBytes">the offset expressed in bytes in audioData where the data to write
               starts.
               Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="sizeInBytes">the number of bytes to write in audioData after the offset.
               Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="writeMode">one of <c>#WRITE_BLOCKING</c>, <c>#WRITE_NON_BLOCKING</c>. It has no
                effect in static mode.
                &lt;br&gt;With <c>#WRITE_BLOCKING</c>, the write will block until all data has been written
                    to the audio sink.
                &lt;br&gt;With <c>#WRITE_NON_BLOCKING</c>, the write will return immediately after
                queuing as much audio data for playback as possible without blocking.</param>
        <summary>Writes the audio data to the audio sink for playback (streaming mode),
            or copies audio data for later playback (static buffer mode).</summary>
        <returns>zero or the positive number of bytes that were written, or one of the following
               error codes. The number of bytes will be a multiple of the frame size in bytes
               not to exceed sizeInBytes.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the track isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the AudioTrack is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next write()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;</returns>
        <remarks>
          <para>Writes the audio data to the audio sink for playback (streaming mode),
            or copies audio data for later playback (static buffer mode).
            The format specified in the AudioTrack constructor should be
            <c>AudioFormat#ENCODING_PCM_8BIT</c> to correspond to the data in the array.
            The format can be <c>AudioFormat#ENCODING_PCM_16BIT</c>, but this is deprecated.</para>
          <para>In streaming mode, the blocking behavior depends on the write mode.  If the write mode is
            <c>#WRITE_BLOCKING</c>, the write will normally block until all the data has been enqueued
            for playback, and will return a full transfer count.  However, if the write mode is
            <c>#WRITE_NON_BLOCKING</c>, or the track is stopped or paused on entry, or another thread
            interrupts the write by calling stop or pause, or an I/O error
            occurs during the write, then the write may return a short transfer count.</para>
          <para>In static buffer mode, copies the data to the buffer starting at offset 0,
            and the write mode is ignored.
            Note that the actual playback of this data might occur after this function returns.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#write(byte[],%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.write(byte[], int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Write (audioData As Short(), offsetInShorts As Integer, sizeInShorts As Integer, writeMode As WriteMode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Write(cli::array &lt;short&gt; ^ audioData, int offsetInShorts, int sizeInShorts, Android::Media::WriteMode writeMode);" />
      <MemberSignature Language="C#" Value="public virtual int Write (short[] audioData, int offsetInShorts, int sizeInShorts, Android.Media.WriteMode writeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(int16[] audioData, int32 offsetInShorts, int32 sizeInShorts, valuetype Android.Media.WriteMode writeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.Write(System.Int16[],System.Int32,System.Int32,Android.Media.WriteMode)" />
      <MemberSignature Language="F#" Value="abstract member Write : int16[] * int * int * Android.Media.WriteMode -&gt; int&#xA;override this.Write : int16[] * int * int * Android.Media.WriteMode -&gt; int" Usage="audioTrack.Write (audioData, offsetInShorts, sizeInShorts, writeMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "([SIII)I", "GetWrite_arraySIIIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "([SIII)I", "GetWrite_arraySIIIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Int16[]" />
        <Parameter Name="offsetInShorts" Type="System.Int32" />
        <Parameter Name="sizeInShorts" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">the array that holds the data to write.</param>
        <param name="offsetInShorts">the offset expressed in shorts in audioData where the data to write
                starts.
               Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="sizeInShorts">the number of shorts to read in audioData after the offset.
               Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="writeMode">one of <c>#WRITE_BLOCKING</c>, <c>#WRITE_NON_BLOCKING</c>. It has no
                effect in static mode.
                &lt;br&gt;With <c>#WRITE_BLOCKING</c>, the write will block until all data has been written
                    to the audio sink.
                &lt;br&gt;With <c>#WRITE_NON_BLOCKING</c>, the write will return immediately after
                queuing as much audio data for playback as possible without blocking.</param>
        <summary>Writes the audio data to the audio sink for playback (streaming mode),
            or copies audio data for later playback (static buffer mode).</summary>
        <returns>zero or the positive number of shorts that were written, or one of the following
               error codes. The number of shorts will be a multiple of the channel count not to
               exceed sizeInShorts.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the track isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the AudioTrack is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next write()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;</returns>
        <remarks>
          <para>Writes the audio data to the audio sink for playback (streaming mode),
            or copies audio data for later playback (static buffer mode).
            The format specified in the AudioTrack constructor should be
            <c>AudioFormat#ENCODING_PCM_16BIT</c> to correspond to the data in the array.</para>
          <para>In streaming mode, the blocking behavior depends on the write mode.  If the write mode is
            <c>#WRITE_BLOCKING</c>, the write will normally block until all the data has been enqueued
            for playback, and will return a full transfer count.  However, if the write mode is
            <c>#WRITE_NON_BLOCKING</c>, or the track is stopped or paused on entry, or another thread
            interrupts the write by calling stop or pause, or an I/O error
            occurs during the write, then the write may return a short transfer count.</para>
          <para>In static buffer mode, copies the data to the buffer starting at offset 0.
            Note that the actual playback of this data might occur after this function returns.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#write(short[],%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.write(short[], int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Write (audioData As Single(), offsetInFloats As Integer, sizeInFloats As Integer, writeMode As WriteMode) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Write(cli::array &lt;float&gt; ^ audioData, int offsetInFloats, int sizeInFloats, Android::Media::WriteMode writeMode);" />
      <MemberSignature Language="C#" Value="public virtual int Write (float[] audioData, int offsetInFloats, int sizeInFloats, Android.Media.WriteMode writeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Write(float32[] audioData, int32 offsetInFloats, int32 sizeInFloats, valuetype Android.Media.WriteMode writeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.Write(System.Single[],System.Int32,System.Int32,Android.Media.WriteMode)" />
      <MemberSignature Language="F#" Value="abstract member Write : single[] * int * int * Android.Media.WriteMode -&gt; int&#xA;override this.Write : single[] * int * int * Android.Media.WriteMode -&gt; int" Usage="audioTrack.Write (audioData, offsetInFloats, sizeInFloats, writeMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("write", "([FIII)I", "GetWrite_arrayFIIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("write", "([FIII)I", "GetWrite_arrayFIIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Single[]" />
        <Parameter Name="offsetInFloats" Type="System.Int32" />
        <Parameter Name="sizeInFloats" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">the array that holds the data to write.
                The implementation does not clip for sample values within the nominal range
                [-1.0f, 1.0f], provided that all gains in the audio pipeline are
                less than or equal to unity (1.0f), and in the absence of post-processing effects
                that could add energy, such as reverb.  For the convenience of applications
                that compute samples using filters with non-unity gain,
                sample values +3 dB beyond the nominal range are permitted.
                However such values may eventually be limited or clipped, depending on various gains
                and later processing in the audio path.  Therefore applications are encouraged
                to provide samples values within the nominal range.</param>
        <param name="offsetInFloats">the offset, expressed as a number of floats,
                in audioData where the data to write starts.
               Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="sizeInFloats">the number of floats to write in audioData after the offset.
               Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="writeMode">one of <c>#WRITE_BLOCKING</c>, <c>#WRITE_NON_BLOCKING</c>. It has no
                effect in static mode.
                &lt;br&gt;With <c>#WRITE_BLOCKING</c>, the write will block until all data has been written
                    to the audio sink.
                &lt;br&gt;With <c>#WRITE_NON_BLOCKING</c>, the write will return immediately after
                queuing as much audio data for playback as possible without blocking.</param>
        <summary>Writes the audio data to the audio sink for playback (streaming mode),
            or copies audio data for later playback (static buffer mode).</summary>
        <returns>zero or the positive number of floats that were written, or one of the following
               error codes. The number of floats will be a multiple of the channel count not to
               exceed sizeInFloats.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the track isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the AudioTrack is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next write()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;</returns>
        <remarks>
          <para>Writes the audio data to the audio sink for playback (streaming mode),
            or copies audio data for later playback (static buffer mode).
            The format specified in the AudioTrack constructor should be
            <c>AudioFormat#ENCODING_PCM_FLOAT</c> to correspond to the data in the array.</para>
          <para>In streaming mode, the blocking behavior depends on the write mode.  If the write mode is
            <c>#WRITE_BLOCKING</c>, the write will normally block until all the data has been enqueued
            for playback, and will return a full transfer count.  However, if the write mode is
            <c>#WRITE_NON_BLOCKING</c>, or the track is stopped or paused on entry, or another thread
            interrupts the write by calling stop or pause, or an I/O error
            occurs during the write, then the write may return a short transfer count.</para>
          <para>In static buffer mode, copies the data to the buffer starting at offset 0,
            and the write mode is ignored.
            Note that the actual playback of this data might occur after this function returns.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioTrack#write(float[],%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioTrack.write(float[], int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (audioData As ByteBuffer, sizeInBytes As Integer, writeMode As WriteMode) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ WriteAsync(Java::Nio::ByteBuffer ^ audioData, int sizeInBytes, Android::Media::WriteMode writeMode);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; WriteAsync (Java.Nio.ByteBuffer audioData, int sizeInBytes, Android.Media.WriteMode writeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; WriteAsync(class Java.Nio.ByteBuffer audioData, int32 sizeInBytes, valuetype Android.Media.WriteMode writeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.WriteAsync(Java.Nio.ByteBuffer,System.Int32,Android.Media.WriteMode)" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : Java.Nio.ByteBuffer * int * Android.Media.WriteMode -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioTrack.WriteAsync (audioData, sizeInBytes, writeMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="sizeInBytes">To be added.</param>
        <param name="writeMode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (audioData As Byte(), offsetInBytes As Integer, sizeInBytes As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ audioData, int offsetInBytes, int sizeInBytes);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; WriteAsync (byte[] audioData, int offsetInBytes, int sizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; WriteAsync(unsigned int8[] audioData, int32 offsetInBytes, int32 sizeInBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.WriteAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioTrack.WriteAsync (audioData, offsetInBytes, sizeInBytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Byte[]" />
        <Parameter Name="offsetInBytes" Type="System.Int32" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInBytes">To be added.</param>
        <param name="sizeInBytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (audioData As Short(), offsetInShorts As Integer, sizeInShorts As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ WriteAsync(cli::array &lt;short&gt; ^ audioData, int offsetInShorts, int sizeInShorts);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; WriteAsync (short[] audioData, int offsetInShorts, int sizeInShorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; WriteAsync(int16[] audioData, int32 offsetInShorts, int32 sizeInShorts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.WriteAsync(System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : int16[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioTrack.WriteAsync (audioData, offsetInShorts, sizeInShorts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Int16[]" />
        <Parameter Name="offsetInShorts" Type="System.Int32" />
        <Parameter Name="sizeInShorts" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInShorts">To be added.</param>
        <param name="sizeInShorts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (audioData As ByteBuffer, sizeInBytes As Integer, writeMode As WriteMode, timestamp As Long) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ WriteAsync(Java::Nio::ByteBuffer ^ audioData, int sizeInBytes, Android::Media::WriteMode writeMode, long timestamp);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; WriteAsync (Java.Nio.ByteBuffer audioData, int sizeInBytes, Android.Media.WriteMode writeMode, long timestamp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; WriteAsync(class Java.Nio.ByteBuffer audioData, int32 sizeInBytes, valuetype Android.Media.WriteMode writeMode, int64 timestamp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.WriteAsync(Java.Nio.ByteBuffer,System.Int32,Android.Media.WriteMode,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : Java.Nio.ByteBuffer * int * Android.Media.WriteMode * int64 -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioTrack.WriteAsync (audioData, sizeInBytes, writeMode, timestamp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="timestamp" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="sizeInBytes">To be added.</param>
        <param name="writeMode">To be added.</param>
        <param name="timestamp">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (audioData As Byte(), offsetInBytes As Integer, sizeInBytes As Integer, writeMode As WriteMode) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ WriteAsync(cli::array &lt;System::Byte&gt; ^ audioData, int offsetInBytes, int sizeInBytes, Android::Media::WriteMode writeMode);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; WriteAsync (byte[] audioData, int offsetInBytes, int sizeInBytes, Android.Media.WriteMode writeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; WriteAsync(unsigned int8[] audioData, int32 offsetInBytes, int32 sizeInBytes, valuetype Android.Media.WriteMode writeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.WriteAsync(System.Byte[],System.Int32,System.Int32,Android.Media.WriteMode)" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : byte[] * int * int * Android.Media.WriteMode -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioTrack.WriteAsync (audioData, offsetInBytes, sizeInBytes, writeMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Byte[]" />
        <Parameter Name="offsetInBytes" Type="System.Int32" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInBytes">To be added.</param>
        <param name="sizeInBytes">To be added.</param>
        <param name="writeMode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (audioData As Short(), offsetInShorts As Integer, sizeInShorts As Integer, writeMode As WriteMode) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ WriteAsync(cli::array &lt;short&gt; ^ audioData, int offsetInShorts, int sizeInShorts, Android::Media::WriteMode writeMode);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; WriteAsync (short[] audioData, int offsetInShorts, int sizeInShorts, Android.Media.WriteMode writeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; WriteAsync(int16[] audioData, int32 offsetInShorts, int32 sizeInShorts, valuetype Android.Media.WriteMode writeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.WriteAsync(System.Int16[],System.Int32,System.Int32,Android.Media.WriteMode)" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : int16[] * int * int * Android.Media.WriteMode -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioTrack.WriteAsync (audioData, offsetInShorts, sizeInShorts, writeMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Int16[]" />
        <Parameter Name="offsetInShorts" Type="System.Int32" />
        <Parameter Name="sizeInShorts" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInShorts">To be added.</param>
        <param name="sizeInShorts">To be added.</param>
        <param name="writeMode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (audioData As Single(), offsetInFloats As Integer, sizeInFloats As Integer, writeMode As WriteMode) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ WriteAsync(cli::array &lt;float&gt; ^ audioData, int offsetInFloats, int sizeInFloats, Android::Media::WriteMode writeMode);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; WriteAsync (float[] audioData, int offsetInFloats, int sizeInFloats, Android.Media.WriteMode writeMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; WriteAsync(float32[] audioData, int32 offsetInFloats, int32 sizeInFloats, valuetype Android.Media.WriteMode writeMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioTrack.WriteAsync(System.Single[],System.Int32,System.Int32,Android.Media.WriteMode)" />
      <MemberSignature Language="F#" Value="member this.WriteAsync : single[] * int * int * Android.Media.WriteMode -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioTrack.WriteAsync (audioData, offsetInFloats, sizeInFloats, writeMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Single[]" />
        <Parameter Name="offsetInFloats" Type="System.Int32" />
        <Parameter Name="sizeInFloats" Type="System.Int32" />
        <Parameter Name="writeMode" Type="Android.Media.WriteMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInFloats">To be added.</param>
        <param name="sizeInFloats">To be added.</param>
        <param name="writeMode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
