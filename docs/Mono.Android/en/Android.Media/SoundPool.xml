<Type Name="SoundPool" FullName="Android.Media.SoundPool">
  <TypeSignature Language="C#" Value="public class SoundPool : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoundPool extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.SoundPool" />
  <TypeSignature Language="F#" Value="type SoundPool = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/SoundPool", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/SoundPool", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The SoundPool class manages and plays audio resources for applications.</summary>
    <remarks>
      <para>The SoundPool class manages and plays audio resources for applications.</para>
      <para>A SoundPool is a collection of sound samples that can be loaded into memory
            from a resource inside the APK or from a file in the file system. The
            SoundPool library uses the MediaCodec service to decode the audio
            into raw 16-bit PCM. This allows applications
            to ship with compressed streams without having to suffer the CPU load
            and latency of decompressing during playback.</para>
      <para>Soundpool sounds are expected to be short as they are
            predecoded into memory. Each decoded sound is internally limited to one
            megabyte storage, which represents approximately 5.6 seconds at 44.1kHz stereo
            (the duration is proportionally longer at lower sample rates or
            a channel mask of mono). A decoded audio sound will be truncated if it would
            exceed the per-sound one megabyte storage space.</para>
      <para>In addition to low-latency playback, SoundPool can also manage the number
            of audio streams being rendered at once. When the SoundPool object is
            constructed, the maxStreams parameter sets the maximum number of streams
            that can be played at a time from this single SoundPool. SoundPool tracks
            the number of active streams. If the maximum number of streams is exceeded,
            SoundPool will automatically stop a previously playing stream based first
            on priority and then by age within that priority. Limiting the maximum
            number of streams helps to cap CPU loading and reducing the likelihood that
            audio mixing will impact visuals or UI performance.</para>
      <para>Sounds can be looped by setting a non-zero loop value. A value of -1
            causes the sound to loop forever. In this case, the application must
            explicitly call the stop() function to stop the sound. Any other non-zero
            value will cause the sound to repeat the specified number of times, e.g.
            a value of 3 causes the sound to play a total of 4 times.</para>
      <para>The playback rate can also be changed. A playback rate of 1.0 causes
            the sound to play at its original frequency (resampled, if necessary,
            to the hardware output frequency). A playback rate of 2.0 causes the
            sound to play at twice its original frequency, and a playback rate of
            0.5 causes it to play at half its original frequency. The playback
            rate range is 0.5 to 2.0.</para>
      <para>Priority runs low to high, i.e. higher numbers are higher priority.
            Priority is used when a call to play() would cause the number of active
            streams to exceed the value established by the maxStreams parameter when
            the SoundPool was created. In this case, the stream allocator will stop
            the lowest priority stream. If there are multiple streams with the same
            low priority, it will choose the oldest stream to stop. In the case
            where the priority of the new stream is lower than all the active
            streams, the new sound will not play and the play() function will return
            a streamID of zero.</para>
      <para>Let's examine a typical use case: A game consists of several levels of
            play. For each level, there is a set of unique sounds that are used only
            by that level. In this case, the game logic should create a new SoundPool
            object when the first level is loaded. The level data itself might contain
            the list of sounds to be used by this level. The loading logic iterates
            through the list of sounds calling the appropriate SoundPool.load()
            function. This should typically be done early in the process to allow time
            for decompressing the audio to raw PCM format before they are needed for
            playback.</para>
      <para>Once the sounds are loaded and play has started, the application can
            trigger sounds by calling SoundPool.play(). Playing streams can be
            paused or resumed, and the application can also alter the pitch by
            adjusting the playback rate in real-time for doppler or synthesis
            effects.</para>
      <para>Note that since streams can be stopped due to resource constraints, the
            streamID is a reference to a particular instance of a stream. If the stream
            is stopped to allow a higher priority stream to play, the stream is no
            longer valid. However, the application is allowed to call methods on
            the streamID without error. This may help simplify program logic since
            the application need not concern itself with the stream lifecycle.</para>
      <para>In our example, when the player has completed the level, the game
            logic should call SoundPool.release() to release all the native resources
            in use and then set the SoundPool reference to null. If the player starts
            another level, a new SoundPool is created, sounds are loaded, and play
            resumes.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/SoundPool" title="Reference documentation">Java documentation for <code>android.media.SoundPool</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SoundPool (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.SoundPool : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.SoundPool" Usage="new Android.Media.SoundPool (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoundPool (int maxStreams, Android.Media.Stream streamType, int srcQuality);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 maxStreams, valuetype Android.Media.Stream streamType, int32 srcQuality) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.#ctor(System.Int32,Android.Media.Stream,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Media.SoundPool : int * Android.Media.Stream * int -&gt; Android.Media.SoundPool" Usage="new Android.Media.SoundPool (maxStreams, streamType, srcQuality)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(III)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(III)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="maxStreams" Type="System.Int32" />
        <Parameter Name="streamType" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="srcQuality" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxStreams">the maximum number of simultaneous streams for this
                              SoundPool object</param>
        <param name="streamType">the audio stream type as described in AudioManager
                              For example, game applications will normally use
                              <c>AudioManager#STREAM_MUSIC</c>.</param>
        <param name="srcQuality">the sample-rate converter quality. Currently has no
                              effect. Use 0 for the default.</param>
        <summary>Constructor.</summary>
        <returns>a SoundPool object, or null if creation failed</returns>
        <remarks>
          <para>Constructor. Constructs a SoundPool object with the following
            characteristics:</para>
          <para>This member is deprecated. use <c>SoundPool.Builder</c> instead to create and configure a
                SoundPool instance</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#SoundPool(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.SoundPool(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AutoPause">
      <MemberSignature Language="C#" Value="public void AutoPause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoPause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.AutoPause" />
      <MemberSignature Language="F#" Value="member this.AutoPause : unit -&gt; unit" Usage="soundPool.AutoPause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("autoPause", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("autoPause", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pause all active streams.</summary>
        <remarks>
          <para>Pause all active streams.</para>
          <para>Pause all streams that are currently playing. This function
            iterates through all the active streams and pauses any that
            are playing. It also sets a flag so that any streams that
            are playing can be resumed by calling autoResume().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#autoPause()" title="Reference documentation">Java documentation for <code>android.media.SoundPool.autoPause()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AutoResume">
      <MemberSignature Language="C#" Value="public void AutoResume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AutoResume() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.AutoResume" />
      <MemberSignature Language="F#" Value="member this.AutoResume : unit -&gt; unit" Usage="soundPool.AutoResume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("autoResume", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("autoResume", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resume all previously active streams.</summary>
        <remarks>
          <para>Resume all previously active streams.</para>
          <para>Automatically resumes all streams that were paused in previous
            calls to autoPause().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#autoResume()" title="Reference documentation">Java documentation for <code>android.media.SoundPool.autoResume()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.SoundPool.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.SoundPool.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual int Load (Android.Content.Res.AssetFileDescriptor? afd, int priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Load(class Android.Content.Res.AssetFileDescriptor afd, int32 priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.Load(Android.Content.Res.AssetFileDescriptor,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Load : Android.Content.Res.AssetFileDescriptor * int -&gt; int&#xA;override this.Load : Android.Content.Res.AssetFileDescriptor * int -&gt; int" Usage="soundPool.Load (afd, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("load", "(Landroid/content/res/AssetFileDescriptor;I)I", "GetLoad_Landroid_content_res_AssetFileDescriptor_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("load", "(Landroid/content/res/AssetFileDescriptor;I)I", "GetLoad_Landroid_content_res_AssetFileDescriptor_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="afd" Type="Android.Content.Res.AssetFileDescriptor" />
        <Parameter Name="priority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="afd">an asset file descriptor</param>
        <param name="priority">the priority of the sound. Currently has no effect. Use
                            a value of 1 for future compatibility.</param>
        <summary>Load the sound from an asset file descriptor.</summary>
        <returns>a sound ID. This value can be used to play or unload the sound.</returns>
        <remarks>
          <para>Load the sound from an asset file descriptor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#load(android.content.res.AssetFileDescriptor,%20int)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.load(android.content.res.AssetFileDescriptor, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual int Load (string? path, int priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Load(string path, int32 priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.Load(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Load : string * int -&gt; int&#xA;override this.Load : string * int -&gt; int" Usage="soundPool.Load (path, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("load", "(Ljava/lang/String;I)I", "GetLoad_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("load", "(Ljava/lang/String;I)I", "GetLoad_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="priority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">the path to the audio file</param>
        <param name="priority">the priority of the sound. Currently has no effect. Use
                            a value of 1 for future compatibility.</param>
        <summary>Load the sound from the specified path.</summary>
        <returns>a sound ID. This value can be used to play or unload the sound.</returns>
        <remarks>
          <para>Load the sound from the specified path.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#load(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.load(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual int Load (Android.Content.Context? context, int resId, int priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Load(class Android.Content.Context context, int32 resId, int32 priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.Load(Android.Content.Context,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Load : Android.Content.Context * int * int -&gt; int&#xA;override this.Load : Android.Content.Context * int * int -&gt; int" Usage="soundPool.Load (context, resId, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("load", "(Landroid/content/Context;II)I", "GetLoad_Landroid_content_Context_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("load", "(Landroid/content/Context;II)I", "GetLoad_Landroid_content_Context_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resId" Type="System.Int32" />
        <Parameter Name="priority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">the application context</param>
        <param name="resId">the resource ID</param>
        <param name="priority">the priority of the sound. Currently has no effect. Use
                            a value of 1 for future compatibility.</param>
        <summary>Load the sound from the specified APK resource.</summary>
        <returns>a sound ID. This value can be used to play or unload the sound.</returns>
        <remarks>
          <para>Load the sound from the specified APK resource.</para>
          <para>Note that the extension is dropped. For example, if you want to load
            a sound from the raw resource file "explosion.mp3", you would specify
            "R.raw.explosion" as the resource ID. Note that this means you cannot
            have both an "explosion.wav" and an "explosion.mp3" in the res/raw
            directory.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#load(android.content.Context,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.load(android.content.Context, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public virtual int Load (Java.IO.FileDescriptor? fd, long offset, long length, int priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Load(class Java.IO.FileDescriptor fd, int64 offset, int64 length, int32 priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.Load(Java.IO.FileDescriptor,System.Int64,System.Int64,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Load : Java.IO.FileDescriptor * int64 * int64 * int -&gt; int&#xA;override this.Load : Java.IO.FileDescriptor * int64 * int64 * int -&gt; int" Usage="soundPool.Load (fd, offset, length, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("load", "(Ljava/io/FileDescriptor;JJI)I", "GetLoad_Ljava_io_FileDescriptor_JJIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("load", "(Ljava/io/FileDescriptor;JJI)I", "GetLoad_Ljava_io_FileDescriptor_JJIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="priority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fd">a FileDescriptor object</param>
        <param name="offset">offset to the start of the sound</param>
        <param name="length">length of the sound</param>
        <param name="priority">the priority of the sound. Currently has no effect. Use
                            a value of 1 for future compatibility.</param>
        <summary>Load the sound from a FileDescriptor.</summary>
        <returns>a sound ID. This value can be used to play or unload the sound.</returns>
        <remarks>
          <para>Load the sound from a FileDescriptor.</para>
          <para>This version is useful if you store multiple sounds in a single
            binary. The offset specifies the offset from the start of the file
            and the length specifies the length of the sound within the file.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#load(java.io.FileDescriptor,%20long,%20long,%20int)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.load(java.io.FileDescriptor, long, long, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; LoadAsync (Android.Content.Res.AssetFileDescriptor? afd, int priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; LoadAsync(class Android.Content.Res.AssetFileDescriptor afd, int32 priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.LoadAsync(Android.Content.Res.AssetFileDescriptor,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : Android.Content.Res.AssetFileDescriptor * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="soundPool.LoadAsync (afd, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="afd" Type="Android.Content.Res.AssetFileDescriptor" />
        <Parameter Name="priority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="afd">To be added.</param>
        <param name="priority">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; LoadAsync (string? path, int priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; LoadAsync(string path, int32 priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.LoadAsync(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : string * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="soundPool.LoadAsync (path, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="priority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="priority">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; LoadAsync (Android.Content.Context? context, int resId, int priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; LoadAsync(class Android.Content.Context context, int32 resId, int32 priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.LoadAsync(Android.Content.Context,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : Android.Content.Context * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="soundPool.LoadAsync (context, resId, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resId" Type="System.Int32" />
        <Parameter Name="priority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="resId">To be added.</param>
        <param name="priority">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; LoadAsync (Java.IO.FileDescriptor? fd, long offset, long length, int priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; LoadAsync(class Java.IO.FileDescriptor fd, int64 offset, int64 length, int32 priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.LoadAsync(Java.IO.FileDescriptor,System.Int64,System.Int64,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.LoadAsync : Java.IO.FileDescriptor * int64 * int64 * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="soundPool.LoadAsync (fd, offset, length, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="priority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fd">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <param name="priority">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadComplete">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.SoundPool.LoadCompleteEventArgs&gt; LoadComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.SoundPool/LoadCompleteEventArgs&gt; LoadComplete" />
      <MemberSignature Language="DocId" Value="E:Android.Media.SoundPool.LoadComplete" />
      <MemberSignature Language="F#" Value="member this.LoadComplete : EventHandler&lt;Android.Media.SoundPool.LoadCompleteEventArgs&gt; " Usage="member this.LoadComplete : System.EventHandler&lt;Android.Media.SoundPool.LoadCompleteEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.SoundPool+LoadCompleteEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (int streamID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(int32 streamID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.Pause(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Pause : int -&gt; unit" Usage="soundPool.Pause streamID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pause", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pause", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="streamID">a streamID returned by the play() function</param>
        <summary>Pause a playback stream.</summary>
        <remarks>
          <para>Pause a playback stream.</para>
          <para>Pause the stream specified by the streamID. This is the
            value returned by the play() function. If the stream is
            playing, it will be paused. If the stream is not playing
            (e.g. is stopped or was previously paused), calling this
            function will have no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#pause(int)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.pause(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public int Play (int soundID, float leftVolume, float rightVolume, int priority, int loop, float rate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Play(int32 soundID, float32 leftVolume, float32 rightVolume, int32 priority, int32 loop, float32 rate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.Play(System.Int32,System.Single,System.Single,System.Int32,System.Int32,System.Single)" />
      <MemberSignature Language="F#" Value="member this.Play : int * single * single * int * int * single -&gt; int" Usage="soundPool.Play (soundID, leftVolume, rightVolume, priority, loop, rate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("play", "(IFFIIF)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("play", "(IFFIIF)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="soundID" Type="System.Int32" />
        <Parameter Name="leftVolume" Type="System.Single" />
        <Parameter Name="rightVolume" Type="System.Single" />
        <Parameter Name="priority" Type="System.Int32" />
        <Parameter Name="loop" Type="System.Int32" />
        <Parameter Name="rate" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="soundID">a soundID returned by the load() function</param>
        <param name="leftVolume">left volume value (range = 0.0 to 1.0)</param>
        <param name="rightVolume">right volume value (range = 0.0 to 1.0)</param>
        <param name="priority">stream priority (0 = lowest priority)</param>
        <param name="loop">loop mode (0 = no loop, -1 = loop forever)</param>
        <param name="rate">playback rate (1.0 = normal playback, range 0.5 to 2.0)</param>
        <summary>Play a sound from a sound ID.</summary>
        <returns>non-zero streamID if successful, zero if failed</returns>
        <remarks>
          <para>Play a sound from a sound ID.</para>
          <para>Play the sound specified by the soundID. This is the value
            returned by the load() function. Returns a non-zero streamID
            if successful, zero if it fails. The streamID can be used to
            further control playback. Note that calling play() may cause
            another sound to stop playing if the maximum number of active
            streams is exceeded. A loop value of -1 means loop forever,
            a value of 0 means don't loop, other values indicate the
            number of repeats, e.g. a value of 1 plays the audio twice.
            The playback rate allows the application to vary the playback
            rate (pitch) of the sound. A value of 1.0 means play back at
            the original frequency. A value of 2.0 means play back twice
            as fast, and a value of 0.5 means playback at half speed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#play(int,%20float,%20float,%20int,%20int,%20float)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.play(int, float, float, int, int, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.Release" />
      <MemberSignature Language="F#" Value="member this.Release : unit -&gt; unit" Usage="soundPool.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Release the SoundPool resources.</summary>
        <remarks>
          <para>Release the SoundPool resources.</para>
          <para>Release all memory and native resources used by the SoundPool
            object. The SoundPool can no longer be used and the reference
            should be set to null.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#release()" title="Reference documentation">Java documentation for <code>android.media.SoundPool.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (int streamID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(int32 streamID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.Resume(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Resume : int -&gt; unit" Usage="soundPool.Resume streamID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resume", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resume", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="streamID">a streamID returned by the play() function</param>
        <summary>Resume a playback stream.</summary>
        <remarks>
          <para>Resume a playback stream.</para>
          <para>Resume the stream specified by the streamID. This
            is the value returned by the play() function. If the stream
            is paused, this will resume playback. If the stream was not
            previously paused, calling this function will have no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#resume(int)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.resume(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetLoop">
      <MemberSignature Language="C#" Value="public void SetLoop (int streamID, int loop);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLoop(int32 streamID, int32 loop) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.SetLoop(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetLoop : int * int -&gt; unit" Usage="soundPool.SetLoop (streamID, loop)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLoop", "(II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLoop", "(II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamID" Type="System.Int32" />
        <Parameter Name="loop" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="streamID">a streamID returned by the play() function</param>
        <param name="loop">loop mode (0 = no loop, -1 = loop forever)</param>
        <summary>Set loop mode.</summary>
        <remarks>
          <para>Set loop mode.</para>
          <para>Change the loop mode. A loop value of -1 means loop forever,
            a value of 0 means don't loop, other values indicate the
            number of repeats, e.g. a value of 1 plays the audio twice.
            If the stream does not exist, it will have no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#setLoop(int,%20int)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.setLoop(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetOnLoadCompleteListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnLoadCompleteListener (Android.Media.SoundPool.IOnLoadCompleteListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnLoadCompleteListener(class Android.Media.SoundPool/IOnLoadCompleteListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.SetOnLoadCompleteListener(Android.Media.SoundPool.IOnLoadCompleteListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnLoadCompleteListener : Android.Media.SoundPool.IOnLoadCompleteListener -&gt; unit&#xA;override this.SetOnLoadCompleteListener : Android.Media.SoundPool.IOnLoadCompleteListener -&gt; unit" Usage="soundPool.SetOnLoadCompleteListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnLoadCompleteListener", "(Landroid/media/SoundPool$OnLoadCompleteListener;)V", "GetSetOnLoadCompleteListener_Landroid_media_SoundPool_OnLoadCompleteListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnLoadCompleteListener", "(Landroid/media/SoundPool$OnLoadCompleteListener;)V", "GetSetOnLoadCompleteListener_Landroid_media_SoundPool_OnLoadCompleteListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.SoundPool+IOnLoadCompleteListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>Sets the callback hook for the OnLoadCompleteListener.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#setOnLoadCompleteListener(android.media.OnLoadCompleteListener)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.setOnLoadCompleteListener(android.media.OnLoadCompleteListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetPriority">
      <MemberSignature Language="C#" Value="public void SetPriority (int streamID, int priority);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPriority(int32 streamID, int32 priority) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.SetPriority(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SetPriority : int * int -&gt; unit" Usage="soundPool.SetPriority (streamID, priority)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPriority", "(II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPriority", "(II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamID" Type="System.Int32" />
        <Parameter Name="priority" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="priority">To be added.</param>
        <param name="streamID">a streamID returned by the play() function</param>
        <summary>Change stream priority.</summary>
        <remarks>
          <para>Change stream priority.</para>
          <para>Change the priority of the stream specified by the streamID.
            This is the value returned by the play() function. Affects the
            order in which streams are re-used to play new sounds. If the
            stream does not exist, it will have no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#setPriority(int,%20int)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.setPriority(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetRate">
      <MemberSignature Language="C#" Value="public void SetRate (int streamID, float rate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetRate(int32 streamID, float32 rate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.SetRate(System.Int32,System.Single)" />
      <MemberSignature Language="F#" Value="member this.SetRate : int * single -&gt; unit" Usage="soundPool.SetRate (streamID, rate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRate", "(IF)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRate", "(IF)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamID" Type="System.Int32" />
        <Parameter Name="rate" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="streamID">a streamID returned by the play() function</param>
        <param name="rate">playback rate (1.0 = normal playback, range 0.5 to 2.0)</param>
        <summary>Change playback rate.</summary>
        <remarks>
          <para>Change playback rate.</para>
          <para>The playback rate allows the application to vary the playback
            rate (pitch) of the sound. A value of 1.0 means playback at
            the original frequency. A value of 2.0 means playback twice
            as fast, and a value of 0.5 means playback at half speed.
            If the stream does not exist, it will have no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#setRate(int,%20float)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.setRate(int, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetVolume">
      <MemberSignature Language="C#" Value="public void SetVolume (int streamID, float leftVolume, float rightVolume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVolume(int32 streamID, float32 leftVolume, float32 rightVolume) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.SetVolume(System.Int32,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="member this.SetVolume : int * single * single -&gt; unit" Usage="soundPool.SetVolume (streamID, leftVolume, rightVolume)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVolume", "(IFF)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVolume", "(IFF)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamID" Type="System.Int32" />
        <Parameter Name="leftVolume" Type="System.Single" />
        <Parameter Name="rightVolume" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="streamID">a streamID returned by the play() function</param>
        <param name="leftVolume">left volume value (range = 0.0 to 1.0)</param>
        <param name="rightVolume">right volume value (range = 0.0 to 1.0)</param>
        <summary>Set stream volume.</summary>
        <remarks>
          <para>Set stream volume.</para>
          <para>Sets the volume on the stream specified by the streamID.
            This is the value returned by the play() function. The
            value must be in the range of 0.0 to 1.0. If the stream does
            not exist, it will have no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#setVolume(int,%20float,%20float)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.setVolume(int, float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (int streamID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(int32 streamID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.Stop(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Stop : int -&gt; unit" Usage="soundPool.Stop streamID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stop", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stop", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="streamID">a streamID returned by the play() function</param>
        <summary>Stop a playback stream.</summary>
        <remarks>
          <para>Stop a playback stream.</para>
          <para>Stop the stream specified by the streamID. This
            is the value returned by the play() function. If the stream
            is playing, it will be stopped. It also releases any native
            resources associated with this stream. If the stream is not
            playing, it will have no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#stop(int)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.stop(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.SoundPool.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.SoundPool.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.SoundPool.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.SoundPool.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public bool Unload (int soundID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Unload(int32 soundID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.SoundPool.Unload(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Unload : int -&gt; bool" Usage="soundPool.Unload soundID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unload", "(I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unload", "(I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="soundID" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="soundID">a soundID returned by the load() function</param>
        <summary>Unload a sound from a sound ID.</summary>
        <returns>true if just unloaded, false if previously unloaded</returns>
        <remarks>
          <para>Unload a sound from a sound ID.</para>
          <para>Unloads the sound specified by the soundID. This is the value
            returned by the load() function. Returns true if the sound is
            successfully unloaded, false if the sound was already unloaded.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/SoundPool#unload(int)" title="Reference documentation">Java documentation for <code>android.media.SoundPool.unload(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
