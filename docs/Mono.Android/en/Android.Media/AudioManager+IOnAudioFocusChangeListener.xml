<Type Name="AudioManager+IOnAudioFocusChangeListener" FullName="Android.Media.AudioManager+IOnAudioFocusChangeListener">
  <TypeSignature Language="VB.NET" Value="Public Interface AudioManager.IOnAudioFocusChangeListener&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public: interface class AudioManager::IOnAudioFocusChangeListener : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public interface AudioManager.IOnAudioFocusChangeListener : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract beforefieldinit AudioManager/IOnAudioFocusChangeListener implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.AudioManager.IOnAudioFocusChangeListener" />
  <TypeSignature Language="F#" Value="type AudioManager.IOnAudioFocusChangeListener = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/AudioManager$OnAudioFocusChangeListener", "", "Android.Media.AudioManager/IOnAudioFocusChangeListenerInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/AudioManager$OnAudioFocusChangeListener", "", "Android.Media.AudioManager/IOnAudioFocusChangeListenerInvoker")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface definition for a callback to be invoked when the audio focus of the system is
            updated.</summary>
    <remarks>
      <para>Interface definition for a callback to be invoked when the audio focus of the system is
            updated.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/AudioManager.OnAudioFocusChangeListener" title="Reference documentation">Java documentation for <code>android.media.AudioManager.OnAudioFocusChangeListener</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName="OnAudioFocusChange">
      <MemberSignature Language="VB.NET" Value="Public Sub OnAudioFocusChange (focusChange As AudioFocus)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnAudioFocusChange(Android::Media::AudioFocus focusChange);" />
      <MemberSignature Language="C#" Value="public void OnAudioFocusChange (Android.Media.AudioFocus focusChange);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAudioFocusChange(valuetype Android.Media.AudioFocus focusChange) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioManager.IOnAudioFocusChangeListener.OnAudioFocusChange(Android.Media.AudioFocus)" />
      <MemberSignature Language="F#" Value="abstract member OnAudioFocusChange : Android.Media.AudioFocus -&gt; unit" Usage="iOnAudioFocusChangeListener.OnAudioFocusChange focusChange" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onAudioFocusChange", "(I)V", "GetOnAudioFocusChange_IHandler:Android.Media.AudioManager/IOnAudioFocusChangeListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onAudioFocusChange", "(I)V", "GetOnAudioFocusChange_IHandler:Android.Media.AudioManager/IOnAudioFocusChangeListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="focusChange" Type="Android.Media.AudioFocus">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="focusChange">the type of focus change, one of <c>AudioManager#AUDIOFOCUS_GAIN</c>,
              <c>AudioManager#AUDIOFOCUS_LOSS</c>, <c>AudioManager#AUDIOFOCUS_LOSS_TRANSIENT</c>
              and <c>AudioManager#AUDIOFOCUS_LOSS_TRANSIENT_CAN_DUCK</c>.</param>
        <summary>Called on the listener to notify it the audio focus for this listener has been changed.</summary>
        <remarks>
          <para>Called on the listener to notify it the audio focus for this listener has been changed.
            The focusChange value indicates whether the focus was gained,
            whether the focus was lost, and whether that loss is transient, or whether the new focus
            holder will hold it for an unknown amount of time.
            When losing focus, listeners can use the focus change information to decide what
            behavior to adopt when losing focus. A music player could for instance elect to lower
            the volume of its music stream (duck) for transient focus losses, and pause otherwise.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioManager.OnAudioFocusChangeListener#onAudioFocusChange(int)" title="Reference documentation">Java documentation for <code>android.media.AudioManager.OnAudioFocusChangeListener.onAudioFocusChange(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
  </Members>
</Type>
