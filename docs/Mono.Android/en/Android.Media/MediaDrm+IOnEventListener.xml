<Type Name="MediaDrm+IOnEventListener" FullName="Android.Media.MediaDrm+IOnEventListener">
  <TypeSignature Language="C#" Value="public interface MediaDrm.IOnEventListener : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract beforefieldinit MediaDrm/IOnEventListener implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaDrm.IOnEventListener" />
  <TypeSignature Language="VB.NET" Value="Public Interface MediaDrm.IOnEventListener&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public: interface class MediaDrm::IOnEventListener : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="F#" Value="type MediaDrm.IOnEventListener = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/MediaDrm$OnEventListener", "", "Android.Media.MediaDrm/IOnEventListenerInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/MediaDrm$OnEventListener", "", "Android.Media.MediaDrm/IOnEventListenerInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface definition for a callback to be invoked when a drm event
            occurs</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/MediaDrm.OnEventListener" title="Reference documentation">Java documentation for <code>android.media.MediaDrm.OnEventListener</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 18" />
  </Docs>
  <Members>
    <Member MemberName="OnEvent">
      <MemberSignature Language="C#" Value="public void OnEvent (Android.Media.MediaDrm md, byte[]? sessionId, Android.Media.MediaDrmEventType e, int extra, byte[]? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnEvent(class Android.Media.MediaDrm md, unsigned int8[] sessionId, valuetype Android.Media.MediaDrmEventType e, int32 extra, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaDrm.IOnEventListener.OnEvent(Android.Media.MediaDrm,System.Byte[],Android.Media.MediaDrmEventType,System.Int32,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnEvent (md As MediaDrm, sessionId As Byte(), e As MediaDrmEventType, extra As Integer, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnEvent(Android::Media::MediaDrm ^ md, cli::array &lt;System::Byte&gt; ^ sessionId, Android::Media::MediaDrmEventType e, int extra, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member OnEvent : Android.Media.MediaDrm * byte[] * Android.Media.MediaDrmEventType * int * byte[] -&gt; unit" Usage="iOnEventListener.OnEvent (md, sessionId, e, extra, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onEvent", "(Landroid/media/MediaDrm;[BII[B)V", "GetOnEvent_Landroid_media_MediaDrm_arrayBIIarrayBHandler:Android.Media.MediaDrm/IOnEventListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onEvent", "(Landroid/media/MediaDrm;[BII[B)V", "GetOnEvent_Landroid_media_MediaDrm_arrayBIIarrayBHandler:Android.Media.MediaDrm/IOnEventListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="md" Type="Android.Media.MediaDrm" />
        <Parameter Name="sessionId" Type="System.Byte[]" />
        <Parameter Name="e" Type="Android.Media.MediaDrmEventType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="extra" Type="System.Int32" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="md">the MediaDrm object on which the event occurred</param>
        <param name="sessionId">the DRM session ID on which the event occurred,
                   or <c>null</c> if there is no session ID associated with the event.</param>
        <param name="e">indicates the event type</param>
        <param name="extra">an secondary error code</param>
        <param name="data">optional byte array of data that may be associated with the event</param>
        <summary>Called when an event occurs that requires the app to be notified</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaDrm.OnEventListener#onEvent(android.media.MediaDrm,%20byte[],%20int,%20int,%20byte[])" title="Reference documentation">Java documentation for <code>android.media.MediaDrm.OnEventListener.onEvent(android.media.MediaDrm, byte[], int, int, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
  </Members>
</Type>
