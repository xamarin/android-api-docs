<Type Name="MediaSync" FullName="Android.Media.MediaSync">
  <TypeSignature Language="C#" Value="public sealed class MediaSync : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MediaSync extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaSync" />
  <TypeSignature Language="F#" Value="type MediaSync = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/MediaSync", ApiSince=23, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>MediaSync class can be used to synchronously play audio and video streams.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/MediaSync" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaSync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaSync.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Class constructor.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInputSurface">
      <MemberSignature Language="C#" Value="public Android.Views.Surface CreateInputSurface ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Views.Surface CreateInputSurface() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaSync.CreateInputSurface" />
      <MemberSignature Language="F#" Value="member this.CreateInputSurface : unit -&gt; Android.Views.Surface" Usage="mediaSync.CreateInputSurface " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createInputSurface", "()Landroid/view/Surface;", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Surface</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Requests a Surface to use as the input.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaSync.Flush" />
      <MemberSignature Language="F#" Value="member this.Flush : unit -&gt; unit" Usage="mediaSync.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flush", "()V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Flushes all buffers from the sync object.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaSync.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.MediaSync.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PlaybackParams">
      <MemberSignature Language="C#" Value="public Android.Media.PlaybackParams PlaybackParams { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.PlaybackParams PlaybackParams" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaSync.PlaybackParams" />
      <MemberSignature Language="F#" Value="member this.PlaybackParams : Android.Media.PlaybackParams with get, set" Usage="Android.Media.MediaSync.PlaybackParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPlaybackParams", "()Landroid/media/PlaybackParams;", "", ApiSince=23)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPlaybackParams", "(Landroid/media/PlaybackParams;)V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.PlaybackParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the playback rate using <c>PlaybackParams</c>. -or- Sets playback rate using <c>PlaybackParams</c>PlaybackParams.</summary>
        <value>the playback rate being used.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <c>PlaybackParams#getSpeed
                Speed</c>
      </Docs>
    </Member>
    <Member MemberName="QueueAudio">
      <MemberSignature Language="C#" Value="public void QueueAudio (Java.Nio.ByteBuffer audioData, int bufferId, long presentationTimeUs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void QueueAudio(class Java.Nio.ByteBuffer audioData, int32 bufferId, int64 presentationTimeUs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaSync.QueueAudio(Java.Nio.ByteBuffer,System.Int32,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.QueueAudio : Java.Nio.ByteBuffer * int * int64 -&gt; unit" Usage="mediaSync.QueueAudio (audioData, bufferId, presentationTimeUs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("queueAudio", "(Ljava/nio/ByteBuffer;IJ)V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="bufferId" Type="System.Int32" />
        <Parameter Name="presentationTimeUs" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="audioData">the buffer that holds the data to play. This buffer will be returned
                to the client via registered callback.</param>
        <param name="bufferId">an integer used to identify audioData. It will be returned to
                the client along with audioData. This helps applications to keep track of audioData,
                e.g., it can be used to store the output buffer index used by the audio codec.</param>
        <param name="presentationTimeUs">the presentation timestamp in microseconds for the first frame
                in the buffer.</param>
        <summary>Queues the audio data asynchronously for playback (AudioTrack must be in streaming mode).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaSync.Release" />
      <MemberSignature Language="F#" Value="member this.Release : unit -&gt; unit" Usage="mediaSync.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("release", "()V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Make sure you call this when you're done to free up any opened
            component instance instead of relying on the garbage collector
            to do this for you at some point in the future.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAudioTrack">
      <MemberSignature Language="C#" Value="public void SetAudioTrack (Android.Media.AudioTrack audioTrack);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetAudioTrack(class Android.Media.AudioTrack audioTrack) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaSync.SetAudioTrack(Android.Media.AudioTrack)" />
      <MemberSignature Language="F#" Value="member this.SetAudioTrack : Android.Media.AudioTrack -&gt; unit" Usage="mediaSync.SetAudioTrack audioTrack" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioTrack", "(Landroid/media/AudioTrack;)V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioTrack" Type="Android.Media.AudioTrack" />
      </Parameters>
      <Docs>
        <param name="audioTrack">Specify an AudioTrack through which to render the audio data.</param>
        <summary>Sets the audio track for MediaSync.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCallback">
      <MemberSignature Language="C#" Value="public void SetCallback (Android.Media.MediaSync.Callback cb, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCallback(class Android.Media.MediaSync/Callback cb, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaSync.SetCallback(Android.Media.MediaSync.Callback,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="member this.SetCallback : Android.Media.MediaSync.Callback * Android.OS.Handler -&gt; unit" Usage="mediaSync.SetCallback (cb, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCallback", "(Landroid/media/MediaSync$Callback;Landroid/os/Handler;)V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.MediaSync+Callback" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="cb">The callback that will run. Use <c>null</c> to stop receiving callbacks.</param>
        <param name="handler">The Handler that will run the callback. Use <c>null</c> to use MediaSync's
                internal handler if it exists.</param>
        <summary>Sets an asynchronous callback for actionable MediaSync events.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnErrorListener">
      <MemberSignature Language="C#" Value="public void SetOnErrorListener (Android.Media.MediaSync.IOnErrorListener listener, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOnErrorListener(class Android.Media.MediaSync/IOnErrorListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaSync.SetOnErrorListener(Android.Media.MediaSync.IOnErrorListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="member this.SetOnErrorListener : Android.Media.MediaSync.IOnErrorListener * Android.OS.Handler -&gt; unit" Usage="mediaSync.SetOnErrorListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnErrorListener", "(Landroid/media/MediaSync$OnErrorListener;Landroid/os/Handler;)V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaSync+IOnErrorListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">The callback that will run. Use <c>null</c> to stop receiving callbacks.</param>
        <param name="handler">The Handler that will run the callback. Use <c>null</c> to use MediaSync's
                internal handler if it exists.</param>
        <summary>Sets an asynchronous callback for error events.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSurface">
      <MemberSignature Language="C#" Value="public void SetSurface (Android.Views.Surface surface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSurface(class Android.Views.Surface surface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaSync.SetSurface(Android.Views.Surface)" />
      <MemberSignature Language="F#" Value="member this.SetSurface : Android.Views.Surface -&gt; unit" Usage="mediaSync.SetSurface surface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSurface", "(Landroid/view/Surface;)V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Views.Surface" />
      </Parameters>
      <Docs>
        <param name="surface">Specify a surface on which to render the video data.</param>
        <summary>Sets the output surface for MediaSync.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncParams">
      <MemberSignature Language="C#" Value="public Android.Media.SyncParams SyncParams { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.SyncParams SyncParams" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaSync.SyncParams" />
      <MemberSignature Language="F#" Value="member this.SyncParams : Android.Media.SyncParams with get, set" Usage="Android.Media.MediaSync.SyncParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSyncParams", "()Landroid/media/SyncParams;", "", ApiSince=23)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSyncParams", "(Landroid/media/SyncParams;)V", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.SyncParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the A/V sync mode. -or- Sets A/V sync mode.</summary>
        <value>the A/V sync params</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaSync.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.MediaSync.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaSync.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.MediaSync.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public Android.Media.MediaTimestamp Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.MediaTimestamp Timestamp" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaSync.Timestamp" />
      <MemberSignature Language="F#" Value="member this.Timestamp : Android.Media.MediaTimestamp" Usage="Android.Media.MediaSync.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTimestamp", "()Landroid/media/MediaTimestamp;", "", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaTimestamp</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get current playback position.</summary>
        <value>a MediaTimestamp object if a timestamp is available, or <c>null</c> if no timestamp
                    is available, e.g. because the media player has not been initialized.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
