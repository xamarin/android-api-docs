<Type Name="MediaCodec+LinearBlock" FullName="Android.Media.MediaCodec+LinearBlock">
  <TypeSignature Language="C#" Value="public sealed class MediaCodec.LinearBlock : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit MediaCodec/LinearBlock extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaCodec.LinearBlock" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MediaCodec.LinearBlock&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public: ref class MediaCodec::LinearBlock sealed : Java::Lang::Object" />
  <TypeSignature Language="F#" Value="type MediaCodec.LinearBlock = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/MediaCodec$LinearBlock", ApiSince=30, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/MediaCodec$LinearBlock", ApiSince=30, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Section of memory that represents a linear block.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/MediaCodec.LinearBlock" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.LinearBlock</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsCodecCopyFreeCompatible">
      <MemberSignature Language="C#" Value="public static bool IsCodecCopyFreeCompatible (string[] codecNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCodecCopyFreeCompatible(string[] codecNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.LinearBlock.IsCodecCopyFreeCompatible(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsCodecCopyFreeCompatible (codecNames As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsCodecCopyFreeCompatible(cli::array &lt;System::String ^&gt; ^ codecNames);" />
      <MemberSignature Language="F#" Value="static member IsCodecCopyFreeCompatible : string[] -&gt; bool" Usage="Android.Media.MediaCodec.LinearBlock.IsCodecCopyFreeCompatible codecNames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isCodecCopyFreeCompatible", "([Ljava/lang/String;)Z", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isCodecCopyFreeCompatible", "([Ljava/lang/String;)Z", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codecNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="codecNames">list of codecs that the client wants to use a
                               linear block without copying. Null entries are
                               ignored.</param>
        <summary>Returns true if it is possible to allocate a linear block that can be
            passed to all listed codecs as input buffers without copying the
            content.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec.LinearBlock#isCodecCopyFreeCompatible(java.lang.String[])" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.LinearBlock.isCodecCopyFreeCompatible(java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMappable">
      <MemberSignature Language="C#" Value="public bool IsMappable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMappable" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.LinearBlock.IsMappable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMappable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMappable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMappable : bool" Usage="Android.Media.MediaCodec.LinearBlock.IsMappable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isMappable", "()Z", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isMappable", "()Z", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the buffer is mappable.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec.LinearBlock#isMappable()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.LinearBlock.isMappable()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.LinearBlock.JniPeerMembers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.MediaCodec.LinearBlock.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Map">
      <MemberSignature Language="C#" Value="public Java.Nio.ByteBuffer Map ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.ByteBuffer Map() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.LinearBlock.Map" />
      <MemberSignature Language="VB.NET" Value="Public Function Map () As ByteBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::ByteBuffer ^ Map();" />
      <MemberSignature Language="F#" Value="member this.Map : unit -&gt; Java.Nio.ByteBuffer" Usage="linearBlock.Map " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("map", "()Ljava/nio/ByteBuffer;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("map", "()Ljava/nio/ByteBuffer;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Map the memory and return the mapped region.</summary>
        <returns>mapped memory region as <c>ByteBuffer</c> object</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec.LinearBlock#map()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.LinearBlock.map()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Obtain">
      <MemberSignature Language="C#" Value="public static Android.Media.MediaCodec.LinearBlock? Obtain (int capacity, string[] codecNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.MediaCodec/LinearBlock Obtain(int32 capacity, string[] codecNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.LinearBlock.Obtain(System.Int32,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Obtain (capacity As Integer, codecNames As String()) As MediaCodec.LinearBlock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Media::MediaCodec::LinearBlock ^ Obtain(int capacity, cli::array &lt;System::String ^&gt; ^ codecNames);" />
      <MemberSignature Language="F#" Value="static member Obtain : int * string[] -&gt; Android.Media.MediaCodec.LinearBlock" Usage="Android.Media.MediaCodec.LinearBlock.Obtain (capacity, codecNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("obtain", "(I[Ljava/lang/String;)Landroid/media/MediaCodec$LinearBlock;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("obtain", "(I[Ljava/lang/String;)Landroid/media/MediaCodec$LinearBlock;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodec+LinearBlock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
        <Parameter Name="codecNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="capacity">To be added.</param>
        <param name="codecNames">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Recycle">
      <MemberSignature Language="C#" Value="public void Recycle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Recycle() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.LinearBlock.Recycle" />
      <MemberSignature Language="VB.NET" Value="Public Sub Recycle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Recycle();" />
      <MemberSignature Language="F#" Value="member this.Recycle : unit -&gt; unit" Usage="linearBlock.Recycle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("recycle", "()V", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("recycle", "()V", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Mark this block as ready to be recycled by the framework once it is
            no longer in use.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec.LinearBlock#recycle()" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.LinearBlock.recycle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.LinearBlock.ThresholdClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.MediaCodec.LinearBlock.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodec.LinearBlock.ThresholdType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.MediaCodec.LinearBlock.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
