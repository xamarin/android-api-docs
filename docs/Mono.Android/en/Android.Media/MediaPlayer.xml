<Type Name="MediaPlayer" FullName="Android.Media.MediaPlayer">
  <TypeSignature Language="C#" Value="public class MediaPlayer : Java.Lang.Object, Android.Media.IAudioRouting, Android.Media.IVolumeAutomation, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaPlayer extends Java.Lang.Object implements class Android.Media.IAudioRouting, class Android.Media.IVolumeAutomation, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaPlayer" />
  <TypeSignature Language="F#" Value="type MediaPlayer = class&#xA;    inherit Object&#xA;    interface IVolumeAutomation&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Media.IAudioRouting</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Media.IVolumeAutomation</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/MediaPlayer", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>MediaPlayer class can be used to control playback
 of audio/video files and streams.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/MediaPlayer" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#MediaPlayer()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.MediaPlayer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaPlayer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.MediaPlayer : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.MediaPlayer" Usage="new Android.Media.MediaPlayer (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnRoutingChangedListener">
      <MemberSignature Language="C#" Value="public virtual void AddOnRoutingChangedListener (Android.Media.IAudioRoutingOnRoutingChangedListener listener, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnRoutingChangedListener(class Android.Media.IAudioRoutingOnRoutingChangedListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.AddOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;Landroid/os/Handler;)V", "GetAddOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Landroid_os_Handler_Handler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.IAudioRoutingOnRoutingChangedListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">The <c>AudioRouting.OnRoutingChangedListener</c> interface to receive
            notifications of rerouting events.</param>
        <param name="handler">Specifies the <c>Handler</c> object for the thread on which to execute
            the callback. If &lt;code&gt;null&lt;/code&gt;, the handler on the main looper will be used.</param>
        <summary>Adds an <c>AudioRouting.OnRoutingChangedListener</c> to receive notifications of routing
            changes on this MediaPlayer.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#addOnRoutingChangedListener(android.media.OnRoutingChangedListener,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.addOnRoutingChangedListener(android.media.OnRoutingChangedListener, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTimedTextSource">
      <MemberSignature Language="C#" Value="public virtual void AddTimedTextSource (Java.IO.FileDescriptor fd, string mimeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTimedTextSource(class Java.IO.FileDescriptor fd, string mimeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.AddTimedTextSource(Java.IO.FileDescriptor,System.String)" />
      <MemberSignature Language="F#" Value="abstract member AddTimedTextSource : Java.IO.FileDescriptor * string -&gt; unit&#xA;override this.AddTimedTextSource : Java.IO.FileDescriptor * string -&gt; unit" Usage="mediaPlayer.AddTimedTextSource (fd, mimeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTimedTextSource", "(Ljava/io/FileDescriptor;Ljava/lang/String;)V", "GetAddTimedTextSource_Ljava_io_FileDescriptor_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="mimeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fd">the FileDescriptor for the file you want to play</param>
        <param name="mimeType">The mime type of the file. Must be one of the mime types listed above.</param>
        <summary>Adds an external timed text source file (Uri).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#addTimedTextSource(android.content.Context,%20android.net.Uri,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.addTimedTextSource(android.content.Context, android.net.Uri, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the mimeType is not supported.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if called in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTimedTextSource">
      <MemberSignature Language="C#" Value="public virtual void AddTimedTextSource (string path, string mimeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTimedTextSource(string path, string mimeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.AddTimedTextSource(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member AddTimedTextSource : string * string -&gt; unit&#xA;override this.AddTimedTextSource : string * string -&gt; unit" Usage="mediaPlayer.AddTimedTextSource (path, mimeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTimedTextSource", "(Ljava/lang/String;Ljava/lang/String;)V", "GetAddTimedTextSource_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mimeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The file path of external timed text source file.</param>
        <param name="mimeType">The mime type of the file. Must be one of the mime types listed above.</param>
        <summary>Adds an external timed text source file (Uri).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#addTimedTextSource(android.content.Context,%20android.net.Uri,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.addTimedTextSource(android.content.Context, android.net.Uri, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.IO.IOException">if the file cannot be accessed or is corrupted.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the mimeType is not supported.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if called in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTimedTextSource">
      <MemberSignature Language="C#" Value="public virtual void AddTimedTextSource (Android.Content.Context context, Android.Net.Uri uri, string mimeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTimedTextSource(class Android.Content.Context context, class Android.Net.Uri uri, string mimeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.AddTimedTextSource(Android.Content.Context,Android.Net.Uri,System.String)" />
      <MemberSignature Language="F#" Value="abstract member AddTimedTextSource : Android.Content.Context * Android.Net.Uri * string -&gt; unit&#xA;override this.AddTimedTextSource : Android.Content.Context * Android.Net.Uri * string -&gt; unit" Usage="mediaPlayer.AddTimedTextSource (context, uri, mimeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTimedTextSource", "(Landroid/content/Context;Landroid/net/Uri;Ljava/lang/String;)V", "GetAddTimedTextSource_Landroid_content_Context_Landroid_net_Uri_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="mimeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">the Context to use when resolving the Uri</param>
        <param name="uri">the Content URI of the data you want to play</param>
        <param name="mimeType">The mime type of the file. Must be one of the mime types listed above.</param>
        <summary>Adds an external timed text source file (Uri).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#addTimedTextSource(android.content.Context,%20android.net.Uri,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.addTimedTextSource(android.content.Context, android.net.Uri, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.IO.IOException">if the file cannot be accessed or is corrupted.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the mimeType is not supported.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if called in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddTimedTextSource">
      <MemberSignature Language="C#" Value="public virtual void AddTimedTextSource (Java.IO.FileDescriptor fd, long offset, long length, string mime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddTimedTextSource(class Java.IO.FileDescriptor fd, int64 offset, int64 length, string mime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.AddTimedTextSource(Java.IO.FileDescriptor,System.Int64,System.Int64,System.String)" />
      <MemberSignature Language="F#" Value="abstract member AddTimedTextSource : Java.IO.FileDescriptor * int64 * int64 * string -&gt; unit&#xA;override this.AddTimedTextSource : Java.IO.FileDescriptor * int64 * int64 * string -&gt; unit" Usage="mediaPlayer.AddTimedTextSource (fd, offset, length, mime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addTimedTextSource", "(Ljava/io/FileDescriptor;JJLjava/lang/String;)V", "GetAddTimedTextSource_Ljava_io_FileDescriptor_JJLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
        <Parameter Name="mime" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fd">the FileDescriptor for the file you want to play</param>
        <param name="offset">the offset into the file where the data to be played starts, in bytes</param>
        <param name="length">the length in bytes of the data to be played</param>
        <param name="mime">The mime type of the file. Must be one of the mime types listed above.</param>
        <summary>Adds an external timed text source file (Uri).</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#addTimedTextSource(android.content.Context,%20android.net.Uri,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.addTimedTextSource(android.content.Context, android.net.Uri, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the mimeType is not supported.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if called in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AttachAuxEffect">
      <MemberSignature Language="C#" Value="public virtual void AttachAuxEffect (int effectId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttachAuxEffect(int32 effectId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.AttachAuxEffect(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member AttachAuxEffect : int -&gt; unit&#xA;override this.AttachAuxEffect : int -&gt; unit" Usage="mediaPlayer.AttachAuxEffect effectId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("attachAuxEffect", "(I)V", "GetAttachAuxEffect_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effectId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="effectId">system wide unique id of the effect to attach</param>
        <summary>Attaches an auxiliary effect to the player.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#attachAuxEffect(int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.attachAuxEffect(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="AudioSessionId">
      <MemberSignature Language="C#" Value="public virtual int AudioSessionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AudioSessionId" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.AudioSessionId" />
      <MemberSignature Language="F#" Value="member this.AudioSessionId : int with get, set" Usage="Android.Media.MediaPlayer.AudioSessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAudioSessionId", "()I", "GetGetAudioSessionIdHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setAudioSessionId", "(I)V", "GetSetAudioSessionId_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Sets the audio session ID.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setAudioSessionId(int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setAudioSessionId(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state
</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="BufferingUpdate">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaPlayer.BufferingUpdateEventArgs&gt; BufferingUpdate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaPlayer/BufferingUpdateEventArgs&gt; BufferingUpdate" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.BufferingUpdate" />
      <MemberSignature Language="F#" Value="member this.BufferingUpdate : EventHandler&lt;Android.Media.MediaPlayer.BufferingUpdateEventArgs&gt; " Usage="member this.BufferingUpdate : System.EventHandler&lt;Android.Media.MediaPlayer.BufferingUpdateEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaPlayer+BufferingUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOnMediaTimeDiscontinuityListener">
      <MemberSignature Language="C#" Value="public virtual void ClearOnMediaTimeDiscontinuityListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearOnMediaTimeDiscontinuityListener() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.ClearOnMediaTimeDiscontinuityListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearOnMediaTimeDiscontinuityListener", "()V", "GetClearOnMediaTimeDiscontinuityListenerHandler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the listener previously set with
            <c>#setOnMediaTimeDiscontinuityListener(OnMediaTimeDiscontinuityListener)</c>
            or <c>#setOnMediaTimeDiscontinuityListener(OnMediaTimeDiscontinuityListener, Handler)</c></summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#clearOnMediaTimeDiscontinuityListener()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.clearOnMediaTimeDiscontinuityListener()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearOnSubtitleDataListener">
      <MemberSignature Language="C#" Value="public virtual void ClearOnSubtitleDataListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearOnSubtitleDataListener() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.ClearOnSubtitleDataListener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("clearOnSubtitleDataListener", "()V", "GetClearOnSubtitleDataListenerHandler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the listener previously set with
            <c>#setOnSubtitleDataListener(OnSubtitleDataListener)</c> or
            <c>#setOnSubtitleDataListener(OnSubtitleDataListener, Handler)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#clearOnSubtitleDataListener()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.clearOnSubtitleDataListener()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public event EventHandler Completion;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Completion" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.Completion" />
      <MemberSignature Language="F#" Value="member this.Completion : EventHandler " Usage="member this.Completion : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Android.Media.MediaPlayer Create (Android.Content.Context context, Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.MediaPlayer Create(class Android.Content.Context context, class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.Create(Android.Content.Context,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member Create : Android.Content.Context * Android.Net.Uri -&gt; Android.Media.MediaPlayer" Usage="Android.Media.MediaPlayer.Create (context, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("create", "(Landroid/content/Context;Landroid/net/Uri;)Landroid/media/MediaPlayer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaPlayer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="context">the Context to use</param>
        <param name="uri">the Uri from which to get the datasource</param>
        <summary>Convenience method to create a MediaPlayer for a given resource id.</summary>
        <returns>a MediaPlayer object, or null if creation failed</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#create(android.content.Context,%20int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.create(android.content.Context, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 21" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Android.Media.MediaPlayer Create (Android.Content.Context context, int resid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.MediaPlayer Create(class Android.Content.Context context, int32 resid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.Create(Android.Content.Context,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Create : Android.Content.Context * int -&gt; Android.Media.MediaPlayer" Usage="Android.Media.MediaPlayer.Create (context, resid)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("create", "(Landroid/content/Context;I)Landroid/media/MediaPlayer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaPlayer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">the Context to use</param>
        <param name="resid">the raw resource id (&lt;var&gt;R.raw.&amp;lt;something&gt;&lt;/var&gt;) for
                         the resource to use as the datasource</param>
        <summary>Convenience method to create a MediaPlayer for a given resource id.</summary>
        <returns>a MediaPlayer object, or null if creation failed</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#create(android.content.Context,%20int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.create(android.content.Context, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Android.Media.MediaPlayer Create (Android.Content.Context context, Android.Net.Uri uri, Android.Views.ISurfaceHolder holder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.MediaPlayer Create(class Android.Content.Context context, class Android.Net.Uri uri, class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.Create(Android.Content.Context,Android.Net.Uri,Android.Views.ISurfaceHolder)" />
      <MemberSignature Language="F#" Value="static member Create : Android.Content.Context * Android.Net.Uri * Android.Views.ISurfaceHolder -&gt; Android.Media.MediaPlayer" Usage="Android.Media.MediaPlayer.Create (context, uri, holder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("create", "(Landroid/content/Context;Landroid/net/Uri;Landroid/view/SurfaceHolder;)Landroid/media/MediaPlayer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaPlayer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="context">the Context to use</param>
        <param name="uri">the Uri from which to get the datasource</param>
        <param name="holder">the SurfaceHolder to use for displaying the video</param>
        <summary>Convenience method to create a MediaPlayer for a given resource id.</summary>
        <returns>a MediaPlayer object, or null if creation failed</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#create(android.content.Context,%20int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.create(android.content.Context, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Android.Media.MediaPlayer Create (Android.Content.Context context, int resid, Android.Media.AudioAttributes audioAttributes, int audioSessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.MediaPlayer Create(class Android.Content.Context context, int32 resid, class Android.Media.AudioAttributes audioAttributes, int32 audioSessionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.Create(Android.Content.Context,System.Int32,Android.Media.AudioAttributes,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Create : Android.Content.Context * int * Android.Media.AudioAttributes * int -&gt; Android.Media.MediaPlayer" Usage="Android.Media.MediaPlayer.Create (context, resid, audioAttributes, audioSessionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("create", "(Landroid/content/Context;ILandroid/media/AudioAttributes;I)Landroid/media/MediaPlayer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaPlayer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="audioAttributes" Type="Android.Media.AudioAttributes" />
        <Parameter Name="audioSessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">the Context to use</param>
        <param name="resid">the raw resource id (&lt;var&gt;R.raw.&amp;lt;something&gt;&lt;/var&gt;) for
                         the resource to use as the datasource</param>
        <param name="audioAttributes">the <see cref="T:Android.Media.AudioAttributes" /> to be used by the media player.</param>
        <param name="audioSessionId">the audio session ID to be used by the media player,
     see <see cref="M:Android.Media.AudioManager.GenerateAudioSessionId" /> to obtain a new session.</param>
        <summary>Convenience method to create a MediaPlayer for a given resource id.</summary>
        <returns>a MediaPlayer object, or null if creation failed</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#create(android.content.Context,%20int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.create(android.content.Context, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Android.Media.MediaPlayer Create (Android.Content.Context context, Android.Net.Uri uri, Android.Views.ISurfaceHolder holder, Android.Media.AudioAttributes audioAttributes, int audioSessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.MediaPlayer Create(class Android.Content.Context context, class Android.Net.Uri uri, class Android.Views.ISurfaceHolder holder, class Android.Media.AudioAttributes audioAttributes, int32 audioSessionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.Create(Android.Content.Context,Android.Net.Uri,Android.Views.ISurfaceHolder,Android.Media.AudioAttributes,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Create : Android.Content.Context * Android.Net.Uri * Android.Views.ISurfaceHolder * Android.Media.AudioAttributes * int -&gt; Android.Media.MediaPlayer" Usage="Android.Media.MediaPlayer.Create (context, uri, holder, audioAttributes, audioSessionId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("create", "(Landroid/content/Context;Landroid/net/Uri;Landroid/view/SurfaceHolder;Landroid/media/AudioAttributes;I)Landroid/media/MediaPlayer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaPlayer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
        <Parameter Name="audioAttributes" Type="Android.Media.AudioAttributes" />
        <Parameter Name="audioSessionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">the Context to use</param>
        <param name="uri">the Uri from which to get the datasource</param>
        <param name="holder">the SurfaceHolder to use for displaying the video, may be null.</param>
        <param name="audioAttributes">the <see cref="T:Android.Media.AudioAttributes" /> to be used by the media player.</param>
        <param name="audioSessionId">the audio session ID to be used by the media player,
     see <see cref="M:Android.Media.AudioManager.GenerateAudioSessionId" /> to obtain a new session.</param>
        <summary>Convenience method to create a MediaPlayer for a given resource id.</summary>
        <returns>a MediaPlayer object, or null if creation failed</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#create(android.content.Context,%20int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.create(android.content.Context, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateVolumeShaper">
      <MemberSignature Language="C#" Value="public virtual Android.Media.VolumeShaper CreateVolumeShaper (Android.Media.VolumeShaper.Configuration configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.VolumeShaper CreateVolumeShaper(class Android.Media.VolumeShaper/Configuration configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.CreateVolumeShaper(Android.Media.VolumeShaper.Configuration)" />
      <MemberSignature Language="F#" Value="abstract member CreateVolumeShaper : Android.Media.VolumeShaper.Configuration -&gt; Android.Media.VolumeShaper&#xA;override this.CreateVolumeShaper : Android.Media.VolumeShaper.Configuration -&gt; Android.Media.VolumeShaper" Usage="mediaPlayer.CreateVolumeShaper configuration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createVolumeShaper", "(Landroid/media/VolumeShaper$Configuration;)Landroid/media/VolumeShaper;", "GetCreateVolumeShaper_Landroid_media_VolumeShaper_Configuration_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.VolumeShaper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configuration" Type="Android.Media.VolumeShaper+Configuration" />
      </Parameters>
      <Docs>
        <param name="configuration">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
      <Implements>
        <InterfaceMember>M:Android.Media.IVolumeAutomation.CreateVolumeShaper(Android.Media.VolumeShaper.Configuration)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="CurrentPosition">
      <MemberSignature Language="C#" Value="public virtual int CurrentPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentPosition" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.CurrentPosition" />
      <MemberSignature Language="F#" Value="member this.CurrentPosition : int" Usage="Android.Media.MediaPlayer.CurrentPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCurrentPosition", "()I", "GetGetCurrentPositionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current playback position.</summary>
        <value>the current position in milliseconds</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getCurrentPosition()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getCurrentPosition()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DeselectTrack">
      <MemberSignature Language="C#" Value="public virtual void DeselectTrack (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeselectTrack(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.DeselectTrack(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member DeselectTrack : int -&gt; unit&#xA;override this.DeselectTrack : int -&gt; unit" Usage="mediaPlayer.DeselectTrack index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("deselectTrack", "(I)V", "GetDeselectTrack_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">the index of the track to be deselected. The valid range of the index
            is 0..total number of tracks - 1. The total number of tracks as well as the type of
            each individual track can be found by calling <c>#getTrackInfo()</c> method.</param>
        <summary>Deselect a track.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#deselectTrack(int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.deselectTrack(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if called in an invalid state.</exception>
        <altmember cref="M:Android.Media.MediaPlayer.GetTrackInfo" />
      </Docs>
    </Member>
    <Member MemberName="DrmInfoEvent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaPlayer.DrmInfoEventArgs&gt; DrmInfoEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaPlayer/DrmInfoEventArgs&gt; DrmInfoEvent" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.DrmInfoEvent" />
      <MemberSignature Language="F#" Value="member this.DrmInfoEvent : EventHandler&lt;Android.Media.MediaPlayer.DrmInfoEventArgs&gt; " Usage="member this.DrmInfoEvent : System.EventHandler&lt;Android.Media.MediaPlayer.DrmInfoEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaPlayer+DrmInfoEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrmPrepared">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaPlayer.DrmPreparedEventArgs&gt; DrmPrepared;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaPlayer/DrmPreparedEventArgs&gt; DrmPrepared" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.DrmPrepared" />
      <MemberSignature Language="F#" Value="member this.DrmPrepared : EventHandler&lt;Android.Media.MediaPlayer.DrmPreparedEventArgs&gt; " Usage="member this.DrmPrepared : System.EventHandler&lt;Android.Media.MediaPlayer.DrmPreparedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaPlayer+DrmPreparedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Duration">
      <MemberSignature Language="C#" Value="public virtual int Duration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Duration" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.Duration" />
      <MemberSignature Language="F#" Value="member this.Duration : int" Usage="Android.Media.MediaPlayer.Duration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDuration", "()I", "GetGetDurationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the duration of the file.</summary>
        <value>the duration in milliseconds, if no duration is available
                    (for example, if streaming live content), -1 is returned.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getDuration()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getDuration()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaPlayer.ErrorEventArgs&gt; Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaPlayer/ErrorEventArgs&gt; Error" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.Error" />
      <MemberSignature Language="F#" Value="member this.Error : EventHandler&lt;Android.Media.MediaPlayer.ErrorEventArgs&gt; " Usage="member this.Error : System.EventHandler&lt;Android.Media.MediaPlayer.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaPlayer+ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDrmInfo">
      <MemberSignature Language="C#" Value="public virtual Android.Media.MediaPlayer.DrmInfo GetDrmInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.MediaPlayer/DrmInfo GetDrmInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.GetDrmInfo" />
      <MemberSignature Language="F#" Value="abstract member GetDrmInfo : unit -&gt; Android.Media.MediaPlayer.DrmInfo&#xA;override this.GetDrmInfo : unit -&gt; Android.Media.MediaPlayer.DrmInfo" Usage="mediaPlayer.GetDrmInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDrmInfo", "()Landroid/media/MediaPlayer$DrmInfo;", "GetGetDrmInfoHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaPlayer+DrmInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the DRM Info associated with the current source</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getDrmInfo()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getDrmInfo()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDrmPropertyString">
      <MemberSignature Language="C#" Value="public virtual string GetDrmPropertyString (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDrmPropertyString(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.GetDrmPropertyString(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetDrmPropertyString : string -&gt; string&#xA;override this.GetDrmPropertyString : string -&gt; string" Usage="mediaPlayer.GetDrmPropertyString propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getDrmPropertyString", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetDrmPropertyString_Ljava_lang_String_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.StringDef(Fields=new System.String[] { "PropertyVendor", "PropertyVersion", "PropertyDescription", "PropertyAlgorithms" }, Type="Android.Media.MediaDrm")</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="propertyName">the property name
            
            Standard fields names are:
            <c>MediaDrm#PROPERTY_VENDOR</c>, <c>MediaDrm#PROPERTY_VERSION</c>,
            <c>MediaDrm#PROPERTY_DESCRIPTION</c>, <c>MediaDrm#PROPERTY_ALGORITHMS</c></param>
        <summary>Read a DRM engine plugin String property value, given the property name string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getDrmPropertyString(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getDrmPropertyString(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyRequest">
      <MemberSignature Language="C#" Value="public virtual Android.Media.MediaDrm.KeyRequest GetKeyRequest (byte[] keySetId, byte[] initData, string mimeType, Android.Media.MediaDrmKeyType keyType, System.Collections.Generic.IDictionary&lt;string,string&gt; optionalParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.MediaDrm/KeyRequest GetKeyRequest(unsigned int8[] keySetId, unsigned int8[] initData, string mimeType, valuetype Android.Media.MediaDrmKeyType keyType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; optionalParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.GetKeyRequest(System.Byte[],System.Byte[],System.String,Android.Media.MediaDrmKeyType,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="F#" Value="abstract member GetKeyRequest : byte[] * byte[] * string * Android.Media.MediaDrmKeyType * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Android.Media.MediaDrm.KeyRequest&#xA;override this.GetKeyRequest : byte[] * byte[] * string * Android.Media.MediaDrmKeyType * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; Android.Media.MediaDrm.KeyRequest" Usage="mediaPlayer.GetKeyRequest (keySetId, initData, mimeType, keyType, optionalParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getKeyRequest", "([B[BLjava/lang/String;ILjava/util/Map;)Landroid/media/MediaDrm$KeyRequest;", "GetGetKeyRequest_arrayBarrayBLjava_lang_String_ILjava_util_Map_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaDrm+KeyRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keySetId" Type="System.Byte[]" />
        <Parameter Name="initData" Type="System.Byte[]" />
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="keyType" Type="Android.Media.MediaDrmKeyType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="optionalParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="keySetId">is the key-set identifier of the offline keys being released when keyType is
            <c>MediaDrm#KEY_TYPE_RELEASE</c>. It should be set to null for other key requests, when
            keyType is <c>MediaDrm#KEY_TYPE_STREAMING</c> or <c>MediaDrm#KEY_TYPE_OFFLINE</c>.</param>
        <param name="initData">is the container-specific initialization data when the keyType is
            <c>MediaDrm#KEY_TYPE_STREAMING</c> or <c>MediaDrm#KEY_TYPE_OFFLINE</c>. Its meaning is
            interpreted based on the mime type provided in the mimeType parameter.  It could
            contain, for example, the content ID, key ID or other data obtained from the content
            metadata that is required in generating the key request.
            When the keyType is <c>MediaDrm#KEY_TYPE_RELEASE</c>, it should be set to null.</param>
        <param name="mimeType">identifies the mime type of the content</param>
        <param name="keyType">specifies the type of the request. The request may be to acquire
            keys for streaming, <c>MediaDrm#KEY_TYPE_STREAMING</c>, or for offline content
            <c>MediaDrm#KEY_TYPE_OFFLINE</c>, or to release previously acquired
            keys (<c>MediaDrm#KEY_TYPE_RELEASE</c>), which are identified by a keySetId.</param>
        <param name="optionalParameters">are included in the key request message to
            allow a client application to provide additional message parameters to the server.
            This may be <c>null</c> if no additional parameters are to be sent.</param>
        <summary>A key request/response exchange occurs between the app and a license server
            to obtain or release keys used to decrypt encrypted content.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getKeyRequest(byte[],%20byte[],%20java.lang.String,%20int,%20java.util.Map)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getKeyRequest(byte[], byte[], java.lang.String, int, java.util.Map)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSelectedTrack">
      <MemberSignature Language="C#" Value="public virtual int GetSelectedTrack (Android.Media.MediaTrackType trackType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSelectedTrack(valuetype Android.Media.MediaTrackType trackType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.GetSelectedTrack(Android.Media.MediaTrackType)" />
      <MemberSignature Language="F#" Value="abstract member GetSelectedTrack : Android.Media.MediaTrackType -&gt; int&#xA;override this.GetSelectedTrack : Android.Media.MediaTrackType -&gt; int" Usage="mediaPlayer.GetSelectedTrack trackType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSelectedTrack", "(I)I", "GetGetSelectedTrack_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trackType" Type="Android.Media.MediaTrackType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="trackType">should be one of <c>TrackInfo#MEDIA_TRACK_TYPE_VIDEO</c>,
            <c>TrackInfo#MEDIA_TRACK_TYPE_AUDIO</c>, or
            <c>TrackInfo#MEDIA_TRACK_TYPE_SUBTITLE</c></param>
        <summary>Returns the index of the audio, video, or subtitle track currently selected for playback,
            The return value is an index into the array returned by <c>#getTrackInfo()</c>, and can
            be used in calls to <c>#selectTrack(int)</c> or <c>#deselectTrack(int)</c>.</summary>
        <returns>index of the audio, video, or subtitle track currently selected for playback;
            a negative integer is returned when there is no selected track for <c>trackType</c> or
            when <c>trackType</c> is not one of audio, video, or subtitle.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getSelectedTrack(int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getSelectedTrack(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException">if called after <see cref="M:Android.Media.MediaPlayer.Release" /></exception>
        <altmember cref="M:Android.Media.MediaPlayer.GetTrackInfo" />
        <altmember cref="M:Android.Media.MediaPlayer.SelectTrack(System.Int32)" />
        <altmember cref="M:Android.Media.MediaPlayer.DeselectTrack(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetTrackInfo">
      <MemberSignature Language="C#" Value="public virtual Android.Media.MediaPlayer.TrackInfo[] GetTrackInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.MediaPlayer/TrackInfo[] GetTrackInfo() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.GetTrackInfo" />
      <MemberSignature Language="F#" Value="abstract member GetTrackInfo : unit -&gt; Android.Media.MediaPlayer.TrackInfo[]&#xA;override this.GetTrackInfo : unit -&gt; Android.Media.MediaPlayer.TrackInfo[]" Usage="mediaPlayer.GetTrackInfo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTrackInfo", "()[Landroid/media/MediaPlayer$TrackInfo;", "GetGetTrackInfoHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaPlayer+TrackInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an array of track information.</summary>
        <returns>Array of track info. The total number of tracks is the array length.
            Must be called again if an external timed text source has been added after any of the
            addTimedTextSource methods are called.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getTrackInfo()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getTrackInfo()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaPlayer.InfoEventArgs&gt; Info;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaPlayer/InfoEventArgs&gt; Info" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.Info" />
      <MemberSignature Language="F#" Value="member this.Info : EventHandler&lt;Android.Media.MediaPlayer.InfoEventArgs&gt; " Usage="member this.Info : System.EventHandler&lt;Android.Media.MediaPlayer.InfoEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaPlayer+InfoEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlaying">
      <MemberSignature Language="C#" Value="public virtual bool IsPlaying { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPlaying" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.IsPlaying" />
      <MemberSignature Language="F#" Value="member this.IsPlaying : bool" Usage="Android.Media.MediaPlayer.IsPlaying" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isPlaying", "()Z", "GetIsPlayingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether the MediaPlayer is playing.</summary>
        <value>true if currently playing, false otherwise</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#isPlaying()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.isPlaying()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the internal player engine has not been
 initialized or has been released.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.MediaPlayer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Looping">
      <MemberSignature Language="C#" Value="public virtual bool Looping { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Looping" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.Looping" />
      <MemberSignature Language="F#" Value="member this.Looping : bool with get, set" Usage="Android.Media.MediaPlayer.Looping" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isLooping", "()Z", "GetIsLoopingHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setLooping", "(Z)V", "GetSetLooping_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether the MediaPlayer is looping or non-looping. -or- Sets the player to be looping or non-looping.</summary>
        <value>true if the MediaPlayer is currently looping, false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#isLooping()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.isLooping()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setLooping(boolean)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setLooping(boolean)</code>.</a>
            </format>
          </para>
          <format type="text/html">
            <a href="https://developer.android.com/reference/android/media/MediaPlayer#setLooping(boolean)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setLooping(boolean)</code>.</a>
          </format>
          <a href="https://developer.android.com/reference/android/media/MediaPlayer#setLooping(boolean)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setLooping(boolean)</code>.</a>Java documentation for <code>android.media.MediaPlayer.setLooping(boolean)</code>android.media.MediaPlayer.setLooping(boolean).<para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a>Android Open Source Project
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a>Creative Commons 2.5 Attribution License.</remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="MediaErrorIo">
      <MemberSignature Language="C#" Value="public const int MediaErrorIo = -1004;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MediaErrorIo = (-1004)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaPlayer.MediaErrorIo" />
      <MemberSignature Language="F#" Value="val mutable MediaErrorIo : int" Usage="Android.Media.MediaPlayer.MediaErrorIo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaError.Io.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1004</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaErrorMalformed">
      <MemberSignature Language="C#" Value="public const int MediaErrorMalformed = -1007;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MediaErrorMalformed = (-1007)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaPlayer.MediaErrorMalformed" />
      <MemberSignature Language="F#" Value="val mutable MediaErrorMalformed : int" Usage="Android.Media.MediaPlayer.MediaErrorMalformed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaError.Malformed.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1007</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaErrorTimedOut">
      <MemberSignature Language="C#" Value="public const int MediaErrorTimedOut = -110;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MediaErrorTimedOut = (-110)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaPlayer.MediaErrorTimedOut" />
      <MemberSignature Language="F#" Value="val mutable MediaErrorTimedOut : int" Usage="Android.Media.MediaPlayer.MediaErrorTimedOut" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaError.TimedOut.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-110</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaErrorUnsupported">
      <MemberSignature Language="C#" Value="public const int MediaErrorUnsupported = -1010;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MediaErrorUnsupported = (-1010)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaPlayer.MediaErrorUnsupported" />
      <MemberSignature Language="F#" Value="val mutable MediaErrorUnsupported : int" Usage="Android.Media.MediaPlayer.MediaErrorUnsupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaError.Unsupported.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1010</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaMimetypeTextSubrip">
      <MemberSignature Language="C#" Value="public const string MediaMimetypeTextSubrip;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaMimetypeTextSubrip" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaPlayer.MediaMimetypeTextSubrip" />
      <MemberSignature Language="F#" Value="val mutable MediaMimetypeTextSubrip : string" Usage="Android.Media.MediaPlayer.MediaMimetypeTextSubrip" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_MIMETYPE_TEXT_SUBRIP")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>MIME type for SubRip (SRT) container.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#MEDIA_MIMETYPE_TEXT_SUBRIP" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.MEDIA_MIMETYPE_TEXT_SUBRIP</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="MediaTimeDiscontinuity">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaPlayer.MediaTimeDiscontinuityEventArgs&gt; MediaTimeDiscontinuity;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaPlayer/MediaTimeDiscontinuityEventArgs&gt; MediaTimeDiscontinuity" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.MediaTimeDiscontinuity" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaPlayer+MediaTimeDiscontinuityEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metrics">
      <MemberSignature Language="C#" Value="public virtual Android.OS.PersistableBundle Metrics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.PersistableBundle Metrics" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.Metrics" />
      <MemberSignature Language="F#" Value="member this.Metrics : Android.OS.PersistableBundle" Usage="Android.Media.MediaPlayer.Metrics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMetrics", "()Landroid/os/PersistableBundle;", "GetGetMetricsHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.PersistableBundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return Metrics data about the current player.</summary>
        <value>a <c>PersistableBundle</c> containing the set of attributes and values
            available for the media being handled by this instance of MediaPlayer
            The attributes are descibed in <c>MetricsConstants</c>.
            
             Additional vendor-specific fields may also be present in
             the return value.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getMetrics()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getMetrics()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public virtual void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.Pause" />
      <MemberSignature Language="F#" Value="abstract member Pause : unit -&gt; unit&#xA;override this.Pause : unit -&gt; unit" Usage="mediaPlayer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pause", "()V", "GetPauseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pauses playback.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#pause()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.pause()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the internal player engine has not been
 initialized.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PlaybackParams">
      <MemberSignature Language="C#" Value="public virtual Android.Media.PlaybackParams PlaybackParams { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.PlaybackParams PlaybackParams" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.PlaybackParams" />
      <MemberSignature Language="F#" Value="member this.PlaybackParams : Android.Media.PlaybackParams with get, set" Usage="Android.Media.MediaPlayer.PlaybackParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPlaybackParams", "()Landroid/media/PlaybackParams;", "GetGetPlaybackParamsHandler", ApiSince=23)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setPlaybackParams", "(Landroid/media/PlaybackParams;)V", "GetSetPlaybackParams_Landroid_media_PlaybackParams_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.PlaybackParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the playback params, containing the current playback rate. -or- Sets playback rate using <c>PlaybackParams</c>PlaybackParams.</summary>
        <value>the playback params.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getPlaybackParams()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getPlaybackParams()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setPlaybackParams(android.media.PlaybackParams)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setPlaybackParams(android.media.PlaybackParams)</code>.</a>
            </format>
          </para>
          <format type="text/html">
            <a href="https://developer.android.com/reference/android/media/MediaPlayer#setPlaybackParams(android.media.PlaybackParams)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setPlaybackParams(android.media.PlaybackParams)</code>.</a>
          </format>
          <a href="https://developer.android.com/reference/android/media/MediaPlayer#setPlaybackParams(android.media.PlaybackParams)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setPlaybackParams(android.media.PlaybackParams)</code>.</a>Java documentation for <code>android.media.MediaPlayer.setPlaybackParams(android.media.PlaybackParams)</code>android.media.MediaPlayer.setPlaybackParams(android.media.PlaybackParams).<para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a>Android Open Source Project
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a>Creative Commons 2.5 Attribution License.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredDevice">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioDeviceInfo PreferredDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioDeviceInfo PreferredDevice" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.PreferredDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPreferredDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetPreferredDeviceHandler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioDeviceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the selected output specified by <c>#setPreferredDevice</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getPreferredDevice()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getPreferredDevice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public virtual void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.Prepare" />
      <MemberSignature Language="F#" Value="abstract member Prepare : unit -&gt; unit&#xA;override this.Prepare : unit -&gt; unit" Usage="mediaPlayer.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepare", "()V", "GetPrepareHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prepares the player for playback, synchronously.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#prepare()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.prepare()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state
</exception>
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="PrepareAsync">
      <MemberSignature Language="C#" Value="public virtual void PrepareAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.PrepareAsync" />
      <MemberSignature Language="F#" Value="abstract member PrepareAsync : unit -&gt; unit&#xA;override this.PrepareAsync : unit -&gt; unit" Usage="mediaPlayer.PrepareAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepareAsync", "()V", "GetPrepareAsyncHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prepares the player for playback, asynchronously.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#prepareAsync()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.prepareAsync()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state
</exception>
      </Docs>
    </Member>
    <Member MemberName="Prepared">
      <MemberSignature Language="C#" Value="public event EventHandler Prepared;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Prepared" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.Prepared" />
      <MemberSignature Language="F#" Value="member this.Prepared : EventHandler " Usage="member this.Prepared : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareDrm">
      <MemberSignature Language="C#" Value="public virtual void PrepareDrm (Java.Util.UUID uuid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PrepareDrm(class Java.Util.UUID uuid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.PrepareDrm(Java.Util.UUID)" />
      <MemberSignature Language="F#" Value="abstract member PrepareDrm : Java.Util.UUID -&gt; unit&#xA;override this.PrepareDrm : Java.Util.UUID -&gt; unit" Usage="mediaPlayer.PrepareDrm uuid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepareDrm", "(Ljava/util/UUID;)V", "GetPrepareDrm_Ljava_util_UUID_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uuid" Type="Java.Util.UUID" />
      </Parameters>
      <Docs>
        <param name="uuid">The UUID of the crypto scheme. If not known beforehand, it can be retrieved
            from the source through <c>getDrmInfo</c> or registering a <c>onDrmInfoListener</c>.</param>
        <summary>Prepares the DRM for the current source</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#prepareDrm(java.util.UUID)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.prepareDrm(java.util.UUID)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvideKeyResponse">
      <MemberSignature Language="C#" Value="public virtual byte[] ProvideKeyResponse (byte[] keySetId, byte[] response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance unsigned int8[] ProvideKeyResponse(unsigned int8[] keySetId, unsigned int8[] response) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.ProvideKeyResponse(System.Byte[],System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member ProvideKeyResponse : byte[] * byte[] -&gt; byte[]&#xA;override this.ProvideKeyResponse : byte[] * byte[] -&gt; byte[]" Usage="mediaPlayer.ProvideKeyResponse (keySetId, response)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("provideKeyResponse", "([B[B)[B", "GetProvideKeyResponse_arrayBarrayBHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keySetId" Type="System.Byte[]" />
        <Parameter Name="response" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keySetId">To be added.</param>
        <param name="response">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.Release" />
      <MemberSignature Language="F#" Value="abstract member Release : unit -&gt; unit&#xA;override this.Release : unit -&gt; unit" Usage="mediaPlayer.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("release", "()V", "GetReleaseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases resources associated with this MediaPlayer object.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#release()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseDrm">
      <MemberSignature Language="C#" Value="public virtual void ReleaseDrm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseDrm() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.ReleaseDrm" />
      <MemberSignature Language="F#" Value="abstract member ReleaseDrm : unit -&gt; unit&#xA;override this.ReleaseDrm : unit -&gt; unit" Usage="mediaPlayer.ReleaseDrm " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("releaseDrm", "()V", "GetReleaseDrmHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the DRM session</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#releaseDrm()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.releaseDrm()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnRoutingChangedListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveOnRoutingChangedListener (Android.Media.IAudioRoutingOnRoutingChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnRoutingChangedListener(class Android.Media.IAudioRoutingOnRoutingChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.RemoveOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;)V", "GetRemoveOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Handler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.IAudioRoutingOnRoutingChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">The previously added <c>AudioRouting.OnRoutingChangedListener</c> interface
            to remove.</param>
        <summary>Removes an <c>AudioRouting.OnRoutingChangedListener</c> which has been previously added
            to receive rerouting notifications.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.Reset" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="mediaPlayer.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets the MediaPlayer to its uninitialized state.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#reset()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.reset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RestoreKeys">
      <MemberSignature Language="C#" Value="public virtual void RestoreKeys (byte[] keySetId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RestoreKeys(unsigned int8[] keySetId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.RestoreKeys(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member RestoreKeys : byte[] -&gt; unit&#xA;override this.RestoreKeys : byte[] -&gt; unit" Usage="mediaPlayer.RestoreKeys keySetId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("restoreKeys", "([B)V", "GetRestoreKeys_arrayBHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keySetId" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keySetId">identifies the saved key set to restore</param>
        <summary>Restore persisted offline keys into a new session.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#restoreKeys(byte[])" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.restoreKeys(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutedDevice">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioDeviceInfo RoutedDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioDeviceInfo RoutedDevice" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.RoutedDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRoutedDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetRoutedDeviceHandler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioDeviceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an <c>AudioDeviceInfo</c> identifying the current routing of this MediaPlayer
            Note: The query is only valid if the MediaPlayer is currently playing.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getRoutedDevice()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getRoutedDevice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; RoutingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; RoutingChanged" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.RoutingChanged" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekComplete">
      <MemberSignature Language="C#" Value="public event EventHandler SeekComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SeekComplete" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.SeekComplete" />
      <MemberSignature Language="F#" Value="member this.SeekComplete : EventHandler " Usage="member this.SeekComplete : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekTo">
      <MemberSignature Language="C#" Value="public virtual void SeekTo (int msec);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SeekTo(int32 msec) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SeekTo(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SeekTo : int -&gt; unit&#xA;override this.SeekTo : int -&gt; unit" Usage="mediaPlayer.SeekTo msec" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("seekTo", "(I)V", "GetSeekTo_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msec" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="msec">the offset in milliseconds from the start to seek to</param>
        <summary>Seeks to specified time position.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#seekTo(int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.seekTo(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the internal player engine has not been
 initialized
</exception>
      </Docs>
    </Member>
    <Member MemberName="SeekTo">
      <MemberSignature Language="C#" Value="public virtual void SeekTo (long msec, Android.Media.MediaPlayerSeekMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SeekTo(int64 msec, valuetype Android.Media.MediaPlayerSeekMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SeekTo(System.Int64,Android.Media.MediaPlayerSeekMode)" />
      <MemberSignature Language="F#" Value="abstract member SeekTo : int64 * Android.Media.MediaPlayerSeekMode -&gt; unit&#xA;override this.SeekTo : int64 * Android.Media.MediaPlayerSeekMode -&gt; unit" Usage="mediaPlayer.SeekTo (msec, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("seekTo", "(JI)V", "GetSeekTo_JIHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msec" Type="System.Int64" />
        <Parameter Name="mode" Type="Android.Media.MediaPlayerSeekMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="msec">the offset in milliseconds from the start to seek to</param>
        <param name="mode">To be added.</param>
        <summary>Seeks to specified time position.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#seekTo(int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.seekTo(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectTrack">
      <MemberSignature Language="C#" Value="public virtual void SelectTrack (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SelectTrack(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SelectTrack(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SelectTrack : int -&gt; unit&#xA;override this.SelectTrack : int -&gt; unit" Usage="mediaPlayer.SelectTrack index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("selectTrack", "(I)V", "GetSelectTrack_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">the index of the track to be selected. The valid range of the index
            is 0..total number of track - 1. The total number of tracks as well as the type of
            each individual track can be found by calling <c>#getTrackInfo()</c> method.</param>
        <summary>Selects a track.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#selectTrack(int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.selectTrack(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException">if called in an invalid state.</exception>
        <altmember cref="M:Android.Media.MediaPlayer.GetTrackInfo" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioAttributes">
      <MemberSignature Language="C#" Value="public virtual void SetAudioAttributes (Android.Media.AudioAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioAttributes(class Android.Media.AudioAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetAudioAttributes(Android.Media.AudioAttributes)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioAttributes : Android.Media.AudioAttributes -&gt; unit&#xA;override this.SetAudioAttributes : Android.Media.AudioAttributes -&gt; unit" Usage="mediaPlayer.SetAudioAttributes attributes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioAttributes", "(Landroid/media/AudioAttributes;)V", "GetSetAudioAttributes_Landroid_media_AudioAttributes_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="Android.Media.AudioAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes">a non-null set of audio attributes</param>
        <summary>Sets the audio attributes for this MediaPlayer.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setAudioAttributes(android.media.AudioAttributes)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setAudioAttributes(android.media.AudioAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioStreamType">
      <MemberSignature Language="C#" Value="public virtual void SetAudioStreamType (Android.Media.Stream streamtype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioStreamType(valuetype Android.Media.Stream streamtype) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetAudioStreamType(Android.Media.Stream)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioStreamType : Android.Media.Stream -&gt; unit&#xA;override this.SetAudioStreamType : Android.Media.Stream -&gt; unit" Usage="mediaPlayer.SetAudioStreamType streamtype" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioStreamType", "(I)V", "GetSetAudioStreamType_IHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamtype" Type="Android.Media.Stream">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="streamtype">the audio stream type</param>
        <summary>Sets the audio stream type for this MediaPlayer.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setAudioStreamType(int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setAudioStreamType(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.Media.AudioManager" />
      </Docs>
    </Member>
    <Member MemberName="SetAuxEffectSendLevel">
      <MemberSignature Language="C#" Value="public virtual void SetAuxEffectSendLevel (float level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAuxEffectSendLevel(float32 level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetAuxEffectSendLevel(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetAuxEffectSendLevel : single -&gt; unit&#xA;override this.SetAuxEffectSendLevel : single -&gt; unit" Usage="mediaPlayer.SetAuxEffectSendLevel level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAuxEffectSendLevel", "(F)V", "GetSetAuxEffectSendLevel_FHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="level">send level scalar</param>
        <summary>Sets the send level of the player to the attached auxiliary effect.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setAuxEffectSendLevel(float)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setAuxEffectSendLevel(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public virtual void SetDataSource (Android.Content.Res.AssetFileDescriptor afd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDataSource(class Android.Content.Res.AssetFileDescriptor afd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSource(Android.Content.Res.AssetFileDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member SetDataSource : Android.Content.Res.AssetFileDescriptor -&gt; unit&#xA;override this.SetDataSource : Android.Content.Res.AssetFileDescriptor -&gt; unit" Usage="mediaPlayer.SetDataSource afd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataSource", "(Landroid/content/res/AssetFileDescriptor;)V", "GetSetDataSource_Landroid_content_res_AssetFileDescriptor_Handler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="afd" Type="Android.Content.Res.AssetFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="afd">To be added.</param>
        <summary>Sets the data source as a content Uri.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setDataSource(android.content.Context,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setDataSource(android.content.Context, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public virtual void SetDataSource (Android.Media.MediaDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDataSource(class Android.Media.MediaDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSource(Android.Media.MediaDataSource)" />
      <MemberSignature Language="F#" Value="abstract member SetDataSource : Android.Media.MediaDataSource -&gt; unit&#xA;override this.SetDataSource : Android.Media.MediaDataSource -&gt; unit" Usage="mediaPlayer.SetDataSource dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataSource", "(Landroid/media/MediaDataSource;)V", "GetSetDataSource_Landroid_media_MediaDataSource_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="Android.Media.MediaDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">To be added.</param>
        <summary>Sets the data source as a content Uri.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setDataSource(android.content.Context,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setDataSource(android.content.Context, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public virtual void SetDataSource (Java.IO.FileDescriptor fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDataSource(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSource(Java.IO.FileDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member SetDataSource : Java.IO.FileDescriptor -&gt; unit&#xA;override this.SetDataSource : Java.IO.FileDescriptor -&gt; unit" Usage="mediaPlayer.SetDataSource fd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataSource", "(Ljava/io/FileDescriptor;)V", "GetSetDataSource_Ljava_io_FileDescriptor_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">the FileDescriptor for the file you want to play</param>
        <summary>Sets the data source as a content Uri.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setDataSource(android.content.Context,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setDataSource(android.content.Context, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state
</exception>
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public virtual void SetDataSource (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDataSource(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSource(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetDataSource : string -&gt; unit&#xA;override this.SetDataSource : string -&gt; unit" Usage="mediaPlayer.SetDataSource path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataSource", "(Ljava/lang/String;)V", "GetSetDataSource_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">the path of the file, or the http/rtsp URL of the stream you want to play</param>
        <summary>Sets the data source as a content Uri.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setDataSource(android.content.Context,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setDataSource(android.content.Context, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state

 <para tool="javadoc-to-mdoc" />When <c>path</c> refers to a local file, the file may actually be opened by a
 process other than the calling application.  This implies that the pathname
 should be an absolute path (as any other process runs with unspecified current working
 directory), and that the pathname should reference a world-readable file.
 As an alternative, the application could first open the file for reading,
 and then use the file descriptor form <see cref="M:Android.Media.MediaPlayer.SetDataSource(Java.IO.FileDescriptor)" />.
</exception>
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
        <exception cref="T:Java.Lang.SecurityException" />
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public virtual void SetDataSource (Android.Content.Context context, Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDataSource(class Android.Content.Context context, class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSource(Android.Content.Context,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="abstract member SetDataSource : Android.Content.Context * Android.Net.Uri -&gt; unit&#xA;override this.SetDataSource : Android.Content.Context * Android.Net.Uri -&gt; unit" Usage="mediaPlayer.SetDataSource (context, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataSource", "(Landroid/content/Context;Landroid/net/Uri;)V", "GetSetDataSource_Landroid_content_Context_Landroid_net_Uri_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="context">the Context to use when resolving the Uri</param>
        <param name="uri">the Content URI of the data you want to play</param>
        <summary>Sets the data source as a content Uri.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setDataSource(android.content.Context,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setDataSource(android.content.Context, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state
</exception>
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
        <exception cref="T:Java.Lang.SecurityException" />
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public virtual void SetDataSource (Android.Content.Context context, Android.Net.Uri uri, System.Collections.Generic.IDictionary&lt;string,string&gt; headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDataSource(class Android.Content.Context context, class Android.Net.Uri uri, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSource(Android.Content.Context,Android.Net.Uri,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="F#" Value="abstract member SetDataSource : Android.Content.Context * Android.Net.Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit&#xA;override this.SetDataSource : Android.Content.Context * Android.Net.Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; unit" Usage="mediaPlayer.SetDataSource (context, uri, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataSource", "(Landroid/content/Context;Landroid/net/Uri;Ljava/util/Map;)V", "GetSetDataSource_Landroid_content_Context_Landroid_net_Uri_Ljava_util_Map_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="headers" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="context">the Context to use when resolving the Uri</param>
        <param name="uri">the Content URI of the data you want to play</param>
        <param name="headers">To be added.</param>
        <summary>Sets the data source as a content Uri.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setDataSource(android.content.Context,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setDataSource(android.content.Context, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public virtual void SetDataSource (Java.IO.FileDescriptor fd, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDataSource(class Java.IO.FileDescriptor fd, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSource(Java.IO.FileDescriptor,System.Int64,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetDataSource : Java.IO.FileDescriptor * int64 * int64 -&gt; unit&#xA;override this.SetDataSource : Java.IO.FileDescriptor * int64 * int64 -&gt; unit" Usage="mediaPlayer.SetDataSource (fd, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataSource", "(Ljava/io/FileDescriptor;JJ)V", "GetSetDataSource_Ljava_io_FileDescriptor_JJHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fd">the FileDescriptor for the file you want to play</param>
        <param name="offset">the offset into the file where the data to be played starts, in bytes</param>
        <param name="length">the length in bytes of the data to be played</param>
        <summary>Sets the data source as a content Uri.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setDataSource(android.content.Context,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setDataSource(android.content.Context, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state
</exception>
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public virtual void SetDataSource (Android.Content.Context context, Android.Net.Uri uri, System.Collections.Generic.IDictionary&lt;string,string&gt; headers, System.Collections.Generic.IList&lt;Java.Net.HttpCookie&gt; cookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDataSource(class Android.Content.Context context, class Android.Net.Uri uri, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; headers, class System.Collections.Generic.IList`1&lt;class Java.Net.HttpCookie&gt; cookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSource(Android.Content.Context,Android.Net.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Java.Net.HttpCookie})" />
      <MemberSignature Language="F#" Value="abstract member SetDataSource : Android.Content.Context * Android.Net.Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IList&lt;Java.Net.HttpCookie&gt; -&gt; unit&#xA;override this.SetDataSource : Android.Content.Context * Android.Net.Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IList&lt;Java.Net.HttpCookie&gt; -&gt; unit" Usage="mediaPlayer.SetDataSource (context, uri, headers, cookies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataSource", "(Landroid/content/Context;Landroid/net/Uri;Ljava/util/Map;Ljava/util/List;)V", "GetSetDataSource_Landroid_content_Context_Landroid_net_Uri_Ljava_util_Map_Ljava_util_List_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="headers" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cookies" Type="System.Collections.Generic.IList&lt;Java.Net.HttpCookie&gt;" />
      </Parameters>
      <Docs>
        <param name="context">the Context to use when resolving the Uri</param>
        <param name="uri">the Content URI of the data you want to play</param>
        <param name="headers">To be added.</param>
        <param name="cookies">To be added.</param>
        <summary>Sets the data source as a content Uri.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setDataSource(android.content.Context,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setDataSource(android.content.Context, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSourceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDataSourceAsync (Android.Content.Res.AssetFileDescriptor afd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDataSourceAsync(class Android.Content.Res.AssetFileDescriptor afd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSourceAsync(Android.Content.Res.AssetFileDescriptor)" />
      <MemberSignature Language="F#" Value="member this.SetDataSourceAsync : Android.Content.Res.AssetFileDescriptor -&gt; System.Threading.Tasks.Task" Usage="mediaPlayer.SetDataSourceAsync afd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="afd" Type="Android.Content.Res.AssetFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="afd">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSourceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDataSourceAsync (Android.Media.MediaDataSource dataSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDataSourceAsync(class Android.Media.MediaDataSource dataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSourceAsync(Android.Media.MediaDataSource)" />
      <MemberSignature Language="F#" Value="member this.SetDataSourceAsync : Android.Media.MediaDataSource -&gt; System.Threading.Tasks.Task" Usage="mediaPlayer.SetDataSourceAsync dataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="Android.Media.MediaDataSource" />
      </Parameters>
      <Docs>
        <param name="dataSource">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSourceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDataSourceAsync (Java.IO.FileDescriptor fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDataSourceAsync(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSourceAsync(Java.IO.FileDescriptor)" />
      <MemberSignature Language="F#" Value="member this.SetDataSourceAsync : Java.IO.FileDescriptor -&gt; System.Threading.Tasks.Task" Usage="mediaPlayer.SetDataSourceAsync fd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSourceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDataSourceAsync (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDataSourceAsync(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSourceAsync(System.String)" />
      <MemberSignature Language="F#" Value="member this.SetDataSourceAsync : string -&gt; System.Threading.Tasks.Task" Usage="mediaPlayer.SetDataSourceAsync path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSourceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDataSourceAsync (Android.Content.Context context, Android.Net.Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDataSourceAsync(class Android.Content.Context context, class Android.Net.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSourceAsync(Android.Content.Context,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="member this.SetDataSourceAsync : Android.Content.Context * Android.Net.Uri -&gt; System.Threading.Tasks.Task" Usage="mediaPlayer.SetDataSourceAsync (context, uri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="uri">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSourceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDataSourceAsync (Android.Content.Context context, Android.Net.Uri uri, System.Collections.Generic.IDictionary&lt;string,string&gt; headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDataSourceAsync(class Android.Content.Context context, class Android.Net.Uri uri, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; headers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSourceAsync(Android.Content.Context,Android.Net.Uri,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="F#" Value="member this.SetDataSourceAsync : Android.Content.Context * Android.Net.Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; -&gt; System.Threading.Tasks.Task" Usage="mediaPlayer.SetDataSourceAsync (context, uri, headers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="headers" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="uri">To be added.</param>
        <param name="headers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSourceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDataSourceAsync (Java.IO.FileDescriptor fd, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDataSourceAsync(class Java.IO.FileDescriptor fd, int64 offset, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSourceAsync(Java.IO.FileDescriptor,System.Int64,System.Int64)" />
      <MemberSignature Language="F#" Value="member this.SetDataSourceAsync : Java.IO.FileDescriptor * int64 * int64 -&gt; System.Threading.Tasks.Task" Usage="mediaPlayer.SetDataSourceAsync (fd, offset, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fd">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSourceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDataSourceAsync (Android.Content.Context context, Android.Net.Uri uri, System.Collections.Generic.IDictionary&lt;string,string&gt; headers, System.Collections.Generic.IList&lt;Java.Net.HttpCookie&gt; cookies);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDataSourceAsync(class Android.Content.Context context, class Android.Net.Uri uri, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; headers, class System.Collections.Generic.IList`1&lt;class Java.Net.HttpCookie&gt; cookies) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDataSourceAsync(Android.Content.Context,Android.Net.Uri,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IList{Java.Net.HttpCookie})" />
      <MemberSignature Language="F#" Value="member this.SetDataSourceAsync : Android.Content.Context * Android.Net.Uri * System.Collections.Generic.IDictionary&lt;string, string&gt; * System.Collections.Generic.IList&lt;Java.Net.HttpCookie&gt; -&gt; System.Threading.Tasks.Task" Usage="mediaPlayer.SetDataSourceAsync (context, uri, headers, cookies)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="headers" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="cookies" Type="System.Collections.Generic.IList&lt;Java.Net.HttpCookie&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="uri">To be added.</param>
        <param name="headers">To be added.</param>
        <param name="cookies">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDisplay">
      <MemberSignature Language="C#" Value="public virtual void SetDisplay (Android.Views.ISurfaceHolder sh);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDisplay(class Android.Views.ISurfaceHolder sh) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDisplay(Android.Views.ISurfaceHolder)" />
      <MemberSignature Language="F#" Value="abstract member SetDisplay : Android.Views.ISurfaceHolder -&gt; unit&#xA;override this.SetDisplay : Android.Views.ISurfaceHolder -&gt; unit" Usage="mediaPlayer.SetDisplay sh" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDisplay", "(Landroid/view/SurfaceHolder;)V", "GetSetDisplay_Landroid_view_SurfaceHolder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sh" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="sh">the SurfaceHolder to use for video display</param>
        <summary>Sets the <c>SurfaceHolder</c> to use for displaying the video
            portion of the media.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setDisplay(android.view.SurfaceHolder)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setDisplay(android.view.SurfaceHolder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetDrmPropertyString">
      <MemberSignature Language="C#" Value="public virtual void SetDrmPropertyString (string propertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDrmPropertyString(string propertyName, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetDrmPropertyString(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetDrmPropertyString : string * string -&gt; unit&#xA;override this.SetDrmPropertyString : string * string -&gt; unit" Usage="mediaPlayer.SetDrmPropertyString (propertyName, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDrmPropertyString", "(Ljava/lang/String;Ljava/lang/String;)V", "GetSetDrmPropertyString_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.StringDef(Fields=new System.String[] { "PropertyVendor", "PropertyVersion", "PropertyDescription", "PropertyAlgorithms" }, Type="Android.Media.MediaDrm")</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">the property name</param>
        <param name="value">the property value
            
            Standard fields names are:
            <c>MediaDrm#PROPERTY_VENDOR</c>, <c>MediaDrm#PROPERTY_VERSION</c>,
            <c>MediaDrm#PROPERTY_DESCRIPTION</c>, <c>MediaDrm#PROPERTY_ALGORITHMS</c></param>
        <summary>Set a DRM engine plugin String property value.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setDrmPropertyString(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setDrmPropertyString(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNextMediaPlayer">
      <MemberSignature Language="C#" Value="public virtual void SetNextMediaPlayer (Android.Media.MediaPlayer next);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNextMediaPlayer(class Android.Media.MediaPlayer next) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetNextMediaPlayer(Android.Media.MediaPlayer)" />
      <MemberSignature Language="F#" Value="abstract member SetNextMediaPlayer : Android.Media.MediaPlayer -&gt; unit&#xA;override this.SetNextMediaPlayer : Android.Media.MediaPlayer -&gt; unit" Usage="mediaPlayer.SetNextMediaPlayer next" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNextMediaPlayer", "(Landroid/media/MediaPlayer;)V", "GetSetNextMediaPlayer_Landroid_media_MediaPlayer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="next" Type="Android.Media.MediaPlayer" />
      </Parameters>
      <Docs>
        <param name="next">the player to start after this one completes playback.</param>
        <summary>Set the MediaPlayer to start when this MediaPlayer finishes playback
            (i.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setNextMediaPlayer(android.media.MediaPlayer)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setNextMediaPlayer(android.media.MediaPlayer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetOnBufferingUpdateListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnBufferingUpdateListener (Android.Media.MediaPlayer.IOnBufferingUpdateListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnBufferingUpdateListener(class Android.Media.MediaPlayer/IOnBufferingUpdateListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnBufferingUpdateListener(Android.Media.MediaPlayer.IOnBufferingUpdateListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnBufferingUpdateListener : Android.Media.MediaPlayer.IOnBufferingUpdateListener -&gt; unit&#xA;override this.SetOnBufferingUpdateListener : Android.Media.MediaPlayer.IOnBufferingUpdateListener -&gt; unit" Usage="mediaPlayer.SetOnBufferingUpdateListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnBufferingUpdateListener", "(Landroid/media/MediaPlayer$OnBufferingUpdateListener;)V", "GetSetOnBufferingUpdateListener_Landroid_media_MediaPlayer_OnBufferingUpdateListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnBufferingUpdateListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run.</param>
        <summary>Register a callback to be invoked when the status of a network
            stream's buffer has changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnBufferingUpdateListener(android.media.OnBufferingUpdateListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnBufferingUpdateListener(android.media.OnBufferingUpdateListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetOnCompletionListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnCompletionListener (Android.Media.MediaPlayer.IOnCompletionListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnCompletionListener(class Android.Media.MediaPlayer/IOnCompletionListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnCompletionListener(Android.Media.MediaPlayer.IOnCompletionListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnCompletionListener : Android.Media.MediaPlayer.IOnCompletionListener -&gt; unit&#xA;override this.SetOnCompletionListener : Android.Media.MediaPlayer.IOnCompletionListener -&gt; unit" Usage="mediaPlayer.SetOnCompletionListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnCompletionListener", "(Landroid/media/MediaPlayer$OnCompletionListener;)V", "GetSetOnCompletionListener_Landroid_media_MediaPlayer_OnCompletionListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnCompletionListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <summary>Register a callback to be invoked when the end of a media source
            has been reached during playback.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnCompletionListener(android.media.OnCompletionListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnCompletionListener(android.media.OnCompletionListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetOnDrmConfigHelper">
      <MemberSignature Language="C#" Value="public virtual void SetOnDrmConfigHelper (Android.Media.MediaPlayer.IOnDrmConfigHelper listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnDrmConfigHelper(class Android.Media.MediaPlayer/IOnDrmConfigHelper listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnDrmConfigHelper(Android.Media.MediaPlayer.IOnDrmConfigHelper)" />
      <MemberSignature Language="F#" Value="abstract member SetOnDrmConfigHelper : Android.Media.MediaPlayer.IOnDrmConfigHelper -&gt; unit&#xA;override this.SetOnDrmConfigHelper : Android.Media.MediaPlayer.IOnDrmConfigHelper -&gt; unit" Usage="mediaPlayer.SetOnDrmConfigHelper listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnDrmConfigHelper", "(Landroid/media/MediaPlayer$OnDrmConfigHelper;)V", "GetSetOnDrmConfigHelper_Landroid_media_MediaPlayer_OnDrmConfigHelper_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnDrmConfigHelper" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <summary>Register a callback to be invoked for configuration of the DRM object before
            the session is created.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnDrmConfigHelper(android.media.OnDrmConfigHelper)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnDrmConfigHelper(android.media.OnDrmConfigHelper)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnDrmInfoListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnDrmInfoListener (Android.Media.MediaPlayer.IOnDrmInfoListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnDrmInfoListener(class Android.Media.MediaPlayer/IOnDrmInfoListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnDrmInfoListener(Android.Media.MediaPlayer.IOnDrmInfoListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnDrmInfoListener : Android.Media.MediaPlayer.IOnDrmInfoListener -&gt; unit&#xA;override this.SetOnDrmInfoListener : Android.Media.MediaPlayer.IOnDrmInfoListener -&gt; unit" Usage="mediaPlayer.SetOnDrmInfoListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnDrmInfoListener", "(Landroid/media/MediaPlayer$OnDrmInfoListener;)V", "GetSetOnDrmInfoListener_Landroid_media_MediaPlayer_OnDrmInfoListener_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnDrmInfoListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <summary>Register a callback to be invoked when the DRM info is
            known.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnDrmInfoListener(android.media.OnDrmInfoListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnDrmInfoListener(android.media.OnDrmInfoListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnDrmInfoListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnDrmInfoListener (Android.Media.MediaPlayer.IOnDrmInfoListener listener, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnDrmInfoListener(class Android.Media.MediaPlayer/IOnDrmInfoListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnDrmInfoListener(Android.Media.MediaPlayer.IOnDrmInfoListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member SetOnDrmInfoListener : Android.Media.MediaPlayer.IOnDrmInfoListener * Android.OS.Handler -&gt; unit&#xA;override this.SetOnDrmInfoListener : Android.Media.MediaPlayer.IOnDrmInfoListener * Android.OS.Handler -&gt; unit" Usage="mediaPlayer.SetOnDrmInfoListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnDrmInfoListener", "(Landroid/media/MediaPlayer$OnDrmInfoListener;Landroid/os/Handler;)V", "GetSetOnDrmInfoListener_Landroid_media_MediaPlayer_OnDrmInfoListener_Landroid_os_Handler_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnDrmInfoListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <param name="handler">To be added.</param>
        <summary>Register a callback to be invoked when the DRM info is
            known.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnDrmInfoListener(android.media.OnDrmInfoListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnDrmInfoListener(android.media.OnDrmInfoListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnDrmPreparedListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnDrmPreparedListener (Android.Media.MediaPlayer.IOnDrmPreparedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnDrmPreparedListener(class Android.Media.MediaPlayer/IOnDrmPreparedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnDrmPreparedListener(Android.Media.MediaPlayer.IOnDrmPreparedListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnDrmPreparedListener : Android.Media.MediaPlayer.IOnDrmPreparedListener -&gt; unit&#xA;override this.SetOnDrmPreparedListener : Android.Media.MediaPlayer.IOnDrmPreparedListener -&gt; unit" Usage="mediaPlayer.SetOnDrmPreparedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnDrmPreparedListener", "(Landroid/media/MediaPlayer$OnDrmPreparedListener;)V", "GetSetOnDrmPreparedListener_Landroid_media_MediaPlayer_OnDrmPreparedListener_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnDrmPreparedListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <summary>Register a callback to be invoked when the DRM object is prepared.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnDrmPreparedListener(android.media.OnDrmPreparedListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnDrmPreparedListener(android.media.OnDrmPreparedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnDrmPreparedListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnDrmPreparedListener (Android.Media.MediaPlayer.IOnDrmPreparedListener listener, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnDrmPreparedListener(class Android.Media.MediaPlayer/IOnDrmPreparedListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnDrmPreparedListener(Android.Media.MediaPlayer.IOnDrmPreparedListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member SetOnDrmPreparedListener : Android.Media.MediaPlayer.IOnDrmPreparedListener * Android.OS.Handler -&gt; unit&#xA;override this.SetOnDrmPreparedListener : Android.Media.MediaPlayer.IOnDrmPreparedListener * Android.OS.Handler -&gt; unit" Usage="mediaPlayer.SetOnDrmPreparedListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnDrmPreparedListener", "(Landroid/media/MediaPlayer$OnDrmPreparedListener;Landroid/os/Handler;)V", "GetSetOnDrmPreparedListener_Landroid_media_MediaPlayer_OnDrmPreparedListener_Landroid_os_Handler_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnDrmPreparedListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <param name="handler">To be added.</param>
        <summary>Register a callback to be invoked when the DRM object is prepared.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnDrmPreparedListener(android.media.OnDrmPreparedListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnDrmPreparedListener(android.media.OnDrmPreparedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnErrorListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnErrorListener (Android.Media.MediaPlayer.IOnErrorListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnErrorListener(class Android.Media.MediaPlayer/IOnErrorListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnErrorListener(Android.Media.MediaPlayer.IOnErrorListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnErrorListener : Android.Media.MediaPlayer.IOnErrorListener -&gt; unit&#xA;override this.SetOnErrorListener : Android.Media.MediaPlayer.IOnErrorListener -&gt; unit" Usage="mediaPlayer.SetOnErrorListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnErrorListener", "(Landroid/media/MediaPlayer$OnErrorListener;)V", "GetSetOnErrorListener_Landroid_media_MediaPlayer_OnErrorListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnErrorListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <summary>Register a callback to be invoked when an error has happened
            during an asynchronous operation.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnErrorListener(android.media.OnErrorListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnErrorListener(android.media.OnErrorListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetOnInfoListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnInfoListener (Android.Media.MediaPlayer.IOnInfoListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnInfoListener(class Android.Media.MediaPlayer/IOnInfoListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnInfoListener(Android.Media.MediaPlayer.IOnInfoListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnInfoListener : Android.Media.MediaPlayer.IOnInfoListener -&gt; unit&#xA;override this.SetOnInfoListener : Android.Media.MediaPlayer.IOnInfoListener -&gt; unit" Usage="mediaPlayer.SetOnInfoListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnInfoListener", "(Landroid/media/MediaPlayer$OnInfoListener;)V", "GetSetOnInfoListener_Landroid_media_MediaPlayer_OnInfoListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnInfoListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <summary>Register a callback to be invoked when an info/warning is available.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnInfoListener(android.media.OnInfoListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnInfoListener(android.media.OnInfoListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetOnMediaTimeDiscontinuityListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnMediaTimeDiscontinuityListener (Android.Media.MediaPlayer.IOnMediaTimeDiscontinuityListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnMediaTimeDiscontinuityListener(class Android.Media.MediaPlayer/IOnMediaTimeDiscontinuityListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnMediaTimeDiscontinuityListener(Android.Media.MediaPlayer.IOnMediaTimeDiscontinuityListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnMediaTimeDiscontinuityListener", "(Landroid/media/MediaPlayer$OnMediaTimeDiscontinuityListener;)V", "GetSetOnMediaTimeDiscontinuityListener_Landroid_media_MediaPlayer_OnMediaTimeDiscontinuityListener_Handler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnMediaTimeDiscontinuityListener" />
      </Parameters>
      <Docs>
        <param name="listener">the listener called after a discontinuity</param>
        <summary>Sets the listener to be invoked when a media time discontinuity is encountered.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnMediaTimeDiscontinuityListener(android.media.OnMediaTimeDiscontinuityListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnMediaTimeDiscontinuityListener(android.media.OnMediaTimeDiscontinuityListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnMediaTimeDiscontinuityListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnMediaTimeDiscontinuityListener (Android.Media.MediaPlayer.IOnMediaTimeDiscontinuityListener listener, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnMediaTimeDiscontinuityListener(class Android.Media.MediaPlayer/IOnMediaTimeDiscontinuityListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnMediaTimeDiscontinuityListener(Android.Media.MediaPlayer.IOnMediaTimeDiscontinuityListener,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnMediaTimeDiscontinuityListener", "(Landroid/media/MediaPlayer$OnMediaTimeDiscontinuityListener;Landroid/os/Handler;)V", "GetSetOnMediaTimeDiscontinuityListener_Landroid_media_MediaPlayer_OnMediaTimeDiscontinuityListener_Landroid_os_Handler_Handler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnMediaTimeDiscontinuityListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">the listener called after a discontinuity</param>
        <param name="handler">To be added.</param>
        <summary>Sets the listener to be invoked when a media time discontinuity is encountered.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnMediaTimeDiscontinuityListener(android.media.OnMediaTimeDiscontinuityListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnMediaTimeDiscontinuityListener(android.media.OnMediaTimeDiscontinuityListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnPreparedListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnPreparedListener (Android.Media.MediaPlayer.IOnPreparedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnPreparedListener(class Android.Media.MediaPlayer/IOnPreparedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnPreparedListener(Android.Media.MediaPlayer.IOnPreparedListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnPreparedListener : Android.Media.MediaPlayer.IOnPreparedListener -&gt; unit&#xA;override this.SetOnPreparedListener : Android.Media.MediaPlayer.IOnPreparedListener -&gt; unit" Usage="mediaPlayer.SetOnPreparedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnPreparedListener", "(Landroid/media/MediaPlayer$OnPreparedListener;)V", "GetSetOnPreparedListener_Landroid_media_MediaPlayer_OnPreparedListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnPreparedListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <summary>Register a callback to be invoked when the media source is ready
            for playback.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnPreparedListener(android.media.OnPreparedListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnPreparedListener(android.media.OnPreparedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetOnSeekCompleteListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnSeekCompleteListener (Android.Media.MediaPlayer.IOnSeekCompleteListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnSeekCompleteListener(class Android.Media.MediaPlayer/IOnSeekCompleteListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnSeekCompleteListener(Android.Media.MediaPlayer.IOnSeekCompleteListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnSeekCompleteListener : Android.Media.MediaPlayer.IOnSeekCompleteListener -&gt; unit&#xA;override this.SetOnSeekCompleteListener : Android.Media.MediaPlayer.IOnSeekCompleteListener -&gt; unit" Usage="mediaPlayer.SetOnSeekCompleteListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnSeekCompleteListener", "(Landroid/media/MediaPlayer$OnSeekCompleteListener;)V", "GetSetOnSeekCompleteListener_Landroid_media_MediaPlayer_OnSeekCompleteListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnSeekCompleteListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <summary>Register a callback to be invoked when a seek operation has been
            completed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnSeekCompleteListener(android.media.OnSeekCompleteListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnSeekCompleteListener(android.media.OnSeekCompleteListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetOnSubtitleDataListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnSubtitleDataListener (Android.Media.MediaPlayer.IOnSubtitleDataListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnSubtitleDataListener(class Android.Media.MediaPlayer/IOnSubtitleDataListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnSubtitleDataListener(Android.Media.MediaPlayer.IOnSubtitleDataListener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnSubtitleDataListener", "(Landroid/media/MediaPlayer$OnSubtitleDataListener;)V", "GetSetOnSubtitleDataListener_Landroid_media_MediaPlayer_OnSubtitleDataListener_Handler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnSubtitleDataListener" />
      </Parameters>
      <Docs>
        <param name="listener">the listener called when new data is available</param>
        <summary>Sets the listener to be invoked when a subtitle track has new data available.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnSubtitleDataListener(android.media.OnSubtitleDataListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnSubtitleDataListener(android.media.OnSubtitleDataListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnSubtitleDataListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnSubtitleDataListener (Android.Media.MediaPlayer.IOnSubtitleDataListener listener, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnSubtitleDataListener(class Android.Media.MediaPlayer/IOnSubtitleDataListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnSubtitleDataListener(Android.Media.MediaPlayer.IOnSubtitleDataListener,Android.OS.Handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnSubtitleDataListener", "(Landroid/media/MediaPlayer$OnSubtitleDataListener;Landroid/os/Handler;)V", "GetSetOnSubtitleDataListener_Landroid_media_MediaPlayer_OnSubtitleDataListener_Landroid_os_Handler_Handler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnSubtitleDataListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">the listener called when new data is available</param>
        <param name="handler">To be added.</param>
        <summary>Sets the listener to be invoked when a subtitle track has new data available.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnSubtitleDataListener(android.media.OnSubtitleDataListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnSubtitleDataListener(android.media.OnSubtitleDataListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnTimedMetaDataAvailableListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnTimedMetaDataAvailableListener (Android.Media.MediaPlayer.IOnTimedMetaDataAvailableListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnTimedMetaDataAvailableListener(class Android.Media.MediaPlayer/IOnTimedMetaDataAvailableListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnTimedMetaDataAvailableListener(Android.Media.MediaPlayer.IOnTimedMetaDataAvailableListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnTimedMetaDataAvailableListener : Android.Media.MediaPlayer.IOnTimedMetaDataAvailableListener -&gt; unit&#xA;override this.SetOnTimedMetaDataAvailableListener : Android.Media.MediaPlayer.IOnTimedMetaDataAvailableListener -&gt; unit" Usage="mediaPlayer.SetOnTimedMetaDataAvailableListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnTimedMetaDataAvailableListener", "(Landroid/media/MediaPlayer$OnTimedMetaDataAvailableListener;)V", "GetSetOnTimedMetaDataAvailableListener_Landroid_media_MediaPlayer_OnTimedMetaDataAvailableListener_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnTimedMetaDataAvailableListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <summary>Register a callback to be invoked when a selected track has timed metadata available.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnTimedMetaDataAvailableListener(android.media.OnTimedMetaDataAvailableListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnTimedMetaDataAvailableListener(android.media.OnTimedMetaDataAvailableListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnTimedTextListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnTimedTextListener (Android.Media.MediaPlayer.IOnTimedTextListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnTimedTextListener(class Android.Media.MediaPlayer/IOnTimedTextListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnTimedTextListener(Android.Media.MediaPlayer.IOnTimedTextListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnTimedTextListener : Android.Media.MediaPlayer.IOnTimedTextListener -&gt; unit&#xA;override this.SetOnTimedTextListener : Android.Media.MediaPlayer.IOnTimedTextListener -&gt; unit" Usage="mediaPlayer.SetOnTimedTextListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnTimedTextListener", "(Landroid/media/MediaPlayer$OnTimedTextListener;)V", "GetSetOnTimedTextListener_Landroid_media_MediaPlayer_OnTimedTextListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnTimedTextListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <summary>Register a callback to be invoked when a timed text is available
            for display.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnTimedTextListener(android.media.OnTimedTextListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnTimedTextListener(android.media.OnTimedTextListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetOnVideoSizeChangedListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnVideoSizeChangedListener (Android.Media.MediaPlayer.IOnVideoSizeChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnVideoSizeChangedListener(class Android.Media.MediaPlayer/IOnVideoSizeChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetOnVideoSizeChangedListener(Android.Media.MediaPlayer.IOnVideoSizeChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnVideoSizeChangedListener : Android.Media.MediaPlayer.IOnVideoSizeChangedListener -&gt; unit&#xA;override this.SetOnVideoSizeChangedListener : Android.Media.MediaPlayer.IOnVideoSizeChangedListener -&gt; unit" Usage="mediaPlayer.SetOnVideoSizeChangedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnVideoSizeChangedListener", "(Landroid/media/MediaPlayer$OnVideoSizeChangedListener;)V", "GetSetOnVideoSizeChangedListener_Landroid_media_MediaPlayer_OnVideoSizeChangedListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaPlayer+IOnVideoSizeChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <summary>Register a callback to be invoked when the video size is
            known or updated.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setOnVideoSizeChangedListener(android.media.OnVideoSizeChangedListener)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setOnVideoSizeChangedListener(android.media.OnVideoSizeChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPreferredDevice">
      <MemberSignature Language="C#" Value="public virtual bool SetPreferredDevice (Android.Media.AudioDeviceInfo deviceInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPreferredDevice(class Android.Media.AudioDeviceInfo deviceInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetPreferredDevice(Android.Media.AudioDeviceInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPreferredDevice", "(Landroid/media/AudioDeviceInfo;)Z", "GetSetPreferredDevice_Landroid_media_AudioDeviceInfo_Handler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceInfo" Type="Android.Media.AudioDeviceInfo" />
      </Parameters>
      <Docs>
        <param name="deviceInfo">The <c>AudioDeviceInfo</c> specifying the audio sink or source.
             If deviceInfo is null, default routing is restored.</param>
        <summary>Specifies an audio device (via an <c>AudioDeviceInfo</c> object) to route
            the output from this MediaPlayer.</summary>
        <returns>true if succesful, false if the specified <c>AudioDeviceInfo</c> is non-null and
            does not correspond to a valid audio device.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setPreferredDevice(android.media.AudioDeviceInfo)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setPreferredDevice(android.media.AudioDeviceInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScreenOnWhilePlaying">
      <MemberSignature Language="C#" Value="public virtual void SetScreenOnWhilePlaying (bool screenOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScreenOnWhilePlaying(bool screenOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetScreenOnWhilePlaying(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetScreenOnWhilePlaying : bool -&gt; unit&#xA;override this.SetScreenOnWhilePlaying : bool -&gt; unit" Usage="mediaPlayer.SetScreenOnWhilePlaying screenOn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setScreenOnWhilePlaying", "(Z)V", "GetSetScreenOnWhilePlaying_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="screenOn" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="screenOn">Supply true to keep the screen on, false to allow it
            to turn off.</param>
        <summary>Control whether we should use the attached SurfaceHolder to keep the
            screen on while video playback is occurring.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setScreenOnWhilePlaying(boolean)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setScreenOnWhilePlaying(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSurface">
      <MemberSignature Language="C#" Value="public virtual void SetSurface (Android.Views.Surface surface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSurface(class Android.Views.Surface surface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetSurface(Android.Views.Surface)" />
      <MemberSignature Language="F#" Value="abstract member SetSurface : Android.Views.Surface -&gt; unit&#xA;override this.SetSurface : Android.Views.Surface -&gt; unit" Usage="mediaPlayer.SetSurface surface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setSurface", "(Landroid/view/Surface;)V", "GetSetSurface_Landroid_view_Surface_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Views.Surface" />
      </Parameters>
      <Docs>
        <param name="surface">The <c>Surface</c> to be used for the video portion of
            the media.</param>
        <summary>Sets the <c>Surface</c> to be used as the sink for the video portion of
            the media.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setSurface(android.view.Surface)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setSurface(android.view.Surface)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetVideoScalingMode">
      <MemberSignature Language="C#" Value="public virtual void SetVideoScalingMode (Android.Media.VideoScalingMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoScalingMode(valuetype Android.Media.VideoScalingMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetVideoScalingMode(Android.Media.VideoScalingMode)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoScalingMode : Android.Media.VideoScalingMode -&gt; unit&#xA;override this.SetVideoScalingMode : Android.Media.VideoScalingMode -&gt; unit" Usage="mediaPlayer.SetVideoScalingMode mode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVideoScalingMode", "(I)V", "GetSetVideoScalingMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Media.VideoScalingMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">target video scaling mode. Must be one of the supported
            video scaling modes; otherwise, IllegalArgumentException will be thrown.</param>
        <summary>Sets video scaling mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setVideoScalingMode(int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setVideoScalingMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="F:Android.Media.MediaPlayer.VideoScalingModeScaleToFit" />
        <altmember cref="F:Android.Media.MediaPlayer.VideoScalingModeScaleToFitWithCropping" />
      </Docs>
    </Member>
    <Member MemberName="SetVolume">
      <MemberSignature Language="C#" Value="public virtual void SetVolume (float leftVolume, float rightVolume);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVolume(float32 leftVolume, float32 rightVolume) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetVolume(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetVolume : single * single -&gt; unit&#xA;override this.SetVolume : single * single -&gt; unit" Usage="mediaPlayer.SetVolume (leftVolume, rightVolume)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVolume", "(FF)V", "GetSetVolume_FFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftVolume" Type="System.Single" />
        <Parameter Name="rightVolume" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="leftVolume">left volume scalar</param>
        <param name="rightVolume">right volume scalar
</param>
        <summary>Sets the volume on this player.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetWakeMode">
      <MemberSignature Language="C#" Value="public virtual void SetWakeMode (Android.Content.Context context, Android.OS.WakeLockFlags mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWakeMode(class Android.Content.Context context, valuetype Android.OS.WakeLockFlags mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.SetWakeMode(Android.Content.Context,Android.OS.WakeLockFlags)" />
      <MemberSignature Language="F#" Value="abstract member SetWakeMode : Android.Content.Context * Android.OS.WakeLockFlags -&gt; unit&#xA;override this.SetWakeMode : Android.Content.Context * Android.OS.WakeLockFlags -&gt; unit" Usage="mediaPlayer.SetWakeMode (context, mode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setWakeMode", "(Landroid/content/Context;I)V", "GetSetWakeMode_Landroid_content_Context_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="mode" Type="Android.OS.WakeLockFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">the Context to use</param>
        <param name="mode">the power/wake mode to set</param>
        <summary>Set the low-level power management behavior for this MediaPlayer.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setWakeMode(android.content.Context,%20int)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setWakeMode(android.content.Context, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="T:Android.OS.PowerManager" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.Start" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="mediaPlayer.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("start", "()V", "GetStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts or resumes playback.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#start()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.start()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called in an invalid state
</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.Stop" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="mediaPlayer.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stop", "()V", "GetStopHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops playback after playback has been started or paused.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#stop()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.stop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the internal player engine has not been
 initialized.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SubtitleData">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaPlayer.SubtitleDataEventArgs&gt; SubtitleData;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaPlayer/SubtitleDataEventArgs&gt; SubtitleData" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.SubtitleData" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaPlayer+SubtitleDataEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SyncParams">
      <MemberSignature Language="C#" Value="public virtual Android.Media.SyncParams SyncParams { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.SyncParams SyncParams" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.SyncParams" />
      <MemberSignature Language="F#" Value="member this.SyncParams : Android.Media.SyncParams with get, set" Usage="Android.Media.MediaPlayer.SyncParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSyncParams", "()Landroid/media/SyncParams;", "GetGetSyncParamsHandler", ApiSince=23)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSyncParams", "(Landroid/media/SyncParams;)V", "GetSetSyncParams_Landroid_media_SyncParams_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.SyncParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the A/V sync mode. -or- Sets A/V sync mode.</summary>
        <value>the A/V sync params</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getSyncParams()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getSyncParams()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
          <para>Property setter documentation:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#setSyncParams(android.media.SyncParams)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setSyncParams(android.media.SyncParams)</code>.</a>
            </format>
          </para>
          <format type="text/html">
            <a href="https://developer.android.com/reference/android/media/MediaPlayer#setSyncParams(android.media.SyncParams)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setSyncParams(android.media.SyncParams)</code>.</a>
          </format>
          <a href="https://developer.android.com/reference/android/media/MediaPlayer#setSyncParams(android.media.SyncParams)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.setSyncParams(android.media.SyncParams)</code>.</a>Java documentation for <code>android.media.MediaPlayer.setSyncParams(android.media.SyncParams)</code>android.media.MediaPlayer.setSyncParams(android.media.SyncParams).<para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a>Android Open Source Project
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a>Creative Commons 2.5 Attribution License.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.MediaPlayer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.MediaPlayer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedMetaDataAvailable">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaPlayer.TimedMetaDataAvailableEventArgs&gt; TimedMetaDataAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaPlayer/TimedMetaDataAvailableEventArgs&gt; TimedMetaDataAvailable" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.TimedMetaDataAvailable" />
      <MemberSignature Language="F#" Value="member this.TimedMetaDataAvailable : EventHandler&lt;Android.Media.MediaPlayer.TimedMetaDataAvailableEventArgs&gt; " Usage="member this.TimedMetaDataAvailable : System.EventHandler&lt;Android.Media.MediaPlayer.TimedMetaDataAvailableEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaPlayer+TimedMetaDataAvailableEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimedText">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaPlayer.TimedTextEventArgs&gt; TimedText;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaPlayer/TimedTextEventArgs&gt; TimedText" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.TimedText" />
      <MemberSignature Language="F#" Value="member this.TimedText : EventHandler&lt;Android.Media.MediaPlayer.TimedTextEventArgs&gt; " Usage="member this.TimedText : System.EventHandler&lt;Android.Media.MediaPlayer.TimedTextEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaPlayer+TimedTextEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public virtual Android.Media.MediaTimestamp Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.MediaTimestamp Timestamp" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.Timestamp" />
      <MemberSignature Language="F#" Value="member this.Timestamp : Android.Media.MediaTimestamp" Usage="Android.Media.MediaPlayer.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTimestamp", "()Landroid/media/MediaTimestamp;", "GetGetTimestampHandler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaTimestamp</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get current playback position as a <c>MediaTimestamp</c>.</summary>
        <value>a MediaTimestamp object if a timestamp is available, or <c>null</c> if no timestamp
                    is available, e.g. because the media player has not been initialized.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getTimestamp()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getTimestamp()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoHeight">
      <MemberSignature Language="C#" Value="public virtual int VideoHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VideoHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.VideoHeight" />
      <MemberSignature Language="F#" Value="member this.VideoHeight : int" Usage="Android.Media.MediaPlayer.VideoHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getVideoHeight", "()I", "GetGetVideoHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the height of the video.</summary>
        <value>the height of the video, or 0 if there is no video,
            no display surface was set, or the height has not been determined
            yet. The OnVideoSizeChangedListener can be registered via
            <c>#setOnVideoSizeChangedListener(OnVideoSizeChangedListener)</c>
            to provide a notification when the height is available.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getVideoHeight()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getVideoHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="VideoScalingModeScaleToFit">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaPlayerVideoScalingModeNotInUse VideoScalingModeScaleToFit = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaPlayerVideoScalingModeNotInUse VideoScalingModeScaleToFit = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaPlayer.VideoScalingModeScaleToFit" />
      <MemberSignature Language="F#" Value="val mutable VideoScalingModeScaleToFit : Android.Media.MediaPlayerVideoScalingModeNotInUse" Usage="Android.Media.MediaPlayer.VideoScalingModeScaleToFit" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("VIDEO_SCALING_MODE_SCALE_TO_FIT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaPlayerVideoScalingModeNotInUse enum directly instead of this field.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaPlayerVideoScalingModeNotInUse</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Specifies a video scaling mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#VIDEO_SCALING_MODE_SCALE_TO_FIT" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.VIDEO_SCALING_MODE_SCALE_TO_FIT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="VideoScalingModeScaleToFitWithCropping">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaPlayerVideoScalingModeNotInUse VideoScalingModeScaleToFitWithCropping = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaPlayerVideoScalingModeNotInUse VideoScalingModeScaleToFitWithCropping = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaPlayer.VideoScalingModeScaleToFitWithCropping" />
      <MemberSignature Language="F#" Value="val mutable VideoScalingModeScaleToFitWithCropping : Android.Media.MediaPlayerVideoScalingModeNotInUse" Usage="Android.Media.MediaPlayer.VideoScalingModeScaleToFitWithCropping" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaPlayerVideoScalingModeNotInUse enum directly instead of this field.", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaPlayerVideoScalingModeNotInUse</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Specifies a video scaling mode.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.VIDEO_SCALING_MODE_SCALE_TO_FIT_WITH_CROPPING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="VideoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaPlayer.VideoSizeChangedEventArgs&gt; VideoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaPlayer/VideoSizeChangedEventArgs&gt; VideoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaPlayer.VideoSizeChanged" />
      <MemberSignature Language="F#" Value="member this.VideoSizeChanged : EventHandler&lt;Android.Media.MediaPlayer.VideoSizeChangedEventArgs&gt; " Usage="member this.VideoSizeChanged : System.EventHandler&lt;Android.Media.MediaPlayer.VideoSizeChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaPlayer+VideoSizeChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VideoWidth">
      <MemberSignature Language="C#" Value="public virtual int VideoWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VideoWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaPlayer.VideoWidth" />
      <MemberSignature Language="F#" Value="member this.VideoWidth : int" Usage="Android.Media.MediaPlayer.VideoWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getVideoWidth", "()I", "GetGetVideoWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the width of the video.</summary>
        <value>the width of the video, or 0 if there is no video,
            no display surface was set, or the width has not been determined
            yet. The OnVideoSizeChangedListener can be registered via
            <c>#setOnVideoSizeChangedListener(OnVideoSizeChangedListener)</c>
            to provide a notification when the width is available.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer#getVideoWidth()" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.getVideoWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
