<Type Name="MediaExtractor" FullName="Android.Media.MediaExtractor">
  <TypeSignature Language="C#" Value="public sealed class MediaExtractor : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MediaExtractor extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/MediaExtractor", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="16">
    <summary>MediaExtractor facilitates extraction of demuxed, typically encoded,  media data
 from a data source.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">MediaExtractor facilitates extraction of demuxed, typically encoded,  media data
 from a data source.
 </para>
      <para tool="javadoc-to-mdoc">It is generally used like this:
 <example><code lang="java">
 MediaExtractor extractor = new MediaExtractor();
 extractor.setDataSource(...);
 int numTracks = extractor.getTrackCount();
 for (int i = 0; i &lt; numTracks; ++i) {
   MediaFormat format = extractor.getTrackFormat(i);
   String mime = format.getString(MediaFormat.KEY_MIME);
   if (weAreInterestedInThisTrack) {
     extractor.selectTrack(i);
   }
 }
 ByteBuffer inputBuffer = ByteBuffer.allocate(...)
 while (extractor.readSampleData(inputBuffer, ...) &gt;= 0) {
   int trackIndex = extractor.getSampleTrackIndex();
   long presentationTimeUs = extractor.getSampleTime();
   ...
   extractor.advance();
 }

 extractor.release();
 extractor = null;
 </code></example></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/media/MediaExtractor.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaExtractor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#MediaExtractor()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Advance">
      <MemberSignature Language="C#" Value="public bool Advance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Advance() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("advance", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Advance to the next sample.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Advance to the next sample. Returns false if no more sample data
 is available (end of stream).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#advance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AdvanceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; AdvanceAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; AdvanceAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CachedDuration">
      <MemberSignature Language="C#" Value="public long CachedDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 CachedDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCachedDuration", "()J", "GetGetCachedDurationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an estimate of how much data is presently cached in memory
 expressed in microseconds.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns an estimate of how much data is presently cached in memory
 expressed in microseconds. Returns -1 if that information is unavailable
 or not applicable (no cache).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#getCachedDuration()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetSampleCryptoInfo">
      <MemberSignature Language="C#" Value="public bool GetSampleCryptoInfo (Android.Media.MediaCodec.CryptoInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetSampleCryptoInfo(class Android.Media.MediaCodec/CryptoInfo info) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getSampleCryptoInfo", "(Landroid/media/MediaCodec$CryptoInfo;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Media.MediaCodec+CryptoInfo" />
      </Parameters>
      <Docs>
        <param name="info">The android.media.MediaCodec.CryptoInfo structure
             to be filled in.</param>
        <summary>If the sample flags indicate that the current sample is at least
 partially encrypted, this call returns relevant information about
 the structure of the sample data required for decryption.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">If the sample flags indicate that the current sample is at least
 partially encrypted, this call returns relevant information about
 the structure of the sample data required for decryption.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#getSampleCryptoInfo(android.media.MediaCodec.CryptoInfo)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetTrackFormat">
      <MemberSignature Language="C#" Value="public Android.Media.MediaFormat GetTrackFormat (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.MediaFormat GetTrackFormat(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTrackFormat", "(I)Landroid/media/MediaFormat;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaFormat</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Get the track format at the specified index.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the track format at the specified index.
 More detail on the representation can be found at <c><see cref="T:Android.Media.MediaCodec" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#getTrackFormat(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="HasCacheReachedEndOfStream">
      <MemberSignature Language="C#" Value="public bool HasCacheReachedEndOfStream { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasCacheReachedEndOfStream" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("hasCacheReachedEndOfStream", "()Z", "GetHasCacheReachedEndOfStreamHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true iff we are caching data and the cache has reached the
 end of the data stream (for now, a future seek may of course restart
 the fetching of data).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true iff we are caching data and the cache has reached the
 end of the data stream (for now, a future seek may of course restart
 the fetching of data).
 This API only returns a meaningful result if <c><see cref="P:Android.Media.MediaExtractor.CachedDuration" /></c>
 indicates the presence of a cache, i.e. does NOT return -1.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#hasCacheReachedEndOfStream()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="PsshInfo">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;Java.Util.UUID,byte[]&gt; PsshInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;class Java.Util.UUID, unsigned int8[]&gt; PsshInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPsshInfo", "()Ljava/util/Map;", "GetGetPsshInfoHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;Java.Util.UUID,System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the PSSH info if present.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the PSSH info if present.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#getPsshInfo()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="" />
      </Docs>
    </Member>
    <Member MemberName="ReadSampleData">
      <MemberSignature Language="C#" Value="public int ReadSampleData (Java.Nio.ByteBuffer byteBuf, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ReadSampleData(class Java.Nio.ByteBuffer byteBuf, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("readSampleData", "(Ljava/nio/ByteBuffer;I)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteBuf" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteBuf">the destination byte buffer</param>
        <param name="offset">To be added.</param>
        <summary>Retrieve the current encoded sample and store it in the byte buffer
 starting at the given offset.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the current encoded sample and store it in the byte buffer
 starting at the given offset.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Note:</b>
            </format>As of API 21, on success the position and limit of
 <c>byteBuf</c> is updated to point to the data just read.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#readSampleData(java.nio.ByteBuffer, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ReadSampleDataAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadSampleDataAsync (Java.Nio.ByteBuffer byteBuf, int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadSampleDataAsync(class Java.Nio.ByteBuffer byteBuf, int32 offset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="byteBuf" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="byteBuf">To be added.</param>
        <param name="offset">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Release() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("release", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Make sure you call this when you're done to free up any resources
 instead of relying on the garbage collector to do this for you at
 some point in the future.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Make sure you call this when you're done to free up any resources
 instead of relying on the garbage collector to do this for you at
 some point in the future.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#release()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SampleFlagEncrypted">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaExtractorSampleFlags SampleFlagEncrypted = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaExtractorSampleFlags SampleFlagEncrypted = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SAMPLE_FLAG_ENCRYPTED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaExtractorSampleFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaExtractorSampleFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The sample is (at least partially) encrypted, see also the documentation
 for <c><see cref="M:Android.Media.MediaCodec.QueueSecureInputBuffer(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" /></c></summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The sample is (at least partially) encrypted, see also the documentation
 for <c><see cref="M:Android.Media.MediaCodec.QueueSecureInputBuffer(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#SAMPLE_FLAG_ENCRYPTED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SampleFlags">
      <MemberSignature Language="C#" Value="public Android.Media.MediaExtractorSampleFlags SampleFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.MediaExtractorSampleFlags SampleFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSampleFlags", "()I", "GetGetSampleFlagsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaExtractorSampleFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current sample's flags.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current sample's flags.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#getSampleFlags()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SampleFlagSync">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaExtractorSampleFlags SampleFlagSync = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaExtractorSampleFlags SampleFlagSync = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SAMPLE_FLAG_SYNC")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaExtractorSampleFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaExtractorSampleFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The sample is a sync sample (or in <c><see cref="T:Android.Media.MediaCodec" /></c>'s terminology
 it is a key frame.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The sample is a sync sample (or in <c><see cref="T:Android.Media.MediaCodec" /></c>'s terminology
 it is a key frame.)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#SAMPLE_FLAG_SYNC" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <altmember cref="F:Android.Media.MediaCodec.BufferFlagKeyFrame" />
      </Docs>
    </Member>
    <Member MemberName="SampleTime">
      <MemberSignature Language="C#" Value="public long SampleTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 SampleTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSampleTime", "()J", "GetGetSampleTimeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Returns the current sample's presentation time in microseconds.
 or -1 if no more samples are available.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current sample's presentation time in microseconds.
 or -1 if no more samples are available.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#getSampleTime()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SampleTrackIndex">
      <MemberSignature Language="C#" Value="public int SampleTrackIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SampleTrackIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSampleTrackIndex", "()I", "GetGetSampleTrackIndexHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the track index the current sample originates from (or -1
 if no more samples are available)
</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the track index the current sample originates from (or -1
 if no more samples are available)
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#getSampleTrackIndex()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SeekTo">
      <MemberSignature Language="C#" Value="public void SeekTo (long timeUs, Android.Media.MediaExtractorSeekTo mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekTo(int64 timeUs, valuetype Android.Media.MediaExtractorSeekTo mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("seekTo", "(JI)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeUs" Type="System.Int64" />
        <Parameter Name="mode" Type="Android.Media.MediaExtractorSeekTo">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="timeUs">To be added.</param>
        <param name="mode">To be added.</param>
        <summary>All selected tracks seek near the requested time according to the
 specified mode.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">All selected tracks seek near the requested time according to the
 specified mode.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#seekTo(long, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SeekToClosestSync">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaExtractorSeekTo SeekToClosestSync = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaExtractorSeekTo SeekToClosestSync = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SEEK_TO_CLOSEST_SYNC")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaExtractorSeekTo enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaExtractorSeekTo</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>If possible, seek to the sync sample closest to the specified time
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If possible, seek to the sync sample closest to the specified time
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#SEEK_TO_CLOSEST_SYNC" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SeekToNextSync">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaExtractorSeekTo SeekToNextSync = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaExtractorSeekTo SeekToNextSync = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SEEK_TO_NEXT_SYNC")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaExtractorSeekTo enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaExtractorSeekTo</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>If possible, seek to a sync sample at or after the specified time
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If possible, seek to a sync sample at or after the specified time
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#SEEK_TO_NEXT_SYNC" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SeekToPreviousSync">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaExtractorSeekTo SeekToPreviousSync = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaExtractorSeekTo SeekToPreviousSync = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SEEK_TO_PREVIOUS_SYNC")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaExtractorSeekTo enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaExtractorSeekTo</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>If possible, seek to a sync sample at or before the specified time
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">If possible, seek to a sync sample at or before the specified time
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#SEEK_TO_PREVIOUS_SYNC" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SelectTrack">
      <MemberSignature Language="C#" Value="public void SelectTrack (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectTrack(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("selectTrack", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Subsequent calls to <c><see cref="M:Android.Media.MediaExtractor.ReadSampleData(Java.Nio.ByteBuffer,System.Int32)" /></c>, <c><see cref="P:Android.Media.MediaExtractor.SampleTrackIndex" /></c> and
 <c><see cref="P:Android.Media.MediaExtractor.SampleTime" /></c> only retrieve information for the subset of tracks
 selected.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Subsequent calls to <c><see cref="M:Android.Media.MediaExtractor.ReadSampleData(Java.Nio.ByteBuffer,System.Int32)" /></c>, <c><see cref="P:Android.Media.MediaExtractor.SampleTrackIndex" /></c> and
 <c><see cref="P:Android.Media.MediaExtractor.SampleTime" /></c> only retrieve information for the subset of tracks
 selected.
 Selecting the same track multiple times has no effect, the track is
 only selected once.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#selectTrack(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public void SetDataSource (Java.IO.FileDescriptor fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDataSource(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataSource", "(Ljava/io/FileDescriptor;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">the FileDescriptor for the file you want to extract from.
</param>
        <summary tool="true">Sets the data source (FileDescriptor) to use.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the data source (FileDescriptor) to use. It is the caller's responsibility
 to close the file descriptor. It is safe to do so as soon as this call returns.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#setDataSource(java.io.FileDescriptor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public void SetDataSource (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDataSource(string path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataSource", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">the path of the file, or the http URL of the stream

 <para tool="javadoc-to-mdoc" />When <c>path</c> refers to a local file, the file may actually be opened by a
 process other than the calling application.  This implies that the pathname
 should be an absolute path (as any other process runs with unspecified current working
 directory), and that the pathname should reference a world-readable file.
 As an alternative, the application could first open the file for reading,
 and then use the file descriptor form <c><see cref="M:Android.Media.MediaExtractor.SetDataSource(Java.IO.FileDescriptor)" /></c>.
</param>
        <summary>Sets the data source (file-path or http URL) to use.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the data source (file-path or http URL) to use.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#setDataSource(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public void SetDataSource (string path, System.Collections.Generic.IDictionary&lt;string,string&gt; headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDataSource(string path, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; headers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataSource", "(Ljava/lang/String;Ljava/util/Map;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="headers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public void SetDataSource (Android.Content.Context context, Android.Net.Uri uri, System.Collections.Generic.IDictionary&lt;string,string&gt; headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDataSource(class Android.Content.Context context, class Android.Net.Uri uri, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; headers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataSource", "(Landroid/content/Context;Landroid/net/Uri;Ljava/util/Map;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="headers" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="uri">To be added.</param>
        <param name="headers">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSource">
      <MemberSignature Language="C#" Value="public void SetDataSource (Java.IO.FileDescriptor fd, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDataSource(class Java.IO.FileDescriptor fd, int64 offset, int64 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataSource", "(Ljava/io/FileDescriptor;JJ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fd">the FileDescriptor for the file you want to extract from.</param>
        <param name="offset">the offset into the file where the data to be extracted starts, in bytes</param>
        <param name="length">the length in bytes of the data to be extracted
</param>
        <summary>Sets the data source (FileDescriptor) to use.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the data source (FileDescriptor) to use.  The FileDescriptor must be
 seekable (N.B. a LocalSocket is not seekable). It is the caller's responsibility
 to close the file descriptor. It is safe to do so as soon as this call returns.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#setDataSource(java.io.FileDescriptor, long, long)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SetDataSourceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDataSourceAsync (Java.IO.FileDescriptor fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDataSourceAsync(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSourceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDataSourceAsync (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDataSourceAsync(string path) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSourceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDataSourceAsync (string path, System.Collections.Generic.IDictionary&lt;string,string&gt; headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDataSourceAsync(string path, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; headers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="headers" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <param name="headers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSourceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDataSourceAsync (Android.Content.Context context, Android.Net.Uri uri, System.Collections.Generic.IDictionary&lt;string,string&gt; headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDataSourceAsync(class Android.Content.Context context, class Android.Net.Uri uri, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; headers) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="headers" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="uri">To be added.</param>
        <param name="headers">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDataSourceAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task SetDataSourceAsync (Java.IO.FileDescriptor fd, long offset, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task SetDataSourceAsync(class Java.IO.FileDescriptor fd, int64 offset, int64 length) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="offset" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="fd">To be added.</param>
        <param name="offset">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackCount">
      <MemberSignature Language="C#" Value="public int TrackCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TrackCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTrackCount", "()I", "GetGetTrackCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Count the number of tracks found in the data source.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Count the number of tracks found in the data source.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#getTrackCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="UnselectTrack">
      <MemberSignature Language="C#" Value="public void UnselectTrack (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnselectTrack(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unselectTrack", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">To be added.</param>
        <summary>Subsequent calls to <c><see cref="M:Android.Media.MediaExtractor.ReadSampleData(Java.Nio.ByteBuffer,System.Int32)" /></c>, <c><see cref="P:Android.Media.MediaExtractor.SampleTrackIndex" /></c> and
 <c><see cref="P:Android.Media.MediaExtractor.SampleTime" /></c> only retrieve information for the subset of tracks
 selected.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Subsequent calls to <c><see cref="M:Android.Media.MediaExtractor.ReadSampleData(Java.Nio.ByteBuffer,System.Int32)" /></c>, <c><see cref="P:Android.Media.MediaExtractor.SampleTrackIndex" /></c> and
 <c><see cref="P:Android.Media.MediaExtractor.SampleTime" /></c> only retrieve information for the subset of tracks
 selected.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaExtractor.html#unselectTrack(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
  </Members>
</Type>
