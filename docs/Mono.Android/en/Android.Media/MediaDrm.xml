<Type Name="MediaDrm" FullName="Android.Media.MediaDrm">
  <TypeSignature Language="C#" Value="public sealed class MediaDrm : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MediaDrm extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/MediaDrm", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="18">
    <summary>MediaDrm can be used to obtain keys for decrypting protected media streams, in
 conjunction with <c><see cref="T:Android.Media.MediaCrypto" /></c>.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">MediaDrm can be used to obtain keys for decrypting protected media streams, in
 conjunction with <c><see cref="T:Android.Media.MediaCrypto" /></c>.  The MediaDrm APIs
 are designed to support the ISO/IEC 23001-7: Common Encryption standard, but
 may also be used to implement other encryption schemes.
 </para>
      <para tool="javadoc-to-mdoc">
 Encrypted content is prepared using an encryption server and stored in a content
 library. The encrypted content is streamed or downloaded from the content library to
 client devices via content servers.  Licenses to view the content are obtained from
 a License Server.
 </para>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <img src="../../../images/mediadrm_overview.png" alt="MediaDrm Overview diagram" border="0" />
        </format>
      </para>
      <para tool="javadoc-to-mdoc">
 Keys are requested from the license server using a key request. The key
 response is delivered to the client app, which provides the response to the
 MediaDrm API.
 </para>
      <para tool="javadoc-to-mdoc">
 A Provisioning server may be required to distribute device-unique credentials to
 the devices.
 </para>
      <para tool="javadoc-to-mdoc">
 Enforcing requirements related to the number of devices that may play content
 simultaneously can be performed either through key renewal or using the secure
 stop methods.
 </para>
      <para tool="javadoc-to-mdoc">
 The following sequence diagram shows the interactions between the objects
 involved while playing back encrypted content:
 </para>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <img src="../../../images/mediadrm_decryption_sequence.png" alt="MediaDrm Overview diagram" border="0" />
        </format>
      </para>
      <para tool="javadoc-to-mdoc">
 The app first constructs <c><see cref="T:Android.Media.MediaExtractor" /></c> and
 <c><see cref="T:Android.Media.MediaCodec" /></c> objects. It accesses the DRM-scheme-identifying UUID,
 typically from metadata in the content, and uses this UUID to construct an instance
 of a MediaDrm object that is able to support the DRM scheme required by the content.
 Crypto schemes are assigned 16 byte UUIDs.  The method <c><see cref="M:Android.Media.MediaDrm.IsCryptoSchemeSupported(Java.Util.UUID)" /></c>
 can be used to query if a given scheme is supported on the device.
 </para>
      <para tool="javadoc-to-mdoc">
 The app calls <c><see cref="M:Android.Media.MediaDrm.OpenSession" /></c> to generate a sessionId that will uniquely identify
 the session in subsequent interactions. The app next uses the MediaDrm object to
 obtain a key request message and send it to the license server, then provide
 the server's response to the MediaDrm object.
 </para>
      <para tool="javadoc-to-mdoc">
 Once the app has a sessionId, it can construct a MediaCrypto object from the UUID and
 sessionId.  The MediaCrypto object is registered with the MediaCodec in the
 <c><see cref="M:Android.Media.MediaCodec.Configure(Android.Media.MediaFormat,Android.Views.Surface,Android.Views.Surface,Android.Views.Surface)" /></c> method to enable the codec to decrypt content.
 </para>
      <para tool="javadoc-to-mdoc">
 When the app has constructed <c><see cref="T:Android.Media.MediaExtractor" /></c>,
 <c><see cref="T:Android.Media.MediaCodec" /></c> and <c><see cref="T:Android.Media.MediaCrypto" /></c> objects,
 it proceeds to pull samples from the extractor and queue them into the decoder.  For
 encrypted content, the samples returned from the extractor remain encrypted, they
 are only decrypted when the samples are delivered to the decoder.
 </para>
      <para tool="javadoc-to-mdoc">
 MediaDrm methods throw <c><see cref="!:NoType:android/media/MediaDrm$MediaDrmStateException;Href=../../../reference/android/media/MediaDrm.MediaDrmStateException.html" /></c>
 when a method is called on a MediaDrm object that has had an unrecoverable failure 
 in the DRM plugin or security hardware. 
 <c><see cref="!:NoType:android/media/MediaDrm$MediaDrmStateException;Href=../../../reference/android/media/MediaDrm.MediaDrmStateException.html" /></c> extends 
 <c><see cref="T:Java.Lang.IllegalStateException" /></c> with the addition of a developer-readable 
 diagnostic information string associated with the exception.
 </para>
      <para tool="javadoc-to-mdoc">
 In the event of a mediaserver process crash or restart while a MediaDrm object
 is active, MediaDrm methods may throw <c><see cref="T:Android.Media.MediaDrmResetException" /></c>.
 To recover, the app must release the MediaDrm object, then create and initialize
 a new one.
 </para>
      <para tool="javadoc-to-mdoc">
 As <c><see cref="T:Android.Media.MediaDrmResetException" /></c> and 
 <c><see cref="!:NoType:android/media/MediaDrm$MediaDrmStateException;Href=../../../reference/android/media/MediaDrm.MediaDrmStateException.html" /></c> both extend 
 <c><see cref="T:Java.Lang.IllegalStateException" /></c>, they should be in an earlier catch() 
 block than <c><see cref="T:Java.Lang.IllegalStateException" /></c> if handled separately.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <h3>Callbacks</h3>
        </format>
      </para>
      <para tool="javadoc-to-mdoc">Applications should register for informational events in order
 to be informed of key state updates during playback or streaming.
 Registration for these events is done via a call to
 <c><see cref="M:Android.Media.MediaDrm.SetOnEventListener(.IOnEventListener)" /></c>. In order to receive the respective
 callback associated with this listener, applications are required to create
 MediaDrm objects on a thread with its own Looper running (main UI
 thread by default has a Looper running).
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/media/MediaDrm.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 18" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaDrm (Java.Util.UUID uuid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Util.UUID uuid) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/util/UUID;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="uuid" Type="Java.Util.UUID" />
      </Parameters>
      <Docs>
        <param name="uuid">To be added.</param>
        <summary>Instantiate a MediaDrm object</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Instantiate a MediaDrm object</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#MediaDrm(java.util.UUID)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <exception cref="T:Android.Media.UnsupportedSchemeException">if the device does not support the
 specified scheme UUID
</exception>
      </Docs>
    </Member>
    <Member MemberName="CloseSession">
      <MemberSignature Language="C#" Value="public void CloseSession (byte[] sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CloseSession(unsigned int8[] sessionId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("closeSession", "([B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sessionId">To be added.</param>
        <summary>Close a session on the MediaDrm object that was previously opened
 with <c><see cref="M:Android.Media.MediaDrm.OpenSession" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Close a session on the MediaDrm object that was previously opened
 with <c><see cref="M:Android.Media.MediaDrm.OpenSession" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#closeSession(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="EventKeyExpired">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaDrmEventType EventKeyExpired = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaDrmEventType EventKeyExpired = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EVENT_KEY_EXPIRED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaDrmEventType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaDrmEventType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>This event type indicates that the licensed usage duration for keys in a session
 has expired.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This event type indicates that the licensed usage duration for keys in a session
 has expired.  The keys are no longer valid.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#EVENT_KEY_EXPIRED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="EventKeyRequired">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaDrmEventType EventKeyRequired = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaDrmEventType EventKeyRequired = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EVENT_KEY_REQUIRED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaDrmEventType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaDrmEventType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>This event type indicates that the app needs to request keys from a license
 server.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This event type indicates that the app needs to request keys from a license
 server.  The request message data is obtained using <c><see cref="!:Android.Media.MediaDrm.getKeyRequest(byte[],byte[],java.lang.String,int,java.util.HashMap&lt;java.lang.String,java.lang.String&gt;)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#EVENT_KEY_REQUIRED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="EventProvisionRequired">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaDrmEventType EventProvisionRequired = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaDrmEventType EventProvisionRequired = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EVENT_PROVISION_REQUIRED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaDrmEventType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaDrmEventType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>This event type indicates that the app needs to request a certificate from
 the provisioning server.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This event type indicates that the app needs to request a certificate from
 the provisioning server.  The request message data is obtained using
 <c><see cref="M:Android.Media.MediaDrm.GetProvisionRequest" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#EVENT_PROVISION_REQUIRED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="EventVendorDefined">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaDrmEventType EventVendorDefined = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaDrmEventType EventVendorDefined = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("EVENT_VENDOR_DEFINED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaDrmEventType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaDrmEventType</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>This event may indicate some specific vendor-defined condition, see your
 DRM provider documentation for details
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This event may indicate some specific vendor-defined condition, see your
 DRM provider documentation for details
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#EVENT_VENDOR_DEFINED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="GetCryptoSession">
      <MemberSignature Language="C#" Value="public Android.Media.MediaDrm.CryptoSession GetCryptoSession (byte[] sessionId, string cipherAlgorithm, string macAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.MediaDrm/CryptoSession GetCryptoSession(unsigned int8[] sessionId, string cipherAlgorithm, string macAlgorithm) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCryptoSession", "([BLjava/lang/String;Ljava/lang/String;)Landroid/media/MediaDrm$CryptoSession;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaDrm+CryptoSession</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Byte[]" />
        <Parameter Name="cipherAlgorithm" Type="System.String" />
        <Parameter Name="macAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sessionId">the session ID for the session containing keys
 to be used for encrypt, decrypt, sign and/or verify</param>
        <param name="cipherAlgorithm">the algorithm to use for encryption and
 decryption ciphers. The algorithm string conforms to JCA Standard
 Names for Cipher Transforms and is case insensitive.  For example
 "AES/CBC/NoPadding".</param>
        <param name="macAlgorithm">the algorithm to use for sign and verify
 The algorithm string conforms to JCA Standard Names for Mac
 Algorithms and is case insensitive.  For example "HmacSHA256".
 <para tool="javadoc-to-mdoc" />
 The list of supported algorithms for a DRM engine plugin can be obtained
 using the method <c><see cref="M:Android.Media.MediaDrm.GetPropertyString(System.String)" /></c> with the property name
 "algorithms".
</param>
        <summary>Obtain a CryptoSession object which can be used to encrypt, decrypt,
 sign and verify messages or data using the session keys established
 for the session using methods <c><see cref="!:Android.Media.MediaDrm.getKeyRequest(byte[],byte[],java.lang.String,int,java.util.HashMap&lt;java.lang.String,java.lang.String&gt;)" /></c> and
 <c><see cref="M:Android.Media.MediaDrm.ProvideKeyResponse(System.Byte[],System.Byte[])" /></c> using a session key server.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Obtain a CryptoSession object which can be used to encrypt, decrypt,
 sign and verify messages or data using the session keys established
 for the session using methods <c><see cref="!:Android.Media.MediaDrm.getKeyRequest(byte[],byte[],java.lang.String,int,java.util.HashMap&lt;java.lang.String,java.lang.String&gt;)" /></c> and
 <c><see cref="M:Android.Media.MediaDrm.ProvideKeyResponse(System.Byte[],System.Byte[])" /></c> using a session key server.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#getCryptoSession(byte[], java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyRequest">
      <MemberSignature Language="C#" Value="public Android.Media.MediaDrm.KeyRequest GetKeyRequest (byte[] scope, byte[] init, string mimeType, int keyType, System.Collections.Generic.IDictionary&lt;string,string&gt; optionalParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.MediaDrm/KeyRequest GetKeyRequest(unsigned int8[] scope, unsigned int8[] init, string mimeType, int32 keyType, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; optionalParameters) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getKeyRequest", "([B[BLjava/lang/String;ILjava/util/HashMap;)Landroid/media/MediaDrm$KeyRequest;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaDrm+KeyRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Byte[]" />
        <Parameter Name="init" Type="System.Byte[]" />
        <Parameter Name="mimeType" Type="System.String" />
        <Parameter Name="keyType" Type="System.Int32" />
        <Parameter Name="optionalParameters" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="scope">To be added.</param>
        <param name="init">To be added.</param>
        <param name="mimeType">To be added.</param>
        <param name="keyType">To be added.</param>
        <param name="optionalParameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyByteArray">
      <MemberSignature Language="C#" Value="public byte[] GetPropertyByteArray (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPropertyByteArray(string propertyName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPropertyByteArray", "(Ljava/lang/String;)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>Read a DRM engine plugin byte array property value, given the property name string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Read a DRM engine plugin byte array property value, given the property name string.
 </para>
          <para tool="javadoc-to-mdoc">
 Standard fields names are <c><see cref="F:Android.Media.MediaDrm.PropertyDeviceUniqueId" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#getPropertyByteArray(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="GetPropertyString">
      <MemberSignature Language="C#" Value="public string GetPropertyString (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyString(string propertyName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getPropertyString", "(Ljava/lang/String;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <summary>Read a DRM engine plugin String property value, given the property name string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Read a DRM engine plugin String property value, given the property name string.
 </para>
          <para tool="javadoc-to-mdoc">
 Standard fields names are:
 <c><see cref="F:Android.Media.MediaDrm.PropertyVendor" /></c>, <c><see cref="F:Android.Media.MediaDrm.PropertyVersion" /></c>,
 <c><see cref="F:Android.Media.MediaDrm.PropertyDescription" /></c>, <c><see cref="F:Android.Media.MediaDrm.PropertyAlgorithms" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#getPropertyString(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="GetProvisionRequest">
      <MemberSignature Language="C#" Value="public Android.Media.MediaDrm.ProvisionRequest GetProvisionRequest ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.MediaDrm/ProvisionRequest GetProvisionRequest() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProvisionRequest", "()Landroid/media/MediaDrm$ProvisionRequest;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaDrm+ProvisionRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>A provision request/response exchange occurs between the app and a provisioning
 server to retrieve a device certificate.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">A provision request/response exchange occurs between the app and a provisioning
 server to retrieve a device certificate.  If provisionining is required, the
 EVENT_PROVISION_REQUIRED event will be sent to the event handler.
 getProvisionRequest is used to obtain the opaque provision request byte array that
 should be delivered to the provisioning server. The provision request byte array
 is returned in ProvisionRequest.data. The recommended URL to deliver the provision
 request to is returned in ProvisionRequest.defaultUrl.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#getProvisionRequest()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="IsCryptoSchemeSupported">
      <MemberSignature Language="C#" Value="public static bool IsCryptoSchemeSupported (Java.Util.UUID uuid);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCryptoSchemeSupported(class Java.Util.UUID uuid) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isCryptoSchemeSupported", "(Ljava/util/UUID;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uuid" Type="Java.Util.UUID" />
      </Parameters>
      <Docs>
        <param name="uuid">The UUID of the crypto scheme.
</param>
        <summary tool="true">Query if the given scheme identified by its UUID is supported on
 this device.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Query if the given scheme identified by its UUID is supported on
 this device.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#isCryptoSchemeSupported(java.util.UUID)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 19" />
      </Docs>
    </Member>
    <Member MemberName="IsCryptoSchemeSupported">
      <MemberSignature Language="C#" Value="public static bool IsCryptoSchemeSupported (Java.Util.UUID uuid, string mimeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsCryptoSchemeSupported(class Java.Util.UUID uuid, string mimeType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isCryptoSchemeSupported", "(Ljava/util/UUID;Ljava/lang/String;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uuid" Type="Java.Util.UUID" />
        <Parameter Name="mimeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uuid">The UUID of the crypto scheme.</param>
        <param name="mimeType">The MIME type of the media container, e.g. "video/mp4"
   or "video/webm"
</param>
        <summary>Query if the given scheme identified by its UUID is supported on
 this device, and whether the drm plugin is able to handle the
 media container format specified by mimeType.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Query if the given scheme identified by its UUID is supported on
 this device, and whether the drm plugin is able to handle the
 media container format specified by mimeType.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#isCryptoSchemeSupported(java.util.UUID, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyTypeOffline">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaDrmKeyType KeyTypeOffline = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaDrmKeyType KeyTypeOffline = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEY_TYPE_OFFLINE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaDrmKeyType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaDrmKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>This key request type specifies that the keys will be for offline use, they
 will be saved to the device for use when the device is not connected to a network.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This key request type specifies that the keys will be for offline use, they
 will be saved to the device for use when the device is not connected to a network.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#KEY_TYPE_OFFLINE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="KeyTypeRelease">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaDrmKeyType KeyTypeRelease = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaDrmKeyType KeyTypeRelease = (3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEY_TYPE_RELEASE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaDrmKeyType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaDrmKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>This key request type specifies that previously saved offline keys should be released.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This key request type specifies that previously saved offline keys should be released.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#KEY_TYPE_RELEASE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="KeyTypeStreaming">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaDrmKeyType KeyTypeStreaming = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaDrmKeyType KeyTypeStreaming = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("KEY_TYPE_STREAMING")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaDrmKeyType enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaDrmKeyType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>This key request type species that the keys will be for online use, they will
 not be saved to the device for subsequent use when the device is not connected
 to a network.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This key request type species that the keys will be for online use, they will
 not be saved to the device for subsequent use when the device is not connected
 to a network.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#KEY_TYPE_STREAMING" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="MediaDrmEvent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaDrm.MediaDrmEventArgs&gt; MediaDrmEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaDrm/MediaDrmEventArgs&gt; MediaDrmEvent" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaDrm+MediaDrmEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OpenSession">
      <MemberSignature Language="C#" Value="public byte[] OpenSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] OpenSession() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("openSession", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Open a new session with the MediaDrm object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Open a new session with the MediaDrm object.  A session ID is returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#openSession()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <exception cref="T:Android.Media.NotProvisionedException">if provisioning is needed</exception>
        <exception cref="T:Android.Media.ResourceBusyException">if required resources are in use
</exception>
      </Docs>
    </Member>
    <Member MemberName="PropertyAlgorithms">
      <MemberSignature Language="C#" Value="public const string PropertyAlgorithms;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyAlgorithms" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROPERTY_ALGORITHMS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>String property name: a comma-separated list of cipher and mac algorithms
 supported by CryptoSession.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">String property name: a comma-separated list of cipher and mac algorithms
 supported by CryptoSession.  The list may be empty if the DRM engine
 plugin does not support CryptoSession operations.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#PROPERTY_ALGORITHMS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="PropertyDescription">
      <MemberSignature Language="C#" Value="public const string PropertyDescription;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyDescription" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROPERTY_DESCRIPTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>String property name: describes the DRM engine plugin
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">String property name: describes the DRM engine plugin
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#PROPERTY_DESCRIPTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="PropertyDeviceUniqueId">
      <MemberSignature Language="C#" Value="public const string PropertyDeviceUniqueId;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyDeviceUniqueId" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROPERTY_DEVICE_UNIQUE_ID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Byte array property name: the device unique identifier is established during
 device provisioning and provides a means of uniquely identifying each device.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Byte array property name: the device unique identifier is established during
 device provisioning and provides a means of uniquely identifying each device.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#PROPERTY_DEVICE_UNIQUE_ID" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="PropertyVendor">
      <MemberSignature Language="C#" Value="public const string PropertyVendor;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyVendor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROPERTY_VENDOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>String property name: identifies the maker of the DRM engine plugin
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">String property name: identifies the maker of the DRM engine plugin
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#PROPERTY_VENDOR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="PropertyVersion">
      <MemberSignature Language="C#" Value="public const string PropertyVersion;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PropertyVersion" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PROPERTY_VERSION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>String property name: identifies the version of the DRM engine plugin
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">String property name: identifies the version of the DRM engine plugin
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#PROPERTY_VERSION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ProvideKeyResponse">
      <MemberSignature Language="C#" Value="public byte[] ProvideKeyResponse (byte[] scope, byte[] response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] ProvideKeyResponse(unsigned int8[] scope, unsigned int8[] response) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("provideKeyResponse", "([B[B)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.Byte[]" />
        <Parameter Name="response" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="scope">may be a sessionId or keySetId depending on the type of the
 response.  Scope should be set to the sessionId when the response is for either
 streaming or offline key requests.  Scope should be set to the keySetId when
 the response is for a release request.</param>
        <param name="response">the byte array response from the server</param>
        <summary>A key response is received from the license server by the app, then it is
 provided to the DRM engine plugin using provideKeyResponse.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">A key response is received from the license server by the app, then it is
 provided to the DRM engine plugin using provideKeyResponse.  When the
 response is for an offline key request, a keySetId is returned that can be
 used to later restore the keys to a new session with the method
 <c><see cref="M:Android.Media.MediaDrm.RestoreKeys(System.Byte[],System.Byte[])" /></c>.
 When the response is for a streaming or release request, null is returned.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#provideKeyResponse(byte[], byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <exception cref="T:Android.Media.NotProvisionedException">if the response indicates that
 reprovisioning is required</exception>
        <exception cref="T:Android.Media.DeniedByServerException">if the response indicates that the
 server rejected the request
</exception>
      </Docs>
    </Member>
    <Member MemberName="ProvideProvisionResponse">
      <MemberSignature Language="C#" Value="public void ProvideProvisionResponse (byte[] response);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ProvideProvisionResponse(unsigned int8[] response) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("provideProvisionResponse", "([B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="response">the opaque provisioning response byte array to provide to the
 DRM engine plugin.</param>
        <summary>After a provision response is received by the app, it is provided to the DRM
 engine plugin using this method.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">After a provision response is received by the app, it is provided to the DRM
 engine plugin using this method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#provideProvisionResponse(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <exception cref="T:Android.Media.DeniedByServerException">if the response indicates that the
 server rejected the request
</exception>
      </Docs>
    </Member>
    <Member MemberName="QueryKeyStatus">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; QueryKeyStatus (byte[] sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; QueryKeyStatus(unsigned int8[] sessionId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("queryKeyStatus", "([B)Ljava/util/HashMap;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sessionId">the session ID for the DRM session
</param>
        <summary>Request an informative description of the key status for the session.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Request an informative description of the key status for the session.  The status is
 in the form of {name, value} pairs.  Since DRM license policies vary by vendor,
 the specific status field names are determined by each DRM vendor.  Refer to your
 DRM provider documentation for definitions of the field names for a particular
 DRM engine plugin.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#queryKeyStatus(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Release() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("release", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#release()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseSecureStops">
      <MemberSignature Language="C#" Value="public void ReleaseSecureStops (byte[] ssRelease);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseSecureStops(unsigned int8[] ssRelease) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("releaseSecureStops", "([B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ssRelease" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="ssRelease">the server response indicating which secure stops to release
</param>
        <summary>Process the SecureStop server response message ssRelease.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Process the SecureStop server response message ssRelease.  After authenticating
 the message, remove the SecureStops identified in the response.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#releaseSecureStops(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="RemoveKeys">
      <MemberSignature Language="C#" Value="public void RemoveKeys (byte[] sessionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveKeys(unsigned int8[] sessionId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("removeKeys", "([B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sessionId">the session ID for the DRM session
</param>
        <summary>Remove the current keys from a session.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Remove the current keys from a session.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#removeKeys(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="RestoreKeys">
      <MemberSignature Language="C#" Value="public void RestoreKeys (byte[] sessionId, byte[] keySetId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RestoreKeys(unsigned int8[] sessionId, unsigned int8[] keySetId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("restoreKeys", "([B[B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionId" Type="System.Byte[]" />
        <Parameter Name="keySetId" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="sessionId">the session ID for the DRM session</param>
        <param name="keySetId">identifies the saved key set to restore
</param>
        <summary>Restore persisted offline keys into a new session.  keySetId identifies the
 keys to load, obtained from a prior call to <c><see cref="M:Android.Media.MediaDrm.ProvideKeyResponse(System.Byte[],System.Byte[])" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Restore persisted offline keys into a new session.  keySetId identifies the
 keys to load, obtained from a prior call to <c><see cref="M:Android.Media.MediaDrm.ProvideKeyResponse(System.Byte[],System.Byte[])" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#restoreKeys(byte[], byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="SecureStops">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;byte[]&gt; SecureStops { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;unsigned int8[]&gt; SecureStops" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSecureStops", "()Ljava/util/List;", "GetGetSecureStopsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A means of enforcing limits on the number of concurrent streams per subscriber
 across devices is provided via SecureStop.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">A means of enforcing limits on the number of concurrent streams per subscriber
 across devices is provided via SecureStop. This is achieved by securely
 monitoring the lifetime of sessions.
 </para>
          <para tool="javadoc-to-mdoc">
 Information from the server related to the current playback session is written
 to persistent storage on the device when each MediaCrypto object is created.
 </para>
          <para tool="javadoc-to-mdoc">
 In the normal case, playback will be completed, the session destroyed and the
 Secure Stops will be queried. The app queries secure stops and forwards the
 secure stop message to the server which verifies the signature and notifies the
 server side database that the session destruction has been confirmed. The persisted
 record on the client is only removed after positive confirmation that the server
 received the message using releaseSecureStops().
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#getSecureStops()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="SetOnEventListener">
      <MemberSignature Language="C#" Value="public void SetOnEventListener (Android.Media.MediaDrm.IOnEventListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOnEventListener(class Android.Media.MediaDrm/IOnEventListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnEventListener", "(Landroid/media/MediaDrm$OnEventListener;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaDrm+IOnEventListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run.  Use <c>null</c> to
        stop receiving event callbacks.
</param>
        <summary>Register a callback to be invoked when an event occurs</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Register a callback to be invoked when an event occurs</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#setOnEventListener(android.media.MediaDrm.OnEventListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyByteArray">
      <MemberSignature Language="C#" Value="public void SetPropertyByteArray (string propertyName, byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyByteArray(string propertyName, unsigned int8[] value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPropertyByteArray", "(Ljava/lang/String;[B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Set a DRM engine plugin byte array property value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a DRM engine plugin byte array property value.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#setPropertyByteArray(java.lang.String, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="SetPropertyString">
      <MemberSignature Language="C#" Value="public void SetPropertyString (string propertyName, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPropertyString(string propertyName, string value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPropertyString", "(Ljava/lang/String;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Set a DRM engine plugin String property value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a DRM engine plugin String property value.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.html#setPropertyString(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
