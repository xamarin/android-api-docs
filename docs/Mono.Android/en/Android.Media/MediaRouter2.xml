<Type Name="MediaRouter2" FullName="Android.Media.MediaRouter2">
  <TypeSignature Language="C#" Value="public sealed class MediaRouter2 : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MediaRouter2 extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaRouter2" />
  <TypeSignature Language="F#" Value="type MediaRouter2 = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/MediaRouter2", ApiSince=30, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/MediaRouter2", ApiSince=30, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This API is not generally intended for third party application developers.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/MediaRouter2" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Controllers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Media.MediaRouter2.RoutingController&gt; Controllers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.MediaRouter2/RoutingController&gt; Controllers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRouter2.Controllers" />
      <MemberSignature Language="F#" Value="member this.Controllers : System.Collections.Generic.IList&lt;Android.Media.MediaRouter2.RoutingController&gt;" Usage="Android.Media.MediaRouter2.Controllers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getControllers", "()Ljava/util/List;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getControllers", "()Ljava/util/List;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.MediaRouter2+RoutingController&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the list of currently active <c>RoutingController routing controllers</c> on which
            media can be played.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#getControllers()" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.getControllers()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetController">
      <MemberSignature Language="C#" Value="public Android.Media.MediaRouter2.RoutingController? GetController (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.MediaRouter2/RoutingController GetController(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRouter2.GetController(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetController : string -&gt; Android.Media.MediaRouter2.RoutingController" Usage="mediaRouter2.GetController id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getController", "(Ljava/lang/String;)Landroid/media/MediaRouter2$RoutingController;", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getController", "(Ljava/lang/String;)Landroid/media/MediaRouter2$RoutingController;", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouter2+RoutingController</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">To be added.</param>
        <summary>Gets a <c>RoutingController</c> whose ID is equal to the given ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#getController(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.getController(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControllerHints">
      <MemberSignature Language="C#" Value="public Android.Media.MediaRouter2.GetControllerHintsHandler? GetControllerHints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.MediaRouter2/GetControllerHintsHandler GetControllerHints" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRouter2.GetControllerHints" />
      <MemberSignature Language="F#" Value="member this.GetControllerHints : Android.Media.MediaRouter2.GetControllerHintsHandler with get, set" Usage="Android.Media.MediaRouter2.GetControllerHints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouter2+GetControllerHintsHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="C#" Value="public static Android.Media.MediaRouter2 GetInstance (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.MediaRouter2 GetInstance(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRouter2.GetInstance(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member GetInstance : Android.Content.Context -&gt; Android.Media.MediaRouter2" Usage="Android.Media.MediaRouter2.GetInstance context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Landroid/content/Context;)Landroid/media/MediaRouter2;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Landroid/content/Context;)Landroid/media/MediaRouter2;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouter2</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Gets an instance of the media router associated with the context.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#getInstance(android.content.Context)" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.getInstance(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRouter2.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.MediaRouter2.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterControllerCallback">
      <MemberSignature Language="C#" Value="public void RegisterControllerCallback (Java.Util.Concurrent.IExecutor executor, Android.Media.MediaRouter2.ControllerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterControllerCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Media.MediaRouter2/ControllerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRouter2.RegisterControllerCallback(Java.Util.Concurrent.IExecutor,Android.Media.MediaRouter2.ControllerCallback)" />
      <MemberSignature Language="F#" Value="member this.RegisterControllerCallback : Java.Util.Concurrent.IExecutor * Android.Media.MediaRouter2.ControllerCallback -&gt; unit" Usage="mediaRouter2.RegisterControllerCallback (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerControllerCallback", "(Ljava/util/concurrent/Executor;Landroid/media/MediaRouter2$ControllerCallback;)V", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerControllerCallback", "(Ljava/util/concurrent/Executor;Landroid/media/MediaRouter2$ControllerCallback;)V", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Media.MediaRouter2+ControllerCallback" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>Registers a <c>ControllerCallback</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#registerControllerCallback(java.util.concurrent.Executor,%20android.media.ControllerCallback)" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.registerControllerCallback(java.util.concurrent.Executor, android.media.ControllerCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterRouteCallback">
      <MemberSignature Language="C#" Value="public void RegisterRouteCallback (Java.Util.Concurrent.IExecutor executor, Android.Media.MediaRouter2.RouteCallback routeCallback, Android.Media.RouteDiscoveryPreference preference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterRouteCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Media.MediaRouter2/RouteCallback routeCallback, class Android.Media.RouteDiscoveryPreference preference) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRouter2.RegisterRouteCallback(Java.Util.Concurrent.IExecutor,Android.Media.MediaRouter2.RouteCallback,Android.Media.RouteDiscoveryPreference)" />
      <MemberSignature Language="F#" Value="member this.RegisterRouteCallback : Java.Util.Concurrent.IExecutor * Android.Media.MediaRouter2.RouteCallback * Android.Media.RouteDiscoveryPreference -&gt; unit" Usage="mediaRouter2.RegisterRouteCallback (executor, routeCallback, preference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerRouteCallback", "(Ljava/util/concurrent/Executor;Landroid/media/MediaRouter2$RouteCallback;Landroid/media/RouteDiscoveryPreference;)V", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerRouteCallback", "(Ljava/util/concurrent/Executor;Landroid/media/MediaRouter2$RouteCallback;Landroid/media/RouteDiscoveryPreference;)V", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="routeCallback" Type="Android.Media.MediaRouter2+RouteCallback" />
        <Parameter Name="preference" Type="Android.Media.RouteDiscoveryPreference" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="routeCallback">To be added.</param>
        <param name="preference">To be added.</param>
        <summary>Registers a callback to discover routes and to receive events when they change.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#registerRouteCallback(java.util.concurrent.Executor,%20android.media.RouteCallback,%20android.media.RouteDiscoveryPreference)" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.registerRouteCallback(java.util.concurrent.Executor, android.media.RouteCallback, android.media.RouteDiscoveryPreference)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterTransferCallback">
      <MemberSignature Language="C#" Value="public void RegisterTransferCallback (Java.Util.Concurrent.IExecutor executor, Android.Media.MediaRouter2.TransferCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterTransferCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Media.MediaRouter2/TransferCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRouter2.RegisterTransferCallback(Java.Util.Concurrent.IExecutor,Android.Media.MediaRouter2.TransferCallback)" />
      <MemberSignature Language="F#" Value="member this.RegisterTransferCallback : Java.Util.Concurrent.IExecutor * Android.Media.MediaRouter2.TransferCallback -&gt; unit" Usage="mediaRouter2.RegisterTransferCallback (executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerTransferCallback", "(Ljava/util/concurrent/Executor;Landroid/media/MediaRouter2$TransferCallback;)V", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerTransferCallback", "(Ljava/util/concurrent/Executor;Landroid/media/MediaRouter2$TransferCallback;)V", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.Media.MediaRouter2+TransferCallback" />
      </Parameters>
      <Docs>
        <param name="executor">the executor to execute the callback on</param>
        <param name="callback">the callback to register</param>
        <summary>Registers a callback to get the result of <c>#transferTo(MediaRoute2Info)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#registerTransferCallback(java.util.concurrent.Executor,%20android.media.TransferCallback)" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.registerTransferCallback(java.util.concurrent.Executor, android.media.TransferCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Routes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Android.Media.MediaRoute2Info&gt; Routes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.MediaRoute2Info&gt; Routes" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRouter2.Routes" />
      <MemberSignature Language="F#" Value="member this.Routes : System.Collections.Generic.IList&lt;Android.Media.MediaRoute2Info&gt;" Usage="Android.Media.MediaRouter2.Routes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRoutes", "()Ljava/util/List;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRoutes", "()Ljava/util/List;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.MediaRoute2Info&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the unmodifiable list of <c>MediaRoute2Info routes</c> currently known to the media
            router.</summary>
        <value>the list of routes that contains at least one of the route features in discovery
                preferences registered by the application</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#getRoutes()" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.getRoutes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnGetControllerHintsListener">
      <MemberSignature Language="C#" Value="public void SetOnGetControllerHintsListener (Android.Media.MediaRouter2.IOnGetControllerHintsListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOnGetControllerHintsListener(class Android.Media.MediaRouter2/IOnGetControllerHintsListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRouter2.SetOnGetControllerHintsListener(Android.Media.MediaRouter2.IOnGetControllerHintsListener)" />
      <MemberSignature Language="F#" Value="member this.SetOnGetControllerHintsListener : Android.Media.MediaRouter2.IOnGetControllerHintsListener -&gt; unit" Usage="mediaRouter2.SetOnGetControllerHintsListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnGetControllerHintsListener", "(Landroid/media/MediaRouter2$OnGetControllerHintsListener;)V", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnGetControllerHintsListener", "(Landroid/media/MediaRouter2$OnGetControllerHintsListener;)V", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaRouter2+IOnGetControllerHintsListener" />
      </Parameters>
      <Docs>
        <param name="listener">A listener to send optional app-specific hints when creating a controller.
                            <c>null</c> for unset.</param>
        <summary>Sets an <c>OnGetControllerHintsListener</c> to send hints when creating a
            <c>RoutingController</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#setOnGetControllerHintsListener(android.media.OnGetControllerHintsListener)" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.setOnGetControllerHintsListener(android.media.OnGetControllerHintsListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRouter2.Stop" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="mediaRouter2.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stop", "()V", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stop", "()V", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops the current media routing.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#stop()" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.stop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SystemController">
      <MemberSignature Language="C#" Value="public Android.Media.MediaRouter2.RoutingController SystemController { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.MediaRouter2/RoutingController SystemController" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRouter2.SystemController" />
      <MemberSignature Language="F#" Value="member this.SystemController : Android.Media.MediaRouter2.RoutingController" Usage="Android.Media.MediaRouter2.SystemController" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSystemController", "()Landroid/media/MediaRouter2$RoutingController;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSystemController", "()Landroid/media/MediaRouter2$RoutingController;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouter2+RoutingController</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a <c>RoutingController</c> which can control the routes provided by system.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#getSystemController()" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.getSystemController()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRouter2.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.MediaRouter2.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRouter2.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.MediaRouter2.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferTo">
      <MemberSignature Language="C#" Value="public void TransferTo (Android.Media.MediaRoute2Info route);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void TransferTo(class Android.Media.MediaRoute2Info route) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRouter2.TransferTo(Android.Media.MediaRoute2Info)" />
      <MemberSignature Language="F#" Value="member this.TransferTo : Android.Media.MediaRoute2Info -&gt; unit" Usage="mediaRouter2.TransferTo route" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("transferTo", "(Landroid/media/MediaRoute2Info;)V", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("transferTo", "(Landroid/media/MediaRoute2Info;)V", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="Android.Media.MediaRoute2Info" />
      </Parameters>
      <Docs>
        <param name="route">the route you want to transfer the current media to. Pass <c>null</c> to
                         stop routing of the current media.</param>
        <summary>Transfers the current media to the given route.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#transferTo(android.media.MediaRoute2Info)" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.transferTo(android.media.MediaRoute2Info)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterControllerCallback">
      <MemberSignature Language="C#" Value="public void UnregisterControllerCallback (Android.Media.MediaRouter2.ControllerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterControllerCallback(class Android.Media.MediaRouter2/ControllerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRouter2.UnregisterControllerCallback(Android.Media.MediaRouter2.ControllerCallback)" />
      <MemberSignature Language="F#" Value="member this.UnregisterControllerCallback : Android.Media.MediaRouter2.ControllerCallback -&gt; unit" Usage="mediaRouter2.UnregisterControllerCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterControllerCallback", "(Landroid/media/MediaRouter2$ControllerCallback;)V", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterControllerCallback", "(Landroid/media/MediaRouter2$ControllerCallback;)V", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.MediaRouter2+ControllerCallback" />
      </Parameters>
      <Docs>
        <param name="callback">To be added.</param>
        <summary>Unregisters a <c>ControllerCallback</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#unregisterControllerCallback(android.media.ControllerCallback)" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.unregisterControllerCallback(android.media.ControllerCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterRouteCallback">
      <MemberSignature Language="C#" Value="public void UnregisterRouteCallback (Android.Media.MediaRouter2.RouteCallback routeCallback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterRouteCallback(class Android.Media.MediaRouter2/RouteCallback routeCallback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRouter2.UnregisterRouteCallback(Android.Media.MediaRouter2.RouteCallback)" />
      <MemberSignature Language="F#" Value="member this.UnregisterRouteCallback : Android.Media.MediaRouter2.RouteCallback -&gt; unit" Usage="mediaRouter2.UnregisterRouteCallback routeCallback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterRouteCallback", "(Landroid/media/MediaRouter2$RouteCallback;)V", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterRouteCallback", "(Landroid/media/MediaRouter2$RouteCallback;)V", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeCallback" Type="Android.Media.MediaRouter2+RouteCallback" />
      </Parameters>
      <Docs>
        <param name="routeCallback">the callback to unregister</param>
        <summary>Unregisters the given callback.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#unregisterRouteCallback(android.media.RouteCallback)" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.unregisterRouteCallback(android.media.RouteCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterTransferCallback">
      <MemberSignature Language="C#" Value="public void UnregisterTransferCallback (Android.Media.MediaRouter2.TransferCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterTransferCallback(class Android.Media.MediaRouter2/TransferCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRouter2.UnregisterTransferCallback(Android.Media.MediaRouter2.TransferCallback)" />
      <MemberSignature Language="F#" Value="member this.UnregisterTransferCallback : Android.Media.MediaRouter2.TransferCallback -&gt; unit" Usage="mediaRouter2.UnregisterTransferCallback callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterTransferCallback", "(Landroid/media/MediaRouter2$TransferCallback;)V", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterTransferCallback", "(Landroid/media/MediaRouter2$TransferCallback;)V", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Media.MediaRouter2+TransferCallback" />
      </Parameters>
      <Docs>
        <param name="callback">the callback to unregister</param>
        <summary>Unregisters the given callback.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRouter2#unregisterTransferCallback(android.media.TransferCallback)" title="Reference documentation">Java documentation for <code>android.media.MediaRouter2.unregisterTransferCallback(android.media.TransferCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
