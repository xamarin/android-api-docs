<Type Name="MediaCodec+IOnFrameRenderedListener" FullName="Android.Media.MediaCodec+IOnFrameRenderedListener">
  <TypeSignature Language="C#" Value="public interface MediaCodec.IOnFrameRenderedListener : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract beforefieldinit MediaCodec/IOnFrameRenderedListener implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaCodec.IOnFrameRenderedListener" />
  <TypeSignature Language="VB.NET" Value="Public Interface MediaCodec.IOnFrameRenderedListener&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public: interface class MediaCodec::IOnFrameRenderedListener : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="F#" Value="type MediaCodec.IOnFrameRenderedListener = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/MediaCodec$OnFrameRenderedListener", "", "Android.Media.MediaCodec/IOnFrameRenderedListenerInvoker", ApiSince=23)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/MediaCodec$OnFrameRenderedListener", "", "Android.Media.MediaCodec/IOnFrameRenderedListenerInvoker", ApiSince=23)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Listener to be called when an output frame has rendered on the output surface</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/MediaCodec.OnFrameRenderedListener" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.OnFrameRenderedListener</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="OnFrameRendered">
      <MemberSignature Language="C#" Value="public void OnFrameRendered (Android.Media.MediaCodec codec, long presentationTimeUs, long nanoTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFrameRendered(class Android.Media.MediaCodec codec, int64 presentationTimeUs, int64 nanoTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodec.IOnFrameRenderedListener.OnFrameRendered(Android.Media.MediaCodec,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnFrameRendered (codec As MediaCodec, presentationTimeUs As Long, nanoTime As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnFrameRendered(Android::Media::MediaCodec ^ codec, long presentationTimeUs, long nanoTime);" />
      <MemberSignature Language="F#" Value="abstract member OnFrameRendered : Android.Media.MediaCodec * int64 * int64 -&gt; unit" Usage="iOnFrameRenderedListener.OnFrameRendered (codec, presentationTimeUs, nanoTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFrameRendered", "(Landroid/media/MediaCodec;JJ)V", "GetOnFrameRendered_Landroid_media_MediaCodec_JJHandler:Android.Media.MediaCodec/IOnFrameRenderedListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onFrameRendered", "(Landroid/media/MediaCodec;JJ)V", "GetOnFrameRendered_Landroid_media_MediaCodec_JJHandler:Android.Media.MediaCodec/IOnFrameRenderedListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="codec" Type="Android.Media.MediaCodec" />
        <Parameter Name="presentationTimeUs" Type="System.Int64" />
        <Parameter Name="nanoTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="codec">the MediaCodec instance</param>
        <param name="presentationTimeUs">the presentation time (media time) of the frame rendered.
                     This is usually the same as specified in <c>#queueInputBuffer</c>; however,
                     some codecs may alter the media time by applying some time-based transformation,
                     such as frame rate conversion. In that case, presentation time corresponds
                     to the actual output frame rendered.</param>
        <param name="nanoTime">The system time when the frame was rendered.</param>
        <summary>Called when an output frame has rendered on the output surface.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodec.OnFrameRenderedListener#onFrameRendered(android.media.MediaCodec,%20long,%20long)" title="Reference documentation">Java documentation for <code>android.media.MediaCodec.OnFrameRenderedListener.onFrameRendered(android.media.MediaCodec, long, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
