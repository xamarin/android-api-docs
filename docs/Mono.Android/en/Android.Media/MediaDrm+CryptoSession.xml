<Type Name="MediaDrm+CryptoSession" FullName="Android.Media.MediaDrm+CryptoSession">
  <TypeSignature Language="C#" Value="public sealed class MediaDrm.CryptoSession : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit MediaDrm/CryptoSession extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/MediaDrm$CryptoSession", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>In addition to supporting decryption of DASH Common Encrypted Media, the
 MediaDrm APIs provide the ability to securely deliver session keys from
 an operator's session key server to a client device, based on the factory-installed
 root of trust, and then perform encrypt, decrypt, sign and verify operations
 with the session key on arbitrary user data.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">In addition to supporting decryption of DASH Common Encrypted Media, the
 MediaDrm APIs provide the ability to securely deliver session keys from
 an operator's session key server to a client device, based on the factory-installed
 root of trust, and then perform encrypt, decrypt, sign and verify operations
 with the session key on arbitrary user data.
 </para>
      <para tool="javadoc-to-mdoc">
 The CryptoSession class implements generic encrypt/decrypt/sign/verify methods
 based on the established session keys.  These keys are exchanged using the
 getKeyRequest/provideKeyResponse methods.
 </para>
      <para tool="javadoc-to-mdoc">
 Applications of this capability could include securing various types of
 purchased or private content, such as applications, books and other media,
 photos or media delivery protocols.
 </para>
      <para tool="javadoc-to-mdoc">
 Operators can create session key servers that are functionally similar to a
 license key server, except that instead of receiving license key requests and
 providing encrypted content keys which are used specifically to decrypt A/V media
 content, the session key server receives session key requests and provides
 encrypted session keys which can be used for general purpose crypto operations.
 </para>
      <para tool="javadoc-to-mdoc">
 A CryptoSession is obtained using <c><see cref="M:Android.Media.MediaDrm.GetCryptoSession(System.Byte[],System.String,System.String)" /></c></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/media/MediaDrm.CryptoSession.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 18" />
  </Docs>
  <Members>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public byte[] Decrypt (byte[] keyid, byte[] input, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Decrypt(unsigned int8[] keyid, unsigned int8[] input, unsigned int8[] iv) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("decrypt", "([B[B[B)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyid" Type="System.Byte[]" />
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyid">specifies which key to use</param>
        <param name="input">the data to encrypt</param>
        <param name="iv">the initialization vector to use for the cipher
</param>
        <summary>Decrypt data using the CryptoSessions's cipher algorithm</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Decrypt data using the CryptoSessions's cipher algorithm</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.CryptoSession.html#decrypt(byte[], byte[], byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public byte[] Encrypt (byte[] keyid, byte[] input, byte[] iv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Encrypt(unsigned int8[] keyid, unsigned int8[] input, unsigned int8[] iv) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("encrypt", "([B[B[B)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyid" Type="System.Byte[]" />
        <Parameter Name="input" Type="System.Byte[]" />
        <Parameter Name="iv" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyid">specifies which key to use</param>
        <param name="input">the data to encrypt</param>
        <param name="iv">the initialization vector to use for the cipher
</param>
        <summary>Encrypt data using the CryptoSession's cipher algorithm</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Encrypt data using the CryptoSession's cipher algorithm</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.CryptoSession.html#encrypt(byte[], byte[], byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="Sign">
      <MemberSignature Language="C#" Value="public byte[] Sign (byte[] keyid, byte[] message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Sign(unsigned int8[] keyid, unsigned int8[] message) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("sign", "([B[B)[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyid" Type="System.Byte[]" />
        <Parameter Name="message" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyid">specifies which key to use</param>
        <param name="message">the data for which a signature is to be computed
</param>
        <summary>Sign data using the CryptoSessions's mac algorithm.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sign data using the CryptoSessions's mac algorithm.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.CryptoSession.html#sign(byte[], byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Verify">
      <MemberSignature Language="C#" Value="public bool Verify (byte[] keyid, byte[] message, byte[] signature);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Verify(unsigned int8[] keyid, unsigned int8[] message, unsigned int8[] signature) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("verify", "([B[B[B)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyid" Type="System.Byte[]" />
        <Parameter Name="message" Type="System.Byte[]" />
        <Parameter Name="signature" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="keyid">specifies which key to use</param>
        <param name="message">the data to verify</param>
        <param name="signature">the reference signature which will be compared with the
        computed signature
</param>
        <summary>Verify a signature using the CryptoSessions's mac algorithm.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Verify a signature using the CryptoSessions's mac algorithm. Return true
 if the signatures match, false if they do no.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaDrm.CryptoSession.html#verify(byte[], byte[], byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
  </Members>
</Type>
