<Type Name="JetPlayer" FullName="Android.Media.JetPlayer">
  <TypeSignature Language="C#" Value="public class JetPlayer : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JetPlayer extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.JetPlayer" />
  <TypeSignature Language="F#" Value="type JetPlayer = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/JetPlayer", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/JetPlayer", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>JetPlayer provides access to JET content playback and control.</summary>
    <remarks>
      <para>JetPlayer provides access to JET content playback and control.</para>
      <para>Please refer to the
            <see href="https://developer.android.com/guide/topics/media/jet/jetcreator_manual">JET Creator User
            Manual</see> for a presentation of the JET interactive music concept and how to use the JetCreator
            tool to create content to be player by JetPlayer.</para>
      <para>Use of the JetPlayer class is based around the playback of a number of JET segments
            sequentially added to a playback FIFO queue. The rendering of the MIDI content stored in each
            segment can be dynamically affected by two mechanisms:
            &lt;ul&gt;
              &lt;li&gt;Tracks in a segment can be muted or unmuted at any moment, individually or through a mask
                  (to change the mute state of multiple tracks at once).
              &lt;li&gt;Parts of tracks in a segment can be played at predefined points in the segment, in order to
                  maintain synchronization with the other tracks in the segment. This is achieved through the
                  notion of "clips", which can be triggered at any time, but that will play only at the right
                  time, as authored in the corresponding JET file.
            &lt;/ul&gt;</para>
      <para>As a result of the rendering and playback of the JET segments, the user of the JetPlayer
            instance can receive notifications from the JET engine relative to:
            &lt;ul&gt;
              &lt;li&gt;Playback state
              &lt;li&gt;Number of segments left to play in the queue
              &lt;li&gt;Application controller events (CC80-83) to mark points in the MIDI segments
            &lt;/ul&gt;</para>
      <para>Use <c>#getJetPlayer()</c> to construct a JetPlayer instance. JetPlayer is a singleton class.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/JetPlayer" title="Reference documentation">Java documentation for <code>android.media.JetPlayer</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected JetPlayer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.JetPlayer : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.JetPlayer" Usage="new Android.Media.JetPlayer (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearQueue">
      <MemberSignature Language="C#" Value="public virtual bool ClearQueue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ClearQueue() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.ClearQueue" />
      <MemberSignature Language="F#" Value="abstract member ClearQueue : unit -&gt; bool&#xA;override this.ClearQueue : unit -&gt; bool" Usage="jetPlayer.ClearQueue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearQueue", "()Z", "GetClearQueueHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearQueue", "()Z", "GetClearQueueHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Empties the segment queue, and clears all clips that are scheduled for playback.</summary>
        <returns>true if the queue was successfully cleared, false otherwise.</returns>
        <remarks>
          <para>Empties the segment queue, and clears all clips that are scheduled for playback.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#clearQueue()" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.clearQueue()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object? Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.Clone" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; Java.Lang.Object" Usage="jetPlayer.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clone", "()Ljava/lang/Object;", "GetCloneHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clone", "()Ljava/lang/Object;", "GetCloneHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cloning a JetPlayer instance is not supported.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Cloning a JetPlayer instance is not supported. Calling clone() will generate an exception.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#clone()" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.clone()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.CloneNotSupportedException" />
      </Docs>
    </Member>
    <Member MemberName="CloseJetFile">
      <MemberSignature Language="C#" Value="public virtual bool CloseJetFile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CloseJetFile() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.CloseJetFile" />
      <MemberSignature Language="F#" Value="abstract member CloseJetFile : unit -&gt; bool&#xA;override this.CloseJetFile : unit -&gt; bool" Usage="jetPlayer.CloseJetFile " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("closeJetFile", "()Z", "GetCloseJetFileHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("closeJetFile", "()Z", "GetCloseJetFileHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Closes the resource containing the JET content.</summary>
        <returns>true if successfully closed, false otherwise.</returns>
        <remarks>
          <para>Closes the resource containing the JET content.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#closeJetFile()" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.closeJetFile()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetJetPlayer">
      <MemberSignature Language="C#" Value="public static Android.Media.JetPlayer? GetJetPlayer ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.JetPlayer GetJetPlayer() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.GetJetPlayer" />
      <MemberSignature Language="F#" Value="static member GetJetPlayer : unit -&gt; Android.Media.JetPlayer" Usage="Android.Media.JetPlayer.GetJetPlayer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getJetPlayer", "()Landroid/media/JetPlayer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getJetPlayer", "()Landroid/media/JetPlayer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.JetPlayer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Factory method for the JetPlayer class.</summary>
        <returns>the singleton JetPlayer instance.</returns>
        <remarks>
          <para>Factory method for the JetPlayer class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#getJetPlayer()" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.getJetPlayer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="JetEvent">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.JetPlayer.JetEventEventArgs&gt; JetEvent;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.JetPlayer/JetEventEventArgs&gt; JetEvent" />
      <MemberSignature Language="DocId" Value="E:Android.Media.JetPlayer.JetEvent" />
      <MemberSignature Language="F#" Value="member this.JetEvent : EventHandler&lt;Android.Media.JetPlayer.JetEventEventArgs&gt; " Usage="member this.JetEvent : System.EventHandler&lt;Android.Media.JetPlayer.JetEventEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.JetPlayer+JetEventEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JetNumQueuedSegmentUpdate">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.JetPlayer.JetNumQueuedSegmentUpdateEventArgs&gt; JetNumQueuedSegmentUpdate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.JetPlayer/JetNumQueuedSegmentUpdateEventArgs&gt; JetNumQueuedSegmentUpdate" />
      <MemberSignature Language="DocId" Value="E:Android.Media.JetPlayer.JetNumQueuedSegmentUpdate" />
      <MemberSignature Language="F#" Value="member this.JetNumQueuedSegmentUpdate : EventHandler&lt;Android.Media.JetPlayer.JetNumQueuedSegmentUpdateEventArgs&gt; " Usage="member this.JetNumQueuedSegmentUpdate : System.EventHandler&lt;Android.Media.JetPlayer.JetNumQueuedSegmentUpdateEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.JetPlayer+JetNumQueuedSegmentUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JetPauseUpdate">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.JetPlayer.JetPauseUpdateEventArgs&gt; JetPauseUpdate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.JetPlayer/JetPauseUpdateEventArgs&gt; JetPauseUpdate" />
      <MemberSignature Language="DocId" Value="E:Android.Media.JetPlayer.JetPauseUpdate" />
      <MemberSignature Language="F#" Value="member this.JetPauseUpdate : EventHandler&lt;Android.Media.JetPlayer.JetPauseUpdateEventArgs&gt; " Usage="member this.JetPauseUpdate : System.EventHandler&lt;Android.Media.JetPlayer.JetPauseUpdateEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.JetPlayer+JetPauseUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JetUserIdUpdate">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.JetPlayer.JetUserIdUpdateEventArgs&gt; JetUserIdUpdate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.JetPlayer/JetUserIdUpdateEventArgs&gt; JetUserIdUpdate" />
      <MemberSignature Language="DocId" Value="E:Android.Media.JetPlayer.JetUserIdUpdate" />
      <MemberSignature Language="F#" Value="member this.JetUserIdUpdate : EventHandler&lt;Android.Media.JetPlayer.JetUserIdUpdateEventArgs&gt; " Usage="member this.JetUserIdUpdate : System.EventHandler&lt;Android.Media.JetPlayer.JetUserIdUpdateEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.JetPlayer+JetUserIdUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.JetPlayer.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.JetPlayer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadJetFile">
      <MemberSignature Language="C#" Value="public virtual bool LoadJetFile (Android.Content.Res.AssetFileDescriptor? afd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadJetFile(class Android.Content.Res.AssetFileDescriptor afd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.LoadJetFile(Android.Content.Res.AssetFileDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member LoadJetFile : Android.Content.Res.AssetFileDescriptor -&gt; bool&#xA;override this.LoadJetFile : Android.Content.Res.AssetFileDescriptor -&gt; bool" Usage="jetPlayer.LoadJetFile afd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("loadJetFile", "(Landroid/content/res/AssetFileDescriptor;)Z", "GetLoadJetFile_Landroid_content_res_AssetFileDescriptor_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("loadJetFile", "(Landroid/content/res/AssetFileDescriptor;)Z", "GetLoadJetFile_Landroid_content_res_AssetFileDescriptor_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="afd" Type="Android.Content.Res.AssetFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="afd">the asset file descriptor.</param>
        <summary>Loads a .</summary>
        <returns>true if loading the .jet file was successful, false if loading failed.</returns>
        <remarks>
          <para>Loads a .jet file from an asset file descriptor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#loadJetFile(android.content.res.AssetFileDescriptor)" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.loadJetFile(android.content.res.AssetFileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="LoadJetFile">
      <MemberSignature Language="C#" Value="public virtual bool LoadJetFile (string? path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadJetFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.LoadJetFile(System.String)" />
      <MemberSignature Language="F#" Value="abstract member LoadJetFile : string -&gt; bool&#xA;override this.LoadJetFile : string -&gt; bool" Usage="jetPlayer.LoadJetFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("loadJetFile", "(Ljava/lang/String;)Z", "GetLoadJetFile_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("loadJetFile", "(Ljava/lang/String;)Z", "GetLoadJetFile_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">the path to the .jet file, for instance "/sdcard/mygame/music.jet".</param>
        <summary>Loads a .</summary>
        <returns>true if loading the .jet file was successful, false if loading failed.</returns>
        <remarks>
          <para>Loads a .jet file from a given path.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#loadJetFile(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.loadJetFile(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="LoadJetFileAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; LoadJetFileAsync (Android.Content.Res.AssetFileDescriptor? afd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; LoadJetFileAsync(class Android.Content.Res.AssetFileDescriptor afd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.LoadJetFileAsync(Android.Content.Res.AssetFileDescriptor)" />
      <MemberSignature Language="F#" Value="member this.LoadJetFileAsync : Android.Content.Res.AssetFileDescriptor -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="jetPlayer.LoadJetFileAsync afd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="afd" Type="Android.Content.Res.AssetFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="afd">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadJetFileAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;bool&gt; LoadJetFileAsync (string? path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;bool&gt; LoadJetFileAsync(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.LoadJetFileAsync(System.String)" />
      <MemberSignature Language="F#" Value="member this.LoadJetFileAsync : string -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="jetPlayer.LoadJetFileAsync path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTracks">
      <MemberSignature Language="C#" Value="public static int MaxTracks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxTracks" />
      <MemberSignature Language="DocId" Value="P:Android.Media.JetPlayer.MaxTracks" />
      <MemberSignature Language="F#" Value="static member MaxTracks : int" Usage="Android.Media.JetPlayer.MaxTracks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaxTracks", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaxTracks", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum number of simultaneous MIDI tracks supported by JetPlayer.</summary>
        <value>the maximum number of simultaneous MIDI tracks supported by JetPlayer.</value>
        <remarks>
          <para>Gets the maximum number of simultaneous MIDI tracks supported by JetPlayer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#getMaxTracks()" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.getMaxTracks()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public virtual bool Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.Pause" />
      <MemberSignature Language="F#" Value="abstract member Pause : unit -&gt; bool&#xA;override this.Pause : unit -&gt; bool" Usage="jetPlayer.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pause", "()Z", "GetPauseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pause", "()Z", "GetPauseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pauses the playback of the JET segment queue.</summary>
        <returns>true if rendering and playback is successfully paused, false otherwise.</returns>
        <remarks>
          <para>Pauses the playback of the JET segment queue.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#pause()" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.pause()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Play">
      <MemberSignature Language="C#" Value="public virtual bool Play ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Play() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.Play" />
      <MemberSignature Language="F#" Value="abstract member Play : unit -&gt; bool&#xA;override this.Play : unit -&gt; bool" Usage="jetPlayer.Play " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("play", "()Z", "GetPlayHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("play", "()Z", "GetPlayHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts playing the JET segment queue.</summary>
        <returns>true if rendering and playback is successfully started, false otherwise.</returns>
        <remarks>
          <para>Starts playing the JET segment queue.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#play()" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.play()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="QueueJetSegment">
      <MemberSignature Language="C#" Value="public virtual bool QueueJetSegment (int segmentNum, int libNum, int repeatCount, int transpose, int muteFlags, sbyte userID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool QueueJetSegment(int32 segmentNum, int32 libNum, int32 repeatCount, int32 transpose, int32 muteFlags, int8 userID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.QueueJetSegment(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.SByte)" />
      <MemberSignature Language="F#" Value="abstract member QueueJetSegment : int * int * int * int * int * sbyte -&gt; bool&#xA;override this.QueueJetSegment : int * int * int * int * int * sbyte -&gt; bool" Usage="jetPlayer.QueueJetSegment (segmentNum, libNum, repeatCount, transpose, muteFlags, userID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queueJetSegment", "(IIIIIB)Z", "GetQueueJetSegment_IIIIIBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queueJetSegment", "(IIIIIB)Z", "GetQueueJetSegment_IIIIIBHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="segmentNum" Type="System.Int32" />
        <Parameter Name="libNum" Type="System.Int32" />
        <Parameter Name="repeatCount" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Int32" />
        <Parameter Name="muteFlags" Type="System.Int32" />
        <Parameter Name="userID" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="segmentNum">the identifier of the segment.</param>
        <param name="libNum">the index of the sound bank associated with the segment. Use -1 to indicate
               that no sound bank (DLS file) is associated with this segment, in which case JET will use
               the General MIDI library.</param>
        <param name="repeatCount">the number of times the segment will be repeated. 0 means the segment will
               only play once. -1 means the segment will repeat indefinitely.</param>
        <param name="transpose">the amount of pitch transposition. Set to 0 for normal playback. 
               Range is -12 to +12.</param>
        <param name="muteFlags">a bitmask to specify which MIDI tracks will be muted during playback. Bit 0
               affects track 0, bit 1 affects track 1 etc.</param>
        <param name="userID">a value specified by the application that uniquely identifies the segment. 
               this value is received in the
               <c>OnJetEventListener#onJetUserIdUpdate(JetPlayer, int, int)</c> event listener method.
               Normally, the application will keep a byte value that is incremented each time a new
               segment is queued up. This can be used to look up any special characteristics of that
               track including trigger clips and mute flags.</param>
        <summary>Queues the specified segment in the JET queue.</summary>
        <returns>true if the segment was successfully queued, false if the queue is full or if the
               parameters are invalid.</returns>
        <remarks>
          <para>Queues the specified segment in the JET queue.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#queueJetSegment(int,%20int,%20int,%20int,%20int,%20byte)" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.queueJetSegment(int, int, int, int, int, byte)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="QueueJetSegmentMuteArray">
      <MemberSignature Language="C#" Value="public virtual bool QueueJetSegmentMuteArray (int segmentNum, int libNum, int repeatCount, int transpose, bool[]? muteArray, sbyte userID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool QueueJetSegmentMuteArray(int32 segmentNum, int32 libNum, int32 repeatCount, int32 transpose, bool[] muteArray, int8 userID) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.QueueJetSegmentMuteArray(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean[],System.SByte)" />
      <MemberSignature Language="F#" Value="abstract member QueueJetSegmentMuteArray : int * int * int * int * bool[] * sbyte -&gt; bool&#xA;override this.QueueJetSegmentMuteArray : int * int * int * int * bool[] * sbyte -&gt; bool" Usage="jetPlayer.QueueJetSegmentMuteArray (segmentNum, libNum, repeatCount, transpose, muteArray, userID)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queueJetSegmentMuteArray", "(IIII[ZB)Z", "GetQueueJetSegmentMuteArray_IIIIarrayZBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queueJetSegmentMuteArray", "(IIII[ZB)Z", "GetQueueJetSegmentMuteArray_IIIIarrayZBHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="segmentNum" Type="System.Int32" />
        <Parameter Name="libNum" Type="System.Int32" />
        <Parameter Name="repeatCount" Type="System.Int32" />
        <Parameter Name="transpose" Type="System.Int32" />
        <Parameter Name="muteArray" Type="System.Boolean[]" />
        <Parameter Name="userID" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="segmentNum">the identifier of the segment.</param>
        <param name="libNum">the index of the soundbank associated with the segment. Use -1 to indicate that
               no sound bank (DLS file) is associated with this segment, in which case JET will use
               the General MIDI library.</param>
        <param name="repeatCount">the number of times the segment will be repeated. 0 means the segment will
               only play once. -1 means the segment will repeat indefinitely.</param>
        <param name="transpose">the amount of pitch transposition. Set to 0 for normal playback. 
               Range is -12 to +12.</param>
        <param name="muteArray">an array of booleans to specify which MIDI tracks will be muted during
               playback. The value at index 0 affects track 0, value at index 1 affects track 1 etc. 
               The length of the array must be <c>#getMaxTracks()</c> for the call to succeed.</param>
        <param name="userID">a value specified by the application that uniquely identifies the segment. 
               this value is received in the
               <c>OnJetEventListener#onJetUserIdUpdate(JetPlayer, int, int)</c> event listener method.
               Normally, the application will keep a byte value that is incremented each time a new
               segment is queued up. This can be used to look up any special characteristics of that
               track including trigger clips and mute flags.</param>
        <summary>Queues the specified segment in the JET queue.</summary>
        <returns>true if the segment was successfully queued, false if the queue is full or if the
               parameters are invalid.</returns>
        <remarks>
          <para>Queues the specified segment in the JET queue.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#queueJetSegmentMuteArray(int,%20int,%20int,%20int,%20boolean[],%20byte)" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.queueJetSegmentMuteArray(int, int, int, int, boolean[], byte)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.Release" />
      <MemberSignature Language="F#" Value="abstract member Release : unit -&gt; unit&#xA;override this.Release : unit -&gt; unit" Usage="jetPlayer.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "GetReleaseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "()V", "GetReleaseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops the current JET playback, and releases all associated native resources.</summary>
        <remarks>
          <para>Stops the current JET playback, and releases all associated native resources.
            The object can no longer be used and the reference should be set to null
            after a call to release().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#release()" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetEventListener">
      <MemberSignature Language="C#" Value="public virtual void SetEventListener (Android.Media.JetPlayer.IOnJetEventListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEventListener(class Android.Media.JetPlayer/IOnJetEventListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.SetEventListener(Android.Media.JetPlayer.IOnJetEventListener)" />
      <MemberSignature Language="F#" Value="abstract member SetEventListener : Android.Media.JetPlayer.IOnJetEventListener -&gt; unit&#xA;override this.SetEventListener : Android.Media.JetPlayer.IOnJetEventListener -&gt; unit" Usage="jetPlayer.SetEventListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEventListener", "(Landroid/media/JetPlayer$OnJetEventListener;)V", "GetSetEventListener_Landroid_media_JetPlayer_OnJetEventListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEventListener", "(Landroid/media/JetPlayer$OnJetEventListener;)V", "GetSetEventListener_Landroid_media_JetPlayer_OnJetEventListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.JetPlayer+IOnJetEventListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>Sets the listener JetPlayer notifies when a JET event is generated by the rendering and
 playback engine.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetEventListener">
      <MemberSignature Language="C#" Value="public virtual void SetEventListener (Android.Media.JetPlayer.IOnJetEventListener? listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEventListener(class Android.Media.JetPlayer/IOnJetEventListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.SetEventListener(Android.Media.JetPlayer.IOnJetEventListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member SetEventListener : Android.Media.JetPlayer.IOnJetEventListener * Android.OS.Handler -&gt; unit&#xA;override this.SetEventListener : Android.Media.JetPlayer.IOnJetEventListener * Android.OS.Handler -&gt; unit" Usage="jetPlayer.SetEventListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEventListener", "(Landroid/media/JetPlayer$OnJetEventListener;Landroid/os/Handler;)V", "GetSetEventListener_Landroid_media_JetPlayer_OnJetEventListener_Landroid_os_Handler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEventListener", "(Landroid/media/JetPlayer$OnJetEventListener;Landroid/os/Handler;)V", "GetSetEventListener_Landroid_media_JetPlayer_OnJetEventListener_Landroid_os_Handler_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.JetPlayer+IOnJetEventListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <param name="handler">the Handler that will receive the event notification messages.
</param>
        <summary>Sets the listener JetPlayer notifies when a JET event is generated by the rendering and
 playback engine.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetMuteArray">
      <MemberSignature Language="C#" Value="public virtual bool SetMuteArray (bool[]? muteArray, bool sync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetMuteArray(bool[] muteArray, bool sync) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.SetMuteArray(System.Boolean[],System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetMuteArray : bool[] * bool -&gt; bool&#xA;override this.SetMuteArray : bool[] * bool -&gt; bool" Usage="jetPlayer.SetMuteArray (muteArray, sync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMuteArray", "([ZZ)Z", "GetSetMuteArray_arrayZZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMuteArray", "([ZZ)Z", "GetSetMuteArray_arrayZZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="muteArray" Type="System.Boolean[]" />
        <Parameter Name="sync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="muteArray">an array of booleans to specify which MIDI tracks are muted. The value at
               index 0 affects track 0, value at index 1 affects track 1 etc. 
               The length of the array must be <c>#getMaxTracks()</c> for the call to succeed.</param>
        <param name="sync">if false, the new mute flags will be applied as soon as possible by the JET
               render and playback engine. If true, the mute flags will be updated at the start of the
               next segment. If the segment is repeated, the flags will take effect the next time 
               segment is repeated.</param>
        <summary>Modifies the mute flags for the current active segment.</summary>
        <returns>true if the mute flags were successfully updated, false otherwise.</returns>
        <remarks>
          <para>Modifies the mute flags for the current active segment.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#setMuteArray(boolean[],%20boolean)" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.setMuteArray(boolean[], boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetMuteFlag">
      <MemberSignature Language="C#" Value="public virtual bool SetMuteFlag (int trackId, bool muteFlag, bool sync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetMuteFlag(int32 trackId, bool muteFlag, bool sync) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.SetMuteFlag(System.Int32,System.Boolean,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetMuteFlag : int * bool * bool -&gt; bool&#xA;override this.SetMuteFlag : int * bool * bool -&gt; bool" Usage="jetPlayer.SetMuteFlag (trackId, muteFlag, sync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMuteFlag", "(IZZ)Z", "GetSetMuteFlag_IZZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMuteFlag", "(IZZ)Z", "GetSetMuteFlag_IZZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trackId" Type="System.Int32" />
        <Parameter Name="muteFlag" Type="System.Boolean" />
        <Parameter Name="sync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="trackId">the index of the track to mute.</param>
        <param name="muteFlag">set to true to mute, false to unmute.</param>
        <param name="sync">if false, the new mute flags will be applied as soon as possible by the JET
               render and playback engine. If true, the mute flag will be updated at the start of the
               next segment. If the segment is repeated, the flag will take effect the next time 
               segment is repeated.</param>
        <summary>Mutes or unmutes a single track.</summary>
        <returns>true if the mute flag was successfully updated, false otherwise.</returns>
        <remarks>
          <para>Mutes or unmutes a single track.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#setMuteFlag(int,%20boolean,%20boolean)" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.setMuteFlag(int, boolean, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetMuteFlags">
      <MemberSignature Language="C#" Value="public virtual bool SetMuteFlags (int muteFlags, bool sync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetMuteFlags(int32 muteFlags, bool sync) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.SetMuteFlags(System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetMuteFlags : int * bool -&gt; bool&#xA;override this.SetMuteFlags : int * bool -&gt; bool" Usage="jetPlayer.SetMuteFlags (muteFlags, sync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMuteFlags", "(IZ)Z", "GetSetMuteFlags_IZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMuteFlags", "(IZ)Z", "GetSetMuteFlags_IZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="muteFlags" Type="System.Int32" />
        <Parameter Name="sync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="muteFlags">a bitmask to specify which MIDI tracks are muted. Bit 0 affects track 0,
               bit 1 affects track 1 etc.</param>
        <param name="sync">if false, the new mute flags will be applied as soon as possible by the JET
               render and playback engine. If true, the mute flags will be updated at the start of the
               next segment. If the segment is repeated, the flags will take effect the next time 
               segment is repeated.</param>
        <summary>Modifies the mute flags.</summary>
        <returns>true if the mute flags were successfully updated, false otherwise.</returns>
        <remarks>
          <para>Modifies the mute flags.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#setMuteFlags(int,%20boolean)" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.setMuteFlags(int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.JetPlayer.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.JetPlayer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.JetPlayer.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.JetPlayer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerClip">
      <MemberSignature Language="C#" Value="public virtual bool TriggerClip (int clipId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TriggerClip(int32 clipId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.JetPlayer.TriggerClip(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member TriggerClip : int -&gt; bool&#xA;override this.TriggerClip : int -&gt; bool" Usage="jetPlayer.TriggerClip clipId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("triggerClip", "(I)Z", "GetTriggerClip_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("triggerClip", "(I)Z", "GetTriggerClip_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clipId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="clipId">the identifier of the clip to trigger.</param>
        <summary>Schedules the playback of a clip.</summary>
        <returns>true if the clip was successfully triggered, false otherwise.</returns>
        <remarks>
          <para>Schedules the playback of a clip.
            This will automatically update the mute flags in sync with the JET Clip Marker (controller 
            103). The parameter clipID must be in the range of 0-63. After the call to triggerClip, when
            JET next encounters a controller event 103 with bits 0-5 of the value equal to clipID and 
            bit 6 set to 1, it will automatically unmute the track containing the controller event.
            When JET encounters the complementary controller event 103 with bits 0-5 of the value equal
            to clipID and bit 6 set to 0, it will mute the track again.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/JetPlayer#triggerClip(int)" title="Reference documentation">Java documentation for <code>android.media.JetPlayer.triggerClip(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
  </Members>
</Type>
