<Type Name="ImageWriter" FullName="Android.Media.ImageWriter">
  <TypeSignature Language="C#" Value="public class ImageWriter : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IAutoCloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageWriter extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IAutoCloseable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.ImageWriter" />
  <TypeSignature Language="F#" Value="type ImageWriter = class&#xA;    inherit Object&#xA;    interface IAutoCloseable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IAutoCloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/ImageWriter", ApiSince=23, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/ImageWriter", ApiSince=23, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The ImageWriter class allows an application to produce Image data into a
            <c>android.view.Surface</c>, and have it be consumed by another component
            like <c>android.hardware.camera2.CameraDevice CameraDevice</c>.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/ImageWriter" title="Reference documentation">Java documentation for <code>android.media.ImageWriter</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ImageWriter (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.ImageWriter.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.ImageWriter : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.ImageWriter" Usage="new Android.Media.ImageWriter (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.ImageWriter.Close" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="imageWriter.Close " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IAutoCloseable.Close</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("close", "()V", "GetCloseHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("close", "()V", "GetCloseHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Free up all the resources associated with this ImageWriter.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/ImageWriter#close()" title="Reference documentation">Java documentation for <code>android.media.ImageWriter.close()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DequeueInputImage">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Image? DequeueInputImage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Media.Image DequeueInputImage() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.ImageWriter.DequeueInputImage" />
      <MemberSignature Language="F#" Value="abstract member DequeueInputImage : unit -&gt; Android.Media.Image&#xA;override this.DequeueInputImage : unit -&gt; Android.Media.Image" Usage="imageWriter.DequeueInputImage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dequeueInputImage", "()Landroid/media/Image;", "GetDequeueInputImageHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dequeueInputImage", "()Landroid/media/Image;", "GetDequeueInputImageHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Image</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dequeue the next available input Image for the application to produce
            data into.</summary>
        <returns>The next available input Image from this ImageWriter.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/ImageWriter#dequeueInputImage()" title="Reference documentation">Java documentation for <code>android.media.ImageWriter.dequeueInputImage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.ImageFormatType Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Graphics.ImageFormatType Format" />
      <MemberSignature Language="DocId" Value="P:Android.Media.ImageWriter.Format" />
      <MemberSignature Language="F#" Value="member this.Format : Android.Graphics.ImageFormatType" Usage="Android.Media.ImageWriter.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFormat", "()I", "GetGetFormatHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFormat", "()I", "GetGetFormatHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.ImageFormatType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the ImageWriter format.</summary>
        <value>The ImageWriter format.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/ImageWriter#getFormat()" title="Reference documentation">Java documentation for <code>android.media.ImageWriter.getFormat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.ImageWriter.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.ImageWriter.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxImages">
      <MemberSignature Language="C#" Value="public virtual int MaxImages { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxImages" />
      <MemberSignature Language="DocId" Value="P:Android.Media.ImageWriter.MaxImages" />
      <MemberSignature Language="F#" Value="member this.MaxImages : int" Usage="Android.Media.ImageWriter.MaxImages" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaxImages", "()I", "GetGetMaxImagesHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaxImages", "()I", "GetGetMaxImagesHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Maximum number of Images that can be dequeued from the ImageWriter
            simultaneously (for example, with <c>#dequeueInputImage()</c>).</summary>
        <value>Maximum number of Images that can be dequeued from this
                    ImageWriter.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/ImageWriter#getMaxImages()" title="Reference documentation">Java documentation for <code>android.media.ImageWriter.getMaxImages()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Media.ImageWriter NewInstance (Android.Views.Surface surface, int maxImages);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.ImageWriter NewInstance(class Android.Views.Surface surface, int32 maxImages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.ImageWriter.NewInstance(Android.Views.Surface,System.Int32)" />
      <MemberSignature Language="F#" Value="static member NewInstance : Android.Views.Surface * int -&gt; Android.Media.ImageWriter" Usage="Android.Media.ImageWriter.NewInstance (surface, maxImages)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Landroid/view/Surface;I)Landroid/media/ImageWriter;", "", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Landroid/view/Surface;I)Landroid/media/ImageWriter;", "", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ImageWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Views.Surface" />
        <Parameter Name="maxImages" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="surface">The destination Surface this writer produces Image data
                       into.</param>
        <param name="maxImages">The maximum number of Images the user will want to
                       access simultaneously for producing Image data. This should be
                       as small as possible to limit memory use. Once maxImages
                       Images are dequeued by the user, one of them has to be queued
                       back before a new Image can be dequeued for access via
                       <c>#dequeueInputImage()</c>.</param>
        <summary>Create a new ImageWriter.</summary>
        <returns>a new ImageWriter instance.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/ImageWriter#newInstance(android.view.Surface,%20int)" title="Reference documentation">Java documentation for <code>android.media.ImageWriter.newInstance(android.view.Surface, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Media.ImageWriter NewInstance (Android.Views.Surface surface, int maxImages, Android.Graphics.ImageFormatType format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Media.ImageWriter NewInstance(class Android.Views.Surface surface, int32 maxImages, valuetype Android.Graphics.ImageFormatType format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.ImageWriter.NewInstance(Android.Views.Surface,System.Int32,Android.Graphics.ImageFormatType)" />
      <MemberSignature Language="F#" Value="static member NewInstance : Android.Views.Surface * int * Android.Graphics.ImageFormatType -&gt; Android.Media.ImageWriter" Usage="Android.Media.ImageWriter.NewInstance (surface, maxImages, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "(Landroid/view/Surface;II)Landroid/media/ImageWriter;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "(Landroid/view/Surface;II)Landroid/media/ImageWriter;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ImageWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Views.Surface" />
        <Parameter Name="maxImages" Type="System.Int32" />
        <Parameter Name="format" Type="Android.Graphics.ImageFormatType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <param name="surface">The destination Surface this writer produces Image data
                       into.</param>
        <param name="maxImages">The maximum number of Images the user will want to
                       access simultaneously for producing Image data. This should be
                       as small as possible to limit memory use. Once maxImages
                       Images are dequeued by the user, one of them has to be queued
                       back before a new Image can be dequeued for access via
                       <c>#dequeueInputImage()</c>.</param>
        <summary>Create a new ImageWriter.</summary>
        <returns>a new ImageWriter instance.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/ImageWriter#newInstance(android.view.Surface,%20int)" title="Reference documentation">Java documentation for <code>android.media.ImageWriter.newInstance(android.view.Surface, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueueInputImage">
      <MemberSignature Language="C#" Value="public virtual void QueueInputImage (Android.Media.Image? image);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QueueInputImage(class Android.Media.Image image) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.ImageWriter.QueueInputImage(Android.Media.Image)" />
      <MemberSignature Language="F#" Value="abstract member QueueInputImage : Android.Media.Image -&gt; unit&#xA;override this.QueueInputImage : Android.Media.Image -&gt; unit" Usage="imageWriter.QueueInputImage image" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queueInputImage", "(Landroid/media/Image;)V", "GetQueueInputImage_Landroid_media_Image_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queueInputImage", "(Landroid/media/Image;)V", "GetQueueInputImage_Landroid_media_Image_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="image" Type="Android.Media.Image" />
      </Parameters>
      <Docs>
        <param name="image">The Image to be queued back to ImageWriter for future
                       consumption.</param>
        <summary>Queue an input <c>Image</c> back to ImageWriter for the downstream
            consumer to access.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/ImageWriter#queueInputImage(android.media.Image)" title="Reference documentation">Java documentation for <code>android.media.ImageWriter.queueInputImage(android.media.Image)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnImageReleasedListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnImageReleasedListener (Android.Media.ImageWriter.IOnImageReleasedListener? listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnImageReleasedListener(class Android.Media.ImageWriter/IOnImageReleasedListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.ImageWriter.SetOnImageReleasedListener(Android.Media.ImageWriter.IOnImageReleasedListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member SetOnImageReleasedListener : Android.Media.ImageWriter.IOnImageReleasedListener * Android.OS.Handler -&gt; unit&#xA;override this.SetOnImageReleasedListener : Android.Media.ImageWriter.IOnImageReleasedListener * Android.OS.Handler -&gt; unit" Usage="imageWriter.SetOnImageReleasedListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnImageReleasedListener", "(Landroid/media/ImageWriter$OnImageReleasedListener;Landroid/os/Handler;)V", "GetSetOnImageReleasedListener_Landroid_media_ImageWriter_OnImageReleasedListener_Landroid_os_Handler_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnImageReleasedListener", "(Landroid/media/ImageWriter$OnImageReleasedListener;Landroid/os/Handler;)V", "GetSetOnImageReleasedListener_Landroid_media_ImageWriter_OnImageReleasedListener_Landroid_os_Handler_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.ImageWriter+IOnImageReleasedListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">The listener that will be run.</param>
        <param name="handler">The handler on which the listener should be invoked, or
                       null if the listener should be invoked on the calling thread's
                       looper.</param>
        <summary>Register a listener to be invoked when an input Image is returned to the
            ImageWriter.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/ImageWriter#setOnImageReleasedListener(android.media.OnImageReleasedListener,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.ImageWriter.setOnImageReleasedListener(android.media.OnImageReleasedListener, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.ImageWriter.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.ImageWriter.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.ImageWriter.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.ImageWriter.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
