<Type Name="MediaRouterCallbackFlags" FullName="Android.Media.MediaRouterCallbackFlags">
  <TypeSignature Language="C#" Value="public enum MediaRouterCallbackFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MediaRouterCallbackFlags extends System.Enum" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumerates values returned by  several types and taken as a parameter of the <see cref="F:Android.Media.MediaRouter.AddCallback" /> member.</summary>
    <remarks>Enumerates values returned by the following: <list type="bullet"><item><term><see cref="F:Android.Media.MediaRouter.CallbackFlagPerformActiveScan" /></term></item><item><term><see cref="F:Android.Media.MediaRouter.CallbackFlagUnfilteredEvents" /></term></item><item><term><see cref="F:Android.Media.MediaRouterCallbackFlags.PerformActiveScan" /></term></item><item><term><see cref="F:Android.Media.MediaRouterCallbackFlags.UnfilteredEvents" /></term></item></list>
 and taken as a parameter of the <see cref="F:Android.Media.MediaRouter.AddCallback" /> member.</remarks>
  </Docs>
  <Members>
    <Member MemberName="PerformActiveScan">
      <MemberSignature Language="C#" Value="PerformActiveScan" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaRouterCallbackFlags PerformActiveScan = int32(1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouterCallbackFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for <c><see cref="M:Android.Media.MediaRouter.AddCallback(Android.Media.MediaRouteType,Android.Media.MediaRouter.Callback)" /></c>: Actively scan for routes while this callback
 is registered.
 </para>
          <para tool="javadoc-to-mdoc">
 When this flag is specified, the media router will actively scan for new
 routes.  Certain routes, such as wifi display routes, may not be discoverable
 except when actively scanning.  This flag is typically used when the route picker
 dialog has been opened by the user to ensure that the route information is
 up to date.
 </para>
          <para tool="javadoc-to-mdoc">
 Active scanning may consume a significant amount of power and may have intrusive
 effects on wireless connectivity.  Therefore it is important that active scanning
 only be requested when it is actually needed to satisfy a user request to
 discover and select a new route.
 </para>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="UnfilteredEvents">
      <MemberSignature Language="C#" Value="UnfilteredEvents" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaRouterCallbackFlags UnfilteredEvents = int32(2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRouterCallbackFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <para tool="javadoc-to-mdoc">Flag for <c><see cref="M:Android.Media.MediaRouter.AddCallback(Android.Media.MediaRouteType,Android.Media.MediaRouter.Callback)" /></c>: Do not filter route events.
 </para>
          <para tool="javadoc-to-mdoc">
 When this flag is specified, the callback will be invoked for event that affect any
 route event if they do not match the callback's associated media route selector.
 </para>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>
