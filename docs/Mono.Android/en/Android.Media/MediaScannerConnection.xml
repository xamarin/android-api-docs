<Type Name="MediaScannerConnection" FullName="Android.Media.MediaScannerConnection">
  <TypeSignature Language="C#" Value="public class MediaScannerConnection : Java.Lang.Object, Android.Content.IServiceConnection, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaScannerConnection extends Java.Lang.Object implements class Android.Content.IServiceConnection, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaScannerConnection" />
  <TypeSignature Language="VB.NET" Value="Public Class MediaScannerConnection&#xA;Inherits Object&#xA;Implements IDisposable, IJavaPeerable, IServiceConnection" />
  <TypeSignature Language="C++ CLI" Value="public ref class MediaScannerConnection : Java::Lang::Object, Android::Content::IServiceConnection, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="F#" Value="type MediaScannerConnection = class&#xA;    inherit Object&#xA;    interface IServiceConnection&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Content.IServiceConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/MediaScannerConnection", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/MediaScannerConnection", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>MediaScannerConnection provides a way for applications to pass a
            newly created or downloaded media file to the media scanner service.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/MediaScannerConnection" title="Reference documentation">Java documentation for <code>android.media.MediaScannerConnection</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaScannerConnection (Android.Content.Context? context, Android.Media.MediaScannerConnection.IMediaScannerConnectionClient? client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Media.MediaScannerConnection/IMediaScannerConnectionClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.#ctor(Android.Content.Context,Android.Media.MediaScannerConnection.IMediaScannerConnectionClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As Context, client As MediaScannerConnection.IMediaScannerConnectionClient)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MediaScannerConnection(Android::Content::Context ^ context, Android::Media::MediaScannerConnection::IMediaScannerConnectionClient ^ client);" />
      <MemberSignature Language="F#" Value="new Android.Media.MediaScannerConnection : Android.Content.Context * Android.Media.MediaScannerConnection.IMediaScannerConnectionClient -&gt; Android.Media.MediaScannerConnection" Usage="new Android.Media.MediaScannerConnection (context, client)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/media/MediaScannerConnection$MediaScannerConnectionClient;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/media/MediaScannerConnection$MediaScannerConnectionClient;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="client" Type="Android.Media.MediaScannerConnection+IMediaScannerConnectionClient" />
      </Parameters>
      <Docs>
        <param name="context">the Context object, required for establishing a connection to
            the media scanner service.</param>
        <param name="client">an optional object implementing the MediaScannerConnectionClient
            interface, for receiving notifications from the media scanner.</param>
        <summary>Constructs a new MediaScannerConnection object.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaScannerConnection#MediaScannerConnection(android.content.Context,%20android.media.MediaScannerConnectionClient)" title="Reference documentation">Java documentation for <code>android.media.MediaScannerConnection.MediaScannerConnection(android.content.Context, android.media.MediaScannerConnectionClient)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaScannerConnection (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MediaScannerConnection(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="F#" Value="new Android.Media.MediaScannerConnection : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.MediaScannerConnection" Usage="new Android.Media.MediaScannerConnection (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.Connect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Connect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Connect();" />
      <MemberSignature Language="F#" Value="abstract member Connect : unit -&gt; unit&#xA;override this.Connect : unit -&gt; unit" Usage="mediaScannerConnection.Connect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("connect", "()V", "GetConnectHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("connect", "()V", "GetConnectHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initiates a connection to the media scanner service.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaScannerConnection#connect()" title="Reference documentation">Java documentation for <code>android.media.MediaScannerConnection.connect()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public virtual void Disconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Disconnect() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.Disconnect" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Disconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Disconnect();" />
      <MemberSignature Language="F#" Value="abstract member Disconnect : unit -&gt; unit&#xA;override this.Disconnect : unit -&gt; unit" Usage="mediaScannerConnection.Disconnect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("disconnect", "()V", "GetDisconnectHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("disconnect", "()V", "GetDisconnectHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the connection to the media scanner service.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaScannerConnection#disconnect()" title="Reference documentation">Java documentation for <code>android.media.MediaScannerConnection.disconnect()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public virtual bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaScannerConnection.IsConnected" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsConnected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConnected : bool" Usage="Android.Media.MediaScannerConnection.IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether we are connected to the media scanner service</summary>
        <value>true if we are connected, false otherwise</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaScannerConnection#isConnected()" title="Reference documentation">Java documentation for <code>android.media.MediaScannerConnection.isConnected()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaScannerConnection.JniPeerMembers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.MediaScannerConnection.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServiceConnected">
      <MemberSignature Language="C#" Value="public virtual void OnServiceConnected (Android.Content.ComponentName? className, Android.OS.IBinder? service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnServiceConnected(class Android.Content.ComponentName className, class Android.OS.IBinder service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.OnServiceConnected(Android.Content.ComponentName,Android.OS.IBinder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnServiceConnected (className As ComponentName, service As IBinder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnServiceConnected(Android::Content::ComponentName ^ className, Android::OS::IBinder ^ service);" />
      <MemberSignature Language="F#" Value="abstract member OnServiceConnected : Android.Content.ComponentName * Android.OS.IBinder -&gt; unit&#xA;override this.OnServiceConnected : Android.Content.ComponentName * Android.OS.IBinder -&gt; unit" Usage="mediaScannerConnection.OnServiceConnected (className, service)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Content.IServiceConnection.OnServiceConnected(Android.Content.ComponentName,Android.OS.IBinder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onServiceConnected", "(Landroid/content/ComponentName;Landroid/os/IBinder;)V", "GetOnServiceConnected_Landroid_content_ComponentName_Landroid_os_IBinder_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onServiceConnected", "(Landroid/content/ComponentName;Landroid/os/IBinder;)V", "GetOnServiceConnected_Landroid_content_ComponentName_Landroid_os_IBinder_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="service" Type="Android.OS.IBinder" />
      </Parameters>
      <Docs>
        <param name="className">The concrete component name of the service that has
 been connected.</param>
        <param name="service">The IBinder of the Service's communication channel,
 which you can now make calls on.
</param>
        <summary>Part of the ServiceConnection interface.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaScannerConnection#onServiceConnected(android.content.ComponentName,%20android.os.IBinder)" title="Reference documentation">Java documentation for <code>android.media.MediaScannerConnection.onServiceConnected(android.content.ComponentName, android.os.IBinder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnServiceDisconnected">
      <MemberSignature Language="C#" Value="public virtual void OnServiceDisconnected (Android.Content.ComponentName? className);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnServiceDisconnected(class Android.Content.ComponentName className) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.OnServiceDisconnected(Android.Content.ComponentName)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnServiceDisconnected (className As ComponentName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnServiceDisconnected(Android::Content::ComponentName ^ className);" />
      <MemberSignature Language="F#" Value="abstract member OnServiceDisconnected : Android.Content.ComponentName -&gt; unit&#xA;override this.OnServiceDisconnected : Android.Content.ComponentName -&gt; unit" Usage="mediaScannerConnection.OnServiceDisconnected className" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Content.IServiceConnection.OnServiceDisconnected(Android.Content.ComponentName)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onServiceDisconnected", "(Landroid/content/ComponentName;)V", "GetOnServiceDisconnected_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onServiceDisconnected", "(Landroid/content/ComponentName;)V", "GetOnServiceDisconnected_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="className">The concrete component name of the service whose
 connection has been lost.
</param>
        <summary>Part of the ServiceConnection interface.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaScannerConnection#onServiceDisconnected(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.media.MediaScannerConnection.onServiceDisconnected(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScanFile">
      <MemberSignature Language="C#" Value="public virtual void ScanFile (string? path, string? mimeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScanFile(string path, string mimeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.ScanFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ScanFile (path As String, mimeType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ScanFile(System::String ^ path, System::String ^ mimeType);" />
      <MemberSignature Language="F#" Value="abstract member ScanFile : string * string -&gt; unit&#xA;override this.ScanFile : string * string -&gt; unit" Usage="mediaScannerConnection.ScanFile (path, mimeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("scanFile", "(Ljava/lang/String;Ljava/lang/String;)V", "GetScanFile_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("scanFile", "(Ljava/lang/String;Ljava/lang/String;)V", "GetScanFile_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mimeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">the path to the file to be scanned.</param>
        <param name="mimeType">an optional mimeType for the file.
            If mimeType is null, then the mimeType will be inferred from the file extension.</param>
        <summary>Requests the media scanner to scan a file.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaScannerConnection#scanFile(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaScannerConnection.scanFile(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScanFile">
      <MemberSignature Language="C#" Value="public static void ScanFile (Android.Content.Context? context, string[]? paths, string[]? mimeTypes, Android.Media.MediaScannerConnection.IOnScanCompletedListener? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ScanFile(class Android.Content.Context context, string[] paths, string[] mimeTypes, class Android.Media.MediaScannerConnection/IOnScanCompletedListener callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.ScanFile(Android.Content.Context,System.String[],System.String[],Android.Media.MediaScannerConnection.IOnScanCompletedListener)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ScanFile (context As Context, paths As String(), mimeTypes As String(), callback As MediaScannerConnection.IOnScanCompletedListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ScanFile(Android::Content::Context ^ context, cli::array &lt;System::String ^&gt; ^ paths, cli::array &lt;System::String ^&gt; ^ mimeTypes, Android::Media::MediaScannerConnection::IOnScanCompletedListener ^ callback);" />
      <MemberSignature Language="F#" Value="static member ScanFile : Android.Content.Context * string[] * string[] * Android.Media.MediaScannerConnection.IOnScanCompletedListener -&gt; unit" Usage="Android.Media.MediaScannerConnection.ScanFile (context, paths, mimeTypes, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("scanFile", "(Landroid/content/Context;[Ljava/lang/String;[Ljava/lang/String;Landroid/media/MediaScannerConnection$OnScanCompletedListener;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("scanFile", "(Landroid/content/Context;[Ljava/lang/String;[Ljava/lang/String;Landroid/media/MediaScannerConnection$OnScanCompletedListener;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="paths" Type="System.String[]" />
        <Parameter Name="mimeTypes" Type="System.String[]" />
        <Parameter Name="callback" Type="Android.Media.MediaScannerConnection+IOnScanCompletedListener" />
      </Parameters>
      <Docs>
        <param name="context">The caller's Context, required for establishing a connection to
            the media scanner service.
            Success or failure of the scanning operation cannot be determined until
            <c>MediaScannerConnectionClient#onScanCompleted(String, Uri)</c> is called.</param>
        <param name="paths">Array of paths to be scanned.</param>
        <param name="mimeTypes">Optional array of MIME types for each path.
            If mimeType is null, then the mimeType will be inferred from the file extension.</param>
        <param name="callback">Optional callback through which you can receive the
            scanned URI and MIME type; If null, the file will be scanned but
            you will not get a result back.</param>
        <summary>Convenience for constructing a <c>MediaScannerConnection</c>, calling
            <c>#connect</c> on it, and calling <c>#scanFile(String, String)</c> with the given
            &lt;var&gt;path&lt;/var&gt; and &lt;var&gt;mimeType&lt;/var&gt; when the connection is
            established.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaScannerConnection#scanFile(android.content.Context,%20java.lang.String[],%20java.lang.String[],%20android.media.OnScanCompletedListener)" title="Reference documentation">Java documentation for <code>android.media.MediaScannerConnection.scanFile(android.content.Context, java.lang.String[], java.lang.String[], android.media.OnScanCompletedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.MediaScannerConnection.ScanFile(System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaScannerConnection.ThresholdClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.MediaScannerConnection.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaScannerConnection.ThresholdType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.MediaScannerConnection.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
