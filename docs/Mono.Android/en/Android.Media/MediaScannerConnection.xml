<Type Name="MediaScannerConnection" FullName="Android.Media.MediaScannerConnection">
  <TypeSignature Language="C#" Value="public class MediaScannerConnection : Java.Lang.Object, Android.Content.IServiceConnection, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaScannerConnection extends Java.Lang.Object implements class Android.Content.IServiceConnection, class Android.Runtime.IJavaObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaScannerConnection" />
  <TypeSignature Language="F#" Value="type MediaScannerConnection = class&#xA;    inherit Object&#xA;    interface IServiceConnection&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Content.IServiceConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/MediaScannerConnection", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>MediaScannerConnection provides a way for applications to pass a
 newly created or downloaded media file to the media scanner service.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/MediaScannerConnection" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaScannerConnection (Android.Content.Context context, Android.Media.MediaScannerConnection.IMediaScannerConnectionClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Media.MediaScannerConnection/IMediaScannerConnectionClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.#ctor(Android.Content.Context,Android.Media.MediaScannerConnection.IMediaScannerConnectionClient)" />
      <MemberSignature Language="F#" Value="new Android.Media.MediaScannerConnection : Android.Content.Context * Android.Media.MediaScannerConnection.IMediaScannerConnectionClient -&gt; Android.Media.MediaScannerConnection" Usage="new Android.Media.MediaScannerConnection (context, client)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/media/MediaScannerConnection$MediaScannerConnectionClient;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="client" Type="Android.Media.MediaScannerConnection+IMediaScannerConnectionClient" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="client">To be added.</param>
        <summary>Constructs a new MediaScannerConnection object.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaScannerConnection (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.MediaScannerConnection : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.MediaScannerConnection" Usage="new Android.Media.MediaScannerConnection (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.Connect" />
      <MemberSignature Language="F#" Value="abstract member Connect : unit -&gt; unit&#xA;override this.Connect : unit -&gt; unit" Usage="mediaScannerConnection.Connect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connect", "()V", "GetConnectHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initiates a connection to the media scanner service.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public virtual void Disconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Disconnect() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.Disconnect" />
      <MemberSignature Language="F#" Value="abstract member Disconnect : unit -&gt; unit&#xA;override this.Disconnect : unit -&gt; unit" Usage="mediaScannerConnection.Disconnect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("disconnect", "()V", "GetDisconnectHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the connection to the media scanner service.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public virtual bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaScannerConnection.IsConnected" />
      <MemberSignature Language="F#" Value="member this.IsConnected : bool" Usage="Android.Media.MediaScannerConnection.IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether we are connected to the media scanner service</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaScannerConnection.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.MediaScannerConnection.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServiceConnected">
      <MemberSignature Language="C#" Value="public virtual void OnServiceConnected (Android.Content.ComponentName className, Android.OS.IBinder service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnServiceConnected(class Android.Content.ComponentName className, class Android.OS.IBinder service) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.OnServiceConnected(Android.Content.ComponentName,Android.OS.IBinder)" />
      <MemberSignature Language="F#" Value="abstract member OnServiceConnected : Android.Content.ComponentName * Android.OS.IBinder -&gt; unit&#xA;override this.OnServiceConnected : Android.Content.ComponentName * Android.OS.IBinder -&gt; unit" Usage="mediaScannerConnection.OnServiceConnected (className, service)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Content.IServiceConnection.OnServiceConnected(Android.Content.ComponentName,Android.OS.IBinder)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onServiceConnected", "(Landroid/content/ComponentName;Landroid/os/IBinder;)V", "GetOnServiceConnected_Landroid_content_ComponentName_Landroid_os_IBinder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="service" Type="Android.OS.IBinder" />
      </Parameters>
      <Docs>
        <param name="className">The concrete component name of the service that has
 been connected.</param>
        <param name="service">The IBinder of the Service's communication channel,
 which you can now make calls on.
</param>
        <summary>Part of the ServiceConnection interface.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnServiceDisconnected">
      <MemberSignature Language="C#" Value="public virtual void OnServiceDisconnected (Android.Content.ComponentName className);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnServiceDisconnected(class Android.Content.ComponentName className) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.OnServiceDisconnected(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member OnServiceDisconnected : Android.Content.ComponentName -&gt; unit&#xA;override this.OnServiceDisconnected : Android.Content.ComponentName -&gt; unit" Usage="mediaScannerConnection.OnServiceDisconnected className" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Content.IServiceConnection.OnServiceDisconnected(Android.Content.ComponentName)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onServiceDisconnected", "(Landroid/content/ComponentName;)V", "GetOnServiceDisconnected_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="className">The concrete component name of the service whose
 connection has been lost.
</param>
        <summary>Part of the ServiceConnection interface.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScanFile">
      <MemberSignature Language="C#" Value="public virtual void ScanFile (string path, string mimeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScanFile(string path, string mimeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.ScanFile(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ScanFile : string * string -&gt; unit&#xA;override this.ScanFile : string * string -&gt; unit" Usage="mediaScannerConnection.ScanFile (path, mimeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scanFile", "(Ljava/lang/String;Ljava/lang/String;)V", "GetScanFile_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mimeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">the path to the file to be scanned.</param>
        <param name="mimeType">an optional mimeType for the file.
 If mimeType is null, then the mimeType will be inferred from the file extension.
</param>
        <summary>Requests the media scanner to scan a file.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScanFile">
      <MemberSignature Language="C#" Value="public static void ScanFile (Android.Content.Context context, string[] paths, string[] mimeTypes, Android.Media.MediaScannerConnection.IOnScanCompletedListener callback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ScanFile(class Android.Content.Context context, string[] paths, string[] mimeTypes, class Android.Media.MediaScannerConnection/IOnScanCompletedListener callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaScannerConnection.ScanFile(Android.Content.Context,System.String[],System.String[],Android.Media.MediaScannerConnection.IOnScanCompletedListener)" />
      <MemberSignature Language="F#" Value="static member ScanFile : Android.Content.Context * string[] * string[] * Android.Media.MediaScannerConnection.IOnScanCompletedListener -&gt; unit" Usage="Android.Media.MediaScannerConnection.ScanFile (context, paths, mimeTypes, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scanFile", "(Landroid/content/Context;[Ljava/lang/String;[Ljava/lang/String;Landroid/media/MediaScannerConnection$OnScanCompletedListener;)V", "", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="paths" Type="System.String[]" />
        <Parameter Name="mimeTypes" Type="System.String[]" />
        <Parameter Name="callback" Type="Android.Media.MediaScannerConnection+IOnScanCompletedListener" />
      </Parameters>
      <Docs>
        <param name="context">The caller's Context, required for establishing a connection to
 the media scanner service.
 Success or failure of the scanning operation cannot be determined until
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=MediaScannerConnection MediaScannerConnectionClient onScanCompleted(java lang String,android net Uri);scope=Xamarin" title="MediaScannerConnection MediaScannerConnectionClient onScanCompleted(java lang String,android net Uri)">MediaScannerConnection MediaScannerConnectionClient onScanCompleted(java lang String,android net Uri)</a></format> is called.</param>
        <param name="paths">Array of paths to be scanned.</param>
        <param name="mimeTypes">Optional array of MIME types for each path.
 If mimeType is null, then the mimeType will be inferred from the file extension.</param>
        <param name="callback">Optional callback through which you can receive the
 scanned URI and MIME type; If null, the file will be scanned but
 you will not get a result back.</param>
        <summary>Convenience for constructing a <see cref="T:Android.Media.MediaScannerConnection" />, calling
 <see cref="M:Android.Media.MediaScannerConnection.Connect" /> on it, and calling <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='M:Android Media MediaScannerConnection ScanFile(Android Content Context,System String[],System String[],System String[])';scope=Xamarin" title="M:Android.Media.MediaScannerConnection.ScanFile(Android.Content.Context,System.String[],System.String[],System.String[])">M:Android.Media.MediaScannerConnection.ScanFile(Android.Content.Context,System.String[],System.String[],System.String[])</a></format> with the given
 <format type="text/html"><var>path</var></format> and <format type="text/html"><var>mimeType</var></format> when the connection is
 established.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.MediaScannerConnection.ScanFile(System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaScannerConnection.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.MediaScannerConnection.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaScannerConnection.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.MediaScannerConnection.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
