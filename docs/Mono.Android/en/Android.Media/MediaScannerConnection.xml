<Type Name="MediaScannerConnection" FullName="Android.Media.MediaScannerConnection">
  <TypeSignature Language="C#" Value="public class MediaScannerConnection : Java.Lang.Object, Android.Content.IServiceConnection, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaScannerConnection extends Java.Lang.Object implements class Android.Content.IServiceConnection, class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Content.IServiceConnection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/MediaScannerConnection", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>MediaScannerConnection provides a way for applications to pass a
 newly created or downloaded media file to the media scanner service.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">MediaScannerConnection provides a way for applications to pass a
 newly created or downloaded media file to the media scanner service.
 The media scanner service will read metadata from the file and add
 the file to the media content provider.
 The MediaScannerConnectionClient provides an interface for the
 media scanner service to return the Uri for a newly scanned file
 to the client of the MediaScannerConnection class.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/media/MediaScannerConnection.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaScannerConnection (Android.Content.Context context, Android.Media.MediaScannerConnection.IMediaScannerConnectionClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context, class Android.Media.MediaScannerConnection/IMediaScannerConnectionClient client) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;Landroid/media/MediaScannerConnection$MediaScannerConnectionClient;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="client" Type="Android.Media.MediaScannerConnection+IMediaScannerConnectionClient" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="client">To be added.</param>
        <summary>Constructs a new MediaScannerConnection object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new MediaScannerConnection object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaScannerConnection.html#MediaScannerConnection(android.content.Context, android.media.MediaScannerConnection.MediaScannerConnectionClient)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaScannerConnection (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public virtual void Connect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Connect() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connect", "()V", "GetConnectHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initiates a connection to the media scanner service.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Initiates a connection to the media scanner service.
 <c><see cref="!:NoType:android/media/MediaScannerConnection$MediaScannerConnectionClient;Href=../../../reference/android/media/MediaScannerConnection.MediaScannerConnectionClient.html#onMediaScannerConnected()" /></c>
 will be called when the connection is established.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaScannerConnection.html#connect()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public virtual void Disconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Disconnect() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("disconnect", "()V", "GetDisconnectHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the connection to the media scanner service.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Releases the connection to the media scanner service.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaScannerConnection.html#disconnect()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public virtual bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isConnected", "()Z", "GetIsConnectedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether we are connected to the media scanner service</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether we are connected to the media scanner service</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaScannerConnection.html#isConnected()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnServiceConnected">
      <MemberSignature Language="C#" Value="public virtual void OnServiceConnected (Android.Content.ComponentName className, Android.OS.IBinder service);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnServiceConnected(class Android.Content.ComponentName className, class Android.OS.IBinder service) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onServiceConnected", "(Landroid/content/ComponentName;Landroid/os/IBinder;)V", "GetOnServiceConnected_Landroid_content_ComponentName_Landroid_os_IBinder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="service" Type="Android.OS.IBinder" />
      </Parameters>
      <Docs>
        <param name="className">The concrete component name of the service that has
 been connected.</param>
        <param name="service">The IBinder of the Service's communication channel,
 which you can now make calls on.
</param>
        <summary>Part of the ServiceConnection interface.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Part of the ServiceConnection interface.  Do not call.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaScannerConnection.html#onServiceConnected(android.content.ComponentName, android.os.IBinder)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnServiceDisconnected">
      <MemberSignature Language="C#" Value="public virtual void OnServiceDisconnected (Android.Content.ComponentName className);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnServiceDisconnected(class Android.Content.ComponentName className) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onServiceDisconnected", "(Landroid/content/ComponentName;)V", "GetOnServiceDisconnected_Landroid_content_ComponentName_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="className">The concrete component name of the service whose
 connection has been lost.
</param>
        <summary>Part of the ServiceConnection interface.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Part of the ServiceConnection interface.  Do not call.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaScannerConnection.html#onServiceDisconnected(android.content.ComponentName)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScanFile">
      <MemberSignature Language="C#" Value="public virtual void ScanFile (string path, string mimeType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ScanFile(string path, string mimeType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scanFile", "(Ljava/lang/String;Ljava/lang/String;)V", "GetScanFile_Ljava_lang_String_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mimeType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">the path to the file to be scanned.</param>
        <param name="mimeType">an optional mimeType for the file.
 If mimeType is null, then the mimeType will be inferred from the file extension.
</param>
        <summary>Requests the media scanner to scan a file.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Requests the media scanner to scan a file.
 Success or failure of the scanning operation cannot be determined until
 <c><see cref="!:NoType:android/media/MediaScannerConnection$MediaScannerConnectionClient;Href=../../../reference/android/media/MediaScannerConnection.MediaScannerConnectionClient.html#onScanCompleted(java.lang.String,android.net.Uri)" /></c> is called.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaScannerConnection.html#scanFile(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ScanFile">
      <MemberSignature Language="C#" Value="public static void ScanFile (Android.Content.Context context, string[] paths, string[] mimeTypes, Android.Media.MediaScannerConnection.IOnScanCompletedListener callback);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ScanFile(class Android.Content.Context context, string[] paths, string[] mimeTypes, class Android.Media.MediaScannerConnection/IOnScanCompletedListener callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("scanFile", "(Landroid/content/Context;[Ljava/lang/String;[Ljava/lang/String;Landroid/media/MediaScannerConnection$OnScanCompletedListener;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="paths" Type="System.String[]" />
        <Parameter Name="mimeTypes" Type="System.String[]" />
        <Parameter Name="callback" Type="Android.Media.MediaScannerConnection+IOnScanCompletedListener" />
      </Parameters>
      <Docs>
        <param name="context">The caller's Context, required for establishing a connection to
 the media scanner service.
 Success or failure of the scanning operation cannot be determined until
 <c><see cref="!:NoType:android/media/MediaScannerConnection$MediaScannerConnectionClient;Href=../../../reference/android/media/MediaScannerConnection.MediaScannerConnectionClient.html#onScanCompleted(java.lang.String,android.net.Uri)" /></c> is called.</param>
        <param name="paths">Array of paths to be scanned.</param>
        <param name="mimeTypes">Optional array of MIME types for each path.
 If mimeType is null, then the mimeType will be inferred from the file extension.</param>
        <param name="callback">Optional callback through which you can receive the
 scanned URI and MIME type; If null, the file will be scanned but
 you will not get a result back.</param>
        <summary>Convenience for constructing a <c><see cref="T:Android.Media.MediaScannerConnection" /></c>, calling
 <c><see cref="M:Android.Media.MediaScannerConnection.Connect" /></c> on it, and calling <c><see cref="M:Android.Media.MediaScannerConnection.ScanFile(Android.Content.Context,System.String[],System.String[],System.String[])" /></c> with the given
 <format type="text/html"><var>path</var></format> and <format type="text/html"><var>mimeType</var></format> when the connection is
 established.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience for constructing a <c><see cref="T:Android.Media.MediaScannerConnection" /></c>, calling
 <c><see cref="M:Android.Media.MediaScannerConnection.Connect" /></c> on it, and calling <c><see cref="M:Android.Media.MediaScannerConnection.ScanFile(Android.Content.Context,System.String[],System.String[],System.String[])" /></c> with the given
 <format type="text/html"><var>path</var></format> and <format type="text/html"><var>mimeType</var></format> when the connection is
 established.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/MediaScannerConnection.html#scanFile(android.content.Context, java.lang.String[], java.lang.String[], android.media.MediaScannerConnection.OnScanCompletedListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="M:Android.Media.MediaScannerConnection.ScanFile(System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
