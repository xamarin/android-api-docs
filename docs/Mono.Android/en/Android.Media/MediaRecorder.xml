<Type Name="MediaRecorder" FullName="Android.Media.MediaRecorder">
  <TypeSignature Language="C#" Value="public class MediaRecorder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaRecorder extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaRecorder" />
  <TypeSignature Language="F#" Value="type MediaRecorder = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/MediaRecorder", ApiSince=1, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Used to record audio and video.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/MediaRecorder" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaRecorder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaRecorder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.MediaRecorder : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.MediaRecorder" Usage="new Android.Media.MediaRecorder (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioSourceMax">
      <MemberSignature Language="C#" Value="public static int AudioSourceMax { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 AudioSourceMax" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.AudioSourceMax" />
      <MemberSignature Language="F#" Value="member this.AudioSourceMax : int" Usage="Android.Media.MediaRecorder.AudioSourceMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAudioSourceMax", "()I", "GetGetAudioSourceMaxHandler", ApiSince=4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum value for audio sources.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaRecorder.ErrorEventArgs&gt; Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaRecorder/ErrorEventArgs&gt; Error" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaRecorder.Error" />
      <MemberSignature Language="F#" Value="member this.Error : EventHandler&lt;Android.Media.MediaRecorder.ErrorEventArgs&gt; " Usage="member this.Error : System.EventHandler&lt;Android.Media.MediaRecorder.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaRecorder+ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaRecorder.InfoEventArgs&gt; Info;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaRecorder/InfoEventArgs&gt; Info" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaRecorder.Info" />
      <MemberSignature Language="F#" Value="member this.Info : EventHandler&lt;Android.Media.MediaRecorder.InfoEventArgs&gt; " Usage="member this.Info : System.EventHandler&lt;Android.Media.MediaRecorder.InfoEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaRecorder+InfoEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.MediaRecorder.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAmplitude">
      <MemberSignature Language="C#" Value="public virtual int MaxAmplitude { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAmplitude" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.MaxAmplitude" />
      <MemberSignature Language="F#" Value="member this.MaxAmplitude : int" Usage="Android.Media.MediaRecorder.MaxAmplitude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxAmplitude", "()I", "GetGetMaxAmplitudeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum absolute amplitude that was sampled since the last
 call to this method.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 the audio source has been set.
</exception>
      </Docs>
    </Member>
    <Member MemberName="MediaErrorServerDied">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaRecorderError MediaErrorServerDied = 100;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaRecorderError MediaErrorServerDied = (100)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaRecorder.MediaErrorServerDied" />
      <MemberSignature Language="F#" Value="val mutable MediaErrorServerDied : Android.Media.MediaRecorderError" Usage="Android.Media.MediaRecorder.MediaErrorServerDied" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaRecorderError enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_ERROR_SERVER_DIED", ApiSince=17)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRecorderError</ReturnType>
      </ReturnValue>
      <MemberValue>100</MemberValue>
      <Docs>
        <summary>Media server died.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="MediaRecorderErrorUnknown">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaRecorderError MediaRecorderErrorUnknown = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaRecorderError MediaRecorderErrorUnknown = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaRecorder.MediaRecorderErrorUnknown" />
      <MemberSignature Language="F#" Value="val mutable MediaRecorderErrorUnknown : Android.Media.MediaRecorderError" Usage="Android.Media.MediaRecorder.MediaRecorderErrorUnknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaRecorderError enum directly instead of this field.")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_RECORDER_ERROR_UNKNOWN", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRecorderError</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Unspecified media recorder error.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Metrics">
      <MemberSignature Language="C#" Value="public virtual Android.OS.PersistableBundle Metrics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.PersistableBundle Metrics" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.Metrics" />
      <MemberSignature Language="F#" Value="member this.Metrics : Android.OS.PersistableBundle" Usage="Android.Media.MediaRecorder.Metrics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMetrics", "()Landroid/os/PersistableBundle;", "GetGetMetricsHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.PersistableBundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public virtual void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Pause" />
      <MemberSignature Language="F#" Value="abstract member Pause : unit -&gt; unit&#xA;override this.Pause : unit -&gt; unit" Usage="mediaRecorder.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pause", "()V", "GetPauseHandler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public virtual void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Prepare" />
      <MemberSignature Language="F#" Value="abstract member Prepare : unit -&gt; unit&#xA;override this.Prepare : unit -&gt; unit" Usage="mediaRecorder.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("prepare", "()V", "GetPrepareHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prepares the recorder to begin capturing and encoding data.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after
 start() or before setOutputFormat().</exception>
        <exception cref="T:Java.IO.IOException">if prepare fails otherwise.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Release" />
      <MemberSignature Language="F#" Value="abstract member Release : unit -&gt; unit&#xA;override this.Release : unit -&gt; unit" Usage="mediaRecorder.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("release", "()V", "GetReleaseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases resources associated with this MediaRecorder object.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Reset" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="mediaRecorder.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()V", "GetResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restarts the MediaRecorder to its idle state.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public virtual void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Resume" />
      <MemberSignature Language="F#" Value="abstract member Resume : unit -&gt; unit&#xA;override this.Resume : unit -&gt; unit" Usage="mediaRecorder.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resume", "()V", "GetResumeHandler", ApiSince=24)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAudioChannels">
      <MemberSignature Language="C#" Value="public virtual void SetAudioChannels (int numChannels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioChannels(int32 numChannels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAudioChannels(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioChannels : int -&gt; unit&#xA;override this.SetAudioChannels : int -&gt; unit" Usage="mediaRecorder.SetAudioChannels numChannels" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioChannels", "(I)V", "GetSetAudioChannels_IHandler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numChannels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numChannels">the number of audio channels. Usually it is either 1 (mono) or 2
 (stereo).
</param>
        <summary>Sets the number of audio channels for recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioEncoder">
      <MemberSignature Language="C#" Value="public virtual void SetAudioEncoder (Android.Media.AudioEncoder audio_encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioEncoder(valuetype Android.Media.AudioEncoder audio_encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAudioEncoder(Android.Media.AudioEncoder)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioEncoder : Android.Media.AudioEncoder -&gt; unit&#xA;override this.SetAudioEncoder : Android.Media.AudioEncoder -&gt; unit" Usage="mediaRecorder.SetAudioEncoder audio_encoder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioEncoder", "(I)V", "GetSetAudioEncoder_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audio_encoder" Type="Android.Media.AudioEncoder">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audio_encoder">the audio encoder to use.</param>
        <summary>Sets the audio encoder to be used for recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 setOutputFormat() or after prepare().</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAudioEncodingBitRate">
      <MemberSignature Language="C#" Value="public virtual void SetAudioEncodingBitRate (int bitRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioEncodingBitRate(int32 bitRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAudioEncodingBitRate(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioEncodingBitRate : int -&gt; unit&#xA;override this.SetAudioEncodingBitRate : int -&gt; unit" Usage="mediaRecorder.SetAudioEncodingBitRate bitRate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioEncodingBitRate", "(I)V", "GetSetAudioEncodingBitRate_IHandler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bitRate">the audio encoding bit rate in bits per second.
</param>
        <summary>Sets the audio encoding bit rate for recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioSamplingRate">
      <MemberSignature Language="C#" Value="public virtual void SetAudioSamplingRate (int samplingRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioSamplingRate(int32 samplingRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAudioSamplingRate(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioSamplingRate : int -&gt; unit&#xA;override this.SetAudioSamplingRate : int -&gt; unit" Usage="mediaRecorder.SetAudioSamplingRate samplingRate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioSamplingRate", "(I)V", "GetSetAudioSamplingRate_IHandler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samplingRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="samplingRate">the sampling rate for audio in samples per second.
</param>
        <summary>Sets the audio sampling rate for recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioSource">
      <MemberSignature Language="C#" Value="public virtual void SetAudioSource (Android.Media.AudioSource audio_source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioSource(valuetype Android.Media.AudioSource audio_source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAudioSource(Android.Media.AudioSource)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioSource : Android.Media.AudioSource -&gt; unit&#xA;override this.SetAudioSource : Android.Media.AudioSource -&gt; unit" Usage="mediaRecorder.SetAudioSource audio_source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAudioSource", "(I)V", "GetSetAudioSource_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audio_source" Type="Android.Media.AudioSource">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audio_source">the audio source to use</param>
        <summary>Sets the audio source to be used for recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after setOutputFormat()</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuxiliaryOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetAuxiliaryOutputFile (Java.IO.FileDescriptor fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAuxiliaryOutputFile(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAuxiliaryOutputFile(Java.IO.FileDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member SetAuxiliaryOutputFile : Java.IO.FileDescriptor -&gt; unit&#xA;override this.SetAuxiliaryOutputFile : Java.IO.FileDescriptor -&gt; unit" Usage="mediaRecorder.SetAuxiliaryOutputFile fd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAuxiliaryOutputFile", "(Ljava/io/FileDescriptor;)V", "GetSetAuxiliaryOutputFile_Ljava_io_FileDescriptor_Handler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAuxiliaryOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetAuxiliaryOutputFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAuxiliaryOutputFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAuxiliaryOutputFile(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetAuxiliaryOutputFile : string -&gt; unit&#xA;override this.SetAuxiliaryOutputFile : string -&gt; unit" Usage="mediaRecorder.SetAuxiliaryOutputFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAuxiliaryOutputFile", "(Ljava/lang/String;)V", "GetSetAuxiliaryOutputFile_Ljava_lang_String_Handler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCamera">
      <MemberSignature Language="C#" Value="public virtual void SetCamera (Android.Hardware.Camera c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCamera(class Android.Hardware.Camera c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetCamera(Android.Hardware.Camera)" />
      <MemberSignature Language="F#" Value="abstract member SetCamera : Android.Hardware.Camera -&gt; unit&#xA;override this.SetCamera : Android.Hardware.Camera -&gt; unit" Usage="mediaRecorder.SetCamera c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCamera", "(Landroid/hardware/Camera;)V", "GetSetCamera_Landroid_hardware_Camera_Handler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Hardware.Camera" />
      </Parameters>
      <Docs>
        <param name="c">the Camera to use for recording</param>
        <summary>Sets a <see cref="T:Android.Hardware.Camera" /> to use for recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetCaptureRate">
      <MemberSignature Language="C#" Value="public virtual void SetCaptureRate (double fps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCaptureRate(float64 fps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetCaptureRate(System.Double)" />
      <MemberSignature Language="F#" Value="abstract member SetCaptureRate : double -&gt; unit&#xA;override this.SetCaptureRate : double -&gt; unit" Usage="mediaRecorder.SetCaptureRate fps" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCaptureRate", "(D)V", "GetSetCaptureRate_DHandler", ApiSince=11)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fps" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="fps">Rate at which frames should be captured in frames per second.
 The fps can go as low as desired. However the fastest fps will be limited by the hardware.
 For resolutions that can be captured by the video camera, the fastest fps can be computed using
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=Camera Parameters getPreviewFpsRange(int[]);scope=Xamarin" title="Camera Parameters getPreviewFpsRange(int[])">Camera Parameters getPreviewFpsRange(int[])</a></format>. For higher
 resolutions the fastest fps may be more restrictive.
 Note that the recorder cannot guarantee that frames will be captured at the
 given rate due to camera/encoder limitations. However it tries to be as close as
 possible.
</param>
        <summary>Set video frame capture rate.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetInputSurface">
      <MemberSignature Language="C#" Value="public virtual void SetInputSurface (Android.Views.Surface surface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInputSurface(class Android.Views.Surface surface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetInputSurface(Android.Views.Surface)" />
      <MemberSignature Language="F#" Value="abstract member SetInputSurface : Android.Views.Surface -&gt; unit&#xA;override this.SetInputSurface : Android.Views.Surface -&gt; unit" Usage="mediaRecorder.SetInputSurface surface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInputSurface", "(Landroid/view/Surface;)V", "GetSetInputSurface_Landroid_view_Surface_Handler", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Views.Surface" />
      </Parameters>
      <Docs>
        <param name="surface">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocation">
      <MemberSignature Language="C#" Value="public virtual void SetLocation (float latitude, float longitude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocation(float32 latitude, float32 longitude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetLocation(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetLocation : single * single -&gt; unit&#xA;override this.SetLocation : single * single -&gt; unit" Usage="mediaRecorder.SetLocation (latitude, longitude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setLocation", "(FF)V", "GetSetLocation_FFHandler", ApiSince=14)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="latitude" Type="System.Single" />
        <Parameter Name="longitude" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="latitude">latitude in degrees. Its value must be in the
 range [-90, 90].</param>
        <param name="longitude">longitude in degrees. Its value must be in the
 range [-180, 180].</param>
        <summary>Set and store the geodata (latitude and longitude) in the output file.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given latitude or
 longitude is out of range.

</exception>
      </Docs>
    </Member>
    <Member MemberName="SetMaxDuration">
      <MemberSignature Language="C#" Value="public virtual void SetMaxDuration (int max_duration_ms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaxDuration(int32 max_duration_ms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetMaxDuration(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetMaxDuration : int -&gt; unit&#xA;override this.SetMaxDuration : int -&gt; unit" Usage="mediaRecorder.SetMaxDuration max_duration_ms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMaxDuration", "(I)V", "GetSetMaxDuration_IHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="max_duration_ms" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="max_duration_ms">the maximum duration in ms (if zero or negative, disables the duration limit)

</param>
        <summary>Sets the maximum duration (in ms) of the recording session.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SetMaxFileSize">
      <MemberSignature Language="C#" Value="public virtual void SetMaxFileSize (long max_filesize_bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaxFileSize(int64 max_filesize_bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetMaxFileSize(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetMaxFileSize : int64 -&gt; unit&#xA;override this.SetMaxFileSize : int64 -&gt; unit" Usage="mediaRecorder.SetMaxFileSize max_filesize_bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMaxFileSize", "(J)V", "GetSetMaxFileSize_JHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="max_filesize_bytes" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="max_filesize_bytes">the maximum filesize in bytes (if zero or negative, disables the limit)

</param>
        <summary>Sets the maximum filesize (in bytes) of the recording session.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SetNextOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetNextOutputFile (Java.IO.File file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNextOutputFile(class Java.IO.File file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetNextOutputFile(Java.IO.File)" />
      <MemberSignature Language="F#" Value="abstract member SetNextOutputFile : Java.IO.File -&gt; unit&#xA;override this.SetNextOutputFile : Java.IO.File -&gt; unit" Usage="mediaRecorder.SetNextOutputFile file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNextOutputFile", "(Ljava/io/File;)V", "GetSetNextOutputFile_Ljava_io_File_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNextOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetNextOutputFile (Java.IO.FileDescriptor fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNextOutputFile(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetNextOutputFile(Java.IO.FileDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member SetNextOutputFile : Java.IO.FileDescriptor -&gt; unit&#xA;override this.SetNextOutputFile : Java.IO.FileDescriptor -&gt; unit" Usage="mediaRecorder.SetNextOutputFile fd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNextOutputFile", "(Ljava/io/FileDescriptor;)V", "GetSetNextOutputFile_Ljava_io_FileDescriptor_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnErrorListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnErrorListener (Android.Media.MediaRecorder.IOnErrorListener l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnErrorListener(class Android.Media.MediaRecorder/IOnErrorListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOnErrorListener(Android.Media.MediaRecorder.IOnErrorListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnErrorListener : Android.Media.MediaRecorder.IOnErrorListener -&gt; unit&#xA;override this.SetOnErrorListener : Android.Media.MediaRecorder.IOnErrorListener -&gt; unit" Usage="mediaRecorder.SetOnErrorListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnErrorListener", "(Landroid/media/MediaRecorder$OnErrorListener;)V", "GetSetOnErrorListener_Landroid_media_MediaRecorder_OnErrorListener_Handler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Media.MediaRecorder+IOnErrorListener" />
      </Parameters>
      <Docs>
        <param name="l">the callback that will be run
</param>
        <summary>Register a callback to be invoked when an error occurs while
 recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetOnInfoListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnInfoListener (Android.Media.MediaRecorder.IOnInfoListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnInfoListener(class Android.Media.MediaRecorder/IOnInfoListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOnInfoListener(Android.Media.MediaRecorder.IOnInfoListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnInfoListener : Android.Media.MediaRecorder.IOnInfoListener -&gt; unit&#xA;override this.SetOnInfoListener : Android.Media.MediaRecorder.IOnInfoListener -&gt; unit" Usage="mediaRecorder.SetOnInfoListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnInfoListener", "(Landroid/media/MediaRecorder$OnInfoListener;)V", "GetSetOnInfoListener_Landroid_media_MediaRecorder_OnInfoListener_Handler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaRecorder+IOnInfoListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run
</param>
        <summary>Register a callback to be invoked when an informational event occurs while
 recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetOrientationHint">
      <MemberSignature Language="C#" Value="public virtual void SetOrientationHint (int degrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOrientationHint(int32 degrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOrientationHint(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetOrientationHint : int -&gt; unit&#xA;override this.SetOrientationHint : int -&gt; unit" Usage="mediaRecorder.SetOrientationHint degrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOrientationHint", "(I)V", "GetSetOrientationHint_IHandler", ApiSince=9)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="degrees">the angle to be rotated clockwise in degrees.
 The supported angles are 0, 90, 180, and 270 degrees.</param>
        <summary>Sets the orientation hint for output video playback.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the angle is not supported.

</exception>
      </Docs>
    </Member>
    <Member MemberName="SetOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetOutputFile (Java.IO.File file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputFile(class Java.IO.File file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOutputFile(Java.IO.File)" />
      <MemberSignature Language="F#" Value="abstract member SetOutputFile : Java.IO.File -&gt; unit&#xA;override this.SetOutputFile : Java.IO.File -&gt; unit" Usage="mediaRecorder.SetOutputFile file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOutputFile", "(Ljava/io/File;)V", "GetSetOutputFile_Ljava_io_File_Handler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetOutputFile (Java.IO.FileDescriptor fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputFile(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOutputFile(Java.IO.FileDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member SetOutputFile : Java.IO.FileDescriptor -&gt; unit&#xA;override this.SetOutputFile : Java.IO.FileDescriptor -&gt; unit" Usage="mediaRecorder.SetOutputFile fd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOutputFile", "(Ljava/io/FileDescriptor;)V", "GetSetOutputFile_Ljava_io_FileDescriptor_Handler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">an open file descriptor to be written into.</param>
        <summary tool="true">Pass in the file descriptor of the file to be written.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 setOutputFormat() or after prepare()
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetOutputFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOutputFile(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetOutputFile : string -&gt; unit&#xA;override this.SetOutputFile : string -&gt; unit" Usage="mediaRecorder.SetOutputFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOutputFile", "(Ljava/lang/String;)V", "GetSetOutputFile_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The pathname to use.</param>
        <summary>Sets the path of the output file to be produced.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 setOutputFormat() or after prepare()
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetOutputFormat">
      <MemberSignature Language="C#" Value="public virtual void SetOutputFormat (Android.Media.OutputFormat output_format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputFormat(valuetype Android.Media.OutputFormat output_format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOutputFormat(Android.Media.OutputFormat)" />
      <MemberSignature Language="F#" Value="abstract member SetOutputFormat : Android.Media.OutputFormat -&gt; unit&#xA;override this.SetOutputFormat : Android.Media.OutputFormat -&gt; unit" Usage="mediaRecorder.SetOutputFormat output_format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOutputFormat", "(I)V", "GetSetOutputFormat_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output_format" Type="Android.Media.OutputFormat">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="output_format">the output format to use. The output format
 needs to be specified before setting recording-parameters or encoders.</param>
        <summary>Sets the format of the output file produced during recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after prepare() or before
 setAudioSource()/setVideoSource().</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPreviewDisplay">
      <MemberSignature Language="C#" Value="public virtual void SetPreviewDisplay (Android.Views.Surface sv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPreviewDisplay(class Android.Views.Surface sv) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetPreviewDisplay(Android.Views.Surface)" />
      <MemberSignature Language="F#" Value="abstract member SetPreviewDisplay : Android.Views.Surface -&gt; unit&#xA;override this.SetPreviewDisplay : Android.Views.Surface -&gt; unit" Usage="mediaRecorder.SetPreviewDisplay sv" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPreviewDisplay", "(Landroid/view/Surface;)V", "GetSetPreviewDisplay_Landroid_view_Surface_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sv" Type="Android.Views.Surface" />
      </Parameters>
      <Docs>
        <param name="sv">the Surface to use for the preview</param>
        <summary>Sets a Surface to show a preview of recorded media (video).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Hardware.Camera.SetPreviewDisplay(Android.Views.ISurfaceHolder)" />
      </Docs>
    </Member>
    <Member MemberName="SetProfile">
      <MemberSignature Language="C#" Value="public virtual void SetProfile (Android.Media.CamcorderProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProfile(class Android.Media.CamcorderProfile profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetProfile(Android.Media.CamcorderProfile)" />
      <MemberSignature Language="F#" Value="abstract member SetProfile : Android.Media.CamcorderProfile -&gt; unit&#xA;override this.SetProfile : Android.Media.CamcorderProfile -&gt; unit" Usage="mediaRecorder.SetProfile profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setProfile", "(Landroid/media/CamcorderProfile;)V", "GetSetProfile_Landroid_media_CamcorderProfile_Handler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="Android.Media.CamcorderProfile" />
      </Parameters>
      <Docs>
        <param name="profile">the CamcorderProfile to use</param>
        <summary>Uses the settings from a CamcorderProfile object for recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="T:Android.Media.CamcorderProfile" />
      </Docs>
    </Member>
    <Member MemberName="SetVideoEncoder">
      <MemberSignature Language="C#" Value="public virtual void SetVideoEncoder (Android.Media.VideoEncoder video_encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoEncoder(valuetype Android.Media.VideoEncoder video_encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetVideoEncoder(Android.Media.VideoEncoder)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoEncoder : Android.Media.VideoEncoder -&gt; unit&#xA;override this.SetVideoEncoder : Android.Media.VideoEncoder -&gt; unit" Usage="mediaRecorder.SetVideoEncoder video_encoder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVideoEncoder", "(I)V", "GetSetVideoEncoder_IHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="video_encoder" Type="Android.Media.VideoEncoder">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="video_encoder">the video encoder to use.</param>
        <summary>Sets the video encoder to be used for recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 setOutputFormat() or after prepare()</exception>
      </Docs>
    </Member>
    <Member MemberName="SetVideoEncodingBitRate">
      <MemberSignature Language="C#" Value="public virtual void SetVideoEncodingBitRate (int bitRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoEncodingBitRate(int32 bitRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetVideoEncodingBitRate(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoEncodingBitRate : int -&gt; unit&#xA;override this.SetVideoEncodingBitRate : int -&gt; unit" Usage="mediaRecorder.SetVideoEncodingBitRate bitRate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVideoEncodingBitRate", "(I)V", "GetSetVideoEncodingBitRate_IHandler", ApiSince=8)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bitRate">the video encoding bit rate in bits per second.
</param>
        <summary>Sets the video encoding bit rate for recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetVideoEncodingProfileLevel">
      <MemberSignature Language="C#" Value="public virtual void SetVideoEncodingProfileLevel (Android.Media.MediaCodecProfileType profile, int level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoEncodingProfileLevel(valuetype Android.Media.MediaCodecProfileType profile, int32 level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetVideoEncodingProfileLevel(Android.Media.MediaCodecProfileType,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoEncodingProfileLevel : Android.Media.MediaCodecProfileType * int -&gt; unit&#xA;override this.SetVideoEncodingProfileLevel : Android.Media.MediaCodecProfileType * int -&gt; unit" Usage="mediaRecorder.SetVideoEncodingProfileLevel (profile, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVideoEncodingProfileLevel", "(II)V", "GetSetVideoEncodingProfileLevel_IIHandler", ApiSince=26)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="Android.Media.MediaCodecProfileType">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="profile">To be added.</param>
        <param name="level">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVideoFrameRate">
      <MemberSignature Language="C#" Value="public virtual void SetVideoFrameRate (int rate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoFrameRate(int32 rate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetVideoFrameRate(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoFrameRate : int -&gt; unit&#xA;override this.SetVideoFrameRate : int -&gt; unit" Usage="mediaRecorder.SetVideoFrameRate rate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVideoFrameRate", "(I)V", "GetSetVideoFrameRate_IHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rate">the number of frames per second of video to capture</param>
        <summary>Sets the frame rate of the video to be captured.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after
 prepare() or before setOutputFormat().

 NOTE: On some devices that have auto-frame rate, this sets the
 maximum frame rate, not a constant frame rate. Actual frame rate
 will vary according to lighting conditions.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetVideoSize">
      <MemberSignature Language="C#" Value="public virtual void SetVideoSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetVideoSize(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoSize : int * int -&gt; unit&#xA;override this.SetVideoSize : int * int -&gt; unit" Usage="mediaRecorder.SetVideoSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVideoSize", "(II)V", "GetSetVideoSize_IIHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">the width of the video to be captured</param>
        <param name="height">the height of the video to be captured</param>
        <summary>Sets the width and height of the video to be captured.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after
 prepare() or before setOutputFormat()
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetVideoSource">
      <MemberSignature Language="C#" Value="public virtual void SetVideoSource (Android.Media.VideoSource video_source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoSource(valuetype Android.Media.VideoSource video_source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetVideoSource(Android.Media.VideoSource)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoSource : Android.Media.VideoSource -&gt; unit&#xA;override this.SetVideoSource : Android.Media.VideoSource -&gt; unit" Usage="mediaRecorder.SetVideoSource video_source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setVideoSource", "(I)V", "GetSetVideoSource_IHandler", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="video_source" Type="Android.Media.VideoSource">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="video_source">the video source to use</param>
        <summary>Sets the video source to be used for recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after setOutputFormat()</exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Start" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="mediaRecorder.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("start", "()V", "GetStartHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Begins capturing and encoding data to the file specified with
 setOutputFile().</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 prepare().
</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Stop" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="mediaRecorder.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stop", "()V", "GetStopHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops recording.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before start()
</exception>
      </Docs>
    </Member>
    <Member MemberName="Surface">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Surface Surface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Surface Surface" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.Surface" />
      <MemberSignature Language="F#" Value="member this.Surface : Android.Views.Surface" Usage="Android.Media.MediaRecorder.Surface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSurface", "()Landroid/view/Surface;", "GetGetSurfaceHandler", ApiSince=21)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Surface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the surface to record from when using SURFACE video source.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 21" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before <see cref="M:Android.Media.MediaRecorder.Prepare" />, after
 <see cref="M:Android.Media.MediaRecorder.Stop" />, or is called when VideoSource is not set to SURFACE.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.MediaRecorder.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.MediaRecorder.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
