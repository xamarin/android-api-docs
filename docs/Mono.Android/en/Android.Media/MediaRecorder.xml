<Type Name="MediaRecorder" FullName="Android.Media.MediaRecorder">
  <TypeSignature Language="C#" Value="public class MediaRecorder : Java.Lang.Object, Android.Media.IAudioRecordingMonitor, Android.Media.IAudioRouting, Android.Media.IMicrophoneDirection, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MediaRecorder extends Java.Lang.Object implements class Android.Media.IAudioRecordingMonitor, class Android.Media.IAudioRouting, class Android.Media.IMicrophoneDirection, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaRecorder" />
  <TypeSignature Language="F#" Value="type MediaRecorder = class&#xA;    inherit Object&#xA;    interface IAudioRecordingMonitor&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IAudioRouting&#xA;    interface IMicrophoneDirection" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Media.IAudioRecordingMonitor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Media.IAudioRouting</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Media.IMicrophoneDirection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/MediaRecorder", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/MediaRecorder", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Used to record audio and video.</summary>
    <remarks>
      <para>Used to record audio and video. The recording control is based on a
            simple state machine (see below).</para>
      <para>&lt;img src="https://developer.android.com/images/mediarecorder_state_diagram.gif" border="0" /&gt;</para>
      <para>A common case of using MediaRecorder to record audio works as follows:</para>
      <code lang="text/java">MediaRecorder recorder = new MediaRecorder();
            recorder.setAudioSource(MediaRecorder.AudioSource.MIC);
            recorder.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
            recorder.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_NB);
            recorder.setOutputFile(PATH_NAME);
            recorder.prepare();
            recorder.start();   // Recording is now started
            ...
            recorder.stop();
            recorder.reset();   // You can reuse the object by going back to setAudioSource() step
            recorder.release(); // Now the object cannot be reused
            </code>
      <para>Applications may want to register for informational and error
            events in order to be informed of some internal update and possible
            runtime errors during recording. Registration for such events is
            done by setting the appropriate listeners (via calls
            (to <c>#setOnInfoListener(OnInfoListener)</c>setOnInfoListener and/or
            <c>#setOnErrorListener(OnErrorListener)</c>setOnErrorListener).
            In order to receive the respective callback associated with these listeners,
            applications are required to create MediaRecorder objects on threads with a
            Looper running (the main UI thread by default already has a Looper running).</para>
      <para>&lt;strong&gt;Note:&lt;/strong&gt; Currently, MediaRecorder does not work on the emulator.
            
            &lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guides&lt;/h3&gt;</para>
      <para>For more information about how to use MediaRecorder for recording video, read the
            <see href="https://developer.android.com/guide/topics/media/camera.html#capture-video">Camera</see> developer guide.
            For more information about how to use MediaRecorder for recording sound, read the
            <see href="https://developer.android.com/guide/topics/media/audio-capture.html">Audio Capture</see> developer guide.</para>
      <para>&lt;/div&gt;</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/MediaRecorder" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaRecorder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor.</summary>
        <remarks>
          <para>Default constructor.</para>
          <para>This member is deprecated. Use <c>#MediaRecorder(Context)</c> instead</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#MediaRecorder()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.MediaRecorder()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MediaRecorder (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.#ctor(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="new Android.Media.MediaRecorder : Android.Content.Context -&gt; Android.Media.MediaRecorder" Usage="new Android.Media.MediaRecorder context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">Context the recorder belongs to</param>
        <summary>Default constructor.</summary>
        <remarks>
          <para>Default constructor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#MediaRecorder(android.content.Context)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.MediaRecorder(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MediaRecorder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.MediaRecorder : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.MediaRecorder" Usage="new Android.Media.MediaRecorder (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveMicrophones">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.MicrophoneInfo&gt;? ActiveMicrophones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.MicrophoneInfo&gt; ActiveMicrophones" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.ActiveMicrophones" />
      <MemberSignature Language="F#" Value="member this.ActiveMicrophones : System.Collections.Generic.IList&lt;Android.Media.MicrophoneInfo&gt;" Usage="Android.Media.MediaRecorder.ActiveMicrophones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getActiveMicrophones", "()Ljava/util/List;", "GetGetActiveMicrophonesHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getActiveMicrophones", "()Ljava/util/List;", "GetGetActiveMicrophonesHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.MicrophoneInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return A lists of <c>MicrophoneInfo</c> representing the active microphones.</summary>
        <value>a lists of <c>MicrophoneInfo</c> representing the active microphones</value>
        <remarks>
          <para>Return A lists of <c>MicrophoneInfo</c> representing the active microphones.
            By querying channel mapping for each active microphone, developer can know how
            the microphone is used by each channels or a capture stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#getActiveMicrophones()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.getActiveMicrophones()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveRecordingConfiguration">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioRecordingConfiguration? ActiveRecordingConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioRecordingConfiguration ActiveRecordingConfiguration" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.ActiveRecordingConfiguration" />
      <MemberSignature Language="F#" Value="member this.ActiveRecordingConfiguration : Android.Media.AudioRecordingConfiguration" Usage="Android.Media.MediaRecorder.ActiveRecordingConfiguration" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Android.Media.IAudioRecordingMonitor.ActiveRecordingConfiguration</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getActiveRecordingConfiguration", "()Landroid/media/AudioRecordingConfiguration;", "GetGetActiveRecordingConfigurationHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getActiveRecordingConfiguration", "()Landroid/media/AudioRecordingConfiguration;", "GetGetActiveRecordingConfigurationHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioRecordingConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current active audio recording for this audio recorder.</summary>
        <value>a valid <c>AudioRecordingConfiguration</c> if this recorder is active
            or null otherwise.</value>
        <remarks>
          <para>Returns the current active audio recording for this audio recorder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#getActiveRecordingConfiguration()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.getActiveRecordingConfiguration()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnRoutingChangedListener">
      <MemberSignature Language="C#" Value="public virtual void AddOnRoutingChangedListener (Android.Media.IAudioRoutingOnRoutingChangedListener? listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnRoutingChangedListener(class Android.Media.IAudioRoutingOnRoutingChangedListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.AddOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member AddOnRoutingChangedListener : Android.Media.IAudioRoutingOnRoutingChangedListener * Android.OS.Handler -&gt; unit&#xA;override this.AddOnRoutingChangedListener : Android.Media.IAudioRoutingOnRoutingChangedListener * Android.OS.Handler -&gt; unit" Usage="mediaRecorder.AddOnRoutingChangedListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IAudioRouting.AddOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener,Android.OS.Handler)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;Landroid/os/Handler;)V", "GetAddOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Landroid_os_Handler_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;Landroid/os/Handler;)V", "GetAddOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Landroid_os_Handler_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.IAudioRoutingOnRoutingChangedListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">The <c>AudioRouting.OnRoutingChangedListener</c> interface to receive
            notifications of rerouting events.</param>
        <param name="handler">Specifies the <c>Handler</c> object for the thread on which to execute
            the callback. If &lt;code&gt;null&lt;/code&gt;, the handler on the main looper will be used.</param>
        <summary>Adds an <c>AudioRouting.OnRoutingChangedListener</c> to receive notifications of routing
            changes on this MediaRecorder.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#addOnRoutingChangedListener(android.media.OnRoutingChangedListener,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.addOnRoutingChangedListener(android.media.OnRoutingChangedListener, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioSourceMax">
      <MemberSignature Language="C#" Value="public static int AudioSourceMax { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 AudioSourceMax" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.AudioSourceMax" />
      <MemberSignature Language="F#" Value="static member AudioSourceMax : int" Usage="Android.Media.MediaRecorder.AudioSourceMax" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAudioSourceMax", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAudioSourceMax", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the maximum value for audio sources.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets the maximum value for audio sources.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#getAudioSourceMax()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.getAudioSourceMax()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 4" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaRecorder.ErrorEventArgs&gt; Error;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaRecorder/ErrorEventArgs&gt; Error" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaRecorder.Error" />
      <MemberSignature Language="F#" Value="member this.Error : EventHandler&lt;Android.Media.MediaRecorder.ErrorEventArgs&gt; " Usage="member this.Error : System.EventHandler&lt;Android.Media.MediaRecorder.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaRecorder+ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Info">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.MediaRecorder.InfoEventArgs&gt; Info;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.MediaRecorder/InfoEventArgs&gt; Info" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaRecorder.Info" />
      <MemberSignature Language="F#" Value="member this.Info : EventHandler&lt;Android.Media.MediaRecorder.InfoEventArgs&gt; " Usage="member this.Info : System.EventHandler&lt;Android.Media.MediaRecorder.InfoEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.MediaRecorder+InfoEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.MediaRecorder.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSessionId">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Metrics.LogSessionId LogSessionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Metrics.LogSessionId LogSessionId" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.LogSessionId" />
      <MemberSignature Language="F#" Value="member this.LogSessionId : Android.Media.Metrics.LogSessionId with get, set" Usage="Android.Media.MediaRecorder.LogSessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLogSessionId", "()Landroid/media/metrics/LogSessionId;", "GetGetLogSessionIdHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLogSessionId", "()Landroid/media/metrics/LogSessionId;", "GetGetLogSessionIdHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setLogSessionId", "(Landroid/media/metrics/LogSessionId;)V", "GetSetLogSessionId_Landroid_media_metrics_LogSessionId_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setLogSessionId", "(Landroid/media/metrics/LogSessionId;)V", "GetSetLogSessionId_Landroid_media_metrics_LogSessionId_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Metrics.LogSessionId</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="id">the global ID for monitoring the MediaRecorder performance</param>
        <summary>Returns the <c>LogSessionId</c> for MediaRecorder. -or- Sets the <c>LogSessionId</c> for MediaRecorder.</summary>
        <value>the global ID for monitoring the MediaRecorder performance</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the <c>LogSessionId</c> for MediaRecorder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#getLogSessionId()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.getLogSessionId()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets the <c>LogSessionId</c> for MediaRecorder.</para>
          <para>The log session ID is a random 32-byte hexadecimal string that is used for monitoring the
            MediaRecorder performance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setLogSessionId(android.media.metrics.LogSessionId)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setLogSessionId(android.media.metrics.LogSessionId)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAmplitude">
      <MemberSignature Language="C#" Value="public virtual int MaxAmplitude { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAmplitude" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.MaxAmplitude" />
      <MemberSignature Language="F#" Value="member this.MaxAmplitude : int" Usage="Android.Media.MediaRecorder.MaxAmplitude" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMaxAmplitude", "()I", "GetGetMaxAmplitudeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMaxAmplitude", "()I", "GetGetMaxAmplitudeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum absolute amplitude that was sampled since the last
            call to this method.</summary>
        <value>the maximum absolute amplitude measured since the last call, or
            0 when called for the first time</value>
        <remarks>
          <para>Returns the maximum absolute amplitude that was sampled since the last
            call to this method. Call this only after the setAudioSource().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#getMaxAmplitude()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.getMaxAmplitude()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 the audio source has been set.
</exception>
      </Docs>
    </Member>
    <Member MemberName="MediaErrorServerDied">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaRecorderError MediaErrorServerDied = 100;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaRecorderError MediaErrorServerDied = (100)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaRecorder.MediaErrorServerDied" />
      <MemberSignature Language="F#" Value="val mutable MediaErrorServerDied : Android.Media.MediaRecorderError" Usage="Android.Media.MediaRecorder.MediaErrorServerDied" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MEDIA_ERROR_SERVER_DIED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MEDIA_ERROR_SERVER_DIED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaRecorderError enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaRecorderError enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRecorderError</ReturnType>
      </ReturnValue>
      <MemberValue>100</MemberValue>
      <Docs>
        <summary>Media server died.</summary>
        <remarks>
          <para>Media server died. In this case, the application must release the
            MediaRecorder object and instantiate a new one.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#MEDIA_ERROR_SERVER_DIED" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.MEDIA_ERROR_SERVER_DIED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="MediaRecorderErrorUnknown">
      <MemberSignature Language="C#" Value="public const Android.Media.MediaRecorderError MediaRecorderErrorUnknown = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.MediaRecorderError MediaRecorderErrorUnknown = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.MediaRecorder.MediaRecorderErrorUnknown" />
      <MemberSignature Language="F#" Value="val mutable MediaRecorderErrorUnknown : Android.Media.MediaRecorderError" Usage="Android.Media.MediaRecorder.MediaRecorderErrorUnknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MEDIA_RECORDER_ERROR_UNKNOWN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MEDIA_RECORDER_ERROR_UNKNOWN")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaRecorderError enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.MediaRecorderError enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaRecorderError</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Unspecified media recorder error.</summary>
        <remarks>
          <para>Unspecified media recorder error.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#MEDIA_RECORDER_ERROR_UNKNOWN" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.MEDIA_RECORDER_ERROR_UNKNOWN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Metrics">
      <MemberSignature Language="C#" Value="public virtual Android.OS.PersistableBundle? Metrics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.PersistableBundle Metrics" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.Metrics" />
      <MemberSignature Language="F#" Value="member this.Metrics : Android.OS.PersistableBundle" Usage="Android.Media.MediaRecorder.Metrics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMetrics", "()Landroid/os/PersistableBundle;", "GetGetMetricsHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMetrics", "()Landroid/os/PersistableBundle;", "GetGetMetricsHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.PersistableBundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return Metrics data about the current Mediarecorder instance.</summary>
        <value>a <c>PersistableBundle</c> containing the set of attributes and values
            available for the media being generated by this instance of
            MediaRecorder.
            The attributes are descibed in <c>MetricsConstants</c>.
            
             Additional vendor-specific fields may also be present in
             the return value.</value>
        <remarks>
          <para>Return Metrics data about the current Mediarecorder instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#getMetrics()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.getMetrics()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public virtual void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Pause" />
      <MemberSignature Language="F#" Value="abstract member Pause : unit -&gt; unit&#xA;override this.Pause : unit -&gt; unit" Usage="mediaRecorder.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pause", "()V", "GetPauseHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pause", "()V", "GetPauseHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pauses recording.</summary>
        <remarks>
          <para>Pauses recording. Call this after start(). You may resume recording
            with resume() without reconfiguration, as opposed to stop(). It does
            nothing if the recording is already paused.</para>
          <para>When the recording is paused and resumed, the resulting output would
            be as if nothing happend during paused period, immediately switching
            to the resumed scene.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#pause()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.pause()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredDevice">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioDeviceInfo? PreferredDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioDeviceInfo PreferredDevice" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.PreferredDevice" />
      <MemberSignature Language="F#" Value="member this.PreferredDevice : Android.Media.AudioDeviceInfo" Usage="Android.Media.MediaRecorder.PreferredDevice" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Android.Media.IAudioRouting.PreferredDevice</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPreferredDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetPreferredDeviceHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPreferredDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetPreferredDeviceHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioDeviceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the selected input device specified by <c>#setPreferredDevice</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the selected input device specified by <c>#setPreferredDevice</c>. Note that this
            is not guaranteed to correspond to the actual device being used for recording.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#getPreferredDevice()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.getPreferredDevice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Prepare">
      <MemberSignature Language="C#" Value="public virtual void Prepare ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Prepare() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Prepare" />
      <MemberSignature Language="F#" Value="abstract member Prepare : unit -&gt; unit&#xA;override this.Prepare : unit -&gt; unit" Usage="mediaRecorder.Prepare " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("prepare", "()V", "GetPrepareHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("prepare", "()V", "GetPrepareHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Prepares the recorder to begin capturing and encoding data.</summary>
        <remarks>
          <para>Prepares the recorder to begin capturing and encoding data. This method
            must be called after setting up the desired audio and video sources,
            encoders, file format, etc., but before start().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#prepare()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.prepare()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after
 start() or before setOutputFormat().</exception>
        <exception cref="T:Java.IO.IOException">if prepare fails otherwise.
</exception>
      </Docs>
    </Member>
    <Member MemberName="PrivacySensitive">
      <MemberSignature Language="C#" Value="public virtual bool PrivacySensitive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PrivacySensitive" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.PrivacySensitive" />
      <MemberSignature Language="F#" Value="member this.PrivacySensitive : bool with get, set" Usage="Android.Media.MediaRecorder.PrivacySensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPrivacySensitive", "()Z", "GetIsPrivacySensitiveHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPrivacySensitive", "()Z", "GetIsPrivacySensitiveHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPrivacySensitive", "(Z)V", "GetSetPrivacySensitive_ZHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPrivacySensitive", "(Z)V", "GetSetPrivacySensitive_ZHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="privacySensitive">True if capture from this MediaRecorder must be marked as privacy
            sensitive, false otherwise.</param>
        <summary>Returns whether this MediaRecorder is marked as privacy sensitive or not with
            regard to audio capture. -or- Indicates that this capture request is privacy sensitive and that
            any concurrent capture is not permitted.</summary>
        <value>true if privacy sensitive, false otherwise</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether this MediaRecorder is marked as privacy sensitive or not with
            regard to audio capture.</para>
          <para>See <c>#setPrivacySensitive(boolean)</c></para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#isPrivacySensitive()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.isPrivacySensitive()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Indicates that this capture request is privacy sensitive and that
            any concurrent capture is not permitted.</para>
          <para>The default is not privacy sensitive except when the audio source set with
            <c>#setAudioSource(int)</c> is <c>AudioSource#VOICE_COMMUNICATION</c> or
            <c>AudioSource#CAMCORDER</c>.</para>
          <para>Always takes precedence over default from audio source when set explicitly.</para>
          <para>Using this API is only permitted when the audio source is one of:
            &lt;ul&gt;
            &lt;li&gt;<c>AudioSource#MIC</c>&lt;/li&gt;
            &lt;li&gt;<c>AudioSource#CAMCORDER</c>&lt;/li&gt;
            &lt;li&gt;<c>AudioSource#VOICE_RECOGNITION</c>&lt;/li&gt;
            &lt;li&gt;<c>AudioSource#VOICE_COMMUNICATION</c>&lt;/li&gt;
            &lt;li&gt;<c>AudioSource#UNPROCESSED</c>&lt;/li&gt;
            &lt;li&gt;<c>AudioSource#VOICE_PERFORMANCE</c>&lt;/li&gt;
            &lt;/ul&gt;
            Invoking <c>#prepare()</c> will throw an IOException if this
            condition is not met.</para>
          <para>Must be called after <c>#setAudioSource(int)</c> and before <c>#setOutputFormat(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setPrivacySensitive(boolean)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setPrivacySensitive(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterAudioRecordingCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterAudioRecordingCallback (Java.Util.Concurrent.IExecutor executor, Android.Media.AudioManager.AudioRecordingCallback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAudioRecordingCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Media.AudioManager/AudioRecordingCallback cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.RegisterAudioRecordingCallback(Java.Util.Concurrent.IExecutor,Android.Media.AudioManager.AudioRecordingCallback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterAudioRecordingCallback : Java.Util.Concurrent.IExecutor * Android.Media.AudioManager.AudioRecordingCallback -&gt; unit&#xA;override this.RegisterAudioRecordingCallback : Java.Util.Concurrent.IExecutor * Android.Media.AudioManager.AudioRecordingCallback -&gt; unit" Usage="mediaRecorder.RegisterAudioRecordingCallback (executor, cb)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IAudioRecordingMonitor.RegisterAudioRecordingCallback(Java.Util.Concurrent.IExecutor,Android.Media.AudioManager.AudioRecordingCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAudioRecordingCallback", "(Ljava/util/concurrent/Executor;Landroid/media/AudioManager$AudioRecordingCallback;)V", "GetRegisterAudioRecordingCallback_Ljava_util_concurrent_Executor_Landroid_media_AudioManager_AudioRecordingCallback_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerAudioRecordingCallback", "(Ljava/util/concurrent/Executor;Landroid/media/AudioManager$AudioRecordingCallback;)V", "GetRegisterAudioRecordingCallback_Ljava_util_concurrent_Executor_Landroid_media_AudioManager_AudioRecordingCallback_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioRecordingCallback" />
      </Parameters>
      <Docs>
        <param name="executor">
          <c>Executor</c> to handle the callbacks.</param>
        <param name="cb">non-null callback to register</param>
        <summary>Register a callback to be notified of audio capture changes via a
            <c>AudioManager.AudioRecordingCallback</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#registerAudioRecordingCallback(java.util.concurrent.Executor,%20android.media.AudioRecordingCallback)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.registerAudioRecordingCallback(java.util.concurrent.Executor, android.media.AudioRecordingCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Release" />
      <MemberSignature Language="F#" Value="abstract member Release : unit -&gt; unit&#xA;override this.Release : unit -&gt; unit" Usage="mediaRecorder.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "GetReleaseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "()V", "GetReleaseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases resources associated with this MediaRecorder object.</summary>
        <remarks>
          <para>Releases resources associated with this MediaRecorder object.
            It is good practice to call this method when you're done
            using the MediaRecorder. In particular, whenever an Activity
            of an application is paused (its onPause() method is called),
            or stopped (its onStop() method is called), this method should be
            invoked to release the MediaRecorder object, unless the application
            has a special need to keep the object around. In addition to
            unnecessary resources (such as memory and instances of codecs)
            being held, failure to call this method immediately if a
            MediaRecorder object is no longer needed may also lead to
            continuous battery consumption for mobile devices, and recording
            failure for other applications if no multiple instances of the
            same codec are supported on a device. Even if multiple instances
            of the same codec are supported, some performance degradation
            may be expected when unnecessary multiple instances are used
            at the same time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#release()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOnRoutingChangedListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveOnRoutingChangedListener (Android.Media.IAudioRoutingOnRoutingChangedListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnRoutingChangedListener(class Android.Media.IAudioRoutingOnRoutingChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.RemoveOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnRoutingChangedListener : Android.Media.IAudioRoutingOnRoutingChangedListener -&gt; unit&#xA;override this.RemoveOnRoutingChangedListener : Android.Media.IAudioRoutingOnRoutingChangedListener -&gt; unit" Usage="mediaRecorder.RemoveOnRoutingChangedListener listener" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IAudioRouting.RemoveOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;)V", "GetRemoveOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;)V", "GetRemoveOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.IAudioRoutingOnRoutingChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">The previously added <c>AudioRouting.OnRoutingChangedListener</c> interface
            to remove.</param>
        <summary>Removes an <c>AudioRouting.OnRoutingChangedListener</c> which has been previously added
            to receive rerouting notifications.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Reset" />
      <MemberSignature Language="F#" Value="abstract member Reset : unit -&gt; unit&#xA;override this.Reset : unit -&gt; unit" Usage="mediaRecorder.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "()V", "GetResetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "()V", "GetResetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Restarts the MediaRecorder to its idle state.</summary>
        <remarks>
          <para>Restarts the MediaRecorder to its idle state. After calling
            this method, you will have to configure it again as if it had just been
            constructed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#reset()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.reset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public virtual void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Resume" />
      <MemberSignature Language="F#" Value="abstract member Resume : unit -&gt; unit&#xA;override this.Resume : unit -&gt; unit" Usage="mediaRecorder.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resume", "()V", "GetResumeHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resume", "()V", "GetResumeHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resumes recording.</summary>
        <remarks>
          <para>Resumes recording. Call this after start(). It does nothing if the
            recording is not paused.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#resume()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.resume()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutedDevice">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioDeviceInfo? RoutedDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioDeviceInfo RoutedDevice" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.RoutedDevice" />
      <MemberSignature Language="F#" Value="member this.RoutedDevice : Android.Media.AudioDeviceInfo" Usage="Android.Media.MediaRecorder.RoutedDevice" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Android.Media.IAudioRouting.RoutedDevice</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRoutedDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetRoutedDeviceHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRoutedDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetRoutedDeviceHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioDeviceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an <c>AudioDeviceInfo</c> identifying the current routing of this MediaRecorder
            Note: The query is only valid if the MediaRecorder is currently recording.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns an <c>AudioDeviceInfo</c> identifying the current routing of this MediaRecorder
            Note: The query is only valid if the MediaRecorder is currently recording.
            If the recorder is not recording, the returned device can be null or correspond to previously
            selected device when the recorder was last active.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#getRoutedDevice()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.getRoutedDevice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; RoutingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; RoutingChanged" />
      <MemberSignature Language="DocId" Value="E:Android.Media.MediaRecorder.RoutingChanged" />
      <MemberSignature Language="F#" Value="member this.RoutingChanged : EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; " Usage="member this.RoutingChanged : System.EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAudioChannels">
      <MemberSignature Language="C#" Value="public virtual void SetAudioChannels (int numChannels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioChannels(int32 numChannels) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAudioChannels(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioChannels : int -&gt; unit&#xA;override this.SetAudioChannels : int -&gt; unit" Usage="mediaRecorder.SetAudioChannels numChannels" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAudioChannels", "(I)V", "GetSetAudioChannels_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAudioChannels", "(I)V", "GetSetAudioChannels_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="numChannels" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="numChannels">the number of audio channels. Usually it is either 1 (mono) or 2
            (stereo).</param>
        <summary>Sets the number of audio channels for recording.</summary>
        <remarks>
          <para>Sets the number of audio channels for recording. Call this method before prepare().
            Prepare() may perform additional checks on the parameter to make sure whether the
            specified number of audio channels are applicable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setAudioChannels(int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setAudioChannels(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioEncoder">
      <MemberSignature Language="C#" Value="public virtual void SetAudioEncoder (Android.Media.AudioEncoder audio_encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioEncoder(valuetype Android.Media.AudioEncoder audio_encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAudioEncoder(Android.Media.AudioEncoder)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioEncoder : Android.Media.AudioEncoder -&gt; unit&#xA;override this.SetAudioEncoder : Android.Media.AudioEncoder -&gt; unit" Usage="mediaRecorder.SetAudioEncoder audio_encoder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAudioEncoder", "(I)V", "GetSetAudioEncoder_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAudioEncoder", "(I)V", "GetSetAudioEncoder_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audio_encoder" Type="Android.Media.AudioEncoder">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audio_encoder">the audio encoder to use.</param>
        <summary>Sets the audio encoder to be used for recording.</summary>
        <remarks>
          <para>Sets the audio encoder to be used for recording. If this method is not
            called, the output file will not contain an audio track. Call this after
            setOutputFormat() but before prepare().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setAudioEncoder(int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setAudioEncoder(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 setOutputFormat() or after prepare().</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAudioEncodingBitRate">
      <MemberSignature Language="C#" Value="public virtual void SetAudioEncodingBitRate (int bitRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioEncodingBitRate(int32 bitRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAudioEncodingBitRate(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioEncodingBitRate : int -&gt; unit&#xA;override this.SetAudioEncodingBitRate : int -&gt; unit" Usage="mediaRecorder.SetAudioEncodingBitRate bitRate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAudioEncodingBitRate", "(I)V", "GetSetAudioEncodingBitRate_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAudioEncodingBitRate", "(I)V", "GetSetAudioEncodingBitRate_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bitRate">the audio encoding bit rate in bits per second.</param>
        <summary>Sets the audio encoding bit rate for recording.</summary>
        <remarks>
          <para>Sets the audio encoding bit rate for recording. Call this method before prepare().
            Prepare() may perform additional checks on the parameter to make sure whether the
            specified bit rate is applicable, and sometimes the passed bitRate will be clipped
            internally to ensure the audio recording can proceed smoothly based on the
            capabilities of the platform.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setAudioEncodingBitRate(int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setAudioEncodingBitRate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioProfile">
      <MemberSignature Language="C#" Value="public virtual void SetAudioProfile (Android.Media.EncoderProfiles.AudioProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioProfile(class Android.Media.EncoderProfiles/AudioProfile profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAudioProfile(Android.Media.EncoderProfiles.AudioProfile)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioProfile : Android.Media.EncoderProfiles.AudioProfile -&gt; unit&#xA;override this.SetAudioProfile : Android.Media.EncoderProfiles.AudioProfile -&gt; unit" Usage="mediaRecorder.SetAudioProfile profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAudioProfile", "(Landroid/media/EncoderProfiles$AudioProfile;)V", "GetSetAudioProfile_Landroid_media_EncoderProfiles_AudioProfile_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAudioProfile", "(Landroid/media/EncoderProfiles$AudioProfile;)V", "GetSetAudioProfile_Landroid_media_EncoderProfiles_AudioProfile_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="Android.Media.EncoderProfiles+AudioProfile" />
      </Parameters>
      <Docs>
        <param name="profile">the AudioProfile to use</param>
        <summary>Uses the settings from an AudioProfile for recording.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setAudioProfile(android.media.AudioProfile)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setAudioProfile(android.media.AudioProfile)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAudioSamplingRate">
      <MemberSignature Language="C#" Value="public virtual void SetAudioSamplingRate (int samplingRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioSamplingRate(int32 samplingRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAudioSamplingRate(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioSamplingRate : int -&gt; unit&#xA;override this.SetAudioSamplingRate : int -&gt; unit" Usage="mediaRecorder.SetAudioSamplingRate samplingRate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAudioSamplingRate", "(I)V", "GetSetAudioSamplingRate_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAudioSamplingRate", "(I)V", "GetSetAudioSamplingRate_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="samplingRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="samplingRate">the sampling rate for audio in samples per second.</param>
        <summary>Sets the audio sampling rate for recording.</summary>
        <remarks>
          <para>Sets the audio sampling rate for recording. Call this method before prepare().
            Prepare() may perform additional checks on the parameter to make sure whether
            the specified audio sampling rate is applicable. The sampling rate really depends
            on the format for the audio recording, as well as the capabilities of the platform.
            For instance, the sampling rate supported by AAC audio coding standard ranges
            from 8 to 96 kHz, the sampling rate supported by AMRNB is 8kHz, and the sampling
            rate supported by AMRWB is 16kHz. Please consult with the related audio coding
            standard for the supported audio sampling rate.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setAudioSamplingRate(int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setAudioSamplingRate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetAudioSource">
      <MemberSignature Language="C#" Value="public virtual void SetAudioSource (Android.Media.AudioSource audioSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAudioSource(valuetype Android.Media.AudioSource audioSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAudioSource(Android.Media.AudioSource)" />
      <MemberSignature Language="F#" Value="abstract member SetAudioSource : Android.Media.AudioSource -&gt; unit&#xA;override this.SetAudioSource : Android.Media.AudioSource -&gt; unit" Usage="mediaRecorder.SetAudioSource audioSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAudioSource", "(I)V", "GetSetAudioSource_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAudioSource", "(I)V", "GetSetAudioSource_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioSource" Type="Android.Media.AudioSource">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioSource">the audio source to use</param>
        <summary>Sets the audio source to be used for recording.</summary>
        <remarks>
          <para>Sets the audio source to be used for recording. If this method is not
            called, the output file will not contain an audio track. The source needs
            to be specified before setting recording-parameters or encoders. Call
            this only before setOutputFormat().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setAudioSource(int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setAudioSource(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after setOutputFormat()</exception>
      </Docs>
    </Member>
    <Member MemberName="SetAuxiliaryOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetAuxiliaryOutputFile (Java.IO.FileDescriptor? fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAuxiliaryOutputFile(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAuxiliaryOutputFile(Java.IO.FileDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member SetAuxiliaryOutputFile : Java.IO.FileDescriptor -&gt; unit&#xA;override this.SetAuxiliaryOutputFile : Java.IO.FileDescriptor -&gt; unit" Usage="mediaRecorder.SetAuxiliaryOutputFile fd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAuxiliaryOutputFile", "(Ljava/io/FileDescriptor;)V", "GetSetAuxiliaryOutputFile_Ljava_io_FileDescriptor_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAuxiliaryOutputFile", "(Ljava/io/FileDescriptor;)V", "GetSetAuxiliaryOutputFile_Ljava_io_FileDescriptor_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">To be added.</param>
        <summary>Currently not implemented.</summary>
        <remarks>
          <para>Currently not implemented. It does nothing.</para>
          <para>This member is deprecated. Time lapse mode video recording using camera still image capture
            is not desirable, and will not be supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setAuxiliaryOutputFile(java.io.FileDescriptor)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setAuxiliaryOutputFile(java.io.FileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAuxiliaryOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetAuxiliaryOutputFile (string? path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAuxiliaryOutputFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetAuxiliaryOutputFile(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetAuxiliaryOutputFile : string -&gt; unit&#xA;override this.SetAuxiliaryOutputFile : string -&gt; unit" Usage="mediaRecorder.SetAuxiliaryOutputFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAuxiliaryOutputFile", "(Ljava/lang/String;)V", "GetSetAuxiliaryOutputFile_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAuxiliaryOutputFile", "(Ljava/lang/String;)V", "GetSetAuxiliaryOutputFile_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Currently not implemented.</summary>
        <remarks>
          <para>Currently not implemented. It does nothing.</para>
          <para>This member is deprecated. Time lapse mode video recording using camera still image capture
            is not desirable, and will not be supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setAuxiliaryOutputFile(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setAuxiliaryOutputFile(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCamera">
      <MemberSignature Language="C#" Value="public virtual void SetCamera (Android.Hardware.Camera? c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCamera(class Android.Hardware.Camera c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetCamera(Android.Hardware.Camera)" />
      <MemberSignature Language="F#" Value="abstract member SetCamera : Android.Hardware.Camera -&gt; unit&#xA;override this.SetCamera : Android.Hardware.Camera -&gt; unit" Usage="mediaRecorder.SetCamera c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCamera", "(Landroid/hardware/Camera;)V", "GetSetCamera_Landroid_hardware_Camera_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCamera", "(Landroid/hardware/Camera;)V", "GetSetCamera_Landroid_hardware_Camera_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Hardware.Camera" />
      </Parameters>
      <Docs>
        <param name="c">the Camera to use for recording</param>
        <summary>Sets a <c>android.hardware.Camera</c> to use for recording.</summary>
        <remarks>
          <para>Sets a <c>android.hardware.Camera</c> to use for recording.</para>
          <para>Use this function to switch quickly between preview and capture mode without a teardown of
            the camera object. <c>android.hardware.Camera#unlock()</c> should be called before
            this. Must call before <c>#prepare</c>.</para>
          <para>This member is deprecated. Use <c>#getSurface</c> and the <c>android.hardware.camera2</c> API instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setCamera(android.hardware.Camera)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setCamera(android.hardware.Camera)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetCaptureRate">
      <MemberSignature Language="C#" Value="public virtual void SetCaptureRate (double fps);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCaptureRate(float64 fps) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetCaptureRate(System.Double)" />
      <MemberSignature Language="F#" Value="abstract member SetCaptureRate : double -&gt; unit&#xA;override this.SetCaptureRate : double -&gt; unit" Usage="mediaRecorder.SetCaptureRate fps" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCaptureRate", "(D)V", "GetSetCaptureRate_DHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCaptureRate", "(D)V", "GetSetCaptureRate_DHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fps" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="fps">Rate at which frames should be captured in frames per second.
            The fps can go as low as desired. However the fastest fps will be limited by the hardware.
            For resolutions that can be captured by the video camera, the fastest fps can be computed using
            <c>android.hardware.Camera.Parameters#getPreviewFpsRange(int[])</c>. For higher
            resolutions the fastest fps may be more restrictive.
            Note that the recorder cannot guarantee that frames will be captured at the
            given rate due to camera/encoder limitations. However it tries to be as close as
            possible.</param>
        <summary>Set video frame capture rate.</summary>
        <remarks>
          <para>Set video frame capture rate. This can be used to set a different video frame capture
            rate than the recorded video's playback rate. This method also sets the recording mode
            to time lapse. In time lapse video recording, only video is recorded. Audio related
            parameters are ignored when a time lapse recording session starts, if an application
            sets them.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setCaptureRate(double)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setCaptureRate(double)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetInputSurface">
      <MemberSignature Language="C#" Value="public virtual void SetInputSurface (Android.Views.Surface surface);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInputSurface(class Android.Views.Surface surface) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetInputSurface(Android.Views.Surface)" />
      <MemberSignature Language="F#" Value="abstract member SetInputSurface : Android.Views.Surface -&gt; unit&#xA;override this.SetInputSurface : Android.Views.Surface -&gt; unit" Usage="mediaRecorder.SetInputSurface surface" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInputSurface", "(Landroid/view/Surface;)V", "GetSetInputSurface_Landroid_view_Surface_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInputSurface", "(Landroid/view/Surface;)V", "GetSetInputSurface_Landroid_view_Surface_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surface" Type="Android.Views.Surface" />
      </Parameters>
      <Docs>
        <param name="surface">a persistent input surface created by
                      <c>MediaCodec#createPersistentInputSurface</c></param>
        <summary>Configures the recorder to use a persistent surface when using SURFACE video source.</summary>
        <remarks>
          <para>Configures the recorder to use a persistent surface when using SURFACE video source.</para>
          <para>May only be called before <c>#prepare</c>. If called, <c>#getSurface</c> should
            not be used and will throw IllegalStateException. Frames rendered to the Surface
            before <c>#start</c> will be discarded.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setInputSurface(android.view.Surface)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setInputSurface(android.view.Surface)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocation">
      <MemberSignature Language="C#" Value="public virtual void SetLocation (float latitude, float longitude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocation(float32 latitude, float32 longitude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetLocation(System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetLocation : single * single -&gt; unit&#xA;override this.SetLocation : single * single -&gt; unit" Usage="mediaRecorder.SetLocation (latitude, longitude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLocation", "(FF)V", "GetSetLocation_FFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLocation", "(FF)V", "GetSetLocation_FFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="latitude" Type="System.Single" />
        <Parameter Name="longitude" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="latitude">latitude in degrees. Its value must be in the
            range [-90, 90].</param>
        <param name="longitude">longitude in degrees. Its value must be in the
            range [-180, 180].</param>
        <summary>Set and store the geodata (latitude and longitude) in the output file.</summary>
        <remarks>
          <para>Set and store the geodata (latitude and longitude) in the output file.
            This method should be called before prepare(). The geodata is
            stored in udta box if the output format is OutputFormat.THREE_GPP
            or OutputFormat.MPEG_4, and is ignored for other output formats.
            The geodata is stored according to ISO-6709 standard.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setLocation(float,%20float)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setLocation(float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given latitude or
 longitude is out of range.

</exception>
      </Docs>
    </Member>
    <Member MemberName="SetMaxDuration">
      <MemberSignature Language="C#" Value="public virtual void SetMaxDuration (int max_duration_ms);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaxDuration(int32 max_duration_ms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetMaxDuration(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetMaxDuration : int -&gt; unit&#xA;override this.SetMaxDuration : int -&gt; unit" Usage="mediaRecorder.SetMaxDuration max_duration_ms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMaxDuration", "(I)V", "GetSetMaxDuration_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMaxDuration", "(I)V", "GetSetMaxDuration_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="max_duration_ms" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="max_duration_ms">the maximum duration in ms (if zero or negative, disables the duration limit)</param>
        <summary>Sets the maximum duration (in ms) of the recording session.</summary>
        <remarks>
          <para>Sets the maximum duration (in ms) of the recording session.
            Call this after setOutputFormat() but before prepare().
            After recording reaches the specified duration, a notification
            will be sent to the <c>android.media.MediaRecorder.OnInfoListener</c>
            with a "what" code of <c>#MEDIA_RECORDER_INFO_MAX_DURATION_REACHED</c>
            and recording will be stopped. Stopping happens asynchronously, there
            is no guarantee that the recorder will have stopped by the time the
            listener is notified.</para>
          <para>When using MPEG-4 container (<c>#setOutputFormat(int)</c> with
            <c>OutputFormat#MPEG_4</c>), it is recommended to set maximum duration that fits the use
            case. Setting a larger than required duration may result in a larger than needed output file
            because of space reserved for MOOV box expecting large movie data in this recording session.
             Unused space of MOOV box is turned into FREE box in the output file.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setMaxDuration(int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setMaxDuration(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SetMaxFileSize">
      <MemberSignature Language="C#" Value="public virtual void SetMaxFileSize (long max_filesize_bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaxFileSize(int64 max_filesize_bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetMaxFileSize(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetMaxFileSize : int64 -&gt; unit&#xA;override this.SetMaxFileSize : int64 -&gt; unit" Usage="mediaRecorder.SetMaxFileSize max_filesize_bytes" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMaxFileSize", "(J)V", "GetSetMaxFileSize_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMaxFileSize", "(J)V", "GetSetMaxFileSize_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="max_filesize_bytes" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="max_filesize_bytes">the maximum filesize in bytes (if zero or negative, disables the limit)</param>
        <summary>Sets the maximum filesize (in bytes) of the recording session.</summary>
        <remarks>
          <para>Sets the maximum filesize (in bytes) of the recording session.
            Call this after setOutputFormat() but before prepare().
            After recording reaches the specified filesize, a notification
            will be sent to the <c>android.media.MediaRecorder.OnInfoListener</c>
            with a "what" code of <c>#MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED</c>
            and recording will be stopped. Stopping happens asynchronously, there
            is no guarantee that the recorder will have stopped by the time the
            listener is notified.</para>
          <para>When using MPEG-4 container (<c>#setOutputFormat(int)</c> with
            <c>OutputFormat#MPEG_4</c>), it is recommended to set maximum filesize that fits the use
            case. Setting a larger than required filesize may result in a larger than needed output file
            because of space reserved for MOOV box expecting large movie data in this recording session.
            Unused space of MOOV box is turned into FREE box in the output file.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setMaxFileSize(long)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setMaxFileSize(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SetNextOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetNextOutputFile (Java.IO.File? file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNextOutputFile(class Java.IO.File file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetNextOutputFile(Java.IO.File)" />
      <MemberSignature Language="F#" Value="abstract member SetNextOutputFile : Java.IO.File -&gt; unit&#xA;override this.SetNextOutputFile : Java.IO.File -&gt; unit" Usage="mediaRecorder.SetNextOutputFile file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setNextOutputFile", "(Ljava/io/File;)V", "GetSetNextOutputFile_Ljava_io_File_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setNextOutputFile", "(Ljava/io/File;)V", "GetSetNextOutputFile_Ljava_io_File_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="file">The file to use.</param>
        <summary>Sets the next output file to be used when the maximum filesize is reached on the prior
            output <c>#setOutputFile</c> or <c>#setNextOutputFile</c>).</summary>
        <remarks>
          <para>Sets the next output file to be used when the maximum filesize is reached on the prior
            output <c>#setOutputFile</c> or <c>#setNextOutputFile</c>). File should be seekable.
            After setting the next output file, application should not use the file until <c>#stop</c>.
            Application must call this after receiving on the
            <c>android.media.MediaRecorder.OnInfoListener</c> a "what" code of
            <c>#MEDIA_RECORDER_INFO_MAX_FILESIZE_APPROACHING</c> and before receiving a "what" code of
            <c>#MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED</c>. The file is not used until switching to
            that output. Application will receive <c>#MEDIA_RECORDER_INFO_NEXT_OUTPUT_FILE_STARTED</c>
            when the next output file is used. Application will not be able to set a new output file if
            the previous one has not been used. Application is responsible for cleaning up unused files
            after <c>#stop</c> is called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setNextOutputFile(java.io.File)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setNextOutputFile(java.io.File)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNextOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetNextOutputFile (Java.IO.FileDescriptor? fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNextOutputFile(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetNextOutputFile(Java.IO.FileDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member SetNextOutputFile : Java.IO.FileDescriptor -&gt; unit&#xA;override this.SetNextOutputFile : Java.IO.FileDescriptor -&gt; unit" Usage="mediaRecorder.SetNextOutputFile fd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setNextOutputFile", "(Ljava/io/FileDescriptor;)V", "GetSetNextOutputFile_Ljava_io_FileDescriptor_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setNextOutputFile", "(Ljava/io/FileDescriptor;)V", "GetSetNextOutputFile_Ljava_io_FileDescriptor_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">an open file descriptor to be written into.</param>
        <summary>Sets the next output file descriptor to be used when the maximum filesize is reached
            on the prior output <c>#setOutputFile</c> or <c>#setNextOutputFile</c>).</summary>
        <remarks>
          <para>Sets the next output file descriptor to be used when the maximum filesize is reached
            on the prior output <c>#setOutputFile</c> or <c>#setNextOutputFile</c>). File descriptor
            must be seekable and writable. After setting the next output file, application should not
            use the file referenced by this file descriptor until <c>#stop</c>. It is the application's
            responsibility to close the file descriptor. It is safe to do so as soon as this call returns.
            Application must call this after receiving on the
            <c>android.media.MediaRecorder.OnInfoListener</c> a "what" code of
            <c>#MEDIA_RECORDER_INFO_MAX_FILESIZE_APPROACHING</c> and before receiving a "what" code of
            <c>#MEDIA_RECORDER_INFO_MAX_FILESIZE_REACHED</c>. The file is not used until switching to
            that output. Application will receive<c>#MEDIA_RECORDER_INFO_NEXT_OUTPUT_FILE_STARTED</c>
            when the next output file is used. Application will not be able to set a new output file if
            the previous one has not been used. Application is responsible for cleaning up unused files
            after <c>#stop</c> is called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setNextOutputFile(java.io.FileDescriptor)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setNextOutputFile(java.io.FileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnErrorListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnErrorListener (Android.Media.MediaRecorder.IOnErrorListener? l);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnErrorListener(class Android.Media.MediaRecorder/IOnErrorListener l) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOnErrorListener(Android.Media.MediaRecorder.IOnErrorListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnErrorListener : Android.Media.MediaRecorder.IOnErrorListener -&gt; unit&#xA;override this.SetOnErrorListener : Android.Media.MediaRecorder.IOnErrorListener -&gt; unit" Usage="mediaRecorder.SetOnErrorListener l" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnErrorListener", "(Landroid/media/MediaRecorder$OnErrorListener;)V", "GetSetOnErrorListener_Landroid_media_MediaRecorder_OnErrorListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnErrorListener", "(Landroid/media/MediaRecorder$OnErrorListener;)V", "GetSetOnErrorListener_Landroid_media_MediaRecorder_OnErrorListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="l" Type="Android.Media.MediaRecorder+IOnErrorListener" />
      </Parameters>
      <Docs>
        <param name="l">the callback that will be run</param>
        <summary>Register a callback to be invoked when an error occurs while
            recording.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setOnErrorListener(android.media.OnErrorListener)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setOnErrorListener(android.media.OnErrorListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetOnInfoListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnInfoListener (Android.Media.MediaRecorder.IOnInfoListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnInfoListener(class Android.Media.MediaRecorder/IOnInfoListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOnInfoListener(Android.Media.MediaRecorder.IOnInfoListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnInfoListener : Android.Media.MediaRecorder.IOnInfoListener -&gt; unit&#xA;override this.SetOnInfoListener : Android.Media.MediaRecorder.IOnInfoListener -&gt; unit" Usage="mediaRecorder.SetOnInfoListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnInfoListener", "(Landroid/media/MediaRecorder$OnInfoListener;)V", "GetSetOnInfoListener_Landroid_media_MediaRecorder_OnInfoListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnInfoListener", "(Landroid/media/MediaRecorder$OnInfoListener;)V", "GetSetOnInfoListener_Landroid_media_MediaRecorder_OnInfoListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.MediaRecorder+IOnInfoListener" />
      </Parameters>
      <Docs>
        <param name="listener">the callback that will be run</param>
        <summary>Register a callback to be invoked when an informational event occurs while
            recording.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setOnInfoListener(android.media.OnInfoListener)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setOnInfoListener(android.media.OnInfoListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetOrientationHint">
      <MemberSignature Language="C#" Value="public virtual void SetOrientationHint (int degrees);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOrientationHint(int32 degrees) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOrientationHint(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetOrientationHint : int -&gt; unit&#xA;override this.SetOrientationHint : int -&gt; unit" Usage="mediaRecorder.SetOrientationHint degrees" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOrientationHint", "(I)V", "GetSetOrientationHint_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOrientationHint", "(I)V", "GetSetOrientationHint_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="degrees" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="degrees">the angle to be rotated clockwise in degrees.
            The supported angles are 0, 90, 180, and 270 degrees.</param>
        <summary>Sets the orientation hint for output video playback.</summary>
        <remarks>
          <para>Sets the orientation hint for output video playback.
            This method should be called before prepare(). This method will not
            trigger the source video frame to rotate during video recording, but to
            add a composition matrix containing the rotation angle in the output
            video if the output format is OutputFormat.THREE_GPP or
            OutputFormat.MPEG_4 so that a video player can choose the proper
            orientation for playback. Note that some video players may choose
            to ignore the compostion matrix in a video during playback.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setOrientationHint(int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setOrientationHint(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the angle is not supported.

</exception>
      </Docs>
    </Member>
    <Member MemberName="SetOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetOutputFile (Java.IO.File? file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputFile(class Java.IO.File file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOutputFile(Java.IO.File)" />
      <MemberSignature Language="F#" Value="abstract member SetOutputFile : Java.IO.File -&gt; unit&#xA;override this.SetOutputFile : Java.IO.File -&gt; unit" Usage="mediaRecorder.SetOutputFile file" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOutputFile", "(Ljava/io/File;)V", "GetSetOutputFile_Ljava_io_File_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOutputFile", "(Ljava/io/File;)V", "GetSetOutputFile_Ljava_io_File_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="file">the file object to be written into.</param>
        <summary>Pass in the file object to be written.</summary>
        <remarks>
          <para>Pass in the file object to be written. Call this after setOutputFormat() but before prepare().
            File should be seekable. After setting the next output file, application should not use the
            file until <c>#stop</c>. Application is responsible for cleaning up unused files after
            <c>#stop</c> is called.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setOutputFile(java.io.File)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setOutputFile(java.io.File)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetOutputFile (Java.IO.FileDescriptor? fd);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputFile(class Java.IO.FileDescriptor fd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOutputFile(Java.IO.FileDescriptor)" />
      <MemberSignature Language="F#" Value="abstract member SetOutputFile : Java.IO.FileDescriptor -&gt; unit&#xA;override this.SetOutputFile : Java.IO.FileDescriptor -&gt; unit" Usage="mediaRecorder.SetOutputFile fd" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOutputFile", "(Ljava/io/FileDescriptor;)V", "GetSetOutputFile_Ljava_io_FileDescriptor_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOutputFile", "(Ljava/io/FileDescriptor;)V", "GetSetOutputFile_Ljava_io_FileDescriptor_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="fd">an open file descriptor to be written into.</param>
        <summary>Pass in the file descriptor of the file to be written.</summary>
        <remarks>
          <para>Pass in the file descriptor of the file to be written. Call this after
            setOutputFormat() but before prepare().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setOutputFile(java.io.FileDescriptor)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setOutputFile(java.io.FileDescriptor)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 setOutputFormat() or after prepare()
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetOutputFile">
      <MemberSignature Language="C#" Value="public virtual void SetOutputFile (string? path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOutputFile(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetOutputFile : string -&gt; unit&#xA;override this.SetOutputFile : string -&gt; unit" Usage="mediaRecorder.SetOutputFile path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOutputFile", "(Ljava/lang/String;)V", "GetSetOutputFile_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOutputFile", "(Ljava/lang/String;)V", "GetSetOutputFile_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">The pathname to use.</param>
        <summary>Sets the path of the output file to be produced.</summary>
        <remarks>
          <para>Sets the path of the output file to be produced. Call this after
            setOutputFormat() but before prepare().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setOutputFile(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setOutputFile(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 setOutputFormat() or after prepare()
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetOutputFormat">
      <MemberSignature Language="C#" Value="public virtual void SetOutputFormat (Android.Media.OutputFormat output_format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOutputFormat(valuetype Android.Media.OutputFormat output_format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetOutputFormat(Android.Media.OutputFormat)" />
      <MemberSignature Language="F#" Value="abstract member SetOutputFormat : Android.Media.OutputFormat -&gt; unit&#xA;override this.SetOutputFormat : Android.Media.OutputFormat -&gt; unit" Usage="mediaRecorder.SetOutputFormat output_format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOutputFormat", "(I)V", "GetSetOutputFormat_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOutputFormat", "(I)V", "GetSetOutputFormat_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output_format" Type="Android.Media.OutputFormat">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="output_format">the output format to use. The output format
            needs to be specified before setting recording-parameters or encoders.</param>
        <summary>Sets the format of the output file produced during recording.</summary>
        <remarks>
          <para>Sets the format of the output file produced during recording. Call this
            after setAudioSource()/setVideoSource() but before prepare().</para>
          <para>It is recommended to always use 3GP format when using the H.263
            video encoder and AMR audio encoder. Using an MPEG-4 container format
            may confuse some desktop players.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setOutputFormat(int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setOutputFormat(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after prepare() or before
 setAudioSource()/setVideoSource().</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPreferredDevice">
      <MemberSignature Language="C#" Value="public virtual bool SetPreferredDevice (Android.Media.AudioDeviceInfo? deviceInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPreferredDevice(class Android.Media.AudioDeviceInfo deviceInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetPreferredDevice(Android.Media.AudioDeviceInfo)" />
      <MemberSignature Language="F#" Value="abstract member SetPreferredDevice : Android.Media.AudioDeviceInfo -&gt; bool&#xA;override this.SetPreferredDevice : Android.Media.AudioDeviceInfo -&gt; bool" Usage="mediaRecorder.SetPreferredDevice deviceInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IAudioRouting.SetPreferredDevice(Android.Media.AudioDeviceInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPreferredDevice", "(Landroid/media/AudioDeviceInfo;)Z", "GetSetPreferredDevice_Landroid_media_AudioDeviceInfo_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPreferredDevice", "(Landroid/media/AudioDeviceInfo;)Z", "GetSetPreferredDevice_Landroid_media_AudioDeviceInfo_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceInfo" Type="Android.Media.AudioDeviceInfo" />
      </Parameters>
      <Docs>
        <param name="deviceInfo">The <c>AudioDeviceInfo</c> specifying the audio source.
             If deviceInfo is null, default routing is restored.</param>
        <summary>Specifies an audio device (via an <c>AudioDeviceInfo</c> object) to route
            the input from this MediaRecorder.</summary>
        <returns>true if succesful, false if the specified <c>AudioDeviceInfo</c> is non-null and
            does not correspond to a valid audio input device.</returns>
        <remarks>
          <para>Specifies an audio device (via an <c>AudioDeviceInfo</c> object) to route
            the input from this MediaRecorder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setPreferredDevice(android.media.AudioDeviceInfo)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setPreferredDevice(android.media.AudioDeviceInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPreferredMicrophoneDirection">
      <MemberSignature Language="C#" Value="public virtual bool SetPreferredMicrophoneDirection (Android.Media.MicDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPreferredMicrophoneDirection(valuetype Android.Media.MicDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetPreferredMicrophoneDirection(Android.Media.MicDirection)" />
      <MemberSignature Language="F#" Value="abstract member SetPreferredMicrophoneDirection : Android.Media.MicDirection -&gt; bool&#xA;override this.SetPreferredMicrophoneDirection : Android.Media.MicDirection -&gt; bool" Usage="mediaRecorder.SetPreferredMicrophoneDirection direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IMicrophoneDirection.SetPreferredMicrophoneDirection(Android.Media.MicDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPreferredMicrophoneDirection", "(I)Z", "GetSetPreferredMicrophoneDirection_IHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPreferredMicrophoneDirection", "(I)Z", "GetSetPreferredMicrophoneDirection_IHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Media.MicDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">Direction constant.</param>
        <summary>Specifies the logical microphone (for processing).</summary>
        <returns>true if sucessful.</returns>
        <remarks>
          <para>Specifies the logical microphone (for processing).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setPreferredMicrophoneDirection(int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setPreferredMicrophoneDirection(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPreferredMicrophoneFieldDimension">
      <MemberSignature Language="C#" Value="public virtual bool SetPreferredMicrophoneFieldDimension (float zoom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPreferredMicrophoneFieldDimension(float32 zoom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetPreferredMicrophoneFieldDimension(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetPreferredMicrophoneFieldDimension : single -&gt; bool&#xA;override this.SetPreferredMicrophoneFieldDimension : single -&gt; bool" Usage="mediaRecorder.SetPreferredMicrophoneFieldDimension zoom" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IMicrophoneDirection.SetPreferredMicrophoneFieldDimension(System.Single)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPreferredMicrophoneFieldDimension", "(F)Z", "GetSetPreferredMicrophoneFieldDimension_FHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPreferredMicrophoneFieldDimension", "(F)Z", "GetSetPreferredMicrophoneFieldDimension_FHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zoom" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="zoom">the desired field dimension of microphone capture. Range is from -1 (wide angle),
            though 0 (no zoom) to 1 (maximum zoom).</param>
        <summary>Specifies the zoom factor (i.</summary>
        <returns>true if sucessful.</returns>
        <remarks>
          <para>Specifies the zoom factor (i.e. the field dimension) for the selected microphone
            (for processing). The selected microphone is determined by the use-case for the stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setPreferredMicrophoneFieldDimension(float)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setPreferredMicrophoneFieldDimension(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPreviewDisplay">
      <MemberSignature Language="C#" Value="public virtual void SetPreviewDisplay (Android.Views.Surface? sv);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPreviewDisplay(class Android.Views.Surface sv) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetPreviewDisplay(Android.Views.Surface)" />
      <MemberSignature Language="F#" Value="abstract member SetPreviewDisplay : Android.Views.Surface -&gt; unit&#xA;override this.SetPreviewDisplay : Android.Views.Surface -&gt; unit" Usage="mediaRecorder.SetPreviewDisplay sv" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPreviewDisplay", "(Landroid/view/Surface;)V", "GetSetPreviewDisplay_Landroid_view_Surface_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPreviewDisplay", "(Landroid/view/Surface;)V", "GetSetPreviewDisplay_Landroid_view_Surface_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sv" Type="Android.Views.Surface" />
      </Parameters>
      <Docs>
        <param name="sv">the Surface to use for the preview</param>
        <summary>Sets a Surface to show a preview of recorded media (video).</summary>
        <remarks>
          <para>Sets a Surface to show a preview of recorded media (video). Calls this
            before prepare() to make sure that the desirable preview display is
            set. If <c>#setCamera(Camera)</c> is used and the surface has been
            already set to the camera, application do not need to call this. If
            this is called with non-null surface, the preview surface of the camera
            will be replaced by the new surface. If this method is called with null
            surface or not called at all, media recorder will not change the preview
            surface of the camera.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setPreviewDisplay(android.view.Surface)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setPreviewDisplay(android.view.Surface)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Hardware.Camera.SetPreviewDisplay(Android.Views.ISurfaceHolder)" />
      </Docs>
    </Member>
    <Member MemberName="SetProfile">
      <MemberSignature Language="C#" Value="public virtual void SetProfile (Android.Media.CamcorderProfile? profile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProfile(class Android.Media.CamcorderProfile profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetProfile(Android.Media.CamcorderProfile)" />
      <MemberSignature Language="F#" Value="abstract member SetProfile : Android.Media.CamcorderProfile -&gt; unit&#xA;override this.SetProfile : Android.Media.CamcorderProfile -&gt; unit" Usage="mediaRecorder.SetProfile profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setProfile", "(Landroid/media/CamcorderProfile;)V", "GetSetProfile_Landroid_media_CamcorderProfile_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setProfile", "(Landroid/media/CamcorderProfile;)V", "GetSetProfile_Landroid_media_CamcorderProfile_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="Android.Media.CamcorderProfile" />
      </Parameters>
      <Docs>
        <param name="profile">the CamcorderProfile to use</param>
        <summary>Uses the settings from a CamcorderProfile object for recording.</summary>
        <remarks>
          <para>Uses the settings from a CamcorderProfile object for recording. This method should
            be called after the video AND audio sources are set, and before setOutputFile().
            If a time lapse CamcorderProfile is used, audio related source or recording
            parameters are ignored.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setProfile(android.media.CamcorderProfile)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setProfile(android.media.CamcorderProfile)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="T:Android.Media.CamcorderProfile" />
      </Docs>
    </Member>
    <Member MemberName="SetVideoEncoder">
      <MemberSignature Language="C#" Value="public virtual void SetVideoEncoder (Android.Media.VideoEncoder video_encoder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoEncoder(valuetype Android.Media.VideoEncoder video_encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetVideoEncoder(Android.Media.VideoEncoder)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoEncoder : Android.Media.VideoEncoder -&gt; unit&#xA;override this.SetVideoEncoder : Android.Media.VideoEncoder -&gt; unit" Usage="mediaRecorder.SetVideoEncoder video_encoder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVideoEncoder", "(I)V", "GetSetVideoEncoder_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVideoEncoder", "(I)V", "GetSetVideoEncoder_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="video_encoder" Type="Android.Media.VideoEncoder">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="video_encoder">the video encoder to use.</param>
        <summary>Sets the video encoder to be used for recording.</summary>
        <remarks>
          <para>Sets the video encoder to be used for recording. If this method is not
            called, the output file will not contain an video track. Call this after
            setOutputFormat() and before prepare().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setVideoEncoder(int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setVideoEncoder(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 setOutputFormat() or after prepare()</exception>
      </Docs>
    </Member>
    <Member MemberName="SetVideoEncodingBitRate">
      <MemberSignature Language="C#" Value="public virtual void SetVideoEncodingBitRate (int bitRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoEncodingBitRate(int32 bitRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetVideoEncodingBitRate(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoEncodingBitRate : int -&gt; unit&#xA;override this.SetVideoEncodingBitRate : int -&gt; unit" Usage="mediaRecorder.SetVideoEncodingBitRate bitRate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVideoEncodingBitRate", "(I)V", "GetSetVideoEncodingBitRate_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVideoEncodingBitRate", "(I)V", "GetSetVideoEncodingBitRate_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bitRate">the video encoding bit rate in bits per second.</param>
        <summary>Sets the video encoding bit rate for recording.</summary>
        <remarks>
          <para>Sets the video encoding bit rate for recording. Call this method before prepare().
            Prepare() may perform additional checks on the parameter to make sure whether the
            specified bit rate is applicable, and sometimes the passed bitRate will be
            clipped internally to ensure the video recording can proceed smoothly based on
            the capabilities of the platform.</para>
          <para>NB: the actual bitrate and other encoding characteristics may be affected by
            the minimum quality floor behavior introduced in
            <c>android.os.Build.VERSION_CODES#S</c>. More detail on how and where this
            impacts video encoding can be found in the
            <c>MediaCodec</c> page and looking for "quality floor" (near the top of the page).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setVideoEncodingBitRate(int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setVideoEncodingBitRate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetVideoEncodingProfileLevel">
      <MemberSignature Language="C#" Value="public virtual void SetVideoEncodingProfileLevel (Android.Media.MediaCodecProfileType profile, int level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoEncodingProfileLevel(valuetype Android.Media.MediaCodecProfileType profile, int32 level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetVideoEncodingProfileLevel(Android.Media.MediaCodecProfileType,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoEncodingProfileLevel : Android.Media.MediaCodecProfileType * int -&gt; unit&#xA;override this.SetVideoEncodingProfileLevel : Android.Media.MediaCodecProfileType * int -&gt; unit" Usage="mediaRecorder.SetVideoEncodingProfileLevel (profile, level)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVideoEncodingProfileLevel", "(II)V", "GetSetVideoEncodingProfileLevel_IIHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVideoEncodingProfileLevel", "(II)V", "GetSetVideoEncodingProfileLevel_IIHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="Android.Media.MediaCodecProfileType">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="profile">declared in <c>MediaCodecInfo.CodecProfileLevel</c>.</param>
        <param name="level">declared in <c>MediaCodecInfo.CodecProfileLevel</c>.</param>
        <summary>Sets the desired video encoding profile and level for recording.</summary>
        <remarks>
          <para>Sets the desired video encoding profile and level for recording. The profile and level
            must be valid for the video encoder set by <c>#setVideoEncoder</c>. This method can
            called before or after <c>#setVideoEncoder</c> but it must be called before <c>#prepare</c>.
            <c>prepare()</c> may perform additional checks on the parameter to make sure that the specified
            profile and level are applicable, and sometimes the passed profile or level will be
            discarded due to codec capablity or to ensure the video recording can proceed smoothly
            based on the capabilities of the platform. &lt;br&gt;Application can also use the
            <c>MediaCodecInfo.CodecCapabilities#profileLevels</c> to query applicable combination of profile
            and level for the corresponding format. Note that the requested profile/level may not be supported by
            the codec that is actually being used by this MediaRecorder instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setVideoEncodingProfileLevel(int,%20int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setVideoEncodingProfileLevel(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVideoFrameRate">
      <MemberSignature Language="C#" Value="public virtual void SetVideoFrameRate (int rate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoFrameRate(int32 rate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetVideoFrameRate(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoFrameRate : int -&gt; unit&#xA;override this.SetVideoFrameRate : int -&gt; unit" Usage="mediaRecorder.SetVideoFrameRate rate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVideoFrameRate", "(I)V", "GetSetVideoFrameRate_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVideoFrameRate", "(I)V", "GetSetVideoFrameRate_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rate">the number of frames per second of video to capture</param>
        <summary>Sets the frame rate of the video to be captured.</summary>
        <remarks>
          <para>Sets the frame rate of the video to be captured.  Must be called
            after setVideoSource(). Call this after setOutputFormat() but before
            prepare().</para>
          <para>NOTE: On some devices that have auto-frame rate, this sets the
            maximum frame rate, not a constant frame rate. Actual frame rate
            will vary according to lighting conditions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setVideoFrameRate(int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setVideoFrameRate(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after
 prepare() or before setOutputFormat().

 NOTE: On some devices that have auto-frame rate, this sets the
 maximum frame rate, not a constant frame rate. Actual frame rate
 will vary according to lighting conditions.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetVideoProfile">
      <MemberSignature Language="C#" Value="public virtual void SetVideoProfile (Android.Media.EncoderProfiles.VideoProfile profile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoProfile(class Android.Media.EncoderProfiles/VideoProfile profile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetVideoProfile(Android.Media.EncoderProfiles.VideoProfile)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoProfile : Android.Media.EncoderProfiles.VideoProfile -&gt; unit&#xA;override this.SetVideoProfile : Android.Media.EncoderProfiles.VideoProfile -&gt; unit" Usage="mediaRecorder.SetVideoProfile profile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVideoProfile", "(Landroid/media/EncoderProfiles$VideoProfile;)V", "GetSetVideoProfile_Landroid_media_EncoderProfiles_VideoProfile_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVideoProfile", "(Landroid/media/EncoderProfiles$VideoProfile;)V", "GetSetVideoProfile_Landroid_media_EncoderProfiles_VideoProfile_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="profile" Type="Android.Media.EncoderProfiles+VideoProfile" />
      </Parameters>
      <Docs>
        <param name="profile">the VideoProfile to use</param>
        <summary>Uses the settings from a VideoProfile object for recording.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setVideoProfile(android.media.VideoProfile)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setVideoProfile(android.media.VideoProfile)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVideoSize">
      <MemberSignature Language="C#" Value="public virtual void SetVideoSize (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoSize(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetVideoSize(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoSize : int * int -&gt; unit&#xA;override this.SetVideoSize : int * int -&gt; unit" Usage="mediaRecorder.SetVideoSize (width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVideoSize", "(II)V", "GetSetVideoSize_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVideoSize", "(II)V", "GetSetVideoSize_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">the width of the video to be captured</param>
        <param name="height">the height of the video to be captured</param>
        <summary>Sets the width and height of the video to be captured.</summary>
        <remarks>
          <para>Sets the width and height of the video to be captured.  Must be called
            after setVideoSource(). Call this after setOutputFormat() but before
            prepare().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setVideoSize(int,%20int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setVideoSize(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after
 prepare() or before setOutputFormat()
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetVideoSource">
      <MemberSignature Language="C#" Value="public virtual void SetVideoSource (Android.Media.VideoSource video_source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetVideoSource(valuetype Android.Media.VideoSource video_source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.SetVideoSource(Android.Media.VideoSource)" />
      <MemberSignature Language="F#" Value="abstract member SetVideoSource : Android.Media.VideoSource -&gt; unit&#xA;override this.SetVideoSource : Android.Media.VideoSource -&gt; unit" Usage="mediaRecorder.SetVideoSource video_source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setVideoSource", "(I)V", "GetSetVideoSource_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setVideoSource", "(I)V", "GetSetVideoSource_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="video_source" Type="Android.Media.VideoSource">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="video_source">the video source to use</param>
        <summary>Sets the video source to be used for recording.</summary>
        <remarks>
          <para>Sets the video source to be used for recording. If this method is not
            called, the output file will not contain an video track. The source needs
            to be specified before setting recording-parameters or encoders. Call
            this only before setOutputFormat().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#setVideoSource(int)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.setVideoSource(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called after setOutputFormat()</exception>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public virtual void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Start" />
      <MemberSignature Language="F#" Value="abstract member Start : unit -&gt; unit&#xA;override this.Start : unit -&gt; unit" Usage="mediaRecorder.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("start", "()V", "GetStartHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("start", "()V", "GetStartHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Begins capturing and encoding data to the file specified with
            setOutputFile().</summary>
        <remarks>
          <para>Begins capturing and encoding data to the file specified with
            setOutputFile(). Call this after prepare().</para>
          <para>Since API level 13, if applications set a camera via
            <c>#setCamera(Camera)</c>, the apps can use the camera after this method
            call. The apps do not need to lock the camera again. However, if this
            method fails, the apps should still lock the camera back. The apps should
            not start another recording session during recording.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#start()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.start()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before
 prepare().
</exception>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.Stop" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="mediaRecorder.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stop", "()V", "GetStopHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stop", "()V", "GetStopHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops recording.</summary>
        <remarks>
          <para>Stops recording. Call this after start(). Once recording is stopped,
            you will have to configure it again as if it has just been constructed.
            Note that a RuntimeException is intentionally thrown to the
            application, if no valid audio/video data has been received when stop()
            is called. This happens if stop() is called immediately after
            start(). The failure lets the application take action accordingly to
            clean up the output file (delete the output file, for instance), since
            the output file is not properly constructed when this happens.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#stop()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.stop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before start()
</exception>
      </Docs>
    </Member>
    <Member MemberName="Surface">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Surface? Surface { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Surface Surface" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.Surface" />
      <MemberSignature Language="F#" Value="member this.Surface : Android.Views.Surface" Usage="Android.Media.MediaRecorder.Surface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSurface", "()Landroid/view/Surface;", "GetGetSurfaceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSurface", "()Landroid/view/Surface;", "GetGetSurfaceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Surface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the surface to record from when using SURFACE video source.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Gets the surface to record from when using SURFACE video source.</para>
          <para>May only be called after <c>#prepare</c>. Frames rendered to the Surface before
            <c>#start</c> will be discarded.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#getSurface()" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.getSurface()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 21" />
        <exception cref="T:Java.Lang.IllegalStateException">if it is called before <see cref="M:Android.Media.MediaRecorder.Prepare" />, after
 <see cref="M:Android.Media.MediaRecorder.Stop" />, or is called when VideoSource is not set to SURFACE.</exception>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.MediaRecorder.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaRecorder.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.MediaRecorder.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAudioRecordingCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterAudioRecordingCallback (Android.Media.AudioManager.AudioRecordingCallback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterAudioRecordingCallback(class Android.Media.AudioManager/AudioRecordingCallback cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaRecorder.UnregisterAudioRecordingCallback(Android.Media.AudioManager.AudioRecordingCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback -&gt; unit&#xA;override this.UnregisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback -&gt; unit" Usage="mediaRecorder.UnregisterAudioRecordingCallback cb" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IAudioRecordingMonitor.UnregisterAudioRecordingCallback(Android.Media.AudioManager.AudioRecordingCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterAudioRecordingCallback", "(Landroid/media/AudioManager$AudioRecordingCallback;)V", "GetUnregisterAudioRecordingCallback_Landroid_media_AudioManager_AudioRecordingCallback_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterAudioRecordingCallback", "(Landroid/media/AudioManager$AudioRecordingCallback;)V", "GetUnregisterAudioRecordingCallback_Landroid_media_AudioManager_AudioRecordingCallback_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioRecordingCallback" />
      </Parameters>
      <Docs>
        <param name="cb">non-null callback to unregister</param>
        <summary>Unregister an audio recording callback previously registered with
            <c>#registerAudioRecordingCallback(Executor, AudioManager.AudioRecordingCallback)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaRecorder#unregisterAudioRecordingCallback(android.media.AudioRecordingCallback)" title="Reference documentation">Java documentation for <code>android.media.MediaRecorder.unregisterAudioRecordingCallback(android.media.AudioRecordingCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
