<Type Name="MediaCodecInfo" FullName="Android.Media.MediaCodecInfo">
  <TypeSignature Language="C#" Value="public sealed class MediaCodecInfo : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MediaCodecInfo extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaCodecInfo" />
  <TypeSignature Language="F#" Value="type MediaCodecInfo = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/MediaCodecInfo", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/MediaCodecInfo", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="16">
    <summary>Provides information about a given media codec available on the device.</summary>
    <remarks>
      <para>Provides information about a given media codec available on the device. You can
            iterate through all codecs available by querying <c>MediaCodecList</c>. For example,
            here's how to find an encoder that supports a given MIME type:</para>
      <code lang="text/java">private static MediaCodecInfo selectCodec(String mimeType) {
                int numCodecs = MediaCodecList.getCodecCount();
                for (int i = 0; i &amp;lt; numCodecs; i++) {
                    MediaCodecInfo codecInfo = MediaCodecList.getCodecInfoAt(i);
            
                    if (!codecInfo.isEncoder()) {
                        continue;
                    }
            
                    String[] types = codecInfo.getSupportedTypes();
                    for (int j = 0; j &amp;lt; types.length; j++) {
                        if (types[j].equalsIgnoreCase(mimeType)) {
                            return codecInfo;
                        }
                    }
                }
                return null;
            }</code>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/MediaCodecInfo" title="Reference documentation">Java documentation for <code>android.media.MediaCodecInfo</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CanonicalName">
      <MemberSignature Language="C#" Value="public string CanonicalName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CanonicalName" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodecInfo.CanonicalName" />
      <MemberSignature Language="F#" Value="member this.CanonicalName : string" Usage="Android.Media.MediaCodecInfo.CanonicalName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCanonicalName", "()Ljava/lang/String;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCanonicalName", "()Ljava/lang/String;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the underlying codec name.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Retrieve the underlying codec name.</para>
          <para>Device implementations may provide multiple aliases (codec names) for the same underlying
            codec to maintain backward app compatibility. This method returns the name of the underlying
            codec name, which must not be another alias. For non-aliases this is always the name of the
            codec.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodecInfo#getCanonicalName()" title="Reference documentation">Java documentation for <code>android.media.MediaCodecInfo.getCanonicalName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCapabilitiesForType">
      <MemberSignature Language="C#" Value="public Android.Media.MediaCodecInfo.CodecCapabilities? GetCapabilitiesForType (string? type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Media.MediaCodecInfo/CodecCapabilities GetCapabilitiesForType(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodecInfo.GetCapabilitiesForType(System.String)" />
      <MemberSignature Language="F#" Value="member this.GetCapabilitiesForType : string -&gt; Android.Media.MediaCodecInfo.CodecCapabilities" Usage="mediaCodecInfo.GetCapabilitiesForType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCapabilitiesForType", "(Ljava/lang/String;)Landroid/media/MediaCodecInfo$CodecCapabilities;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCapabilitiesForType", "(Ljava/lang/String;)Landroid/media/MediaCodecInfo$CodecCapabilities;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.MediaCodecInfo+CodecCapabilities</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">The MIME type to query</param>
        <summary>Enumerates the capabilities of the codec component.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodecInfo#getCapabilitiesForType(java.lang.String)" title="Reference documentation">Java documentation for <code>android.media.MediaCodecInfo.getCapabilitiesForType(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedTypes">
      <MemberSignature Language="C#" Value="public string[]? GetSupportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetSupportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaCodecInfo.GetSupportedTypes" />
      <MemberSignature Language="F#" Value="member this.GetSupportedTypes : unit -&gt; string[]" Usage="mediaCodecInfo.GetSupportedTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSupportedTypes", "()[Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSupportedTypes", "()[Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Query the media types supported by the codec.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Query the media types supported by the codec.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodecInfo#getSupportedTypes()" title="Reference documentation">Java documentation for <code>android.media.MediaCodecInfo.getSupportedTypes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="IsAlias">
      <MemberSignature Language="C#" Value="public bool IsAlias { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAlias" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodecInfo.IsAlias" />
      <MemberSignature Language="F#" Value="member this.IsAlias : bool" Usage="Android.Media.MediaCodecInfo.IsAlias" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAlias", "()Z", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAlias", "()Z", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Query if the codec is an alias for another underlying codec.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Query if the codec is an alias for another underlying codec.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodecInfo#isAlias()" title="Reference documentation">Java documentation for <code>android.media.MediaCodecInfo.isAlias()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEncoder">
      <MemberSignature Language="C#" Value="public bool IsEncoder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEncoder" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodecInfo.IsEncoder" />
      <MemberSignature Language="F#" Value="member this.IsEncoder : bool" Usage="Android.Media.MediaCodecInfo.IsEncoder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isEncoder", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isEncoder", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Query if the codec is an encoder.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Query if the codec is an encoder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodecInfo#isEncoder()" title="Reference documentation">Java documentation for <code>android.media.MediaCodecInfo.isEncoder()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="IsHardwareAccelerated">
      <MemberSignature Language="C#" Value="public bool IsHardwareAccelerated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHardwareAccelerated" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodecInfo.IsHardwareAccelerated" />
      <MemberSignature Language="F#" Value="member this.IsHardwareAccelerated : bool" Usage="Android.Media.MediaCodecInfo.IsHardwareAccelerated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isHardwareAccelerated", "()Z", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isHardwareAccelerated", "()Z", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Query if the codec is hardware accelerated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Query if the codec is hardware accelerated. This attribute is provided by the device
            manufacturer. Note that it cannot be tested for correctness.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodecInfo#isHardwareAccelerated()" title="Reference documentation">Java documentation for <code>android.media.MediaCodecInfo.isHardwareAccelerated()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSoftwareOnly">
      <MemberSignature Language="C#" Value="public bool IsSoftwareOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSoftwareOnly" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodecInfo.IsSoftwareOnly" />
      <MemberSignature Language="F#" Value="member this.IsSoftwareOnly : bool" Usage="Android.Media.MediaCodecInfo.IsSoftwareOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSoftwareOnly", "()Z", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSoftwareOnly", "()Z", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Query if the codec is software only.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Query if the codec is software only. Software-only codecs are more secure as they run in
            a tighter security sandbox. On the other hand, software-only codecs do not provide any
            performance guarantees.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodecInfo#isSoftwareOnly()" title="Reference documentation">Java documentation for <code>android.media.MediaCodecInfo.isSoftwareOnly()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVendor">
      <MemberSignature Language="C#" Value="public bool IsVendor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVendor" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodecInfo.IsVendor" />
      <MemberSignature Language="F#" Value="member this.IsVendor : bool" Usage="Android.Media.MediaCodecInfo.IsVendor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isVendor", "()Z", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isVendor", "()Z", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Query if the codec is provided by the Android platform (false) or the device manufacturer
            (true).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Query if the codec is provided by the Android platform (false) or the device manufacturer
            (true).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodecInfo#isVendor()" title="Reference documentation">Java documentation for <code>android.media.MediaCodecInfo.isVendor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodecInfo.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.MediaCodecInfo.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodecInfo.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Android.Media.MediaCodecInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the codec name.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Retrieve the codec name.
            
            &lt;strong&gt;Note:&lt;/strong&gt; Implementations may provide multiple aliases (codec
            names) for the same underlying codec, any of which can be used to instantiate the same
            underlying codec in <c>MediaCodec#createByCodecName</c>.
            
            Applications targeting SDK &lt;<c>android.os.Build.VERSION_CODES#Q</c>, cannot determine if
            the multiple codec names listed in MediaCodecList are in-fact for the same codec.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaCodecInfo#getName()" title="Reference documentation">Java documentation for <code>android.media.MediaCodecInfo.getName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodecInfo.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.MediaCodecInfo.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.MediaCodecInfo.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.MediaCodecInfo.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
