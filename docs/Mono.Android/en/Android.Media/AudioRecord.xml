<Type Name="AudioRecord" FullName="Android.Media.AudioRecord">
  <TypeSignature Language="C#" Value="public class AudioRecord : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AudioRecord extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/AudioRecord", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>The AudioRecord class manages the audio resources for Java applications
 to record audio from the audio input hardware of the platform.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The AudioRecord class manages the audio resources for Java applications
 to record audio from the audio input hardware of the platform. This is
 achieved by "pulling" (reading) the data from the AudioRecord object. The
 application is responsible for polling the AudioRecord object in time using one of
 the following three methods:  <c><see cref="M:Android.Media.AudioRecord.Read(System.Byte[],System.Int32,System.Int32)" /></c>, <c><see cref="M:Android.Media.AudioRecord.Read(System.Int16[],System.Int32,System.Int32)" /></c>
 or <c><see cref="M:Android.Media.AudioRecord.Read(Java.Nio.ByteBuffer,System.Int32)" /></c>. The choice of which method to use will be based
 on the audio data storage format that is the most convenient for the user of AudioRecord.
 </para>
      <para tool="javadoc-to-mdoc">Upon creation, an AudioRecord object initializes its associated audio buffer that it will
 fill with the new audio data. The size of this buffer, specified during the construction,
 determines how long an AudioRecord can record before "over-running" data that has not
 been read yet. Data should be read from the audio hardware in chunks of sizes inferior to
 the total recording buffer size.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/media/AudioRecord.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AudioRecord (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioRecord (Android.Media.AudioSource audioSource, int sampleRateInHz, Android.Media.ChannelIn channelConfig, Android.Media.Encoding audioFormat, int bufferSizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Media.AudioSource audioSource, int32 sampleRateInHz, valuetype Android.Media.ChannelIn channelConfig, valuetype Android.Media.Encoding audioFormat, int32 bufferSizeInBytes) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(IIIII)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="audioSource" Type="Android.Media.AudioSource">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelIn">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="bufferSizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioSource">To be added.</param>
        <param name="sampleRateInHz">To be added.</param>
        <param name="channelConfig">To be added.</param>
        <param name="audioFormat">To be added.</param>
        <param name="bufferSizeInBytes">To be added.</param>
        <summary>Class constructor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Class constructor.
 Though some invalid parameters will result in an <c><see cref="T:Java.Lang.IllegalArgumentException" /></c> exception,
 other errors do not.  Thus you should call <c><see cref="P:Android.Media.AudioRecord.State" /></c> immediately after construction
 to confirm that the object is usable.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#AudioRecord(int, int, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="AudioFormat">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Encoding AudioFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Encoding AudioFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAudioFormat", "()I", "GetGetAudioFormatHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured audio data encoding.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the configured audio data encoding. See <c><see cref="!:Android.Media.AudioFormat.ENCODING_PCM_8BIT" /></c>,
 <c><see cref="!:Android.Media.AudioFormat.ENCODING_PCM_16BIT" /></c>, and <c><see cref="!:Android.Media.AudioFormat.ENCODING_PCM_FLOAT" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#getAudioFormat()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="AudioSessionId">
      <MemberSignature Language="C#" Value="public virtual int AudioSessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AudioSessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAudioSessionId", "()I", "GetGetAudioSessionIdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the audio session ID.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the audio session ID.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#getAudioSessionId()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AudioSource">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioSource AudioSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.AudioSource AudioSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAudioSource", "()I", "GetGetAudioSourceHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the audio recording source.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the audio recording source.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#getAudioSource()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ChannelConfiguration">
      <MemberSignature Language="C#" Value="public virtual Android.Media.ChannelIn ChannelConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.ChannelIn ChannelConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getChannelConfiguration", "()I", "GetGetChannelConfigurationHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ChannelIn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured channel position mask.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the configured channel position mask.
 </para>
          <para tool="javadoc-to-mdoc"> See <c><see cref="!:Android.Media.AudioFormat.CHANNEL_IN_MONO" /></c>
 and <c><see cref="!:Android.Media.AudioFormat.CHANNEL_IN_STEREO" /></c>.
 This method may return <c><see cref="F:Android.Media.AudioFormat.ChannelInvalid" /></c> if
 a channel index mask is used.
 Consider <c><see cref="P:Android.Media.AudioRecord.Format" /></c> instead, to obtain an <c><see cref="T:Android.Media.AudioFormat" /></c>,
 which contains both the channel position mask and the channel index mask.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#getChannelConfiguration()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ChannelCount">
      <MemberSignature Language="C#" Value="public virtual int ChannelCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getChannelCount", "()I", "GetGetChannelCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured number of channels.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the configured number of channels.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#getChannelCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetMinBufferSize">
      <MemberSignature Language="C#" Value="public static int GetMinBufferSize (int sampleRateInHz, Android.Media.ChannelIn channelConfig, Android.Media.Encoding audioFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMinBufferSize(int32 sampleRateInHz, valuetype Android.Media.ChannelIn channelConfig, valuetype Android.Media.Encoding audioFormat) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMinBufferSize", "(III)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelIn">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sampleRateInHz">the sample rate expressed in Hertz.</param>
        <param name="channelConfig">describes the configuration of the audio channels.
   See <c><see cref="!:Android.Media.AudioFormat.CHANNEL_IN_MONO" /></c> and
   <c><see cref="!:Android.Media.AudioFormat.CHANNEL_IN_STEREO" /></c></param>
        <param name="audioFormat">the format in which the audio data is represented.
   See <c><see cref="!:Android.Media.AudioFormat.ENCODING_PCM_16BIT" /></c>.</param>
        <summary>Returns the minimum buffer size required for the successful creation of an AudioRecord
 object, in byte units.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the minimum buffer size required for the successful creation of an AudioRecord
 object, in byte units.
 Note that this size doesn't guarantee a smooth recording under load, and higher values
 should be chosen according to the expected frequency at which the AudioRecord instance
 will be polled for new data.
 See <c><see cref="C:Android.Media.AudioRecord(Android.Media.AudioSource,System.Int32,System.Int32,System.Int32,System.Int32)" /></c> for more information on valid
 configuration values.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#getMinBufferSize(int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="C:Android.Media.AudioRecord(Android.Media.AudioSource, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="MarkerReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.AudioRecord.MarkerReachedEventArgs&gt; MarkerReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.AudioRecord/MarkerReachedEventArgs&gt; MarkerReached" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.AudioRecord+MarkerReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotificationMarkerPosition">
      <MemberSignature Language="C#" Value="public virtual int NotificationMarkerPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NotificationMarkerPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNotificationMarkerPosition", "()I", "GetGetNotificationMarkerPositionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the notification marker position expressed in frames.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the notification marker position expressed in frames.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#getNotificationMarkerPosition()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PeriodicNotification">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.AudioRecord.PeriodicNotificationEventArgs&gt; PeriodicNotification;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.AudioRecord/PeriodicNotificationEventArgs&gt; PeriodicNotification" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.AudioRecord+PeriodicNotificationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionNotificationPeriod">
      <MemberSignature Language="C#" Value="public virtual int PositionNotificationPeriod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionNotificationPeriod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPositionNotificationPeriod", "()I", "GetGetPositionNotificationPeriodHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the notification update period expressed in frames.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the notification update period expressed in frames.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#getPositionNotificationPeriod()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Java.Nio.ByteBuffer audioBuffer, int sizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(class Java.Nio.ByteBuffer audioBuffer, int32 sizeInBytes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("read", "(Ljava/nio/ByteBuffer;I)I", "GetRead_Ljava_nio_ByteBuffer_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBuffer" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioBuffer">the direct buffer to which the recorded audio data is written.</param>
        <param name="sizeInBytes">the number of requested bytes. It is recommended but not enforced
    that the number of bytes requested be a multiple of the frame size (sample size in
    bytes multiplied by the channel count).</param>
        <summary>Reads audio data from the audio hardware for recording into a direct buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Reads audio data from the audio hardware for recording into a direct buffer. If this buffer
 is not a direct buffer, this method will always return 0.
 Note that the value returned by <c><see cref="M:Java.Nio.Buffer.Position" /></c> on this buffer is
 unchanged after a call to this method.
 The representation of the data in the buffer will depend on the format specified in
 the AudioRecord constructor, and will be native endian.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#read(java.nio.ByteBuffer, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (byte[] audioData, int offsetInBytes, int sizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(unsigned int8[] audioData, int32 offsetInBytes, int32 sizeInBytes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("read", "([BII)I", "GetRead_arrayBIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Byte[]" />
        <Parameter Name="offsetInBytes" Type="System.Int32" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">the array to which the recorded audio data is written.</param>
        <param name="offsetInBytes">index in audioData from which the data is written expressed in bytes.</param>
        <param name="sizeInBytes">the number of requested bytes.</param>
        <summary>Reads audio data from the audio hardware for recording into a byte array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Reads audio data from the audio hardware for recording into a byte array.
 The format specified in the AudioRecord constructor should be
 <c><see cref="!:Android.Media.AudioFormat.ENCODING_PCM_8BIT" /></c> to correspond to the data in the array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#read(byte[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (short[] audioData, int offsetInShorts, int sizeInShorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(int16[] audioData, int32 offsetInShorts, int32 sizeInShorts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("read", "([SII)I", "GetRead_arraySIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Int16[]" />
        <Parameter Name="offsetInShorts" Type="System.Int32" />
        <Parameter Name="sizeInShorts" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">the array to which the recorded audio data is written.</param>
        <param name="offsetInShorts">index in audioData from which the data is written expressed in shorts.</param>
        <param name="sizeInShorts">the number of requested shorts.</param>
        <summary>Reads audio data from the audio hardware for recording into a short array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Reads audio data from the audio hardware for recording into a short array.
 The format specified in the AudioRecord constructor should be
 <c><see cref="!:Android.Media.AudioFormat.ENCODING_PCM_16BIT" /></c> to correspond to the data in the array.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#read(short[], int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (Java.Nio.ByteBuffer audioBuffer, int sizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(class Java.Nio.ByteBuffer audioBuffer, int32 sizeInBytes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBuffer" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioBuffer">To be added.</param>
        <param name="sizeInBytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] audioData, int offsetInBytes, int sizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] audioData, int32 offsetInBytes, int32 sizeInBytes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Byte[]" />
        <Parameter Name="offsetInBytes" Type="System.Int32" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInBytes">To be added.</param>
        <param name="sizeInBytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (short[] audioData, int offsetInShorts, int sizeInShorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(int16[] audioData, int32 offsetInShorts, int32 sizeInShorts) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Int16[]" />
        <Parameter Name="offsetInShorts" Type="System.Int32" />
        <Parameter Name="sizeInShorts" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInShorts">To be added.</param>
        <param name="sizeInShorts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordingState">
      <MemberSignature Language="C#" Value="public virtual Android.Media.RecordState RecordingState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.RecordState RecordingState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRecordingState", "()I", "GetGetRecordingStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RecordState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the recording state of the AudioRecord instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the recording state of the AudioRecord instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#getRecordingState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("release", "()V", "GetReleaseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the native AudioRecord resources.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Releases the native AudioRecord resources.
 The object can no longer be used and the reference should be set to null
 after a call to release()
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#release()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SampleRate">
      <MemberSignature Language="C#" Value="public virtual int SampleRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SampleRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSampleRate", "()I", "GetGetSampleRateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured audio data sample rate in Hz
</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the configured audio data sample rate in Hz
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#getSampleRate()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetNotificationMarkerPosition">
      <MemberSignature Language="C#" Value="public virtual Android.Media.RecordStatus SetNotificationMarkerPosition (int markerInFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.RecordStatus SetNotificationMarkerPosition(int32 markerInFrames) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setNotificationMarkerPosition", "(I)I", "GetSetNotificationMarkerPosition_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RecordStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="markerInFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="markerInFrames">marker position expressed in frames</param>
        <summary>Sets the marker position at which the listener is called, if set with
 <c><see cref="M:Android.Media.AudioRecord.SetRecordPositionUpdateListener(.IOnRecordPositionUpdateListener)" /></c> or
 <c><see cref="M:Android.Media.AudioRecord.SetRecordPositionUpdateListener(.IOnRecordPositionUpdateListener,Android.OS.Handler)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the marker position at which the listener is called, if set with
 <c><see cref="M:Android.Media.AudioRecord.SetRecordPositionUpdateListener(.IOnRecordPositionUpdateListener)" /></c> or
 <c><see cref="M:Android.Media.AudioRecord.SetRecordPositionUpdateListener(.IOnRecordPositionUpdateListener,Android.OS.Handler)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#setNotificationMarkerPosition(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPositionNotificationPeriod">
      <MemberSignature Language="C#" Value="public virtual Android.Media.RecordStatus SetPositionNotificationPeriod (int periodInFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.RecordStatus SetPositionNotificationPeriod(int32 periodInFrames) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setPositionNotificationPeriod", "(I)I", "GetSetPositionNotificationPeriod_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RecordStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="periodInFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="periodInFrames">update period expressed in frames</param>
        <summary>Sets the period at which the listener is called, if set with
 <c><see cref="M:Android.Media.AudioRecord.SetRecordPositionUpdateListener(.IOnRecordPositionUpdateListener)" /></c> or
 <c><see cref="M:Android.Media.AudioRecord.SetRecordPositionUpdateListener(.IOnRecordPositionUpdateListener,Android.OS.Handler)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the period at which the listener is called, if set with
 <c><see cref="M:Android.Media.AudioRecord.SetRecordPositionUpdateListener(.IOnRecordPositionUpdateListener)" /></c> or
 <c><see cref="M:Android.Media.AudioRecord.SetRecordPositionUpdateListener(.IOnRecordPositionUpdateListener,Android.OS.Handler)" /></c>.
 It is possible for notifications to be lost if the period is too small.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#setPositionNotificationPeriod(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetRecordPositionUpdateListener">
      <MemberSignature Language="C#" Value="public virtual void SetRecordPositionUpdateListener (Android.Media.AudioRecord.IOnRecordPositionUpdateListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRecordPositionUpdateListener(class Android.Media.AudioRecord/IOnRecordPositionUpdateListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRecordPositionUpdateListener", "(Landroid/media/AudioRecord$OnRecordPositionUpdateListener;)V", "GetSetRecordPositionUpdateListener_Landroid_media_AudioRecord_OnRecordPositionUpdateListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioRecord+IOnRecordPositionUpdateListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>Sets the listener the AudioRecord notifies when a previously set marker is reached or
 for each periodic record head position update.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the listener the AudioRecord notifies when a previously set marker is reached or
 for each periodic record head position update.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetRecordPositionUpdateListener">
      <MemberSignature Language="C#" Value="public virtual void SetRecordPositionUpdateListener (Android.Media.AudioRecord.IOnRecordPositionUpdateListener listener, Android.OS.Handler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRecordPositionUpdateListener(class Android.Media.AudioRecord/IOnRecordPositionUpdateListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setRecordPositionUpdateListener", "(Landroid/media/AudioRecord$OnRecordPositionUpdateListener;Landroid/os/Handler;)V", "GetSetRecordPositionUpdateListener_Landroid_media_AudioRecord_OnRecordPositionUpdateListener_Landroid_os_Handler_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioRecord+IOnRecordPositionUpdateListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <param name="handler">the Handler that will receive the event notification messages.
</param>
        <summary>Sets the listener the AudioRecord notifies when a previously set marker is reached or
 for each periodic record head position update.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the listener the AudioRecord notifies when a previously set marker is reached or
 for each periodic record head position update.
 Use this method to receive AudioRecord events in the Handler associated with another
 thread than the one in which you created the AudioRecord instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#setRecordPositionUpdateListener(android.media.AudioRecord.OnRecordPositionUpdateListener, android.os.Handler)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="StartRecording">
      <MemberSignature Language="C#" Value="public virtual void StartRecording ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartRecording() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startRecording", "()V", "GetStartRecordingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Starts recording from the AudioRecord instance.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Starts recording from the AudioRecord instance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#startRecording()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="StartRecording">
      <MemberSignature Language="C#" Value="public virtual void StartRecording (Android.Media.MediaSyncEvent syncEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartRecording(class Android.Media.MediaSyncEvent syncEvent) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startRecording", "(Landroid/media/MediaSyncEvent;)V", "GetStartRecording_Landroid_media_MediaSyncEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syncEvent" Type="Android.Media.MediaSyncEvent" />
      </Parameters>
      <Docs>
        <param name="syncEvent">event that triggers the capture.</param>
        <summary>Starts recording from the AudioRecord instance when the specified synchronization event
 occurs on the specified audio session.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Starts recording from the AudioRecord instance when the specified synchronization event
 occurs on the specified audio session.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#startRecording(android.media.MediaSyncEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="!:NoType:IllegalStateException" />
        <exception cref="T:Java.Lang.IllegalStateException" />
        <altmember cref="T:Android.Media.MediaSyncEvent" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual Android.Media.State State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.State State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getState", "()I", "GetGetStateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.State</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the state of the AudioRecord instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the state of the AudioRecord instance. This is useful after the
 AudioRecord instance has been created to check if it was initialized
 properly. This ensures that the appropriate hardware resources have been
 acquired.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#getState()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stop", "()V", "GetStopHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops recording.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Stops recording.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/AudioRecord.html#stop()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
