<Type Name="AudioRecord" FullName="Android.Media.AudioRecord">
  <TypeSignature Language="C#" Value="public class AudioRecord : Java.Lang.Object, Android.Media.IAudioRecordingMonitor, Android.Media.IAudioRouting, Android.Media.IMicrophoneDirection, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AudioRecord extends Java.Lang.Object implements class Android.Media.IAudioRecordingMonitor, class Android.Media.IAudioRouting, class Android.Media.IMicrophoneDirection, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.AudioRecord" />
  <TypeSignature Language="F#" Value="type AudioRecord = class&#xA;    inherit Object&#xA;    interface IAudioRecordingMonitor&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IAudioRouting&#xA;    interface IMicrophoneDirection" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Media.IAudioRecordingMonitor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Media.IAudioRouting</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Media.IMicrophoneDirection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/AudioRecord", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/AudioRecord", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>The AudioRecord class manages the audio resources for Java applications
            to record audio from the audio input hardware of the platform.</summary>
    <remarks>
      <para>The AudioRecord class manages the audio resources for Java applications
            to record audio from the audio input hardware of the platform. This is
            achieved by "pulling" (reading) the data from the AudioRecord object. The
            application is responsible for polling the AudioRecord object in time using one of
            the following three methods:  <c>#read(byte[],int, int)</c>, <c>#read(short[], int, int)</c>
            or <c>#read(ByteBuffer, int)</c>. The choice of which method to use will be based
            on the audio data storage format that is the most convenient for the user of AudioRecord.</para>
      <para>Upon creation, an AudioRecord object initializes its associated audio buffer that it will
            fill with the new audio data. The size of this buffer, specified during the construction,
            determines how long an AudioRecord can record before "over-running" data that has not
            been read yet. Data should be read from the audio hardware in chunks of sizes inferior to
            the total recording buffer size.</para>
      <para>Applications creating an AudioRecord instance need
            <c>android.Manifest.permission#RECORD_AUDIO</c> or the Builder will throw
            <c>java.lang.UnsupportedOperationException</c> on
            <c>android.media.AudioRecord.Builder#build build()</c>,
            and the constructor will return an instance in state
            <c>#STATE_UNINITIALIZED</c>.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/AudioRecord" title="Reference documentation">Java documentation for <code>android.media.AudioRecord</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AudioRecord (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.AudioRecord : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.AudioRecord" Usage="new Android.Media.AudioRecord (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AudioRecord (Android.Media.AudioSource audioSource, int sampleRateInHz, Android.Media.ChannelIn channelConfig, Android.Media.Encoding audioFormat, int bufferSizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Android.Media.AudioSource audioSource, int32 sampleRateInHz, valuetype Android.Media.ChannelIn channelConfig, valuetype Android.Media.Encoding audioFormat, int32 bufferSizeInBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.#ctor(Android.Media.AudioSource,System.Int32,Android.Media.ChannelIn,Android.Media.Encoding,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Media.AudioRecord : Android.Media.AudioSource * int * Android.Media.ChannelIn * Android.Media.Encoding * int -&gt; Android.Media.AudioRecord" Usage="new Android.Media.AudioRecord (audioSource, sampleRateInHz, channelConfig, audioFormat, bufferSizeInBytes)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(IIIII)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(IIIII)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.RECORD_AUDIO")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.RECORD_AUDIO")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="audioSource" Type="Android.Media.AudioSource">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelIn">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="bufferSizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioSource">the recording source.
              See <c>MediaRecorder.AudioSource</c> for the recording source definitions.</param>
        <param name="sampleRateInHz">the sample rate expressed in Hertz. 44100Hz is currently the only
              rate that is guaranteed to work on all devices, but other rates such as 22050,
              16000, and 11025 may work on some devices.
              <c>AudioFormat#SAMPLE_RATE_UNSPECIFIED</c> means to use a route-dependent value
              which is usually the sample rate of the source.
              <c>#getSampleRate()</c> can be used to retrieve the actual sample rate chosen.</param>
        <param name="channelConfig">describes the configuration of the audio channels.
              See <c>AudioFormat#CHANNEL_IN_MONO</c> and
              <c>AudioFormat#CHANNEL_IN_STEREO</c>.  <c>AudioFormat#CHANNEL_IN_MONO</c> is guaranteed
              to work on all devices.</param>
        <param name="audioFormat">the format in which the audio data is to be returned.
              See <c>AudioFormat#ENCODING_PCM_8BIT</c>, <c>AudioFormat#ENCODING_PCM_16BIT</c>,
              and <c>AudioFormat#ENCODING_PCM_FLOAT</c>.</param>
        <param name="bufferSizeInBytes">the total size (in bytes) of the buffer where audio data is written
              to during the recording. New audio data can be read from this buffer in smaller chunks
              than this size. See <c>#getMinBufferSize(int, int, int)</c> to determine the minimum
              required buffer size for the successful creation of an AudioRecord instance. Using values
              smaller than getMinBufferSize() will result in an initialization failure.</param>
        <summary>Class constructor.</summary>
        <remarks>
          <para>Class constructor.
            Though some invalid parameters will result in an <c>IllegalArgumentException</c> exception,
            other errors do not.  Thus you should call <c>#getState()</c> immediately after construction
            to confirm that the object is usable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#AudioRecord(int,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.AudioRecord(int, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="ActiveMicrophones">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Media.MicrophoneInfo&gt;? ActiveMicrophones { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Media.MicrophoneInfo&gt; ActiveMicrophones" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.ActiveMicrophones" />
      <MemberSignature Language="F#" Value="member this.ActiveMicrophones : System.Collections.Generic.IList&lt;Android.Media.MicrophoneInfo&gt;" Usage="Android.Media.AudioRecord.ActiveMicrophones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getActiveMicrophones", "()Ljava/util/List;", "GetGetActiveMicrophonesHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getActiveMicrophones", "()Ljava/util/List;", "GetGetActiveMicrophonesHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Media.MicrophoneInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a lists of <c>MicrophoneInfo</c> representing the active microphones.</summary>
        <value>a lists of <c>MicrophoneInfo</c> representing the active microphones.</value>
        <remarks>
          <para>Returns a lists of <c>MicrophoneInfo</c> representing the active microphones.
            By querying channel mapping for each active microphone, developer can know how
            the microphone is used by each channels or a capture stream.
            Note that the information about the active microphones may change during a recording.
            See <c>AudioManager#registerAudioDeviceCallback</c> to be notified of changes
            in the audio devices, querying the active microphones then will return the latest
            information.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getActiveMicrophones()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getActiveMicrophones()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveRecordingConfiguration">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioRecordingConfiguration? ActiveRecordingConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioRecordingConfiguration ActiveRecordingConfiguration" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.ActiveRecordingConfiguration" />
      <MemberSignature Language="F#" Value="member this.ActiveRecordingConfiguration : Android.Media.AudioRecordingConfiguration" Usage="Android.Media.AudioRecord.ActiveRecordingConfiguration" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Android.Media.IAudioRecordingMonitor.ActiveRecordingConfiguration</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getActiveRecordingConfiguration", "()Landroid/media/AudioRecordingConfiguration;", "GetGetActiveRecordingConfigurationHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getActiveRecordingConfiguration", "()Landroid/media/AudioRecordingConfiguration;", "GetGetActiveRecordingConfigurationHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioRecordingConfiguration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current active audio recording for this audio recorder.</summary>
        <value>a valid <c>AudioRecordingConfiguration</c> if this recorder is active
            or null otherwise.</value>
        <remarks>
          <para>Returns the current active audio recording for this audio recorder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getActiveRecordingConfiguration()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getActiveRecordingConfiguration()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnRoutingChangedListener">
      <MemberSignature Language="C#" Value="public virtual void AddOnRoutingChangedListener (Android.Media.AudioRecord.IOnRoutingChangedListener? listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnRoutingChangedListener(class Android.Media.AudioRecord/IOnRoutingChangedListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.AddOnRoutingChangedListener(Android.Media.AudioRecord.IOnRoutingChangedListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member AddOnRoutingChangedListener : Android.Media.AudioRecord.IOnRoutingChangedListener * Android.OS.Handler -&gt; unit&#xA;override this.AddOnRoutingChangedListener : Android.Media.AudioRecord.IOnRoutingChangedListener * Android.OS.Handler -&gt; unit" Usage="audioRecord.AddOnRoutingChangedListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnRoutingChangedListener", "(Landroid/media/AudioRecord$OnRoutingChangedListener;Landroid/os/Handler;)V", "GetAddOnRoutingChangedListener_Landroid_media_AudioRecord_OnRoutingChangedListener_Landroid_os_Handler_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnRoutingChangedListener", "(Landroid/media/AudioRecord$OnRoutingChangedListener;Landroid/os/Handler;)V", "GetAddOnRoutingChangedListener_Landroid_media_AudioRecord_OnRoutingChangedListener_Landroid_os_Handler_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioRecord+IOnRoutingChangedListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">The <c>AudioRouting.OnRoutingChangedListener</c> interface to receive
            notifications of rerouting events.</param>
        <param name="handler">Specifies the <c>Handler</c> object for the thread on which to execute
            the callback. If &lt;code&gt;null&lt;/code&gt;, the <c>Handler</c> associated with the main
            <c>Looper</c> will be used.</param>
        <summary>Adds an <c>AudioRouting.OnRoutingChangedListener</c> to receive notifications of
            routing changes on this AudioRecord.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#addOnRoutingChangedListener(android.media.OnRoutingChangedListener,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.addOnRoutingChangedListener(android.media.OnRoutingChangedListener, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOnRoutingChangedListener">
      <MemberSignature Language="C#" Value="public virtual void AddOnRoutingChangedListener (Android.Media.IAudioRoutingOnRoutingChangedListener? listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddOnRoutingChangedListener(class Android.Media.IAudioRoutingOnRoutingChangedListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.AddOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member AddOnRoutingChangedListener : Android.Media.IAudioRoutingOnRoutingChangedListener * Android.OS.Handler -&gt; unit&#xA;override this.AddOnRoutingChangedListener : Android.Media.IAudioRoutingOnRoutingChangedListener * Android.OS.Handler -&gt; unit" Usage="audioRecord.AddOnRoutingChangedListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IAudioRouting.AddOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener,Android.OS.Handler)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;Landroid/os/Handler;)V", "GetAddOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Landroid_os_Handler_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;Landroid/os/Handler;)V", "GetAddOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Landroid_os_Handler_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.IAudioRoutingOnRoutingChangedListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">The <c>AudioRouting.OnRoutingChangedListener</c> interface to receive
            notifications of rerouting events.</param>
        <param name="handler">Specifies the <c>Handler</c> object for the thread on which to execute
            the callback. If &lt;code&gt;null&lt;/code&gt;, the <c>Handler</c> associated with the main
            <c>Looper</c> will be used.</param>
        <summary>Adds an <c>AudioRouting.OnRoutingChangedListener</c> to receive notifications of
            routing changes on this AudioRecord.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#addOnRoutingChangedListener(android.media.OnRoutingChangedListener,%20android.os.Handler)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.addOnRoutingChangedListener(android.media.OnRoutingChangedListener, android.os.Handler)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudioFormat">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Encoding AudioFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Encoding AudioFormat" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.AudioFormat" />
      <MemberSignature Language="F#" Value="member this.AudioFormat : Android.Media.Encoding" Usage="Android.Media.AudioRecord.AudioFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAudioFormat", "()I", "GetGetAudioFormatHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAudioFormat", "()I", "GetGetAudioFormatHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured audio data encoding.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the configured audio data encoding. See <c>AudioFormat#ENCODING_PCM_8BIT</c>,
            <c>AudioFormat#ENCODING_PCM_16BIT</c>, and <c>AudioFormat#ENCODING_PCM_FLOAT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getAudioFormat()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getAudioFormat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="AudioSessionId">
      <MemberSignature Language="C#" Value="public virtual int AudioSessionId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AudioSessionId" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.AudioSessionId" />
      <MemberSignature Language="F#" Value="member this.AudioSessionId : int" Usage="Android.Media.AudioRecord.AudioSessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAudioSessionId", "()I", "GetGetAudioSessionIdHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAudioSessionId", "()I", "GetGetAudioSessionIdHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the audio session ID.</summary>
        <value>the ID of the audio session this AudioRecord belongs to.</value>
        <remarks>
          <para>Returns the audio session ID.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getAudioSessionId()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getAudioSessionId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="AudioSource">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioSource AudioSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.AudioSource AudioSource" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.AudioSource" />
      <MemberSignature Language="F#" Value="member this.AudioSource : Android.Media.AudioSource" Usage="Android.Media.AudioRecord.AudioSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAudioSource", "()I", "GetGetAudioSourceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAudioSource", "()I", "GetGetAudioSourceHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the audio recording source.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the audio recording source.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getAudioSource()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getAudioSource()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="BufferSizeInFrames">
      <MemberSignature Language="C#" Value="public virtual int BufferSizeInFrames { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BufferSizeInFrames" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.BufferSizeInFrames" />
      <MemberSignature Language="F#" Value="member this.BufferSizeInFrames : int" Usage="Android.Media.AudioRecord.BufferSizeInFrames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBufferSizeInFrames", "()I", "GetGetBufferSizeInFramesHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBufferSizeInFrames", "()I", "GetGetBufferSizeInFramesHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the frame count of the native <c>AudioRecord</c> buffer.</summary>
        <value>current size in frames of the <c>AudioRecord</c> buffer.</value>
        <remarks>
          <para>Returns the frame count of the native <c>AudioRecord</c> buffer.
             This is greater than or equal to the bufferSizeInBytes converted to frame units
             specified in the <c>AudioRecord</c> constructor or Builder.
             The native frame count may be enlarged to accommodate the requirements of the
             source on creation or if the <c>AudioRecord</c>
             is subsequently rerouted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getBufferSizeInFrames()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getBufferSizeInFrames()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelConfiguration">
      <MemberSignature Language="C#" Value="public virtual Android.Media.ChannelIn ChannelConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.ChannelIn ChannelConfiguration" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.ChannelConfiguration" />
      <MemberSignature Language="F#" Value="member this.ChannelConfiguration : Android.Media.ChannelIn" Usage="Android.Media.AudioRecord.ChannelConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getChannelConfiguration", "()I", "GetGetChannelConfigurationHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getChannelConfiguration", "()I", "GetGetChannelConfigurationHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.ChannelIn</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured channel position mask.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the configured channel position mask.</para>
          <para>See <c>AudioFormat#CHANNEL_IN_MONO</c>
            and <c>AudioFormat#CHANNEL_IN_STEREO</c>.
            This method may return <c>AudioFormat#CHANNEL_INVALID</c> if
            a channel index mask is used.
            Consider <c>#getFormat()</c> instead, to obtain an <c>AudioFormat</c>,
            which contains both the channel position mask and the channel index mask.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getChannelConfiguration()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getChannelConfiguration()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ChannelCount">
      <MemberSignature Language="C#" Value="public virtual int ChannelCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelCount" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.ChannelCount" />
      <MemberSignature Language="F#" Value="member this.ChannelCount : int" Usage="Android.Media.AudioRecord.ChannelCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getChannelCount", "()I", "GetGetChannelCountHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getChannelCount", "()I", "GetGetChannelCountHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured number of channels.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the configured number of channels.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getChannelCount()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getChannelCount()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioFormat Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioFormat Format" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.Format" />
      <MemberSignature Language="F#" Value="member this.Format : Android.Media.AudioFormat" Usage="Android.Media.AudioRecord.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFormat", "()Landroid/media/AudioFormat;", "GetGetFormatHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFormat", "()Landroid/media/AudioFormat;", "GetGetFormatHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured <c>AudioRecord</c> format.</summary>
        <value>an <c>AudioFormat</c> containing the
            <c>AudioRecord</c> parameters at the time of configuration.</value>
        <remarks>
          <para>Returns the configured <c>AudioRecord</c> format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getFormat()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getFormat()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMinBufferSize">
      <MemberSignature Language="C#" Value="public static int GetMinBufferSize (int sampleRateInHz, Android.Media.ChannelIn channelConfig, Android.Media.Encoding audioFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetMinBufferSize(int32 sampleRateInHz, valuetype Android.Media.ChannelIn channelConfig, valuetype Android.Media.Encoding audioFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.GetMinBufferSize(System.Int32,Android.Media.ChannelIn,Android.Media.Encoding)" />
      <MemberSignature Language="F#" Value="static member GetMinBufferSize : int * Android.Media.ChannelIn * Android.Media.Encoding -&gt; int" Usage="Android.Media.AudioRecord.GetMinBufferSize (sampleRateInHz, channelConfig, audioFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMinBufferSize", "(III)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMinBufferSize", "(III)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sampleRateInHz" Type="System.Int32" />
        <Parameter Name="channelConfig" Type="Android.Media.ChannelIn">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="audioFormat" Type="Android.Media.Encoding">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="sampleRateInHz">the sample rate expressed in Hertz.
              <c>AudioFormat#SAMPLE_RATE_UNSPECIFIED</c> is not permitted.</param>
        <param name="channelConfig">describes the configuration of the audio channels.
              See <c>AudioFormat#CHANNEL_IN_MONO</c> and
              <c>AudioFormat#CHANNEL_IN_STEREO</c></param>
        <param name="audioFormat">the format in which the audio data is represented.
              See <c>AudioFormat#ENCODING_PCM_16BIT</c>.</param>
        <summary>Returns the minimum buffer size required for the successful creation of an AudioRecord
            object, in byte units.</summary>
        <returns>
          <c>#ERROR_BAD_VALUE</c> if the recording parameters are not supported by the
             hardware, or an invalid parameter was passed,
             or <c>#ERROR</c> if the implementation was unable to query the hardware for its
             input properties,
              or the minimum buffer size expressed in bytes.</returns>
        <remarks>
          <para>Returns the minimum buffer size required for the successful creation of an AudioRecord
            object, in byte units.
            Note that this size doesn't guarantee a smooth recording under load, and higher values
            should be chosen according to the expected frequency at which the AudioRecord instance
            will be polled for new data.
            See <c>#AudioRecord(int, int, int, int, int)</c> for more information on valid
            configuration values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getMinBufferSize(int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getMinBufferSize(int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="C:Android.Media.AudioRecord(Android.Media.AudioSource, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetTimestamp">
      <MemberSignature Language="C#" Value="public virtual int GetTimestamp (Android.Media.AudioTimestamp outTimestamp, Android.Media.AudioTimebase timebase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTimestamp(class Android.Media.AudioTimestamp outTimestamp, valuetype Android.Media.AudioTimebase timebase) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.GetTimestamp(Android.Media.AudioTimestamp,Android.Media.AudioTimebase)" />
      <MemberSignature Language="F#" Value="abstract member GetTimestamp : Android.Media.AudioTimestamp * Android.Media.AudioTimebase -&gt; int&#xA;override this.GetTimestamp : Android.Media.AudioTimestamp * Android.Media.AudioTimebase -&gt; int" Usage="audioRecord.GetTimestamp (outTimestamp, timebase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTimestamp", "(Landroid/media/AudioTimestamp;I)I", "GetGetTimestamp_Landroid_media_AudioTimestamp_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTimestamp", "(Landroid/media/AudioTimestamp;I)I", "GetGetTimestamp_Landroid_media_AudioTimestamp_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outTimestamp" Type="Android.Media.AudioTimestamp" />
        <Parameter Name="timebase" Type="Android.Media.AudioTimebase">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="outTimestamp">a caller provided non-null AudioTimestamp instance,
                   which is updated with the AudioRecord frame delivery information upon success.</param>
        <param name="timebase">one of
                   <c>AudioTimestamp#TIMEBASE_BOOTTIME AudioTimestamp.TIMEBASE_BOOTTIME</c> or
                   <c>AudioTimestamp#TIMEBASE_MONOTONIC AudioTimestamp.TIMEBASE_MONOTONIC</c>,
                   used to select the clock for the AudioTimestamp time.</param>
        <summary>Poll for an <c>AudioTimestamp</c> on demand.</summary>
        <returns>
          <c>#SUCCESS</c> if a timestamp is available,
                    or <c>#ERROR_INVALID_OPERATION</c> if a timestamp not available.</returns>
        <remarks>
          <para>Poll for an <c>AudioTimestamp</c> on demand.</para>
          <para>The AudioTimestamp reflects the frame delivery information at
            the earliest point available in the capture pipeline.</para>
          <para>Calling <c>#startRecording()</c> following a <c>#stop()</c> will reset
            the frame count to 0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getTimestamp(android.media.AudioTimestamp,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getTimestamp(android.media.AudioTimestamp, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrivacySensitive">
      <MemberSignature Language="C#" Value="public virtual bool IsPrivacySensitive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivacySensitive" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.IsPrivacySensitive" />
      <MemberSignature Language="F#" Value="member this.IsPrivacySensitive : bool" Usage="Android.Media.AudioRecord.IsPrivacySensitive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPrivacySensitive", "()Z", "GetIsPrivacySensitiveHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPrivacySensitive", "()Z", "GetIsPrivacySensitiveHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this AudioRecord is marked as privacy sensitive or not.</summary>
        <value>true if privacy sensitive, false otherwise</value>
        <remarks>
          <para>Returns whether this AudioRecord is marked as privacy sensitive or not.</para>
          <para>See <c>Builder#setPrivacySensitive(boolean)</c></para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#isPrivacySensitive()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.isPrivacySensitive()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.AudioRecord.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogSessionId">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Metrics.LogSessionId LogSessionId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Metrics.LogSessionId LogSessionId" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.LogSessionId" />
      <MemberSignature Language="F#" Value="member this.LogSessionId : Android.Media.Metrics.LogSessionId with get, set" Usage="Android.Media.AudioRecord.LogSessionId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLogSessionId", "()Landroid/media/metrics/LogSessionId;", "GetGetLogSessionIdHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLogSessionId", "()Landroid/media/metrics/LogSessionId;", "GetGetLogSessionIdHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setLogSessionId", "(Landroid/media/metrics/LogSessionId;)V", "GetSetLogSessionId_Landroid_media_metrics_LogSessionId_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setLogSessionId", "(Landroid/media/metrics/LogSessionId;)V", "GetSetLogSessionId_Landroid_media_metrics_LogSessionId_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Metrics.LogSessionId</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="logSessionId">a <c>LogSessionId</c> instance which is used to
                   identify this object to the metrics service. Proper generated
                   Ids must be obtained from the Java metrics service and should
                   be considered opaque. Use
                   <c>LogSessionId#LOG_SESSION_ID_NONE</c> to remove the
                   logSessionId association.</param>
        <summary>Returns the <c>LogSessionId</c>. -or- Sets a <c>LogSessionId</c> instance to this AudioRecord for metrics collection.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the <c>LogSessionId</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getLogSessionId()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getLogSessionId()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets a <c>LogSessionId</c> instance to this AudioRecord for metrics collection.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#setLogSessionId(android.media.metrics.LogSessionId)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.setLogSessionId(android.media.metrics.LogSessionId)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkerReached">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.AudioRecord.MarkerReachedEventArgs&gt; MarkerReached;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.AudioRecord/MarkerReachedEventArgs&gt; MarkerReached" />
      <MemberSignature Language="DocId" Value="E:Android.Media.AudioRecord.MarkerReached" />
      <MemberSignature Language="F#" Value="member this.MarkerReached : EventHandler&lt;Android.Media.AudioRecord.MarkerReachedEventArgs&gt; " Usage="member this.MarkerReached : System.EventHandler&lt;Android.Media.AudioRecord.MarkerReachedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.AudioRecord+MarkerReachedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metrics">
      <MemberSignature Language="C#" Value="public virtual Android.OS.PersistableBundle? Metrics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.PersistableBundle Metrics" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.Metrics" />
      <MemberSignature Language="F#" Value="member this.Metrics : Android.OS.PersistableBundle" Usage="Android.Media.AudioRecord.Metrics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMetrics", "()Landroid/os/PersistableBundle;", "GetGetMetricsHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMetrics", "()Landroid/os/PersistableBundle;", "GetGetMetricsHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.PersistableBundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return Metrics data about the current AudioTrack instance.</summary>
        <value>a <c>PersistableBundle</c> containing the set of attributes and values
            available for the media being handled by this instance of AudioRecord
            The attributes are descibed in <c>MetricsConstants</c>.
            
            Additional vendor-specific fields may also be present in
            the return value.</value>
        <remarks>
          <para>Return Metrics data about the current AudioTrack instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getMetrics()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getMetrics()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotificationMarkerPosition">
      <MemberSignature Language="C#" Value="public virtual int NotificationMarkerPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NotificationMarkerPosition" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.NotificationMarkerPosition" />
      <MemberSignature Language="F#" Value="member this.NotificationMarkerPosition : int" Usage="Android.Media.AudioRecord.NotificationMarkerPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNotificationMarkerPosition", "()I", "GetGetNotificationMarkerPositionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNotificationMarkerPosition", "()I", "GetGetNotificationMarkerPositionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the notification marker position expressed in frames.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the notification marker position expressed in frames.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getNotificationMarkerPosition()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getNotificationMarkerPosition()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PeriodicNotification">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.AudioRecord.PeriodicNotificationEventArgs&gt; PeriodicNotification;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.AudioRecord/PeriodicNotificationEventArgs&gt; PeriodicNotification" />
      <MemberSignature Language="DocId" Value="E:Android.Media.AudioRecord.PeriodicNotification" />
      <MemberSignature Language="F#" Value="member this.PeriodicNotification : EventHandler&lt;Android.Media.AudioRecord.PeriodicNotificationEventArgs&gt; " Usage="member this.PeriodicNotification : System.EventHandler&lt;Android.Media.AudioRecord.PeriodicNotificationEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.AudioRecord+PeriodicNotificationEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionNotificationPeriod">
      <MemberSignature Language="C#" Value="public virtual int PositionNotificationPeriod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PositionNotificationPeriod" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.PositionNotificationPeriod" />
      <MemberSignature Language="F#" Value="member this.PositionNotificationPeriod : int" Usage="Android.Media.AudioRecord.PositionNotificationPeriod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPositionNotificationPeriod", "()I", "GetGetPositionNotificationPeriodHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPositionNotificationPeriod", "()I", "GetGetPositionNotificationPeriodHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the notification update period expressed in frames.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the notification update period expressed in frames.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getPositionNotificationPeriod()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getPositionNotificationPeriod()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="PreferredDevice">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioDeviceInfo? PreferredDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioDeviceInfo PreferredDevice" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.PreferredDevice" />
      <MemberSignature Language="F#" Value="member this.PreferredDevice : Android.Media.AudioDeviceInfo" Usage="Android.Media.AudioRecord.PreferredDevice" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Android.Media.IAudioRouting.PreferredDevice</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPreferredDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetPreferredDeviceHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPreferredDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetPreferredDeviceHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioDeviceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the selected input specified by <c>#setPreferredDevice</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the selected input specified by <c>#setPreferredDevice</c>. Note that this
            is not guarenteed to correspond to the actual device being used for recording.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getPreferredDevice()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getPreferredDevice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Java.Nio.ByteBuffer audioBuffer, int sizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(class Java.Nio.ByteBuffer audioBuffer, int32 sizeInBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.Read(Java.Nio.ByteBuffer,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Read : Java.Nio.ByteBuffer * int -&gt; int&#xA;override this.Read : Java.Nio.ByteBuffer * int -&gt; int" Usage="audioRecord.Read (audioBuffer, sizeInBytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "(Ljava/nio/ByteBuffer;I)I", "GetRead_Ljava_nio_ByteBuffer_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "(Ljava/nio/ByteBuffer;I)I", "GetRead_Ljava_nio_ByteBuffer_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBuffer" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioBuffer">the direct buffer to which the recorded audio data is written.
            Data is written to audioBuffer.position().</param>
        <param name="sizeInBytes">the number of requested bytes. It is recommended but not enforced
               that the number of bytes requested be a multiple of the frame size (sample size in
               bytes multiplied by the channel count).</param>
        <summary>Reads audio data from the audio hardware for recording into a direct buffer.</summary>
        <returns>zero or the positive number of bytes that were read, or one of the following
               error codes. The number of bytes will not exceed sizeInBytes and will be truncated to be
               a multiple of the frame size.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the object isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the object is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next read()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;</returns>
        <remarks>
          <para>Reads audio data from the audio hardware for recording into a direct buffer. If this buffer
            is not a direct buffer, this method will always return 0.
            Note that the value returned by <c>java.nio.Buffer#position()</c> on this buffer is
            unchanged after a call to this method.
            The representation of the data in the buffer will depend on the format specified in
            the AudioRecord constructor, and will be native endian.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#read(java.nio.ByteBuffer,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.read(java.nio.ByteBuffer, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (Java.Nio.ByteBuffer audioBuffer, int sizeInBytes, int readMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(class Java.Nio.ByteBuffer audioBuffer, int32 sizeInBytes, int32 readMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.Read(Java.Nio.ByteBuffer,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Read : Java.Nio.ByteBuffer * int * int -&gt; int&#xA;override this.Read : Java.Nio.ByteBuffer * int * int -&gt; int" Usage="audioRecord.Read (audioBuffer, sizeInBytes, readMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "(Ljava/nio/ByteBuffer;II)I", "GetRead_Ljava_nio_ByteBuffer_IIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "(Ljava/nio/ByteBuffer;II)I", "GetRead_Ljava_nio_ByteBuffer_IIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBuffer" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
        <Parameter Name="readMode" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioBuffer">the direct buffer to which the recorded audio data is written.
            Data is written to audioBuffer.position().</param>
        <param name="sizeInBytes">the number of requested bytes. It is recommended but not enforced
               that the number of bytes requested be a multiple of the frame size (sample size in
               bytes multiplied by the channel count).</param>
        <param name="readMode">one of <c>#READ_BLOCKING</c>, <c>#READ_NON_BLOCKING</c>.
                &lt;br&gt;With <c>#READ_BLOCKING</c>, the read will block until all the requested data
                is read.
                &lt;br&gt;With <c>#READ_NON_BLOCKING</c>, the read will return immediately after
                reading as much audio data as possible without blocking.</param>
        <summary>Reads audio data from the audio hardware for recording into a direct buffer.</summary>
        <returns>zero or the positive number of bytes that were read, or one of the following
               error codes. The number of bytes will not exceed sizeInBytes and will be truncated to be
               a multiple of the frame size.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the object isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the object is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next read()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;</returns>
        <remarks>
          <para>Reads audio data from the audio hardware for recording into a direct buffer. If this buffer
            is not a direct buffer, this method will always return 0.
            Note that the value returned by <c>java.nio.Buffer#position()</c> on this buffer is
            unchanged after a call to this method.
            The representation of the data in the buffer will depend on the format specified in
            the AudioRecord constructor, and will be native endian.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#read(java.nio.ByteBuffer,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.read(java.nio.ByteBuffer, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (byte[] audioData, int offsetInBytes, int sizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(unsigned int8[] audioData, int32 offsetInBytes, int32 sizeInBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.Read(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Read : byte[] * int * int -&gt; int&#xA;override this.Read : byte[] * int * int -&gt; int" Usage="audioRecord.Read (audioData, offsetInBytes, sizeInBytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "([BII)I", "GetRead_arrayBIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "([BII)I", "GetRead_arrayBIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Byte[]" />
        <Parameter Name="offsetInBytes" Type="System.Int32" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">the array to which the recorded audio data is written.</param>
        <param name="offsetInBytes">index in audioData from which the data is written expressed in bytes.</param>
        <param name="sizeInBytes">the number of requested bytes.</param>
        <summary>Reads audio data from the audio hardware for recording into a byte array.</summary>
        <returns>zero or the positive number of bytes that were read, or one of the following
               error codes. The number of bytes will not exceed sizeInBytes.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the object isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the object is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next read()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;</returns>
        <remarks>
          <para>Reads audio data from the audio hardware for recording into a byte array.
            The format specified in the AudioRecord constructor should be
            <c>AudioFormat#ENCODING_PCM_8BIT</c> to correspond to the data in the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#read(byte[],%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.read(byte[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (short[] audioData, int offsetInShorts, int sizeInShorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(int16[] audioData, int32 offsetInShorts, int32 sizeInShorts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.Read(System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Read : int16[] * int * int -&gt; int&#xA;override this.Read : int16[] * int * int -&gt; int" Usage="audioRecord.Read (audioData, offsetInShorts, sizeInShorts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "([SII)I", "GetRead_arraySIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "([SII)I", "GetRead_arraySIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Int16[]" />
        <Parameter Name="offsetInShorts" Type="System.Int32" />
        <Parameter Name="sizeInShorts" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">the array to which the recorded audio data is written.</param>
        <param name="offsetInShorts">index in audioData to which the data is written expressed in shorts.
                   Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="sizeInShorts">the number of requested shorts.
                   Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <summary>Reads audio data from the audio hardware for recording into a short array.</summary>
        <returns>zero or the positive number of shorts that were read, or one of the following
               error codes. The number of shorts will be a multiple of the channel count not to exceed
               sizeInShorts.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the object isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the object is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next read()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;</returns>
        <remarks>
          <para>Reads audio data from the audio hardware for recording into a short array.
            The format specified in the AudioRecord constructor should be
            <c>AudioFormat#ENCODING_PCM_16BIT</c> to correspond to the data in the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#read(short[],%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.read(short[], int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (byte[] audioData, int offsetInBytes, int sizeInBytes, int readMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(unsigned int8[] audioData, int32 offsetInBytes, int32 sizeInBytes, int32 readMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.Read(System.Byte[],System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Read : byte[] * int * int * int -&gt; int&#xA;override this.Read : byte[] * int * int * int -&gt; int" Usage="audioRecord.Read (audioData, offsetInBytes, sizeInBytes, readMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "([BIII)I", "GetRead_arrayBIIIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "([BIII)I", "GetRead_arrayBIIIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Byte[]" />
        <Parameter Name="offsetInBytes" Type="System.Int32" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
        <Parameter Name="readMode" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">the array to which the recorded audio data is written.</param>
        <param name="offsetInBytes">index in audioData to which the data is written expressed in bytes.
                   Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="sizeInBytes">the number of requested bytes.
                   Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="readMode">one of <c>#READ_BLOCKING</c>, <c>#READ_NON_BLOCKING</c>.
                &lt;br&gt;With <c>#READ_BLOCKING</c>, the read will block until all the requested data
                is read.
                &lt;br&gt;With <c>#READ_NON_BLOCKING</c>, the read will return immediately after
                reading as much audio data as possible without blocking.</param>
        <summary>Reads audio data from the audio hardware for recording into a byte array.</summary>
        <returns>zero or the positive number of bytes that were read, or one of the following
               error codes. The number of bytes will be a multiple of the frame size in bytes
               not to exceed sizeInBytes.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the object isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the object is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next read()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;</returns>
        <remarks>
          <para>Reads audio data from the audio hardware for recording into a byte array.
            The format specified in the AudioRecord constructor should be
            <c>AudioFormat#ENCODING_PCM_8BIT</c> to correspond to the data in the array.
            The format can be <c>AudioFormat#ENCODING_PCM_16BIT</c>, but this is deprecated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#read(byte[],%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.read(byte[], int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (short[] audioData, int offsetInShorts, int sizeInShorts, int readMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(int16[] audioData, int32 offsetInShorts, int32 sizeInShorts, int32 readMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.Read(System.Int16[],System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Read : int16[] * int * int * int -&gt; int&#xA;override this.Read : int16[] * int * int * int -&gt; int" Usage="audioRecord.Read (audioData, offsetInShorts, sizeInShorts, readMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "([SIII)I", "GetRead_arraySIIIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "([SIII)I", "GetRead_arraySIIIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Int16[]" />
        <Parameter Name="offsetInShorts" Type="System.Int32" />
        <Parameter Name="sizeInShorts" Type="System.Int32" />
        <Parameter Name="readMode" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">the array to which the recorded audio data is written.</param>
        <param name="offsetInShorts">index in audioData from which the data is written expressed in shorts.
                   Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="sizeInShorts">the number of requested shorts.
                   Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="readMode">one of <c>#READ_BLOCKING</c>, <c>#READ_NON_BLOCKING</c>.
                &lt;br&gt;With <c>#READ_BLOCKING</c>, the read will block until all the requested data
                is read.
                &lt;br&gt;With <c>#READ_NON_BLOCKING</c>, the read will return immediately after
                reading as much audio data as possible without blocking.</param>
        <summary>Reads audio data from the audio hardware for recording into a short array.</summary>
        <returns>zero or the positive number of shorts that were read, or one of the following
               error codes. The number of shorts will be a multiple of the channel count not to exceed
               sizeInShorts.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the object isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the object is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next read()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;</returns>
        <remarks>
          <para>Reads audio data from the audio hardware for recording into a short array.
            The format specified in the AudioRecord constructor should be
            <c>AudioFormat#ENCODING_PCM_16BIT</c> to correspond to the data in the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#read(short[],%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.read(short[], int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public virtual int Read (float[] audioData, int offsetInFloats, int sizeInFloats, int readMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Read(float32[] audioData, int32 offsetInFloats, int32 sizeInFloats, int32 readMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.Read(System.Single[],System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Read : single[] * int * int * int -&gt; int&#xA;override this.Read : single[] * int * int * int -&gt; int" Usage="audioRecord.Read (audioData, offsetInFloats, sizeInFloats, readMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("read", "([FIII)I", "GetRead_arrayFIIIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("read", "([FIII)I", "GetRead_arrayFIIIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Single[]" />
        <Parameter Name="offsetInFloats" Type="System.Int32" />
        <Parameter Name="sizeInFloats" Type="System.Int32" />
        <Parameter Name="readMode" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">the array to which the recorded audio data is written.</param>
        <param name="offsetInFloats">index in audioData from which the data is written.
                   Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="sizeInFloats">the number of requested floats.
                   Must not be negative, or cause the data access to go out of bounds of the array.</param>
        <param name="readMode">one of <c>#READ_BLOCKING</c>, <c>#READ_NON_BLOCKING</c>.
                &lt;br&gt;With <c>#READ_BLOCKING</c>, the read will block until all the requested data
                is read.
                &lt;br&gt;With <c>#READ_NON_BLOCKING</c>, the read will return immediately after
                reading as much audio data as possible without blocking.</param>
        <summary>Reads audio data from the audio hardware for recording into a float array.</summary>
        <returns>zero or the positive number of floats that were read, or one of the following
               error codes. The number of floats will be a multiple of the channel count not to exceed
               sizeInFloats.
            &lt;ul&gt;
            &lt;li&gt;<c>#ERROR_INVALID_OPERATION</c> if the object isn't properly initialized&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_BAD_VALUE</c> if the parameters don't resolve to valid data and indexes&lt;/li&gt;
            &lt;li&gt;<c>#ERROR_DEAD_OBJECT</c> if the object is not valid anymore and
               needs to be recreated. The dead object error code is not returned if some data was
               successfully transferred. In this case, the error is returned at the next read()&lt;/li&gt;
            &lt;li&gt;<c>#ERROR</c> in case of other error&lt;/li&gt;
            &lt;/ul&gt;</returns>
        <remarks>
          <para>Reads audio data from the audio hardware for recording into a float array.
            The format specified in the AudioRecord constructor should be
            <c>AudioFormat#ENCODING_PCM_FLOAT</c> to correspond to the data in the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#read(float[],%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.read(float[], int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (Java.Nio.ByteBuffer audioBuffer, int sizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(class Java.Nio.ByteBuffer audioBuffer, int32 sizeInBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.ReadAsync(Java.Nio.ByteBuffer,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : Java.Nio.ByteBuffer * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioRecord.ReadAsync (audioBuffer, sizeInBytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBuffer" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioBuffer">To be added.</param>
        <param name="sizeInBytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (Java.Nio.ByteBuffer audioBuffer, int sizeInBytes, int readMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(class Java.Nio.ByteBuffer audioBuffer, int32 sizeInBytes, int32 readMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.ReadAsync(Java.Nio.ByteBuffer,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : Java.Nio.ByteBuffer * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioRecord.ReadAsync (audioBuffer, sizeInBytes, readMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioBuffer" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
        <Parameter Name="readMode" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioBuffer">To be added.</param>
        <param name="sizeInBytes">To be added.</param>
        <param name="readMode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] audioData, int offsetInBytes, int sizeInBytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] audioData, int32 offsetInBytes, int32 sizeInBytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.ReadAsync(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : byte[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioRecord.ReadAsync (audioData, offsetInBytes, sizeInBytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Byte[]" />
        <Parameter Name="offsetInBytes" Type="System.Int32" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInBytes">To be added.</param>
        <param name="sizeInBytes">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (short[] audioData, int offsetInShorts, int sizeInShorts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(int16[] audioData, int32 offsetInShorts, int32 sizeInShorts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.ReadAsync(System.Int16[],System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : int16[] * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioRecord.ReadAsync (audioData, offsetInShorts, sizeInShorts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Int16[]" />
        <Parameter Name="offsetInShorts" Type="System.Int32" />
        <Parameter Name="sizeInShorts" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInShorts">To be added.</param>
        <param name="sizeInShorts">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (byte[] audioData, int offsetInBytes, int sizeInBytes, int readMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(unsigned int8[] audioData, int32 offsetInBytes, int32 sizeInBytes, int32 readMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : byte[] * int * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioRecord.ReadAsync (audioData, offsetInBytes, sizeInBytes, readMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Byte[]" />
        <Parameter Name="offsetInBytes" Type="System.Int32" />
        <Parameter Name="sizeInBytes" Type="System.Int32" />
        <Parameter Name="readMode" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInBytes">To be added.</param>
        <param name="sizeInBytes">To be added.</param>
        <param name="readMode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (short[] audioData, int offsetInShorts, int sizeInShorts, int readMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(int16[] audioData, int32 offsetInShorts, int32 sizeInShorts, int32 readMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.ReadAsync(System.Int16[],System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : int16[] * int * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioRecord.ReadAsync (audioData, offsetInShorts, sizeInShorts, readMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Int16[]" />
        <Parameter Name="offsetInShorts" Type="System.Int32" />
        <Parameter Name="sizeInShorts" Type="System.Int32" />
        <Parameter Name="readMode" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInShorts">To be added.</param>
        <param name="sizeInShorts">To be added.</param>
        <param name="readMode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; ReadAsync (float[] audioData, int offsetInFloats, int sizeInFloats, int readMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; ReadAsync(float32[] audioData, int32 offsetInFloats, int32 sizeInFloats, int32 readMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.ReadAsync(System.Single[],System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ReadAsync : single[] * int * int * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="audioRecord.ReadAsync (audioData, offsetInFloats, sizeInFloats, readMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audioData" Type="System.Single[]" />
        <Parameter Name="offsetInFloats" Type="System.Int32" />
        <Parameter Name="sizeInFloats" Type="System.Int32" />
        <Parameter Name="readMode" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "", "" }, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="audioData">To be added.</param>
        <param name="offsetInFloats">To be added.</param>
        <param name="sizeInFloats">To be added.</param>
        <param name="readMode">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RecordingState">
      <MemberSignature Language="C#" Value="public virtual Android.Media.RecordState RecordingState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.RecordState RecordingState" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.RecordingState" />
      <MemberSignature Language="F#" Value="member this.RecordingState : Android.Media.RecordState" Usage="Android.Media.AudioRecord.RecordingState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRecordingState", "()I", "GetGetRecordingStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRecordingState", "()I", "GetGetRecordingStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RecordState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the recording state of the AudioRecord instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the recording state of the AudioRecord instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getRecordingState()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getRecordingState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAudioRecordingCallback">
      <MemberSignature Language="C#" Value="public virtual void RegisterAudioRecordingCallback (Java.Util.Concurrent.IExecutor executor, Android.Media.AudioManager.AudioRecordingCallback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterAudioRecordingCallback(class Java.Util.Concurrent.IExecutor executor, class Android.Media.AudioManager/AudioRecordingCallback cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.RegisterAudioRecordingCallback(Java.Util.Concurrent.IExecutor,Android.Media.AudioManager.AudioRecordingCallback)" />
      <MemberSignature Language="F#" Value="abstract member RegisterAudioRecordingCallback : Java.Util.Concurrent.IExecutor * Android.Media.AudioManager.AudioRecordingCallback -&gt; unit&#xA;override this.RegisterAudioRecordingCallback : Java.Util.Concurrent.IExecutor * Android.Media.AudioManager.AudioRecordingCallback -&gt; unit" Usage="audioRecord.RegisterAudioRecordingCallback (executor, cb)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IAudioRecordingMonitor.RegisterAudioRecordingCallback(Java.Util.Concurrent.IExecutor,Android.Media.AudioManager.AudioRecordingCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerAudioRecordingCallback", "(Ljava/util/concurrent/Executor;Landroid/media/AudioManager$AudioRecordingCallback;)V", "GetRegisterAudioRecordingCallback_Ljava_util_concurrent_Executor_Landroid_media_AudioManager_AudioRecordingCallback_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerAudioRecordingCallback", "(Ljava/util/concurrent/Executor;Landroid/media/AudioManager$AudioRecordingCallback;)V", "GetRegisterAudioRecordingCallback_Ljava_util_concurrent_Executor_Landroid_media_AudioManager_AudioRecordingCallback_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioRecordingCallback" />
      </Parameters>
      <Docs>
        <param name="executor">
          <c>Executor</c> to handle the callbacks.</param>
        <param name="cb">non-null callback to register</param>
        <summary>Register a callback to be notified of audio capture changes via a
            <c>AudioManager.AudioRecordingCallback</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#registerAudioRecordingCallback(java.util.concurrent.Executor,%20android.media.AudioRecordingCallback)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.registerAudioRecordingCallback(java.util.concurrent.Executor, android.media.AudioRecordingCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.Release" />
      <MemberSignature Language="F#" Value="abstract member Release : unit -&gt; unit&#xA;override this.Release : unit -&gt; unit" Usage="audioRecord.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "GetReleaseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "()V", "GetReleaseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the native AudioRecord resources.</summary>
        <remarks>
          <para>Releases the native AudioRecord resources.
            The object can no longer be used and the reference should be set to null
            after a call to release()</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#release()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="RemoveOnRoutingChangedListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveOnRoutingChangedListener (Android.Media.AudioRecord.IOnRoutingChangedListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnRoutingChangedListener(class Android.Media.AudioRecord/IOnRoutingChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.RemoveOnRoutingChangedListener(Android.Media.AudioRecord.IOnRoutingChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnRoutingChangedListener : Android.Media.AudioRecord.IOnRoutingChangedListener -&gt; unit&#xA;override this.RemoveOnRoutingChangedListener : Android.Media.AudioRecord.IOnRoutingChangedListener -&gt; unit" Usage="audioRecord.RemoveOnRoutingChangedListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnRoutingChangedListener", "(Landroid/media/AudioRecord$OnRoutingChangedListener;)V", "GetRemoveOnRoutingChangedListener_Landroid_media_AudioRecord_OnRoutingChangedListener_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnRoutingChangedListener", "(Landroid/media/AudioRecord$OnRoutingChangedListener;)V", "GetRemoveOnRoutingChangedListener_Landroid_media_AudioRecord_OnRoutingChangedListener_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioRecord+IOnRoutingChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">The previously added <c>AudioRouting.OnRoutingChangedListener</c> interface
            to remove.</param>
        <summary>Removes an <c>AudioRouting.OnRoutingChangedListener</c> which has been previously added
            to receive rerouting notifications.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOnRoutingChangedListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveOnRoutingChangedListener (Android.Media.IAudioRoutingOnRoutingChangedListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveOnRoutingChangedListener(class Android.Media.IAudioRoutingOnRoutingChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.RemoveOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOnRoutingChangedListener : Android.Media.IAudioRoutingOnRoutingChangedListener -&gt; unit&#xA;override this.RemoveOnRoutingChangedListener : Android.Media.IAudioRoutingOnRoutingChangedListener -&gt; unit" Usage="audioRecord.RemoveOnRoutingChangedListener listener" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IAudioRouting.RemoveOnRoutingChangedListener(Android.Media.IAudioRoutingOnRoutingChangedListener)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;)V", "GetRemoveOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOnRoutingChangedListener", "(Landroid/media/AudioRouting$OnRoutingChangedListener;)V", "GetRemoveOnRoutingChangedListener_Landroid_media_AudioRouting_OnRoutingChangedListener_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.IAudioRoutingOnRoutingChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">The previously added <c>AudioRouting.OnRoutingChangedListener</c> interface
            to remove.</param>
        <summary>Removes an <c>AudioRouting.OnRoutingChangedListener</c> which has been previously added
            to receive rerouting notifications.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.removeOnRoutingChangedListener(android.media.OnRoutingChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutedDevice">
      <MemberSignature Language="C#" Value="public virtual Android.Media.AudioDeviceInfo? RoutedDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.AudioDeviceInfo RoutedDevice" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.RoutedDevice" />
      <MemberSignature Language="F#" Value="member this.RoutedDevice : Android.Media.AudioDeviceInfo" Usage="Android.Media.AudioRecord.RoutedDevice" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Android.Media.IAudioRouting.RoutedDevice</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRoutedDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetRoutedDeviceHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRoutedDevice", "()Landroid/media/AudioDeviceInfo;", "GetGetRoutedDeviceHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.AudioDeviceInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an <c>AudioDeviceInfo</c> identifying the current routing of this AudioRecord.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns an <c>AudioDeviceInfo</c> identifying the current routing of this AudioRecord.
            Note: The query is only valid if the AudioRecord is currently recording. If it is not,
            <c>getRoutedDevice()</c> will return null.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getRoutedDevice()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getRoutedDevice()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutingChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; RoutingChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; RoutingChanged" />
      <MemberSignature Language="DocId" Value="E:Android.Media.AudioRecord.RoutingChanged" />
      <MemberSignature Language="F#" Value="member this.RoutingChanged : EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; " Usage="member this.RoutingChanged : System.EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.AudioRoutingOnRoutingChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SampleRate">
      <MemberSignature Language="C#" Value="public virtual int SampleRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SampleRate" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.SampleRate" />
      <MemberSignature Language="F#" Value="member this.SampleRate : int" Usage="Android.Media.AudioRecord.SampleRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSampleRate", "()I", "GetGetSampleRateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSampleRate", "()I", "GetGetSampleRateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the configured audio sink sample rate in Hz.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the configured audio sink sample rate in Hz.
            The sink sample rate never changes after construction.
            If the constructor had a specific sample rate, then the sink sample rate is that value.
            If the constructor had <c>AudioFormat#SAMPLE_RATE_UNSPECIFIED</c>,
            then the sink sample rate is a route-dependent default value based on the source [sic].</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getSampleRate()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getSampleRate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetNotificationMarkerPosition">
      <MemberSignature Language="C#" Value="public virtual Android.Media.RecordStatus SetNotificationMarkerPosition (int markerInFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.RecordStatus SetNotificationMarkerPosition(int32 markerInFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.SetNotificationMarkerPosition(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetNotificationMarkerPosition : int -&gt; Android.Media.RecordStatus&#xA;override this.SetNotificationMarkerPosition : int -&gt; Android.Media.RecordStatus" Usage="audioRecord.SetNotificationMarkerPosition markerInFrames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setNotificationMarkerPosition", "(I)I", "GetSetNotificationMarkerPosition_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setNotificationMarkerPosition", "(I)I", "GetSetNotificationMarkerPosition_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RecordStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="markerInFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="markerInFrames">marker position expressed in frames</param>
        <summary>Sets the marker position at which the listener is called, if set with
            <c>#setRecordPositionUpdateListener(OnRecordPositionUpdateListener)</c> or
            <c>#setRecordPositionUpdateListener(OnRecordPositionUpdateListener, Handler)</c>.</summary>
        <returns>error code or success, see <c>#SUCCESS</c>, <c>#ERROR_BAD_VALUE</c>,
             <c>#ERROR_INVALID_OPERATION</c></returns>
        <remarks>
          <para>Sets the marker position at which the listener is called, if set with
            <c>#setRecordPositionUpdateListener(OnRecordPositionUpdateListener)</c> or
            <c>#setRecordPositionUpdateListener(OnRecordPositionUpdateListener, Handler)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#setNotificationMarkerPosition(int)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.setNotificationMarkerPosition(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPositionNotificationPeriod">
      <MemberSignature Language="C#" Value="public virtual Android.Media.RecordStatus SetPositionNotificationPeriod (int periodInFrames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.RecordStatus SetPositionNotificationPeriod(int32 periodInFrames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.SetPositionNotificationPeriod(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPositionNotificationPeriod : int -&gt; Android.Media.RecordStatus&#xA;override this.SetPositionNotificationPeriod : int -&gt; Android.Media.RecordStatus" Usage="audioRecord.SetPositionNotificationPeriod periodInFrames" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPositionNotificationPeriod", "(I)I", "GetSetPositionNotificationPeriod_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPositionNotificationPeriod", "(I)I", "GetSetPositionNotificationPeriod_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.RecordStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="periodInFrames" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="periodInFrames">update period expressed in frames</param>
        <summary>Sets the period at which the listener is called, if set with
            <c>#setRecordPositionUpdateListener(OnRecordPositionUpdateListener)</c> or
            <c>#setRecordPositionUpdateListener(OnRecordPositionUpdateListener, Handler)</c>.</summary>
        <returns>error code or success, see <c>#SUCCESS</c>, <c>#ERROR_INVALID_OPERATION</c></returns>
        <remarks>
          <para>Sets the period at which the listener is called, if set with
            <c>#setRecordPositionUpdateListener(OnRecordPositionUpdateListener)</c> or
            <c>#setRecordPositionUpdateListener(OnRecordPositionUpdateListener, Handler)</c>.
            It is possible for notifications to be lost if the period is too small.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#setPositionNotificationPeriod(int)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.setPositionNotificationPeriod(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetPreferredDevice">
      <MemberSignature Language="C#" Value="public virtual bool SetPreferredDevice (Android.Media.AudioDeviceInfo? deviceInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPreferredDevice(class Android.Media.AudioDeviceInfo deviceInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.SetPreferredDevice(Android.Media.AudioDeviceInfo)" />
      <MemberSignature Language="F#" Value="abstract member SetPreferredDevice : Android.Media.AudioDeviceInfo -&gt; bool&#xA;override this.SetPreferredDevice : Android.Media.AudioDeviceInfo -&gt; bool" Usage="audioRecord.SetPreferredDevice deviceInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IAudioRouting.SetPreferredDevice(Android.Media.AudioDeviceInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPreferredDevice", "(Landroid/media/AudioDeviceInfo;)Z", "GetSetPreferredDevice_Landroid_media_AudioDeviceInfo_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPreferredDevice", "(Landroid/media/AudioDeviceInfo;)Z", "GetSetPreferredDevice_Landroid_media_AudioDeviceInfo_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="deviceInfo" Type="Android.Media.AudioDeviceInfo" />
      </Parameters>
      <Docs>
        <param name="deviceInfo">The <c>AudioDeviceInfo</c> specifying the audio source.
             If deviceInfo is null, default routing is restored.</param>
        <summary>Specifies an audio device (via an <c>AudioDeviceInfo</c> object) to route
            the input to this AudioRecord.</summary>
        <returns>true if successful, false if the specified <c>AudioDeviceInfo</c> is non-null and
            does not correspond to a valid audio input device.</returns>
        <remarks>
          <para>Specifies an audio device (via an <c>AudioDeviceInfo</c> object) to route
            the input to this AudioRecord.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#setPreferredDevice(android.media.AudioDeviceInfo)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.setPreferredDevice(android.media.AudioDeviceInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPreferredMicrophoneDirection">
      <MemberSignature Language="C#" Value="public virtual bool SetPreferredMicrophoneDirection (Android.Media.MicDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPreferredMicrophoneDirection(valuetype Android.Media.MicDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.SetPreferredMicrophoneDirection(Android.Media.MicDirection)" />
      <MemberSignature Language="F#" Value="abstract member SetPreferredMicrophoneDirection : Android.Media.MicDirection -&gt; bool&#xA;override this.SetPreferredMicrophoneDirection : Android.Media.MicDirection -&gt; bool" Usage="audioRecord.SetPreferredMicrophoneDirection direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IMicrophoneDirection.SetPreferredMicrophoneDirection(Android.Media.MicDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPreferredMicrophoneDirection", "(I)Z", "GetSetPreferredMicrophoneDirection_IHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPreferredMicrophoneDirection", "(I)Z", "GetSetPreferredMicrophoneDirection_IHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="Android.Media.MicDirection">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="direction">To be added.</param>
        <summary>Specifies the logical microphone (for processing).</summary>
        <returns>true if sucessful.</returns>
        <remarks>
          <para>Specifies the logical microphone (for processing). Applications can use this to specify
            which side of the device to optimize capture from. Typically used in conjunction with
            the camera capturing video.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#setPreferredMicrophoneDirection(int)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.setPreferredMicrophoneDirection(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPreferredMicrophoneFieldDimension">
      <MemberSignature Language="C#" Value="public virtual bool SetPreferredMicrophoneFieldDimension (float zoom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPreferredMicrophoneFieldDimension(float32 zoom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.SetPreferredMicrophoneFieldDimension(System.Single)" />
      <MemberSignature Language="F#" Value="abstract member SetPreferredMicrophoneFieldDimension : single -&gt; bool&#xA;override this.SetPreferredMicrophoneFieldDimension : single -&gt; bool" Usage="audioRecord.SetPreferredMicrophoneFieldDimension zoom" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IMicrophoneDirection.SetPreferredMicrophoneFieldDimension(System.Single)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPreferredMicrophoneFieldDimension", "(F)Z", "GetSetPreferredMicrophoneFieldDimension_FHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPreferredMicrophoneFieldDimension", "(F)Z", "GetSetPreferredMicrophoneFieldDimension_FHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zoom" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="zoom">the desired field dimension of microphone capture. Range is from -1 (wide angle),
            though 0 (no zoom) to 1 (maximum zoom).</param>
        <summary>Specifies the zoom factor (i.</summary>
        <returns>true if sucessful.</returns>
        <remarks>
          <para>Specifies the zoom factor (i.e. the field dimension) for the selected microphone
            (for processing). The selected microphone is determined by the use-case for the stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#setPreferredMicrophoneFieldDimension(float)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.setPreferredMicrophoneFieldDimension(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRecordPositionUpdateListener">
      <MemberSignature Language="C#" Value="public virtual void SetRecordPositionUpdateListener (Android.Media.AudioRecord.IOnRecordPositionUpdateListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRecordPositionUpdateListener(class Android.Media.AudioRecord/IOnRecordPositionUpdateListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.SetRecordPositionUpdateListener(Android.Media.AudioRecord.IOnRecordPositionUpdateListener)" />
      <MemberSignature Language="F#" Value="abstract member SetRecordPositionUpdateListener : Android.Media.AudioRecord.IOnRecordPositionUpdateListener -&gt; unit&#xA;override this.SetRecordPositionUpdateListener : Android.Media.AudioRecord.IOnRecordPositionUpdateListener -&gt; unit" Usage="audioRecord.SetRecordPositionUpdateListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRecordPositionUpdateListener", "(Landroid/media/AudioRecord$OnRecordPositionUpdateListener;)V", "GetSetRecordPositionUpdateListener_Landroid_media_AudioRecord_OnRecordPositionUpdateListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRecordPositionUpdateListener", "(Landroid/media/AudioRecord$OnRecordPositionUpdateListener;)V", "GetSetRecordPositionUpdateListener_Landroid_media_AudioRecord_OnRecordPositionUpdateListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioRecord+IOnRecordPositionUpdateListener" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <summary>Sets the listener the AudioRecord notifies when a previously set marker is reached or
 for each periodic record head position update.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="SetRecordPositionUpdateListener">
      <MemberSignature Language="C#" Value="public virtual void SetRecordPositionUpdateListener (Android.Media.AudioRecord.IOnRecordPositionUpdateListener? listener, Android.OS.Handler? handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRecordPositionUpdateListener(class Android.Media.AudioRecord/IOnRecordPositionUpdateListener listener, class Android.OS.Handler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.SetRecordPositionUpdateListener(Android.Media.AudioRecord.IOnRecordPositionUpdateListener,Android.OS.Handler)" />
      <MemberSignature Language="F#" Value="abstract member SetRecordPositionUpdateListener : Android.Media.AudioRecord.IOnRecordPositionUpdateListener * Android.OS.Handler -&gt; unit&#xA;override this.SetRecordPositionUpdateListener : Android.Media.AudioRecord.IOnRecordPositionUpdateListener * Android.OS.Handler -&gt; unit" Usage="audioRecord.SetRecordPositionUpdateListener (listener, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRecordPositionUpdateListener", "(Landroid/media/AudioRecord$OnRecordPositionUpdateListener;Landroid/os/Handler;)V", "GetSetRecordPositionUpdateListener_Landroid_media_AudioRecord_OnRecordPositionUpdateListener_Landroid_os_Handler_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRecordPositionUpdateListener", "(Landroid/media/AudioRecord$OnRecordPositionUpdateListener;Landroid/os/Handler;)V", "GetSetRecordPositionUpdateListener_Landroid_media_AudioRecord_OnRecordPositionUpdateListener_Landroid_os_Handler_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.AudioRecord+IOnRecordPositionUpdateListener" />
        <Parameter Name="handler" Type="Android.OS.Handler" />
      </Parameters>
      <Docs>
        <param name="listener">To be added.</param>
        <param name="handler">the Handler that will receive the event notification messages.
</param>
        <summary>Sets the listener the AudioRecord notifies when a previously set marker is reached or
 for each periodic record head position update.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="StartRecording">
      <MemberSignature Language="C#" Value="public virtual void StartRecording ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartRecording() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.StartRecording" />
      <MemberSignature Language="F#" Value="abstract member StartRecording : unit -&gt; unit&#xA;override this.StartRecording : unit -&gt; unit" Usage="audioRecord.StartRecording " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startRecording", "()V", "GetStartRecordingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startRecording", "()V", "GetStartRecordingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Starts recording from the AudioRecord instance.</summary>
        <remarks>
          <para>Starts recording from the AudioRecord instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#startRecording()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.startRecording()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="StartRecording">
      <MemberSignature Language="C#" Value="public virtual void StartRecording (Android.Media.MediaSyncEvent? syncEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartRecording(class Android.Media.MediaSyncEvent syncEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.StartRecording(Android.Media.MediaSyncEvent)" />
      <MemberSignature Language="F#" Value="abstract member StartRecording : Android.Media.MediaSyncEvent -&gt; unit&#xA;override this.StartRecording : Android.Media.MediaSyncEvent -&gt; unit" Usage="audioRecord.StartRecording syncEvent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startRecording", "(Landroid/media/MediaSyncEvent;)V", "GetStartRecording_Landroid_media_MediaSyncEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startRecording", "(Landroid/media/MediaSyncEvent;)V", "GetStartRecording_Landroid_media_MediaSyncEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="syncEvent" Type="Android.Media.MediaSyncEvent" />
      </Parameters>
      <Docs>
        <param name="syncEvent">event that triggers the capture.</param>
        <summary>Starts recording from the AudioRecord instance when the specified synchronization event
            occurs on the specified audio session.</summary>
        <remarks>
          <para>Starts recording from the AudioRecord instance when the specified synchronization event
            occurs on the specified audio session.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#startRecording(android.media.MediaSyncEvent)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.startRecording(android.media.MediaSyncEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
        <exception cref="T:Java.Lang.IllegalStateException" />
        <altmember cref="T:Android.Media.MediaSyncEvent" />
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public virtual Android.Media.State State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.State State" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.State" />
      <MemberSignature Language="F#" Value="member this.State : Android.Media.State" Usage="Android.Media.AudioRecord.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getState", "()I", "GetGetStateHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getState", "()I", "GetGetStateHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.State</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the state of the AudioRecord instance.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the state of the AudioRecord instance. This is useful after the
            AudioRecord instance has been created to check if it was initialized
            properly. This ensures that the appropriate hardware resources have been
            acquired.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#getState()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.getState()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public virtual void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.Stop" />
      <MemberSignature Language="F#" Value="abstract member Stop : unit -&gt; unit&#xA;override this.Stop : unit -&gt; unit" Usage="audioRecord.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stop", "()V", "GetStopHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stop", "()V", "GetStopHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops recording.</summary>
        <remarks>
          <para>Stops recording.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#stop()" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.stop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.AudioRecord.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.AudioRecord.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.AudioRecord.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterAudioRecordingCallback">
      <MemberSignature Language="C#" Value="public virtual void UnregisterAudioRecordingCallback (Android.Media.AudioManager.AudioRecordingCallback cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterAudioRecordingCallback(class Android.Media.AudioManager/AudioRecordingCallback cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.AudioRecord.UnregisterAudioRecordingCallback(Android.Media.AudioManager.AudioRecordingCallback)" />
      <MemberSignature Language="F#" Value="abstract member UnregisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback -&gt; unit&#xA;override this.UnregisterAudioRecordingCallback : Android.Media.AudioManager.AudioRecordingCallback -&gt; unit" Usage="audioRecord.UnregisterAudioRecordingCallback cb" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Media.IAudioRecordingMonitor.UnregisterAudioRecordingCallback(Android.Media.AudioManager.AudioRecordingCallback)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterAudioRecordingCallback", "(Landroid/media/AudioManager$AudioRecordingCallback;)V", "GetUnregisterAudioRecordingCallback_Landroid_media_AudioManager_AudioRecordingCallback_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterAudioRecordingCallback", "(Landroid/media/AudioManager$AudioRecordingCallback;)V", "GetUnregisterAudioRecordingCallback_Landroid_media_AudioManager_AudioRecordingCallback_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Android.Media.AudioManager+AudioRecordingCallback" />
      </Parameters>
      <Docs>
        <param name="cb">non-null callback to unregister</param>
        <summary>Unregister an audio recording callback previously registered with
            <c>#registerAudioRecordingCallback(Executor, AudioManager.AudioRecordingCallback)</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/AudioRecord#unregisterAudioRecordingCallback(android.media.AudioRecordingCallback)" title="Reference documentation">Java documentation for <code>android.media.AudioRecord.unregisterAudioRecordingCallback(android.media.AudioRecordingCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
