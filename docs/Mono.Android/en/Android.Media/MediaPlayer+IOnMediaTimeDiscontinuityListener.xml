<Type Name="MediaPlayer+IOnMediaTimeDiscontinuityListener" FullName="Android.Media.MediaPlayer+IOnMediaTimeDiscontinuityListener">
  <TypeSignature Language="C#" Value="public interface MediaPlayer.IOnMediaTimeDiscontinuityListener : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract beforefieldinit MediaPlayer/IOnMediaTimeDiscontinuityListener implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.MediaPlayer.IOnMediaTimeDiscontinuityListener" />
  <TypeSignature Language="F#" Value="type MediaPlayer.IOnMediaTimeDiscontinuityListener = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/MediaPlayer$OnMediaTimeDiscontinuityListener", "", "Android.Media.MediaPlayer/IOnMediaTimeDiscontinuityListenerInvoker", ApiSince=28)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/MediaPlayer$OnMediaTimeDiscontinuityListener", "", "Android.Media.MediaPlayer/IOnMediaTimeDiscontinuityListenerInvoker", ApiSince=28)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Interface definition of a callback to be invoked when discontinuity in the normal progression
            of the media time is detected.</summary>
    <remarks>
      <para>Interface definition of a callback to be invoked when discontinuity in the normal progression
            of the media time is detected.
            The "normal progression" of media time is defined as the expected increase of the playback
            position when playing media, relative to the playback speed (for instance every second, media
            time increases by two seconds when playing at 2x).&lt;br&gt;
            Discontinuities are encountered in the following cases:
            &lt;ul&gt;
            &lt;li&gt;when the player is starved for data and cannot play anymore&lt;/li&gt;
            &lt;li&gt;when the player encounters a playback error&lt;/li&gt;
            &lt;li&gt;when the a seek operation starts, and when it's completed&lt;/li&gt;
            &lt;li&gt;when the playback speed changes&lt;/li&gt;
            &lt;li&gt;when the playback state changes&lt;/li&gt;
            &lt;li&gt;when the player is reset&lt;/li&gt;
            &lt;/ul&gt;
            See the
            <c>MediaPlayer#setOnMediaTimeDiscontinuityListener(OnMediaTimeDiscontinuityListener, Handler)</c>
            method to set a listener for these events.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/MediaPlayer.OnMediaTimeDiscontinuityListener" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.OnMediaTimeDiscontinuityListener</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="OnMediaTimeDiscontinuity">
      <MemberSignature Language="C#" Value="public void OnMediaTimeDiscontinuity (Android.Media.MediaPlayer mp, Android.Media.MediaTimestamp mts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnMediaTimeDiscontinuity(class Android.Media.MediaPlayer mp, class Android.Media.MediaTimestamp mts) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.MediaPlayer.IOnMediaTimeDiscontinuityListener.OnMediaTimeDiscontinuity(Android.Media.MediaPlayer,Android.Media.MediaTimestamp)" />
      <MemberSignature Language="F#" Value="abstract member OnMediaTimeDiscontinuity : Android.Media.MediaPlayer * Android.Media.MediaTimestamp -&gt; unit" Usage="iOnMediaTimeDiscontinuityListener.OnMediaTimeDiscontinuity (mp, mts)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onMediaTimeDiscontinuity", "(Landroid/media/MediaPlayer;Landroid/media/MediaTimestamp;)V", "GetOnMediaTimeDiscontinuity_Landroid_media_MediaPlayer_Landroid_media_MediaTimestamp_Handler:Android.Media.MediaPlayer/IOnMediaTimeDiscontinuityListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onMediaTimeDiscontinuity", "(Landroid/media/MediaPlayer;Landroid/media/MediaTimestamp;)V", "GetOnMediaTimeDiscontinuity_Landroid_media_MediaPlayer_Landroid_media_MediaTimestamp_Handler:Android.Media.MediaPlayer/IOnMediaTimeDiscontinuityListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mp" Type="Android.Media.MediaPlayer" />
        <Parameter Name="mts" Type="Android.Media.MediaTimestamp" />
      </Parameters>
      <Docs>
        <param name="mp">the MediaPlayer for which the discontinuity has occured.</param>
        <param name="mts">the timestamp that correlates media time, system time and clock rate,
                or <c>MediaTimestamp#TIMESTAMP_UNKNOWN</c> in an error case.</param>
        <summary>Called to indicate a time discontinuity has occured.</summary>
        <remarks>
          <para>Called to indicate a time discontinuity has occured.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/MediaPlayer.OnMediaTimeDiscontinuityListener#onMediaTimeDiscontinuity(android.media.MediaPlayer,%20android.media.MediaTimestamp)" title="Reference documentation">Java documentation for <code>android.media.MediaPlayer.OnMediaTimeDiscontinuityListener.onMediaTimeDiscontinuity(android.media.MediaPlayer, android.media.MediaTimestamp)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
