<Type Name="DevicePolicyManager" FullName="Android.App.Admin.DevicePolicyManager">
  <TypeSignature Language="VB.NET" Value="Public Class DevicePolicyManager&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class DevicePolicyManager : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class DevicePolicyManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DevicePolicyManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.App.Admin.DevicePolicyManager" />
  <TypeSignature Language="F#" Value="type DevicePolicyManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/admin/DevicePolicyManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/admin/DevicePolicyManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>Public interface for managing policies enforced on a device.</summary>
    <remarks>
      <para>Public interface for managing policies enforced on a device. Most clients of this class must be
            registered with the system as a <see href="https://developer.android.com/guide/topics/admin/device-admin.html">device
            administrator</see>. Additionally, a device administrator may be registered as either a profile or
            device owner. A given method is accessible to all device administrators unless the documentation
            for that method specifies that it is restricted to either device or profile owners. Any
            application calling an api may only pass as an argument a device administrator component it
            owns. Otherwise, a <c>SecurityException</c> will be thrown.</para>
      <para>&lt;b&gt;Note: &lt;/b&gt;on
            <c>android.content.pm.PackageManager#FEATURE_AUTOMOTIVE automotive builds</c>, some methods can
            throw an <c>UnsafeStateException</c> exception (for example, if the vehicle is moving), so
            callers running on automotive builds should always check for that exception, otherwise they
            might crash.
            
            &lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guides&lt;/h3&gt;</para>
      <para>For more information about managing policies for device administration, read the <see href="https://developer.android.com/guide/topics/admin/device-admin.html">Device Administration</see> developer
            guide. &lt;/div&gt;</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DevicePolicyManager(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected DevicePolicyManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.Admin.DevicePolicyManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.Admin.DevicePolicyManager" Usage="new Android.App.Admin.DevicePolicyManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcknowledgeDeviceCompliant">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcknowledgeDeviceCompliant ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcknowledgeDeviceCompliant();" />
      <MemberSignature Language="C#" Value="public virtual void AcknowledgeDeviceCompliant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcknowledgeDeviceCompliant() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.AcknowledgeDeviceCompliant" />
      <MemberSignature Language="F#" Value="abstract member AcknowledgeDeviceCompliant : unit -&gt; unit&#xA;override this.AcknowledgeDeviceCompliant : unit -&gt; unit" Usage="devicePolicyManager.AcknowledgeDeviceCompliant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acknowledgeDeviceCompliant", "()V", "GetAcknowledgeDeviceCompliantHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acknowledgeDeviceCompliant", "()V", "GetAcknowledgeDeviceCompliantHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by a profile owner of an organization-owned managed profile to acknowledge that the
            device is compliant and the user can turn the profile off if needed according to the maximum
            time off policy.</summary>
        <remarks>
          <para>Called by a profile owner of an organization-owned managed profile to acknowledge that the
            device is compliant and the user can turn the profile off if needed according to the maximum
            time off policy.
            
            This method should be called when the device is deemed compliant after getting
            <c>DeviceAdminReceiver#onComplianceAcknowledgementRequired(Context, Intent)</c> callback in
            case it is overridden. Before this method is called the user is still free to turn the
            profile off, but the timer won't be reset, so personal apps will be suspended sooner.
            
            DPCs only need acknowledging device compliance if they override
            <c>DeviceAdminReceiver#onComplianceAcknowledgementRequired(Context, Intent)</c>, otherwise
            compliance is acknowledged automatically.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#acknowledgeDeviceCompliant()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.acknowledgeDeviceCompliant()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionAddDeviceAdmin">
      <MemberSignature Language="VB.NET" Value="Public Const ActionAddDeviceAdmin As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionAddDeviceAdmin;" />
      <MemberSignature Language="C#" Value="public const string ActionAddDeviceAdmin;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionAddDeviceAdmin" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionAddDeviceAdmin" />
      <MemberSignature Language="F#" Value="val mutable ActionAddDeviceAdmin : string" Usage="Android.App.Admin.DevicePolicyManager.ActionAddDeviceAdmin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_ADD_DEVICE_ADMIN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_ADD_DEVICE_ADMIN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: ask the user to add a new device administrator to the system.</summary>
        <remarks>
          <para>Activity action: ask the user to add a new device administrator to the system.
            The desired policy is the ComponentName of the policy in the
            <c>#EXTRA_DEVICE_ADMIN</c> extra field.  This will invoke a UI to
            bring the user through adding the device administrator to the system (or
            allowing them to reject it).</para>
          <para>You can optionally include the <c>#EXTRA_ADD_EXPLANATION</c>
            field to provide the user with additional explanation (in addition
            to your component's description) about what is being added.</para>
          <para>If your administrator is already active, this will ordinarily return immediately (without
            user intervention).  However, if your administrator has been updated and is requesting
            additional uses-policy flags, the user will be presented with the new list.  New policies
            will not be available to the updated administrator until the user has accepted the new list.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_ADD_DEVICE_ADMIN" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_ADD_DEVICE_ADMIN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionAdminPolicyCompliance">
      <MemberSignature Language="VB.NET" Value="Public Const ActionAdminPolicyCompliance As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionAdminPolicyCompliance;" />
      <MemberSignature Language="C#" Value="public const string ActionAdminPolicyCompliance;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionAdminPolicyCompliance" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionAdminPolicyCompliance" />
      <MemberSignature Language="F#" Value="val mutable ActionAdminPolicyCompliance : string" Usage="Android.App.Admin.DevicePolicyManager.ActionAdminPolicyCompliance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_ADMIN_POLICY_COMPLIANCE", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_ADMIN_POLICY_COMPLIANCE", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: Starts the administrator to show policy compliance for the provisioning.</summary>
        <remarks>
          <para>Activity action: Starts the administrator to show policy compliance for the provisioning.
            This action is used any time that the administrator has an opportunity to show policy
            compliance before the end of setup wizard. This could happen as part of the admin-integrated
            provisioning flow (in which case this gets sent after <c>#ACTION_GET_PROVISIONING_MODE</c>),
            or it could happen during provisioning finalization if the administrator supports
            finalization during setup wizard.</para>
          <para>Intents with this action may also be supplied with the <c>#EXTRA_PROVISIONING_ADMIN_EXTRAS_BUNDLE</c> extra.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_ADMIN_POLICY_COMPLIANCE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_ADMIN_POLICY_COMPLIANCE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionApplicationDelegationScopesChanged">
      <MemberSignature Language="VB.NET" Value="Public Const ActionApplicationDelegationScopesChanged As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionApplicationDelegationScopesChanged;" />
      <MemberSignature Language="C#" Value="public const string ActionApplicationDelegationScopesChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionApplicationDelegationScopesChanged" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionApplicationDelegationScopesChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionApplicationDelegationScopesChanged : string" Usage="Android.App.Admin.DevicePolicyManager.ActionApplicationDelegationScopesChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_APPLICATION_DELEGATION_SCOPES_CHANGED", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_APPLICATION_DELEGATION_SCOPES_CHANGED", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: Sent after application delegation scopes are changed.</summary>
        <remarks>
          <para>Broadcast Action: Sent after application delegation scopes are changed. The new delegation
            scopes will be sent in an <c>ArrayList&lt;String&gt;</c> extra identified by the
            <c>#EXTRA_DELEGATION_SCOPES</c> key.
            
            &lt;p class="note"&gt;&lt;b&gt;Note:&lt;/b&gt; This is a protected intent that can only be sent by the
            system.&lt;/p&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_APPLICATION_DELEGATION_SCOPES_CHANGED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_APPLICATION_DELEGATION_SCOPES_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionCheckPolicyCompliance">
      <MemberSignature Language="VB.NET" Value="Public Const ActionCheckPolicyCompliance As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionCheckPolicyCompliance;" />
      <MemberSignature Language="C#" Value="public const string ActionCheckPolicyCompliance;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionCheckPolicyCompliance" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionCheckPolicyCompliance" />
      <MemberSignature Language="F#" Value="val mutable ActionCheckPolicyCompliance : string" Usage="Android.App.Admin.DevicePolicyManager.ActionCheckPolicyCompliance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_CHECK_POLICY_COMPLIANCE", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_CHECK_POLICY_COMPLIANCE", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: launch the DPC to check policy compliance.</summary>
        <remarks>
          <para>Activity action: launch the DPC to check policy compliance. This intent is launched when
            the user taps on the notification about personal apps suspension. When handling this intent
            the DPC must check if personal apps should still be suspended and either unsuspend them or
            instruct the user on how to resolve the noncompliance causing the suspension.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_CHECK_POLICY_COMPLIANCE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_CHECK_POLICY_COMPLIANCE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionDeviceAdminService">
      <MemberSignature Language="VB.NET" Value="Public Const ActionDeviceAdminService As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionDeviceAdminService;" />
      <MemberSignature Language="C#" Value="public const string ActionDeviceAdminService;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionDeviceAdminService" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionDeviceAdminService" />
      <MemberSignature Language="F#" Value="val mutable ActionDeviceAdminService : string" Usage="Android.App.Admin.DevicePolicyManager.ActionDeviceAdminService" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_DEVICE_ADMIN_SERVICE", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_DEVICE_ADMIN_SERVICE", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Service action: Action for a service that device owner and profile owner can optionally
            own.</summary>
        <remarks>
          <para>Service action: Action for a service that device owner and profile owner can optionally
            own.  If a device owner or a profile owner has such a service, the system tries to keep
            a bound connection to it, in order to keep their process always running.
            The service must be protected with the <c>android.Manifest.permission#BIND_DEVICE_ADMIN</c>
            permission.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_DEVICE_ADMIN_SERVICE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_DEVICE_ADMIN_SERVICE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionDeviceFinancingStateChanged">
      <MemberSignature Language="VB.NET" Value="Public Const ActionDeviceFinancingStateChanged As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionDeviceFinancingStateChanged;" />
      <MemberSignature Language="C#" Value="public const string ActionDeviceFinancingStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionDeviceFinancingStateChanged" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionDeviceFinancingStateChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionDeviceFinancingStateChanged : string" Usage="Android.App.Admin.DevicePolicyManager.ActionDeviceFinancingStateChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_DEVICE_FINANCING_STATE_CHANGED", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_DEVICE_FINANCING_STATE_CHANGED", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: Broadcast sent to indicate that the device financing state has changed.</summary>
        <remarks>
          <para>Broadcast Action: Broadcast sent to indicate that the device financing state has changed.</para>
          <para>This occurs when, for example, a financing kiosk app has been added or removed.</para>
          <para>To query the current device financing state see <c>#isDeviceFinanced</c>.</para>
          <para>This will be delivered to the following apps if they include a receiver for this action
            in their manifest:
            &lt;ul&gt;
                &lt;li&gt;Device owner admins.
                &lt;li&gt;Organization-owned profile owner admins
                &lt;li&gt;The supervision app
                &lt;li&gt;The device management role holder
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_DEVICE_FINANCING_STATE_CHANGED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_DEVICE_FINANCING_STATE_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionDeviceOwnerChanged">
      <MemberSignature Language="VB.NET" Value="Public Const ActionDeviceOwnerChanged As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionDeviceOwnerChanged;" />
      <MemberSignature Language="C#" Value="public const string ActionDeviceOwnerChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionDeviceOwnerChanged" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionDeviceOwnerChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionDeviceOwnerChanged : string" Usage="Android.App.Admin.DevicePolicyManager.ActionDeviceOwnerChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_DEVICE_OWNER_CHANGED", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_DEVICE_OWNER_CHANGED", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast action: sent when the device owner is set, changed or cleared.</summary>
        <remarks>
          <para>Broadcast action: sent when the device owner is set, changed or cleared.</para>
          <para>This broadcast is sent only to the primary user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_DEVICE_OWNER_CHANGED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_DEVICE_OWNER_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionDevicePolicyResourceUpdated">
      <MemberSignature Language="VB.NET" Value="Public Const ActionDevicePolicyResourceUpdated As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionDevicePolicyResourceUpdated;" />
      <MemberSignature Language="C#" Value="public const string ActionDevicePolicyResourceUpdated;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionDevicePolicyResourceUpdated" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionDevicePolicyResourceUpdated" />
      <MemberSignature Language="F#" Value="val mutable ActionDevicePolicyResourceUpdated : string" Usage="Android.App.Admin.DevicePolicyManager.ActionDevicePolicyResourceUpdated" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_DEVICE_POLICY_RESOURCE_UPDATED", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_DEVICE_POLICY_RESOURCE_UPDATED", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast action: notify system apps (e.</summary>
        <remarks>
          <para>Broadcast action: notify system apps (e.g. settings, SysUI, etc) that the device management
            resources with IDs <c>#EXTRA_RESOURCE_IDS</c> has been updated, the updated resources can be
            retrieved using <c>DevicePolicyResourcesManager#getDrawable</c> and
            <c>DevicePolicyResourcesManager#getString</c>.</para>
          <para>This broadcast is sent to registered receivers only.</para>
          <para>
            <c>#EXTRA_RESOURCE_TYPE</c> will be included to identify the type of resource being
            updated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_DEVICE_POLICY_RESOURCE_UPDATED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_DEVICE_POLICY_RESOURCE_UPDATED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionGetProvisioningMode">
      <MemberSignature Language="VB.NET" Value="Public Const ActionGetProvisioningMode As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionGetProvisioningMode;" />
      <MemberSignature Language="C#" Value="public const string ActionGetProvisioningMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionGetProvisioningMode" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionGetProvisioningMode" />
      <MemberSignature Language="F#" Value="val mutable ActionGetProvisioningMode : string" Usage="Android.App.Admin.DevicePolicyManager.ActionGetProvisioningMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_GET_PROVISIONING_MODE", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_GET_PROVISIONING_MODE", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: Starts the administrator to get the mode for the provisioning.</summary>
        <remarks>
          <para>Activity action: Starts the administrator to get the mode for the provisioning.
            This intent may contain the following extras:
            &lt;ul&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_ADMIN_EXTRAS_BUNDLE</c>&lt;/li&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_IMEI</c>&lt;/li&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_SERIAL_NUMBER</c>&lt;/li&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_ALLOWED_PROVISIONING_MODES</c>&lt;/li&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_SENSORS_PERMISSION_GRANT_OPT_OUT</c>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>The target activity should return one of the following values in
            <c>#EXTRA_PROVISIONING_MODE</c> as result:
            &lt;ul&gt;
                &lt;li&gt;<c>#PROVISIONING_MODE_FULLY_MANAGED_DEVICE</c>&lt;/li&gt;
                &lt;li&gt;<c>#PROVISIONING_MODE_MANAGED_PROFILE</c>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>If performing fully-managed device provisioning and the admin app desires to show its
            own education screens, the target activity can additionally return
            <c>#EXTRA_PROVISIONING_SKIP_EDUCATION_SCREENS</c> set to <c>true</c>.</para>
          <para>The target activity may also return the account that needs to be migrated from primary
            user to managed profile in case of a profile owner provisioning in
            <c>#EXTRA_PROVISIONING_ACCOUNT_TO_MIGRATE</c> as result.</para>
          <para>The target activity may also include the <c>#EXTRA_PROVISIONING_ADMIN_EXTRAS_BUNDLE</c>
            extra in the intent result. The values of this <c>android.os.PersistableBundle</c> will be
            sent as an intent extra of the same name to the <c>#ACTION_ADMIN_POLICY_COMPLIANCE</c>
            activity, along with the values of the <c>#EXTRA_PROVISIONING_ADMIN_EXTRAS_BUNDLE</c> extra
            that are already supplied to this activity.</para>
          <para>Other extras the target activity may include in the intent result:
            &lt;ul&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_DISCLAIMERS</c>&lt;/li&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_SKIP_ENCRYPTION</c>&lt;/li&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_KEEP_SCREEN_ON</c>&lt;/li&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_KEEP_ACCOUNT_ON_MIGRATION</c> for work profile
                provisioning&lt;/li&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_LEAVE_ALL_SYSTEM_APPS_ENABLED</c> for work profile
                provisioning&lt;/li&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_SENSORS_PERMISSION_GRANT_OPT_OUT</c> for fully-managed
                device provisioning&lt;/li&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_LOCALE</c> for fully-managed device provisioning&lt;/li&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_LOCAL_TIME</c> for fully-managed device provisioning&lt;/li&gt;
                &lt;li&gt;<c>#EXTRA_PROVISIONING_TIME_ZONE</c> for fully-managed device provisioning&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_GET_PROVISIONING_MODE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_GET_PROVISIONING_MODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionManagedProfileProvisioned">
      <MemberSignature Language="VB.NET" Value="Public Const ActionManagedProfileProvisioned As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionManagedProfileProvisioned;" />
      <MemberSignature Language="C#" Value="public const string ActionManagedProfileProvisioned;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionManagedProfileProvisioned" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionManagedProfileProvisioned" />
      <MemberSignature Language="F#" Value="val mutable ActionManagedProfileProvisioned : string" Usage="Android.App.Admin.DevicePolicyManager.ActionManagedProfileProvisioned" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_MANAGED_PROFILE_PROVISIONED", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_MANAGED_PROFILE_PROVISIONED", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: This broadcast is sent to indicate that provisioning of a managed profile
            has completed successfully.</summary>
        <remarks>
          <para>Broadcast Action: This broadcast is sent to indicate that provisioning of a managed profile
            has completed successfully.</para>
          <para>The broadcast is limited to the primary profile, to the app specified in the provisioning
            intent with action <c>#ACTION_PROVISION_MANAGED_PROFILE</c>.</para>
          <para>This intent will contain the following extras
            &lt;ul&gt;
            &lt;li&gt;<c>Intent#EXTRA_USER</c>, corresponds to the <c>UserHandle</c> of the managed
            profile.&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_ACCOUNT_TO_MIGRATE</c>, corresponds to the account requested to
            be migrated at provisioning time, if any.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_MANAGED_PROFILE_PROVISIONED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_MANAGED_PROFILE_PROVISIONED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionProfileOwnerChanged">
      <MemberSignature Language="VB.NET" Value="Public Const ActionProfileOwnerChanged As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionProfileOwnerChanged;" />
      <MemberSignature Language="C#" Value="public const string ActionProfileOwnerChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionProfileOwnerChanged" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionProfileOwnerChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionProfileOwnerChanged : string" Usage="Android.App.Admin.DevicePolicyManager.ActionProfileOwnerChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_PROFILE_OWNER_CHANGED", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_PROFILE_OWNER_CHANGED", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast action: sent when the profile owner is set, changed or cleared.</summary>
        <remarks>
          <para>Broadcast action: sent when the profile owner is set, changed or cleared.</para>
          <para>This broadcast is sent only to the user managed by the new profile owner.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_PROFILE_OWNER_CHANGED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_PROFILE_OWNER_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionProvisioningSuccessful">
      <MemberSignature Language="VB.NET" Value="Public Const ActionProvisioningSuccessful As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionProvisioningSuccessful;" />
      <MemberSignature Language="C#" Value="public const string ActionProvisioningSuccessful;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionProvisioningSuccessful" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionProvisioningSuccessful" />
      <MemberSignature Language="F#" Value="val mutable ActionProvisioningSuccessful : string" Usage="Android.App.Admin.DevicePolicyManager.ActionProvisioningSuccessful" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_PROVISIONING_SUCCESSFUL", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_PROVISIONING_SUCCESSFUL", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: This activity action is sent to indicate that provisioning of a managed
            profile or managed device has completed successfully.</summary>
        <remarks>
          <para>Activity action: This activity action is sent to indicate that provisioning of a managed
            profile or managed device has completed successfully. It'll be sent at the same time as
            <c>DeviceAdminReceiver#ACTION_PROFILE_PROVISIONING_COMPLETE</c> broadcast but this will be
            delivered faster as it's an activity intent.</para>
          <para>The intent is only sent to the new device or profile owner.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_PROVISIONING_SUCCESSFUL" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_PROVISIONING_SUCCESSFUL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionProvisionManagedDevice">
      <MemberSignature Language="VB.NET" Value="Public Const ActionProvisionManagedDevice As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionProvisionManagedDevice;" />
      <MemberSignature Language="C#" Value="public const string ActionProvisionManagedDevice;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionProvisionManagedDevice" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionProvisionManagedDevice" />
      <MemberSignature Language="F#" Value="val mutable ActionProvisionManagedDevice : string" Usage="Android.App.Admin.DevicePolicyManager.ActionProvisionManagedDevice" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_PROVISION_MANAGED_DEVICE", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_PROVISION_MANAGED_DEVICE", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: Starts the provisioning flow which sets up a managed device.</summary>
        <remarks>
          <para>Activity action: Starts the provisioning flow which sets up a managed device.
            Must be started with <c>android.app.Activity#startActivityForResult(Intent, int)</c>.</para>
          <para>During device owner provisioning a device admin app is set as the owner of the device.
            A device owner has full control over the device. The device owner can not be modified by the
            user.</para>
          <para>A typical use case would be a device that is owned by a company, but used by either an
            employee or client.</para>
          <para>An intent with this action can be sent only on an unprovisioned device.
            It is possible to check if provisioning is allowed or not by querying the method
            <c>#isProvisioningAllowed(String)</c>.</para>
          <para>The intent contains the following extras:
            &lt;ul&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_DEVICE_ADMIN_COMPONENT_NAME</c>&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_SKIP_ENCRYPTION</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_LEAVE_ALL_SYSTEM_APPS_ENABLED</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_ADMIN_EXTRAS_BUNDLE</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_LOGO_URI</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_DISCLAIMERS</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_SKIP_EDUCATION_SCREENS</c>, optional&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>When device owner provisioning has completed, an intent of the type
            <c>DeviceAdminReceiver#ACTION_PROFILE_PROVISIONING_COMPLETE</c> is broadcast to the
            device owner.</para>
          <para>From version <c>android.os.Build.VERSION_CODES#O</c>, when device owner provisioning has
            completed, along with the above broadcast, activity intent
            <c>#ACTION_PROVISIONING_SUCCESSFUL</c> will also be sent to the device owner.</para>
          <para>If provisioning fails, the device is factory reset.</para>
          <para>A result code of <c>android.app.Activity#RESULT_OK</c> implies that the synchronous part
            of the provisioning flow was successful, although this doesn't guarantee the full flow will
            succeed. Conversely a result code of <c>android.app.Activity#RESULT_CANCELED</c> implies
            that the user backed-out of provisioning, or some precondition for provisioning wasn't met.</para>
          <para>This member is deprecated. to support <c>android.os.Build.VERSION_CODES#S</c> and later, admin apps must
            implement activities with intent filters for the <c>#ACTION_GET_PROVISIONING_MODE</c> and
            <c>#ACTION_ADMIN_POLICY_COMPLIANCE</c> intent actions; using <c>#ACTION_PROVISION_MANAGED_DEVICE</c> to start provisioning will cause the provisioning to fail;
            to additionally support pre-<c>android.os.Build.VERSION_CODES#S</c>, admin apps must also
            continue to use this constant.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_PROVISION_MANAGED_DEVICE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_PROVISION_MANAGED_DEVICE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionProvisionManagedProfile">
      <MemberSignature Language="VB.NET" Value="Public Const ActionProvisionManagedProfile As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionProvisionManagedProfile;" />
      <MemberSignature Language="C#" Value="public const string ActionProvisionManagedProfile;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionProvisionManagedProfile" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionProvisionManagedProfile" />
      <MemberSignature Language="F#" Value="val mutable ActionProvisionManagedProfile : string" Usage="Android.App.Admin.DevicePolicyManager.ActionProvisionManagedProfile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_PROVISION_MANAGED_PROFILE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_PROVISION_MANAGED_PROFILE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: Starts the provisioning flow which sets up a managed profile.</summary>
        <remarks>
          <para>Activity action: Starts the provisioning flow which sets up a managed profile.</para>
          <para>A managed profile allows data separation for example for the usage of a
            device as a personal and corporate device. The user which provisioning is started from and
            the managed profile share a launcher.</para>
          <para>This intent will typically be sent by a mobile device management application (MDM).
            Provisioning adds a managed profile and sets the MDM as the profile owner who has full
            control over the profile.</para>
          <para>It is possible to check if provisioning is allowed or not by querying the method
            <c>#isProvisioningAllowed(String)</c>.</para>
          <para>In version <c>android.os.Build.VERSION_CODES#LOLLIPOP</c>, this intent must contain the
            extra <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME</c>.
            As of <c>android.os.Build.VERSION_CODES#M</c>, it should contain the extra
            <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_COMPONENT_NAME</c> instead, although specifying only
            <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME</c> is still supported.</para>
          <para>The intent may also contain the following extras:
            &lt;ul&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_ACCOUNT_TO_MIGRATE</c>, optional &lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_SKIP_ENCRYPTION</c>, optional, supported from
            <c>android.os.Build.VERSION_CODES#N</c>&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_ADMIN_EXTRAS_BUNDLE</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_LOGO_URI</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_SKIP_USER_CONSENT</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_KEEP_ACCOUNT_ON_MIGRATION</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_DISCLAIMERS</c>, optional&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>When managed provisioning has completed, broadcasts are sent to the application specified
            in the provisioning intent. The
            <c>DeviceAdminReceiver#ACTION_PROFILE_PROVISIONING_COMPLETE</c> broadcast is sent in the
            managed profile and the <c>#ACTION_MANAGED_PROFILE_PROVISIONED</c> broadcast is sent in
            the primary profile.</para>
          <para>From version <c>android.os.Build.VERSION_CODES#O</c>, when managed provisioning has
            completed, along with the above broadcast, activity intent
            <c>#ACTION_PROVISIONING_SUCCESSFUL</c> will also be sent to the profile owner.</para>
          <para>If provisioning fails, the managedProfile is removed so the device returns to its
            previous state.</para>
          <para>If launched with <c>android.app.Activity#startActivityForResult(Intent, int)</c> a
            result code of <c>android.app.Activity#RESULT_OK</c> implies that the synchronous part of
            the provisioning flow was successful, although this doesn't guarantee the full flow will
            succeed. Conversely a result code of <c>android.app.Activity#RESULT_CANCELED</c> implies
            that the user backed-out of provisioning, or some precondition for provisioning wasn't met.</para>
          <para>If a device policy management role holder (DPMRH) updater is present on the device, an
            internet connection attempt must be made prior to launching this intent. If internet
            connection could not be established, provisioning will fail unless <c>#EXTRA_PROVISIONING_ALLOW_OFFLINE</c> is explicitly set to <c>true</c>, in which case
            provisioning will continue without using the DPMRH. If an internet connection has been
            established, the DPMRH updater will be launched, which will update the DPMRH if it's not
            present on the device, or if it's present and not valid.</para>
          <para>If a DPMRH is present on the device and valid, the provisioning flow will be deferred to
            it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_PROVISION_MANAGED_PROFILE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionSetNewParentProfilePassword">
      <MemberSignature Language="VB.NET" Value="Public Const ActionSetNewParentProfilePassword As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionSetNewParentProfilePassword;" />
      <MemberSignature Language="C#" Value="public const string ActionSetNewParentProfilePassword;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionSetNewParentProfilePassword" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionSetNewParentProfilePassword" />
      <MemberSignature Language="F#" Value="val mutable ActionSetNewParentProfilePassword : string" Usage="Android.App.Admin.DevicePolicyManager.ActionSetNewParentProfilePassword" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_SET_NEW_PARENT_PROFILE_PASSWORD", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_SET_NEW_PARENT_PROFILE_PASSWORD", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: have the user enter a new password for the parent profile.</summary>
        <remarks>
          <para>Activity action: have the user enter a new password for the parent profile.
            If the intent is launched from within a managed profile, this will trigger
            entering a new password for the parent of the profile. The caller can optionally
            set <c>#EXTRA_DEVICE_PASSWORD_REQUIREMENT_ONLY</c> to only enforce device-wide
            password requirement. In all other cases the behaviour is identical to
            <c>#ACTION_SET_NEW_PASSWORD</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_SET_NEW_PARENT_PROFILE_PASSWORD" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_SET_NEW_PARENT_PROFILE_PASSWORD</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionSetNewPassword">
      <MemberSignature Language="VB.NET" Value="Public Const ActionSetNewPassword As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionSetNewPassword;" />
      <MemberSignature Language="C#" Value="public const string ActionSetNewPassword;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionSetNewPassword" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionSetNewPassword" />
      <MemberSignature Language="F#" Value="val mutable ActionSetNewPassword : string" Usage="Android.App.Admin.DevicePolicyManager.ActionSetNewPassword" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_SET_NEW_PASSWORD")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_SET_NEW_PASSWORD")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: have the user enter a new password.</summary>
        <remarks>
          <para>Activity action: have the user enter a new password.</para>
          <para>For admin apps, this activity should be launched after using <c>#setPasswordQuality(ComponentName, int)</c>, or <c>#setPasswordMinimumLength(ComponentName, int)</c> to have the user enter a new password that
            meets the current requirements. You can use <c>#isActivePasswordSufficient()</c> to
            determine whether you need to have the user select a new password in order to meet the
            current constraints. Upon being resumed from this activity, you can check the new
            password characteristics to see if they are sufficient.</para>
          <para>Non-admin apps can use <c>#getPasswordComplexity()</c> to check the current screen lock
            complexity, and use this activity with extra <c>#EXTRA_PASSWORD_COMPLEXITY</c> to suggest
            to users how complex the app wants the new screen lock to be. Note that both <c>#getPasswordComplexity()</c> and the extra <c>#EXTRA_PASSWORD_COMPLEXITY</c> require the
            calling app to have the permission <c>permission#REQUEST_PASSWORD_COMPLEXITY</c>.</para>
          <para>If the intent is launched from within a managed profile with a profile
            owner built against <c>android.os.Build.VERSION_CODES#M</c> or before,
            this will trigger entering a new password for the parent of the profile.
            For all other cases it will trigger entering a new password for the user
            or profile it is launched from.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_SET_NEW_PASSWORD" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_SET_NEW_PASSWORD</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionStartEncryption">
      <MemberSignature Language="VB.NET" Value="Public Const ActionStartEncryption As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionStartEncryption;" />
      <MemberSignature Language="C#" Value="public const string ActionStartEncryption;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionStartEncryption" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionStartEncryption" />
      <MemberSignature Language="F#" Value="val mutable ActionStartEncryption : string" Usage="Android.App.Admin.DevicePolicyManager.ActionStartEncryption" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_START_ENCRYPTION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_START_ENCRYPTION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Activity action: begin the process of encrypting data on the device.</summary>
        <remarks>
          <para>Activity action: begin the process of encrypting data on the device.  This activity should
            be launched after using <c>#setStorageEncryption</c> to request encryption be activated.
            After resuming from this activity, use <c>#getStorageEncryption</c>
            to check encryption status.  However, on some devices this activity may never return, as
            it may trigger a reboot and in some cases a complete data wipe of the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_START_ENCRYPTION" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_START_ENCRYPTION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ActionSystemUpdatePolicyChanged">
      <MemberSignature Language="VB.NET" Value="Public Const ActionSystemUpdatePolicyChanged As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionSystemUpdatePolicyChanged;" />
      <MemberSignature Language="C#" Value="public const string ActionSystemUpdatePolicyChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionSystemUpdatePolicyChanged" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ActionSystemUpdatePolicyChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionSystemUpdatePolicyChanged : string" Usage="Android.App.Admin.DevicePolicyManager.ActionSystemUpdatePolicyChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_SYSTEM_UPDATE_POLICY_CHANGED", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_SYSTEM_UPDATE_POLICY_CHANGED", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast action: notify that a new local system update policy has been set by the device
            owner.</summary>
        <remarks>
          <para>Broadcast action: notify that a new local system update policy has been set by the device
            owner. The new policy can be retrieved by <c>#getSystemUpdatePolicy()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ACTION_SYSTEM_UPDATE_POLICY_CHANGED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ACTION_SYSTEM_UPDATE_POLICY_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveAdmins">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActiveAdmins As IList(Of ComponentName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;Android::Content::ComponentName ^&gt; ^ ActiveAdmins { System::Collections::Generic::IList&lt;Android::Content::ComponentName ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.ComponentName&gt;? ActiveAdmins { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.Content.ComponentName&gt; ActiveAdmins" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.ActiveAdmins" />
      <MemberSignature Language="F#" Value="member this.ActiveAdmins : System.Collections.Generic.IList&lt;Android.Content.ComponentName&gt;" Usage="Android.App.Admin.DevicePolicyManager.ActiveAdmins" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getActiveAdmins", "()Ljava/util/List;", "GetGetActiveAdminsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getActiveAdmins", "()Ljava/util/List;", "GetGetActiveAdminsHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.ComponentName&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a list of all currently active device administrators' component
            names.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return a list of all currently active device administrators' component
            names.  If there are no administrators <c>null</c> may be
            returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getActiveAdmins()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getActiveAdmins()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AddCrossProfileIntentFilter">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddCrossProfileIntentFilter (admin As ComponentName, filter As IntentFilter, flags As DevicePolicyManagerFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddCrossProfileIntentFilter(Android::Content::ComponentName ^ admin, Android::Content::IntentFilter ^ filter, Android::App::Admin::DevicePolicyManagerFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void AddCrossProfileIntentFilter (Android.Content.ComponentName? admin, Android.Content.IntentFilter? filter, Android.App.Admin.DevicePolicyManagerFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddCrossProfileIntentFilter(class Android.Content.ComponentName admin, class Android.Content.IntentFilter filter, valuetype Android.App.Admin.DevicePolicyManagerFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.AddCrossProfileIntentFilter(Android.Content.ComponentName,Android.Content.IntentFilter,Android.App.Admin.DevicePolicyManagerFlags)" />
      <MemberSignature Language="F#" Value="abstract member AddCrossProfileIntentFilter : Android.Content.ComponentName * Android.Content.IntentFilter * Android.App.Admin.DevicePolicyManagerFlags -&gt; unit&#xA;override this.AddCrossProfileIntentFilter : Android.Content.ComponentName * Android.Content.IntentFilter * Android.App.Admin.DevicePolicyManagerFlags -&gt; unit" Usage="devicePolicyManager.AddCrossProfileIntentFilter (admin, filter, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addCrossProfileIntentFilter", "(Landroid/content/ComponentName;Landroid/content/IntentFilter;I)V", "GetAddCrossProfileIntentFilter_Landroid_content_ComponentName_Landroid_content_IntentFilter_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addCrossProfileIntentFilter", "(Landroid/content/ComponentName;Landroid/content/IntentFilter;I)V", "GetAddCrossProfileIntentFilter_Landroid_content_ComponentName_Landroid_content_IntentFilter_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PROFILE_INTERACTION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PROFILE_INTERACTION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
        <Parameter Name="flags" Type="Android.App.Admin.DevicePolicyManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="filter">The <c>IntentFilter</c> the intent has to match to be also resolved in the
                       other profile</param>
        <param name="flags">
          <c>DevicePolicyManager#FLAG_MANAGED_CAN_ACCESS_PARENT</c> and
                       <c>DevicePolicyManager#FLAG_PARENT_CAN_ACCESS_MANAGED</c> are supported.</param>
        <summary>Called by the profile owner of a managed profile so that some intents sent in the managed
            profile can also be resolved in the parent, or vice versa.</summary>
        <remarks>
          <para>Called by the profile owner of a managed profile so that some intents sent in the managed
            profile can also be resolved in the parent, or vice versa. Only activity intents are
            supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#addCrossProfileIntentFilter(android.content.ComponentName,%20android.content.IntentFilter,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.addCrossProfileIntentFilter(android.content.ComponentName, android.content.IntentFilter, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddCrossProfileWidgetProvider">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddCrossProfileWidgetProvider (admin As ComponentName, packageName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool AddCrossProfileWidgetProvider(Android::Content::ComponentName ^ admin, System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual bool AddCrossProfileWidgetProvider (Android.Content.ComponentName? admin, string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool AddCrossProfileWidgetProvider(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.AddCrossProfileWidgetProvider(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member AddCrossProfileWidgetProvider : Android.Content.ComponentName * string -&gt; bool&#xA;override this.AddCrossProfileWidgetProvider : Android.Content.ComponentName * string -&gt; bool" Usage="devicePolicyManager.AddCrossProfileWidgetProvider (admin, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addCrossProfileWidgetProvider", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetAddCrossProfileWidgetProvider_Landroid_content_ComponentName_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addCrossProfileWidgetProvider", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetAddCrossProfileWidgetProvider_Landroid_content_ComponentName_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PROFILE_INTERACTION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PROFILE_INTERACTION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="packageName">The package from which widget providers are allowlisted.</param>
        <summary>Called by the profile owner of a managed profile or a holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_PROFILE_INTERACTION</c> to enable
            widget providers from a given package to be available in the parent profile.</summary>
        <returns>Whether the package was added.</returns>
        <remarks>
          <para>Called by the profile owner of a managed profile or a holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_PROFILE_INTERACTION</c> to enable
            widget providers from a given package to be available in the parent profile. As a result the
            user will be able to add widgets from the allowlisted package running under the profile to a
            widget host which runs under the parent profile, for example the home screen. Note that a
            package may have zero or more provider components, where each component provides a different
            widget type.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; By default no widget provider package is allowlisted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#addCrossProfileWidgetProvider(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.addCrossProfileWidgetProvider(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.RemoveCrossProfileWidgetProvider(Android.Content.ComponentName, System.String)" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.GetCrossProfileWidgetProviders(Android.Content.ComponentName)" />
      </Docs>
    </Member>
    <Member MemberName="AddOverrideApn">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddOverrideApn (admin As ComponentName, apnSetting As ApnSetting) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int AddOverrideApn(Android::Content::ComponentName ^ admin, Android::Telephony::Data::ApnSetting ^ apnSetting);" />
      <MemberSignature Language="C#" Value="public virtual int AddOverrideApn (Android.Content.ComponentName admin, Android.Telephony.Data.ApnSetting apnSetting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 AddOverrideApn(class Android.Content.ComponentName admin, class Android.Telephony.Data.ApnSetting apnSetting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.AddOverrideApn(Android.Content.ComponentName,Android.Telephony.Data.ApnSetting)" />
      <MemberSignature Language="F#" Value="abstract member AddOverrideApn : Android.Content.ComponentName * Android.Telephony.Data.ApnSetting -&gt; int&#xA;override this.AddOverrideApn : Android.Content.ComponentName * Android.Telephony.Data.ApnSetting -&gt; int" Usage="devicePolicyManager.AddOverrideApn (admin, apnSetting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addOverrideApn", "(Landroid/content/ComponentName;Landroid/telephony/data/ApnSetting;)I", "GetAddOverrideApn_Landroid_content_ComponentName_Landroid_telephony_data_ApnSetting_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addOverrideApn", "(Landroid/content/ComponentName;Landroid/telephony/data/ApnSetting;)I", "GetAddOverrideApn_Landroid_content_ComponentName_Landroid_telephony_data_ApnSetting_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="apnSetting" Type="Android.Telephony.Data.ApnSetting" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with</param>
        <param name="apnSetting">the override APN to insert</param>
        <summary>Called by device owner or managed profile owner to add an override APN.</summary>
        <returns>The <c>id</c> of inserted override APN. Or <c>-1</c> when failed to insert into
                    the database.</returns>
        <remarks>
          <para>Called by device owner or managed profile owner to add an override APN.</para>
          <para>This method may returns <c>-1</c> if <c>apnSetting</c> conflicts with an existing
            override APN. Update the existing conflicted APN with
            <c>#updateOverrideApn(ComponentName, int, ApnSetting)</c> instead of adding a new entry.</para>
          <para>Two override APNs are considered to conflict when all the following APIs return
            the same values on both override APNs:
            &lt;ul&gt;
              &lt;li&gt;<c>ApnSetting#getOperatorNumeric()</c>&lt;/li&gt;
              &lt;li&gt;<c>ApnSetting#getApnName()</c>&lt;/li&gt;
              &lt;li&gt;<c>ApnSetting#getProxyAddressAsString()</c>&lt;/li&gt;
              &lt;li&gt;<c>ApnSetting#getProxyPort()</c>&lt;/li&gt;
              &lt;li&gt;<c>ApnSetting#getMmsProxyAddressAsString()</c>&lt;/li&gt;
              &lt;li&gt;<c>ApnSetting#getMmsProxyPort()</c>&lt;/li&gt;
              &lt;li&gt;<c>ApnSetting#getMmsc()</c>&lt;/li&gt;
              &lt;li&gt;<c>ApnSetting#isEnabled()</c>&lt;/li&gt;
              &lt;li&gt;<c>ApnSetting#getMvnoType()</c>&lt;/li&gt;
              &lt;li&gt;<c>ApnSetting#getProtocol()</c>&lt;/li&gt;
              &lt;li&gt;<c>ApnSetting#getRoamingProtocol()</c>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>Before Android version <c>android.os.Build.VERSION_CODES#TIRAMISU</c>:
            Only device owners can add APNs.</para>
          <para>Starting from Android version <c>android.os.Build.VERSION_CODES#TIRAMISU</c>:
            Both device owners and managed profile owners can add enterprise APNs
            (<c>ApnSetting#TYPE_ENTERPRISE</c>), while only device owners can add other type of APNs.
            Enterprise APNs are specific to the managed profile and do not override any user-configured
            VPNs. They are prerequisites for enabling preferential network service on the managed
            profile on 4G networks (<c>#setPreferentialNetworkServiceConfigs</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#addOverrideApn(android.content.ComponentName,%20android.telephony.data.ApnSetting)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.addOverrideApn(android.content.ComponentName, android.telephony.data.ApnSetting)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPersistentPreferredActivity">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddPersistentPreferredActivity (admin As ComponentName, filter As IntentFilter, activity As ComponentName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddPersistentPreferredActivity(Android::Content::ComponentName ^ admin, Android::Content::IntentFilter ^ filter, Android::Content::ComponentName ^ activity);" />
      <MemberSignature Language="C#" Value="public virtual void AddPersistentPreferredActivity (Android.Content.ComponentName? admin, Android.Content.IntentFilter? filter, Android.Content.ComponentName activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddPersistentPreferredActivity(class Android.Content.ComponentName admin, class Android.Content.IntentFilter filter, class Android.Content.ComponentName activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.AddPersistentPreferredActivity(Android.Content.ComponentName,Android.Content.IntentFilter,Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member AddPersistentPreferredActivity : Android.Content.ComponentName * Android.Content.IntentFilter * Android.Content.ComponentName -&gt; unit&#xA;override this.AddPersistentPreferredActivity : Android.Content.ComponentName * Android.Content.IntentFilter * Android.Content.ComponentName -&gt; unit" Usage="devicePolicyManager.AddPersistentPreferredActivity (admin, filter, activity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addPersistentPreferredActivity", "(Landroid/content/ComponentName;Landroid/content/IntentFilter;Landroid/content/ComponentName;)V", "GetAddPersistentPreferredActivity_Landroid_content_ComponentName_Landroid_content_IntentFilter_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addPersistentPreferredActivity", "(Landroid/content/ComponentName;Landroid/content/IntentFilter;Landroid/content/ComponentName;)V", "GetAddPersistentPreferredActivity_Landroid_content_ComponentName_Landroid_content_IntentFilter_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_TASK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_TASK")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
        <Parameter Name="activity" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                   caller is not a device admin.</param>
        <param name="filter">The IntentFilter for which a default handler is added.</param>
        <param name="activity">The Activity that is added as default intent handler.</param>
        <summary>Called by a profile owner or device owner or holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_LOCK_TASK</c>.</summary>
        <remarks>
          <para>Called by a profile owner or device owner or holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_LOCK_TASK</c>. to set a default activity
            that the system selects to handle intents that match the given <c>IntentFilter</c>.
            This activity will remain the default intent handler even if the set of potential event
            handlers for the intent filter changes and if the intent preferences are reset.</para>
          <para>Note that the caller should still declare the activity in the manifest, the API just sets
            the activity to be the default one to handle the given intent filter.</para>
          <para>The default disambiguation mechanism takes over if the activity is not installed (anymore).
            When the activity is (re)installed, it is automatically reset as default intent handler for
            the filter.</para>
          <para>The calling device admin must be a profile owner or device owner. If it is not, a security
            exception will be thrown.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, after the persistent preferred
            activity policy has been set, <c>PolicyUpdateReceiver#onPolicySetResult(Context, String,
            Bundle, TargetUser, PolicyUpdateResult)</c> will notify the admin on whether the policy was
            successfully set or not. This callback will contain:
            &lt;ul&gt;
            &lt;li&gt; The policy identifier
            <c>DevicePolicyIdentifiers#PERSISTENT_PREFERRED_ACTIVITY_POLICY</c>&lt;li&gt; The additional policy params bundle, which contains
            <c>PolicyUpdateReceiver#EXTRA_INTENT_FILTER</c> the intent filter the policy applies to
            &lt;li&gt; The <c>TargetUser</c> that this policy relates to
            &lt;li&gt; The <c>PolicyUpdateResult</c>, which will be
            <c>PolicyUpdateResult#RESULT_POLICY_SET</c> if the policy was successfully set or the
            reason the policy failed to be set
            (e.g. <c>PolicyUpdateResult#RESULT_FAILURE_CONFLICTING_ADMIN_POLICY</c>)
            &lt;/ul&gt;
            If there has been a change to the policy,
            <c>PolicyUpdateReceiver#onPolicyChanged(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin of this change. This callback will contain the
            same parameters as PolicyUpdateReceiver#onPolicySetResult and the <c>PolicyUpdateResult</c>
            will contain the reason why the policy changed.</para>
          <para>NOTE: Performs disk I/O and shouldn't be called on the main thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#addPersistentPreferredActivity(android.content.ComponentName,%20android.content.IntentFilter,%20android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.addPersistentPreferredActivity(android.content.ComponentName, android.content.IntentFilter, android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUserRestriction">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddUserRestriction (admin As ComponentName, key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddUserRestriction(Android::Content::ComponentName ^ admin, System::String ^ key);" />
      <MemberSignature Language="C#" Value="public virtual void AddUserRestriction (Android.Content.ComponentName admin, string? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUserRestriction(class Android.Content.ComponentName admin, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.AddUserRestriction(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member AddUserRestriction : Android.Content.ComponentName * string -&gt; unit&#xA;override this.AddUserRestriction : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.AddUserRestriction (admin, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addUserRestriction", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetAddUserRestriction_Landroid_content_ComponentName_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addUserRestriction", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetAddUserRestriction_Landroid_content_ComponentName_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="key" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.StringDef(Fields=new System.String[] { "DisallowModifyAccounts", "DisallowConfigWifi", "DisallowConfigLocale", "DisallowInstallApps", "DisallowUninstallApps", "DisallowShareLocation", "DisallowAirplaneMode", "DisallowConfigBrightness", "DisallowAmbientDisplay", "DisallowConfigScreenTimeout", "DisallowInstallUnknownSources", "DisallowInstallUnknownSourcesGlobally", "DisallowConfigBluetooth", "DisallowBluetooth", "DisallowBluetoothSharing", "DisallowUsbFileTransfer", "DisallowConfigCredentials", "DisallowRemoveUser", "DisallowRemoveManagedProfile", "DisallowDebuggingFeatures", "DisallowConfigVpn", "DisallowConfigLocation", "DisallowConfigDateTime", "DisallowConfigTethering", "DisallowNetworkReset", "DisallowFactoryReset", "DisallowAddUser", "DisallowAddManagedProfile", "EnsureVerifyApps", "DisallowConfigCellBroadcasts", "DisallowConfigMobileNetworks", "DisallowAppsControl", "DisallowMountPhysicalMedia", "DisallowUnmuteMicrophone", "DisallowAdjustVolume", "DisallowOutgoingCalls", "DisallowSms", "DisallowFun", "DisallowCreateWindows", "DisallowSystemErrorDialogs", "DisallowCrossProfileCopyPaste", "DisallowOutgoingBeam", "DisallowSetWallpaper", "DisallowSafeBoot", "DisallowDataRoaming", "DisallowSetUserIcon", "DisallowUnifiedPassword", "AllowParentProfileAppLinking", "DisallowAutofill", "DisallowContentCapture", "DisallowContentSuggestions", "DisallowUserSwitch", "DisallowShareIntoManagedProfile", "DisallowPrinting", "DisallowConfigPrivateDns", "DisallowMicrophoneToggle", "DisallowCameraToggle", "KeyRestrictionsPending", "DisallowChangeWifiState", "DisallowWifiTethering", "DisallowSharingAdminConfiguredWifi", "DisallowWifiDirect", "DisallowAddWifiConfig", "DisallowCellular2g", "DisallowUltraWidebandRadio", "DisallowGrantAdmin" }, Type="Android.OS.UserManager")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.StringDef(Fields=new System.String[] { "DisallowModifyAccounts", "DisallowConfigWifi", "DisallowConfigLocale", "DisallowInstallApps", "DisallowUninstallApps", "DisallowShareLocation", "DisallowAirplaneMode", "DisallowConfigBrightness", "DisallowAmbientDisplay", "DisallowConfigScreenTimeout", "DisallowInstallUnknownSources", "DisallowInstallUnknownSourcesGlobally", "DisallowConfigBluetooth", "DisallowBluetooth", "DisallowBluetoothSharing", "DisallowUsbFileTransfer", "DisallowConfigCredentials", "DisallowRemoveUser", "DisallowRemoveManagedProfile", "DisallowDebuggingFeatures", "DisallowConfigVpn", "DisallowConfigLocation", "DisallowConfigDateTime", "DisallowConfigTethering", "DisallowNetworkReset", "DisallowFactoryReset", "DisallowAddUser", "DisallowAddManagedProfile", "EnsureVerifyApps", "DisallowConfigCellBroadcasts", "DisallowConfigMobileNetworks", "DisallowAppsControl", "DisallowMountPhysicalMedia", "DisallowUnmuteMicrophone", "DisallowAdjustVolume", "DisallowOutgoingCalls", "DisallowSms", "DisallowFun", "DisallowCreateWindows", "DisallowSystemErrorDialogs", "DisallowCrossProfileCopyPaste", "DisallowOutgoingBeam", "DisallowSetWallpaper", "DisallowSafeBoot", "DisallowDataRoaming", "DisallowSetUserIcon", "DisallowUnifiedPassword", "AllowParentProfileAppLinking", "DisallowAutofill", "DisallowContentCapture", "DisallowContentSuggestions", "DisallowUserSwitch", "DisallowShareIntoManagedProfile", "DisallowPrinting", "DisallowConfigPrivateDns", "DisallowMicrophoneToggle", "DisallowCameraToggle", "KeyRestrictionsPending", "DisallowChangeWifiState", "DisallowWifiTethering", "DisallowSharingAdminConfiguredWifi", "DisallowWifiDirect", "DisallowAddWifiConfig", "DisallowCellular2g", "DisallowUltraWidebandRadio", "DisallowGrantAdmin" }, Type="Android.OS.UserManager")&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="key">The key of the restriction.</param>
        <summary>Called by a profile owner, device owner or a holder of any permission that is associated with
            a user restriction to set a user restriction specified by the key.</summary>
        <remarks>
          <para>Called by a profile owner, device owner or a holder of any permission that is associated with
            a user restriction to set a user restriction specified by the key.</para>
          <para>The calling device admin must be a profile owner, device owner or holder of any permission
            that is associated with a user restriction; if it is not, a security
            exception will be thrown.</para>
          <para>The profile owner of an organization-owned managed profile may invoke this method on
            the <c>DevicePolicyManager</c> instance it obtained from
            <c>#getParentProfileInstance(ComponentName)</c>, for enforcing device-wide restrictions.</para>
          <para>See the constants in <c>android.os.UserManager</c> for the list of restrictions that can
            be enforced device-wide. These constants will also state in their documentation which
            permission is required to manage the restriction using this API.</para>
          <para>For callers targeting Android <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> or
            above, calling this API will result in applying the restriction locally on the calling user,
            or locally on the parent profile if called from the
            <c>DevicePolicyManager</c> instance obtained from
            <c>#getParentProfileInstance(ComponentName)</c>. To set a restriction globally, call
            <c>#addUserRestrictionGlobally</c> instead.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, after the user restriction
            policy has been set, <c>PolicyUpdateReceiver#onPolicySetResult(Context, String,
            Bundle, TargetUser, PolicyUpdateResult)</c> will notify the admin on whether the policy was
            successfully set or not. This callback will contain:
            &lt;ul&gt;
            &lt;li&gt; The policy identifier returned from
            <c>DevicePolicyIdentifiers#getIdentifierForUserRestriction(String)</c>&lt;li&gt; The <c>TargetUser</c> that this policy relates to
            &lt;li&gt; The <c>PolicyUpdateResult</c>, which will be
            <c>PolicyUpdateResult#RESULT_POLICY_SET</c> if the policy was successfully set or the
            reason the policy failed to be set
            (e.g. <c>PolicyUpdateResult#RESULT_FAILURE_CONFLICTING_ADMIN_POLICY</c>)
            &lt;/ul&gt;
            If there has been a change to the policy,
            <c>PolicyUpdateReceiver#onPolicyChanged(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin of this change. This callback will contain the
            same parameters as PolicyUpdateReceiver#onPolicySetResult and the <c>PolicyUpdateResult</c>
            will contain the reason why the policy changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#addUserRestriction(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.addUserRestriction(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddUserRestrictionGlobally">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddUserRestrictionGlobally (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddUserRestrictionGlobally(System::String ^ key);" />
      <MemberSignature Language="C#" Value="public virtual void AddUserRestrictionGlobally (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUserRestrictionGlobally(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.AddUserRestrictionGlobally(System.String)" />
      <MemberSignature Language="F#" Value="abstract member AddUserRestrictionGlobally : string -&gt; unit&#xA;override this.AddUserRestrictionGlobally : string -&gt; unit" Usage="devicePolicyManager.AddUserRestrictionGlobally key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addUserRestrictionGlobally", "(Ljava/lang/String;)V", "GetAddUserRestrictionGlobally_Ljava_lang_String_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addUserRestrictionGlobally", "(Ljava/lang/String;)V", "GetAddUserRestrictionGlobally_Ljava_lang_String_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.StringDef(Fields=new System.String[] { "DisallowModifyAccounts", "DisallowConfigWifi", "DisallowConfigLocale", "DisallowInstallApps", "DisallowUninstallApps", "DisallowShareLocation", "DisallowAirplaneMode", "DisallowConfigBrightness", "DisallowAmbientDisplay", "DisallowConfigScreenTimeout", "DisallowInstallUnknownSources", "DisallowInstallUnknownSourcesGlobally", "DisallowConfigBluetooth", "DisallowBluetooth", "DisallowBluetoothSharing", "DisallowUsbFileTransfer", "DisallowConfigCredentials", "DisallowRemoveUser", "DisallowRemoveManagedProfile", "DisallowDebuggingFeatures", "DisallowConfigVpn", "DisallowConfigLocation", "DisallowConfigDateTime", "DisallowConfigTethering", "DisallowNetworkReset", "DisallowFactoryReset", "DisallowAddUser", "DisallowAddManagedProfile", "EnsureVerifyApps", "DisallowConfigCellBroadcasts", "DisallowConfigMobileNetworks", "DisallowAppsControl", "DisallowMountPhysicalMedia", "DisallowUnmuteMicrophone", "DisallowAdjustVolume", "DisallowOutgoingCalls", "DisallowSms", "DisallowFun", "DisallowCreateWindows", "DisallowSystemErrorDialogs", "DisallowCrossProfileCopyPaste", "DisallowOutgoingBeam", "DisallowSetWallpaper", "DisallowSafeBoot", "DisallowDataRoaming", "DisallowSetUserIcon", "DisallowUnifiedPassword", "AllowParentProfileAppLinking", "DisallowAutofill", "DisallowContentCapture", "DisallowContentSuggestions", "DisallowUserSwitch", "DisallowShareIntoManagedProfile", "DisallowPrinting", "DisallowConfigPrivateDns", "DisallowMicrophoneToggle", "DisallowCameraToggle", "KeyRestrictionsPending", "DisallowChangeWifiState", "DisallowWifiTethering", "DisallowSharingAdminConfiguredWifi", "DisallowWifiDirect", "DisallowAddWifiConfig", "DisallowCellular2g", "DisallowUltraWidebandRadio", "DisallowGrantAdmin" }, Type="Android.OS.UserManager")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.StringDef(Fields=new System.String[] { "DisallowModifyAccounts", "DisallowConfigWifi", "DisallowConfigLocale", "DisallowInstallApps", "DisallowUninstallApps", "DisallowShareLocation", "DisallowAirplaneMode", "DisallowConfigBrightness", "DisallowAmbientDisplay", "DisallowConfigScreenTimeout", "DisallowInstallUnknownSources", "DisallowInstallUnknownSourcesGlobally", "DisallowConfigBluetooth", "DisallowBluetooth", "DisallowBluetoothSharing", "DisallowUsbFileTransfer", "DisallowConfigCredentials", "DisallowRemoveUser", "DisallowRemoveManagedProfile", "DisallowDebuggingFeatures", "DisallowConfigVpn", "DisallowConfigLocation", "DisallowConfigDateTime", "DisallowConfigTethering", "DisallowNetworkReset", "DisallowFactoryReset", "DisallowAddUser", "DisallowAddManagedProfile", "EnsureVerifyApps", "DisallowConfigCellBroadcasts", "DisallowConfigMobileNetworks", "DisallowAppsControl", "DisallowMountPhysicalMedia", "DisallowUnmuteMicrophone", "DisallowAdjustVolume", "DisallowOutgoingCalls", "DisallowSms", "DisallowFun", "DisallowCreateWindows", "DisallowSystemErrorDialogs", "DisallowCrossProfileCopyPaste", "DisallowOutgoingBeam", "DisallowSetWallpaper", "DisallowSafeBoot", "DisallowDataRoaming", "DisallowSetUserIcon", "DisallowUnifiedPassword", "AllowParentProfileAppLinking", "DisallowAutofill", "DisallowContentCapture", "DisallowContentSuggestions", "DisallowUserSwitch", "DisallowShareIntoManagedProfile", "DisallowPrinting", "DisallowConfigPrivateDns", "DisallowMicrophoneToggle", "DisallowCameraToggle", "KeyRestrictionsPending", "DisallowChangeWifiState", "DisallowWifiTethering", "DisallowSharingAdminConfiguredWifi", "DisallowWifiDirect", "DisallowAddWifiConfig", "DisallowCellular2g", "DisallowUltraWidebandRadio", "DisallowGrantAdmin" }, Type="Android.OS.UserManager")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="key">The key of the restriction.</param>
        <summary>Called by a profile owner, device owner or a holder of any permission that is associated with
             a user restriction to set a user restriction specified by the provided <c>key</c> globally
             on all users.</summary>
        <remarks>
          <para>Called by a profile owner, device owner or a holder of any permission that is associated with
             a user restriction to set a user restriction specified by the provided <c>key</c> globally
             on all users. To clear the restriction use <c>#clearUserRestriction</c>.</para>
          <para>For a given user, a restriction will be set if it was applied globally or locally by any
            admin.</para>
          <para>The calling device admin must be a profile owner, device owner or or a holder of any
            permission that is associated with a user restriction; if it is not, a security
            exception will be thrown.</para>
          <para>See the constants in <c>android.os.UserManager</c> for the list of restrictions that can
            be enforced device-wide. These constants will also state in their documentation which
            permission is required to manage the restriction using this API.</para>
          <para>After the user restriction policy has been set,
            <c>PolicyUpdateReceiver#onPolicySetResult(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin on whether the policy was successfully set or not.
            This callback will contain:
            &lt;ul&gt;
            &lt;li&gt; The policy identifier returned from
            <c>DevicePolicyIdentifiers#getIdentifierForUserRestriction(String)</c>&lt;li&gt; The <c>TargetUser</c> that this policy relates to
            &lt;li&gt; The <c>PolicyUpdateResult</c>, which will be
            <c>PolicyUpdateResult#RESULT_POLICY_SET</c> if the policy was successfully set or the
            reason the policy failed to be set
            (e.g. <c>PolicyUpdateResult#RESULT_FAILURE_CONFLICTING_ADMIN_POLICY</c>)
            &lt;/ul&gt;
            If there has been a change to the policy,
            <c>PolicyUpdateReceiver#onPolicyChanged(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin of this change. This callback will contain the
            same parameters as PolicyUpdateReceiver#onPolicySetResult and the <c>PolicyUpdateResult</c>
            will contain the reason why the policy changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#addUserRestrictionGlobally(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.addUserRestrictionGlobally(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoTimeRequired">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AutoTimeRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoTimeRequired { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool AutoTimeRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoTimeRequired" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.AutoTimeRequired" />
      <MemberSignature Language="F#" Value="member this.AutoTimeRequired : bool" Usage="Android.App.Admin.DevicePolicyManager.AutoTimeRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAutoTimeRequired", "()Z", "GetGetAutoTimeRequiredHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAutoTimeRequired", "()Z", "GetGetAutoTimeRequiredHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This member is deprecated.</summary>
        <value>true if auto time is required.</value>
        <remarks>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#R</c>. Use <c>#getAutoTimeEnabled</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getAutoTimeRequired()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getAutoTimeRequired()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindDeviceAdminServiceAsUser">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindDeviceAdminServiceAsUser (admin As ComponentName, serviceIntent As Intent, conn As IServiceConnection, flags As Bind, targetUser As UserHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool BindDeviceAdminServiceAsUser(Android::Content::ComponentName ^ admin, Android::Content::Intent ^ serviceIntent, Android::Content::IServiceConnection ^ conn, Android::Content::Bind flags, Android::OS::UserHandle ^ targetUser);" />
      <MemberSignature Language="C#" Value="public virtual bool BindDeviceAdminServiceAsUser (Android.Content.ComponentName admin, Android.Content.Intent serviceIntent, Android.Content.IServiceConnection conn, Android.Content.Bind flags, Android.OS.UserHandle targetUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BindDeviceAdminServiceAsUser(class Android.Content.ComponentName admin, class Android.Content.Intent serviceIntent, class Android.Content.IServiceConnection conn, valuetype Android.Content.Bind flags, class Android.OS.UserHandle targetUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.BindDeviceAdminServiceAsUser(Android.Content.ComponentName,Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.Bind,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member BindDeviceAdminServiceAsUser : Android.Content.ComponentName * Android.Content.Intent * Android.Content.IServiceConnection * Android.Content.Bind * Android.OS.UserHandle -&gt; bool&#xA;override this.BindDeviceAdminServiceAsUser : Android.Content.ComponentName * Android.Content.Intent * Android.Content.IServiceConnection * Android.Content.Bind * Android.OS.UserHandle -&gt; bool" Usage="devicePolicyManager.BindDeviceAdminServiceAsUser (admin, serviceIntent, conn, flags, targetUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("bindDeviceAdminServiceAsUser", "(Landroid/content/ComponentName;Landroid/content/Intent;Landroid/content/ServiceConnection;ILandroid/os/UserHandle;)Z", "GetBindDeviceAdminServiceAsUser_Landroid_content_ComponentName_Landroid_content_Intent_Landroid_content_ServiceConnection_ILandroid_os_UserHandle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("bindDeviceAdminServiceAsUser", "(Landroid/content/ComponentName;Landroid/content/Intent;Landroid/content/ServiceConnection;ILandroid/os/UserHandle;)Z", "GetBindDeviceAdminServiceAsUser_Landroid_content_ComponentName_Landroid_content_Intent_Landroid_content_ServiceConnection_ILandroid_os_UserHandle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="serviceIntent" Type="Android.Content.Intent" />
        <Parameter Name="conn" Type="Android.Content.IServiceConnection" />
        <Parameter Name="flags" Type="Android.Content.Bind">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="targetUser" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="serviceIntent">Identifies the service to connect to.  The Intent must specify either an
                   explicit component name or a package name to match an
                   <c>IntentFilter</c> published by a service.</param>
        <param name="conn">Receives information as the service is started and stopped in main thread. This
                   must be a valid <c>ServiceConnection</c> object; it must not be <c>null</c>.</param>
        <param name="flags">Operation options for the binding operation. See
                   <c>Context#bindService(Intent, ServiceConnection, int)</c>.</param>
        <param name="targetUser">Which user to bind to. Must be one of the users returned by
                   <c>#getBindDeviceAdminTargetUsers</c>, otherwise a <c>SecurityException</c> will
                   be thrown.</param>
        <summary>Called by a device owner to bind to a service from a secondary managed user or vice versa.</summary>
        <returns>If you have successfully bound to the service, <c>true</c> is returned;
                    <c>false</c> is returned if the connection is not made and you will not
                    receive the service object.</returns>
        <remarks>
          <para>Called by a device owner to bind to a service from a secondary managed user or vice versa.
            See <c>#getBindDeviceAdminTargetUsers</c> for the pre-requirements of a
            device owner to bind to services of another managed user.</para>
          <para>The service must be protected by <c>android.Manifest.permission#BIND_DEVICE_ADMIN</c>.
            Note that the <c>Context</c> used to obtain this
            <c>DevicePolicyManager</c> instance via <c>Context#getSystemService(Class)</c> will be used
            to bind to the <c>android.app.Service</c>.</para>
          <para>Note: This method used to be available for communication between device owner and profile
            owner. However, since Android 11, this combination is not possible. This method is now
            only useful for communication between device owner and managed secondary users.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#bindDeviceAdminServiceAsUser(android.content.ComponentName,%20android.content.Intent,%20android.content.ServiceConnection,%20int,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.bindDeviceAdminServiceAsUser(android.content.ComponentName, android.content.Intent, android.content.ServiceConnection, int, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindDeviceAdminServiceAsUser">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BindDeviceAdminServiceAsUser (admin As ComponentName, serviceIntent As Intent, conn As IServiceConnection, flags As Context.BindServiceFlags, targetUser As UserHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool BindDeviceAdminServiceAsUser(Android::Content::ComponentName ^ admin, Android::Content::Intent ^ serviceIntent, Android::Content::IServiceConnection ^ conn, Android::Content::Context::BindServiceFlags ^ flags, Android::OS::UserHandle ^ targetUser);" />
      <MemberSignature Language="C#" Value="public virtual bool BindDeviceAdminServiceAsUser (Android.Content.ComponentName admin, Android.Content.Intent serviceIntent, Android.Content.IServiceConnection conn, Android.Content.Context.BindServiceFlags flags, Android.OS.UserHandle targetUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool BindDeviceAdminServiceAsUser(class Android.Content.ComponentName admin, class Android.Content.Intent serviceIntent, class Android.Content.IServiceConnection conn, class Android.Content.Context/BindServiceFlags flags, class Android.OS.UserHandle targetUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.BindDeviceAdminServiceAsUser(Android.Content.ComponentName,Android.Content.Intent,Android.Content.IServiceConnection,Android.Content.Context.BindServiceFlags,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member BindDeviceAdminServiceAsUser : Android.Content.ComponentName * Android.Content.Intent * Android.Content.IServiceConnection * Android.Content.Context.BindServiceFlags * Android.OS.UserHandle -&gt; bool&#xA;override this.BindDeviceAdminServiceAsUser : Android.Content.ComponentName * Android.Content.Intent * Android.Content.IServiceConnection * Android.Content.Context.BindServiceFlags * Android.OS.UserHandle -&gt; bool" Usage="devicePolicyManager.BindDeviceAdminServiceAsUser (admin, serviceIntent, conn, flags, targetUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("bindDeviceAdminServiceAsUser", "(Landroid/content/ComponentName;Landroid/content/Intent;Landroid/content/ServiceConnection;Landroid/content/Context$BindServiceFlags;Landroid/os/UserHandle;)Z", "GetBindDeviceAdminServiceAsUser_Landroid_content_ComponentName_Landroid_content_Intent_Landroid_content_ServiceConnection_Landroid_content_Context_BindServiceFlags_Landroid_os_UserHandle_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("bindDeviceAdminServiceAsUser", "(Landroid/content/ComponentName;Landroid/content/Intent;Landroid/content/ServiceConnection;Landroid/content/Context$BindServiceFlags;Landroid/os/UserHandle;)Z", "GetBindDeviceAdminServiceAsUser_Landroid_content_ComponentName_Landroid_content_Intent_Landroid_content_ServiceConnection_Landroid_content_Context_BindServiceFlags_Landroid_os_UserHandle_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="serviceIntent" Type="Android.Content.Intent" />
        <Parameter Name="conn" Type="Android.Content.IServiceConnection" />
        <Parameter Name="flags" Type="Android.Content.Context+BindServiceFlags" />
        <Parameter Name="targetUser" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="admin">To be added.</param>
        <param name="serviceIntent">To be added.</param>
        <param name="conn">To be added.</param>
        <param name="flags">To be added.</param>
        <param name="targetUser">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAdminGrantSensorsPermissions">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanAdminGrantSensorsPermissions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAdminGrantSensorsPermissions();" />
      <MemberSignature Language="C#" Value="public virtual bool CanAdminGrantSensorsPermissions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAdminGrantSensorsPermissions() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.CanAdminGrantSensorsPermissions" />
      <MemberSignature Language="F#" Value="abstract member CanAdminGrantSensorsPermissions : unit -&gt; bool&#xA;override this.CanAdminGrantSensorsPermissions : unit -&gt; bool" Usage="devicePolicyManager.CanAdminGrantSensorsPermissions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canAdminGrantSensorsPermissions", "()Z", "GetCanAdminGrantSensorsPermissionsHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canAdminGrantSensorsPermissions", "()Z", "GetCanAdminGrantSensorsPermissionsHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns true if the caller is running on a device where an admin can grant
            permissions related to device sensors.</summary>
        <returns>true if an admin can grant device sensors-related permissions, false otherwise.</returns>
        <remarks>
          <para>Returns true if the caller is running on a device where an admin can grant
            permissions related to device sensors.
            This is a signal that the device is a fully-managed device where personal usage is
            discouraged.
            The list of permissions is listed in
            <c>#setPermissionGrantState(ComponentName, String, String, int)</c>.
            
            May be called by any app.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#canAdminGrantSensorsPermissions()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.canAdminGrantSensorsPermissions()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanUsbDataSignalingBeDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanUsbDataSignalingBeDisabled () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanUsbDataSignalingBeDisabled();" />
      <MemberSignature Language="C#" Value="public virtual bool CanUsbDataSignalingBeDisabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanUsbDataSignalingBeDisabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.CanUsbDataSignalingBeDisabled" />
      <MemberSignature Language="F#" Value="abstract member CanUsbDataSignalingBeDisabled : unit -&gt; bool&#xA;override this.CanUsbDataSignalingBeDisabled : unit -&gt; bool" Usage="devicePolicyManager.CanUsbDataSignalingBeDisabled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canUsbDataSignalingBeDisabled", "()Z", "GetCanUsbDataSignalingBeDisabledHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canUsbDataSignalingBeDisabled", "()Z", "GetCanUsbDataSignalingBeDisabledHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns whether enabling or disabling USB data signaling is supported on the device.</summary>
        <returns>
          <c>true</c> if the device supports enabling and disabling USB data signaling.</returns>
        <remarks>
          <para>Returns whether enabling or disabling USB data signaling is supported on the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#canUsbDataSignalingBeDisabled()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.canUsbDataSignalingBeDisabled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearApplicationUserData">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearApplicationUserData (admin As ComponentName, packageName As String, executor As IExecutor, listener As DevicePolicyManager.IOnClearApplicationUserDataListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearApplicationUserData(Android::Content::ComponentName ^ admin, System::String ^ packageName, Java::Util::Concurrent::IExecutor ^ executor, Android::App::Admin::DevicePolicyManager::IOnClearApplicationUserDataListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void ClearApplicationUserData (Android.Content.ComponentName admin, string packageName, Java.Util.Concurrent.IExecutor executor, Android.App.Admin.DevicePolicyManager.IOnClearApplicationUserDataListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearApplicationUserData(class Android.Content.ComponentName admin, string packageName, class Java.Util.Concurrent.IExecutor executor, class Android.App.Admin.DevicePolicyManager/IOnClearApplicationUserDataListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.ClearApplicationUserData(Android.Content.ComponentName,System.String,Java.Util.Concurrent.IExecutor,Android.App.Admin.DevicePolicyManager.IOnClearApplicationUserDataListener)" />
      <MemberSignature Language="F#" Value="abstract member ClearApplicationUserData : Android.Content.ComponentName * string * Java.Util.Concurrent.IExecutor * Android.App.Admin.DevicePolicyManager.IOnClearApplicationUserDataListener -&gt; unit&#xA;override this.ClearApplicationUserData : Android.Content.ComponentName * string * Java.Util.Concurrent.IExecutor * Android.App.Admin.DevicePolicyManager.IOnClearApplicationUserDataListener -&gt; unit" Usage="devicePolicyManager.ClearApplicationUserData (admin, packageName, executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearApplicationUserData", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/util/concurrent/Executor;Landroid/app/admin/DevicePolicyManager$OnClearApplicationUserDataListener;)V", "GetClearApplicationUserData_Landroid_content_ComponentName_Ljava_lang_String_Ljava_util_concurrent_Executor_Landroid_app_admin_DevicePolicyManager_OnClearApplicationUserDataListener_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearApplicationUserData", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/util/concurrent/Executor;Landroid/app/admin/DevicePolicyManager$OnClearApplicationUserDataListener;)V", "GetClearApplicationUserData_Landroid_content_ComponentName_Ljava_lang_String_Ljava_util_concurrent_Executor_Landroid_app_admin_DevicePolicyManager_OnClearApplicationUserDataListener_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.App.Admin.DevicePolicyManager+IOnClearApplicationUserDataListener" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="packageName">The name of the package which will have its user data wiped.</param>
        <param name="executor">The executor through which the listener should be invoked.</param>
        <param name="listener">A callback object that will inform the caller when the clearing is done.</param>
        <summary>Called by the device owner or profile owner to clear application user data of a given
            package.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#clearApplicationUserData(android.content.ComponentName,%20java.lang.String,%20java.util.concurrent.Executor,%20android.app.admin.OnClearApplicationUserDataListener)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.clearApplicationUserData(android.content.ComponentName, java.lang.String, java.util.concurrent.Executor, android.app.admin.OnClearApplicationUserDataListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCrossProfileIntentFilters">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearCrossProfileIntentFilters (admin As ComponentName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearCrossProfileIntentFilters(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual void ClearCrossProfileIntentFilters (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearCrossProfileIntentFilters(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.ClearCrossProfileIntentFilters(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member ClearCrossProfileIntentFilters : Android.Content.ComponentName -&gt; unit&#xA;override this.ClearCrossProfileIntentFilters : Android.Content.ComponentName -&gt; unit" Usage="devicePolicyManager.ClearCrossProfileIntentFilters admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearCrossProfileIntentFilters", "(Landroid/content/ComponentName;)V", "GetClearCrossProfileIntentFilters_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearCrossProfileIntentFilters", "(Landroid/content/ComponentName;)V", "GetClearCrossProfileIntentFilters_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PROFILE_INTERACTION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PROFILE_INTERACTION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by a profile owner of a managed profile to remove the cross-profile intent filters
            that go from the managed profile to the parent, or from the parent to the managed profile.</summary>
        <remarks>
          <para>Called by a profile owner of a managed profile to remove the cross-profile intent filters
            that go from the managed profile to the parent, or from the parent to the managed profile.
            Only removes those that have been set by the profile owner.</para>
          <para>&lt;em&gt;Note&lt;/em&gt;: A list of default cross profile intent filters are set up by the system when
            the profile is created, some of them ensure the proper functioning of the profile, while
            others enable sharing of data from the parent to the managed profile for user convenience.
            These default intent filters are not cleared when this API is called. If the default cross
            profile data sharing is not desired, they can be disabled with
            <c>UserManager#DISALLOW_SHARE_INTO_MANAGED_PROFILE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#clearCrossProfileIntentFilters(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.clearCrossProfileIntentFilters(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearDeviceOwnerApp">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearDeviceOwnerApp (packageName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearDeviceOwnerApp(System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual void ClearDeviceOwnerApp (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearDeviceOwnerApp(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.ClearDeviceOwnerApp(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ClearDeviceOwnerApp : string -&gt; unit&#xA;override this.ClearDeviceOwnerApp : string -&gt; unit" Usage="devicePolicyManager.ClearDeviceOwnerApp packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearDeviceOwnerApp", "(Ljava/lang/String;)V", "GetClearDeviceOwnerApp_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearDeviceOwnerApp", "(Ljava/lang/String;)V", "GetClearDeviceOwnerApp_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The package name of the device owner.</param>
        <summary>Clears the current device owner.</summary>
        <remarks>
          <para>Clears the current device owner. The caller must be the device owner. This function should be
            used cautiously as once it is called it cannot be undone. The device owner can only be set as
            a part of device setup, before it completes.</para>
          <para>While some policies previously set by the device owner will be cleared by this method, it is
            a best-effort process and some other policies will still remain in place after the device
            owner is cleared.</para>
          <para>This member is deprecated. This method is expected to be used for testing purposes only. The device owner
            will lose control of the device and its data after calling it. In order to protect any
            sensitive data that remains on the device, it is advised that the device owner factory resets
            the device instead of calling this method. See <c>#wipeData(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#clearDeviceOwnerApp(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.clearDeviceOwnerApp(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPackagePersistentPreferredActivities">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearPackagePersistentPreferredActivities (admin As ComponentName, packageName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearPackagePersistentPreferredActivities(Android::Content::ComponentName ^ admin, System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual void ClearPackagePersistentPreferredActivities (Android.Content.ComponentName? admin, string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearPackagePersistentPreferredActivities(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.ClearPackagePersistentPreferredActivities(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ClearPackagePersistentPreferredActivities : Android.Content.ComponentName * string -&gt; unit&#xA;override this.ClearPackagePersistentPreferredActivities : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.ClearPackagePersistentPreferredActivities (admin, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearPackagePersistentPreferredActivities", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetClearPackagePersistentPreferredActivities_Landroid_content_ComponentName_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearPackagePersistentPreferredActivities", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetClearPackagePersistentPreferredActivities_Landroid_content_ComponentName_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_TASK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_TASK")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="packageName">The name of the package for which preferences are removed.</param>
        <summary>Called by a profile owner or device owner or holder of the
            permission <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_LOCK_TASK</c> to remove all
            persistent intent handler preferences associated with the given package that were set by
            <c>#addPersistentPreferredActivity</c>.</summary>
        <remarks>
          <para>Called by a profile owner or device owner or holder of the
            permission <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_LOCK_TASK</c> to remove all
            persistent intent handler preferences associated with the given package that were set by
            <c>#addPersistentPreferredActivity</c>.</para>
          <para>The calling device admin must be a profile owner. If it is not, a security exception will be
            thrown.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, after the persistent preferred
            activity policy has been cleared, <c>PolicyUpdateReceiver#onPolicySetResult(Context,
            String, Bundle, TargetUser, PolicyUpdateResult)</c> will notify the admin on whether the policy
            was successfully cleared or not. This callback will contain:
            &lt;ul&gt;
            &lt;li&gt; The policy identifier
            <c>DevicePolicyIdentifiers#PERSISTENT_PREFERRED_ACTIVITY_POLICY</c>&lt;li&gt; The additional policy params bundle, which contains
            <c>PolicyUpdateReceiver#EXTRA_INTENT_FILTER</c> the intent filter the policy applies to
            &lt;li&gt; The <c>TargetUser</c> that this policy relates to
            &lt;li&gt; The <c>PolicyUpdateResult</c>, which will be
            <c>PolicyUpdateResult#RESULT_POLICY_SET</c> if the policy was successfully cleared or the
            reason the policy failed to be cleared
            (e.g. <c>PolicyUpdateResult#RESULT_FAILURE_CONFLICTING_ADMIN_POLICY</c>)
            &lt;/ul&gt;
            If there has been a change to the policy,
            <c>PolicyUpdateReceiver#onPolicyChanged(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin of this change. This callback will contain the
            same parameters as PolicyUpdateReceiver#onPolicySetResult and the <c>PolicyUpdateResult</c>
            will contain the reason why the policy changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#clearPackagePersistentPreferredActivities(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.clearPackagePersistentPreferredActivities(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearProfileOwner">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearProfileOwner (admin As ComponentName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearProfileOwner(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual void ClearProfileOwner (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearProfileOwner(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.ClearProfileOwner(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member ClearProfileOwner : Android.Content.ComponentName -&gt; unit&#xA;override this.ClearProfileOwner : Android.Content.ComponentName -&gt; unit" Usage="devicePolicyManager.ClearProfileOwner admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearProfileOwner", "(Landroid/content/ComponentName;)V", "GetClearProfileOwner_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearProfileOwner", "(Landroid/content/ComponentName;)V", "GetClearProfileOwner_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The component to remove as the profile owner.</param>
        <summary>Clears the active profile owner.</summary>
        <remarks>
          <para>Clears the active profile owner. The caller must be the profile owner of this user, otherwise
            a SecurityException will be thrown. This method is not available to managed profile owners.</para>
          <para>While some policies previously set by the profile owner will be cleared by this method, it is
            a best-effort process and some other policies will still remain in place after the profile
            owner is cleared.</para>
          <para>This member is deprecated. This method is expected to be used for testing purposes only. The profile owner
            will lose control of the user and its data after calling it. In order to protect any
            sensitive data that remains on this user, it is advised that the profile owner deletes it
            instead of calling this method. See <c>#wipeData(int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#clearProfileOwner(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.clearProfileOwner(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearResetPasswordToken">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ClearResetPasswordToken (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ClearResetPasswordToken(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool ClearResetPasswordToken (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ClearResetPasswordToken(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.ClearResetPasswordToken(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member ClearResetPasswordToken : Android.Content.ComponentName -&gt; bool&#xA;override this.ClearResetPasswordToken : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.ClearResetPasswordToken admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearResetPasswordToken", "(Landroid/content/ComponentName;)Z", "GetClearResetPasswordToken_Landroid_content_ComponentName_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearResetPasswordToken", "(Landroid/content/ComponentName;)Z", "GetClearResetPasswordToken_Landroid_content_ComponentName_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_RESET_PASSWORD")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_RESET_PASSWORD")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <summary>Called by a profile, device owner or holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_RESET_PASSWORD</c>
            to revoke the current password reset token.</summary>
        <returns>true if the operation is successful, false otherwise.</returns>
        <remarks>
          <para>Called by a profile, device owner or holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_RESET_PASSWORD</c>
            to revoke the current password reset token.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, this
            method has no effect - the reset token should not have been set in the first place - and
            false is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#clearResetPasswordToken(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.clearResetPasswordToken(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearUserRestriction">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearUserRestriction (admin As ComponentName, key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearUserRestriction(Android::Content::ComponentName ^ admin, System::String ^ key);" />
      <MemberSignature Language="C#" Value="public virtual void ClearUserRestriction (Android.Content.ComponentName admin, string? key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearUserRestriction(class Android.Content.ComponentName admin, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.ClearUserRestriction(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member ClearUserRestriction : Android.Content.ComponentName * string -&gt; unit&#xA;override this.ClearUserRestriction : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.ClearUserRestriction (admin, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearUserRestriction", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetClearUserRestriction_Landroid_content_ComponentName_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearUserRestriction", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetClearUserRestriction_Landroid_content_ComponentName_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="key" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.StringDef(Fields=new System.String[] { "DisallowModifyAccounts", "DisallowConfigWifi", "DisallowConfigLocale", "DisallowInstallApps", "DisallowUninstallApps", "DisallowShareLocation", "DisallowAirplaneMode", "DisallowConfigBrightness", "DisallowAmbientDisplay", "DisallowConfigScreenTimeout", "DisallowInstallUnknownSources", "DisallowInstallUnknownSourcesGlobally", "DisallowConfigBluetooth", "DisallowBluetooth", "DisallowBluetoothSharing", "DisallowUsbFileTransfer", "DisallowConfigCredentials", "DisallowRemoveUser", "DisallowRemoveManagedProfile", "DisallowDebuggingFeatures", "DisallowConfigVpn", "DisallowConfigLocation", "DisallowConfigDateTime", "DisallowConfigTethering", "DisallowNetworkReset", "DisallowFactoryReset", "DisallowAddUser", "DisallowAddManagedProfile", "EnsureVerifyApps", "DisallowConfigCellBroadcasts", "DisallowConfigMobileNetworks", "DisallowAppsControl", "DisallowMountPhysicalMedia", "DisallowUnmuteMicrophone", "DisallowAdjustVolume", "DisallowOutgoingCalls", "DisallowSms", "DisallowFun", "DisallowCreateWindows", "DisallowSystemErrorDialogs", "DisallowCrossProfileCopyPaste", "DisallowOutgoingBeam", "DisallowSetWallpaper", "DisallowSafeBoot", "DisallowDataRoaming", "DisallowSetUserIcon", "DisallowUnifiedPassword", "AllowParentProfileAppLinking", "DisallowAutofill", "DisallowContentCapture", "DisallowContentSuggestions", "DisallowUserSwitch", "DisallowShareIntoManagedProfile", "DisallowPrinting", "DisallowConfigPrivateDns", "DisallowMicrophoneToggle", "DisallowCameraToggle", "KeyRestrictionsPending", "DisallowChangeWifiState", "DisallowWifiTethering", "DisallowSharingAdminConfiguredWifi", "DisallowWifiDirect", "DisallowAddWifiConfig", "DisallowCellular2g", "DisallowUltraWidebandRadio", "DisallowGrantAdmin" }, Type="Android.OS.UserManager")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.StringDef(Fields=new System.String[] { "DisallowModifyAccounts", "DisallowConfigWifi", "DisallowConfigLocale", "DisallowInstallApps", "DisallowUninstallApps", "DisallowShareLocation", "DisallowAirplaneMode", "DisallowConfigBrightness", "DisallowAmbientDisplay", "DisallowConfigScreenTimeout", "DisallowInstallUnknownSources", "DisallowInstallUnknownSourcesGlobally", "DisallowConfigBluetooth", "DisallowBluetooth", "DisallowBluetoothSharing", "DisallowUsbFileTransfer", "DisallowConfigCredentials", "DisallowRemoveUser", "DisallowRemoveManagedProfile", "DisallowDebuggingFeatures", "DisallowConfigVpn", "DisallowConfigLocation", "DisallowConfigDateTime", "DisallowConfigTethering", "DisallowNetworkReset", "DisallowFactoryReset", "DisallowAddUser", "DisallowAddManagedProfile", "EnsureVerifyApps", "DisallowConfigCellBroadcasts", "DisallowConfigMobileNetworks", "DisallowAppsControl", "DisallowMountPhysicalMedia", "DisallowUnmuteMicrophone", "DisallowAdjustVolume", "DisallowOutgoingCalls", "DisallowSms", "DisallowFun", "DisallowCreateWindows", "DisallowSystemErrorDialogs", "DisallowCrossProfileCopyPaste", "DisallowOutgoingBeam", "DisallowSetWallpaper", "DisallowSafeBoot", "DisallowDataRoaming", "DisallowSetUserIcon", "DisallowUnifiedPassword", "AllowParentProfileAppLinking", "DisallowAutofill", "DisallowContentCapture", "DisallowContentSuggestions", "DisallowUserSwitch", "DisallowShareIntoManagedProfile", "DisallowPrinting", "DisallowConfigPrivateDns", "DisallowMicrophoneToggle", "DisallowCameraToggle", "KeyRestrictionsPending", "DisallowChangeWifiState", "DisallowWifiTethering", "DisallowSharingAdminConfiguredWifi", "DisallowWifiDirect", "DisallowAddWifiConfig", "DisallowCellular2g", "DisallowUltraWidebandRadio", "DisallowGrantAdmin" }, Type="Android.OS.UserManager")&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="key">The key of the restriction.</param>
        <summary>Called by a profile owner, device owner or a holder of any permission that is associated with
            a user restriction to clear a user restriction specified by the key.</summary>
        <remarks>
          <para>Called by a profile owner, device owner or a holder of any permission that is associated with
            a user restriction to clear a user restriction specified by the key.</para>
          <para>The calling device admin must be a profile or device owner; if it is not, a security
            exception will be thrown.</para>
          <para>The profile owner of an organization-owned managed profile may invoke this method on
            the <c>DevicePolicyManager</c> instance it obtained from
            <c>#getParentProfileInstance(ComponentName)</c>, for clearing device-wide restrictions.</para>
          <para>See the constants in <c>android.os.UserManager</c> for the list of restrictions. These
            constants state in their documentation which permission is required to manage the restriction
            using this API.</para>
          <para>For callers targeting Android <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> or
            above, calling this API will result in clearing any local and global restriction with the
            specified key that was previously set by the caller.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, after the user restriction
            policy has been cleared, <c>PolicyUpdateReceiver#onPolicySetResult(Context, String,
            Bundle, TargetUser, PolicyUpdateResult)</c> will notify the admin on whether the policy was
            successfully cleared or not. This callback will contain:
            &lt;ul&gt;
            &lt;li&gt; The policy identifier returned from
            <c>DevicePolicyIdentifiers#getIdentifierForUserRestriction(String)</c>&lt;li&gt; The <c>TargetUser</c> that this policy relates to
            &lt;li&gt; The <c>PolicyUpdateResult</c>, which will be
            <c>PolicyUpdateResult#RESULT_POLICY_SET</c> if the policy was successfully cleared or the
            reason the policy failed to be cleared
            (e.g. <c>PolicyUpdateResult#RESULT_FAILURE_CONFLICTING_ADMIN_POLICY</c>)
            &lt;/ul&gt;
            If there has been a change to the policy,
            <c>PolicyUpdateReceiver#onPolicyChanged(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin of this change. This callback will contain the
            same parameters as PolicyUpdateReceiver#onPolicySetResult and the <c>PolicyUpdateResult</c>
            will contain the reason why the policy changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#clearUserRestriction(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.clearUserRestriction(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAdminSupportIntent">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAdminSupportIntent (restriction As String) As Intent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Content::Intent ^ CreateAdminSupportIntent(System::String ^ restriction);" />
      <MemberSignature Language="C#" Value="public virtual Android.Content.Intent? CreateAdminSupportIntent (string restriction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent CreateAdminSupportIntent(string restriction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.CreateAdminSupportIntent(System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateAdminSupportIntent : string -&gt; Android.Content.Intent&#xA;override this.CreateAdminSupportIntent : string -&gt; Android.Content.Intent" Usage="devicePolicyManager.CreateAdminSupportIntent restriction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createAdminSupportIntent", "(Ljava/lang/String;)Landroid/content/Intent;", "GetCreateAdminSupportIntent_Ljava_lang_String_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createAdminSupportIntent", "(Ljava/lang/String;)Landroid/content/Intent;", "GetCreateAdminSupportIntent_Ljava_lang_String_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="restriction" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="restriction">Indicates for which feature the dialog should be displayed. Can be a
                       user restriction from <c>UserManager</c>, e.g.
                       <c>UserManager#DISALLOW_ADJUST_VOLUME</c>, or one of the constants
                       <c>#POLICY_DISABLE_CAMERA</c> or <c>#POLICY_DISABLE_SCREEN_CAPTURE</c>.</param>
        <summary>Called by any app to display a support dialog when a feature was disabled by an admin.</summary>
        <returns>Intent An intent to be used to start the dialog-activity if the restriction is
                       set by an admin, or null if the restriction does not exist or no admin set it.</returns>
        <remarks>
          <para>Called by any app to display a support dialog when a feature was disabled by an admin.
            This returns an intent that can be used with <c>Context#startActivity(Intent)</c> to
            display the dialog. It will tell the user that the feature indicated by <c>restriction</c>
            was disabled by an admin, and include a link for more information. The default content of
            the dialog can be changed by the restricting admin via
            <c>#setShortSupportMessage(ComponentName, CharSequence)</c>. If the restriction is not
            set (i.e. the feature is available), then the return value will be <c>null</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#createAdminSupportIntent(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.createAdminSupportIntent(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAndInitializeUser">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAndInitializeUser (admin As ComponentName, name As String, ownerName As String, profileOwnerComponent As ComponentName, adminExtras As Bundle) As UserHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::OS::UserHandle ^ CreateAndInitializeUser(Android::Content::ComponentName ^ admin, System::String ^ name, System::String ^ ownerName, Android::Content::ComponentName ^ profileOwnerComponent, Android::OS::Bundle ^ adminExtras);" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.UserHandle? CreateAndInitializeUser (Android.Content.ComponentName? admin, string? name, string? ownerName, Android.Content.ComponentName? profileOwnerComponent, Android.OS.Bundle? adminExtras);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.UserHandle CreateAndInitializeUser(class Android.Content.ComponentName admin, string name, string ownerName, class Android.Content.ComponentName profileOwnerComponent, class Android.OS.Bundle adminExtras) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.CreateAndInitializeUser(Android.Content.ComponentName,System.String,System.String,Android.Content.ComponentName,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member CreateAndInitializeUser : Android.Content.ComponentName * string * string * Android.Content.ComponentName * Android.OS.Bundle -&gt; Android.OS.UserHandle&#xA;override this.CreateAndInitializeUser : Android.Content.ComponentName * string * string * Android.Content.ComponentName * Android.OS.Bundle -&gt; Android.OS.UserHandle" Usage="devicePolicyManager.CreateAndInitializeUser (admin, name, ownerName, profileOwnerComponent, adminExtras)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createAndInitializeUser", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;Landroid/os/Bundle;)Landroid/os/UserHandle;", "GetCreateAndInitializeUser_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Landroid_content_ComponentName_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createAndInitializeUser", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;Landroid/os/Bundle;)Landroid/os/UserHandle;", "GetCreateAndInitializeUser_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Landroid_content_ComponentName_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.UserHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="ownerName" Type="System.String" />
        <Parameter Name="profileOwnerComponent" Type="Android.Content.ComponentName" />
        <Parameter Name="adminExtras" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="admin">Which <see cref="T:Android.App.Admin.DeviceAdminReceiver" /> this request is associated with.</param>
        <param name="name">the user's name</param>
        <param name="ownerName">the human readable name of the organisation associated with this DPM.</param>
        <param name="profileOwnerComponent">The <see cref="T:Android.App.Admin.DeviceAdminReceiver" /> that will be an active admin on
      the user.</param>
        <param name="adminExtras">Extras that will be passed to onEnable of the admin receiver
      on the new user.</param>
        <summary>Called by a device owner to create a user with the specified name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.OS.UserHandle" />
      </Docs>
    </Member>
    <Member MemberName="CreateAndManageUser">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateAndManageUser (admin As ComponentName, name As String, profileOwner As ComponentName, adminExtras As PersistableBundle, flags As UserManagementFlags) As UserHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::OS::UserHandle ^ CreateAndManageUser(Android::Content::ComponentName ^ admin, System::String ^ name, Android::Content::ComponentName ^ profileOwner, Android::OS::PersistableBundle ^ adminExtras, Android::App::Admin::UserManagementFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.UserHandle? CreateAndManageUser (Android.Content.ComponentName admin, string name, Android.Content.ComponentName profileOwner, Android.OS.PersistableBundle? adminExtras, Android.App.Admin.UserManagementFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.UserHandle CreateAndManageUser(class Android.Content.ComponentName admin, string name, class Android.Content.ComponentName profileOwner, class Android.OS.PersistableBundle adminExtras, valuetype Android.App.Admin.UserManagementFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.CreateAndManageUser(Android.Content.ComponentName,System.String,Android.Content.ComponentName,Android.OS.PersistableBundle,Android.App.Admin.UserManagementFlags)" />
      <MemberSignature Language="F#" Value="abstract member CreateAndManageUser : Android.Content.ComponentName * string * Android.Content.ComponentName * Android.OS.PersistableBundle * Android.App.Admin.UserManagementFlags -&gt; Android.OS.UserHandle&#xA;override this.CreateAndManageUser : Android.Content.ComponentName * string * Android.Content.ComponentName * Android.OS.PersistableBundle * Android.App.Admin.UserManagementFlags -&gt; Android.OS.UserHandle" Usage="devicePolicyManager.CreateAndManageUser (admin, name, profileOwner, adminExtras, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createAndManageUser", "(Landroid/content/ComponentName;Ljava/lang/String;Landroid/content/ComponentName;Landroid/os/PersistableBundle;I)Landroid/os/UserHandle;", "GetCreateAndManageUser_Landroid_content_ComponentName_Ljava_lang_String_Landroid_content_ComponentName_Landroid_os_PersistableBundle_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createAndManageUser", "(Landroid/content/ComponentName;Ljava/lang/String;Landroid/content/ComponentName;Landroid/os/PersistableBundle;I)Landroid/os/UserHandle;", "GetCreateAndManageUser_Landroid_content_ComponentName_Ljava_lang_String_Landroid_content_ComponentName_Landroid_os_PersistableBundle_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.UserHandle</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="profileOwner" Type="Android.Content.ComponentName" />
        <Parameter Name="adminExtras" Type="Android.OS.PersistableBundle">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.App.Admin.UserManagementFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="name">The user's name.</param>
        <param name="profileOwner">Which <c>DeviceAdminReceiver</c> will be profile owner. Has to be in the
                       same package as admin, otherwise no user is created and an
                       IllegalArgumentException is thrown.</param>
        <param name="adminExtras">Extras that will be passed to onEnable of the admin receiver on the new
                       user.</param>
        <param name="flags">
          <c>#SKIP_SETUP_WIZARD</c>, <c>#MAKE_USER_EPHEMERAL</c> and
                   <c>#LEAVE_ALL_SYSTEM_APPS_ENABLED</c> are supported.</param>
        <summary>Called by a device owner to create a user with the specified name and a given component of
            the calling package as profile owner.</summary>
        <returns>the <c>android.os.UserHandle</c> object for the created user, or <c>null</c> if the
                    user could not be created.</returns>
        <remarks>
          <para>Called by a device owner to create a user with the specified name and a given component of
            the calling package as profile owner. The UserHandle returned by this method should not be
            persisted as user handles are recycled as users are removed and created. If you need to
            persist an identifier for this user, use <c>UserManager#getSerialNumberForUser</c>. The new
            user will not be started in the background.</para>
          <para>admin is the <c>DeviceAdminReceiver</c> which is the device owner. profileOwner is also a
            DeviceAdminReceiver in the same package as admin, and will become the profile owner and will
            be registered as an active admin on the new user. The profile owner package will be installed
            on the new user.</para>
          <para>If the adminExtras are not null, they will be stored on the device until the user is started
            for the first time. Then the extras will be passed to the admin when onEnable is called.</para>
          <para>From <c>android.os.Build.VERSION_CODES#P</c> onwards, if targeting
            <c>android.os.Build.VERSION_CODES#P</c>, throws <c>UserOperationException</c> instead of
            returning <c>null</c> on failure.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#createAndManageUser(android.content.ComponentName,%20java.lang.String,%20android.content.ComponentName,%20android.os.PersistableBundle,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.createAndManageUser(android.content.ComponentName, java.lang.String, android.content.ComponentName, android.os.PersistableBundle, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateUser (admin As ComponentName, name As String) As UserHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::OS::UserHandle ^ CreateUser(Android::Content::ComponentName ^ admin, System::String ^ name);" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.UserHandle? CreateUser (Android.Content.ComponentName? admin, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.UserHandle CreateUser(class Android.Content.ComponentName admin, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.CreateUser(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member CreateUser : Android.Content.ComponentName * string -&gt; Android.OS.UserHandle&#xA;override this.CreateUser : Android.Content.ComponentName * string -&gt; Android.OS.UserHandle" Usage="devicePolicyManager.CreateUser (admin, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createUser", "(Landroid/content/ComponentName;Ljava/lang/String;)Landroid/os/UserHandle;", "GetCreateUser_Landroid_content_ComponentName_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createUser", "(Landroid/content/ComponentName;Ljava/lang/String;)Landroid/os/UserHandle;", "GetCreateUser_Landroid_content_ComponentName_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.UserHandle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <see cref="T:Android.App.Admin.DeviceAdminReceiver" /> this request is associated with.</param>
        <param name="name">the user's name</param>
        <summary>Called by a device owner to create a user with the specified name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.OS.UserHandle" />
      </Docs>
    </Member>
    <Member MemberName="CredentialManagerPolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CredentialManagerPolicy As PackagePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::App::Admin::PackagePolicy ^ CredentialManagerPolicy { Android::App::Admin::PackagePolicy ^ get(); void set(Android::App::Admin::PackagePolicy ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.PackagePolicy? CredentialManagerPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.Admin.PackagePolicy CredentialManagerPolicy" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.CredentialManagerPolicy" />
      <MemberSignature Language="F#" Value="member this.CredentialManagerPolicy : Android.App.Admin.PackagePolicy with get, set" Usage="Android.App.Admin.DevicePolicyManager.CredentialManagerPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCredentialManagerPolicy", "()Landroid/app/admin/PackagePolicy;", "GetGetCredentialManagerPolicyHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCredentialManagerPolicy", "()Landroid/app/admin/PackagePolicy;", "GetGetCredentialManagerPolicyHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setCredentialManagerPolicy", "(Landroid/app/admin/PackagePolicy;)V", "GetSetCredentialManagerPolicy_Landroid_app_admin_PackagePolicy_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setCredentialManagerPolicy", "(Landroid/app/admin/PackagePolicy;)V", "GetSetCredentialManagerPolicy_Landroid_app_admin_PackagePolicy_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PackagePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="policy">the policy to set, setting this value to <c>null</c> will allow all packages</param>
        <summary>Called by a device owner or profile owner of a managed profile to retrieve the credential
            manager policy. -or- Called by a device owner or profile owner of a managed profile to set the credential manager
            policy.</summary>
        <value>the current credential manager policy if null then this policy has not been
            configured.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Called by a device owner or profile owner of a managed profile to retrieve the credential
            manager policy.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getCredentialManagerPolicy()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getCredentialManagerPolicy()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Called by a device owner or profile owner of a managed profile to set the credential manager
            policy.</para>
          <para>Affects APIs exposed by <c>android.credentials.CredentialManager</c>.</para>
          <para>A <c>PackagePolicy#PACKAGE_POLICY_ALLOWLIST</c> policy type will limit the credential
            providers that the user can use to the list of packages in the policy.</para>
          <para>A <c>PackagePolicy#PACKAGE_POLICY_ALLOWLIST_AND_SYSTEM</c> policy type
            allows access from the OEM default credential providers and the allowlist of credential
            providers.</para>
          <para>A <c>PackagePolicy#PACKAGE_POLICY_BLOCKLIST</c> policy type will block the credential
            providers listed in the policy from being used by the user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setCredentialManagerPolicy(android.app.admin.PackagePolicy)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setCredentialManagerPolicy(android.app.admin.PackagePolicy)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentFailedPasswordAttempts">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentFailedPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CurrentFailedPasswordAttempts { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int CurrentFailedPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CurrentFailedPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.CurrentFailedPasswordAttempts" />
      <MemberSignature Language="F#" Value="member this.CurrentFailedPasswordAttempts : int" Usage="Android.App.Admin.DevicePolicyManager.CurrentFailedPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentFailedPasswordAttempts", "()I", "GetGetCurrentFailedPasswordAttemptsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentFailedPasswordAttempts", "()I", "GetGetCurrentFailedPasswordAttemptsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the number of times the user has failed at entering a password since that last
            successful password entry.</summary>
        <value>The number of times user has entered an incorrect password since the last correct
                    password entry.</value>
        <remarks>
          <para>Retrieve the number of times the user has failed at entering a password since that last
            successful password entry.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve the number of failed
            password attemts for the parent user.</para>
          <para>The calling device admin must have requested <c>DeviceAdminInfo#USES_POLICY_WATCH_LOGIN</c>
            to be able to call this method; if it has not, a security exception will be thrown.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always empty and this method always returns 0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getCurrentFailedPasswordAttempts()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getCurrentFailedPasswordAttempts()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DelegationAppRestrictions">
      <MemberSignature Language="VB.NET" Value="Public Const DelegationAppRestrictions As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DelegationAppRestrictions;" />
      <MemberSignature Language="C#" Value="public const string DelegationAppRestrictions;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DelegationAppRestrictions" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.DelegationAppRestrictions" />
      <MemberSignature Language="F#" Value="val mutable DelegationAppRestrictions : string" Usage="Android.App.Admin.DevicePolicyManager.DelegationAppRestrictions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DELEGATION_APP_RESTRICTIONS", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DELEGATION_APP_RESTRICTIONS", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegation of application restrictions management.</summary>
        <remarks>
          <para>Delegation of application restrictions management. This scope grants access to the
            <c>#setApplicationRestrictions</c> and <c>#getApplicationRestrictions</c> APIs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#DELEGATION_APP_RESTRICTIONS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.DELEGATION_APP_RESTRICTIONS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegationBlockUninstall">
      <MemberSignature Language="VB.NET" Value="Public Const DelegationBlockUninstall As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DelegationBlockUninstall;" />
      <MemberSignature Language="C#" Value="public const string DelegationBlockUninstall;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DelegationBlockUninstall" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.DelegationBlockUninstall" />
      <MemberSignature Language="F#" Value="val mutable DelegationBlockUninstall : string" Usage="Android.App.Admin.DevicePolicyManager.DelegationBlockUninstall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DELEGATION_BLOCK_UNINSTALL", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DELEGATION_BLOCK_UNINSTALL", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegation of application uninstall block.</summary>
        <remarks>
          <para>Delegation of application uninstall block. This scope grants access to the
            <c>#setUninstallBlocked</c> API.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#DELEGATION_BLOCK_UNINSTALL" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.DELEGATION_BLOCK_UNINSTALL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegationCertInstall">
      <MemberSignature Language="VB.NET" Value="Public Const DelegationCertInstall As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DelegationCertInstall;" />
      <MemberSignature Language="C#" Value="public const string DelegationCertInstall;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DelegationCertInstall" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.DelegationCertInstall" />
      <MemberSignature Language="F#" Value="val mutable DelegationCertInstall : string" Usage="Android.App.Admin.DevicePolicyManager.DelegationCertInstall" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DELEGATION_CERT_INSTALL", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DELEGATION_CERT_INSTALL", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegation of certificate installation and management.</summary>
        <remarks>
          <para>Delegation of certificate installation and management. This scope grants access to the
            <c>#getInstalledCaCerts</c>, <c>#hasCaCertInstalled</c>, <c>#installCaCert</c>,
            <c>#uninstallCaCert</c>, <c>#uninstallAllUserCaCerts</c> and <c>#installKeyPair</c> APIs.
            This scope also grants the ability to read identifiers that the delegating device owner or
            profile owner can obtain. See <c>#getEnrollmentSpecificId()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#DELEGATION_CERT_INSTALL" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.DELEGATION_CERT_INSTALL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegationCertSelection">
      <MemberSignature Language="VB.NET" Value="Public Const DelegationCertSelection As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DelegationCertSelection;" />
      <MemberSignature Language="C#" Value="public const string DelegationCertSelection;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DelegationCertSelection" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.DelegationCertSelection" />
      <MemberSignature Language="F#" Value="val mutable DelegationCertSelection : string" Usage="Android.App.Admin.DevicePolicyManager.DelegationCertSelection" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DELEGATION_CERT_SELECTION", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DELEGATION_CERT_SELECTION", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Grants access to selection of KeyChain certificates on behalf of requesting apps.</summary>
        <remarks>
          <para>Grants access to selection of KeyChain certificates on behalf of requesting apps.
            Once granted the app will start receiving
            <c>DelegatedAdminReceiver#onChoosePrivateKeyAlias</c>. The caller (PO/DO) will
            no longer receive <c>DeviceAdminReceiver#onChoosePrivateKeyAlias</c>.
            There can be at most one app that has this delegation.
            If another app already had delegated certificate selection access,
            it will lose the delegation when a new app is delegated.</para>
          <para>The delegaetd app can also call <c>#grantKeyPairToApp</c> and
            <c>#revokeKeyPairFromApp</c> to directly grant KeyCain keys to other apps.</para>
          <para>Can be granted by Device Owner or Profile Owner.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#DELEGATION_CERT_SELECTION" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.DELEGATION_CERT_SELECTION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegationEnableSystemApp">
      <MemberSignature Language="VB.NET" Value="Public Const DelegationEnableSystemApp As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DelegationEnableSystemApp;" />
      <MemberSignature Language="C#" Value="public const string DelegationEnableSystemApp;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DelegationEnableSystemApp" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.DelegationEnableSystemApp" />
      <MemberSignature Language="F#" Value="val mutable DelegationEnableSystemApp : string" Usage="Android.App.Admin.DevicePolicyManager.DelegationEnableSystemApp" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DELEGATION_ENABLE_SYSTEM_APP", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DELEGATION_ENABLE_SYSTEM_APP", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegation for enabling system apps.</summary>
        <remarks>
          <para>Delegation for enabling system apps. This scope grants access to the <c>#enableSystemApp</c>
            API.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#DELEGATION_ENABLE_SYSTEM_APP" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.DELEGATION_ENABLE_SYSTEM_APP</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegationInstallExistingPackage">
      <MemberSignature Language="VB.NET" Value="Public Const DelegationInstallExistingPackage As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DelegationInstallExistingPackage;" />
      <MemberSignature Language="C#" Value="public const string DelegationInstallExistingPackage;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DelegationInstallExistingPackage" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.DelegationInstallExistingPackage" />
      <MemberSignature Language="F#" Value="val mutable DelegationInstallExistingPackage : string" Usage="Android.App.Admin.DevicePolicyManager.DelegationInstallExistingPackage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DELEGATION_INSTALL_EXISTING_PACKAGE", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DELEGATION_INSTALL_EXISTING_PACKAGE", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegation for installing existing packages.</summary>
        <remarks>
          <para>Delegation for installing existing packages. This scope grants access to the
            <c>#installExistingPackage</c> API.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#DELEGATION_INSTALL_EXISTING_PACKAGE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.DELEGATION_INSTALL_EXISTING_PACKAGE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegationKeepUninstalledPackages">
      <MemberSignature Language="VB.NET" Value="Public Const DelegationKeepUninstalledPackages As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DelegationKeepUninstalledPackages;" />
      <MemberSignature Language="C#" Value="public const string DelegationKeepUninstalledPackages;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DelegationKeepUninstalledPackages" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.DelegationKeepUninstalledPackages" />
      <MemberSignature Language="F#" Value="val mutable DelegationKeepUninstalledPackages : string" Usage="Android.App.Admin.DevicePolicyManager.DelegationKeepUninstalledPackages" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DELEGATION_KEEP_UNINSTALLED_PACKAGES", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DELEGATION_KEEP_UNINSTALLED_PACKAGES", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegation of management of uninstalled packages.</summary>
        <remarks>
          <para>Delegation of management of uninstalled packages. This scope grants access to the
            <c>#setKeepUninstalledPackages</c> and <c>#getKeepUninstalledPackages</c> APIs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#DELEGATION_KEEP_UNINSTALLED_PACKAGES" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.DELEGATION_KEEP_UNINSTALLED_PACKAGES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegationNetworkLogging">
      <MemberSignature Language="VB.NET" Value="Public Const DelegationNetworkLogging As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DelegationNetworkLogging;" />
      <MemberSignature Language="C#" Value="public const string DelegationNetworkLogging;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DelegationNetworkLogging" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.DelegationNetworkLogging" />
      <MemberSignature Language="F#" Value="val mutable DelegationNetworkLogging : string" Usage="Android.App.Admin.DevicePolicyManager.DelegationNetworkLogging" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DELEGATION_NETWORK_LOGGING", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DELEGATION_NETWORK_LOGGING", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Grants access to <c>#setNetworkLoggingEnabled</c>, <c>#isNetworkLoggingEnabled</c> and
            <c>#retrieveNetworkLogs</c>.</summary>
        <remarks>
          <para>Grants access to <c>#setNetworkLoggingEnabled</c>, <c>#isNetworkLoggingEnabled</c> and
            <c>#retrieveNetworkLogs</c>. Once granted the delegated app will start receiving
            DelegatedAdminReceiver.onNetworkLogsAvailable() callback, and Device owner or Profile Owner
            will no longer receive the DeviceAdminReceiver.onNetworkLogsAvailable() callback.
            There can be at most one app that has this delegation.
            If another app already had delegated network logging access,
            it will lose the delegation when a new app is delegated.</para>
          <para>Device Owner can grant this access since Android 10. Profile Owner of a managed profile
            can grant this access since Android 12.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#DELEGATION_NETWORK_LOGGING" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.DELEGATION_NETWORK_LOGGING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegationPackageAccess">
      <MemberSignature Language="VB.NET" Value="Public Const DelegationPackageAccess As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DelegationPackageAccess;" />
      <MemberSignature Language="C#" Value="public const string DelegationPackageAccess;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DelegationPackageAccess" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.DelegationPackageAccess" />
      <MemberSignature Language="F#" Value="val mutable DelegationPackageAccess : string" Usage="Android.App.Admin.DevicePolicyManager.DelegationPackageAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DELEGATION_PACKAGE_ACCESS", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DELEGATION_PACKAGE_ACCESS", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegation of package access state.</summary>
        <remarks>
          <para>Delegation of package access state. This scope grants access to the
            <c>#isApplicationHidden</c>, <c>#setApplicationHidden</c>, <c>#isPackageSuspended</c>, and
            <c>#setPackagesSuspended</c> APIs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#DELEGATION_PACKAGE_ACCESS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.DELEGATION_PACKAGE_ACCESS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegationPermissionGrant">
      <MemberSignature Language="VB.NET" Value="Public Const DelegationPermissionGrant As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DelegationPermissionGrant;" />
      <MemberSignature Language="C#" Value="public const string DelegationPermissionGrant;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DelegationPermissionGrant" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.DelegationPermissionGrant" />
      <MemberSignature Language="F#" Value="val mutable DelegationPermissionGrant : string" Usage="Android.App.Admin.DevicePolicyManager.DelegationPermissionGrant" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DELEGATION_PERMISSION_GRANT", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DELEGATION_PERMISSION_GRANT", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Delegation of permission policy and permission grant state.</summary>
        <remarks>
          <para>Delegation of permission policy and permission grant state. This scope grants access to the
            <c>#setPermissionPolicy</c>, <c>#getPermissionGrantState</c>,
            and <c>#setPermissionGrantState</c> APIs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#DELEGATION_PERMISSION_GRANT" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.DELEGATION_PERMISSION_GRANT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegationSecurityLogging">
      <MemberSignature Language="VB.NET" Value="Public Const DelegationSecurityLogging As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DelegationSecurityLogging;" />
      <MemberSignature Language="C#" Value="public const string DelegationSecurityLogging;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DelegationSecurityLogging" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.DelegationSecurityLogging" />
      <MemberSignature Language="F#" Value="val mutable DelegationSecurityLogging : string" Usage="Android.App.Admin.DevicePolicyManager.DelegationSecurityLogging" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DELEGATION_SECURITY_LOGGING", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DELEGATION_SECURITY_LOGGING", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Grants access to <c>#setSecurityLoggingEnabled</c>, <c>#isSecurityLoggingEnabled</c>,
            <c>#retrieveSecurityLogs</c>, and <c>#retrievePreRebootSecurityLogs</c>.</summary>
        <remarks>
          <para>Grants access to <c>#setSecurityLoggingEnabled</c>, <c>#isSecurityLoggingEnabled</c>,
            <c>#retrieveSecurityLogs</c>, and <c>#retrievePreRebootSecurityLogs</c>. Once granted the
            delegated app will start receiving <c>DelegatedAdminReceiver#onSecurityLogsAvailable</c>
            callback, and Device owner or Profile Owner will no longer receive the
            <c>DeviceAdminReceiver#onSecurityLogsAvailable</c> callback. There can be at most one app
            that has this delegation. If another app already had delegated security logging access, it
            will lose the delegation when a new app is delegated.</para>
          <para>Can only be granted by Device Owner or Profile Owner of an organization-owned
            managed profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#DELEGATION_SECURITY_LOGGING" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.DELEGATION_SECURITY_LOGGING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceOwnerLockScreenInfo">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeviceOwnerLockScreenInfo As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeviceOwnerLockScreenInfo { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? DeviceOwnerLockScreenInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeviceOwnerLockScreenInfo" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.DeviceOwnerLockScreenInfo" />
      <MemberSignature Language="F#" Value="member this.DeviceOwnerLockScreenInfo : string" Usage="Android.App.Admin.DevicePolicyManager.DeviceOwnerLockScreenInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceOwnerLockScreenInfoFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DeviceOwnerLockScreenInfoFormatted As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Lang::ICharSequence ^ DeviceOwnerLockScreenInfoFormatted { Java::Lang::ICharSequence ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? DeviceOwnerLockScreenInfoFormatted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence DeviceOwnerLockScreenInfoFormatted" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.DeviceOwnerLockScreenInfoFormatted" />
      <MemberSignature Language="F#" Value="member this.DeviceOwnerLockScreenInfoFormatted : Java.Lang.ICharSequence" Usage="Android.App.Admin.DevicePolicyManager.DeviceOwnerLockScreenInfoFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDeviceOwnerLockScreenInfo", "()Ljava/lang/CharSequence;", "GetGetDeviceOwnerLockScreenInfoHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDeviceOwnerLockScreenInfo", "()Ljava/lang/CharSequence;", "GetGetDeviceOwnerLockScreenInfoHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>The device owner information. If it is not set returns <c>null</c>.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getDeviceOwnerLockScreenInfo()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getDeviceOwnerLockScreenInfo()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DevicePolicyManagementRoleHolderPackage">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DevicePolicyManagementRoleHolderPackage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DevicePolicyManagementRoleHolderPackage { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual string? DevicePolicyManagementRoleHolderPackage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DevicePolicyManagementRoleHolderPackage" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.DevicePolicyManagementRoleHolderPackage" />
      <MemberSignature Language="F#" Value="member this.DevicePolicyManagementRoleHolderPackage : string" Usage="Android.App.Admin.DevicePolicyManager.DevicePolicyManagementRoleHolderPackage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDevicePolicyManagementRoleHolderPackage", "()Ljava/lang/String;", "GetGetDevicePolicyManagementRoleHolderPackageHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDevicePolicyManagementRoleHolderPackage", "()Ljava/lang/String;", "GetGetDevicePolicyManagementRoleHolderPackageHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the package name of the device policy management role holder.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the package name of the device policy management role holder.</para>
          <para>If the device policy management role holder is not configured for this device, returns
            <c>null</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getDevicePolicyManagementRoleHolderPackage()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getDevicePolicyManagementRoleHolderPackage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSystemApp">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EnableSystemApp (admin As ComponentName, intent As Intent) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int EnableSystemApp(Android::Content::ComponentName ^ admin, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual int EnableSystemApp (Android.Content.ComponentName admin, Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 EnableSystemApp(class Android.Content.ComponentName admin, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.EnableSystemApp(Android.Content.ComponentName,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member EnableSystemApp : Android.Content.ComponentName * Android.Content.Intent -&gt; int&#xA;override this.EnableSystemApp : Android.Content.ComponentName * Android.Content.Intent -&gt; int" Usage="devicePolicyManager.EnableSystemApp (admin, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enableSystemApp", "(Landroid/content/ComponentName;Landroid/content/Intent;)I", "GetEnableSystemApp_Landroid_content_ComponentName_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enableSystemApp", "(Landroid/content/ComponentName;Landroid/content/Intent;)I", "GetEnableSystemApp_Landroid_content_ComponentName_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="intent" Type="Android.Content.Intent">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                       <c>null</c> if the caller is an enable system app delegate.</param>
        <param name="intent">An intent matching the app(s) to be installed. All apps that resolve for this
                       intent will be re-enabled in the calling profile.</param>
        <summary>Re-enable system apps by intent that were disabled by default when the user was initialized.</summary>
        <returns>int The number of activities that matched the intent and were installed.</returns>
        <remarks>
          <para>Re-enable system apps by intent that were disabled by default when the user was initialized.
            This function can be called by a device owner, profile owner, or by a delegate given the
            <c>#DELEGATION_ENABLE_SYSTEM_APP</c> scope via <c>#setDelegatedScopes</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#enableSystemApp(android.content.ComponentName,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.enableSystemApp(android.content.ComponentName, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableSystemApp">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnableSystemApp (admin As ComponentName, packageName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnableSystemApp(Android::Content::ComponentName ^ admin, System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual void EnableSystemApp (Android.Content.ComponentName admin, string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnableSystemApp(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.EnableSystemApp(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member EnableSystemApp : Android.Content.ComponentName * string -&gt; unit&#xA;override this.EnableSystemApp : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.EnableSystemApp (admin, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("enableSystemApp", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetEnableSystemApp_Landroid_content_ComponentName_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("enableSystemApp", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetEnableSystemApp_Landroid_content_ComponentName_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                       <c>null</c> if the caller is an enable system app delegate.</param>
        <param name="packageName">The package to be re-enabled in the calling profile.</param>
        <summary>Re-enable a system app that was disabled by default when the user was initialized.</summary>
        <returns>int The number of activities that matched the intent and were installed.</returns>
        <remarks>
          <para>Re-enable a system app that was disabled by default when the user was initialized. This
            function can be called by a device owner, profile owner, or by a delegate given the
            <c>#DELEGATION_ENABLE_SYSTEM_APP</c> scope via <c>#setDelegatedScopes</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#enableSystemApp(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.enableSystemApp(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnrollmentSpecificId">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EnrollmentSpecificId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EnrollmentSpecificId { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual string EnrollmentSpecificId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EnrollmentSpecificId" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.EnrollmentSpecificId" />
      <MemberSignature Language="F#" Value="member this.EnrollmentSpecificId : string" Usage="Android.App.Admin.DevicePolicyManager.EnrollmentSpecificId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEnrollmentSpecificId", "()Ljava/lang/String;", "GetGetEnrollmentSpecificIdHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEnrollmentSpecificId", "()Ljava/lang/String;", "GetGetEnrollmentSpecificIdHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns an enrollment-specific identifier of this device, which is guaranteed to be the same
            value for the same device, enrolled into the same organization by the same managing app.</summary>
        <value>A stable, enrollment-specific identifier.</value>
        <remarks>
          <para>Returns an enrollment-specific identifier of this device, which is guaranteed to be the same
            value for the same device, enrolled into the same organization by the same managing app.
            This identifier is high-entropy, useful for uniquely identifying individual devices within
            the same organisation.
            It is available both in a work profile and on a fully-managed device.
            The identifier would be consistent even if the work profile is removed and enrolled again
            (to the same organization), or the device is factory reset and re-enrolled.
            
            Can only be called by the Profile Owner or Device Owner, if the
            <c>#setOrganizationId(String)</c> was previously called.
            If <c>#setOrganizationId(String)</c> was not called, then the returned value will be an
            empty string.</para>
          <para>Note about access to device identifiers: a device owner, a profile owner of an
            organization-owned device or the delegated certificate installer (holding the
            <c>#DELEGATION_CERT_INSTALL</c> delegation) on such a device can still obtain hardware
            identifiers by calling e.g. <c>android.os.Build#getSerial()</c>, in addition to using
            this method. However, a profile owner on a personal (non organization-owned) device, or the
            delegated certificate installer on such a device, cannot obtain hardware identifiers anymore
            and must switch to using this method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getEnrollmentSpecificId()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getEnrollmentSpecificId()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraAddExplanation">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraAddExplanation As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraAddExplanation;" />
      <MemberSignature Language="C#" Value="public const string ExtraAddExplanation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraAddExplanation" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraAddExplanation" />
      <MemberSignature Language="F#" Value="val mutable ExtraAddExplanation : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraAddExplanation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_ADD_EXPLANATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_ADD_EXPLANATION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An optional CharSequence providing additional explanation for why the
            admin is being added.</summary>
        <remarks>
          <para>An optional CharSequence providing additional explanation for why the
            admin is being added.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_ADD_EXPLANATION" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_ADD_EXPLANATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="F:Android.App.Admin.DevicePolicyManager.ActionAddDeviceAdmin" />
      </Docs>
    </Member>
    <Member MemberName="ExtraDelegationScopes">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraDelegationScopes As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraDelegationScopes;" />
      <MemberSignature Language="C#" Value="public const string ExtraDelegationScopes;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraDelegationScopes" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraDelegationScopes" />
      <MemberSignature Language="F#" Value="val mutable ExtraDelegationScopes : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraDelegationScopes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_DELEGATION_SCOPES", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_DELEGATION_SCOPES", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An <c>ArrayList&lt;String&gt;</c> corresponding to the delegation scopes given to an app in the
            <c>#ACTION_APPLICATION_DELEGATION_SCOPES_CHANGED</c> broadcast.</summary>
        <remarks>
          <para>An <c>ArrayList&lt;String&gt;</c> corresponding to the delegation scopes given to an app in the
            <c>#ACTION_APPLICATION_DELEGATION_SCOPES_CHANGED</c> broadcast.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_DELEGATION_SCOPES" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_DELEGATION_SCOPES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraDeviceAdmin">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraDeviceAdmin As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraDeviceAdmin;" />
      <MemberSignature Language="C#" Value="public const string ExtraDeviceAdmin;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraDeviceAdmin" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraDeviceAdmin" />
      <MemberSignature Language="F#" Value="val mutable ExtraDeviceAdmin : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraDeviceAdmin" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_DEVICE_ADMIN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_DEVICE_ADMIN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The ComponentName of the administrator component.</summary>
        <remarks>
          <para>The ComponentName of the administrator component.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_DEVICE_ADMIN" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_DEVICE_ADMIN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="F:Android.App.Admin.DevicePolicyManager.ActionAddDeviceAdmin" />
      </Docs>
    </Member>
    <Member MemberName="ExtraDevicePasswordRequirementOnly">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraDevicePasswordRequirementOnly As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraDevicePasswordRequirementOnly;" />
      <MemberSignature Language="C#" Value="public const string ExtraDevicePasswordRequirementOnly;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraDevicePasswordRequirementOnly" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraDevicePasswordRequirementOnly" />
      <MemberSignature Language="F#" Value="val mutable ExtraDevicePasswordRequirementOnly : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraDevicePasswordRequirementOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_DEVICE_PASSWORD_REQUIREMENT_ONLY", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_DEVICE_PASSWORD_REQUIREMENT_ONLY", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A boolean extra for <c>#ACTION_SET_NEW_PARENT_PROFILE_PASSWORD</c> requesting that only
            device password requirement is enforced during the parent profile password enrolment flow.</summary>
        <remarks>
          <para>A boolean extra for <c>#ACTION_SET_NEW_PARENT_PROFILE_PASSWORD</c> requesting that only
            device password requirement is enforced during the parent profile password enrolment flow.</para>
          <para>Normally when enrolling password for the parent profile, both the device-wide password
            requirement (requirement set via <c>#getParentProfileInstance(ComponentName)</c> instance)
            and the profile password requirement are enforced, if the profile currently does not have a
            separate work challenge. By setting this to <c>true</c>, profile password requirement is
            explicitly disregarded.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_DEVICE_PASSWORD_REQUIREMENT_ONLY" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_DEVICE_PASSWORD_REQUIREMENT_ONLY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraPasswordComplexity">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraPasswordComplexity As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraPasswordComplexity;" />
      <MemberSignature Language="C#" Value="public const string ExtraPasswordComplexity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraPasswordComplexity" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraPasswordComplexity" />
      <MemberSignature Language="F#" Value="val mutable ExtraPasswordComplexity : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraPasswordComplexity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PASSWORD_COMPLEXITY", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PASSWORD_COMPLEXITY", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.REQUEST_PASSWORD_COMPLEXITY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.REQUEST_PASSWORD_COMPLEXITY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An integer indicating the complexity level of the new password an app would like the user to
            set when launching the action <c>#ACTION_SET_NEW_PASSWORD</c>.</summary>
        <remarks>
          <para>An integer indicating the complexity level of the new password an app would like the user to
            set when launching the action <c>#ACTION_SET_NEW_PASSWORD</c>.</para>
          <para>Must be one of
            &lt;ul&gt;
                &lt;li&gt;<c>#PASSWORD_COMPLEXITY_HIGH</c>&lt;li&gt;<c>#PASSWORD_COMPLEXITY_MEDIUM</c>&lt;li&gt;<c>#PASSWORD_COMPLEXITY_LOW</c>&lt;li&gt;<c>#PASSWORD_COMPLEXITY_NONE</c>&lt;/ul&gt;</para>
          <para>If an invalid value is used, it will be treated as <c>#PASSWORD_COMPLEXITY_NONE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PASSWORD_COMPLEXITY" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PASSWORD_COMPLEXITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningAccountToMigrate">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningAccountToMigrate As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningAccountToMigrate;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningAccountToMigrate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningAccountToMigrate" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningAccountToMigrate" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningAccountToMigrate : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningAccountToMigrate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_ACCOUNT_TO_MIGRATE", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_ACCOUNT_TO_MIGRATE", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An <c>android.accounts.Account</c> extra holding the account to migrate during managed
            profile provisioning.</summary>
        <remarks>
          <para>An <c>android.accounts.Account</c> extra holding the account to migrate during managed
            profile provisioning. If the account supplied is present in the primary user, it will be
            copied, along with its credentials to the managed profile and removed from the primary user.
            
            Use with <c>#ACTION_PROVISION_MANAGED_PROFILE</c>, with managed account provisioning, or
            return as an extra to the intent result from the <c>#ACTION_GET_PROVISIONING_MODE</c>
            activity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_ACCOUNT_TO_MIGRATE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_ACCOUNT_TO_MIGRATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningAdminExtrasBundle">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningAdminExtrasBundle As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningAdminExtrasBundle;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningAdminExtrasBundle;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningAdminExtrasBundle" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningAdminExtrasBundle" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningAdminExtrasBundle : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningAdminExtrasBundle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_ADMIN_EXTRAS_BUNDLE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_ADMIN_EXTRAS_BUNDLE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <c>android.os.Parcelable</c> extra of type <c>android.os.PersistableBundle</c> that
            allows a mobile device management application or NFC programmer application which starts
            managed provisioning to pass data to the management application instance after provisioning.</summary>
        <remarks>
          <para>A <c>android.os.Parcelable</c> extra of type <c>android.os.PersistableBundle</c> that
            allows a mobile device management application or NFC programmer application which starts
            managed provisioning to pass data to the management application instance after provisioning.</para>
          <para>If used with <c>#ACTION_PROVISION_MANAGED_PROFILE</c> it can be used by the application that
            sends the intent to pass data to itself on the newly created profile.
            If used with <c>#ACTION_PROVISION_MANAGED_DEVICE</c> it allows passing data to the same
            instance of the app on the primary user.
            Starting from <c>android.os.Build.VERSION_CODES#M</c>, if used with
            <c>#MIME_TYPE_PROVISIONING_NFC</c> as part of NFC managed device provisioning, the NFC
            message should contain a stringified <c>java.util.Properties</c> instance, whose string
            properties will be converted into a <c>android.os.PersistableBundle</c> and passed to the
            management application after provisioning.</para>
          <para>Admin apps will receive this extra in their <c>#ACTION_GET_PROVISIONING_MODE</c> and
            <c>#ACTION_ADMIN_POLICY_COMPLIANCE</c> intent handlers. Additionally, <c>#ACTION_GET_PROVISIONING_MODE</c> may also return this extra which will then be sent over to
            <c>#ACTION_ADMIN_POLICY_COMPLIANCE</c>, alongside the original values that were passed to
            <c>#ACTION_GET_PROVISIONING_MODE</c>.</para>
          <para>In both cases the application receives the data in
            <c>DeviceAdminReceiver#onProfileProvisioningComplete</c> via an intent with the action
            <c>DeviceAdminReceiver#ACTION_PROFILE_PROVISIONING_COMPLETE</c>. The bundle is not changed
            during the managed provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_ADMIN_EXTRAS_BUNDLE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_ADMIN_EXTRAS_BUNDLE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningAllowedProvisioningModes">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningAllowedProvisioningModes As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningAllowedProvisioningModes;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningAllowedProvisioningModes;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningAllowedProvisioningModes" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningAllowedProvisioningModes" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningAllowedProvisioningModes : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningAllowedProvisioningModes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_ALLOWED_PROVISIONING_MODES", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_ALLOWED_PROVISIONING_MODES", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An <c>ArrayList</c> of <c>Integer</c> extra specifying the allowed provisioning modes.</summary>
        <remarks>
          <para>An <c>ArrayList</c> of <c>Integer</c> extra specifying the allowed provisioning modes.</para>
          <para>This extra will be passed to the admin app's <c>#ACTION_GET_PROVISIONING_MODE</c>
            activity, whose result intent must contain <c>#EXTRA_PROVISIONING_MODE</c> set to one of
            the values in this array.</para>
          <para>If the value set to <c>#EXTRA_PROVISIONING_MODE</c> is not in the array,
            provisioning will fail.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_ALLOWED_PROVISIONING_MODES" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_ALLOWED_PROVISIONING_MODES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningAllowOffline">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningAllowOffline As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningAllowOffline;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningAllowOffline;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningAllowOffline" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningAllowOffline" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningAllowOffline : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningAllowOffline" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_ALLOW_OFFLINE", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_ALLOW_OFFLINE", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A boolean extra indicating whether offline provisioning is allowed.</summary>
        <remarks>
          <para>A boolean extra indicating whether offline provisioning is allowed.</para>
          <para>For the online provisioning flow, there will be an attempt to download and install
            the latest version of the device policy management role holder. The platform will then
            delegate provisioning to the device policy management role holder via role holder-specific
            provisioning actions.</para>
          <para>For the offline provisioning flow, the provisioning flow will always be handled by
            the platform.</para>
          <para>If this extra is set to <c>false</c>, the provisioning flow will enforce that an
            internet connection is established, which will start the online provisioning flow. If an
            internet connection cannot be established, provisioning will fail.</para>
          <para>If this extra is set to <c>true</c>, the provisioning flow will still try to connect to
            the internet, but if it fails it will start the offline provisioning flow.</para>
          <para>For T if this extra is set to <c>true</c>, the provisioning flow will be forced through
            the platform and there will be no attempt to download and install the device policy
            management role holder.</para>
          <para>The default value is <c>false</c>.</para>
          <para>This extra is respected when provided via the provisioning intent actions such as <c>#ACTION_PROVISION_MANAGED_PROFILE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_ALLOW_OFFLINE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_ALLOW_OFFLINE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDeviceAdminComponentName">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningDeviceAdminComponentName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningDeviceAdminComponentName;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDeviceAdminComponentName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDeviceAdminComponentName" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminComponentName" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningDeviceAdminComponentName : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminComponentName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_COMPONENT_NAME", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_COMPONENT_NAME", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A ComponentName extra indicating the device admin receiver of the mobile device management
            application that will be set as the profile owner or device owner and active admin.</summary>
        <remarks>
          <para>A ComponentName extra indicating the device admin receiver of the mobile device management
            application that will be set as the profile owner or device owner and active admin.</para>
          <para>If an application starts provisioning directly via an intent with action
            <c>#ACTION_PROVISION_MANAGED_PROFILE</c> or
            <c>#ACTION_PROVISION_MANAGED_DEVICE</c> the package name of this
            component has to match the package name of the application that started provisioning.</para>
          <para>This component is set as device owner and active admin when device owner provisioning is
            started by an intent with action <c>#ACTION_PROVISION_MANAGED_DEVICE</c> or by an NFC
            message containing an NFC record with MIME type
            <c>#MIME_TYPE_PROVISIONING_NFC</c>. For the NFC record, the component name must be
            flattened to a string, via <c>ComponentName#flattenToShortString()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_DEVICE_ADMIN_COMPONENT_NAME" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_COMPONENT_NAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDeviceAdminMinimumVersionCode">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningDeviceAdminMinimumVersionCode As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningDeviceAdminMinimumVersionCode;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDeviceAdminMinimumVersionCode;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDeviceAdminMinimumVersionCode" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminMinimumVersionCode" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningDeviceAdminMinimumVersionCode : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminMinimumVersionCode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_MINIMUM_VERSION_CODE", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_MINIMUM_VERSION_CODE", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An int extra holding a minimum required version code for the device admin package.</summary>
        <remarks>
          <para>An int extra holding a minimum required version code for the device admin package. If the
            device admin is already installed on the device, it will only be re-downloaded from
            <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION</c> if the version of the
            installed package is less than this version code.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_DEVICE_ADMIN_MINIMUM_VERSION_CODE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_MINIMUM_VERSION_CODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDeviceAdminPackageChecksum">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningDeviceAdminPackageChecksum As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningDeviceAdminPackageChecksum;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDeviceAdminPackageChecksum;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDeviceAdminPackageChecksum" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminPackageChecksum" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningDeviceAdminPackageChecksum : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminPackageChecksum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_CHECKSUM")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_CHECKSUM")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the URL-safe base64 encoded SHA-256 hash of the file at download
            location specified in <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION</c>.</summary>
        <remarks>
          <para>A String extra holding the URL-safe base64 encoded SHA-256 hash of the file at download
            location specified in <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION</c>.</para>
          <para>Either this extra or <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_SIGNATURE_CHECKSUM</c> must be
            present. The provided checksum must match the checksum of the file at the download
            location. If the checksum doesn't match an error will be shown to the user and the user will
            be asked to factory reset the device.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; for devices running <c>android.os.Build.VERSION_CODES#LOLLIPOP</c>
            and <c>android.os.Build.VERSION_CODES#LOLLIPOP_MR1</c> only SHA-1 hash is supported.
            Starting from <c>android.os.Build.VERSION_CODES#M</c>, this parameter accepts SHA-256 in
            addition to SHA-1. From <c>android.os.Build.VERSION_CODES#Q</c>, only SHA-256 hash is
            supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_CHECKSUM" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_CHECKSUM</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDeviceAdminPackageDownloadCookieHeader">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningDeviceAdminPackageDownloadCookieHeader As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningDeviceAdminPackageDownloadCookieHeader;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDeviceAdminPackageDownloadCookieHeader;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDeviceAdminPackageDownloadCookieHeader" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminPackageDownloadCookieHeader" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningDeviceAdminPackageDownloadCookieHeader : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminPackageDownloadCookieHeader" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_COOKIE_HEADER")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_COOKIE_HEADER")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding a http cookie header which should be used in the http request to the
            url specified in <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION</c>.</summary>
        <remarks>
          <para>A String extra holding a http cookie header which should be used in the http request to the
            url specified in <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_COOKIE_HEADER" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_COOKIE_HEADER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDeviceAdminPackageDownloadLocation">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningDeviceAdminPackageDownloadLocation As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningDeviceAdminPackageDownloadLocation;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDeviceAdminPackageDownloadLocation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDeviceAdminPackageDownloadLocation" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminPackageDownloadLocation" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningDeviceAdminPackageDownloadLocation : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminPackageDownloadLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding a url that specifies the download location of the device admin
            package.</summary>
        <remarks>
          <para>A String extra holding a url that specifies the download location of the device admin
            package. When not provided it is assumed that the device admin package is already installed.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDeviceAdminPackageName">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningDeviceAdminPackageName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningDeviceAdminPackageName;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDeviceAdminPackageName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDeviceAdminPackageName" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminPackageName" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningDeviceAdminPackageName : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminPackageName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the package name of the mobile device management application that
            will be set as the profile owner or device owner.</summary>
        <remarks>
          <para>A String extra holding the package name of the mobile device management application that
            will be set as the profile owner or device owner.</para>
          <para>If an application starts provisioning directly via an intent with action
            <c>#ACTION_PROVISION_MANAGED_PROFILE</c> this package has to match the package name of the
            application that started provisioning. The package will be set as profile owner in that case.</para>
          <para>This package is set as device owner when device owner provisioning is started by an NFC
            message containing an NFC record with MIME type <c>#MIME_TYPE_PROVISIONING_NFC</c>.</para>
          <para>When this extra is set, the application must have exactly one device admin receiver.
            This receiver will be set as the profile or device owner and active admin.</para>
          <para>This member is deprecated. Use <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_COMPONENT_NAME</c>. This extra is still
            supported, but only if there is only one device admin receiver in the package that requires
            the permission <c>android.Manifest.permission#BIND_DEVICE_ADMIN</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.App.Admin.DeviceAdminReceiver" />
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDeviceAdminSignatureChecksum">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningDeviceAdminSignatureChecksum As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningDeviceAdminSignatureChecksum;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDeviceAdminSignatureChecksum;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDeviceAdminSignatureChecksum" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminSignatureChecksum" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningDeviceAdminSignatureChecksum : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningDeviceAdminSignatureChecksum" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_SIGNATURE_CHECKSUM", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_DEVICE_ADMIN_SIGNATURE_CHECKSUM", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the URL-safe base64 encoded SHA-256 checksum of any signature of the
            android package archive at the download location specified in <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION</c>.</summary>
        <remarks>
          <para>A String extra holding the URL-safe base64 encoded SHA-256 checksum of any signature of the
            android package archive at the download location specified in <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION</c>.</para>
          <para>The signatures of an android package archive can be obtained using
            <c>android.content.pm.PackageManager#getPackageArchiveInfo</c> with flag
            <c>android.content.pm.PackageManager#GET_SIGNATURES</c>.</para>
          <para>Either this extra or <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_CHECKSUM</c> must be
            present. The provided checksum must match the checksum of any signature of the file at
            the download location. If the checksum does not match an error will be shown to the user and
            the user will be asked to factory reset the device.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_DEVICE_ADMIN_SIGNATURE_CHECKSUM" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DEVICE_ADMIN_SIGNATURE_CHECKSUM</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDisclaimerContent">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningDisclaimerContent As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningDisclaimerContent;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDisclaimerContent;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDisclaimerContent" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningDisclaimerContent" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningDisclaimerContent : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningDisclaimerContent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_DISCLAIMER_CONTENT", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_DISCLAIMER_CONTENT", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <c>Uri</c> extra pointing to disclaimer content.</summary>
        <remarks>
          <para>A <c>Uri</c> extra pointing to disclaimer content.
            
            &lt;h5&gt;The following URI schemes are accepted:&lt;/h5&gt;
            &lt;ul&gt;
            &lt;li&gt;content (<c>android.content.ContentResolver#SCHEME_CONTENT</c>)&lt;/li&gt;
            &lt;li&gt;android.resource (<c>android.content.ContentResolver#SCHEME_ANDROID_RESOURCE</c>)&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>Styled text is supported in the disclaimer content. The content is parsed by
            <c>android.text.Html#fromHtml(String)</c> and displayed in a
            <c>android.widget.TextView</c>.</para>
          <para>If a <c>content:</c> URI is passed, URI is passed, the intent should have the flag
            <c>Intent#FLAG_GRANT_READ_URI_PERMISSION</c> and the uri should be added to the
            <c>android.content.ClipData</c> of the intent too.</para>
          <para>Use in Bundle <c>#EXTRA_PROVISIONING_DISCLAIMERS</c></para>
          <para>System app, i.e. application with <c>ApplicationInfo#FLAG_SYSTEM</c>, can also insert a
            disclaimer by declaring an application-level meta-data in <c>AndroidManifest.xml</c>.
            Must use it with <c>#EXTRA_PROVISIONING_DISCLAIMER_HEADER</c>. Here is the example:</para>
          <code lang="text/java">&amp;lt;meta-data
                 android:name="android.app.extra.PROVISIONING_DISCLAIMER_CONTENT"
                 android:resource="@string/disclaimer_content"
            /&amp;gt;</code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_DISCLAIMER_CONTENT" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DISCLAIMER_CONTENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDisclaimerHeader">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningDisclaimerHeader As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningDisclaimerHeader;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDisclaimerHeader;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDisclaimerHeader" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningDisclaimerHeader" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningDisclaimerHeader : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningDisclaimerHeader" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_DISCLAIMER_HEADER", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_DISCLAIMER_HEADER", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra of localized disclaimer header.</summary>
        <remarks>
          <para>A String extra of localized disclaimer header.</para>
          <para>The extra is typically the company name of mobile device management application (MDM)
            or the organization name.</para>
          <para>Use in Bundle <c>#EXTRA_PROVISIONING_DISCLAIMERS</c></para>
          <para>System app, i.e. application with <c>ApplicationInfo#FLAG_SYSTEM</c>, can also insert a
            disclaimer by declaring an application-level meta-data in <c>AndroidManifest.xml</c>.
            Must use it with <c>#EXTRA_PROVISIONING_DISCLAIMER_CONTENT</c>. Here is the example:</para>
          <code lang="text/java">&amp;lt;meta-data
                 android:name="android.app.extra.PROVISIONING_DISCLAIMER_HEADER"
                 android:resource="@string/disclaimer_header"
            /&amp;gt;</code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_DISCLAIMER_HEADER" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DISCLAIMER_HEADER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningDisclaimers">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningDisclaimers As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningDisclaimers;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningDisclaimers;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningDisclaimers" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningDisclaimers" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningDisclaimers : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningDisclaimers" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_DISCLAIMERS", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_DISCLAIMERS", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <c>Bundle</c>[] extra consisting of list of disclaimer headers and disclaimer contents.</summary>
        <remarks>
          <para>A <c>Bundle</c>[] extra consisting of list of disclaimer headers and disclaimer contents.
            Each <c>Bundle</c> must have both <c>#EXTRA_PROVISIONING_DISCLAIMER_HEADER</c>
            as disclaimer header, and <c>#EXTRA_PROVISIONING_DISCLAIMER_CONTENT</c> as disclaimer
            content.</para>
          <para>The extra typically contains one disclaimer from the company of mobile device
            management application (MDM), and one disclaimer from the organization.</para>
          <para>Call <c>Bundle#putParcelableArray(String, Parcelable[])</c> to put the <c>Bundle</c>[]</para>
          <para>Maximum 3 key-value pairs can be specified. The rest will be ignored.</para>
          <para>Can be used in an intent with action <c>#ACTION_PROVISION_MANAGED_PROFILE</c>. This
            extra can also be returned by the admin app when performing the admin-integrated
            provisioning flow as a result of the <c>#ACTION_GET_PROVISIONING_MODE</c> activity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_DISCLAIMERS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_DISCLAIMERS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningEmailAddress">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningEmailAddress As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningEmailAddress;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningEmailAddress;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningEmailAddress" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningEmailAddress" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningEmailAddress : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningEmailAddress" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_EMAIL_ADDRESS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_EMAIL_ADDRESS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This member is deprecated.</summary>
        <remarks>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#O</c>, never used while provisioning the
            device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_EMAIL_ADDRESS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_EMAIL_ADDRESS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningImei">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningImei As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningImei;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningImei;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningImei" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningImei" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningImei : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningImei" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_IMEI", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_IMEI", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A string extra holding the IMEI (International Mobile Equipment Identity) of the device.</summary>
        <remarks>
          <para>A string extra holding the IMEI (International Mobile Equipment Identity) of the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_IMEI" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_IMEI</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningKeepAccountOnMigration">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningKeepAccountOnMigration As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningKeepAccountOnMigration;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningKeepAccountOnMigration;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningKeepAccountOnMigration" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningKeepAccountOnMigration" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningKeepAccountOnMigration : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningKeepAccountOnMigration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_KEEP_ACCOUNT_ON_MIGRATION", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_KEEP_ACCOUNT_ON_MIGRATION", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Boolean extra to indicate that the migrated account should be kept.</summary>
        <remarks>
          <para>Boolean extra to indicate that the migrated account should be kept. This is used in
            conjunction with <c>#EXTRA_PROVISIONING_ACCOUNT_TO_MIGRATE</c>. If it's set to <c>true</c>,
            the account will not be removed from the primary user after it is migrated to the newly
            created user or profile.</para>
          <para>Defaults to <c>false</c></para>
          <para>Use with <c>#ACTION_PROVISION_MANAGED_PROFILE</c> or set as an extra to the
            intent result of the <c>#ACTION_GET_PROVISIONING_MODE</c> activity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_KEEP_ACCOUNT_ON_MIGRATION" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_KEEP_ACCOUNT_ON_MIGRATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningKeepScreenOn">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningKeepScreenOn As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningKeepScreenOn;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningKeepScreenOn;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningKeepScreenOn" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningKeepScreenOn" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningKeepScreenOn : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningKeepScreenOn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_KEEP_SCREEN_ON", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_KEEP_SCREEN_ON", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <c>boolean</c> flag that indicates whether the screen should be on throughout the
            provisioning flow.</summary>
        <remarks>
          <para>A <c>boolean</c> flag that indicates whether the screen should be on throughout the
            provisioning flow.</para>
          <para>This extra can either be passed as an extra to the <c>#ACTION_PROVISION_MANAGED_PROFILE</c> intent, or it can be returned by the
            admin app when performing the admin-integrated provisioning flow as a result of the
            <c>#ACTION_GET_PROVISIONING_MODE</c> activity.</para>
          <para>This member is deprecated. from <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, the flag wouldn't
            be functional. The screen is kept on throughout the provisioning flow.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_KEEP_SCREEN_ON" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_KEEP_SCREEN_ON</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningLeaveAllSystemAppsEnabled">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningLeaveAllSystemAppsEnabled As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningLeaveAllSystemAppsEnabled;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningLeaveAllSystemAppsEnabled;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningLeaveAllSystemAppsEnabled" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningLeaveAllSystemAppsEnabled" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningLeaveAllSystemAppsEnabled : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningLeaveAllSystemAppsEnabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_LEAVE_ALL_SYSTEM_APPS_ENABLED", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_LEAVE_ALL_SYSTEM_APPS_ENABLED", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Boolean extra that can be used by the mobile device management application to skip the
            disabling of system apps during provisioning when set to <c>true</c>.</summary>
        <remarks>
          <para>A Boolean extra that can be used by the mobile device management application to skip the
            disabling of system apps during provisioning when set to <c>true</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c>, an intent with action
            <c>#ACTION_PROVISION_MANAGED_PROFILE</c> that starts profile owner provisioning or
            set as an extra to the intent result of the <c>#ACTION_GET_PROVISIONING_MODE</c> activity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_LEAVE_ALL_SYSTEM_APPS_ENABLED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_LEAVE_ALL_SYSTEM_APPS_ENABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningLocale">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningLocale As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningLocale;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningLocale;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningLocale" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningLocale" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningLocale : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningLocale" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_LOCALE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_LOCALE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the <c>java.util.Locale</c> that the device will be set to.</summary>
        <remarks>
          <para>A String extra holding the <c>java.util.Locale</c> that the device will be set to.
            Format: xx_yy, where xx is the language code, and yy the country code.</para>
          <para>Use only for device owner provisioning. This extra can be returned by the admin app when
            performing the admin-integrated provisioning flow as a result of the <c>#ACTION_GET_PROVISIONING_MODE</c> activity.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_LOCALE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_LOCALE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningLocalTime">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningLocalTime As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningLocalTime;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningLocalTime;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningLocalTime" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningLocalTime" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningLocalTime : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningLocalTime" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_LOCAL_TIME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_LOCAL_TIME")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A Long extra holding the wall clock time (in milliseconds) to be set on the device's
            <c>android.app.AlarmManager</c>.</summary>
        <remarks>
          <para>A Long extra holding the wall clock time (in milliseconds) to be set on the device's
            <c>android.app.AlarmManager</c>.</para>
          <para>Use only for device owner provisioning. This extra can be returned by the admin app when
            performing the admin-integrated provisioning flow as a result of the <c>#ACTION_GET_PROVISIONING_MODE</c> activity.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_LOCAL_TIME" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_LOCAL_TIME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningLogoUri">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningLogoUri As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningLogoUri;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningLogoUri;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningLogoUri" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningLogoUri" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningLogoUri : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningLogoUri" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_LOGO_URI", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_LOGO_URI", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <c>Uri</c> extra pointing to a logo image.</summary>
        <remarks>
          <para>A <c>Uri</c> extra pointing to a logo image. This image will be shown during the
            provisioning. If this extra is not passed, a default image will be shown.
            &lt;h5&gt;The following URI schemes are accepted:&lt;/h5&gt;
            &lt;ul&gt;
            &lt;li&gt;content (<c>android.content.ContentResolver#SCHEME_CONTENT</c>)&lt;/li&gt;
            &lt;li&gt;android.resource (<c>android.content.ContentResolver#SCHEME_ANDROID_RESOURCE</c>)&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>It is the responsibility of the caller to provide an image with a reasonable
            pixel density for the device.</para>
          <para>If a content: URI is passed, the intent should have the flag
            <c>Intent#FLAG_GRANT_READ_URI_PERMISSION</c> and the uri should be added to the
            <c>android.content.ClipData</c> of the intent too.</para>
          <para>Use in an intent with action <c>#ACTION_PROVISION_MANAGED_PROFILE</c> or
            <c>#ACTION_PROVISION_MANAGED_DEVICE</c></para>
          <para>This member is deprecated. Logo customization is no longer supported in the provisioning flow.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_LOGO_URI" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_LOGO_URI</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningMainColor">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningMainColor As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningMainColor;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningMainColor;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningMainColor" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningMainColor" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningMainColor : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningMainColor" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_MAIN_COLOR", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_MAIN_COLOR", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A integer extra indicating the predominant color to show during the provisioning.</summary>
        <remarks>
          <para>A integer extra indicating the predominant color to show during the provisioning.
            Refer to <c>android.graphics.Color</c> for how the color is represented.</para>
          <para>Use with <c>#ACTION_PROVISION_MANAGED_PROFILE</c> or
            <c>#ACTION_PROVISION_MANAGED_DEVICE</c>.</para>
          <para>This member is deprecated. Color customization is no longer supported in the provisioning flow.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_MAIN_COLOR" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_MAIN_COLOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningMode">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningMode As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningMode;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningMode;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningMode" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningMode" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningMode : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningMode" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_MODE", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_MODE", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An intent extra holding the provisioning mode returned by the administrator.</summary>
        <remarks>
          <para>An intent extra holding the provisioning mode returned by the administrator.
            The value of this extra must be one of the values provided in <c>#EXTRA_PROVISIONING_ALLOWED_PROVISIONING_MODES</c>, which is provided as an intent extra to
            the admin app's <c>#ACTION_GET_PROVISIONING_MODE</c> activity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_MODE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_MODE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningSensorsPermissionGrantOptOut">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningSensorsPermissionGrantOptOut As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningSensorsPermissionGrantOptOut;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningSensorsPermissionGrantOptOut;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningSensorsPermissionGrantOptOut" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningSensorsPermissionGrantOptOut" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningSensorsPermissionGrantOptOut : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningSensorsPermissionGrantOptOut" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_SENSORS_PERMISSION_GRANT_OPT_OUT", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_SENSORS_PERMISSION_GRANT_OPT_OUT", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A boolean extra indicating the admin of a fully-managed device opts out of controlling
            permission grants for sensor-related permissions,
            see <c>#setPermissionGrantState(ComponentName, String, String, int)</c>.</summary>
        <remarks>
          <para>A boolean extra indicating the admin of a fully-managed device opts out of controlling
            permission grants for sensor-related permissions,
            see <c>#setPermissionGrantState(ComponentName, String, String, int)</c>.
            
            The default for this extra is <c>false</c> - by default, the admin of a fully-managed
            device has the ability to grant sensors-related permissions.</para>
          <para>Use only for device owner provisioning. This extra can be returned by the
            admin app when performing the admin-integrated provisioning flow as a result of the
            <c>#ACTION_GET_PROVISIONING_MODE</c> activity.</para>
          <para>This extra may also be provided to the admin app via an intent extra for <c>#ACTION_GET_PROVISIONING_MODE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_SENSORS_PERMISSION_GRANT_OPT_OUT" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_SENSORS_PERMISSION_GRANT_OPT_OUT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningSerialNumber">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningSerialNumber As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningSerialNumber;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningSerialNumber;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningSerialNumber" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningSerialNumber" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningSerialNumber : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningSerialNumber" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_SERIAL_NUMBER", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_SERIAL_NUMBER", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A string extra holding the serial number of the device.</summary>
        <remarks>
          <para>A string extra holding the serial number of the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_SERIAL_NUMBER" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_SERIAL_NUMBER</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningShouldLaunchResultIntent">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningShouldLaunchResultIntent As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningShouldLaunchResultIntent;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningShouldLaunchResultIntent;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningShouldLaunchResultIntent" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningShouldLaunchResultIntent" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningShouldLaunchResultIntent : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningShouldLaunchResultIntent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_SHOULD_LAUNCH_RESULT_INTENT", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_SHOULD_LAUNCH_RESULT_INTENT", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A boolean extra that determines whether the provisioning flow should launch the resulting
            launch intent, if one is supplied by the device policy management role holder via <c>#EXTRA_RESULT_LAUNCH_INTENT</c>.</summary>
        <remarks>
          <para>A boolean extra that determines whether the provisioning flow should launch the resulting
            launch intent, if one is supplied by the device policy management role holder via <c>#EXTRA_RESULT_LAUNCH_INTENT</c>. Default value is <c>false</c>.</para>
          <para>If <c>true</c>, the resulting intent will be launched by the provisioning flow, if one
            is supplied by the device policy management role holder.</para>
          <para>If <c>false</c>, the resulting intent will be returned as <c>#EXTRA_RESULT_LAUNCH_INTENT</c> to the provisioning initiator, if one is supplied by the device
            manager role holder. It will be the responsibility of the provisioning initiator to launch
            this <c>Intent</c> after provisioning completes.</para>
          <para>This extra is respected when provided via the provisioning intent actions such as <c>#ACTION_PROVISION_MANAGED_PROFILE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_SHOULD_LAUNCH_RESULT_INTENT" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_SHOULD_LAUNCH_RESULT_INTENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningSkipEducationScreens">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningSkipEducationScreens As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningSkipEducationScreens;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningSkipEducationScreens;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningSkipEducationScreens" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningSkipEducationScreens" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningSkipEducationScreens : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningSkipEducationScreens" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_SKIP_EDUCATION_SCREENS", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_SKIP_EDUCATION_SCREENS", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A boolean extra indicating if the education screens from the provisioning flow should be
            skipped.</summary>
        <remarks>
          <para>A boolean extra indicating if the education screens from the provisioning flow should be
            skipped. If unspecified, defaults to <c>false</c>.</para>
          <para>This extra can be set in the following ways:
            &lt;ul&gt;
            &lt;li&gt;By the admin app when performing the admin-integrated
            provisioning flow as a result of the <c>#ACTION_GET_PROVISIONING_MODE</c> activity&lt;/li&gt;
            &lt;li&gt;For managed account enrollment&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>If the education screens are skipped, it is the admin application's responsibility
            to display its own user education screens.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_SKIP_EDUCATION_SCREENS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_SKIP_EDUCATION_SCREENS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningSkipEncryption">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningSkipEncryption As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningSkipEncryption;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningSkipEncryption;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningSkipEncryption" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningSkipEncryption" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningSkipEncryption : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningSkipEncryption" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_SKIP_ENCRYPTION", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_SKIP_ENCRYPTION", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A boolean extra indicating whether device encryption can be skipped as part of device owner
            or managed profile provisioning.</summary>
        <remarks>
          <para>A boolean extra indicating whether device encryption can be skipped as part of device owner
            or managed profile provisioning.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> or an intent with action
            <c>#ACTION_PROVISION_MANAGED_DEVICE</c> that starts device owner provisioning.</para>
          <para>From <c>android.os.Build.VERSION_CODES#N</c> onwards, this is also supported for an
            intent with action <c>#ACTION_PROVISION_MANAGED_PROFILE</c>.</para>
          <para>This extra can also be returned by the admin app when performing the admin-integrated
            provisioning flow as a result of the <c>#ACTION_GET_PROVISIONING_MODE</c> activity.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_SKIP_ENCRYPTION" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_SKIP_ENCRYPTION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningSkipUserConsent">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningSkipUserConsent As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningSkipUserConsent;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningSkipUserConsent;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningSkipUserConsent" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningSkipUserConsent" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningSkipUserConsent : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningSkipUserConsent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_SKIP_USER_CONSENT", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_SKIP_USER_CONSENT", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A boolean extra indicating if the user consent steps from the provisioning flow should be
            skipped.</summary>
        <remarks>
          <para>A boolean extra indicating if the user consent steps from the provisioning flow should be
            skipped. If unspecified, defaults to <c>false</c>.
            
            It can only be used by an existing device owner trying to create a managed profile via
            <c>#ACTION_PROVISION_MANAGED_PROFILE</c>. Otherwise it is ignored.</para>
          <para>This member is deprecated. this extra is no longer relevant as device owners cannot create managed profiles</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_SKIP_USER_CONSENT" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_SKIP_USER_CONSENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningTimeZone">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningTimeZone As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningTimeZone;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningTimeZone;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningTimeZone" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningTimeZone" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningTimeZone : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningTimeZone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_TIME_ZONE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_TIME_ZONE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the time zone <c>android.app.AlarmManager</c> that the device
            will be set to.</summary>
        <remarks>
          <para>A String extra holding the time zone <c>android.app.AlarmManager</c> that the device
            will be set to.</para>
          <para>Use only for device owner provisioning. This extra can be returned by the admin app when
            performing the admin-integrated provisioning flow as a result of the <c>#ACTION_GET_PROVISIONING_MODE</c> activity.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_TIME_ZONE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_TIME_ZONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningUseMobileData">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningUseMobileData As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningUseMobileData;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningUseMobileData;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningUseMobileData" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningUseMobileData" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningUseMobileData : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningUseMobileData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_USE_MOBILE_DATA", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_USE_MOBILE_DATA", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A boolean extra indicating if mobile data should be used during the provisioning flow
            for downloading the admin app.</summary>
        <remarks>
          <para>A boolean extra indicating if mobile data should be used during the provisioning flow
            for downloading the admin app. If <c>#EXTRA_PROVISIONING_WIFI_SSID</c> is also specified,
            wifi network will be used instead.</para>
          <para>Default value is <c>false</c>.</para>
          <para>If this extra is set to <c>true</c> and <c>#EXTRA_PROVISIONING_WIFI_SSID</c> is not
            specified, this extra has different behaviour depending on the way provisioning is triggered:
            &lt;ul&gt;
            &lt;li&gt;
                For provisioning started via a QR code or an NFC tag, mobile data is always used for
                downloading the admin app.
            &lt;/li&gt;
            &lt;li&gt;
                For all other provisioning methods, a mobile data connection check is made at the start
                of provisioning. If mobile data is connected at that point, the admin app download will
                happen using mobile data. If mobile data is not connected at that point, the end-user
                will be asked to pick a wifi network and the admin app download will proceed over wifi.
            &lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_USE_MOBILE_DATA" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_USE_MOBILE_DATA</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiAnonymousIdentity">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiAnonymousIdentity As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiAnonymousIdentity;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiAnonymousIdentity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiAnonymousIdentity" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiAnonymousIdentity" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiAnonymousIdentity : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiAnonymousIdentity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_ANONYMOUS_IDENTITY", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_ANONYMOUS_IDENTITY", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The anonymous identity of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</summary>
        <remarks>
          <para>The anonymous identity of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>. This is
            only used if the <c>#EXTRA_PROVISIONING_WIFI_SECURITY_TYPE</c> is <c>EAP</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_ANONYMOUS_IDENTITY" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_ANONYMOUS_IDENTITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiCaCertificate">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiCaCertificate As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiCaCertificate;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiCaCertificate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiCaCertificate" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiCaCertificate" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiCaCertificate : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiCaCertificate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_CA_CERTIFICATE", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_CA_CERTIFICATE", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The CA certificate of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</summary>
        <remarks>
          <para>The CA certificate of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>. This should
            be an X.509 certificate Base64 encoded DER format, ie. PEM representation of a certificate
            without header, footer and line breaks. <see href="https://tools.ietf.org/html/rfc7468"> More information</see> This is only
            used if the <c>#EXTRA_PROVISIONING_WIFI_SECURITY_TYPE</c> is <c>EAP</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_CA_CERTIFICATE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_CA_CERTIFICATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiDomain">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiDomain As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiDomain;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiDomain;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiDomain" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiDomain" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiDomain : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiDomain" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_DOMAIN", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_DOMAIN", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The domain of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</summary>
        <remarks>
          <para>The domain of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>. This is only used if
            the <c>#EXTRA_PROVISIONING_WIFI_SECURITY_TYPE</c> is <c>EAP</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_DOMAIN" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_DOMAIN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiEapMethod">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiEapMethod As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiEapMethod;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiEapMethod;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiEapMethod" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiEapMethod" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiEapMethod : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiEapMethod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_EAP_METHOD", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_EAP_METHOD", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The EAP method of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>
            and could be one of <c>PEAP</c>, <c>TLS</c>, <c>TTLS</c>, <c>PWD</c>, <c>SIM</c>,
            <c>AKA</c> or <c>AKA_PRIME</c>.</summary>
        <remarks>
          <para>The EAP method of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>
            and could be one of <c>PEAP</c>, <c>TLS</c>, <c>TTLS</c>, <c>PWD</c>, <c>SIM</c>,
            <c>AKA</c> or <c>AKA_PRIME</c>. This is only used if the
            <c>#EXTRA_PROVISIONING_WIFI_SECURITY_TYPE</c> is <c>EAP</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_EAP_METHOD" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_EAP_METHOD</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiHidden">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiHidden As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiHidden;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiHidden;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiHidden" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiHidden" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiHidden : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiHidden" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_HIDDEN")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_HIDDEN")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A boolean extra indicating whether the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>
            is hidden or not.</summary>
        <remarks>
          <para>A boolean extra indicating whether the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>
            is hidden or not.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_HIDDEN" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_HIDDEN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiIdentity">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiIdentity As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiIdentity;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiIdentity;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiIdentity" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiIdentity" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiIdentity : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiIdentity" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_IDENTITY", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_IDENTITY", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The identity of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</summary>
        <remarks>
          <para>The identity of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>. This is only used
            if the <c>#EXTRA_PROVISIONING_WIFI_SECURITY_TYPE</c> is <c>EAP</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_IDENTITY" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_IDENTITY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiPacUrl">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiPacUrl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiPacUrl;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiPacUrl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiPacUrl" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiPacUrl" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiPacUrl : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiPacUrl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PAC_URL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PAC_URL")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the proxy auto-config (PAC) URL for the wifi network in
            <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</summary>
        <remarks>
          <para>A String extra holding the proxy auto-config (PAC) URL for the wifi network in
            <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_PAC_URL" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_PAC_URL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiPassword">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiPassword As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiPassword;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiPassword;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiPassword" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiPassword" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiPassword : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiPassword" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PASSWORD")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PASSWORD")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the password of the wifi network in
            <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</summary>
        <remarks>
          <para>A String extra holding the password of the wifi network in
            <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_PASSWORD" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_PASSWORD</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiPhase2Auth">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiPhase2Auth As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiPhase2Auth;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiPhase2Auth;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiPhase2Auth" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiPhase2Auth" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiPhase2Auth : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiPhase2Auth" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PHASE2_AUTH", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PHASE2_AUTH", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The phase 2 authentication of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>
            and could be one of <c>NONE</c>, <c>PAP</c>, <c>MSCHAP</c>, <c>MSCHAPV2</c>, <c>GTC</c>,
            <c>SIM</c>, <c>AKA</c> or <c>AKA_PRIME</c>.</summary>
        <remarks>
          <para>The phase 2 authentication of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>
            and could be one of <c>NONE</c>, <c>PAP</c>, <c>MSCHAP</c>, <c>MSCHAPV2</c>, <c>GTC</c>,
            <c>SIM</c>, <c>AKA</c> or <c>AKA_PRIME</c>. This is only used if the
            <c>#EXTRA_PROVISIONING_WIFI_SECURITY_TYPE</c> is <c>EAP</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_PHASE2_AUTH" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_PHASE2_AUTH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiProxyBypass">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiProxyBypass As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiProxyBypass;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiProxyBypass;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiProxyBypass" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiProxyBypass" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiProxyBypass : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiProxyBypass" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PROXY_BYPASS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PROXY_BYPASS")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the proxy bypass for the wifi network in
            <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</summary>
        <remarks>
          <para>A String extra holding the proxy bypass for the wifi network in
            <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_PROXY_BYPASS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_PROXY_BYPASS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiProxyHost">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiProxyHost As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiProxyHost;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiProxyHost;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiProxyHost" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiProxyHost" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiProxyHost : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiProxyHost" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PROXY_HOST")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PROXY_HOST")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the proxy host for the wifi network in
            <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</summary>
        <remarks>
          <para>A String extra holding the proxy host for the wifi network in
            <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_PROXY_HOST" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_PROXY_HOST</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiProxyPort">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiProxyPort As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiProxyPort;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiProxyPort;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiProxyPort" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiProxyPort" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiProxyPort : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiProxyPort" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PROXY_PORT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_PROXY_PORT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An int extra holding the proxy port for the wifi network in
            <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</summary>
        <remarks>
          <para>An int extra holding the proxy port for the wifi network in
            <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_PROXY_PORT" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_PROXY_PORT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiSecurityType">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiSecurityType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiSecurityType;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiSecurityType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiSecurityType" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiSecurityType" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiSecurityType : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiSecurityType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_SECURITY_TYPE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_SECURITY_TYPE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra indicating the security type of the wifi network in
            <c>#EXTRA_PROVISIONING_WIFI_SSID</c> and could be one of <c>NONE</c>, <c>WPA</c>,
            <c>WEP</c> or <c>EAP</c>.</summary>
        <remarks>
          <para>A String extra indicating the security type of the wifi network in
            <c>#EXTRA_PROVISIONING_WIFI_SSID</c> and could be one of <c>NONE</c>, <c>WPA</c>,
            <c>WEP</c> or <c>EAP</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_SECURITY_TYPE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_SECURITY_TYPE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiSsid">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiSsid As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiSsid;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiSsid;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiSsid" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiSsid" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiSsid : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiSsid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_SSID")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_SSID")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A String extra holding the ssid of the wifi network that should be used during nfc device
            owner provisioning for downloading the mobile device management application.</summary>
        <remarks>
          <para>A String extra holding the ssid of the wifi network that should be used during nfc device
            owner provisioning for downloading the mobile device management application.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_SSID" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_SSID</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraProvisioningWifiUserCertificate">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraProvisioningWifiUserCertificate As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraProvisioningWifiUserCertificate;" />
      <MemberSignature Language="C#" Value="public const string ExtraProvisioningWifiUserCertificate;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraProvisioningWifiUserCertificate" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiUserCertificate" />
      <MemberSignature Language="F#" Value="val mutable ExtraProvisioningWifiUserCertificate : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraProvisioningWifiUserCertificate" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_USER_CERTIFICATE", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_PROVISIONING_WIFI_USER_CERTIFICATE", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The user certificate of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>.</summary>
        <remarks>
          <para>The user certificate of the wifi network in <c>#EXTRA_PROVISIONING_WIFI_SSID</c>. This
            should be an X.509 certificate and private key Base64 encoded DER format, ie. PEM
            representation of a certificate and key without header, footer and line breaks. <see href="https://tools.ietf.org/html/rfc7468"> More information</see> This is only
            used if the <c>#EXTRA_PROVISIONING_WIFI_SECURITY_TYPE</c> is <c>EAP</c>.</para>
          <para>Use in an NFC record with <c>#MIME_TYPE_PROVISIONING_NFC</c> that starts device owner
            provisioning via an NFC bump. It can also be used for QR code provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_PROVISIONING_WIFI_USER_CERTIFICATE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_PROVISIONING_WIFI_USER_CERTIFICATE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraResourceIds">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraResourceIds As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraResourceIds;" />
      <MemberSignature Language="C#" Value="public const string ExtraResourceIds;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraResourceIds" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraResourceIds" />
      <MemberSignature Language="F#" Value="val mutable ExtraResourceIds : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraResourceIds" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_RESOURCE_IDS", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_RESOURCE_IDS", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An integer array extra for <c>#ACTION_DEVICE_POLICY_RESOURCE_UPDATED</c> to indicate which
            resource IDs (see <c>DevicePolicyResources.Drawables</c> and
            <c>DevicePolicyResources.Strings</c>) have been updated.</summary>
        <remarks>
          <para>An integer array extra for <c>#ACTION_DEVICE_POLICY_RESOURCE_UPDATED</c> to indicate which
            resource IDs (see <c>DevicePolicyResources.Drawables</c> and
            <c>DevicePolicyResources.Strings</c>) have been updated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_RESOURCE_IDS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_RESOURCE_IDS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraResourceType">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraResourceType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraResourceType;" />
      <MemberSignature Language="C#" Value="public const string ExtraResourceType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraResourceType" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraResourceType" />
      <MemberSignature Language="F#" Value="val mutable ExtraResourceType : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraResourceType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_RESOURCE_TYPE", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_RESOURCE_TYPE", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An <c>int</c> extra for <c>#ACTION_DEVICE_POLICY_RESOURCE_UPDATED</c> to indicate the type
            of the resource being updated, the type can be <c>#EXTRA_RESOURCE_TYPE_DRAWABLE</c> or
            <c>#EXTRA_RESOURCE_TYPE_STRING</c></summary>
        <remarks>
          <para>An <c>int</c> extra for <c>#ACTION_DEVICE_POLICY_RESOURCE_UPDATED</c> to indicate the type
            of the resource being updated, the type can be <c>#EXTRA_RESOURCE_TYPE_DRAWABLE</c> or
            <c>#EXTRA_RESOURCE_TYPE_STRING</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_RESOURCE_TYPE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_RESOURCE_TYPE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraResourceTypeDrawable">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraResourceTypeDrawable As ExtraResourceType  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::ExtraResourceType ExtraResourceTypeDrawable = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.ExtraResourceType ExtraResourceTypeDrawable = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.ExtraResourceType ExtraResourceTypeDrawable = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraResourceTypeDrawable" />
      <MemberSignature Language="F#" Value="val mutable ExtraResourceTypeDrawable : Android.App.Admin.ExtraResourceType" Usage="Android.App.Admin.DevicePolicyManager.ExtraResourceTypeDrawable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_RESOURCE_TYPE_DRAWABLE", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_RESOURCE_TYPE_DRAWABLE", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.ExtraResourceType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.ExtraResourceType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.ExtraResourceType</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>A <c>int</c> value for <c>#EXTRA_RESOURCE_TYPE</c> to indicate that a resource of type
            <c>Drawable</c> is being updated.</summary>
        <remarks>
          <para>A <c>int</c> value for <c>#EXTRA_RESOURCE_TYPE</c> to indicate that a resource of type
            <c>Drawable</c> is being updated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_RESOURCE_TYPE_DRAWABLE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_RESOURCE_TYPE_DRAWABLE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraResourceTypeString">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraResourceTypeString As ExtraResourceType  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::ExtraResourceType ExtraResourceTypeString = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.ExtraResourceType ExtraResourceTypeString = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.ExtraResourceType ExtraResourceTypeString = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraResourceTypeString" />
      <MemberSignature Language="F#" Value="val mutable ExtraResourceTypeString : Android.App.Admin.ExtraResourceType" Usage="Android.App.Admin.DevicePolicyManager.ExtraResourceTypeString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_RESOURCE_TYPE_STRING", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_RESOURCE_TYPE_STRING", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.ExtraResourceType enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.ExtraResourceType enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.ExtraResourceType</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>A <c>int</c> value for <c>#EXTRA_RESOURCE_TYPE</c> to indicate that a resource of type
            <c>String</c> is being updated.</summary>
        <remarks>
          <para>A <c>int</c> value for <c>#EXTRA_RESOURCE_TYPE</c> to indicate that a resource of type
            <c>String</c> is being updated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_RESOURCE_TYPE_STRING" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_RESOURCE_TYPE_STRING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtraResultLaunchIntent">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraResultLaunchIntent As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraResultLaunchIntent;" />
      <MemberSignature Language="C#" Value="public const string ExtraResultLaunchIntent;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraResultLaunchIntent" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ExtraResultLaunchIntent" />
      <MemberSignature Language="F#" Value="val mutable ExtraResultLaunchIntent : string" Usage="Android.App.Admin.DevicePolicyManager.ExtraResultLaunchIntent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_RESULT_LAUNCH_INTENT", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_RESULT_LAUNCH_INTENT", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An <c>Intent</c> result extra specifying the <c>Intent</c> to be launched after
            provisioning is finalized.</summary>
        <remarks>
          <para>An <c>Intent</c> result extra specifying the <c>Intent</c> to be launched after
            provisioning is finalized.</para>
          <para>If <c>#EXTRA_PROVISIONING_SHOULD_LAUNCH_RESULT_INTENT</c> is set to <c>false</c>,
            this result will be supplied as part of the result <c>Intent</c> for provisioning actions
            such as <c>#ACTION_PROVISION_MANAGED_PROFILE</c>. This result will also be supplied as
            part of the result <c>Intent</c> for the device policy management role holder provisioning
            actions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#EXTRA_RESULT_LAUNCH_INTENT" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.EXTRA_RESULT_LAUNCH_INTENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlagEvictCredentialEncryptionKey">
      <MemberSignature Language="VB.NET" Value="Public Const FlagEvictCredentialEncryptionKey As DevicePolicyManagerFlags  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::DevicePolicyManagerFlags FlagEvictCredentialEncryptionKey = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.DevicePolicyManagerFlags FlagEvictCredentialEncryptionKey = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.DevicePolicyManagerFlags FlagEvictCredentialEncryptionKey = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.FlagEvictCredentialEncryptionKey" />
      <MemberSignature Language="F#" Value="val mutable FlagEvictCredentialEncryptionKey : Android.App.Admin.DevicePolicyManagerFlags" Usage="Android.App.Admin.DevicePolicyManager.FlagEvictCredentialEncryptionKey" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_EVICT_CREDENTIAL_ENCRYPTION_KEY", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_EVICT_CREDENTIAL_ENCRYPTION_KEY", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.DevicePolicyManagerFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.DevicePolicyManagerFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.DevicePolicyManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for <c>#lockNow(int)</c>: also evict the user's credential encryption key from the
            keyring.</summary>
        <remarks>
          <para>Flag for <c>#lockNow(int)</c>: also evict the user's credential encryption key from the
            keyring. The user's credential will need to be entered again in order to derive the
            credential encryption key that will be stored back in the keyring for future use.</para>
          <para>This flag can only be used by a profile owner when locking a managed profile when
            <c>#getStorageEncryptionStatus</c> returns <c>#ENCRYPTION_STATUS_ACTIVE_PER_USER</c>.</para>
          <para>In order to secure user data, the user will be stopped and restarted so apps should wait
            until they are next run to perform further actions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#FLAG_EVICT_CREDENTIAL_ENCRYPTION_KEY" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.FLAG_EVICT_CREDENTIAL_ENCRYPTION_KEY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlagManagedCanAccessParent">
      <MemberSignature Language="VB.NET" Value="Public Const FlagManagedCanAccessParent As DevicePolicyManagerFlags  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::DevicePolicyManagerFlags FlagManagedCanAccessParent = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.DevicePolicyManagerFlags FlagManagedCanAccessParent = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.DevicePolicyManagerFlags FlagManagedCanAccessParent = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.FlagManagedCanAccessParent" />
      <MemberSignature Language="F#" Value="val mutable FlagManagedCanAccessParent : Android.App.Admin.DevicePolicyManagerFlags" Usage="Android.App.Admin.DevicePolicyManager.FlagManagedCanAccessParent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_MANAGED_CAN_ACCESS_PARENT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_MANAGED_CAN_ACCESS_PARENT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.DevicePolicyManagerFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.DevicePolicyManagerFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.DevicePolicyManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag used by <c>#addCrossProfileIntentFilter</c> to allow activities in
            the managed profile to access intents sent from the parent profile.</summary>
        <remarks>
          <para>Flag used by <c>#addCrossProfileIntentFilter</c> to allow activities in
            the managed profile to access intents sent from the parent profile.
            That is, when an app in the parent profile calls
            <c>Activity#startActivity(Intent)</c>, the intent can be resolved by a
            matching activity in the managed profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#FLAG_MANAGED_CAN_ACCESS_PARENT" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.FLAG_MANAGED_CAN_ACCESS_PARENT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlagParentCanAccessManaged">
      <MemberSignature Language="VB.NET" Value="Public Const FlagParentCanAccessManaged As DevicePolicyManagerFlags  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::DevicePolicyManagerFlags FlagParentCanAccessManaged = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.DevicePolicyManagerFlags FlagParentCanAccessManaged = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.DevicePolicyManagerFlags FlagParentCanAccessManaged = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.FlagParentCanAccessManaged" />
      <MemberSignature Language="F#" Value="val mutable FlagParentCanAccessManaged : Android.App.Admin.DevicePolicyManagerFlags" Usage="Android.App.Admin.DevicePolicyManager.FlagParentCanAccessManaged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FLAG_PARENT_CAN_ACCESS_MANAGED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FLAG_PARENT_CAN_ACCESS_MANAGED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.DevicePolicyManagerFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.DevicePolicyManagerFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.DevicePolicyManagerFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag used by <c>#addCrossProfileIntentFilter</c> to allow activities in
            the parent profile to access intents sent from the managed profile.</summary>
        <remarks>
          <para>Flag used by <c>#addCrossProfileIntentFilter</c> to allow activities in
            the parent profile to access intents sent from the managed profile.
            That is, when an app in the managed profile calls
            <c>Activity#startActivity(Intent)</c>, the intent can be resolved by a
            matching activity in the parent profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#FLAG_PARENT_CAN_ACCESS_MANAGED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.FLAG_PARENT_CAN_ACCESS_MANAGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromContext (context As Context) As DevicePolicyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::App::Admin::DevicePolicyManager ^ FromContext(Android::Content::Context ^ context);" />
      <MemberSignature Language="C#" Value="public static Android.App.Admin.DevicePolicyManager? FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.App.Admin.DevicePolicyManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.FromContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member FromContext : Android.Content.Context -&gt; Android.App.Admin.DevicePolicyManager" Usage="Android.App.Admin.DevicePolicyManager.FromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.App.Admin.DevicePolicyManager</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateKeyPair">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GenerateKeyPair (admin As ComponentName, algorithm As String, keySpec As KeyGenParameterSpec, idAttestationFlags As IdAttestationFlags) As AttestedKeyPair" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Security::AttestedKeyPair ^ GenerateKeyPair(Android::Content::ComponentName ^ admin, System::String ^ algorithm, Android::Security::Keystore::KeyGenParameterSpec ^ keySpec, Android::App::Admin::IdAttestationFlags idAttestationFlags);" />
      <MemberSignature Language="C#" Value="public virtual Android.Security.AttestedKeyPair? GenerateKeyPair (Android.Content.ComponentName? admin, string algorithm, Android.Security.Keystore.KeyGenParameterSpec keySpec, Android.App.Admin.IdAttestationFlags idAttestationFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Security.AttestedKeyPair GenerateKeyPair(class Android.Content.ComponentName admin, string algorithm, class Android.Security.Keystore.KeyGenParameterSpec keySpec, valuetype Android.App.Admin.IdAttestationFlags idAttestationFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GenerateKeyPair(Android.Content.ComponentName,System.String,Android.Security.Keystore.KeyGenParameterSpec,Android.App.Admin.IdAttestationFlags)" />
      <MemberSignature Language="F#" Value="abstract member GenerateKeyPair : Android.Content.ComponentName * string * Android.Security.Keystore.KeyGenParameterSpec * Android.App.Admin.IdAttestationFlags -&gt; Android.Security.AttestedKeyPair&#xA;override this.GenerateKeyPair : Android.Content.ComponentName * string * Android.Security.Keystore.KeyGenParameterSpec * Android.App.Admin.IdAttestationFlags -&gt; Android.Security.AttestedKeyPair" Usage="devicePolicyManager.GenerateKeyPair (admin, algorithm, keySpec, idAttestationFlags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateKeyPair", "(Landroid/content/ComponentName;Ljava/lang/String;Landroid/security/keystore/KeyGenParameterSpec;I)Landroid/security/AttestedKeyPair;", "GetGenerateKeyPair_Landroid_content_ComponentName_Ljava_lang_String_Landroid_security_keystore_KeyGenParameterSpec_IHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateKeyPair", "(Landroid/content/ComponentName;Ljava/lang/String;Landroid/security/keystore/KeyGenParameterSpec;I)Landroid/security/AttestedKeyPair;", "GetGenerateKeyPair_Landroid_content_ComponentName_Ljava_lang_String_Landroid_security_keystore_KeyGenParameterSpec_IHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Security.AttestedKeyPair</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keySpec" Type="Android.Security.Keystore.KeyGenParameterSpec" />
        <Parameter Name="idAttestationFlags" Type="Android.App.Admin.IdAttestationFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                       <c>null</c> if the caller is not a device admin.</param>
        <param name="algorithm">The key generation algorithm, see <c>java.security.KeyPairGenerator</c>.</param>
        <param name="keySpec">Specification of the key to generate, see
            <c>java.security.KeyPairGenerator</c>.</param>
        <param name="idAttestationFlags">A bitmask of the identifiers that should be included in the
                   attestation record (<c>ID_TYPE_BASE_INFO</c>, <c>ID_TYPE_SERIAL</c>,
                   <c>ID_TYPE_IMEI</c> and <c>ID_TYPE_MEID</c>), and
                   <c>ID_TYPE_INDIVIDUAL_ATTESTATION</c> if the attestation record should be signed
                   using an individual attestation certificate.
                   &lt;p&gt;
                   <c>0</c> should be passed in if no device identification is required in the
                   attestation record and the batch attestation certificate should be used.
                   &lt;p&gt;
                   If any flag is specified, then an attestation challenge must be included in the
                   <c>keySpec</c>.</param>
        <summary>This API can be called by the following to generate a new private/public key pair:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
               &lt;li&gt;An app that holds the
               <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_CERTIFICATES</c> permission&lt;/li&gt;
            &lt;/ul&gt;
            If the device supports key generation via secure hardware, this method is useful for
            creating a key in KeyChain that never left the secure hardware.</summary>
        <returns>A non-null <c>AttestedKeyPair</c> if the key generation succeeded, null otherwise.</returns>
        <remarks>
          <para>This API can be called by the following to generate a new private/public key pair:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
               &lt;li&gt;An app that holds the
               <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_CERTIFICATES</c> permission&lt;/li&gt;
            &lt;/ul&gt;
            If the device supports key generation via secure hardware, this method is useful for
            creating a key in KeyChain that never left the secure hardware. Access to the key is
            controlled the same way as in <c>#installKeyPair</c>.</para>
          <para>From Android <c>android.os.Build.VERSION_CODES#S</c>, the credential management app
            can call this API. If called by the credential management app, the componentName must be
            <c>null</c>. Note, there can only be a credential management app on an unmanaged device.</para>
          <para>Because this method might take several seconds to complete, it should only be called from
            a worker thread. This method returns <c>null</c> when called from the main thread.</para>
          <para>This method is not thread-safe, calling it from multiple threads at the same time will
            result in undefined behavior. If the calling thread is interrupted while the invocation is
            in-flight, it will eventually terminate and return <c>null</c>.</para>
          <para>Note: If the provided <c>alias</c> is of an existing alias, all former grants that apps
            have been given to access the key and certificates associated with this alias will be
            revoked.</para>
          <para>Attestation: to enable attestation, set an attestation challenge in <c>keySpec</c> via
            <c>KeyGenParameterSpec.Builder#setAttestationChallenge</c>. By specifying flags to the
            <c>idAttestationFlags</c> parameter, it is possible to request the device's unique
            identity to be included in the attestation record.</para>
          <para>Specific identifiers can be included in the attestation record, and an individual
            attestation certificate can be used to sign the attestation record. To find out if the device
            supports these features, refer to <c>#isDeviceIdAttestationSupported()</c> and
            <c>#isUniqueDeviceAttestationSupported()</c>.</para>
          <para>Device owner, profile owner, their delegated certificate installer and the credential
            management app can use <c>#ID_TYPE_BASE_INFO</c> to request inclusion of the general device
            information including manufacturer, model, brand, device and product in the attestation
            record.
            Only device owner, profile owner on an organization-owned device or affiliated user, and
            their delegated certificate installers can use <c>#ID_TYPE_SERIAL</c>, <c>#ID_TYPE_IMEI</c>
            and <c>#ID_TYPE_MEID</c> to request unique device identifiers to be attested (the serial
            number, IMEI and MEID correspondingly), if supported by the device
            (see <c>#isDeviceIdAttestationSupported()</c>).
            Additionally, device owner, profile owner on an organization-owned device and their delegated
            certificate installers can also request the attestation record to be signed using an
            individual attestation certificate by specifying the <c>#ID_TYPE_INDIVIDUAL_ATTESTATION</c>
            flag (if supported by the device, see <c>#isUniqueDeviceAttestationSupported()</c>).</para>
          <para>If any of <c>#ID_TYPE_SERIAL</c>, <c>#ID_TYPE_IMEI</c> and <c>#ID_TYPE_MEID</c>
            is set, it is implicitly assumed that <c>#ID_TYPE_BASE_INFO</c> is also set.</para>
          <para>Attestation using <c>#ID_TYPE_INDIVIDUAL_ATTESTATION</c> can only be requested if
            key generation is done in StrongBox.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#generateKeyPair(android.content.ComponentName,%20java.lang.String,%20android.security.keystore.KeyGenParameterSpec,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.generateKeyPair(android.content.ComponentName, java.lang.String, android.security.keystore.KeyGenParameterSpec, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAccountTypesWithManagementDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAccountTypesWithManagementDisabled () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetAccountTypesWithManagementDisabled();" />
      <MemberSignature Language="C#" Value="public virtual string[]? GetAccountTypesWithManagementDisabled ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAccountTypesWithManagementDisabled() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetAccountTypesWithManagementDisabled" />
      <MemberSignature Language="F#" Value="abstract member GetAccountTypesWithManagementDisabled : unit -&gt; string[]&#xA;override this.GetAccountTypesWithManagementDisabled : unit -&gt; string[]" Usage="devicePolicyManager.GetAccountTypesWithManagementDisabled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAccountTypesWithManagementDisabled", "()[Ljava/lang/String;", "GetGetAccountTypesWithManagementDisabledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAccountTypesWithManagementDisabled", "()[Ljava/lang/String;", "GetGetAccountTypesWithManagementDisabledHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the array of accounts for which account management is disabled by the profile owner
            or device owner.</summary>
        <returns>a list of account types for which account management has been disabled.</returns>
        <remarks>
          <para>Gets the array of accounts for which account management is disabled by the profile owner
            or device owner.</para>
          <para>Account management can be disabled/enabled by calling
            <c>#setAccountManagementDisabled</c>.</para>
          <para>This method may be called on the <c>DevicePolicyManager</c> instance returned from
            <c>#getParentProfileInstance(ComponentName)</c>. Note that only a profile owner on
            an organization-owned device can affect account types on the parent profile instance.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getAccountTypesWithManagementDisabled()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getAccountTypesWithManagementDisabled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.SetAccountManagementDisabled(Android.Content.ComponentName, System.String, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetAffiliationIds">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAffiliationIds (admin As ComponentName) As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ GetAffiliationIds(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;string&gt; GetAffiliationIds (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;string&gt; GetAffiliationIds(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetAffiliationIds(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetAffiliationIds : Android.Content.ComponentName -&gt; System.Collections.Generic.ICollection&lt;string&gt;&#xA;override this.GetAffiliationIds : Android.Content.ComponentName -&gt; System.Collections.Generic.ICollection&lt;string&gt;" Usage="devicePolicyManager.GetAffiliationIds admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAffiliationIds", "(Landroid/content/ComponentName;)Ljava/util/Set;", "GetGetAffiliationIds_Landroid_content_ComponentName_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAffiliationIds", "(Landroid/content/ComponentName;)Ljava/util/Set;", "GetGetAffiliationIds_Landroid_content_ComponentName_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">To be added.</param>
        <summary>Returns the set of affiliation ids previously set via <c>#setAffiliationIds</c>, or an
            empty set if none have been set.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the set of affiliation ids previously set via <c>#setAffiliationIds</c>, or an
            empty set if none have been set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getAffiliationIds(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getAffiliationIds(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlwaysOnVpnLockdownWhitelist">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlwaysOnVpnLockdownWhitelist (admin As ComponentName) As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ GetAlwaysOnVpnLockdownWhitelist(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;string&gt;? GetAlwaysOnVpnLockdownWhitelist (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;string&gt; GetAlwaysOnVpnLockdownWhitelist(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetAlwaysOnVpnLockdownWhitelist(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetAlwaysOnVpnLockdownWhitelist : Android.Content.ComponentName -&gt; System.Collections.Generic.ICollection&lt;string&gt;&#xA;override this.GetAlwaysOnVpnLockdownWhitelist : Android.Content.ComponentName -&gt; System.Collections.Generic.ICollection&lt;string&gt;" Usage="devicePolicyManager.GetAlwaysOnVpnLockdownWhitelist admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAlwaysOnVpnLockdownWhitelist", "(Landroid/content/ComponentName;)Ljava/util/Set;", "GetGetAlwaysOnVpnLockdownWhitelist_Landroid_content_ComponentName_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAlwaysOnVpnLockdownWhitelist", "(Landroid/content/ComponentName;)Ljava/util/Set;", "GetGetAlwaysOnVpnLockdownWhitelist_Landroid_content_ComponentName_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by device or profile owner to query the set of packages that are allowed to access
            the network directly when always-on VPN is in lockdown mode but not connected.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Called by device or profile owner to query the set of packages that are allowed to access
            the network directly when always-on VPN is in lockdown mode but not connected. Returns
            <c>null</c> when always-on VPN is not active or not in lockdown mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getAlwaysOnVpnLockdownWhitelist(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getAlwaysOnVpnLockdownWhitelist(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlwaysOnVpnPackage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAlwaysOnVpnPackage (admin As ComponentName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetAlwaysOnVpnPackage(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual string? GetAlwaysOnVpnPackage (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAlwaysOnVpnPackage(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetAlwaysOnVpnPackage(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetAlwaysOnVpnPackage : Android.Content.ComponentName -&gt; string&#xA;override this.GetAlwaysOnVpnPackage : Android.Content.ComponentName -&gt; string" Usage="devicePolicyManager.GetAlwaysOnVpnPackage admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAlwaysOnVpnPackage", "(Landroid/content/ComponentName;)Ljava/lang/String;", "GetGetAlwaysOnVpnPackage_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAlwaysOnVpnPackage", "(Landroid/content/ComponentName;)Ljava/lang/String;", "GetGetAlwaysOnVpnPackage_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">To be added.</param>
        <summary>Called by a device or profile owner to read the name of the package administering an
            always-on VPN connection for the current user.</summary>
        <returns>Package name of VPN controller responsible for always-on VPN, or <c>null</c> if none
                    is set.</returns>
        <remarks>
          <para>Called by a device or profile owner to read the name of the package administering an
            always-on VPN connection for the current user. If there is no such package, or the always-on
            VPN is provided by the system instead of by an application, <c>null</c> will be returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getAlwaysOnVpnPackage(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getAlwaysOnVpnPackage(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationRestrictions">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationRestrictions (admin As ComponentName, packageName As String) As Bundle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::OS::Bundle ^ GetApplicationRestrictions(Android::Content::ComponentName ^ admin, System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle GetApplicationRestrictions (Android.Content.ComponentName? admin, string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle GetApplicationRestrictions(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetApplicationRestrictions(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationRestrictions : Android.Content.ComponentName * string -&gt; Android.OS.Bundle&#xA;override this.GetApplicationRestrictions : Android.Content.ComponentName * string -&gt; Android.OS.Bundle" Usage="devicePolicyManager.GetApplicationRestrictions (admin, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getApplicationRestrictions", "(Landroid/content/ComponentName;Ljava/lang/String;)Landroid/os/Bundle;", "GetGetApplicationRestrictions_Landroid_content_ComponentName_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getApplicationRestrictions", "(Landroid/content/ComponentName;Ljava/lang/String;)Landroid/os/Bundle;", "GetGetApplicationRestrictions_Landroid_content_ComponentName_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                       <c>null</c> if called by the application restrictions managing package.</param>
        <param name="packageName">The name of the package to fetch restricted settings of.</param>
        <summary>Retrieves the application restrictions for a given target application running in the calling
            user.</summary>
        <returns>
          <c>Bundle</c> of settings corresponding to what was set last time
                    <c>DevicePolicyManager#setApplicationRestrictions</c> was called, or an empty
                    <c>Bundle</c> if no restrictions have been set.</returns>
        <remarks>
          <para>Retrieves the application restrictions for a given target application running in the calling
            user.</para>
          <para>The caller must be a profile or device owner on that user, or the package allowed to manage
            application restrictions via <c>#setDelegatedScopes</c> with the
            <c>#DELEGATION_APP_RESTRICTIONS</c> scope; otherwise a security exception will be thrown.</para>
          <para>NOTE: The method performs disk I/O and shouldn't be called on the main thread</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getApplicationRestrictions(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getApplicationRestrictions(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationRestrictionsManagingPackage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetApplicationRestrictionsManagingPackage (admin As ComponentName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetApplicationRestrictionsManagingPackage(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual string? GetApplicationRestrictionsManagingPackage (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetApplicationRestrictionsManagingPackage(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetApplicationRestrictionsManagingPackage(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetApplicationRestrictionsManagingPackage : Android.Content.ComponentName -&gt; string&#xA;override this.GetApplicationRestrictionsManagingPackage : Android.Content.ComponentName -&gt; string" Usage="devicePolicyManager.GetApplicationRestrictionsManagingPackage admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getApplicationRestrictionsManagingPackage", "(Landroid/content/ComponentName;)Ljava/lang/String;", "GetGetApplicationRestrictionsManagingPackage_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getApplicationRestrictionsManagingPackage", "(Landroid/content/ComponentName;)Ljava/lang/String;", "GetGetApplicationRestrictionsManagingPackage_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by a profile owner or device owner to retrieve the application restrictions managing
            package for the current user, or <c>null</c> if none is set.</summary>
        <returns>The package name allowed to manage application restrictions on the current user, or
                    <c>null</c> if none is set.</returns>
        <remarks>
          <para>Called by a profile owner or device owner to retrieve the application restrictions managing
            package for the current user, or <c>null</c> if none is set. If there are multiple
            delegates this function will return one of them.</para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#O</c>. Use <c>#getDelegatePackages</c>
            with the <c>#DELEGATION_APP_RESTRICTIONS</c> scope instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getApplicationRestrictionsManagingPackage(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getApplicationRestrictionsManagingPackage(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutoTimeEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutoTimeEnabled (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetAutoTimeEnabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool GetAutoTimeEnabled (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetAutoTimeEnabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetAutoTimeEnabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetAutoTimeEnabled : Android.Content.ComponentName -&gt; bool&#xA;override this.GetAutoTimeEnabled : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.GetAutoTimeEnabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAutoTimeEnabled", "(Landroid/content/ComponentName;)Z", "GetGetAutoTimeEnabled_Landroid_content_ComponentName_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAutoTimeEnabled", "(Landroid/content/ComponentName;)Z", "GetGetAutoTimeEnabled_Landroid_content_ComponentName_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <summary>Returns true if auto time is enabled on the device.</summary>
        <returns>true if auto time is enabled on the device.</returns>
        <remarks>
          <para>Returns true if auto time is enabled on the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getAutoTimeEnabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getAutoTimeEnabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAutoTimeZoneEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetAutoTimeZoneEnabled (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetAutoTimeZoneEnabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool GetAutoTimeZoneEnabled (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetAutoTimeZoneEnabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetAutoTimeZoneEnabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetAutoTimeZoneEnabled : Android.Content.ComponentName -&gt; bool&#xA;override this.GetAutoTimeZoneEnabled : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.GetAutoTimeZoneEnabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAutoTimeZoneEnabled", "(Landroid/content/ComponentName;)Z", "GetGetAutoTimeZoneEnabled_Landroid_content_ComponentName_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAutoTimeZoneEnabled", "(Landroid/content/ComponentName;)Z", "GetGetAutoTimeZoneEnabled_Landroid_content_ComponentName_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <summary>Returns true if auto time zone is enabled on the device.</summary>
        <returns>true if auto time zone is enabled on the device.</returns>
        <remarks>
          <para>Returns true if auto time zone is enabled on the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getAutoTimeZoneEnabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getAutoTimeZoneEnabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBindDeviceAdminTargetUsers">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBindDeviceAdminTargetUsers (admin As ComponentName) As IList(Of UserHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Android::OS::UserHandle ^&gt; ^ GetBindDeviceAdminTargetUsers(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt; GetBindDeviceAdminTargetUsers (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.OS.UserHandle&gt; GetBindDeviceAdminTargetUsers(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetBindDeviceAdminTargetUsers(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetBindDeviceAdminTargetUsers : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;&#xA;override this.GetBindDeviceAdminTargetUsers : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;" Usage="devicePolicyManager.GetBindDeviceAdminTargetUsers admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBindDeviceAdminTargetUsers", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetBindDeviceAdminTargetUsers_Landroid_content_ComponentName_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBindDeviceAdminTargetUsers", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetBindDeviceAdminTargetUsers_Landroid_content_ComponentName_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">To be added.</param>
        <summary>Returns the list of target users that the calling device owner or owner of secondary user
            can use when calling <c>#bindDeviceAdminServiceAsUser</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the list of target users that the calling device owner or owner of secondary user
            can use when calling <c>#bindDeviceAdminServiceAsUser</c>.</para>
          <para>A device owner can bind to a service from a secondary managed user and vice versa, provided
            that both users are affiliated. See <c>#setAffiliationIds</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getBindDeviceAdminTargetUsers(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getBindDeviceAdminTargetUsers(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBluetoothContactSharingDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetBluetoothContactSharingDisabled (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetBluetoothContactSharingDisabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool GetBluetoothContactSharingDisabled (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetBluetoothContactSharingDisabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetBluetoothContactSharingDisabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetBluetoothContactSharingDisabled : Android.Content.ComponentName -&gt; bool&#xA;override this.GetBluetoothContactSharingDisabled : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.GetBluetoothContactSharingDisabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getBluetoothContactSharingDisabled", "(Landroid/content/ComponentName;)Z", "GetGetBluetoothContactSharingDisabled_Landroid_content_ComponentName_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getBluetoothContactSharingDisabled", "(Landroid/content/ComponentName;)Z", "GetGetBluetoothContactSharingDisabled_Landroid_content_ComponentName_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by a profile owner of a managed profile to determine whether or not Bluetooth devices
            cannot access enterprise contacts.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Called by a profile owner of a managed profile to determine whether or not Bluetooth devices
            cannot access enterprise contacts.</para>
          <para>The calling device admin must be a profile owner. If it is not, a security exception will be
            thrown.</para>
          <para>This API works on managed profile only.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getBluetoothContactSharingDisabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getBluetoothContactSharingDisabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCameraDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCameraDisabled (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCameraDisabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool GetCameraDisabled (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCameraDisabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetCameraDisabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetCameraDisabled : Android.Content.ComponentName -&gt; bool&#xA;override this.GetCameraDisabled : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.GetCameraDisabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCameraDisabled", "(Landroid/content/ComponentName;)Z", "GetGetCameraDisabled_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCameraDisabled", "(Landroid/content/ComponentName;)Z", "GetGetCameraDisabled_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CAMERA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CAMERA")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to check whether any
                         admins have disabled the camera</param>
        <summary>Determine whether or not the device's cameras have been disabled for this user,
            either by the calling admin, if specified, or all admins.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Determine whether or not the device's cameras have been disabled for this user,
            either by the calling admin, if specified, or all admins.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance,
            returned by <c>#getParentProfileInstance(ComponentName)</c>, where the caller must be
            the profile owner of an organization-owned managed profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getCameraDisabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getCameraDisabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="GetCertInstallerPackage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCertInstallerPackage (admin As ComponentName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCertInstallerPackage(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual string? GetCertInstallerPackage (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCertInstallerPackage(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetCertInstallerPackage(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetCertInstallerPackage : Android.Content.ComponentName -&gt; string&#xA;override this.GetCertInstallerPackage : Android.Content.ComponentName -&gt; string" Usage="devicePolicyManager.GetCertInstallerPackage admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCertInstallerPackage", "(Landroid/content/ComponentName;)Ljava/lang/String;", "GetGetCertInstallerPackage_Landroid_content_ComponentName_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCertInstallerPackage", "(Landroid/content/ComponentName;)Ljava/lang/String;", "GetGetCertInstallerPackage_Landroid_content_ComponentName_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by a profile owner or device owner to retrieve the certificate installer for the user,
            or <c>null</c> if none is set.</summary>
        <returns>The package name of the current delegated certificate installer, or <c>null</c> if
                    none is set.</returns>
        <remarks>
          <para>Called by a profile owner or device owner to retrieve the certificate installer for the user,
            or <c>null</c> if none is set. If there are multiple delegates this function will return one
            of them.</para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#O</c>. Use <c>#getDelegatePackages</c>
            with the <c>#DELEGATION_CERT_INSTALL</c> scope instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getCertInstallerPackage(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getCertInstallerPackage(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCrossProfileCalendarPackages">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCrossProfileCalendarPackages (admin As ComponentName) As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ GetCrossProfileCalendarPackages(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;string&gt;? GetCrossProfileCalendarPackages (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;string&gt; GetCrossProfileCalendarPackages(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetCrossProfileCalendarPackages(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetCrossProfileCalendarPackages : Android.Content.ComponentName -&gt; System.Collections.Generic.ICollection&lt;string&gt;&#xA;override this.GetCrossProfileCalendarPackages : Android.Content.ComponentName -&gt; System.Collections.Generic.ICollection&lt;string&gt;" Usage="devicePolicyManager.GetCrossProfileCalendarPackages admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCrossProfileCalendarPackages", "(Landroid/content/ComponentName;)Ljava/util/Set;", "GetGetCrossProfileCalendarPackages_Landroid_content_ComponentName_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCrossProfileCalendarPackages", "(Landroid/content/ComponentName;)Ljava/util/Set;", "GetGetCrossProfileCalendarPackages_Landroid_content_ComponentName_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with</param>
        <summary>Gets a set of package names that are allowed to access cross-profile calendar APIs.</summary>
        <returns>the set of names of packages that were previously allowed via
            <c>#setCrossProfileCalendarPackages(ComponentName, Set)</c>, or an
            empty set if none have been allowed</returns>
        <remarks>
          <para>Gets a set of package names that are allowed to access cross-profile calendar APIs.</para>
          <para>Called by a profile owner of a managed profile.</para>
          <para>This member is deprecated. Use <c>#setCrossProfilePackages(ComponentName, Set)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getCrossProfileCalendarPackages(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getCrossProfileCalendarPackages(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCrossProfileCallerIdDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCrossProfileCallerIdDisabled (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCrossProfileCallerIdDisabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool GetCrossProfileCallerIdDisabled (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCrossProfileCallerIdDisabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetCrossProfileCallerIdDisabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetCrossProfileCallerIdDisabled : Android.Content.ComponentName -&gt; bool&#xA;override this.GetCrossProfileCallerIdDisabled : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.GetCrossProfileCallerIdDisabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCrossProfileCallerIdDisabled", "(Landroid/content/ComponentName;)Z", "GetGetCrossProfileCallerIdDisabled_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCrossProfileCallerIdDisabled", "(Landroid/content/ComponentName;)Z", "GetGetCrossProfileCallerIdDisabled_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by a profile owner of a managed profile to determine whether or not caller-Id
            information has been disabled.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Called by a profile owner of a managed profile to determine whether or not caller-Id
            information has been disabled.</para>
          <para>The calling device admin must be a profile owner. If it is not, a security exception will be
            thrown.</para>
          <para>Starting with <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>,
            this will return true when
            <c>#setManagedProfileCallerIdAccessPolicy(PackagePolicy)</c>
            has been set with a non-null policy whose policy type is NOT
            <c>PackagePolicy#PACKAGE_POLICY_BLOCKLIST</c></para>
          <para>This member is deprecated. starting with <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, use
            <c>#getManagedProfileCallerIdAccessPolicy()</c> instead</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getCrossProfileCallerIdDisabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getCrossProfileCallerIdDisabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCrossProfileContactsSearchDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCrossProfileContactsSearchDisabled (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetCrossProfileContactsSearchDisabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool GetCrossProfileContactsSearchDisabled (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetCrossProfileContactsSearchDisabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetCrossProfileContactsSearchDisabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetCrossProfileContactsSearchDisabled : Android.Content.ComponentName -&gt; bool&#xA;override this.GetCrossProfileContactsSearchDisabled : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.GetCrossProfileContactsSearchDisabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCrossProfileContactsSearchDisabled", "(Landroid/content/ComponentName;)Z", "GetGetCrossProfileContactsSearchDisabled_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCrossProfileContactsSearchDisabled", "(Landroid/content/ComponentName;)Z", "GetGetCrossProfileContactsSearchDisabled_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by a profile owner of a managed profile to determine whether or not contacts search
            has been disabled.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Called by a profile owner of a managed profile to determine whether or not contacts search
            has been disabled.</para>
          <para>The calling device admin must be a profile owner. If it is not, a security exception will be
            thrown.</para>
          <para>Starting with <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>,
            this will return true when
            <c>#setManagedProfileContactsAccessPolicy(PackagePolicy)</c>
            has been set with a non-null policy whose policy type is NOT
            <c>PackagePolicy#PACKAGE_POLICY_BLOCKLIST</c></para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> use
            <c>#getManagedProfileContactsAccessPolicy()</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getCrossProfileContactsSearchDisabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getCrossProfileContactsSearchDisabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCrossProfilePackages">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCrossProfilePackages (admin As ComponentName) As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ GetCrossProfilePackages(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.ICollection&lt;string&gt; GetCrossProfilePackages (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.ICollection`1&lt;string&gt; GetCrossProfilePackages(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetCrossProfilePackages(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetCrossProfilePackages : Android.Content.ComponentName -&gt; System.Collections.Generic.ICollection&lt;string&gt;&#xA;override this.GetCrossProfilePackages : Android.Content.ComponentName -&gt; System.Collections.Generic.ICollection&lt;string&gt;" Usage="devicePolicyManager.GetCrossProfilePackages admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCrossProfilePackages", "(Landroid/content/ComponentName;)Ljava/util/Set;", "GetGetCrossProfilePackages_Landroid_content_ComponentName_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCrossProfilePackages", "(Landroid/content/ComponentName;)Ljava/util/Set;", "GetGetCrossProfilePackages_Landroid_content_ComponentName_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">the <c>DeviceAdminReceiver</c> this request is associated with</param>
        <summary>Returns the set of package names that the admin has previously set as allowed to request user
            consent for cross-profile communication, via <c>#setCrossProfilePackages(ComponentName,
            Set)</c>.</summary>
        <returns>the set of package names the admin has previously set as allowed to request user
            consent for cross-profile communication, via <c>#setCrossProfilePackages(ComponentName,
            Set)</c></returns>
        <remarks>
          <para>Returns the set of package names that the admin has previously set as allowed to request user
            consent for cross-profile communication, via <c>#setCrossProfilePackages(ComponentName,
            Set)</c>.</para>
          <para>Assumes that the caller is a profile owner and is the given <c>admin</c>.</para>
          <para>Note that other apps not included in the returned set may be able to request user consent
            for cross-profile communication if they have been explicitly allowlisted by the OEM.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getCrossProfilePackages(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getCrossProfilePackages(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCrossProfileWidgetProviders">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCrossProfileWidgetProviders (admin As ComponentName) As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetCrossProfileWidgetProviders(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetCrossProfileWidgetProviders (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetCrossProfileWidgetProviders(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetCrossProfileWidgetProviders(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetCrossProfileWidgetProviders : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetCrossProfileWidgetProviders : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="devicePolicyManager.GetCrossProfileWidgetProviders admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCrossProfileWidgetProviders", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetCrossProfileWidgetProviders_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCrossProfileWidgetProviders", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetCrossProfileWidgetProviders_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PROFILE_INTERACTION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PROFILE_INTERACTION")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <summary>Called by the profile owner of a managed profile or a holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_PROFILE_INTERACTION</c> to query
            providers from which packages are available in the parent profile.</summary>
        <returns>The allowlisted package list.</returns>
        <remarks>
          <para>Called by the profile owner of a managed profile or a holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_PROFILE_INTERACTION</c> to query
            providers from which packages are available in the parent profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getCrossProfileWidgetProviders(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getCrossProfileWidgetProviders(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.AddCrossProfileWidgetProvider(Android.Content.ComponentName, System.String)" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.RemoveCrossProfileWidgetProvider(Android.Content.ComponentName, System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDelegatedScopes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDelegatedScopes (admin As ComponentName, delegatedPackage As String) As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetDelegatedScopes(Android::Content::ComponentName ^ admin, System::String ^ delegatedPackage);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetDelegatedScopes (Android.Content.ComponentName? admin, string delegatedPackage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetDelegatedScopes(class Android.Content.ComponentName admin, string delegatedPackage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetDelegatedScopes(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetDelegatedScopes : Android.Content.ComponentName * string -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetDelegatedScopes : Android.Content.ComponentName * string -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="devicePolicyManager.GetDelegatedScopes (admin, delegatedPackage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDelegatedScopes", "(Landroid/content/ComponentName;Ljava/lang/String;)Ljava/util/List;", "GetGetDelegatedScopes_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDelegatedScopes", "(Landroid/content/ComponentName;Ljava/lang/String;)Ljava/util/List;", "GetGetDelegatedScopes_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="delegatedPackage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                       <c>null</c> if the caller is <c>delegatedPackage</c>.</param>
        <param name="delegatedPackage">The package name of the app whose scopes should be retrieved.</param>
        <summary>Called by a profile owner or device owner to retrieve a list of the scopes given to a
            delegate package.</summary>
        <returns>A list containing the scopes given to <c>delegatedPackage</c>.</returns>
        <remarks>
          <para>Called by a profile owner or device owner to retrieve a list of the scopes given to a
            delegate package. Other apps can use this method to retrieve their own delegated scopes by
            passing <c>null</c> for <c>admin</c> and their own package name as
            <c>delegatedPackage</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getDelegatedScopes(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getDelegatedScopes(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDelegatePackages">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDelegatePackages (admin As ComponentName, delegationScope As String) As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetDelegatePackages(Android::Content::ComponentName ^ admin, System::String ^ delegationScope);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt;? GetDelegatePackages (Android.Content.ComponentName admin, string delegationScope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetDelegatePackages(class Android.Content.ComponentName admin, string delegationScope) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetDelegatePackages(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetDelegatePackages : Android.Content.ComponentName * string -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetDelegatePackages : Android.Content.ComponentName * string -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="devicePolicyManager.GetDelegatePackages (admin, delegationScope)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDelegatePackages", "(Landroid/content/ComponentName;Ljava/lang/String;)Ljava/util/List;", "GetGetDelegatePackages_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDelegatePackages", "(Landroid/content/ComponentName;Ljava/lang/String;)Ljava/util/List;", "GetGetDelegatePackages_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="delegationScope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="delegationScope">The scope whose delegates should be retrieved.</param>
        <summary>Called by a profile owner or device owner to retrieve a list of delegate packages that were
            granted a delegation scope.</summary>
        <returns>A list of package names of the current delegated packages for
                           <c>delegationScope</c>.</returns>
        <remarks>
          <para>Called by a profile owner or device owner to retrieve a list of delegate packages that were
            granted a delegation scope.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getDelegatePackages(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getDelegatePackages(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEndUserSessionMessage">
      <MemberSignature Language="VB.NET" Value="Public Function GetEndUserSessionMessage (admin As ComponentName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetEndUserSessionMessage(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public string? GetEndUserSessionMessage (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetEndUserSessionMessage(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetEndUserSessionMessage(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="member this.GetEndUserSessionMessage : Android.Content.ComponentName -&gt; string" Usage="devicePolicyManager.GetEndUserSessionMessage admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Returns the user session end message.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the user session end message.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getEndUserSessionMessage(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getEndUserSessionMessage(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEndUserSessionMessageFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEndUserSessionMessageFormatted (admin As ComponentName) As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::ICharSequence ^ GetEndUserSessionMessageFormatted(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? GetEndUserSessionMessageFormatted (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetEndUserSessionMessageFormatted(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetEndUserSessionMessageFormatted(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetEndUserSessionMessageFormatted : Android.Content.ComponentName -&gt; Java.Lang.ICharSequence&#xA;override this.GetEndUserSessionMessageFormatted : Android.Content.ComponentName -&gt; Java.Lang.ICharSequence" Usage="devicePolicyManager.GetEndUserSessionMessageFormatted admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEndUserSessionMessage", "(Landroid/content/ComponentName;)Ljava/lang/CharSequence;", "GetGetEndUserSessionMessage_Landroid_content_ComponentName_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getEndUserSessionMessage", "(Landroid/content/ComponentName;)Ljava/lang/CharSequence;", "GetGetEndUserSessionMessage_Landroid_content_ComponentName_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Returns the user session end message.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the user session end message.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getEndUserSessionMessage(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getEndUserSessionMessage(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFactoryResetProtectionPolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFactoryResetProtectionPolicy (admin As ComponentName) As FactoryResetProtectionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Admin::FactoryResetProtectionPolicy ^ GetFactoryResetProtectionPolicy(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.FactoryResetProtectionPolicy? GetFactoryResetProtectionPolicy (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Admin.FactoryResetProtectionPolicy GetFactoryResetProtectionPolicy(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetFactoryResetProtectionPolicy(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetFactoryResetProtectionPolicy : Android.Content.ComponentName -&gt; Android.App.Admin.FactoryResetProtectionPolicy&#xA;override this.GetFactoryResetProtectionPolicy : Android.Content.ComponentName -&gt; Android.App.Admin.FactoryResetProtectionPolicy" Usage="devicePolicyManager.GetFactoryResetProtectionPolicy admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFactoryResetProtectionPolicy", "(Landroid/content/ComponentName;)Landroid/app/admin/FactoryResetProtectionPolicy;", "GetGetFactoryResetProtectionPolicy_Landroid_content_ComponentName_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFactoryResetProtectionPolicy", "(Landroid/content/ComponentName;)Landroid/app/admin/FactoryResetProtectionPolicy;", "GetGetFactoryResetProtectionPolicy_Landroid_content_ComponentName_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_FACTORY_RESET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_FACTORY_RESET")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.FactoryResetProtectionPolicy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with or
                         <c>null</c> if the caller is not a device admin</param>
        <summary>Callable by device owner or profile owner of an organization-owned device, to retrieve
            the current factory reset protection (FRP) policy set previously by
            <c>#setFactoryResetProtectionPolicy</c>.</summary>
        <returns>The current FRP policy object or <c>null</c> if no policy is set.</returns>
        <remarks>
          <para>Callable by device owner or profile owner of an organization-owned device, to retrieve
            the current factory reset protection (FRP) policy set previously by
            <c>#setFactoryResetProtectionPolicy</c>.</para>
          <para>This method can also be called by the FRP management agent on device or with the permission
            <c>android.Manifest.permission#MASTER_CLEAR</c>, in which case, it can pass <c>null</c>
            as the ComponentName.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getFactoryResetProtectionPolicy(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getFactoryResetProtectionPolicy(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalPrivateDnsHost">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalPrivateDnsHost (admin As ComponentName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetGlobalPrivateDnsHost(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual string? GetGlobalPrivateDnsHost (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetGlobalPrivateDnsHost(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetGlobalPrivateDnsHost(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalPrivateDnsHost : Android.Content.ComponentName -&gt; string&#xA;override this.GetGlobalPrivateDnsHost : Android.Content.ComponentName -&gt; string" Usage="devicePolicyManager.GetGlobalPrivateDnsHost admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getGlobalPrivateDnsHost", "(Landroid/content/ComponentName;)Ljava/lang/String;", "GetGetGlobalPrivateDnsHost_Landroid_content_ComponentName_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getGlobalPrivateDnsHost", "(Landroid/content/ComponentName;)Ljava/lang/String;", "GetGetGlobalPrivateDnsHost_Landroid_content_ComponentName_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Returns the system-wide Private DNS host.</summary>
        <returns>The hostname used for Private DNS queries, null if none is set.</returns>
        <remarks>
          <para>Returns the system-wide Private DNS host.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getGlobalPrivateDnsHost(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getGlobalPrivateDnsHost(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalPrivateDnsMode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalPrivateDnsMode (admin As ComponentName) As PrivateDnsMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Admin::PrivateDnsMode GetGlobalPrivateDnsMode(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.PrivateDnsMode GetGlobalPrivateDnsMode (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.Admin.PrivateDnsMode GetGlobalPrivateDnsMode(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetGlobalPrivateDnsMode(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalPrivateDnsMode : Android.Content.ComponentName -&gt; Android.App.Admin.PrivateDnsMode&#xA;override this.GetGlobalPrivateDnsMode : Android.Content.ComponentName -&gt; Android.App.Admin.PrivateDnsMode" Usage="devicePolicyManager.GetGlobalPrivateDnsMode admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getGlobalPrivateDnsMode", "(Landroid/content/ComponentName;)I", "GetGetGlobalPrivateDnsMode_Landroid_content_ComponentName_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getGlobalPrivateDnsMode", "(Landroid/content/ComponentName;)I", "GetGetGlobalPrivateDnsMode_Landroid_content_ComponentName_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PrivateDnsMode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Returns the system-wide Private DNS mode.</summary>
        <returns>one of <c>PRIVATE_DNS_MODE_OFF</c>, <c>PRIVATE_DNS_MODE_OPPORTUNISTIC</c>,
            <c>PRIVATE_DNS_MODE_PROVIDER_HOSTNAME</c> or <c>PRIVATE_DNS_MODE_UNKNOWN</c>.</returns>
        <remarks>
          <para>Returns the system-wide Private DNS mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getGlobalPrivateDnsMode(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getGlobalPrivateDnsMode(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstalledCaCerts">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInstalledCaCerts (admin As ComponentName) As IList(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ GetInstalledCaCerts(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;byte[]&gt; GetInstalledCaCerts (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;unsigned int8[]&gt; GetInstalledCaCerts(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetInstalledCaCerts(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetInstalledCaCerts : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;byte[]&gt;&#xA;override this.GetInstalledCaCerts : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;byte[]&gt;" Usage="devicePolicyManager.GetInstalledCaCerts admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstalledCaCerts", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetInstalledCaCerts_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstalledCaCerts", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetInstalledCaCerts_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                         <c>null</c> if calling from a delegated certificate installer.</param>
        <summary>Returns all CA certificates that are currently trusted, excluding system CA certificates.</summary>
        <returns>a List of byte[] arrays, each encoding one user CA certificate.</returns>
        <remarks>
          <para>Returns all CA certificates that are currently trusted, excluding system CA certificates.
            If a user has installed any certificates by other means than device policy these will be
            included too.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getInstalledCaCerts(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getInstalledCaCerts(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeepUninstalledPackages">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeepUninstalledPackages (admin As ComponentName) As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetKeepUninstalledPackages(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt;? GetKeepUninstalledPackages (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetKeepUninstalledPackages(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetKeepUninstalledPackages(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetKeepUninstalledPackages : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetKeepUninstalledPackages : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="devicePolicyManager.GetKeepUninstalledPackages admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getKeepUninstalledPackages", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetKeepUninstalledPackages_Landroid_content_ComponentName_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getKeepUninstalledPackages", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetKeepUninstalledPackages_Landroid_content_ComponentName_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                       <c>null</c> if the caller is a keep uninstalled packages delegate.</param>
        <summary>Get the list of apps to keep around as APKs even if no user has currently installed it.</summary>
        <returns>List of package names to keep cached.</returns>
        <remarks>
          <para>Get the list of apps to keep around as APKs even if no user has currently installed it. This
            function can be called by a device owner or by a delegate given the
            <c>#DELEGATION_KEEP_UNINSTALLED_PACKAGES</c> scope via <c>#setDelegatedScopes</c>.</para>
          <para>Please note that packages returned in this method are not automatically pre-cached.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getKeepUninstalledPackages(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getKeepUninstalledPackages(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyguardDisabledFeatures">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyguardDisabledFeatures (admin As ComponentName) As KeyguardDisable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Admin::KeyguardDisable GetKeyguardDisabledFeatures(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.KeyguardDisable GetKeyguardDisabledFeatures (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.Admin.KeyguardDisable GetKeyguardDisabledFeatures(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetKeyguardDisabledFeatures(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetKeyguardDisabledFeatures : Android.Content.ComponentName -&gt; Android.App.Admin.KeyguardDisable&#xA;override this.GetKeyguardDisabledFeatures : Android.Content.ComponentName -&gt; Android.App.Admin.KeyguardDisable" Usage="devicePolicyManager.GetKeyguardDisabledFeatures admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getKeyguardDisabledFeatures", "(Landroid/content/ComponentName;)I", "GetGetKeyguardDisabledFeatures_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getKeyguardDisabledFeatures", "(Landroid/content/ComponentName;)I", "GetGetKeyguardDisabledFeatures_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to check whether any
            admins have disabled features in keyguard.</param>
        <summary>Determine whether or not features have been disabled in keyguard either by the calling
            admin, if specified, or all admins that set restrictions on this user and its participating
            profiles.</summary>
        <returns>bitfield of flags. See <c>#setKeyguardDisabledFeatures(ComponentName, int)</c>
            for a list.</returns>
        <remarks>
          <para>Determine whether or not features have been disabled in keyguard either by the calling
            admin, if specified, or all admins that set restrictions on this user and its participating
            profiles. Restrictions on profiles that have a separate challenge are not taken into account.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getKeyguardDisabledFeatures(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getKeyguardDisabledFeatures(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetKeyPairGrants">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetKeyPairGrants (alias As String) As IDictionary(Of Integer, ICollection(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;Java::Lang::Integer ^, System::Collections::Generic::ICollection&lt;System::String ^&gt; ^&gt; ^ GetKeyPairGrants(System::String ^ alias);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;Java.Lang.Integer,System.Collections.Generic.ICollection&lt;string&gt;&gt; GetKeyPairGrants (string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;class Java.Lang.Integer, class System.Collections.Generic.ICollection`1&lt;string&gt;&gt; GetKeyPairGrants(string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetKeyPairGrants(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetKeyPairGrants : string -&gt; System.Collections.Generic.IDictionary&lt;Java.Lang.Integer, System.Collections.Generic.ICollection&lt;string&gt;&gt;&#xA;override this.GetKeyPairGrants : string -&gt; System.Collections.Generic.IDictionary&lt;Java.Lang.Integer, System.Collections.Generic.ICollection&lt;string&gt;&gt;" Usage="devicePolicyManager.GetKeyPairGrants alias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getKeyPairGrants", "(Ljava/lang/String;)Ljava/util/Map;", "GetGetKeyPairGrants_Ljava_lang_String_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getKeyPairGrants", "(Ljava/lang/String;)Ljava/util/Map;", "GetGetKeyPairGrants_Ljava_lang_String_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;Java.Lang.Integer,System.Collections.Generic.ICollection&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alias">The alias of the key to grant access to.</param>
        <summary>Called by a device or profile owner, or delegated certificate chooser (an app that has been
            delegated the <c>#DELEGATION_CERT_SELECTION</c> privilege), to query which apps have access
            to a given KeyChain key.</summary>
        <returns>apps that have access to a given key, arranged in a map from UID to sets of
                  package names.</returns>
        <remarks>
          <para>Called by a device or profile owner, or delegated certificate chooser (an app that has been
            delegated the <c>#DELEGATION_CERT_SELECTION</c> privilege), to query which apps have access
            to a given KeyChain key.
            
            Key are granted on a per-UID basis, so if several apps share the same UID, granting access to
            one of them automatically grants it to others. This method returns a map containing one entry
            per grantee UID. Entries have UIDs as keys and sets of corresponding package names as values.
            In particular, grantee packages that don't share UID with other packages are represented by
            entries having singleton sets as values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getKeyPairGrants(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getKeyPairGrants(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLockTaskFeatures">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLockTaskFeatures (admin As ComponentName) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLockTaskFeatures(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual int GetLockTaskFeatures (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLockTaskFeatures(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetLockTaskFeatures(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetLockTaskFeatures : Android.Content.ComponentName -&gt; int&#xA;override this.GetLockTaskFeatures : Android.Content.ComponentName -&gt; int" Usage="devicePolicyManager.GetLockTaskFeatures admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLockTaskFeatures", "(Landroid/content/ComponentName;)I", "GetGetLockTaskFeatures_Landroid_content_ComponentName_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLockTaskFeatures", "(Landroid/content/ComponentName;)I", "GetGetLockTaskFeatures_Landroid_content_ComponentName_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_TASK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_TASK")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <summary>Gets which system features are enabled for LockTask mode.</summary>
        <returns>bitfield of flags. See <c>#setLockTaskFeatures(ComponentName, int)</c> for a list.</returns>
        <remarks>
          <para>Gets which system features are enabled for LockTask mode.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, the returned policy will be the
            current resolved policy rather than the policy set by the calling admin.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getLockTaskFeatures(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getLockTaskFeatures(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLockTaskPackages">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLockTaskPackages (admin As ComponentName) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetLockTaskPackages(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual string[] GetLockTaskPackages (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetLockTaskPackages(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetLockTaskPackages(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetLockTaskPackages : Android.Content.ComponentName -&gt; string[]&#xA;override this.GetLockTaskPackages : Android.Content.ComponentName -&gt; string[]" Usage="devicePolicyManager.GetLockTaskPackages admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLockTaskPackages", "(Landroid/content/ComponentName;)[Ljava/lang/String;", "GetGetLockTaskPackages_Landroid_content_ComponentName_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLockTaskPackages", "(Landroid/content/ComponentName;)[Ljava/lang/String;", "GetGetLockTaskPackages_Landroid_content_ComponentName_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_TASK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_TASK")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <summary>Returns the list of packages allowed to start the lock task mode.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the list of packages allowed to start the lock task mode.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, the returned policy will be the
            current resolved policy rather than the policy set by the calling admin.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getLockTaskPackages(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getLockTaskPackages(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLongSupportMessage">
      <MemberSignature Language="VB.NET" Value="Public Function GetLongSupportMessage (admin As ComponentName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLongSupportMessage(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public string? GetLongSupportMessage (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetLongSupportMessage(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetLongSupportMessage(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="member this.GetLongSupportMessage : Android.Content.ComponentName -&gt; string" Usage="devicePolicyManager.GetLongSupportMessage admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by a device admin to get the long support message.</summary>
        <returns>The message set by <c>#setLongSupportMessage(ComponentName, CharSequence)</c> or
                    null if no message has been set.</returns>
        <remarks>
          <para>Called by a device admin to get the long support message.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getLongSupportMessage(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getLongSupportMessage(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLongSupportMessageFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLongSupportMessageFormatted (admin As ComponentName) As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::ICharSequence ^ GetLongSupportMessageFormatted(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? GetLongSupportMessageFormatted (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetLongSupportMessageFormatted(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetLongSupportMessageFormatted(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetLongSupportMessageFormatted : Android.Content.ComponentName -&gt; Java.Lang.ICharSequence&#xA;override this.GetLongSupportMessageFormatted : Android.Content.ComponentName -&gt; Java.Lang.ICharSequence" Usage="devicePolicyManager.GetLongSupportMessageFormatted admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLongSupportMessage", "(Landroid/content/ComponentName;)Ljava/lang/CharSequence;", "GetGetLongSupportMessage_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLongSupportMessage", "(Landroid/content/ComponentName;)Ljava/lang/CharSequence;", "GetGetLongSupportMessage_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by a device admin to get the long support message.</summary>
        <returns>The message set by <c>#setLongSupportMessage(ComponentName, CharSequence)</c> or
                    null if no message has been set.</returns>
        <remarks>
          <para>Called by a device admin to get the long support message.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getLongSupportMessage(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getLongSupportMessage(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManagedProfileMaximumTimeOff">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManagedProfileMaximumTimeOff (admin As ComponentName) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetManagedProfileMaximumTimeOff(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual long GetManagedProfileMaximumTimeOff (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetManagedProfileMaximumTimeOff(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetManagedProfileMaximumTimeOff(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetManagedProfileMaximumTimeOff : Android.Content.ComponentName -&gt; int64&#xA;override this.GetManagedProfileMaximumTimeOff : Android.Content.ComponentName -&gt; int64" Usage="devicePolicyManager.GetManagedProfileMaximumTimeOff admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getManagedProfileMaximumTimeOff", "(Landroid/content/ComponentName;)J", "GetGetManagedProfileMaximumTimeOff_Landroid_content_ComponentName_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getManagedProfileMaximumTimeOff", "(Landroid/content/ComponentName;)J", "GetGetManagedProfileMaximumTimeOff_Landroid_content_ComponentName_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with</param>
        <summary>Called by a profile owner of an organization-owned managed profile to get maximum time
            the profile is allowed to be turned off.</summary>
        <returns>Maximum time the profile is allowed to be off in milliseconds or 0 if not limited.</returns>
        <remarks>
          <para>Called by a profile owner of an organization-owned managed profile to get maximum time
            the profile is allowed to be turned off.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getManagedProfileMaximumTimeOff(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getManagedProfileMaximumTimeOff(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMaximumFailedPasswordsForWipe">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMaximumFailedPasswordsForWipe (admin As ComponentName) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetMaximumFailedPasswordsForWipe(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual int GetMaximumFailedPasswordsForWipe (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMaximumFailedPasswordsForWipe(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetMaximumFailedPasswordsForWipe(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetMaximumFailedPasswordsForWipe : Android.Content.ComponentName -&gt; int&#xA;override this.GetMaximumFailedPasswordsForWipe : Android.Content.ComponentName -&gt; int" Usage="devicePolicyManager.GetMaximumFailedPasswordsForWipe admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMaximumFailedPasswordsForWipe", "(Landroid/content/ComponentName;)I", "GetGetMaximumFailedPasswordsForWipe_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMaximumFailedPasswordsForWipe", "(Landroid/content/ComponentName;)I", "GetGetMaximumFailedPasswordsForWipe_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate
            all admins.</param>
        <summary>Retrieve the current maximum number of login attempts that are allowed before the device
            or profile is wiped, for a particular admin or all admins that set restrictions on this user
            and its participating profiles.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Retrieve the current maximum number of login attempts that are allowed before the device
            or profile is wiped, for a particular admin or all admins that set restrictions on this user
            and its participating profiles. Restrictions on profiles that have a separate challenge are
            not taken into account.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            the value for the parent profile.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always empty and this method returns a default value (0) indicating that the
            policy is not set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getMaximumFailedPasswordsForWipe(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getMaximumFailedPasswordsForWipe(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetMaximumTimeToLock">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMaximumTimeToLock (admin As ComponentName) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetMaximumTimeToLock(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual long GetMaximumTimeToLock (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetMaximumTimeToLock(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetMaximumTimeToLock(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetMaximumTimeToLock : Android.Content.ComponentName -&gt; int64&#xA;override this.GetMaximumTimeToLock : Android.Content.ComponentName -&gt; int64" Usage="devicePolicyManager.GetMaximumTimeToLock admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMaximumTimeToLock", "(Landroid/content/ComponentName;)J", "GetGetMaximumTimeToLock_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMaximumTimeToLock", "(Landroid/content/ComponentName;)J", "GetGetMaximumTimeToLock_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate
            all admins.</param>
        <summary>Retrieve the current maximum time to unlock for a particular admin or all admins that set
            restrictions on this user and its participating profiles.</summary>
        <returns>time in milliseconds for the given admin or the minimum value (strictest) of
            all admins if admin is null. Returns 0 if there are no restrictions.</returns>
        <remarks>
          <para>Retrieve the current maximum time to unlock for a particular admin or all admins that set
            restrictions on this user and its participating profiles. Restrictions on profiles that have
            a separate challenge are not taken into account.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getMaximumTimeToLock(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getMaximumTimeToLock(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetMeteredDataDisabledPackages">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetMeteredDataDisabledPackages (admin As ComponentName) As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetMeteredDataDisabledPackages(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetMeteredDataDisabledPackages (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetMeteredDataDisabledPackages(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetMeteredDataDisabledPackages(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetMeteredDataDisabledPackages : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetMeteredDataDisabledPackages : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="devicePolicyManager.GetMeteredDataDisabledPackages admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getMeteredDataDisabledPackages", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetMeteredDataDisabledPackages_Landroid_content_ComponentName_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getMeteredDataDisabledPackages", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetMeteredDataDisabledPackages_Landroid_content_ComponentName_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by a device or profile owner to retrieve the list of packages which are restricted
            by the admin from using metered data.</summary>
        <returns>the list of restricted package names.</returns>
        <remarks>
          <para>Called by a device or profile owner to retrieve the list of packages which are restricted
            by the admin from using metered data.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getMeteredDataDisabledPackages(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getMeteredDataDisabledPackages(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrganizationColor">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrganizationColor (admin As ComponentName) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetOrganizationColor(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual int GetOrganizationColor (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOrganizationColor(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetOrganizationColor(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetOrganizationColor : Android.Content.ComponentName -&gt; int&#xA;override this.GetOrganizationColor : Android.Content.ComponentName -&gt; int" Usage="devicePolicyManager.GetOrganizationColor admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOrganizationColor", "(Landroid/content/ComponentName;)I", "GetGetOrganizationColor_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOrganizationColor", "(Landroid/content/ComponentName;)I", "GetGetOrganizationColor_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by a profile owner of a managed profile to retrieve the color used for customization.</summary>
        <returns>The 24bit (0xRRGGBB) representation of the color to be used.</returns>
        <remarks>
          <para>Called by a profile owner of a managed profile to retrieve the color used for customization.
            This color is used as background color of the confirm credentials screen for that user.</para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#R</c>, the organization color is never
            used as the background color of the confirm credentials screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getOrganizationColor(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getOrganizationColor(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrganizationName">
      <MemberSignature Language="VB.NET" Value="Public Function GetOrganizationName (admin As ComponentName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetOrganizationName(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public string? GetOrganizationName (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetOrganizationName(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetOrganizationName(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="member this.GetOrganizationName : Android.Content.ComponentName -&gt; string" Usage="devicePolicyManager.GetOrganizationName admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by the device owner (since API 26) or profile owner (since API 24) or holders of the
            permission <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_ORGANIZATION_IDENTITY
            to retrieve the name of the organization under management.
            
            @param admin Which {@link DeviceAdminReceiver</c> this request is associated with.</summary>
        <returns>The organization name or <c>null</c> if none is set.</returns>
        <remarks>
          <para>Called by the device owner (since API 26) or profile owner (since API 24) or holders of the
            permission <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_ORGANIZATION_IDENTITY
            to retrieve the name of the organization under management.
            
            @param admin Which {@link DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getOrganizationName(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getOrganizationName(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOrganizationNameFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrganizationNameFormatted (admin As ComponentName) As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::ICharSequence ^ GetOrganizationNameFormatted(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? GetOrganizationNameFormatted (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetOrganizationNameFormatted(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetOrganizationNameFormatted(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetOrganizationNameFormatted : Android.Content.ComponentName -&gt; Java.Lang.ICharSequence&#xA;override this.GetOrganizationNameFormatted : Android.Content.ComponentName -&gt; Java.Lang.ICharSequence" Usage="devicePolicyManager.GetOrganizationNameFormatted admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOrganizationName", "(Landroid/content/ComponentName;)Ljava/lang/CharSequence;", "GetGetOrganizationName_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOrganizationName", "(Landroid/content/ComponentName;)Ljava/lang/CharSequence;", "GetGetOrganizationName_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_ORGANIZATION_IDENTITY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_ORGANIZATION_IDENTITY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by the device owner (since API 26) or profile owner (since API 24) or holders of the
            permission <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_ORGANIZATION_IDENTITY
            to retrieve the name of the organization under management.
            
            @param admin Which {@link DeviceAdminReceiver</c> this request is associated with.</summary>
        <returns>The organization name or <c>null</c> if none is set.</returns>
        <remarks>
          <para>Called by the device owner (since API 26) or profile owner (since API 24) or holders of the
            permission <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_ORGANIZATION_IDENTITY
            to retrieve the name of the organization under management.
            
            @param admin Which {@link DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getOrganizationName(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getOrganizationName(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOverrideApns">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOverrideApns (admin As ComponentName) As IList(Of ApnSetting)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Android::Telephony::Data::ApnSetting ^&gt; ^ GetOverrideApns(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Telephony.Data.ApnSetting&gt;? GetOverrideApns (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Telephony.Data.ApnSetting&gt; GetOverrideApns(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetOverrideApns(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetOverrideApns : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;Android.Telephony.Data.ApnSetting&gt;&#xA;override this.GetOverrideApns : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;Android.Telephony.Data.ApnSetting&gt;" Usage="devicePolicyManager.GetOverrideApns admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOverrideApns", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetOverrideApns_Landroid_content_ComponentName_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOverrideApns", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetOverrideApns_Landroid_content_ComponentName_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Telephony.Data.ApnSetting&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with</param>
        <summary>Called by device owner or managed profile owner to get all override APNs inserted by
            device owner or managed profile owner previously using <c>#addOverrideApn</c>.</summary>
        <returns>A list of override APNs inserted by device owner.</returns>
        <remarks>
          <para>Called by device owner or managed profile owner to get all override APNs inserted by
            device owner or managed profile owner previously using <c>#addOverrideApn</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getOverrideApns(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getOverrideApns(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParentProfileInstance">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetParentProfileInstance (admin As ComponentName) As DevicePolicyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Admin::DevicePolicyManager ^ GetParentProfileInstance(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.DevicePolicyManager GetParentProfileInstance (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Admin.DevicePolicyManager GetParentProfileInstance(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetParentProfileInstance(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetParentProfileInstance : Android.Content.ComponentName -&gt; Android.App.Admin.DevicePolicyManager&#xA;override this.GetParentProfileInstance : Android.Content.ComponentName -&gt; Android.App.Admin.DevicePolicyManager" Usage="devicePolicyManager.GetParentProfileInstance admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getParentProfileInstance", "(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyManager;", "GetGetParentProfileInstance_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getParentProfileInstance", "(Landroid/content/ComponentName;)Landroid/app/admin/DevicePolicyManager;", "GetGetParentProfileInstance_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.DevicePolicyManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">To be added.</param>
        <summary>Called by the profile owner of a managed profile to obtain a <c>DevicePolicyManager</c>
            whose calls act on the parent profile.</summary>
        <returns>a new instance of <c>DevicePolicyManager</c> that acts on the parent profile.</returns>
        <remarks>
          <para>Called by the profile owner of a managed profile to obtain a <c>DevicePolicyManager</c>
            whose calls act on the parent profile.</para>
          <para>The following methods are supported for the parent instance, all other methods will
            throw a SecurityException when called on the parent instance:
            &lt;ul&gt;
            &lt;li&gt;<c>#getPasswordQuality</c>&lt;/li&gt;
            &lt;li&gt;<c>#setPasswordQuality</c>&lt;/li&gt;
            &lt;li&gt;<c>#getPasswordMinimumLength</c>&lt;/li&gt;
            &lt;li&gt;<c>#setPasswordMinimumLength</c>&lt;/li&gt;
            &lt;li&gt;<c>#getPasswordMinimumUpperCase</c>&lt;/li&gt;
            &lt;li&gt;<c>#setPasswordMinimumUpperCase</c>&lt;/li&gt;
            &lt;li&gt;<c>#getPasswordMinimumLowerCase</c>&lt;/li&gt;
            &lt;li&gt;<c>#setPasswordMinimumLowerCase</c>&lt;/li&gt;
            &lt;li&gt;<c>#getPasswordMinimumLetters</c>&lt;/li&gt;
            &lt;li&gt;<c>#setPasswordMinimumLetters</c>&lt;/li&gt;
            &lt;li&gt;<c>#getPasswordMinimumNumeric</c>&lt;/li&gt;
            &lt;li&gt;<c>#setPasswordMinimumNumeric</c>&lt;/li&gt;
            &lt;li&gt;<c>#getPasswordMinimumSymbols</c>&lt;/li&gt;
            &lt;li&gt;<c>#setPasswordMinimumSymbols</c>&lt;/li&gt;
            &lt;li&gt;<c>#getPasswordMinimumNonLetter</c>&lt;/li&gt;
            &lt;li&gt;<c>#setPasswordMinimumNonLetter</c>&lt;/li&gt;
            &lt;li&gt;<c>#getPasswordHistoryLength</c>&lt;/li&gt;
            &lt;li&gt;<c>#setPasswordHistoryLength</c>&lt;/li&gt;
            &lt;li&gt;<c>#getPasswordExpirationTimeout</c>&lt;/li&gt;
            &lt;li&gt;<c>#setPasswordExpirationTimeout</c>&lt;/li&gt;
            &lt;li&gt;<c>#getPasswordExpiration</c>&lt;/li&gt;
            &lt;li&gt;<c>#getPasswordMaximumLength</c>&lt;/li&gt;
            &lt;li&gt;<c>#isActivePasswordSufficient</c>&lt;/li&gt;
            &lt;li&gt;<c>#getCurrentFailedPasswordAttempts</c>&lt;/li&gt;
            &lt;li&gt;<c>#getMaximumFailedPasswordsForWipe</c>&lt;/li&gt;
            &lt;li&gt;<c>#setMaximumFailedPasswordsForWipe</c>&lt;/li&gt;
            &lt;li&gt;<c>#getMaximumTimeToLock</c>&lt;/li&gt;
            &lt;li&gt;<c>#setMaximumTimeToLock</c>&lt;/li&gt;
            &lt;li&gt;<c>#lockNow</c>&lt;/li&gt;
            &lt;li&gt;<c>#getKeyguardDisabledFeatures</c>&lt;/li&gt;
            &lt;li&gt;<c>#setKeyguardDisabledFeatures</c>&lt;/li&gt;
            &lt;li&gt;<c>#getTrustAgentConfiguration</c>&lt;/li&gt;
            &lt;li&gt;<c>#setTrustAgentConfiguration</c>&lt;/li&gt;
            &lt;li&gt;<c>#getRequiredStrongAuthTimeout</c>&lt;/li&gt;
            &lt;li&gt;<c>#setRequiredStrongAuthTimeout</c>&lt;/li&gt;
            &lt;li&gt;<c>#getAccountTypesWithManagementDisabled</c>&lt;/li&gt;
            &lt;li&gt;<c>#setRequiredPasswordComplexity(int)</c>&lt;/li&gt;
            &lt;li&gt;<c>#getRequiredPasswordComplexity()</c>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>The following methods are supported for the parent instance but can only be called by the
            profile owner of a managed profile that was created during the device provisioning flow:
            &lt;ul&gt;
            &lt;li&gt;<c>#getPasswordComplexity</c>&lt;/li&gt;
            &lt;li&gt;<c>#setCameraDisabled</c>&lt;/li&gt;
            &lt;li&gt;<c>#getCameraDisabled</c>&lt;/li&gt;
            &lt;li&gt;<c>#setAccountManagementDisabled(ComponentName, String, boolean)</c>&lt;/li&gt;
            &lt;li&gt;<c>#setPermittedInputMethods</c>&lt;/li&gt;
            &lt;li&gt;<c>#getPermittedInputMethods</c>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>The following methods can be called by the profile owner of a managed profile
            on an organization-owned device:
            &lt;ul&gt;
            &lt;li&gt;<c>#wipeData</c>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getParentProfileInstance(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getParentProfileInstance(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPasswordExpiration">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPasswordExpiration (admin As ComponentName) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetPasswordExpiration(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual long GetPasswordExpiration (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetPasswordExpiration(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPasswordExpiration(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPasswordExpiration : Android.Content.ComponentName -&gt; int64&#xA;override this.GetPasswordExpiration : Android.Content.ComponentName -&gt; int64" Usage="devicePolicyManager.GetPasswordExpiration admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPasswordExpiration", "(Landroid/content/ComponentName;)J", "GetGetPasswordExpiration_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPasswordExpiration", "(Landroid/content/ComponentName;)J", "GetGetPasswordExpiration_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate all admins.</param>
        <summary>Get the current password expiration time for a particular admin or all admins that set
            restrictions on this user and its participating profiles.</summary>
        <returns>The password expiration time, in milliseconds since epoch.</returns>
        <remarks>
          <para>Get the current password expiration time for a particular admin or all admins that set
            restrictions on this user and its participating profiles. Restrictions on profiles that have
            a separate challenge are not taken into account. If admin is <c>null</c>, then a composite
            of all expiration times is returned - which will be the minimum of all of them.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            the password expiration for the parent profile.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password expiration is always disabled and this method always returns 0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPasswordExpiration(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPasswordExpiration(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordExpirationTimeout">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPasswordExpirationTimeout (admin As ComponentName) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetPasswordExpirationTimeout(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual long GetPasswordExpirationTimeout (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetPasswordExpirationTimeout(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPasswordExpirationTimeout(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPasswordExpirationTimeout : Android.Content.ComponentName -&gt; int64&#xA;override this.GetPasswordExpirationTimeout : Android.Content.ComponentName -&gt; int64" Usage="devicePolicyManager.GetPasswordExpirationTimeout admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPasswordExpirationTimeout", "(Landroid/content/ComponentName;)J", "GetGetPasswordExpirationTimeout_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPasswordExpirationTimeout", "(Landroid/content/ComponentName;)J", "GetGetPasswordExpirationTimeout_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate all admins.</param>
        <summary>Get the password expiration timeout for the given admin.</summary>
        <returns>The timeout for the given admin or the minimum of all timeouts</returns>
        <remarks>
          <para>Get the password expiration timeout for the given admin. The expiration timeout is the
            recurring expiration timeout provided in the call to
            <c>#setPasswordExpirationTimeout(ComponentName, long)</c> for the given admin or the
            aggregate of all participating policy administrators if <c>admin</c> is null. Admins that
            have set restrictions on profiles that have a separate challenge are not taken into account.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password expiration is always disabled and this method always returns 0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPasswordExpirationTimeout(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPasswordExpirationTimeout(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordHistoryLength">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPasswordHistoryLength (admin As ComponentName) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPasswordHistoryLength(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual int GetPasswordHistoryLength (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordHistoryLength(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPasswordHistoryLength(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPasswordHistoryLength : Android.Content.ComponentName -&gt; int&#xA;override this.GetPasswordHistoryLength : Android.Content.ComponentName -&gt; int" Usage="devicePolicyManager.GetPasswordHistoryLength admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPasswordHistoryLength", "(Landroid/content/ComponentName;)I", "GetGetPasswordHistoryLength_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPasswordHistoryLength", "(Landroid/content/ComponentName;)I", "GetGetPasswordHistoryLength_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate
            all admins.</param>
        <summary>Retrieve the current password history length for a particular admin or all admins that
            set restrictions on this user and its participating profiles.</summary>
        <returns>The length of the password history</returns>
        <remarks>
          <para>Retrieve the current password history length for a particular admin or all admins that
            set restrictions on this user and its participating profiles. Restrictions on profiles that
            have a separate challenge are not taken into account.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password history length is always 0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPasswordHistoryLength(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPasswordHistoryLength(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMaximumLength">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPasswordMaximumLength (quality As PasswordQuality) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPasswordMaximumLength(Android::App::Admin::PasswordQuality quality);" />
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMaximumLength (Android.App.Admin.PasswordQuality quality);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMaximumLength(valuetype Android.App.Admin.PasswordQuality quality) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPasswordMaximumLength(Android.App.Admin.PasswordQuality)" />
      <MemberSignature Language="F#" Value="abstract member GetPasswordMaximumLength : Android.App.Admin.PasswordQuality -&gt; int&#xA;override this.GetPasswordMaximumLength : Android.App.Admin.PasswordQuality -&gt; int" Usage="devicePolicyManager.GetPasswordMaximumLength quality" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPasswordMaximumLength", "(I)I", "GetGetPasswordMaximumLength_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPasswordMaximumLength", "(I)I", "GetGetPasswordMaximumLength_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="quality" Type="Android.App.Admin.PasswordQuality">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="quality">The quality being interrogated.</param>
        <summary>Return the maximum password length that the device supports for a
            particular password quality.</summary>
        <returns>Returns the maximum length that the user can enter.</returns>
        <remarks>
          <para>Return the maximum password length that the device supports for a
            particular password quality.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always empty and this method always returns 0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPasswordMaximumLength(int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPasswordMaximumLength(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumLength">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPasswordMinimumLength (admin As ComponentName) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPasswordMinimumLength(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumLength (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumLength(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPasswordMinimumLength(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPasswordMinimumLength : Android.Content.ComponentName -&gt; int&#xA;override this.GetPasswordMinimumLength : Android.Content.ComponentName -&gt; int" Usage="devicePolicyManager.GetPasswordMinimumLength admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPasswordMinimumLength", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumLength_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPasswordMinimumLength", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumLength_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate
            all admins.</param>
        <summary>Retrieve the current minimum password length for a particular admin or all admins that set
            restrictions on this user and its participating profiles.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Retrieve the current minimum password length for a particular admin or all admins that set
            restrictions on this user and its participating profiles. Restrictions on profiles that have
            a separate challenge are not taken into account.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPasswordMinimumLength(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPasswordMinimumLength(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumLetters">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPasswordMinimumLetters (admin As ComponentName) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPasswordMinimumLetters(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumLetters (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumLetters(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPasswordMinimumLetters(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPasswordMinimumLetters : Android.Content.ComponentName -&gt; int&#xA;override this.GetPasswordMinimumLetters : Android.Content.ComponentName -&gt; int" Usage="devicePolicyManager.GetPasswordMinimumLetters admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPasswordMinimumLetters", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumLetters_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPasswordMinimumLetters", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumLetters_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to
                       aggregate all admins.</param>
        <summary>Retrieve the current number of letters required in the password
            for a particular admin or all admins that set restrictions on this user
            and its participating profiles.</summary>
        <returns>The minimum number of letters required in the password.</returns>
        <remarks>
          <para>Retrieve the current number of letters required in the password
            for a particular admin or all admins that set restrictions on this user
            and its participating profiles. Restrictions on profiles that have
            a separate challenge are not taken into account.
            This is the same value as set by
            <c>#setPasswordMinimumLetters(ComponentName, int)</c>
            and only applies when the password quality is
            <c>#PASSWORD_QUALITY_COMPLEX</c>.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPasswordMinimumLetters(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPasswordMinimumLetters(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumLowerCase">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPasswordMinimumLowerCase (admin As ComponentName) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPasswordMinimumLowerCase(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumLowerCase (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumLowerCase(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPasswordMinimumLowerCase(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPasswordMinimumLowerCase : Android.Content.ComponentName -&gt; int&#xA;override this.GetPasswordMinimumLowerCase : Android.Content.ComponentName -&gt; int" Usage="devicePolicyManager.GetPasswordMinimumLowerCase admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPasswordMinimumLowerCase", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumLowerCase_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPasswordMinimumLowerCase", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumLowerCase_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to
                       aggregate all admins.</param>
        <summary>Retrieve the current number of lower case letters required in the password
            for a particular admin or all admins that set restrictions on this user
            and its participating profiles.</summary>
        <returns>The minimum number of lower case letters required in the
                    password.</returns>
        <remarks>
          <para>Retrieve the current number of lower case letters required in the password
            for a particular admin or all admins that set restrictions on this user
            and its participating profiles. Restrictions on profiles that have
            a separate challenge are not taken into account.
            This is the same value as set by
            <c>#setPasswordMinimumLowerCase(ComponentName, int)</c>
            and only applies when the password quality is
            <c>#PASSWORD_QUALITY_COMPLEX</c>.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPasswordMinimumLowerCase(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPasswordMinimumLowerCase(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumNonLetter">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPasswordMinimumNonLetter (admin As ComponentName) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPasswordMinimumNonLetter(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumNonLetter (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumNonLetter(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPasswordMinimumNonLetter(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPasswordMinimumNonLetter : Android.Content.ComponentName -&gt; int&#xA;override this.GetPasswordMinimumNonLetter : Android.Content.ComponentName -&gt; int" Usage="devicePolicyManager.GetPasswordMinimumNonLetter admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPasswordMinimumNonLetter", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumNonLetter_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPasswordMinimumNonLetter", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumNonLetter_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to
                       aggregate all admins.</param>
        <summary>Retrieve the current number of non-letter characters required in the password
            for a particular admin or all admins that set restrictions on this user
            and its participating profiles.</summary>
        <returns>The minimum number of letters required in the password.</returns>
        <remarks>
          <para>Retrieve the current number of non-letter characters required in the password
            for a particular admin or all admins that set restrictions on this user
            and its participating profiles. Restrictions on profiles that have
            a separate challenge are not taken into account.
            This is the same value as set by
            <c>#setPasswordMinimumNonLetter(ComponentName, int)</c>
            and only applies when the password quality is
            <c>#PASSWORD_QUALITY_COMPLEX</c>.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPasswordMinimumNonLetter(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPasswordMinimumNonLetter(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumNumeric">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPasswordMinimumNumeric (admin As ComponentName) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPasswordMinimumNumeric(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumNumeric (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumNumeric(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPasswordMinimumNumeric(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPasswordMinimumNumeric : Android.Content.ComponentName -&gt; int&#xA;override this.GetPasswordMinimumNumeric : Android.Content.ComponentName -&gt; int" Usage="devicePolicyManager.GetPasswordMinimumNumeric admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPasswordMinimumNumeric", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumNumeric_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPasswordMinimumNumeric", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumNumeric_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to
                       aggregate all admins.</param>
        <summary>Retrieve the current number of numerical digits required in the password
            for a particular admin or all admins that set restrictions on this user
            and its participating profiles.</summary>
        <returns>The minimum number of numerical digits required in the password.</returns>
        <remarks>
          <para>Retrieve the current number of numerical digits required in the password
            for a particular admin or all admins that set restrictions on this user
            and its participating profiles. Restrictions on profiles that have
            a separate challenge are not taken into account.
            This is the same value as set by
            <c>#setPasswordMinimumNumeric(ComponentName, int)</c>
            and only applies when the password quality is
            <c>#PASSWORD_QUALITY_COMPLEX</c>.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPasswordMinimumNumeric(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPasswordMinimumNumeric(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumSymbols">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPasswordMinimumSymbols (admin As ComponentName) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPasswordMinimumSymbols(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumSymbols (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumSymbols(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPasswordMinimumSymbols(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPasswordMinimumSymbols : Android.Content.ComponentName -&gt; int&#xA;override this.GetPasswordMinimumSymbols : Android.Content.ComponentName -&gt; int" Usage="devicePolicyManager.GetPasswordMinimumSymbols admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPasswordMinimumSymbols", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumSymbols_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPasswordMinimumSymbols", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumSymbols_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to
                       aggregate all admins.</param>
        <summary>Retrieve the current number of symbols required in the password
            for a particular admin or all admins that set restrictions on this user
            and its participating profiles.</summary>
        <returns>The minimum number of symbols required in the password.</returns>
        <remarks>
          <para>Retrieve the current number of symbols required in the password
            for a particular admin or all admins that set restrictions on this user
            and its participating profiles. Restrictions on profiles that have
            a separate challenge are not taken into account. This is the same value as
            set by <c>#setPasswordMinimumSymbols(ComponentName, int)</c>
            and only applies when the password quality is
            <c>#PASSWORD_QUALITY_COMPLEX</c>.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPasswordMinimumSymbols(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPasswordMinimumSymbols(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordMinimumUpperCase">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPasswordMinimumUpperCase (admin As ComponentName) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPasswordMinimumUpperCase(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual int GetPasswordMinimumUpperCase (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPasswordMinimumUpperCase(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPasswordMinimumUpperCase(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPasswordMinimumUpperCase : Android.Content.ComponentName -&gt; int&#xA;override this.GetPasswordMinimumUpperCase : Android.Content.ComponentName -&gt; int" Usage="devicePolicyManager.GetPasswordMinimumUpperCase admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPasswordMinimumUpperCase", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumUpperCase_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPasswordMinimumUpperCase", "(Landroid/content/ComponentName;)I", "GetGetPasswordMinimumUpperCase_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to
                       aggregate all admins.</param>
        <summary>Retrieve the current number of upper case letters required in the password
            for a particular admin or all admins that set restrictions on this user and
            its participating profiles.</summary>
        <returns>The minimum number of upper case letters required in the
                    password.</returns>
        <remarks>
          <para>Retrieve the current number of upper case letters required in the password
            for a particular admin or all admins that set restrictions on this user and
            its participating profiles. Restrictions on profiles that have a separate challenge
            are not taken into account.
            This is the same value as set by
            <c>#setPasswordMinimumUpperCase(ComponentName, int)</c>
            and only applies when the password quality is
            <c>#PASSWORD_QUALITY_COMPLEX</c>.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPasswordMinimumUpperCase(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPasswordMinimumUpperCase(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetPasswordQuality">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPasswordQuality (admin As ComponentName) As PasswordQuality" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Admin::PasswordQuality GetPasswordQuality(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.PasswordQuality GetPasswordQuality (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.Admin.PasswordQuality GetPasswordQuality(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPasswordQuality(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPasswordQuality : Android.Content.ComponentName -&gt; Android.App.Admin.PasswordQuality&#xA;override this.GetPasswordQuality : Android.Content.ComponentName -&gt; Android.App.Admin.PasswordQuality" Usage="devicePolicyManager.GetPasswordQuality admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPasswordQuality", "(Landroid/content/ComponentName;)I", "GetGetPasswordQuality_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPasswordQuality", "(Landroid/content/ComponentName;)I", "GetGetPasswordQuality_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PasswordQuality</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate
            all admins.</param>
        <summary>Retrieve the current minimum password quality for a particular admin or all admins that set
            restrictions on this user and its participating profiles.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Retrieve the current minimum password quality for a particular admin or all admins that set
            restrictions on this user and its participating profiles. Restrictions on profiles that have
            a separate challenge are not taken into account.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>Note: on devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature,
            the password is always treated as empty.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPasswordQuality(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPasswordQuality(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetPendingSystemUpdate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPendingSystemUpdate (admin As ComponentName) As SystemUpdateInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Admin::SystemUpdateInfo ^ GetPendingSystemUpdate(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.SystemUpdateInfo? GetPendingSystemUpdate (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Admin.SystemUpdateInfo GetPendingSystemUpdate(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPendingSystemUpdate(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPendingSystemUpdate : Android.Content.ComponentName -&gt; Android.App.Admin.SystemUpdateInfo&#xA;override this.GetPendingSystemUpdate : Android.Content.ComponentName -&gt; Android.App.Admin.SystemUpdateInfo" Usage="devicePolicyManager.GetPendingSystemUpdate admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPendingSystemUpdate", "(Landroid/content/ComponentName;)Landroid/app/admin/SystemUpdateInfo;", "GetGetPendingSystemUpdate_Landroid_content_ComponentName_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPendingSystemUpdate", "(Landroid/content/ComponentName;)Landroid/app/admin/SystemUpdateInfo;", "GetGetPendingSystemUpdate_Landroid_content_ComponentName_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.SystemUpdateInfo</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which profile or device owner this request is associated with.</param>
        <summary>Called by device or profile owners to get information about a pending system update.</summary>
        <returns>Information about a pending system update or <c>null</c> if no update pending.</returns>
        <remarks>
          <para>Called by device or profile owners to get information about a pending system update.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPendingSystemUpdate(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPendingSystemUpdate(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermissionGrantState">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPermissionGrantState (admin As ComponentName, packageName As String, permission As String) As PermissionGrantState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Admin::PermissionGrantState GetPermissionGrantState(Android::Content::ComponentName ^ admin, System::String ^ packageName, System::String ^ permission);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.PermissionGrantState GetPermissionGrantState (Android.Content.ComponentName? admin, string packageName, string permission);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.Admin.PermissionGrantState GetPermissionGrantState(class Android.Content.ComponentName admin, string packageName, string permission) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPermissionGrantState(Android.Content.ComponentName,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetPermissionGrantState : Android.Content.ComponentName * string * string -&gt; Android.App.Admin.PermissionGrantState&#xA;override this.GetPermissionGrantState : Android.Content.ComponentName * string * string -&gt; Android.App.Admin.PermissionGrantState" Usage="devicePolicyManager.GetPermissionGrantState (admin, packageName, permission)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPermissionGrantState", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)I", "GetGetPermissionGrantState_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPermissionGrantState", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)I", "GetGetPermissionGrantState_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_RUNTIME_PERMISSIONS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_RUNTIME_PERMISSIONS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PermissionGrantState</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="permission" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <param name="packageName">The application to check the grant state for.</param>
        <param name="permission">The permission to check for.</param>
        <summary>Returns the current grant state of a runtime permission for a specific application.</summary>
        <returns>the current grant state specified by device policy. If admins have not set a grant
                    has not set a grant state, the return value is
                    <c>#PERMISSION_GRANT_STATE_DEFAULT</c>. This does not indicate whether or not the
                    permission is currently granted for the package.
                    &lt;p/&gt;
                    If a grant state was set by the profile or device owner, then the return value will
                    be one of <c>#PERMISSION_GRANT_STATE_DENIED</c> or
                    <c>#PERMISSION_GRANT_STATE_GRANTED</c>, which indicates if the permission is
                    currently denied or granted.</returns>
        <remarks>
          <para>Returns the current grant state of a runtime permission for a specific application. This
            function can be called by a device owner, profile owner, or by a delegate given the
            <c>#DELEGATION_PERMISSION_GRANT</c> scope via <c>#setDelegatedScopes</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPermissionGrantState(android.content.ComponentName,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPermissionGrantState(android.content.ComponentName, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermissionPolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPermissionPolicy (admin As ComponentName) As PermissionPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Admin::PermissionPolicy GetPermissionPolicy(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.PermissionPolicy GetPermissionPolicy (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.Admin.PermissionPolicy GetPermissionPolicy(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPermissionPolicy(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPermissionPolicy : Android.Content.ComponentName -&gt; Android.App.Admin.PermissionPolicy&#xA;override this.GetPermissionPolicy : Android.Content.ComponentName -&gt; Android.App.Admin.PermissionPolicy" Usage="devicePolicyManager.GetPermissionPolicy admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPermissionPolicy", "(Landroid/content/ComponentName;)I", "GetGetPermissionPolicy_Landroid_content_ComponentName_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPermissionPolicy", "(Landroid/content/ComponentName;)I", "GetGetPermissionPolicy_Landroid_content_ComponentName_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PermissionPolicy</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which profile or device owner this request is associated with.</param>
        <summary>Returns the current runtime permission policy set by the device or profile owner.</summary>
        <returns>the current policy for future permission requests.</returns>
        <remarks>
          <para>Returns the current runtime permission policy set by the device or profile owner. The
            default is <c>#PERMISSION_POLICY_PROMPT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPermissionPolicy(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPermissionPolicy(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermittedAccessibilityServices">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPermittedAccessibilityServices (admin As ComponentName) As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetPermittedAccessibilityServices(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt;? GetPermittedAccessibilityServices (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetPermittedAccessibilityServices(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPermittedAccessibilityServices(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPermittedAccessibilityServices : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetPermittedAccessibilityServices : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="devicePolicyManager.GetPermittedAccessibilityServices admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPermittedAccessibilityServices", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetPermittedAccessibilityServices_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPermittedAccessibilityServices", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetPermittedAccessibilityServices_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Returns the list of permitted accessibility services set by this device or profile owner.</summary>
        <returns>List of accessiblity service package names.</returns>
        <remarks>
          <para>Returns the list of permitted accessibility services set by this device or profile owner.</para>
          <para>An empty list means no accessibility services except system services are allowed.
            <c>null</c> means all accessibility services are allowed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPermittedAccessibilityServices(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPermittedAccessibilityServices(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermittedCrossProfileNotificationListeners">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPermittedCrossProfileNotificationListeners (admin As ComponentName) As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetPermittedCrossProfileNotificationListeners(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt;? GetPermittedCrossProfileNotificationListeners (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetPermittedCrossProfileNotificationListeners(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPermittedCrossProfileNotificationListeners(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPermittedCrossProfileNotificationListeners : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetPermittedCrossProfileNotificationListeners : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="devicePolicyManager.GetPermittedCrossProfileNotificationListeners admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPermittedCrossProfileNotificationListeners", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetPermittedCrossProfileNotificationListeners_Landroid_content_ComponentName_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPermittedCrossProfileNotificationListeners", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetPermittedCrossProfileNotificationListeners_Landroid_content_ComponentName_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">To be added.</param>
        <summary>Returns the list of packages installed on the primary user that allowed to use a
            <c>android.service.notification.NotificationListenerService</c> to receive
            notifications from this managed profile, as set by the profile owner.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the list of packages installed on the primary user that allowed to use a
            <c>android.service.notification.NotificationListenerService</c> to receive
            notifications from this managed profile, as set by the profile owner.</para>
          <para>An empty list means no notification listener services except system ones are allowed.
            A <c>null</c> return value indicates that all notification listeners are allowed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPermittedCrossProfileNotificationListeners(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPermittedCrossProfileNotificationListeners(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermittedInputMethods">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPermittedInputMethods (admin As ComponentName) As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetPermittedInputMethods(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt;? GetPermittedInputMethods (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetPermittedInputMethods(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPermittedInputMethods(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPermittedInputMethods : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetPermittedInputMethods : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="devicePolicyManager.GetPermittedInputMethods admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPermittedInputMethods", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetPermittedInputMethods_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPermittedInputMethods", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetPermittedInputMethods_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_INPUT_METHODS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_INPUT_METHODS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin</param>
        <summary>Returns the list of permitted input methods set by this device or profile owner.</summary>
        <returns>List of input method package names.</returns>
        <remarks>
          <para>Returns the list of permitted input methods set by this device or profile owner.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance,
            returned by <c>#getParentProfileInstance(ComponentName)</c>, where the caller must be
            a profile owner of an organization-owned managed profile. If called on the parent instance,
            then the returned list of permitted input methods are those which are applied on the
            personal profile.</para>
          <para>An empty list means no input methods except system input methods are allowed. Null means all
            input methods are allowed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPermittedInputMethods(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPermittedInputMethods(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPersonalAppsSuspendedReasons">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPersonalAppsSuspendedReasons (admin As ComponentName) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetPersonalAppsSuspendedReasons(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual int GetPersonalAppsSuspendedReasons (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetPersonalAppsSuspendedReasons(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetPersonalAppsSuspendedReasons(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetPersonalAppsSuspendedReasons : Android.Content.ComponentName -&gt; int&#xA;override this.GetPersonalAppsSuspendedReasons : Android.Content.ComponentName -&gt; int" Usage="devicePolicyManager.GetPersonalAppsSuspendedReasons admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPersonalAppsSuspendedReasons", "(Landroid/content/ComponentName;)I", "GetGetPersonalAppsSuspendedReasons_Landroid_content_ComponentName_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPersonalAppsSuspendedReasons", "(Landroid/content/ComponentName;)I", "GetGetPersonalAppsSuspendedReasons_Landroid_content_ComponentName_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">To be added.</param>
        <summary>Called by profile owner of an organization-owned managed profile to check whether
            personal apps are suspended.</summary>
        <returns>a bitmask of reasons for personal apps suspension or
                <c>#PERSONAL_APPS_NOT_SUSPENDED</c> if apps are not suspended.</returns>
        <remarks>
          <para>Called by profile owner of an organization-owned managed profile to check whether
            personal apps are suspended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPersonalAppsSuspendedReasons(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPersonalAppsSuspendedReasons(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredStrongAuthTimeout">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequiredStrongAuthTimeout (admin As ComponentName) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual long GetRequiredStrongAuthTimeout(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual long GetRequiredStrongAuthTimeout (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetRequiredStrongAuthTimeout(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetRequiredStrongAuthTimeout(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetRequiredStrongAuthTimeout : Android.Content.ComponentName -&gt; int64&#xA;override this.GetRequiredStrongAuthTimeout : Android.Content.ComponentName -&gt; int64" Usage="devicePolicyManager.GetRequiredStrongAuthTimeout admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRequiredStrongAuthTimeout", "(Landroid/content/ComponentName;)J", "GetGetRequiredStrongAuthTimeout_Landroid_content_ComponentName_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRequiredStrongAuthTimeout", "(Landroid/content/ComponentName;)J", "GetGetRequiredStrongAuthTimeout_Landroid_content_ComponentName_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to aggregate
                    across all participating admins.</param>
        <summary>Determine for how long the user will be able to use secondary, non strong auth for
            authentication, since last strong method authentication (password, pin or pattern) was used.</summary>
        <returns>The timeout in milliseconds or 0 if not configured for the provided admin.</returns>
        <remarks>
          <para>Determine for how long the user will be able to use secondary, non strong auth for
            authentication, since last strong method authentication (password, pin or pattern) was used.
            After the returned timeout the user is required to use strong authentication method.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature,
            0 is returned to indicate that no timeout is configured.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getRequiredStrongAuthTimeout(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getRequiredStrongAuthTimeout(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScreenCaptureDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetScreenCaptureDisabled (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetScreenCaptureDisabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool GetScreenCaptureDisabled (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetScreenCaptureDisabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetScreenCaptureDisabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetScreenCaptureDisabled : Android.Content.ComponentName -&gt; bool&#xA;override this.GetScreenCaptureDisabled : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.GetScreenCaptureDisabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getScreenCaptureDisabled", "(Landroid/content/ComponentName;)Z", "GetGetScreenCaptureDisabled_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getScreenCaptureDisabled", "(Landroid/content/ComponentName;)Z", "GetGetScreenCaptureDisabled_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check, or <c>null</c> to check whether any
                         admins have disabled screen capture.</param>
        <summary>Determine whether or not screen capture has been disabled by the calling
            admin, if specified, or all admins.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Determine whether or not screen capture has been disabled by the calling
            admin, if specified, or all admins.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance,
            returned by <c>#getParentProfileInstance(ComponentName)</c>, where the caller must be
            the profile owner of an organization-owned managed profile (the calling admin must be
            specified).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getScreenCaptureDisabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getScreenCaptureDisabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecondaryUsers">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecondaryUsers (admin As ComponentName) As IList(Of UserHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Android::OS::UserHandle ^&gt; ^ GetSecondaryUsers(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;? GetSecondaryUsers (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.OS.UserHandle&gt; GetSecondaryUsers(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetSecondaryUsers(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetSecondaryUsers : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;&#xA;override this.GetSecondaryUsers : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;" Usage="devicePolicyManager.GetSecondaryUsers admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSecondaryUsers", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetSecondaryUsers_Landroid_content_ComponentName_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSecondaryUsers", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetSecondaryUsers_Landroid_content_ComponentName_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by a device owner to list all secondary users on the device.</summary>
        <returns>list of other <c>UserHandle</c>s on the device.</returns>
        <remarks>
          <para>Called by a device owner to list all secondary users on the device. Managed profiles are not
            considered as secondary users.</para>
          <para>Used for various user management APIs, including <c>#switchUser</c>, <c>#removeUser</c>
            and <c>#stopUser</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getSecondaryUsers(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getSecondaryUsers(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShortSupportMessage">
      <MemberSignature Language="VB.NET" Value="Public Function GetShortSupportMessage (admin As ComponentName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetShortSupportMessage(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public string? GetShortSupportMessage (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetShortSupportMessage(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetShortSupportMessage(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="member this.GetShortSupportMessage : Android.Content.ComponentName -&gt; string" Usage="devicePolicyManager.GetShortSupportMessage admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <summary>Called by a device admin or holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_SUPPORT_MESSAGE</c> to get the short
            support message.</summary>
        <returns>The message set by <c>#setShortSupportMessage(ComponentName, CharSequence)</c> or
                    null if no message has been set.</returns>
        <remarks>
          <para>Called by a device admin or holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_SUPPORT_MESSAGE</c> to get the short
            support message.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getShortSupportMessage(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getShortSupportMessage(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetShortSupportMessageFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetShortSupportMessageFormatted (admin As ComponentName) As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::ICharSequence ^ GetShortSupportMessageFormatted(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? GetShortSupportMessageFormatted (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetShortSupportMessageFormatted(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetShortSupportMessageFormatted(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetShortSupportMessageFormatted : Android.Content.ComponentName -&gt; Java.Lang.ICharSequence&#xA;override this.GetShortSupportMessageFormatted : Android.Content.ComponentName -&gt; Java.Lang.ICharSequence" Usage="devicePolicyManager.GetShortSupportMessageFormatted admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getShortSupportMessage", "(Landroid/content/ComponentName;)Ljava/lang/CharSequence;", "GetGetShortSupportMessage_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getShortSupportMessage", "(Landroid/content/ComponentName;)Ljava/lang/CharSequence;", "GetGetShortSupportMessage_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SUPPORT_MESSAGE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SUPPORT_MESSAGE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <summary>Called by a device admin or holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_SUPPORT_MESSAGE</c> to get the short
            support message.</summary>
        <returns>The message set by <c>#setShortSupportMessage(ComponentName, CharSequence)</c> or
                    null if no message has been set.</returns>
        <remarks>
          <para>Called by a device admin or holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_SUPPORT_MESSAGE</c> to get the short
            support message.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getShortSupportMessage(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getShortSupportMessage(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStartUserSessionMessage">
      <MemberSignature Language="VB.NET" Value="Public Function GetStartUserSessionMessage (admin As ComponentName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetStartUserSessionMessage(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public string? GetStartUserSessionMessage (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetStartUserSessionMessage(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetStartUserSessionMessage(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="member this.GetStartUserSessionMessage : Android.Content.ComponentName -&gt; string" Usage="devicePolicyManager.GetStartUserSessionMessage admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Returns the user session start message.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the user session start message.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getStartUserSessionMessage(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getStartUserSessionMessage(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStartUserSessionMessageFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStartUserSessionMessageFormatted (admin As ComponentName) As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::ICharSequence ^ GetStartUserSessionMessageFormatted(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? GetStartUserSessionMessageFormatted (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetStartUserSessionMessageFormatted(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetStartUserSessionMessageFormatted(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetStartUserSessionMessageFormatted : Android.Content.ComponentName -&gt; Java.Lang.ICharSequence&#xA;override this.GetStartUserSessionMessageFormatted : Android.Content.ComponentName -&gt; Java.Lang.ICharSequence" Usage="devicePolicyManager.GetStartUserSessionMessageFormatted admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStartUserSessionMessage", "(Landroid/content/ComponentName;)Ljava/lang/CharSequence;", "GetGetStartUserSessionMessage_Landroid_content_ComponentName_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStartUserSessionMessage", "(Landroid/content/ComponentName;)Ljava/lang/CharSequence;", "GetGetStartUserSessionMessage_Landroid_content_ComponentName_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Returns the user session start message.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the user session start message.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getStartUserSessionMessage(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getStartUserSessionMessage(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageEncryption">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStorageEncryption (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetStorageEncryption(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool GetStorageEncryption (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetStorageEncryption(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetStorageEncryption(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetStorageEncryption : Android.Content.ComponentName -&gt; bool&#xA;override this.GetStorageEncryption : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.GetStorageEncryption admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStorageEncryption", "(Landroid/content/ComponentName;)Z", "GetGetStorageEncryption_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStorageEncryption", "(Landroid/content/ComponentName;)Z", "GetGetStorageEncryption_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.  If null,
            this will return the requested encryption setting as an aggregate of all active
            administrators.</param>
        <summary>This member is deprecated.</summary>
        <returns>true if the admin(s) are requesting encryption, false if not.</returns>
        <remarks>
          <para>This member is deprecated. This method only returns the value set by <c>#setStorageEncryption</c>.
            It does not actually reflect the storage encryption status.
            Use <c>#getStorageEncryptionStatus</c> for that.
            
            Called by an application that is administering the device to
            determine the requested setting for secure storage.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getStorageEncryption(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getStorageEncryption(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="GetTrustAgentConfiguration">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTrustAgentConfiguration (admin As ComponentName, agent As ComponentName) As IList(Of PersistableBundle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Android::OS::PersistableBundle ^&gt; ^ GetTrustAgentConfiguration(Android::Content::ComponentName ^ admin, Android::Content::ComponentName ^ agent);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.OS.PersistableBundle&gt;? GetTrustAgentConfiguration (Android.Content.ComponentName? admin, Android.Content.ComponentName agent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.OS.PersistableBundle&gt; GetTrustAgentConfiguration(class Android.Content.ComponentName admin, class Android.Content.ComponentName agent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetTrustAgentConfiguration(Android.Content.ComponentName,Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetTrustAgentConfiguration : Android.Content.ComponentName * Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;Android.OS.PersistableBundle&gt;&#xA;override this.GetTrustAgentConfiguration : Android.Content.ComponentName * Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;Android.OS.PersistableBundle&gt;" Usage="devicePolicyManager.GetTrustAgentConfiguration (admin, agent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTrustAgentConfiguration", "(Landroid/content/ComponentName;Landroid/content/ComponentName;)Ljava/util/List;", "GetGetTrustAgentConfiguration_Landroid_content_ComponentName_Landroid_content_ComponentName_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTrustAgentConfiguration", "(Landroid/content/ComponentName;Landroid/content/ComponentName;)Ljava/util/List;", "GetGetTrustAgentConfiguration_Landroid_content_ComponentName_Landroid_content_ComponentName_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.OS.PersistableBundle&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="agent" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. If null,
            this function returns a list of configurations for all admins that declare
            <c>#KEYGUARD_DISABLE_TRUST_AGENTS</c>. If any admin declares
            <c>#KEYGUARD_DISABLE_TRUST_AGENTS</c> but doesn't call
            <c>#setTrustAgentConfiguration(ComponentName, ComponentName, PersistableBundle)</c>
            for this <paramref>agent</paramref> or calls it with a null configuration, null is returned.</param>
        <param name="agent">Which component to get enabled features for.</param>
        <summary>Gets configuration for the given trust agent based on aggregating all calls to
            <c>#setTrustAgentConfiguration(ComponentName, ComponentName, PersistableBundle)</c> for
            all device admins.</summary>
        <returns>configuration for the given trust agent.</returns>
        <remarks>
          <para>Gets configuration for the given trust agent based on aggregating all calls to
            <c>#setTrustAgentConfiguration(ComponentName, ComponentName, PersistableBundle)</c> for
            all device admins.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve the configuration set
            on the parent profile.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, null is
            always returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getTrustAgentConfiguration(android.content.ComponentName,%20android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getTrustAgentConfiguration(android.content.ComponentName, android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserControlDisabledPackages">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUserControlDisabledPackages (admin As ComponentName) As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetUserControlDisabledPackages(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetUserControlDisabledPackages (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetUserControlDisabledPackages(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetUserControlDisabledPackages(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetUserControlDisabledPackages : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.GetUserControlDisabledPackages : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="devicePolicyManager.GetUserControlDisabledPackages admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getUserControlDisabledPackages", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetUserControlDisabledPackages_Landroid_content_ComponentName_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getUserControlDisabledPackages", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetGetUserControlDisabledPackages_Landroid_content_ComponentName_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_APPS_CONTROL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_APPS_CONTROL")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <summary>Returns the list of packages over which user control is disabled by a device or profile
            owner or holders of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_APPS_CONTROL</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the list of packages over which user control is disabled by a device or profile
            owner or holders of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_APPS_CONTROL</c>.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, the returned policy will be the
            current resolved policy rather than the policy set by the calling admin.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getUserControlDisabledPackages(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getUserControlDisabledPackages(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserRestrictions">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetUserRestrictions (admin As ComponentName) As Bundle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::OS::Bundle ^ GetUserRestrictions(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle GetUserRestrictions (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle GetUserRestrictions(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetUserRestrictions(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetUserRestrictions : Android.Content.ComponentName -&gt; Android.OS.Bundle&#xA;override this.GetUserRestrictions : Android.Content.ComponentName -&gt; Android.OS.Bundle" Usage="devicePolicyManager.GetUserRestrictions admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getUserRestrictions", "(Landroid/content/ComponentName;)Landroid/os/Bundle;", "GetGetUserRestrictions_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getUserRestrictions", "(Landroid/content/ComponentName;)Landroid/os/Bundle;", "GetGetUserRestrictions_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by an admin to get user restrictions set by themselves with
            <c>#addUserRestriction(ComponentName, String)</c>.</summary>
        <returns>a <c>Bundle</c> whose keys are the user restrictions, and the values a
            <c>boolean</c> indicating whether the restriction is set.</returns>
        <remarks>
          <para>Called by an admin to get user restrictions set by themselves with
            <c>#addUserRestriction(ComponentName, String)</c>.</para>
          <para>The target user may have more restrictions set by the system or other admin.
            To get all the user restrictions currently set, use
            <c>UserManager#getUserRestrictions()</c>.</para>
          <para>The profile owner of an organization-owned managed profile may invoke this method on
            the <c>DevicePolicyManager</c> instance it obtained from
            <c>#getParentProfileInstance(ComponentName)</c>, for retrieving device-wide restrictions
            it previously set with <c>#addUserRestriction(ComponentName, String)</c>.</para>
          <para>For callers targeting Android <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> or
            above, this API will return the local restrictions set on the calling user, or on the parent
            profile if called from the <c>DevicePolicyManager</c> instance obtained from
            <c>#getParentProfileInstance(ComponentName)</c>. To get global restrictions set by admin,
            call <c>#getUserRestrictionsGlobally()</c> instead.</para>
          <para>Note that this is different that the returned restrictions for callers targeting pre
            Android <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, were this API returns
            all local/global restrictions set by the admin on the calling user using
            <c>#addUserRestriction(ComponentName, String)</c> or the parent user if called on the
            <c>DevicePolicyManager</c> instance it obtained from <c>#getParentProfileInstance</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getUserRestrictions(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getUserRestrictions(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWifiMacAddress">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWifiMacAddress (admin As ComponentName) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetWifiMacAddress(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual string? GetWifiMacAddress (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetWifiMacAddress(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GetWifiMacAddress(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member GetWifiMacAddress : Android.Content.ComponentName -&gt; string&#xA;override this.GetWifiMacAddress : Android.Content.ComponentName -&gt; string" Usage="devicePolicyManager.GetWifiMacAddress admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getWifiMacAddress", "(Landroid/content/ComponentName;)Ljava/lang/String;", "GetGetWifiMacAddress_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getWifiMacAddress", "(Landroid/content/ComponentName;)Ljava/lang/String;", "GetGetWifiMacAddress_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which admin this request is associated with. Null if the caller is not a device
                         admin</param>
        <summary>Called by a device owner or profile owner on organization-owned device to get the MAC
            address of the Wi-Fi device.</summary>
        <returns>the MAC address of the Wi-Fi device, or null when the information is not available.
                    (For example, Wi-Fi hasn't been enabled, or the device doesn't support Wi-Fi.)
                    &lt;p&gt;
                    The address will be in the <c>XX:XX:XX:XX:XX:XX</c> format.</returns>
        <remarks>
          <para>Called by a device owner or profile owner on organization-owned device to get the MAC
            address of the Wi-Fi device.
            
            NOTE: The MAC address returned here should only be used for inventory management and is
            not likely to be the MAC address used by the device to connect to Wi-Fi networks: MAC
            addresses used for scanning and connecting to Wi-Fi networks are randomized by default.
            To get the randomized MAC address used, call
            <c>android.net.wifi.WifiConfiguration#getRandomizedMacAddress</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getWifiMacAddress(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getWifiMacAddress(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantKeyPairToApp">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GrantKeyPairToApp (admin As ComponentName, alias As String, packageName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GrantKeyPairToApp(Android::Content::ComponentName ^ admin, System::String ^ alias, System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual bool GrantKeyPairToApp (Android.Content.ComponentName? admin, string alias, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GrantKeyPairToApp(class Android.Content.ComponentName admin, string alias, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GrantKeyPairToApp(Android.Content.ComponentName,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member GrantKeyPairToApp : Android.Content.ComponentName * string * string -&gt; bool&#xA;override this.GrantKeyPairToApp : Android.Content.ComponentName * string * string -&gt; bool" Usage="devicePolicyManager.GrantKeyPairToApp (admin, alias, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("grantKeyPairToApp", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)Z", "GetGrantKeyPairToApp_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("grantKeyPairToApp", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)Z", "GetGrantKeyPairToApp_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                   <c>null</c> if calling from a delegated certificate chooser.</param>
        <param name="alias">The alias of the key to grant access to.</param>
        <param name="packageName">The name of the (already installed) package to grant access to.</param>
        <summary>Called by a device or profile owner, or delegated certificate chooser (an app that has been
            delegated the <c>#DELEGATION_CERT_SELECTION</c> privilege), to grant an application access
            to an already-installed (or generated) KeyChain key.</summary>
        <returns>
          <c>true</c> if the grant was set successfully, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Called by a device or profile owner, or delegated certificate chooser (an app that has been
            delegated the <c>#DELEGATION_CERT_SELECTION</c> privilege), to grant an application access
            to an already-installed (or generated) KeyChain key.
            This is useful (in combination with <c>#installKeyPair</c> or <c>#generateKeyPair</c>) to
            let an application call <c>android.security.KeyChain#getPrivateKey</c> without having to
            call <c>android.security.KeyChain#choosePrivateKeyAlias</c> first.
            
            The grantee app will receive the <c>android.security.KeyChain#ACTION_KEY_ACCESS_CHANGED</c>
            broadcast when access to a key is granted.
            
            Starting from <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> throws an
            <c>IllegalArgumentException</c> if <c>alias</c> doesn't correspond to an existing key.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#grantKeyPairToApp(android.content.ComponentName,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.grantKeyPairToApp(android.content.ComponentName, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GrantKeyPairToWifiAuth">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GrantKeyPairToWifiAuth (alias As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GrantKeyPairToWifiAuth(System::String ^ alias);" />
      <MemberSignature Language="C#" Value="public virtual bool GrantKeyPairToWifiAuth (string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GrantKeyPairToWifiAuth(string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.GrantKeyPairToWifiAuth(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GrantKeyPairToWifiAuth : string -&gt; bool&#xA;override this.GrantKeyPairToWifiAuth : string -&gt; bool" Usage="devicePolicyManager.GrantKeyPairToWifiAuth alias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("grantKeyPairToWifiAuth", "(Ljava/lang/String;)Z", "GetGrantKeyPairToWifiAuth_Ljava_lang_String_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("grantKeyPairToWifiAuth", "(Ljava/lang/String;)Z", "GetGrantKeyPairToWifiAuth_Ljava_lang_String_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alias">The alias of the key pair.</param>
        <summary>Called by a device or profile owner, or delegated certificate chooser (an app that has been
            delegated the <c>#DELEGATION_CERT_SELECTION</c> privilege), to allow using a KeyChain key
            pair for authentication to Wifi networks.</summary>
        <returns>
          <c>true</c> if the operation was set successfully, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Called by a device or profile owner, or delegated certificate chooser (an app that has been
            delegated the <c>#DELEGATION_CERT_SELECTION</c> privilege), to allow using a KeyChain key
            pair for authentication to Wifi networks. The key can then be used in configurations passed
            to <c>android.net.wifi.WifiManager#addNetwork</c>.
            
            Starting from <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> throws an
            <c>IllegalArgumentException</c> if <c>alias</c> doesn't correspond to an existing key.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#grantKeyPairToWifiAuth(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.grantKeyPairToWifiAuth(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasCaCertInstalled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasCaCertInstalled (admin As ComponentName, certBuffer As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasCaCertInstalled(Android::Content::ComponentName ^ admin, cli::array &lt;System::Byte&gt; ^ certBuffer);" />
      <MemberSignature Language="C#" Value="public virtual bool HasCaCertInstalled (Android.Content.ComponentName? admin, byte[]? certBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasCaCertInstalled(class Android.Content.ComponentName admin, unsigned int8[] certBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.HasCaCertInstalled(Android.Content.ComponentName,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member HasCaCertInstalled : Android.Content.ComponentName * byte[] -&gt; bool&#xA;override this.HasCaCertInstalled : Android.Content.ComponentName * byte[] -&gt; bool" Usage="devicePolicyManager.HasCaCertInstalled (admin, certBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasCaCertInstalled", "(Landroid/content/ComponentName;[B)Z", "GetHasCaCertInstalled_Landroid_content_ComponentName_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasCaCertInstalled", "(Landroid/content/ComponentName;[B)Z", "GetHasCaCertInstalled_Landroid_content_ComponentName_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="certBuffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                         <c>null</c> if calling from a delegated certificate installer.</param>
        <param name="certBuffer">encoded form of the certificate to look up.</param>
        <summary>Returns whether this certificate is installed as a trusted CA.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns whether this certificate is installed as a trusted CA.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#hasCaCertInstalled(android.content.ComponentName,%20byte[])" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.hasCaCertInstalled(android.content.ComponentName, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasGrantedPolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasGrantedPolicy (admin As ComponentName, usesPolicy As DeviceAdminUses) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasGrantedPolicy(Android::Content::ComponentName ^ admin, Android::App::Admin::DeviceAdminUses usesPolicy);" />
      <MemberSignature Language="C#" Value="public virtual bool HasGrantedPolicy (Android.Content.ComponentName admin, Android.App.Admin.DeviceAdminUses usesPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasGrantedPolicy(class Android.Content.ComponentName admin, valuetype Android.App.Admin.DeviceAdminUses usesPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.HasGrantedPolicy(Android.Content.ComponentName,Android.App.Admin.DeviceAdminUses)" />
      <MemberSignature Language="F#" Value="abstract member HasGrantedPolicy : Android.Content.ComponentName * Android.App.Admin.DeviceAdminUses -&gt; bool&#xA;override this.HasGrantedPolicy : Android.Content.ComponentName * Android.App.Admin.DeviceAdminUses -&gt; bool" Usage="devicePolicyManager.HasGrantedPolicy (admin, usesPolicy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasGrantedPolicy", "(Landroid/content/ComponentName;I)Z", "GetHasGrantedPolicy_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasGrantedPolicy", "(Landroid/content/ComponentName;I)Z", "GetHasGrantedPolicy_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="usesPolicy" Type="Android.App.Admin.DeviceAdminUses">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Must be an
                       active administrator, or an exception will be thrown.</param>
        <param name="usesPolicy">Which uses-policy to check, as defined in <c>DeviceAdminInfo</c>.</param>
        <summary>Returns true if an administrator has been granted a particular device policy.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns true if an administrator has been granted a particular device policy. This can be
            used to check whether the administrator was activated under an earlier set of policies, but
            requires additional policies after an upgrade.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#hasGrantedPolicy(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.hasGrantedPolicy(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="HasKeyPair">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasKeyPair (alias As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasKeyPair(System::String ^ alias);" />
      <MemberSignature Language="C#" Value="public virtual bool HasKeyPair (string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasKeyPair(string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.HasKeyPair(System.String)" />
      <MemberSignature Language="F#" Value="abstract member HasKeyPair : string -&gt; bool&#xA;override this.HasKeyPair : string -&gt; bool" Usage="devicePolicyManager.HasKeyPair alias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasKeyPair", "(Ljava/lang/String;)Z", "GetHasKeyPair_Ljava_lang_String_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasKeyPair", "(Ljava/lang/String;)Z", "GetHasKeyPair_Ljava_lang_String_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alias">The alias under which the key pair is installed.</param>
        <summary>This API can be called by the following to query whether a certificate and private key are
            installed under a given alias:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
               &lt;li&gt;An app that holds the
               <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_CERTIFICATES</c> permission&lt;/li&gt;
            &lt;/ul&gt;
            
            If called by the credential management app, the alias must exist in the credential
            management app's <c>android.security.AppUriAuthenticationPolicy</c>.</summary>
        <returns>
          <c>true</c> if a key pair with this alias exists, <c>false</c> otherwise.</returns>
        <remarks>
          <para>This API can be called by the following to query whether a certificate and private key are
            installed under a given alias:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
               &lt;li&gt;An app that holds the
               <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_CERTIFICATES</c> permission&lt;/li&gt;
            &lt;/ul&gt;
            
            If called by the credential management app, the alias must exist in the credential
            management app's <c>android.security.AppUriAuthenticationPolicy</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#hasKeyPair(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.hasKeyPair(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLockdownAdminConfiguredNetworks">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasLockdownAdminConfiguredNetworks (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasLockdownAdminConfiguredNetworks(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool HasLockdownAdminConfiguredNetworks (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasLockdownAdminConfiguredNetworks(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.HasLockdownAdminConfiguredNetworks(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member HasLockdownAdminConfiguredNetworks : Android.Content.ComponentName -&gt; bool&#xA;override this.HasLockdownAdminConfiguredNetworks : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.HasLockdownAdminConfiguredNetworks admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasLockdownAdminConfiguredNetworks", "(Landroid/content/ComponentName;)Z", "GetHasLockdownAdminConfiguredNetworks_Landroid_content_ComponentName_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasLockdownAdminConfiguredNetworks", "(Landroid/content/ComponentName;)Z", "GetHasLockdownAdminConfiguredNetworks_Landroid_content_ComponentName_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIFI")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIFI")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">admin Which <c>DeviceAdminReceiver</c> this request is associated
                                     with.</param>
        <summary>Called by a device owner or a profile owner of an organization-owned managed profile to
            determine whether the user is prevented from modifying networks configured by the admin.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Called by a device owner or a profile owner of an organization-owned managed profile to
            determine whether the user is prevented from modifying networks configured by the admin.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#hasLockdownAdminConfiguredNetworks(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.hasLockdownAdminConfiguredNetworks(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdTypeBaseInfo">
      <MemberSignature Language="VB.NET" Value="Public Const IdTypeBaseInfo As IdAttestationFlags  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::IdAttestationFlags IdTypeBaseInfo = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.IdAttestationFlags IdTypeBaseInfo = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.IdAttestationFlags IdTypeBaseInfo = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.IdTypeBaseInfo" />
      <MemberSignature Language="F#" Value="val mutable IdTypeBaseInfo : Android.App.Admin.IdAttestationFlags" Usage="Android.App.Admin.DevicePolicyManager.IdTypeBaseInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ID_TYPE_BASE_INFO", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ID_TYPE_BASE_INFO", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.IdAttestationFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.IdAttestationFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.IdAttestationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Specifies that the device should attest its manufacturer details.</summary>
        <remarks>
          <para>Specifies that the device should attest its manufacturer details. For use with
            <c>#generateKeyPair</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ID_TYPE_BASE_INFO" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ID_TYPE_BASE_INFO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdTypeImei">
      <MemberSignature Language="VB.NET" Value="Public Const IdTypeImei As IdAttestationFlags  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::IdAttestationFlags IdTypeImei = 4;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.IdAttestationFlags IdTypeImei = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.IdAttestationFlags IdTypeImei = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.IdTypeImei" />
      <MemberSignature Language="F#" Value="val mutable IdTypeImei : Android.App.Admin.IdAttestationFlags" Usage="Android.App.Admin.DevicePolicyManager.IdTypeImei" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ID_TYPE_IMEI", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ID_TYPE_IMEI", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.IdAttestationFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.IdAttestationFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.IdAttestationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Specifies that the device should attest its IMEI.</summary>
        <remarks>
          <para>Specifies that the device should attest its IMEI. For use with <c>#generateKeyPair</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ID_TYPE_IMEI" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ID_TYPE_IMEI</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdTypeIndividualAttestation">
      <MemberSignature Language="VB.NET" Value="Public Const IdTypeIndividualAttestation As IdAttestationFlags  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::IdAttestationFlags IdTypeIndividualAttestation = 16;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.IdAttestationFlags IdTypeIndividualAttestation = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.IdAttestationFlags IdTypeIndividualAttestation = (16)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.IdTypeIndividualAttestation" />
      <MemberSignature Language="F#" Value="val mutable IdTypeIndividualAttestation : Android.App.Admin.IdAttestationFlags" Usage="Android.App.Admin.DevicePolicyManager.IdTypeIndividualAttestation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ID_TYPE_INDIVIDUAL_ATTESTATION", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ID_TYPE_INDIVIDUAL_ATTESTATION", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.IdAttestationFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.IdAttestationFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.IdAttestationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Specifies that the device should attest using an individual attestation certificate.</summary>
        <remarks>
          <para>Specifies that the device should attest using an individual attestation certificate.
            For use with <c>#generateKeyPair</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ID_TYPE_INDIVIDUAL_ATTESTATION" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ID_TYPE_INDIVIDUAL_ATTESTATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdTypeMeid">
      <MemberSignature Language="VB.NET" Value="Public Const IdTypeMeid As IdAttestationFlags  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::IdAttestationFlags IdTypeMeid = 8;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.IdAttestationFlags IdTypeMeid = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.IdAttestationFlags IdTypeMeid = (8)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.IdTypeMeid" />
      <MemberSignature Language="F#" Value="val mutable IdTypeMeid : Android.App.Admin.IdAttestationFlags" Usage="Android.App.Admin.DevicePolicyManager.IdTypeMeid" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ID_TYPE_MEID", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ID_TYPE_MEID", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.IdAttestationFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.IdAttestationFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.IdAttestationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Specifies that the device should attest its MEID.</summary>
        <remarks>
          <para>Specifies that the device should attest its MEID. For use with <c>#generateKeyPair</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ID_TYPE_MEID" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ID_TYPE_MEID</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdTypeSerial">
      <MemberSignature Language="VB.NET" Value="Public Const IdTypeSerial As IdAttestationFlags  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::IdAttestationFlags IdTypeSerial = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.IdAttestationFlags IdTypeSerial = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.IdAttestationFlags IdTypeSerial = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.IdTypeSerial" />
      <MemberSignature Language="F#" Value="val mutable IdTypeSerial : Android.App.Admin.IdAttestationFlags" Usage="Android.App.Admin.DevicePolicyManager.IdTypeSerial" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ID_TYPE_SERIAL", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ID_TYPE_SERIAL", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.IdAttestationFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.IdAttestationFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.IdAttestationFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Specifies that the device should attest its serial number.</summary>
        <remarks>
          <para>Specifies that the device should attest its serial number. For use with
            <c>#generateKeyPair</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#ID_TYPE_SERIAL" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.ID_TYPE_SERIAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallCaCert">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InstallCaCert (admin As ComponentName, certBuffer As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool InstallCaCert(Android::Content::ComponentName ^ admin, cli::array &lt;System::Byte&gt; ^ certBuffer);" />
      <MemberSignature Language="C#" Value="public virtual bool InstallCaCert (Android.Content.ComponentName? admin, byte[]? certBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InstallCaCert(class Android.Content.ComponentName admin, unsigned int8[] certBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.InstallCaCert(Android.Content.ComponentName,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member InstallCaCert : Android.Content.ComponentName * byte[] -&gt; bool&#xA;override this.InstallCaCert : Android.Content.ComponentName * byte[] -&gt; bool" Usage="devicePolicyManager.InstallCaCert (admin, certBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("installCaCert", "(Landroid/content/ComponentName;[B)Z", "GetInstallCaCert_Landroid_content_ComponentName_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("installCaCert", "(Landroid/content/ComponentName;[B)Z", "GetInstallCaCert_Landroid_content_ComponentName_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="certBuffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                         <c>null</c> if calling from a delegated certificate installer.</param>
        <param name="certBuffer">encoded form of the certificate to install.</param>
        <summary>Installs the given certificate as a user CA.</summary>
        <returns>false if the certBuffer cannot be parsed or installation is
                    interrupted, true otherwise.</returns>
        <remarks>
          <para>Installs the given certificate as a user CA.</para>
          <para>Inserted user CAs aren't automatically trusted by apps in Android 7.0 (API level 24) and
            higher. App developers can change the default behavior for an app by adding a
            <see href="https://developer.android.com/training/articles/security-config.html">Security Configuration
            File</see> to the app manifest file.
            
            The caller must be a profile or device owner on that user, or a delegate package given the
            <c>#DELEGATION_CERT_INSTALL</c> scope via <c>#setDelegatedScopes</c>; otherwise a
            security exception will be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#installCaCert(android.content.ComponentName,%20byte[])" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.installCaCert(android.content.ComponentName, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallExistingPackage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InstallExistingPackage (admin As ComponentName, packageName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool InstallExistingPackage(Android::Content::ComponentName ^ admin, System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual bool InstallExistingPackage (Android.Content.ComponentName admin, string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InstallExistingPackage(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.InstallExistingPackage(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member InstallExistingPackage : Android.Content.ComponentName * string -&gt; bool&#xA;override this.InstallExistingPackage : Android.Content.ComponentName * string -&gt; bool" Usage="devicePolicyManager.InstallExistingPackage (admin, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("installExistingPackage", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetInstallExistingPackage_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("installExistingPackage", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetInstallExistingPackage_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="packageName">The package to be installed in the calling profile.</param>
        <summary>Install an existing package that has been installed in another user, or has been kept after
            removal via <c>#setKeepUninstalledPackages</c>.</summary>
        <returns>
          <c>true</c> if the app is installed; <c>false</c> otherwise.</returns>
        <remarks>
          <para>Install an existing package that has been installed in another user, or has been kept after
            removal via <c>#setKeepUninstalledPackages</c>.
            This function can be called by a device owner, profile owner or a delegate given
            the <c>#DELEGATION_INSTALL_EXISTING_PACKAGE</c> scope via <c>#setDelegatedScopes</c>.
            When called in a secondary user or managed profile, the user/profile must be affiliated with
            the device. See <c>#isAffiliatedUser</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#installExistingPackage(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.installExistingPackage(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallKeyPair">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InstallKeyPair (admin As ComponentName, privKey As IPrivateKey, cert As Certificate, alias As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool InstallKeyPair(Android::Content::ComponentName ^ admin, Java::Security::IPrivateKey ^ privKey, Java::Security::Cert::Certificate ^ cert, System::String ^ alias);" />
      <MemberSignature Language="C#" Value="public virtual bool InstallKeyPair (Android.Content.ComponentName? admin, Java.Security.IPrivateKey privKey, Java.Security.Cert.Certificate cert, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InstallKeyPair(class Android.Content.ComponentName admin, class Java.Security.IPrivateKey privKey, class Java.Security.Cert.Certificate cert, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.InstallKeyPair(Android.Content.ComponentName,Java.Security.IPrivateKey,Java.Security.Cert.Certificate,System.String)" />
      <MemberSignature Language="F#" Value="abstract member InstallKeyPair : Android.Content.ComponentName * Java.Security.IPrivateKey * Java.Security.Cert.Certificate * string -&gt; bool&#xA;override this.InstallKeyPair : Android.Content.ComponentName * Java.Security.IPrivateKey * Java.Security.Cert.Certificate * string -&gt; bool" Usage="devicePolicyManager.InstallKeyPair (admin, privKey, cert, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("installKeyPair", "(Landroid/content/ComponentName;Ljava/security/PrivateKey;Ljava/security/cert/Certificate;Ljava/lang/String;)Z", "GetInstallKeyPair_Landroid_content_ComponentName_Ljava_security_PrivateKey_Ljava_security_cert_Certificate_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("installKeyPair", "(Landroid/content/ComponentName;Ljava/security/PrivateKey;Ljava/security/cert/Certificate;Ljava/lang/String;)Z", "GetInstallKeyPair_Landroid_content_ComponentName_Ljava_security_PrivateKey_Ljava_security_cert_Certificate_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="privKey" Type="Java.Security.IPrivateKey" />
        <Parameter Name="cert" Type="Java.Security.Cert.Certificate" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                       <c>null</c> if the caller is not a device admin.</param>
        <param name="privKey">The private key to install.</param>
        <param name="cert">The certificate to install.</param>
        <param name="alias">The private key alias under which to install the certificate. If a certificate
            with that alias already exists, it will be overwritten.</param>
        <summary>This API can be called by the following to install a certificate and corresponding
            private key:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
               &lt;li&gt;An app that holds the
               <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_CERTIFICATES</c> permission&lt;/li&gt;
            &lt;/ul&gt;
            All apps within the profile will be able to access the certificate and use the private key,
            given direct user approval.</summary>
        <returns>
          <c>true</c> if the keys were installed, <c>false</c> otherwise.</returns>
        <remarks>
          <para>This API can be called by the following to install a certificate and corresponding
            private key:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
               &lt;li&gt;An app that holds the
               <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_CERTIFICATES</c> permission&lt;/li&gt;
            &lt;/ul&gt;
            All apps within the profile will be able to access the certificate and use the private key,
            given direct user approval.</para>
          <para>From Android <c>android.os.Build.VERSION_CODES#S</c>, the credential management app
            can call this API. However, this API sets the key pair as user selectable by default,
            which is not permitted when called by the credential management app. Instead,
            <c>#installKeyPair(ComponentName, PrivateKey, Certificate[], String, int)</c> should be
            called with <c>#INSTALLKEY_SET_USER_SELECTABLE</c> not set as a flag.</para>
          <para>Access to the installed credentials will not be granted to the caller of this API without
            direct user approval. This is for security - should a certificate installer become
            compromised, certificates it had already installed will be protected.</para>
          <para>If the installer must have access to the credentials, call
            <c>#installKeyPair(ComponentName, PrivateKey, Certificate[], String, boolean)</c> instead.</para>
          <para>Note: If the provided <c>alias</c> is of an existing alias, all former grants that apps
            have been given to access the key and certificates associated with this alias will be
            revoked.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#installKeyPair(android.content.ComponentName,%20java.security.PrivateKey,%20java.security.cert.Certificate,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.installKeyPair(android.content.ComponentName, java.security.PrivateKey, java.security.cert.Certificate, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallKeyPair">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InstallKeyPair (admin As ComponentName, privKey As IPrivateKey, certs As Certificate(), alias As String, flags As InstallKeyFlags) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool InstallKeyPair(Android::Content::ComponentName ^ admin, Java::Security::IPrivateKey ^ privKey, cli::array &lt;Java::Security::Cert::Certificate ^&gt; ^ certs, System::String ^ alias, Android::App::Admin::InstallKeyFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual bool InstallKeyPair (Android.Content.ComponentName? admin, Java.Security.IPrivateKey privKey, Java.Security.Cert.Certificate[] certs, string alias, Android.App.Admin.InstallKeyFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InstallKeyPair(class Android.Content.ComponentName admin, class Java.Security.IPrivateKey privKey, class Java.Security.Cert.Certificate[] certs, string alias, valuetype Android.App.Admin.InstallKeyFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.InstallKeyPair(Android.Content.ComponentName,Java.Security.IPrivateKey,Java.Security.Cert.Certificate[],System.String,Android.App.Admin.InstallKeyFlags)" />
      <MemberSignature Language="F#" Value="abstract member InstallKeyPair : Android.Content.ComponentName * Java.Security.IPrivateKey * Java.Security.Cert.Certificate[] * string * Android.App.Admin.InstallKeyFlags -&gt; bool&#xA;override this.InstallKeyPair : Android.Content.ComponentName * Java.Security.IPrivateKey * Java.Security.Cert.Certificate[] * string * Android.App.Admin.InstallKeyFlags -&gt; bool" Usage="devicePolicyManager.InstallKeyPair (admin, privKey, certs, alias, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("installKeyPair", "(Landroid/content/ComponentName;Ljava/security/PrivateKey;[Ljava/security/cert/Certificate;Ljava/lang/String;I)Z", "GetInstallKeyPair_Landroid_content_ComponentName_Ljava_security_PrivateKey_arrayLjava_security_cert_Certificate_Ljava_lang_String_IHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("installKeyPair", "(Landroid/content/ComponentName;Ljava/security/PrivateKey;[Ljava/security/cert/Certificate;Ljava/lang/String;I)Z", "GetInstallKeyPair_Landroid_content_ComponentName_Ljava_security_PrivateKey_arrayLjava_security_cert_Certificate_Ljava_lang_String_IHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="privKey" Type="Java.Security.IPrivateKey" />
        <Parameter Name="certs" Type="Java.Security.Cert.Certificate[]" />
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="flags" Type="Android.App.Admin.InstallKeyFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                   <c>null</c> if the caller is not a device admin.</param>
        <param name="privKey">The private key to install.</param>
        <param name="certs">The certificate chain to install. The chain should start with the leaf
                   certificate and include the chain of trust in order. This will be returned by
                   <c>android.security.KeyChain#getCertificateChain</c>.</param>
        <param name="alias">The private key alias under which to install the certificate. If a certificate
                   with that alias already exists, it will be overwritten.</param>
        <param name="flags">Flags to request that the calling app be granted access to the credentials
                   and set the key to be user-selectable. See <c>#INSTALLKEY_SET_USER_SELECTABLE</c> and
                   <c>#INSTALLKEY_REQUEST_CREDENTIALS_ACCESS</c>.</param>
        <summary>This API can be called by the following to install a certificate chain and corresponding
            private key for the leaf certificate:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
               &lt;li&gt;An app that holds the
               <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_CERTIFICATES</c> permission&lt;/li&gt;
            &lt;/ul&gt;
            All apps within the profile will be able to access the certificate chain and use the
            private key, given direct user approval (if the user is allowed to select the private key).</summary>
        <returns>
          <c>true</c> if the keys were installed, <c>false</c> otherwise.</returns>
        <remarks>
          <para>This API can be called by the following to install a certificate chain and corresponding
            private key for the leaf certificate:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
               &lt;li&gt;An app that holds the
               <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_CERTIFICATES</c> permission&lt;/li&gt;
            &lt;/ul&gt;
            All apps within the profile will be able to access the certificate chain and use the
            private key, given direct user approval (if the user is allowed to select the private key).</para>
          <para>From Android <c>android.os.Build.VERSION_CODES#S</c>, the credential management app
            can call this API. If called by the credential management app:
            &lt;ul&gt;
               &lt;li&gt;The componentName must be <c>null</c>r&lt;/li&gt;
               &lt;li&gt;The alias must exist in the credential management app's
               <c>android.security.AppUriAuthenticationPolicy</c>&lt;/li&gt;
               &lt;li&gt;The key pair must not be user selectable&lt;/li&gt;
            &lt;/ul&gt;
            Note, there can only be a credential management app on an unmanaged device.</para>
          <para>The caller of this API may grant itself access to the certificate and private key
            immediately, without user approval. It is a best practice not to request this unless strictly
            necessary since it opens up additional security vulnerabilities.</para>
          <para>Include <c>#INSTALLKEY_SET_USER_SELECTABLE</c> in the <c>flags</c> argument to allow
            the user to select the key from a dialog.</para>
          <para>Note: If the provided <c>alias</c> is of an existing alias, all former grants that apps
            have been given to access the key and certificates associated with this alias will be
            revoked.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#installKeyPair(android.content.ComponentName,%20java.security.PrivateKey,%20java.security.cert.Certificate[],%20java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.installKeyPair(android.content.ComponentName, java.security.PrivateKey, java.security.cert.Certificate[], java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallKeyPair">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InstallKeyPair (admin As ComponentName, privKey As IPrivateKey, certs As Certificate(), alias As String, requestAccess As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool InstallKeyPair(Android::Content::ComponentName ^ admin, Java::Security::IPrivateKey ^ privKey, cli::array &lt;Java::Security::Cert::Certificate ^&gt; ^ certs, System::String ^ alias, bool requestAccess);" />
      <MemberSignature Language="C#" Value="public virtual bool InstallKeyPair (Android.Content.ComponentName? admin, Java.Security.IPrivateKey privKey, Java.Security.Cert.Certificate[] certs, string alias, bool requestAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool InstallKeyPair(class Android.Content.ComponentName admin, class Java.Security.IPrivateKey privKey, class Java.Security.Cert.Certificate[] certs, string alias, bool requestAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.InstallKeyPair(Android.Content.ComponentName,Java.Security.IPrivateKey,Java.Security.Cert.Certificate[],System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member InstallKeyPair : Android.Content.ComponentName * Java.Security.IPrivateKey * Java.Security.Cert.Certificate[] * string * bool -&gt; bool&#xA;override this.InstallKeyPair : Android.Content.ComponentName * Java.Security.IPrivateKey * Java.Security.Cert.Certificate[] * string * bool -&gt; bool" Usage="devicePolicyManager.InstallKeyPair (admin, privKey, certs, alias, requestAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("installKeyPair", "(Landroid/content/ComponentName;Ljava/security/PrivateKey;[Ljava/security/cert/Certificate;Ljava/lang/String;Z)Z", "GetInstallKeyPair_Landroid_content_ComponentName_Ljava_security_PrivateKey_arrayLjava_security_cert_Certificate_Ljava_lang_String_ZHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("installKeyPair", "(Landroid/content/ComponentName;Ljava/security/PrivateKey;[Ljava/security/cert/Certificate;Ljava/lang/String;Z)Z", "GetInstallKeyPair_Landroid_content_ComponentName_Ljava_security_PrivateKey_arrayLjava_security_cert_Certificate_Ljava_lang_String_ZHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="privKey" Type="Java.Security.IPrivateKey" />
        <Parameter Name="certs" Type="Java.Security.Cert.Certificate[]" />
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="requestAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                   <c>null</c> if the caller is not a device admin.</param>
        <param name="privKey">The private key to install.</param>
        <param name="certs">The certificate chain to install. The chain should start with the leaf
                   certificate and include the chain of trust in order. This will be returned by
                   <c>android.security.KeyChain#getCertificateChain</c>.</param>
        <param name="alias">The private key alias under which to install the certificate. If a certificate
                   with that alias already exists, it will be overwritten.</param>
        <param name="requestAccess">
          <c>true</c> to request that the calling app be granted access to the
                   credentials immediately. Otherwise, access to the credentials will be gated by user
                   approval.</param>
        <summary>This API can be called by the following to install a certificate chain and corresponding
            private key for the leaf certificate:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
               &lt;li&gt;An app that holds the
               <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_CERTIFICATES</c> permission&lt;/li&gt;
            &lt;/ul&gt;
            All apps within the profile will be able to access the certificate chain and use the private
            key, given direct user approval.</summary>
        <returns>
          <c>true</c> if the keys were installed, <c>false</c> otherwise.</returns>
        <remarks>
          <para>This API can be called by the following to install a certificate chain and corresponding
            private key for the leaf certificate:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
               &lt;li&gt;An app that holds the
               <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_CERTIFICATES</c> permission&lt;/li&gt;
            &lt;/ul&gt;
            All apps within the profile will be able to access the certificate chain and use the private
            key, given direct user approval.</para>
          <para>From Android <c>android.os.Build.VERSION_CODES#S</c>, the credential management app
            can call this API. However, this API sets the key pair as user selectable by default,
            which is not permitted when called by the credential management app. Instead,
            <c>#installKeyPair(ComponentName, PrivateKey, Certificate[], String, int)</c> should be
            called with <c>#INSTALLKEY_SET_USER_SELECTABLE</c> not set as a flag.
            Note, there can only be a credential management app on an unmanaged device.</para>
          <para>The caller of this API may grant itself access to the certificate and private key
            immediately, without user approval. It is a best practice not to request this unless strictly
            necessary since it opens up additional security vulnerabilities.</para>
          <para>Note: If the provided <c>alias</c> is of an existing alias, all former grants that apps
            have been given to access the key and certificates associated with this alias will be
            revoked.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#installKeyPair(android.content.ComponentName,%20java.security.PrivateKey,%20java.security.cert.Certificate[],%20java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.installKeyPair(android.content.ComponentName, java.security.PrivateKey, java.security.cert.Certificate[], java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallkeyRequestCredentialsAccess">
      <MemberSignature Language="VB.NET" Value="Public Const InstallkeyRequestCredentialsAccess As InstallKeyFlags  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::InstallKeyFlags InstallkeyRequestCredentialsAccess = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.InstallKeyFlags InstallkeyRequestCredentialsAccess = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.InstallKeyFlags InstallkeyRequestCredentialsAccess = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.InstallkeyRequestCredentialsAccess" />
      <MemberSignature Language="F#" Value="val mutable InstallkeyRequestCredentialsAccess : Android.App.Admin.InstallKeyFlags" Usage="Android.App.Admin.DevicePolicyManager.InstallkeyRequestCredentialsAccess" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INSTALLKEY_REQUEST_CREDENTIALS_ACCESS", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INSTALLKEY_REQUEST_CREDENTIALS_ACCESS", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.InstallKeyFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.InstallKeyFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.InstallKeyFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Specifies that the calling app should be granted access to the installed credentials
            immediately.</summary>
        <remarks>
          <para>Specifies that the calling app should be granted access to the installed credentials
            immediately. Otherwise, access to the credentials will be gated by user approval.
            For use with <c>#installKeyPair(ComponentName, PrivateKey, Certificate[], String, int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#INSTALLKEY_REQUEST_CREDENTIALS_ACCESS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.INSTALLKEY_REQUEST_CREDENTIALS_ACCESS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallkeySetUserSelectable">
      <MemberSignature Language="VB.NET" Value="Public Const InstallkeySetUserSelectable As InstallKeyFlags  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::InstallKeyFlags InstallkeySetUserSelectable = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.InstallKeyFlags InstallkeySetUserSelectable = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.InstallKeyFlags InstallkeySetUserSelectable = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.InstallkeySetUserSelectable" />
      <MemberSignature Language="F#" Value="val mutable InstallkeySetUserSelectable : Android.App.Admin.InstallKeyFlags" Usage="Android.App.Admin.DevicePolicyManager.InstallkeySetUserSelectable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INSTALLKEY_SET_USER_SELECTABLE", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INSTALLKEY_SET_USER_SELECTABLE", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.InstallKeyFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.InstallKeyFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.InstallKeyFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Specifies that a user can select the key via the Certificate Selection prompt.</summary>
        <remarks>
          <para>Specifies that a user can select the key via the Certificate Selection prompt.
            If this flag is not set when calling <c>#installKeyPair</c>, the key can only be granted
            access by implementing <c>android.app.admin.DeviceAdminReceiver#onChoosePrivateKeyAlias</c>.
            For use with <c>#installKeyPair(ComponentName, PrivateKey, Certificate[], String, int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#INSTALLKEY_SET_USER_SELECTABLE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.INSTALLKEY_SET_USER_SELECTABLE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstallSystemUpdate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InstallSystemUpdate (admin As ComponentName, updateFilePath As Uri, executor As IExecutor, callback As DevicePolicyManager.InstallSystemUpdateCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InstallSystemUpdate(Android::Content::ComponentName ^ admin, Android::Net::Uri ^ updateFilePath, Java::Util::Concurrent::IExecutor ^ executor, Android::App::Admin::DevicePolicyManager::InstallSystemUpdateCallback ^ callback);" />
      <MemberSignature Language="C#" Value="public virtual void InstallSystemUpdate (Android.Content.ComponentName? admin, Android.Net.Uri updateFilePath, Java.Util.Concurrent.IExecutor executor, Android.App.Admin.DevicePolicyManager.InstallSystemUpdateCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InstallSystemUpdate(class Android.Content.ComponentName admin, class Android.Net.Uri updateFilePath, class Java.Util.Concurrent.IExecutor executor, class Android.App.Admin.DevicePolicyManager/InstallSystemUpdateCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.InstallSystemUpdate(Android.Content.ComponentName,Android.Net.Uri,Java.Util.Concurrent.IExecutor,Android.App.Admin.DevicePolicyManager.InstallSystemUpdateCallback)" />
      <MemberSignature Language="F#" Value="abstract member InstallSystemUpdate : Android.Content.ComponentName * Android.Net.Uri * Java.Util.Concurrent.IExecutor * Android.App.Admin.DevicePolicyManager.InstallSystemUpdateCallback -&gt; unit&#xA;override this.InstallSystemUpdate : Android.Content.ComponentName * Android.Net.Uri * Java.Util.Concurrent.IExecutor * Android.App.Admin.DevicePolicyManager.InstallSystemUpdateCallback -&gt; unit" Usage="devicePolicyManager.InstallSystemUpdate (admin, updateFilePath, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("installSystemUpdate", "(Landroid/content/ComponentName;Landroid/net/Uri;Ljava/util/concurrent/Executor;Landroid/app/admin/DevicePolicyManager$InstallSystemUpdateCallback;)V", "GetInstallSystemUpdate_Landroid_content_ComponentName_Landroid_net_Uri_Ljava_util_concurrent_Executor_Landroid_app_admin_DevicePolicyManager_InstallSystemUpdateCallback_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("installSystemUpdate", "(Landroid/content/ComponentName;Landroid/net/Uri;Ljava/util/concurrent/Executor;Landroid/app/admin/DevicePolicyManager$InstallSystemUpdateCallback;)V", "GetInstallSystemUpdate_Landroid_content_ComponentName_Landroid_net_Uri_Ljava_util_concurrent_Executor_Landroid_app_admin_DevicePolicyManager_InstallSystemUpdateCallback_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SYSTEM_UPDATES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SYSTEM_UPDATES")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="updateFilePath" Type="Android.Net.Uri" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.App.Admin.DevicePolicyManager+InstallSystemUpdateCallback" />
      </Parameters>
      <Docs>
        <param name="admin">The <c>DeviceAdminReceiver</c> that this request is associated with.</param>
        <param name="updateFilePath">An Uri of the file that contains the update. The file should be
            readable by the calling app.</param>
        <param name="executor">The executor through which the callback should be invoked.</param>
        <param name="callback">A callback object that will inform the caller when installing an update
            fails.</param>
        <summary>Called by device owner or profile owner of an organization-owned managed profile to install
            a system update from the given file.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#installSystemUpdate(android.content.ComponentName,%20android.net.Uri,%20java.util.concurrent.Executor,%20android.app.admin.InstallSystemUpdateCallback)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.installSystemUpdate(android.content.ComponentName, android.net.Uri, java.util.concurrent.Executor, android.app.admin.InstallSystemUpdateCallback)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActivePasswordSufficient">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsActivePasswordSufficient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsActivePasswordSufficient { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsActivePasswordSufficient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActivePasswordSufficient" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.IsActivePasswordSufficient" />
      <MemberSignature Language="F#" Value="member this.IsActivePasswordSufficient : bool" Usage="Android.App.Admin.DevicePolicyManager.IsActivePasswordSufficient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isActivePasswordSufficient", "()Z", "GetIsActivePasswordSufficientHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isActivePasswordSufficient", "()Z", "GetIsActivePasswordSufficientHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determines whether the calling user's current password meets policy requirements
            (e.</summary>
        <value>
          <c>true</c> if the password meets the policy requirements, <c>false</c> otherwise</value>
        <remarks>
          <para>Determines whether the calling user's current password meets policy requirements
            (e.g. quality, minimum length). The user must be unlocked to perform this check.</para>
          <para>Policy requirements which affect this check can be set by admins of the user, but also
            by the admin of a managed profile associated with the calling user (when the managed profile
            doesn't have a separate work challenge). When a managed profile has a separate work
            challenge, its policy requirements only affect the managed profile.</para>
          <para>Depending on the user, this method checks the policy requirement against one of the
            following passwords:
            &lt;ul&gt;
            &lt;li&gt;For the primary user or secondary users: the personal keyguard password.
            &lt;li&gt;For managed profiles: a work challenge if set, otherwise the parent user's personal
                keyguard password.
            &lt;ul/&gt;
            In other words, it's always checking the requirement against the password that is protecting
            the calling user.</para>
          <para>Note that this method considers all policy requirements targeting the password in
            question. For example a profile owner might set a requirement on the parent profile i.e.
            personal keyguard but not on the profile itself. When the device has a weak personal keyguard
            password and no separate work challenge, calling this method will return <c>false</c>
            despite the profile owner not setting a policy on the profile itself. This is because the
            profile's current password is the personal keyguard password, and it does not meet all policy
            requirements.</para>
          <para>Device admins must request <c>DeviceAdminInfo#USES_POLICY_LIMIT_PASSWORD</c> before
            calling this method. Note, this policy type is deprecated for device admins in Android 9.0
            (API level 28) or higher.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to determine if the password set on
            the parent profile is sufficient.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty - i.e. this method will always return false on such
            devices, provided any password requirements were set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isActivePasswordSufficient()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isActivePasswordSufficient()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="IsActivePasswordSufficientForDeviceRequirement">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsActivePasswordSufficientForDeviceRequirement As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsActivePasswordSufficientForDeviceRequirement { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsActivePasswordSufficientForDeviceRequirement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActivePasswordSufficientForDeviceRequirement" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.IsActivePasswordSufficientForDeviceRequirement" />
      <MemberSignature Language="F#" Value="member this.IsActivePasswordSufficientForDeviceRequirement : bool" Usage="Android.App.Admin.DevicePolicyManager.IsActivePasswordSufficientForDeviceRequirement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isActivePasswordSufficientForDeviceRequirement", "()Z", "GetIsActivePasswordSufficientForDeviceRequirementHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isActivePasswordSufficientForDeviceRequirement", "()Z", "GetIsActivePasswordSufficientForDeviceRequirementHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Called by profile owner of a managed profile to determine whether the current device password
            meets policy requirements set explicitly device-wide.</summary>
        <value>
          <c>true</c> if the device password meets explicit requirement set on it,
              <c>false</c> otherwise.</value>
        <remarks>
          <para>Called by profile owner of a managed profile to determine whether the current device password
            meets policy requirements set explicitly device-wide.</para>
          <para>This API is similar to <c>#isActivePasswordSufficient()</c>, with two notable
            differences:
            &lt;ul&gt;
            &lt;li&gt;this API always targets the device password. As a result it should always be called on
              the <c>#getParentProfileInstance(ComponentName)</c> instance.&lt;/li&gt;
            &lt;li&gt;password policy requirement set on the managed profile is not taken into consideration
              by this API, even if the device currently does not have a separate work challenge set.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>This API is designed to facilite progressive password enrollment flows when the DPC
            imposes both device and profile password policies. DPC applies profile password policy by
            calling <c>#setPasswordQuality(ComponentName, int)</c> or
            <c>#setRequiredPasswordComplexity</c> on the regular <c>DevicePolicyManager</c> instance,
            while it applies device-wide policy by calling <c>#setRequiredPasswordComplexity</c> on the
            <c>#getParentProfileInstance(ComponentName)</c> instance. The DPC can utilize this check to
            guide the user to set a device password first taking into consideration the device-wide
            policy only, and then prompt the user to either upgrade it to be fully compliant, or enroll a
            separate work challenge to satisfy the profile password policy only.</para>
          <para>The device user must be unlocked (</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isActivePasswordSufficientForDeviceRequirement()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isActivePasswordSufficientForDeviceRequirement()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAdminActive">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAdminActive (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAdminActive(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool IsAdminActive (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAdminActive(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsAdminActive(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member IsAdminActive : Android.Content.ComponentName -&gt; bool&#xA;override this.IsAdminActive : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.IsAdminActive admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isAdminActive", "(Landroid/content/ComponentName;)Z", "GetIsAdminActive_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isAdminActive", "(Landroid/content/ComponentName;)Z", "GetIsAdminActive_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The administrator component to check for.</param>
        <summary>Return true if the given administrator component is currently active (enabled) in the system.</summary>
        <returns>
          <c>true</c> if <c>admin</c> is currently enabled in the system, <c>false</c>
                    otherwise</returns>
        <remarks>
          <para>Return true if the given administrator component is currently active (enabled) in the system.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isAdminActive(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isAdminActive(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="IsAffiliatedUser">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAffiliatedUser As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAffiliatedUser { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsAffiliatedUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAffiliatedUser" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.IsAffiliatedUser" />
      <MemberSignature Language="F#" Value="member this.IsAffiliatedUser : bool" Usage="Android.App.Admin.DevicePolicyManager.IsAffiliatedUser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAffiliatedUser", "()Z", "GetIsAffiliatedUserHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAffiliatedUser", "()Z", "GetIsAffiliatedUserHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether this user is affiliated with the device.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns whether this user is affiliated with the device.</para>
          <para>By definition, the user that the device owner runs on is always affiliated with the device.
            Any other user is considered affiliated with the device if the set specified by its
            profile owner via <c>#setAffiliationIds</c> intersects with the device owner's.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isAffiliatedUser()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isAffiliatedUser()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAlwaysOnVpnLockdownEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsAlwaysOnVpnLockdownEnabled (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsAlwaysOnVpnLockdownEnabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool IsAlwaysOnVpnLockdownEnabled (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAlwaysOnVpnLockdownEnabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsAlwaysOnVpnLockdownEnabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member IsAlwaysOnVpnLockdownEnabled : Android.Content.ComponentName -&gt; bool&#xA;override this.IsAlwaysOnVpnLockdownEnabled : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.IsAlwaysOnVpnLockdownEnabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isAlwaysOnVpnLockdownEnabled", "(Landroid/content/ComponentName;)Z", "GetIsAlwaysOnVpnLockdownEnabled_Landroid_content_ComponentName_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isAlwaysOnVpnLockdownEnabled", "(Landroid/content/ComponentName;)Z", "GetIsAlwaysOnVpnLockdownEnabled_Landroid_content_ComponentName_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by device or profile owner to query whether current always-on VPN is configured in
            lockdown mode.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Called by device or profile owner to query whether current always-on VPN is configured in
            lockdown mode. Returns <c>false</c> when no always-on configuration is set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isAlwaysOnVpnLockdownEnabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isAlwaysOnVpnLockdownEnabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsApplicationHidden">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsApplicationHidden (admin As ComponentName, packageName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsApplicationHidden(Android::Content::ComponentName ^ admin, System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual bool IsApplicationHidden (Android.Content.ComponentName? admin, string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsApplicationHidden(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsApplicationHidden(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member IsApplicationHidden : Android.Content.ComponentName * string -&gt; bool&#xA;override this.IsApplicationHidden : Android.Content.ComponentName * string -&gt; bool" Usage="devicePolicyManager.IsApplicationHidden (admin, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isApplicationHidden", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetIsApplicationHidden_Landroid_content_ComponentName_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isApplicationHidden", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetIsApplicationHidden_Landroid_content_ComponentName_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PACKAGE_STATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PACKAGE_STATE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                       <c>null</c> if the caller is not a device admin.</param>
        <param name="packageName">The name of the package to retrieve the hidden status of.</param>
        <summary>Determine if a package is hidden.</summary>
        <returns>boolean <c>true</c> if the package is hidden, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Determine if a package is hidden. This function can be called by a device owner, profile
            owner, or by a delegate given the <c>#DELEGATION_PACKAGE_ACCESS</c> scope via
            <c>#setDelegatedScopes</c>.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance, returned by
            <c>#getParentProfileInstance(ComponentName)</c>, where the caller must be the profile owner
            of an organization-owned managed profile and the package must be a system package. If called
            on the parent instance, this will determine whether the package is hidden or unhidden in the
            personal profile.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, the returned policy will be the
            current resolved policy rather than the policy set by the calling admin.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isApplicationHidden(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isApplicationHidden(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBackupServiceEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsBackupServiceEnabled (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBackupServiceEnabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool IsBackupServiceEnabled (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBackupServiceEnabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsBackupServiceEnabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member IsBackupServiceEnabled : Android.Content.ComponentName -&gt; bool&#xA;override this.IsBackupServiceEnabled : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.IsBackupServiceEnabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isBackupServiceEnabled", "(Landroid/content/ComponentName;)Z", "GetIsBackupServiceEnabled_Landroid_content_ComponentName_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isBackupServiceEnabled", "(Landroid/content/ComponentName;)Z", "GetIsBackupServiceEnabled_Landroid_content_ComponentName_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">To be added.</param>
        <summary>Return whether the backup service is enabled by the device owner or profile owner for the
            current user, as previously set by <c>#setBackupServiceEnabled(ComponentName, boolean)</c>.</summary>
        <returns>
          <c>true</c> if backup service is enabled, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Return whether the backup service is enabled by the device owner or profile owner for the
            current user, as previously set by <c>#setBackupServiceEnabled(ComponentName, boolean)</c>.</para>
          <para>Whether the backup functionality is actually enabled or not depends on settings from both
            the current user and the device owner, please see
            <c>#setBackupServiceEnabled(ComponentName, boolean)</c> for details.</para>
          <para>Backup service manages all backup and restore mechanisms on the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isBackupServiceEnabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isBackupServiceEnabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCallerApplicationRestrictionsManagingPackage">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCallerApplicationRestrictionsManagingPackage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCallerApplicationRestrictionsManagingPackage { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsCallerApplicationRestrictionsManagingPackage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCallerApplicationRestrictionsManagingPackage" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.IsCallerApplicationRestrictionsManagingPackage" />
      <MemberSignature Language="F#" Value="member this.IsCallerApplicationRestrictionsManagingPackage : bool" Usage="Android.App.Admin.DevicePolicyManager.IsCallerApplicationRestrictionsManagingPackage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isCallerApplicationRestrictionsManagingPackage", "()Z", "GetIsCallerApplicationRestrictionsManagingPackageHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isCallerApplicationRestrictionsManagingPackage", "()Z", "GetIsCallerApplicationRestrictionsManagingPackageHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Called by any application to find out whether it has been granted permission via
            <c>#setApplicationRestrictionsManagingPackage</c> to manage application restrictions
            for the calling user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Called by any application to find out whether it has been granted permission via
            <c>#setApplicationRestrictionsManagingPackage</c> to manage application restrictions
            for the calling user.</para>
          <para>This is done by comparing the calling Linux uid with the uid of the package specified by
            that method.</para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#O</c>. Use <c>#getDelegatedScopes</c>
            instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isCallerApplicationRestrictionsManagingPackage()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isCallerApplicationRestrictionsManagingPackage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCommonCriteriaModeEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsCommonCriteriaModeEnabled (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsCommonCriteriaModeEnabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool IsCommonCriteriaModeEnabled (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsCommonCriteriaModeEnabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsCommonCriteriaModeEnabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member IsCommonCriteriaModeEnabled : Android.Content.ComponentName -&gt; bool&#xA;override this.IsCommonCriteriaModeEnabled : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.IsCommonCriteriaModeEnabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isCommonCriteriaModeEnabled", "(Landroid/content/ComponentName;)Z", "GetIsCommonCriteriaModeEnabled_Landroid_content_ComponentName_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isCommonCriteriaModeEnabled", "(Landroid/content/ComponentName;)Z", "GetIsCommonCriteriaModeEnabled_Landroid_content_ComponentName_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <summary>Returns whether Common Criteria mode is currently enabled.</summary>
        <returns>
          <c>true</c> if Common Criteria mode is enabled, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Returns whether Common Criteria mode is currently enabled. Device owner and profile owner of
            an organization-owned managed profile can query its own Common Criteria mode setting by
            calling this method with its admin <c>ComponentName</c>. Any caller can obtain the
            aggregated device-wide Common Criteria mode state by passing <c>null</c> as the
            <c>admin</c> argument.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isCommonCriteriaModeEnabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isCommonCriteriaModeEnabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsComplianceAcknowledgementRequired">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsComplianceAcknowledgementRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsComplianceAcknowledgementRequired { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsComplianceAcknowledgementRequired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsComplianceAcknowledgementRequired" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.IsComplianceAcknowledgementRequired" />
      <MemberSignature Language="F#" Value="member this.IsComplianceAcknowledgementRequired : bool" Usage="Android.App.Admin.DevicePolicyManager.IsComplianceAcknowledgementRequired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isComplianceAcknowledgementRequired", "()Z", "GetIsComplianceAcknowledgementRequiredHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isComplianceAcknowledgementRequired", "()Z", "GetIsComplianceAcknowledgementRequiredHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Called by a profile owner of an organization-owned managed profile to query whether it needs
            to acknowledge device compliance to allow the user to turn the profile off if needed
            according to the maximum profile time off policy.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Called by a profile owner of an organization-owned managed profile to query whether it needs
            to acknowledge device compliance to allow the user to turn the profile off if needed
            according to the maximum profile time off policy.
            
            Normally when acknowledgement is needed the DPC gets a
            <c>DeviceAdminReceiver#onComplianceAcknowledgementRequired(Context, Intent)</c> callback.
            But if the callback was not delivered or handled for some reason, this method can be used to
            verify if acknowledgement is needed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isComplianceAcknowledgementRequired()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isComplianceAcknowledgementRequired()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeviceFinanced">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDeviceFinanced As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDeviceFinanced { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsDeviceFinanced { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeviceFinanced" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.IsDeviceFinanced" />
      <MemberSignature Language="F#" Value="member this.IsDeviceFinanced : bool" Usage="Android.App.Admin.DevicePolicyManager.IsDeviceFinanced" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDeviceFinanced", "()Z", "GetIsDeviceFinancedHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDeviceFinanced", "()Z", "GetIsDeviceFinancedHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if this device is marked as a financed device.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns <c>true</c> if this device is marked as a financed device.</para>
          <para>A financed device can be entered into lock task mode (see <c>#setLockTaskPackages</c>)
            by the holder of the role <c>android.app.role.RoleManager#ROLE_FINANCED_DEVICE_KIOSK</c>.
            If this occurs, Device Owners and Profile Owners that have set lock task packages or
            features, or that attempt to set lock task packages or features, will receive a callback
            indicating that it could not be set. See <c>PolicyUpdateReceiver#onPolicyChanged</c> and
            <c>PolicyUpdateReceiver#onPolicySetResult</c>.</para>
          <para>To be informed of changes to this status you can subscribe to the broadcast
            <c>ACTION_DEVICE_FINANCING_STATE_CHANGED</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isDeviceFinanced()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isDeviceFinanced()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeviceIdAttestationSupported">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDeviceIdAttestationSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDeviceIdAttestationSupported { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsDeviceIdAttestationSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeviceIdAttestationSupported" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.IsDeviceIdAttestationSupported" />
      <MemberSignature Language="F#" Value="member this.IsDeviceIdAttestationSupported : bool" Usage="Android.App.Admin.DevicePolicyManager.IsDeviceIdAttestationSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDeviceIdAttestationSupported", "()Z", "GetIsDeviceIdAttestationSupportedHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDeviceIdAttestationSupported", "()Z", "GetIsDeviceIdAttestationSupportedHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the device supports attestation of device identifiers in addition
            to key attestation.</summary>
        <value>
          <c>true</c> if Device ID attestation is supported.</value>
        <remarks>
          <para>Returns <c>true</c> if the device supports attestation of device identifiers in addition
            to key attestation. See
            <c>#generateKeyPair(ComponentName, String, KeyGenParameterSpec, int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isDeviceIdAttestationSupported()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isDeviceIdAttestationSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeviceOwnerApp">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDeviceOwnerApp (packageName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDeviceOwnerApp(System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual bool IsDeviceOwnerApp (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDeviceOwnerApp(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsDeviceOwnerApp(System.String)" />
      <MemberSignature Language="F#" Value="abstract member IsDeviceOwnerApp : string -&gt; bool&#xA;override this.IsDeviceOwnerApp : string -&gt; bool" Usage="devicePolicyManager.IsDeviceOwnerApp packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isDeviceOwnerApp", "(Ljava/lang/String;)Z", "GetIsDeviceOwnerApp_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isDeviceOwnerApp", "(Ljava/lang/String;)Z", "GetIsDeviceOwnerApp_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">the package name of the app, to compare with the registered device owner
            app, if any.</param>
        <summary>Used to determine if a particular package has been registered as a Device Owner app.</summary>
        <returns>whether or not the package is registered as the device owner app.</returns>
        <remarks>
          <para>Used to determine if a particular package has been registered as a Device Owner app.
            A device owner app is a special device admin that cannot be deactivated by the user, once
            activated as a device admin. It also cannot be uninstalled. To check whether a particular
            package is currently registered as the device owner app, pass in the package name from
            <c>Context#getPackageName()</c> to this method.&lt;p/&gt;This is useful for device
            admin apps that want to check whether they are also registered as the device owner app. The
            exact mechanism by which a device admin app is registered as a device owner app is defined by
            the setup process.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isDeviceOwnerApp(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isDeviceOwnerApp(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="IsEphemeralUser">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsEphemeralUser (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsEphemeralUser(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool IsEphemeralUser (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsEphemeralUser(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsEphemeralUser(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member IsEphemeralUser : Android.Content.ComponentName -&gt; bool&#xA;override this.IsEphemeralUser : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.IsEphemeralUser admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isEphemeralUser", "(Landroid/content/ComponentName;)Z", "GetIsEphemeralUser_Landroid_content_ComponentName_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isEphemeralUser", "(Landroid/content/ComponentName;)Z", "GetIsEphemeralUser_Landroid_content_ComponentName_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Checks if the profile owner is running in an ephemeral user.</summary>
        <returns>whether the profile owner is running in an ephemeral user.</returns>
        <remarks>
          <para>Checks if the profile owner is running in an ephemeral user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isEphemeralUser(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isEphemeralUser(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyPairGrantedToWifiAuth">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsKeyPairGrantedToWifiAuth (alias As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsKeyPairGrantedToWifiAuth(System::String ^ alias);" />
      <MemberSignature Language="C#" Value="public virtual bool IsKeyPairGrantedToWifiAuth (string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsKeyPairGrantedToWifiAuth(string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsKeyPairGrantedToWifiAuth(System.String)" />
      <MemberSignature Language="F#" Value="abstract member IsKeyPairGrantedToWifiAuth : string -&gt; bool&#xA;override this.IsKeyPairGrantedToWifiAuth : string -&gt; bool" Usage="devicePolicyManager.IsKeyPairGrantedToWifiAuth alias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isKeyPairGrantedToWifiAuth", "(Ljava/lang/String;)Z", "GetIsKeyPairGrantedToWifiAuth_Ljava_lang_String_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isKeyPairGrantedToWifiAuth", "(Ljava/lang/String;)Z", "GetIsKeyPairGrantedToWifiAuth_Ljava_lang_String_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alias">The alias of the key pair.</param>
        <summary>Called by a device or profile owner, or delegated certificate chooser (an app that has been
            delegated the <c>#DELEGATION_CERT_SELECTION</c> privilege), to query whether a KeyChain key
            pair can be used for authentication to Wifi networks.</summary>
        <returns>
          <c>true</c> if the key pair can be used, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Called by a device or profile owner, or delegated certificate chooser (an app that has been
            delegated the <c>#DELEGATION_CERT_SELECTION</c> privilege), to query whether a KeyChain key
            pair can be used for authentication to Wifi networks.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isKeyPairGrantedToWifiAuth(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isKeyPairGrantedToWifiAuth(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLockTaskPermitted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsLockTaskPermitted (pkg As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsLockTaskPermitted(System::String ^ pkg);" />
      <MemberSignature Language="C#" Value="public virtual bool IsLockTaskPermitted (string? pkg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLockTaskPermitted(string pkg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsLockTaskPermitted(System.String)" />
      <MemberSignature Language="F#" Value="abstract member IsLockTaskPermitted : string -&gt; bool&#xA;override this.IsLockTaskPermitted : string -&gt; bool" Usage="devicePolicyManager.IsLockTaskPermitted pkg" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isLockTaskPermitted", "(Ljava/lang/String;)Z", "GetIsLockTaskPermitted_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isLockTaskPermitted", "(Ljava/lang/String;)Z", "GetIsLockTaskPermitted_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pkg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pkg">The package to check</param>
        <summary>This function lets the caller know whether the given component is allowed to start the
            lock task mode.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>This function lets the caller know whether the given component is allowed to start the
            lock task mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isLockTaskPermitted(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isLockTaskPermitted(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLogoutEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsLogoutEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsLogoutEnabled { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsLogoutEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLogoutEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.IsLogoutEnabled" />
      <MemberSignature Language="F#" Value="member this.IsLogoutEnabled : bool" Usage="Android.App.Admin.DevicePolicyManager.IsLogoutEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isLogoutEnabled", "()Z", "GetIsLogoutEnabledHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isLogoutEnabled", "()Z", "GetIsLogoutEnabledHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether logout is enabled by a device owner.</summary>
        <value>
          <c>true</c> if logout is enabled by device owner, <c>false</c> otherwise.</value>
        <remarks>
          <para>Returns whether logout is enabled by a device owner.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isLogoutEnabled()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isLogoutEnabled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsManagedProfile">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsManagedProfile (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsManagedProfile(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool IsManagedProfile (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsManagedProfile(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsManagedProfile(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member IsManagedProfile : Android.Content.ComponentName -&gt; bool&#xA;override this.IsManagedProfile : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.IsManagedProfile admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isManagedProfile", "(Landroid/content/ComponentName;)Z", "GetIsManagedProfile_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isManagedProfile", "(Landroid/content/ComponentName;)Z", "GetIsManagedProfile_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which profile owner this request is associated with.</param>
        <summary>Return if this user is a managed profile of another user.</summary>
        <returns>if this user is a managed profile of another user.</returns>
        <remarks>
          <para>Return if this user is a managed profile of another user. An admin can become the profile
            owner of a managed profile with <c>#ACTION_PROVISION_MANAGED_PROFILE</c> and of a managed
            user with <c>#createAndManageUser</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isManagedProfile(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isManagedProfile(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMasterVolumeMuted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsMasterVolumeMuted (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsMasterVolumeMuted(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool IsMasterVolumeMuted (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsMasterVolumeMuted(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsMasterVolumeMuted(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member IsMasterVolumeMuted : Android.Content.ComponentName -&gt; bool&#xA;override this.IsMasterVolumeMuted : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.IsMasterVolumeMuted admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isMasterVolumeMuted", "(Landroid/content/ComponentName;)Z", "GetIsMasterVolumeMuted_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isMasterVolumeMuted", "(Landroid/content/ComponentName;)Z", "GetIsMasterVolumeMuted_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by profile or device owners to check whether the global volume mute is on or off.</summary>
        <returns>
          <c>true</c> if global volume is muted, <c>false</c> if it's not.</returns>
        <remarks>
          <para>Called by profile or device owners to check whether the global volume mute is on or off.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isMasterVolumeMuted(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isMasterVolumeMuted(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNetworkLoggingEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsNetworkLoggingEnabled (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsNetworkLoggingEnabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool IsNetworkLoggingEnabled (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsNetworkLoggingEnabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsNetworkLoggingEnabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member IsNetworkLoggingEnabled : Android.Content.ComponentName -&gt; bool&#xA;override this.IsNetworkLoggingEnabled : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.IsNetworkLoggingEnabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isNetworkLoggingEnabled", "(Landroid/content/ComponentName;)Z", "GetIsNetworkLoggingEnabled_Landroid_content_ComponentName_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isNetworkLoggingEnabled", "(Landroid/content/ComponentName;)Z", "GetIsNetworkLoggingEnabled_Landroid_content_ComponentName_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Can only
            be <c>null</c> if the caller is a delegated app with <c>#DELEGATION_NETWORK_LOGGING</c>
            or has MANAGE_USERS permission.</param>
        <summary>Return whether network logging is enabled by a device owner or profile owner of
            a managed profile.</summary>
        <returns>
          <c>true</c> if network logging is enabled by device owner or profile owner,
            <c>false</c> otherwise.</returns>
        <remarks>
          <para>Return whether network logging is enabled by a device owner or profile owner of
            a managed profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isNetworkLoggingEnabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isNetworkLoggingEnabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOrganizationOwnedDeviceWithManagedProfile">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsOrganizationOwnedDeviceWithManagedProfile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsOrganizationOwnedDeviceWithManagedProfile { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsOrganizationOwnedDeviceWithManagedProfile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsOrganizationOwnedDeviceWithManagedProfile" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.IsOrganizationOwnedDeviceWithManagedProfile" />
      <MemberSignature Language="F#" Value="member this.IsOrganizationOwnedDeviceWithManagedProfile : bool" Usage="Android.App.Admin.DevicePolicyManager.IsOrganizationOwnedDeviceWithManagedProfile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isOrganizationOwnedDeviceWithManagedProfile", "()Z", "GetIsOrganizationOwnedDeviceWithManagedProfileHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isOrganizationOwnedDeviceWithManagedProfile", "()Z", "GetIsOrganizationOwnedDeviceWithManagedProfileHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Apps can use this method to find out if the device was provisioned as
            organization-owend device with a managed profile.</summary>
        <value>
          <c>true</c> if the device was provisioned as organization-owned device,
            <c>false</c> otherwise.</value>
        <remarks>
          <para>Apps can use this method to find out if the device was provisioned as
            organization-owend device with a managed profile.
            
            This, together with checking whether the device has a device owner (by calling
            <c>#isDeviceOwnerApp</c>), could be used to learn whether the device is owned by an
            organization or an individual:
            If this method returns true OR <c>#isDeviceOwnerApp</c> returns true (for any package),
            then the device is owned by an organization. Otherwise, it's owned by an individual.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isOrganizationOwnedDeviceWithManagedProfile()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isOrganizationOwnedDeviceWithManagedProfile()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsOverrideApnEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsOverrideApnEnabled (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsOverrideApnEnabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool IsOverrideApnEnabled (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsOverrideApnEnabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsOverrideApnEnabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member IsOverrideApnEnabled : Android.Content.ComponentName -&gt; bool&#xA;override this.IsOverrideApnEnabled : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.IsOverrideApnEnabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isOverrideApnEnabled", "(Landroid/content/ComponentName;)Z", "GetIsOverrideApnEnabled_Landroid_content_ComponentName_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isOverrideApnEnabled", "(Landroid/content/ComponentName;)Z", "GetIsOverrideApnEnabled_Landroid_content_ComponentName_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with</param>
        <summary>Called by device owner to check if override APNs are currently enabled.</summary>
        <returns>
          <c>true</c> if override APNs are currently enabled, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Called by device owner to check if override APNs are currently enabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isOverrideApnEnabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isOverrideApnEnabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPackageSuspended">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsPackageSuspended (admin As ComponentName, packageName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsPackageSuspended(Android::Content::ComponentName ^ admin, System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual bool IsPackageSuspended (Android.Content.ComponentName? admin, string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsPackageSuspended(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsPackageSuspended(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member IsPackageSuspended : Android.Content.ComponentName * string -&gt; bool&#xA;override this.IsPackageSuspended : Android.Content.ComponentName * string -&gt; bool" Usage="devicePolicyManager.IsPackageSuspended (admin, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isPackageSuspended", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetIsPackageSuspended_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isPackageSuspended", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetIsPackageSuspended_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PACKAGE_STATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PACKAGE_STATE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="packageName">The name of the package to retrieve the suspended status of.</param>
        <summary>Determine if a package is suspended.</summary>
        <returns>
          <c>true</c> if the package is suspended or <c>false</c> if the package is not
                    suspended, could not be found or an error occurred.</returns>
        <remarks>
          <para>Determine if a package is suspended. This function can be called by a device owner, profile
            owner, or by a delegate given the <c>#DELEGATION_PACKAGE_ACCESS</c> scope via
            <c>#setDelegatedScopes</c> or by holders of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_PACKAGE_STATE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isPackageSuspended(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isPackageSuspended(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProfileOwnerApp">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsProfileOwnerApp (packageName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsProfileOwnerApp(System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual bool IsProfileOwnerApp (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProfileOwnerApp(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsProfileOwnerApp(System.String)" />
      <MemberSignature Language="F#" Value="abstract member IsProfileOwnerApp : string -&gt; bool&#xA;override this.IsProfileOwnerApp : string -&gt; bool" Usage="devicePolicyManager.IsProfileOwnerApp packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isProfileOwnerApp", "(Ljava/lang/String;)Z", "GetIsProfileOwnerApp_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isProfileOwnerApp", "(Ljava/lang/String;)Z", "GetIsProfileOwnerApp_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The package name of the app to compare with the registered profile owner.</param>
        <summary>Used to determine if a particular package is registered as the profile owner for the
            user.</summary>
        <returns>Whether or not the package is registered as the profile owner.</returns>
        <remarks>
          <para>Used to determine if a particular package is registered as the profile owner for the
            user. A profile owner is a special device admin that has additional privileges
            within the profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isProfileOwnerApp(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isProfileOwnerApp(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsProvisioningAllowed">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsProvisioningAllowed (action As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsProvisioningAllowed(System::String ^ action);" />
      <MemberSignature Language="C#" Value="public virtual bool IsProvisioningAllowed (string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsProvisioningAllowed(string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsProvisioningAllowed(System.String)" />
      <MemberSignature Language="F#" Value="abstract member IsProvisioningAllowed : string -&gt; bool&#xA;override this.IsProvisioningAllowed : string -&gt; bool" Usage="devicePolicyManager.IsProvisioningAllowed action" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isProvisioningAllowed", "(Ljava/lang/String;)Z", "GetIsProvisioningAllowed_Ljava_lang_String_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isProvisioningAllowed", "(Ljava/lang/String;)Z", "GetIsProvisioningAllowed_Ljava_lang_String_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="action">One of <c>#ACTION_PROVISION_MANAGED_DEVICE</c>,
            <c>#ACTION_PROVISION_MANAGED_PROFILE</c>.</param>
        <summary>Returns whether it is possible for the caller to initiate provisioning of a managed profile
            or device, setting itself as the device or profile owner.</summary>
        <returns>whether provisioning a managed profile or device is possible.</returns>
        <remarks>
          <para>Returns whether it is possible for the caller to initiate provisioning of a managed profile
            or device, setting itself as the device or profile owner.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isProvisioningAllowed(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isProvisioningAllowed(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsResetPasswordTokenActive">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsResetPasswordTokenActive (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsResetPasswordTokenActive(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool IsResetPasswordTokenActive (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsResetPasswordTokenActive(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsResetPasswordTokenActive(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member IsResetPasswordTokenActive : Android.Content.ComponentName -&gt; bool&#xA;override this.IsResetPasswordTokenActive : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.IsResetPasswordTokenActive admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isResetPasswordTokenActive", "(Landroid/content/ComponentName;)Z", "GetIsResetPasswordTokenActive_Landroid_content_ComponentName_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isResetPasswordTokenActive", "(Landroid/content/ComponentName;)Z", "GetIsResetPasswordTokenActive_Landroid_content_ComponentName_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_RESET_PASSWORD")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_RESET_PASSWORD")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <summary>Called by a profile, device owner or a holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_RESET_PASSWORD</c>
            to check if the current reset password token is active.</summary>
        <returns>true if the token is active, false otherwise.</returns>
        <remarks>
          <para>Called by a profile, device owner or a holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_RESET_PASSWORD</c>
            to check if the current reset password token is active.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature,
            false is always returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isResetPasswordTokenActive(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isResetPasswordTokenActive(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSafeOperation">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSafeOperation (reason As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSafeOperation(int reason);" />
      <MemberSignature Language="C#" Value="public virtual bool IsSafeOperation (int reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSafeOperation(int32 reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsSafeOperation(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IsSafeOperation : int -&gt; bool&#xA;override this.IsSafeOperation : int -&gt; bool" Usage="devicePolicyManager.IsSafeOperation reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSafeOperation", "(I)Z", "GetIsSafeOperation_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSafeOperation", "(I)Z", "GetIsSafeOperation_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "OperationSafetyReasonDrivingDistraction" }, Type="Android.App.Admin.DevicePolicyManager")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "OperationSafetyReasonDrivingDistraction" }, Type="Android.App.Admin.DevicePolicyManager")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="reason">currently, only supported reason is
            <c>#OPERATION_SAFETY_REASON_DRIVING_DISTRACTION</c>.</param>
        <summary>Checks if it's safe to run operations that can be affected by the given <c>reason</c>.</summary>
        <returns>whether it's safe to run operations that can be affected by the given <c>reason</c>.</returns>
        <remarks>
          <para>Checks if it's safe to run operations that can be affected by the given <c>reason</c>.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; notice that the operation safety state might change between the time this
            method returns and the operation's method is called, so calls to the latter could still throw
            a <c>UnsafeStateException</c> even when this method returns <c>true</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isSafeOperation(int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isSafeOperation(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityLoggingEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSecurityLoggingEnabled (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSecurityLoggingEnabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool IsSecurityLoggingEnabled (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSecurityLoggingEnabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsSecurityLoggingEnabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member IsSecurityLoggingEnabled : Android.Content.ComponentName -&gt; bool&#xA;override this.IsSecurityLoggingEnabled : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.IsSecurityLoggingEnabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSecurityLoggingEnabled", "(Landroid/content/ComponentName;)Z", "GetIsSecurityLoggingEnabled_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSecurityLoggingEnabled", "(Landroid/content/ComponentName;)Z", "GetIsSecurityLoggingEnabled_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SECURITY_LOGGING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SECURITY_LOGGING")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which device admin this request is associated with. Null if the caller is not
                         a device admin</param>
        <summary>Return whether security logging is enabled or not by the admin.</summary>
        <returns>
          <c>true</c> if security logging is enabled, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Return whether security logging is enabled or not by the admin.</para>
          <para>Can only be called by the device owner or a profile owner of an organization-owned
            managed profile, otherwise a <c>SecurityException</c> will be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isSecurityLoggingEnabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isSecurityLoggingEnabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStatusBarDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsStatusBarDisabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsStatusBarDisabled { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsStatusBarDisabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatusBarDisabled" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.IsStatusBarDisabled" />
      <MemberSignature Language="F#" Value="member this.IsStatusBarDisabled : bool" Usage="Android.App.Admin.DevicePolicyManager.IsStatusBarDisabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isStatusBarDisabled", "()Z", "GetIsStatusBarDisabledHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isStatusBarDisabled", "()Z", "GetIsStatusBarDisabledHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the status bar is disabled/enabled, see <c>#setStatusBarDisabled</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns whether the status bar is disabled/enabled, see <c>#setStatusBarDisabled</c>.</para>
          <para>Callable by device owner or profile owner of secondary users that is affiliated with the
            device owner.</para>
          <para>This policy has no effect in LockTask mode. The behavior of the
            status bar in LockTask mode can be configured with
            <c>#setLockTaskFeatures(ComponentName, int)</c>.</para>
          <para>This policy also does not have any effect while on the lock screen, where the status bar
            will not be disabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isStatusBarDisabled()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isStatusBarDisabled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUninstallBlocked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsUninstallBlocked (admin As ComponentName, packageName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUninstallBlocked(Android::Content::ComponentName ^ admin, System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual bool IsUninstallBlocked (Android.Content.ComponentName? admin, string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUninstallBlocked(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsUninstallBlocked(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member IsUninstallBlocked : Android.Content.ComponentName * string -&gt; bool&#xA;override this.IsUninstallBlocked : Android.Content.ComponentName * string -&gt; bool" Usage="devicePolicyManager.IsUninstallBlocked (admin, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUninstallBlocked", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetIsUninstallBlocked_Landroid_content_ComponentName_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUninstallBlocked", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetIsUninstallBlocked_Landroid_content_ComponentName_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component whose blocking policy will be checked, or
                       <c>null</c> to check whether any admin has blocked the uninstallation. Starting
                         from <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> admin will be
                         ignored and assumed <c>null</c>.</param>
        <param name="packageName">package to check.</param>
        <summary>Check whether the user has been blocked by device policy from uninstalling a package.</summary>
        <returns>true if uninstallation is blocked and the given package is visible to you, false
                    otherwise if uninstallation isn't blocked or the given package isn't visible to you.</returns>
        <remarks>
          <para>Check whether the user has been blocked by device policy from uninstalling a package.
            Requires the caller to be the profile owner if checking a specific admin's policy.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; Starting from <c>android.os.Build.VERSION_CODES#LOLLIPOP_MR1</c>, the
            behavior of this API is changed such that passing <c>null</c> as the <c>admin</c> parameter
            will return if any admin has blocked the uninstallation. Before L MR1, passing <c>null</c>
            will cause a NullPointerException to be raised.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; If your app targets Android 11 (API level 30) or higher,
            this method returns a filtered result. Learn more about how to
            manage package visibility.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, the returned policy will be the
            current resolved policy rather than the policy set by the calling admin.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isUninstallBlocked(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isUninstallBlocked(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUniqueDeviceAttestationSupported">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsUniqueDeviceAttestationSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsUniqueDeviceAttestationSupported { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsUniqueDeviceAttestationSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUniqueDeviceAttestationSupported" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.IsUniqueDeviceAttestationSupported" />
      <MemberSignature Language="F#" Value="member this.IsUniqueDeviceAttestationSupported : bool" Usage="Android.App.Admin.DevicePolicyManager.IsUniqueDeviceAttestationSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUniqueDeviceAttestationSupported", "()Z", "GetIsUniqueDeviceAttestationSupportedHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUniqueDeviceAttestationSupported", "()Z", "GetIsUniqueDeviceAttestationSupportedHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if the StrongBox Keymaster implementation on the device was provisioned
            with an individual attestation certificate and can sign attestation records using it (as
            attestation using an individual attestation certificate is a feature only Keymaster
            implementations with StrongBox security level can implement).</summary>
        <value>
          <c>true</c> if individual attestation is supported.</value>
        <remarks>
          <para>Returns <c>true</c> if the StrongBox Keymaster implementation on the device was provisioned
            with an individual attestation certificate and can sign attestation records using it (as
            attestation using an individual attestation certificate is a feature only Keymaster
            implementations with StrongBox security level can implement).
            For use prior to calling
            <c>#generateKeyPair(ComponentName, String, KeyGenParameterSpec, int)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isUniqueDeviceAttestationSupported()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isUniqueDeviceAttestationSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsingUnifiedPassword">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsUsingUnifiedPassword (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsUsingUnifiedPassword(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool IsUsingUnifiedPassword (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUsingUnifiedPassword(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.IsUsingUnifiedPassword(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member IsUsingUnifiedPassword : Android.Content.ComponentName -&gt; bool&#xA;override this.IsUsingUnifiedPassword : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.IsUsingUnifiedPassword admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isUsingUnifiedPassword", "(Landroid/content/ComponentName;)Z", "GetIsUsingUnifiedPassword_Landroid_content_ComponentName_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isUsingUnifiedPassword", "(Landroid/content/ComponentName;)Z", "GetIsUsingUnifiedPassword_Landroid_content_ComponentName_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>When called by a profile owner of a managed profile returns true if the profile uses unified
            challenge with its parent user.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>When called by a profile owner of a managed profile returns true if the profile uses unified
            challenge with its parent user.
            
            &lt;strong&gt;Note&lt;/strong&gt;: This method is not concerned with password quality and will return
            false if the profile has empty password as a separate challenge.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isUsingUnifiedPassword(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isUsingUnifiedPassword(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.Admin.DevicePolicyManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableBiometrics">
      <MemberSignature Language="VB.NET" Value="Public Const KeyguardDisableBiometrics As KeyguardDisable  = 416" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::KeyguardDisable KeyguardDisableBiometrics = 416;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableBiometrics = 416;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableBiometrics = (416)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableBiometrics" />
      <MemberSignature Language="F#" Value="val mutable KeyguardDisableBiometrics : Android.App.Admin.KeyguardDisable" Usage="Android.App.Admin.DevicePolicyManager.KeyguardDisableBiometrics" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEYGUARD_DISABLE_BIOMETRICS", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEYGUARD_DISABLE_BIOMETRICS", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>416</MemberValue>
      <Docs>
        <summary>Disable all biometric authentication on keyguard secure screens (e.</summary>
        <remarks>
          <para>Disable all biometric authentication on keyguard secure screens (e.g. PIN/Pattern/Password).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#KEYGUARD_DISABLE_BIOMETRICS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_BIOMETRICS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableFace">
      <MemberSignature Language="VB.NET" Value="Public Const KeyguardDisableFace As KeyguardDisable  = 128" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::KeyguardDisable KeyguardDisableFace = 128;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableFace = 128;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableFace = (128)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableFace" />
      <MemberSignature Language="F#" Value="val mutable KeyguardDisableFace : Android.App.Admin.KeyguardDisable" Usage="Android.App.Admin.DevicePolicyManager.KeyguardDisableFace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEYGUARD_DISABLE_FACE", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEYGUARD_DISABLE_FACE", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>128</MemberValue>
      <Docs>
        <summary>Disable face authentication on keyguard secure screens (e.</summary>
        <remarks>
          <para>Disable face authentication on keyguard secure screens (e.g. PIN/Pattern/Password).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#KEYGUARD_DISABLE_FACE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_FACE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableFeaturesAll">
      <MemberSignature Language="VB.NET" Value="Public Const KeyguardDisableFeaturesAll As KeyguardDisable  = 2147483647" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::KeyguardDisable KeyguardDisableFeaturesAll = 2147483647;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableFeaturesAll = 2147483647;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableFeaturesAll = (2147483647)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableFeaturesAll" />
      <MemberSignature Language="F#" Value="val mutable KeyguardDisableFeaturesAll : Android.App.Admin.KeyguardDisable" Usage="Android.App.Admin.DevicePolicyManager.KeyguardDisableFeaturesAll" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEYGUARD_DISABLE_FEATURES_ALL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEYGUARD_DISABLE_FEATURES_ALL")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>2147483647</MemberValue>
      <Docs>
        <summary>Disable all current and future keyguard customizations.</summary>
        <remarks>
          <para>Disable all current and future keyguard customizations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#KEYGUARD_DISABLE_FEATURES_ALL" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_FEATURES_ALL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableFeaturesNone">
      <MemberSignature Language="VB.NET" Value="Public Const KeyguardDisableFeaturesNone As KeyguardDisable  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::KeyguardDisable KeyguardDisableFeaturesNone = 0;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableFeaturesNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableFeaturesNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableFeaturesNone" />
      <MemberSignature Language="F#" Value="val mutable KeyguardDisableFeaturesNone : Android.App.Admin.KeyguardDisable" Usage="Android.App.Admin.DevicePolicyManager.KeyguardDisableFeaturesNone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEYGUARD_DISABLE_FEATURES_NONE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEYGUARD_DISABLE_FEATURES_NONE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Widgets are enabled in keyguard</summary>
        <remarks>
          <para>Widgets are enabled in keyguard</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#KEYGUARD_DISABLE_FEATURES_NONE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_FEATURES_NONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableFingerprint">
      <MemberSignature Language="VB.NET" Value="Public Const KeyguardDisableFingerprint As KeyguardDisable  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::KeyguardDisable KeyguardDisableFingerprint = 32;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableFingerprint = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableFingerprint = (32)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableFingerprint" />
      <MemberSignature Language="F#" Value="val mutable KeyguardDisableFingerprint : Android.App.Admin.KeyguardDisable" Usage="Android.App.Admin.DevicePolicyManager.KeyguardDisableFingerprint" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEYGUARD_DISABLE_FINGERPRINT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEYGUARD_DISABLE_FINGERPRINT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>Disable fingerprint authentication on keyguard secure screens (e.</summary>
        <remarks>
          <para>Disable fingerprint authentication on keyguard secure screens (e.g. PIN/Pattern/Password).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#KEYGUARD_DISABLE_FINGERPRINT" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_FINGERPRINT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableIris">
      <MemberSignature Language="VB.NET" Value="Public Const KeyguardDisableIris As KeyguardDisable  = 256" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::KeyguardDisable KeyguardDisableIris = 256;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableIris = 256;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableIris = (256)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableIris" />
      <MemberSignature Language="F#" Value="val mutable KeyguardDisableIris : Android.App.Admin.KeyguardDisable" Usage="Android.App.Admin.DevicePolicyManager.KeyguardDisableIris" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEYGUARD_DISABLE_IRIS", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEYGUARD_DISABLE_IRIS", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary>Disable iris authentication on keyguard secure screens (e.</summary>
        <remarks>
          <para>Disable iris authentication on keyguard secure screens (e.g. PIN/Pattern/Password).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#KEYGUARD_DISABLE_IRIS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_IRIS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableRemoteInput">
      <MemberSignature Language="VB.NET" Value="Public Const KeyguardDisableRemoteInput As KeyguardDisable  = 64" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::KeyguardDisable KeyguardDisableRemoteInput = 64;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableRemoteInput = 64;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableRemoteInput = (64)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableRemoteInput" />
      <MemberSignature Language="F#" Value="val mutable KeyguardDisableRemoteInput : Android.App.Admin.KeyguardDisable" Usage="Android.App.Admin.DevicePolicyManager.KeyguardDisableRemoteInput" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEYGUARD_DISABLE_REMOTE_INPUT", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEYGUARD_DISABLE_REMOTE_INPUT", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android33.0", "This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>Disable text entry into notifications on secure keyguard screens (e.</summary>
        <remarks>
          <para>Disable text entry into notifications on secure keyguard screens (e.g. PIN/Pattern/Password).</para>
          <para>This member is deprecated. This flag was added in version <c>android.os.Build.VERSION_CODES#N</c>, but it
            never had any effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#KEYGUARD_DISABLE_REMOTE_INPUT" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_REMOTE_INPUT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableSecureCamera">
      <MemberSignature Language="VB.NET" Value="Public Const KeyguardDisableSecureCamera As KeyguardDisable  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::KeyguardDisable KeyguardDisableSecureCamera = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableSecureCamera = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableSecureCamera = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableSecureCamera" />
      <MemberSignature Language="F#" Value="val mutable KeyguardDisableSecureCamera : Android.App.Admin.KeyguardDisable" Usage="Android.App.Admin.DevicePolicyManager.KeyguardDisableSecureCamera" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEYGUARD_DISABLE_SECURE_CAMERA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEYGUARD_DISABLE_SECURE_CAMERA")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Disable the camera on secure keyguard screens (e.</summary>
        <remarks>
          <para>Disable the camera on secure keyguard screens (e.g. PIN/Pattern/Password)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#KEYGUARD_DISABLE_SECURE_CAMERA" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_SECURE_CAMERA</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableSecureNotifications">
      <MemberSignature Language="VB.NET" Value="Public Const KeyguardDisableSecureNotifications As KeyguardDisable  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::KeyguardDisable KeyguardDisableSecureNotifications = 4;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableSecureNotifications = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableSecureNotifications = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableSecureNotifications" />
      <MemberSignature Language="F#" Value="val mutable KeyguardDisableSecureNotifications : Android.App.Admin.KeyguardDisable" Usage="Android.App.Admin.DevicePolicyManager.KeyguardDisableSecureNotifications" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEYGUARD_DISABLE_SECURE_NOTIFICATIONS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEYGUARD_DISABLE_SECURE_NOTIFICATIONS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Disable showing all notifications on secure keyguard screens (e.</summary>
        <remarks>
          <para>Disable showing all notifications on secure keyguard screens (e.g. PIN/Pattern/Password)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#KEYGUARD_DISABLE_SECURE_NOTIFICATIONS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_SECURE_NOTIFICATIONS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableShortcutsAll">
      <MemberSignature Language="VB.NET" Value="Public Const KeyguardDisableShortcutsAll As KeyguardDisable  = 512" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::KeyguardDisable KeyguardDisableShortcutsAll = 512;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableShortcutsAll = 512;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableShortcutsAll = (512)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableShortcutsAll" />
      <MemberSignature Language="F#" Value="val mutable KeyguardDisableShortcutsAll : Android.App.Admin.KeyguardDisable" Usage="Android.App.Admin.DevicePolicyManager.KeyguardDisableShortcutsAll" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEYGUARD_DISABLE_SHORTCUTS_ALL", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEYGUARD_DISABLE_SHORTCUTS_ALL", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary>Disable all keyguard shortcuts.</summary>
        <remarks>
          <para>Disable all keyguard shortcuts.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#KEYGUARD_DISABLE_SHORTCUTS_ALL" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_SHORTCUTS_ALL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableTrustAgents">
      <MemberSignature Language="VB.NET" Value="Public Const KeyguardDisableTrustAgents As KeyguardDisable  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::KeyguardDisable KeyguardDisableTrustAgents = 16;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableTrustAgents = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableTrustAgents = (16)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableTrustAgents" />
      <MemberSignature Language="F#" Value="val mutable KeyguardDisableTrustAgents : Android.App.Admin.KeyguardDisable" Usage="Android.App.Admin.DevicePolicyManager.KeyguardDisableTrustAgents" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEYGUARD_DISABLE_TRUST_AGENTS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEYGUARD_DISABLE_TRUST_AGENTS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Disable trust agents on secure keyguard screens (e.</summary>
        <remarks>
          <para>Disable trust agents on secure keyguard screens (e.g. PIN/Pattern/Password).
            By setting this flag alone, all trust agents are disabled. If the admin then wants to
            allowlist specific features of some trust agent, <c>#setTrustAgentConfiguration</c> can be
            used in conjuction to set trust-agent-specific configurations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#KEYGUARD_DISABLE_TRUST_AGENTS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_TRUST_AGENTS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableUnredactedNotifications">
      <MemberSignature Language="VB.NET" Value="Public Const KeyguardDisableUnredactedNotifications As KeyguardDisable  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::KeyguardDisable KeyguardDisableUnredactedNotifications = 8;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableUnredactedNotifications = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableUnredactedNotifications = (8)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableUnredactedNotifications" />
      <MemberSignature Language="F#" Value="val mutable KeyguardDisableUnredactedNotifications : Android.App.Admin.KeyguardDisable" Usage="Android.App.Admin.DevicePolicyManager.KeyguardDisableUnredactedNotifications" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEYGUARD_DISABLE_UNREDACTED_NOTIFICATIONS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEYGUARD_DISABLE_UNREDACTED_NOTIFICATIONS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Only allow redacted notifications on secure keyguard screens (e.</summary>
        <remarks>
          <para>Only allow redacted notifications on secure keyguard screens (e.g. PIN/Pattern/Password)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#KEYGUARD_DISABLE_UNREDACTED_NOTIFICATIONS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_UNREDACTED_NOTIFICATIONS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyguardDisableWidgetsAll">
      <MemberSignature Language="VB.NET" Value="Public Const KeyguardDisableWidgetsAll As KeyguardDisable  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::KeyguardDisable KeyguardDisableWidgetsAll = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.KeyguardDisable KeyguardDisableWidgetsAll = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.KeyguardDisable KeyguardDisableWidgetsAll = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.KeyguardDisableWidgetsAll" />
      <MemberSignature Language="F#" Value="val mutable KeyguardDisableWidgetsAll : Android.App.Admin.KeyguardDisable" Usage="Android.App.Admin.DevicePolicyManager.KeyguardDisableWidgetsAll" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("KEYGUARD_DISABLE_WIDGETS_ALL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("KEYGUARD_DISABLE_WIDGETS_ALL")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.KeyguardDisable enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.KeyguardDisable</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Disable all keyguard widgets.</summary>
        <remarks>
          <para>Disable all keyguard widgets. Has no effect starting from
            <c>android.os.Build.VERSION_CODES#LOLLIPOP</c> since keyguard widget is only supported
            on Android versions lower than 5.0.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#KEYGUARD_DISABLE_WIDGETS_ALL" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.KEYGUARD_DISABLE_WIDGETS_ALL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="LeaveAllSystemAppsEnabled">
      <MemberSignature Language="VB.NET" Value="Public Const LeaveAllSystemAppsEnabled As UserManagementFlags  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::UserManagementFlags LeaveAllSystemAppsEnabled = 16;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.UserManagementFlags LeaveAllSystemAppsEnabled = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.UserManagementFlags LeaveAllSystemAppsEnabled = (16)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.LeaveAllSystemAppsEnabled" />
      <MemberSignature Language="F#" Value="val mutable LeaveAllSystemAppsEnabled : Android.App.Admin.UserManagementFlags" Usage="Android.App.Admin.DevicePolicyManager.LeaveAllSystemAppsEnabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LEAVE_ALL_SYSTEM_APPS_ENABLED", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LEAVE_ALL_SYSTEM_APPS_ENABLED", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.UserManagementFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.UserManagementFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.UserManagementFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Flag used by <c>#createAndManageUser</c> to specify that the newly created user should skip
            the disabling of system apps during provisioning.</summary>
        <remarks>
          <para>Flag used by <c>#createAndManageUser</c> to specify that the newly created user should skip
            the disabling of system apps during provisioning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#LEAVE_ALL_SYSTEM_APPS_ENABLED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.LEAVE_ALL_SYSTEM_APPS_ENABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListForegroundAffiliatedUsers">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ListForegroundAffiliatedUsers () As IList(Of UserHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Android::OS::UserHandle ^&gt; ^ ListForegroundAffiliatedUsers();" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt; ListForegroundAffiliatedUsers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.OS.UserHandle&gt; ListForegroundAffiliatedUsers() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.ListForegroundAffiliatedUsers" />
      <MemberSignature Language="F#" Value="abstract member ListForegroundAffiliatedUsers : unit -&gt; System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;&#xA;override this.ListForegroundAffiliatedUsers : unit -&gt; System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;" Usage="devicePolicyManager.ListForegroundAffiliatedUsers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("listForegroundAffiliatedUsers", "()Ljava/util/List;", "GetListForegroundAffiliatedUsersHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("listForegroundAffiliatedUsers", "()Ljava/util/List;", "GetListForegroundAffiliatedUsersHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the list of <c>#isAffiliatedUser() affiliated</c> users running on foreground.</summary>
        <returns>list of <c>#isAffiliatedUser() affiliated</c> users running on foreground.</returns>
        <remarks>
          <para>Gets the list of <c>#isAffiliatedUser() affiliated</c> users running on foreground.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#listForegroundAffiliatedUsers()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.listForegroundAffiliatedUsers()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockNow">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LockNow ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LockNow();" />
      <MemberSignature Language="C#" Value="public virtual void LockNow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockNow() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.LockNow" />
      <MemberSignature Language="F#" Value="abstract member LockNow : unit -&gt; unit&#xA;override this.LockNow : unit -&gt; unit" Usage="devicePolicyManager.LockNow " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("lockNow", "()V", "GetLockNowHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("lockNow", "()V", "GetLockNowHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Make the device lock immediately, as if the lock screen timeout has expired at the point of
            this call.</summary>
        <remarks>
          <para>Make the device lock immediately, as if the lock screen timeout has expired at the point of
            this call.</para>
          <para>This method secures the device in response to an urgent situation, such as a lost or stolen
            device. After this method is called, the device must be unlocked using strong authentication
            (PIN, pattern, or password). This API is intended for use only by device admins.</para>
          <para>From version <c>android.os.Build.VERSION_CODES#R</c> onwards, the caller must either have
            the LOCK_DEVICE permission or the device must have the device admin feature; if neither is
            true, then the method will return without completing any action. Before version
            <c>android.os.Build.VERSION_CODES#R</c>, the device needed the device admin feature,
            regardless of the caller's permissions.</para>
          <para>The calling device admin must have requested <c>DeviceAdminInfo#USES_POLICY_FORCE_LOCK</c>
            to be able to call this method; if it has not, a security exception will be thrown.</para>
          <para>If there's no lock type set, this method forces the device to go to sleep but doesn't lock
            the device. Device admins who find the device in this state can lock an otherwise-insecure
            device by first calling <c>#resetPassword</c> to set the password and then lock the device.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to lock the parent profile.</para>
          <para>NOTE: on <c>android.content.pm.PackageManager#FEATURE_AUTOMOTIVE automotive builds</c>, this
            method doesn't turn off the screen as it would be a driving safety distraction.</para>
          <para>Equivalent to calling <c>#lockNow(int)</c> with no flags.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#lockNow()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.lockNow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="LockNow">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LockNow (flags As DevicePolicyManagerFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LockNow(Android::App::Admin::DevicePolicyManagerFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void LockNow (Android.App.Admin.DevicePolicyManagerFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LockNow(valuetype Android.App.Admin.DevicePolicyManagerFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.LockNow(Android.App.Admin.DevicePolicyManagerFlags)" />
      <MemberSignature Language="F#" Value="abstract member LockNow : Android.App.Admin.DevicePolicyManagerFlags -&gt; unit&#xA;override this.LockNow : Android.App.Admin.DevicePolicyManagerFlags -&gt; unit" Usage="devicePolicyManager.LockNow flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("lockNow", "(I)V", "GetLockNow_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("lockNow", "(I)V", "GetLockNow_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.App.Admin.DevicePolicyManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">May be 0 or <c>#FLAG_EVICT_CREDENTIAL_ENCRYPTION_KEY</c>.</param>
        <summary>Make the device lock immediately, as if the lock screen timeout has expired at the point of
            this call.</summary>
        <remarks>
          <para>Make the device lock immediately, as if the lock screen timeout has expired at the point of
            this call.</para>
          <para>This method secures the device in response to an urgent situation, such as a lost or stolen
            device. After this method is called, the device must be unlocked using strong authentication
            (PIN, pattern, or password). This API is for use only by device admins and holders of the
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_LOCK</c> permission.</para>
          <para>From version <c>android.os.Build.VERSION_CODES#R</c> onwards, the caller must either have
            the LOCK_DEVICE permission or the device must have the device admin feature; if neither is
            true, then the method will return without completing any action. Before version
            <c>android.os.Build.VERSION_CODES#R</c>, the device needed the device admin feature,
            regardless of the caller's permissions.</para>
          <para>A calling device admin must have requested <c>DeviceAdminInfo#USES_POLICY_FORCE_LOCK</c>
            to be able to call this method; if it has not, a security exception will be thrown.</para>
          <para>If there's no lock type set, this method forces the device to go to sleep but doesn't lock
            the device. Device admins who find the device in this state can lock an otherwise-insecure
            device by first calling <c>#resetPassword</c> to set the password and then lock the device.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to lock the parent profile as
            well as the managed profile.</para>
          <para>NOTE: In order to lock the parent profile and evict the encryption key of the managed
            profile, <c>#lockNow()</c> must be called twice: First, <c>#lockNow()</c> should be called
            on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c>, then <c>#lockNow(int)</c> should be
            called on the <c>DevicePolicyManager</c> instance associated with the managed profile,
            with the <c>#FLAG_EVICT_CREDENTIAL_ENCRYPTION_KEY</c> flag.
            Calling the method twice in this order ensures that all users are locked and does not
            stop the device admin on the managed profile from issuing a second call to lock its own
            profile.</para>
          <para>NOTE: on <c>android.content.pm.PackageManager#FEATURE_AUTOMOTIVE automotive builds</c>, this
            method doesn't turn off the screen as it would be a driving safety distraction.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#lockNow(int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.lockNow(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTaskFeatureBlockActivityStartInTask">
      <MemberSignature Language="VB.NET" Value="Public Const LockTaskFeatureBlockActivityStartInTask As LockTaskFeatures  = 64" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::LockTaskFeatures LockTaskFeatureBlockActivityStartInTask = 64;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.LockTaskFeatures LockTaskFeatureBlockActivityStartInTask = 64;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.LockTaskFeatures LockTaskFeatureBlockActivityStartInTask = (64)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.LockTaskFeatureBlockActivityStartInTask" />
      <MemberSignature Language="F#" Value="val mutable LockTaskFeatureBlockActivityStartInTask : Android.App.Admin.LockTaskFeatures" Usage="Android.App.Admin.DevicePolicyManager.LockTaskFeatureBlockActivityStartInTask" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LOCK_TASK_FEATURE_BLOCK_ACTIVITY_START_IN_TASK", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LOCK_TASK_FEATURE_BLOCK_ACTIVITY_START_IN_TASK", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.LockTaskFeatures</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary>Enable blocking of non-allowlisted activities from being started into a locked task.</summary>
        <remarks>
          <para>Enable blocking of non-allowlisted activities from being started into a locked task.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#LOCK_TASK_FEATURE_BLOCK_ACTIVITY_START_IN_TASK" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_BLOCK_ACTIVITY_START_IN_TASK</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTaskFeatureGlobalActions">
      <MemberSignature Language="VB.NET" Value="Public Const LockTaskFeatureGlobalActions As LockTaskFeatures  = 16" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::LockTaskFeatures LockTaskFeatureGlobalActions = 16;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.LockTaskFeatures LockTaskFeatureGlobalActions = 16;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.LockTaskFeatures LockTaskFeatureGlobalActions = (16)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.LockTaskFeatureGlobalActions" />
      <MemberSignature Language="F#" Value="val mutable LockTaskFeatureGlobalActions : Android.App.Admin.LockTaskFeatures" Usage="Android.App.Admin.DevicePolicyManager.LockTaskFeatureGlobalActions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LOCK_TASK_FEATURE_GLOBAL_ACTIONS", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LOCK_TASK_FEATURE_GLOBAL_ACTIONS", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.LockTaskFeatures</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>Enable the global actions dialog during LockTask mode.</summary>
        <remarks>
          <para>Enable the global actions dialog during LockTask mode. This is the dialog that shows up when
            the user long-presses the power button, for example. Note that the user may not be able to
            power off the device if this flag is not set.</para>
          <para>This flag is enabled by default until <c>#setLockTaskFeatures(ComponentName, int)</c> is
            called for the first time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#LOCK_TASK_FEATURE_GLOBAL_ACTIONS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_GLOBAL_ACTIONS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTaskFeatureHome">
      <MemberSignature Language="VB.NET" Value="Public Const LockTaskFeatureHome As LockTaskFeatures  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::LockTaskFeatures LockTaskFeatureHome = 4;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.LockTaskFeatures LockTaskFeatureHome = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.LockTaskFeatures LockTaskFeatureHome = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.LockTaskFeatureHome" />
      <MemberSignature Language="F#" Value="val mutable LockTaskFeatureHome : Android.App.Admin.LockTaskFeatures" Usage="Android.App.Admin.DevicePolicyManager.LockTaskFeatureHome" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LOCK_TASK_FEATURE_HOME", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LOCK_TASK_FEATURE_HOME", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.LockTaskFeatures</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Enable the Home button during LockTask mode.</summary>
        <remarks>
          <para>Enable the Home button during LockTask mode. Note that if a custom launcher is used, it has
            to be registered as the default launcher with
            <c>#addPersistentPreferredActivity(ComponentName, IntentFilter, ComponentName)</c>, and its
            package needs to be allowlisted for LockTask with
            <c>#setLockTaskPackages(ComponentName, String[])</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#LOCK_TASK_FEATURE_HOME" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_HOME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTaskFeatureKeyguard">
      <MemberSignature Language="VB.NET" Value="Public Const LockTaskFeatureKeyguard As LockTaskFeatures  = 32" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::LockTaskFeatures LockTaskFeatureKeyguard = 32;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.LockTaskFeatures LockTaskFeatureKeyguard = 32;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.LockTaskFeatures LockTaskFeatureKeyguard = (32)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.LockTaskFeatureKeyguard" />
      <MemberSignature Language="F#" Value="val mutable LockTaskFeatureKeyguard : Android.App.Admin.LockTaskFeatures" Usage="Android.App.Admin.DevicePolicyManager.LockTaskFeatureKeyguard" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LOCK_TASK_FEATURE_KEYGUARD", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LOCK_TASK_FEATURE_KEYGUARD", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.LockTaskFeatures</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary>Enable the keyguard during LockTask mode.</summary>
        <remarks>
          <para>Enable the keyguard during LockTask mode. Note that if the keyguard is already disabled with
            <c>#setKeyguardDisabled(ComponentName, boolean)</c>, setting this flag will have no effect.
            If this flag is not set, the keyguard will not be shown even if the user has a lock screen
            credential.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#LOCK_TASK_FEATURE_KEYGUARD" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_KEYGUARD</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTaskFeatureNone">
      <MemberSignature Language="VB.NET" Value="Public Const LockTaskFeatureNone As LockTaskFeatures  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::LockTaskFeatures LockTaskFeatureNone = 0;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.LockTaskFeatures LockTaskFeatureNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.LockTaskFeatures LockTaskFeatureNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.LockTaskFeatureNone" />
      <MemberSignature Language="F#" Value="val mutable LockTaskFeatureNone : Android.App.Admin.LockTaskFeatures" Usage="Android.App.Admin.DevicePolicyManager.LockTaskFeatureNone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LOCK_TASK_FEATURE_NONE", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LOCK_TASK_FEATURE_NONE", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.LockTaskFeatures</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Disable all configurable SystemUI features during LockTask mode.</summary>
        <remarks>
          <para>Disable all configurable SystemUI features during LockTask mode. This includes,
            &lt;ul&gt;
                &lt;li&gt;system info area in the status bar (connectivity icons, clock, etc.)
                &lt;li&gt;notifications (including alerts, icons, and the notification shade)
                &lt;li&gt;Home button
                &lt;li&gt;Recents button and UI
                &lt;li&gt;global actions menu (i.e. power button menu)
                &lt;li&gt;keyguard
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#LOCK_TASK_FEATURE_NONE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_NONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTaskFeatureNotifications">
      <MemberSignature Language="VB.NET" Value="Public Const LockTaskFeatureNotifications As LockTaskFeatures  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::LockTaskFeatures LockTaskFeatureNotifications = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.LockTaskFeatures LockTaskFeatureNotifications = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.LockTaskFeatures LockTaskFeatureNotifications = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.LockTaskFeatureNotifications" />
      <MemberSignature Language="F#" Value="val mutable LockTaskFeatureNotifications : Android.App.Admin.LockTaskFeatures" Usage="Android.App.Admin.DevicePolicyManager.LockTaskFeatureNotifications" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LOCK_TASK_FEATURE_NOTIFICATIONS", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LOCK_TASK_FEATURE_NOTIFICATIONS", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.LockTaskFeatures</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Enable notifications during LockTask mode.</summary>
        <remarks>
          <para>Enable notifications during LockTask mode. This includes notification icons on the status
            bar, heads-up notifications, and the expandable notification shade. Note that the Quick
            Settings panel remains disabled. This feature flag can only be used in combination with
            <c>#LOCK_TASK_FEATURE_HOME</c>. <c>#setLockTaskFeatures(ComponentName, int)</c>
            throws an <c>IllegalArgumentException</c> if this feature flag is defined without
            <c>#LOCK_TASK_FEATURE_HOME</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#LOCK_TASK_FEATURE_NOTIFICATIONS" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_NOTIFICATIONS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTaskFeatureOverview">
      <MemberSignature Language="VB.NET" Value="Public Const LockTaskFeatureOverview As LockTaskFeatures  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::LockTaskFeatures LockTaskFeatureOverview = 8;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.LockTaskFeatures LockTaskFeatureOverview = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.LockTaskFeatures LockTaskFeatureOverview = (8)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.LockTaskFeatureOverview" />
      <MemberSignature Language="F#" Value="val mutable LockTaskFeatureOverview : Android.App.Admin.LockTaskFeatures" Usage="Android.App.Admin.DevicePolicyManager.LockTaskFeatureOverview" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LOCK_TASK_FEATURE_OVERVIEW", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LOCK_TASK_FEATURE_OVERVIEW", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.LockTaskFeatures</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Enable the Overview button and the Overview screen during LockTask mode.</summary>
        <remarks>
          <para>Enable the Overview button and the Overview screen during LockTask mode. This feature flag
            can only be used in combination with <c>#LOCK_TASK_FEATURE_HOME</c>, and
            <c>#setLockTaskFeatures(ComponentName, int)</c> will throw an
            <c>IllegalArgumentException</c> if this feature flag is defined without
            <c>#LOCK_TASK_FEATURE_HOME</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#LOCK_TASK_FEATURE_OVERVIEW" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_OVERVIEW</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LockTaskFeatureSystemInfo">
      <MemberSignature Language="VB.NET" Value="Public Const LockTaskFeatureSystemInfo As LockTaskFeatures  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::LockTaskFeatures LockTaskFeatureSystemInfo = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.LockTaskFeatures LockTaskFeatureSystemInfo = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.LockTaskFeatures LockTaskFeatureSystemInfo = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.LockTaskFeatureSystemInfo" />
      <MemberSignature Language="F#" Value="val mutable LockTaskFeatureSystemInfo : Android.App.Admin.LockTaskFeatures" Usage="Android.App.Admin.DevicePolicyManager.LockTaskFeatureSystemInfo" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("LOCK_TASK_FEATURE_SYSTEM_INFO", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("LOCK_TASK_FEATURE_SYSTEM_INFO", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.LockTaskFeatures enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.LockTaskFeatures</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Enable the system info area in the status bar during LockTask mode.</summary>
        <remarks>
          <para>Enable the system info area in the status bar during LockTask mode. The system info area
            usually occupies the right side of the status bar (although this can differ across OEMs). It
            includes all system information indicators, such as date and time, connectivity, battery,
            vibration mode, etc.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#LOCK_TASK_FEATURE_SYSTEM_INFO" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.LOCK_TASK_FEATURE_SYSTEM_INFO</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogoutUser">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LogoutUser (admin As ComponentName) As UserOperationResultCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::OS::UserOperationResultCode LogoutUser(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.UserOperationResultCode LogoutUser (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.OS.UserOperationResultCode LogoutUser(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.LogoutUser(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member LogoutUser : Android.Content.ComponentName -&gt; Android.OS.UserOperationResultCode&#xA;override this.LogoutUser : Android.Content.ComponentName -&gt; Android.OS.UserOperationResultCode" Usage="devicePolicyManager.LogoutUser admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("logoutUser", "(Landroid/content/ComponentName;)I", "GetLogoutUser_Landroid_content_ComponentName_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("logoutUser", "(Landroid/content/ComponentName;)I", "GetLogoutUser_Landroid_content_ComponentName_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.UserOperationResultCode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by a profile owner of secondary user that is affiliated with the device to stop the
            calling user and switch back to primary user (when the user was
            <c>#switchUser(ComponentName, UserHandle)</c> switched to) or stop the user (when it was
            <c>#startUserInBackground(ComponentName, UserHandle) started in background</c>.</summary>
        <returns>one of the following result codes:
            <c>UserManager#USER_OPERATION_ERROR_UNKNOWN</c>,
            <c>UserManager#USER_OPERATION_SUCCESS</c>,
            <c>UserManager#USER_OPERATION_ERROR_MANAGED_PROFILE</c>,
            <c>UserManager#USER_OPERATION_ERROR_CURRENT_USER</c></returns>
        <remarks>
          <para>Called by a profile owner of secondary user that is affiliated with the device to stop the
            calling user and switch back to primary user (when the user was
            <c>#switchUser(ComponentName, UserHandle)</c> switched to) or stop the user (when it was
            <c>#startUserInBackground(ComponentName, UserHandle) started in background</c>.</para>
          <para>Notice that on devices running with
            <c>UserManager#isHeadlessSystemUserMode() headless system user mode</c>, there is no primary
            user, so it switches back to the user that was in the foreground before the first call to
            <c>#switchUser(ComponentName, UserHandle)</c> (or fails with
            <c>UserManager#USER_OPERATION_ERROR_UNKNOWN</c> if that method was not called prior to this
            call).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#logoutUser(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.logoutUser(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeUserEphemeral">
      <MemberSignature Language="VB.NET" Value="Public Const MakeUserEphemeral As UserManagementFlags  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::UserManagementFlags MakeUserEphemeral = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.UserManagementFlags MakeUserEphemeral = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.UserManagementFlags MakeUserEphemeral = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.MakeUserEphemeral" />
      <MemberSignature Language="F#" Value="val mutable MakeUserEphemeral : Android.App.Admin.UserManagementFlags" Usage="Android.App.Admin.DevicePolicyManager.MakeUserEphemeral" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MAKE_USER_EPHEMERAL", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MAKE_USER_EPHEMERAL", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.UserManagementFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.UserManagementFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.UserManagementFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag used by <c>#createAndManageUser</c> to specify that the user should be created
            ephemeral.</summary>
        <remarks>
          <para>Flag used by <c>#createAndManageUser</c> to specify that the user should be created
            ephemeral. Ephemeral users will be removed after switching to another user or rebooting the
            device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#MAKE_USER_EPHEMERAL" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.MAKE_USER_EPHEMERAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedProfileCallerIdAccessPolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ManagedProfileCallerIdAccessPolicy As PackagePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::App::Admin::PackagePolicy ^ ManagedProfileCallerIdAccessPolicy { Android::App::Admin::PackagePolicy ^ get(); void set(Android::App::Admin::PackagePolicy ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.PackagePolicy? ManagedProfileCallerIdAccessPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.Admin.PackagePolicy ManagedProfileCallerIdAccessPolicy" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.ManagedProfileCallerIdAccessPolicy" />
      <MemberSignature Language="F#" Value="member this.ManagedProfileCallerIdAccessPolicy : Android.App.Admin.PackagePolicy with get, set" Usage="Android.App.Admin.DevicePolicyManager.ManagedProfileCallerIdAccessPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getManagedProfileCallerIdAccessPolicy", "()Landroid/app/admin/PackagePolicy;", "GetGetManagedProfileCallerIdAccessPolicyHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getManagedProfileCallerIdAccessPolicy", "()Landroid/app/admin/PackagePolicy;", "GetGetManagedProfileCallerIdAccessPolicyHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setManagedProfileCallerIdAccessPolicy", "(Landroid/app/admin/PackagePolicy;)V", "GetSetManagedProfileCallerIdAccessPolicy_Landroid_app_admin_PackagePolicy_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setManagedProfileCallerIdAccessPolicy", "(Landroid/app/admin/PackagePolicy;)V", "GetSetManagedProfileCallerIdAccessPolicy_Landroid_app_admin_PackagePolicy_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PackagePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="policy">the policy to set, setting this value to <c>null</c> will allow
                          all packages</param>
        <summary>Called by a profile owner of a managed profile to retrieve the caller id policy. -or- Called by a profile owner of a managed profile to set the packages that are allowed to
            lookup contacts in the managed profile based on caller id information.</summary>
        <value>the current caller id policy</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Called by a profile owner of a managed profile to retrieve the caller id policy.</para>
          <para>The calling device admin must be a profile owner of a managed profile.
            If it is not, a <c>SecurityException</c> will be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getManagedProfileCallerIdAccessPolicy()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getManagedProfileCallerIdAccessPolicy()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Called by a profile owner of a managed profile to set the packages that are allowed to
            lookup contacts in the managed profile based on caller id information.</para>
          <para>For example, the policy determines if a dialer app in the parent profile resolving
            an incoming call can search the caller id data, such as phone number,
            of managed contacts and return managed contacts that match.</para>
          <para>The calling device admin must be a profile owner of a managed profile.
            If it is not, a <c>SecurityException</c> will be thrown.</para>
          <para>A <c>PackagePolicy#PACKAGE_POLICY_ALLOWLIST_AND_SYSTEM</c> policy type
            allows access from the OEM default packages for the Sms, Dialer and Contact roles,
            in addition to the packages specified in <c>PackagePolicy#getPackageNames()</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setManagedProfileCallerIdAccessPolicy(android.app.admin.PackagePolicy)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setManagedProfileCallerIdAccessPolicy(android.app.admin.PackagePolicy)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedProfileContactsAccessPolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ManagedProfileContactsAccessPolicy As PackagePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::App::Admin::PackagePolicy ^ ManagedProfileContactsAccessPolicy { Android::App::Admin::PackagePolicy ^ get(); void set(Android::App::Admin::PackagePolicy ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.PackagePolicy? ManagedProfileContactsAccessPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.Admin.PackagePolicy ManagedProfileContactsAccessPolicy" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.ManagedProfileContactsAccessPolicy" />
      <MemberSignature Language="F#" Value="member this.ManagedProfileContactsAccessPolicy : Android.App.Admin.PackagePolicy with get, set" Usage="Android.App.Admin.DevicePolicyManager.ManagedProfileContactsAccessPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getManagedProfileContactsAccessPolicy", "()Landroid/app/admin/PackagePolicy;", "GetGetManagedProfileContactsAccessPolicyHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getManagedProfileContactsAccessPolicy", "()Landroid/app/admin/PackagePolicy;", "GetGetManagedProfileContactsAccessPolicyHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setManagedProfileContactsAccessPolicy", "(Landroid/app/admin/PackagePolicy;)V", "GetSetManagedProfileContactsAccessPolicy_Landroid_app_admin_PackagePolicy_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setManagedProfileContactsAccessPolicy", "(Landroid/app/admin/PackagePolicy;)V", "GetSetManagedProfileContactsAccessPolicy_Landroid_app_admin_PackagePolicy_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PackagePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="policy">the policy to set, setting this value to <c>null</c> will allow
                          all packages</param>
        <summary>Called by a profile owner of a managed profile to determine the current policy applied
            to managed profile contacts. -or- Called by a profile owner of a managed profile to set the packages that are allowed
            access to the managed profile contacts from the parent user.</summary>
        <value>the current contacts search policy</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Called by a profile owner of a managed profile to determine the current policy applied
            to managed profile contacts.</para>
          <para>The calling device admin must be a profile owner of a managed profile.
            If it is not, a <c>SecurityException</c> will be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getManagedProfileContactsAccessPolicy()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getManagedProfileContactsAccessPolicy()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Called by a profile owner of a managed profile to set the packages that are allowed
            access to the managed profile contacts from the parent user.</para>
          <para>For example, the system will enforce the provided policy and determine
            if contacts in the managed profile are shown when queried by an application
            in the parent user.</para>
          <para>The calling device admin must be a profile owner of a managed profile.
            If it is not, a <c>SecurityException</c> will be thrown.</para>
          <para>A <c>PackagePolicy#PACKAGE_POLICY_ALLOWLIST_AND_SYSTEM</c> policy type
            allows access from the OEM default packages for the Sms, Dialer and Contact roles,
            in addition to the packages specified in <c>PackagePolicy#getPackageNames()</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setManagedProfileContactsAccessPolicy(android.app.admin.PackagePolicy)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setManagedProfileContactsAccessPolicy(android.app.admin.PackagePolicy)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManagedSubscriptionsPolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ManagedSubscriptionsPolicy As ManagedSubscriptionsPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::App::Admin::ManagedSubscriptionsPolicy ^ ManagedSubscriptionsPolicy { Android::App::Admin::ManagedSubscriptionsPolicy ^ get(); void set(Android::App::Admin::ManagedSubscriptionsPolicy ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.ManagedSubscriptionsPolicy ManagedSubscriptionsPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.Admin.ManagedSubscriptionsPolicy ManagedSubscriptionsPolicy" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.ManagedSubscriptionsPolicy" />
      <MemberSignature Language="F#" Value="member this.ManagedSubscriptionsPolicy : Android.App.Admin.ManagedSubscriptionsPolicy with get, set" Usage="Android.App.Admin.DevicePolicyManager.ManagedSubscriptionsPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getManagedSubscriptionsPolicy", "()Landroid/app/admin/ManagedSubscriptionsPolicy;", "GetGetManagedSubscriptionsPolicyHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getManagedSubscriptionsPolicy", "()Landroid/app/admin/ManagedSubscriptionsPolicy;", "GetGetManagedSubscriptionsPolicyHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setManagedSubscriptionsPolicy", "(Landroid/app/admin/ManagedSubscriptionsPolicy;)V", "GetSetManagedSubscriptionsPolicy_Landroid_app_admin_ManagedSubscriptionsPolicy_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setManagedSubscriptionsPolicy", "(Landroid/app/admin/ManagedSubscriptionsPolicy;)V", "GetSetManagedSubscriptionsPolicy_Landroid_app_admin_ManagedSubscriptionsPolicy_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.ManagedSubscriptionsPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="policy">
          <c>ManagedSubscriptionsPolicy</c> policy, passing null for this resets the
                          policy to be the default.</param>
        <summary>Returns the current <c>ManagedSubscriptionsPolicy</c>. -or- Called by a profile owner of an organization-owned device to specify <c>ManagedSubscriptionsPolicy</c></summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current <c>ManagedSubscriptionsPolicy</c>.
            If the policy has not been set, it will return a default policy of Type <c>ManagedSubscriptionsPolicy#TYPE_ALL_PERSONAL_SUBSCRIPTIONS</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getManagedSubscriptionsPolicy()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getManagedSubscriptionsPolicy()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Called by a profile owner of an organization-owned device to specify <c>ManagedSubscriptionsPolicy</c></para>
          <para>Managed subscriptions policy controls how SIMs would be associated with the
            managed profile. For example a policy of type
            <c>ManagedSubscriptionsPolicy#TYPE_ALL_MANAGED_SUBSCRIPTIONS</c> assigns all
            SIM-based subscriptions to the managed profile. In this case OEM default
            dialer and messages app are automatically installed in the managed profile
            and all incoming and outgoing calls and text messages are handled by them.</para>
          <para>This API can only be called during device setup.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setManagedSubscriptionsPolicy(android.app.admin.ManagedSubscriptionsPolicy)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setManagedSubscriptionsPolicy(android.app.admin.ManagedSubscriptionsPolicy)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MimeTypeProvisioningNfc">
      <MemberSignature Language="VB.NET" Value="Public Const MimeTypeProvisioningNfc As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ MimeTypeProvisioningNfc;" />
      <MemberSignature Language="C#" Value="public const string MimeTypeProvisioningNfc;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MimeTypeProvisioningNfc" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.MimeTypeProvisioningNfc" />
      <MemberSignature Language="F#" Value="val mutable MimeTypeProvisioningNfc : string" Usage="Android.App.Admin.DevicePolicyManager.MimeTypeProvisioningNfc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MIME_TYPE_PROVISIONING_NFC")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MIME_TYPE_PROVISIONING_NFC")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This MIME type is used for starting the device owner provisioning.</summary>
        <remarks>
          <para>This MIME type is used for starting the device owner provisioning.</para>
          <para>During device owner provisioning a device admin app is set as the owner of the device.
            A device owner has full control over the device. The device owner can not be modified by the
            user and the only way of resetting the device is if the device owner app calls a factory
            reset.</para>
          <para>A typical use case would be a device that is owned by a company, but used by either an
            employee or client.</para>
          <para>The NFC message must be sent to an unprovisioned device.</para>
          <para>The NFC record must contain a serialized <c>java.util.Properties</c> object which
            contains the following properties:
            &lt;ul&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME</c>&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_LOCATION</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_DOWNLOAD_COOKIE_HEADER</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_CHECKSUM</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_LOCAL_TIME</c> (convert to String), optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_TIME_ZONE</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_LOCALE</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_SSID</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_HIDDEN</c> (convert to String), optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_SECURITY_TYPE</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_PASSWORD</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_PROXY_HOST</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_PROXY_PORT</c> (convert to String), optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_PROXY_BYPASS</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_PAC_URL</c>, optional&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_ADMIN_EXTRAS_BUNDLE</c>, optional, supported from <c>android.os.Build.VERSION_CODES#M</c>&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_EAP_METHOD</c>, optional, supported from <c>android.os.Build.VERSION_CODES#Q</c>&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_PHASE2_AUTH</c>, optional, supported from <c>android.os.Build.VERSION_CODES#Q</c>&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_CA_CERTIFICATE</c>, optional, supported from <c>android.os.Build.VERSION_CODES#Q</c>&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_USER_CERTIFICATE</c>, optional, supported from <c>android.os.Build.VERSION_CODES#Q</c>&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_IDENTITY</c>, optional, supported from <c>android.os.Build.VERSION_CODES#Q</c>&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_ANONYMOUS_IDENTITY</c>, optional, supported from <c>android.os.Build.VERSION_CODES#Q</c>&lt;/li&gt;
            &lt;li&gt;<c>#EXTRA_PROVISIONING_WIFI_DOMAIN</c>, optional, supported from <c>android.os.Build.VERSION_CODES#Q</c>&lt;/li&gt;&lt;/ul&gt;</para>
          <para>As of <c>android.os.Build.VERSION_CODES#M</c>, the properties should contain
            <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_COMPONENT_NAME</c> instead of
            <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME</c>, (although specifying only
            <c>#EXTRA_PROVISIONING_DEVICE_ADMIN_PACKAGE_NAME</c> is still supported).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#MIME_TYPE_PROVISIONING_NFC" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.MIME_TYPE_PROVISIONING_NFC</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinimumRequiredWifiSecurityLevel">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MinimumRequiredWifiSecurityLevel As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinimumRequiredWifiSecurityLevel { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int MinimumRequiredWifiSecurityLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinimumRequiredWifiSecurityLevel" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.MinimumRequiredWifiSecurityLevel" />
      <MemberSignature Language="F#" Value="member this.MinimumRequiredWifiSecurityLevel : int with get, set" Usage="Android.App.Admin.DevicePolicyManager.MinimumRequiredWifiSecurityLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMinimumRequiredWifiSecurityLevel", "()I", "GetGetMinimumRequiredWifiSecurityLevelHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMinimumRequiredWifiSecurityLevel", "()I", "GetGetMinimumRequiredWifiSecurityLevelHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMinimumRequiredWifiSecurityLevel", "(I)V", "GetSetMinimumRequiredWifiSecurityLevel_IHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setMinimumRequiredWifiSecurityLevel", "(I)V", "GetSetMinimumRequiredWifiSecurityLevel_IHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIFI")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIFI")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="level">minimum security level</param>
        <summary>Returns the current Wi-Fi minimum security level. -or- Called by device owner or profile owner of an organization-owned managed profile to
            specify the minimum security level required for Wi-Fi networks.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current Wi-Fi minimum security level.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getMinimumRequiredWifiSecurityLevel()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getMinimumRequiredWifiSecurityLevel()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Called by device owner or profile owner of an organization-owned managed profile to
            specify the minimum security level required for Wi-Fi networks.
            The device may not connect to networks that do not meet the minimum security level.
            If the current network does not meet the minimum security level set, it will be disconnected.
            
            The following shows the Wi-Fi security levels from the lowest to the highest security level:
            <c>#WIFI_SECURITY_OPEN</c><c>#WIFI_SECURITY_PERSONAL</c><c>#WIFI_SECURITY_ENTERPRISE_EAP</c><c>#WIFI_SECURITY_ENTERPRISE_192</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setMinimumRequiredWifiSecurityLevel(int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setMinimumRequiredWifiSecurityLevel(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MteDisabled">
      <MemberSignature Language="VB.NET" Value="Public Const MteDisabled As MteMode  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::MteMode MteDisabled = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.MteMode MteDisabled = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.MteMode MteDisabled = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.MteDisabled" />
      <MemberSignature Language="F#" Value="val mutable MteDisabled : Android.App.Admin.MteMode" Usage="Android.App.Admin.DevicePolicyManager.MteDisabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MTE_DISABLED", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MTE_DISABLED", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.MteMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.MteMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.MteMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Require that MTE be disabled on the device.</summary>
        <remarks>
          <para>Require that MTE be disabled on the device. Can be set by a device owner.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#MTE_DISABLED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.MTE_DISABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MteEnabled">
      <MemberSignature Language="VB.NET" Value="Public Const MteEnabled As MteMode  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::MteMode MteEnabled = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.MteMode MteEnabled = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.MteMode MteEnabled = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.MteEnabled" />
      <MemberSignature Language="F#" Value="val mutable MteEnabled : Android.App.Admin.MteMode" Usage="Android.App.Admin.DevicePolicyManager.MteEnabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MTE_ENABLED", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MTE_ENABLED", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.MteMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.MteMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.MteMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Require that MTE be enabled on the device, if supported.</summary>
        <remarks>
          <para>Require that MTE be enabled on the device, if supported. Can be set by a device owner or a
            profile owner of an organization-owned managed profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#MTE_ENABLED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.MTE_ENABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MteNotControlledByPolicy">
      <MemberSignature Language="VB.NET" Value="Public Const MteNotControlledByPolicy As MteMode  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::MteMode MteNotControlledByPolicy = 0;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.MteMode MteNotControlledByPolicy = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.MteMode MteNotControlledByPolicy = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.MteNotControlledByPolicy" />
      <MemberSignature Language="F#" Value="val mutable MteNotControlledByPolicy : Android.App.Admin.MteMode" Usage="Android.App.Admin.DevicePolicyManager.MteNotControlledByPolicy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("MTE_NOT_CONTROLLED_BY_POLICY", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("MTE_NOT_CONTROLLED_BY_POLICY", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.MteMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.MteMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.MteMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Allow the user to choose whether to enable MTE on the device.</summary>
        <remarks>
          <para>Allow the user to choose whether to enable MTE on the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#MTE_NOT_CONTROLLED_BY_POLICY" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.MTE_NOT_CONTROLLED_BY_POLICY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MtePolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MtePolicy As MteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::App::Admin::MteMode MtePolicy { Android::App::Admin::MteMode get(); void set(Android::App::Admin::MteMode value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.MteMode MtePolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.App.Admin.MteMode MtePolicy" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.MtePolicy" />
      <MemberSignature Language="F#" Value="member this.MtePolicy : Android.App.Admin.MteMode with get, set" Usage="Android.App.Admin.DevicePolicyManager.MtePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getMtePolicy", "()I", "GetGetMtePolicyHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getMtePolicy", "()I", "GetGetMtePolicyHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_MTE")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_MTE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setMtePolicy", "(I)V", "GetSetMtePolicy_IHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setMtePolicy", "(I)V", "GetSetMtePolicy_IHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_MTE")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_MTE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.MteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="policy">the MTE policy to be set</param>
        <summary>Called by a device owner, profile owner of an organization-owned device to
            get the Memory Tagging Extension (MTE) policy
            
            <see href="https://source.android.com/docs/security/test/memory-safety/arm-mte">
            Learn more about MTE</see> -or- Called by a device owner, profile owner of an organization-owned device, to set the Memory
            Tagging Extension (MTE) policy.</summary>
        <value>the currently set MTE policy</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Called by a device owner, profile owner of an organization-owned device to
            get the Memory Tagging Extension (MTE) policy
            
            <see href="https://source.android.com/docs/security/test/memory-safety/arm-mte">
            Learn more about MTE</see></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getMtePolicy()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getMtePolicy()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Called by a device owner, profile owner of an organization-owned device, to set the Memory
            Tagging Extension (MTE) policy. MTE is a CPU extension that allows to protect against certain
            classes of security problems at a small runtime performance cost overhead.</para>
          <para>The MTE policy can only be set to <c>#MTE_DISABLED</c> if called by a device owner.
            Otherwise a <c>SecurityException</c> will be thrown.</para>
          <para>The device needs to be rebooted to apply changes to the MTE policy.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setMtePolicy(int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setMtePolicy(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NearbyAppStreamingPolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NearbyAppStreamingPolicy As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NearbyAppStreamingPolicy { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int NearbyAppStreamingPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NearbyAppStreamingPolicy" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.NearbyAppStreamingPolicy" />
      <MemberSignature Language="F#" Value="member this.NearbyAppStreamingPolicy : int with get, set" Usage="Android.App.Admin.DevicePolicyManager.NearbyAppStreamingPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNearbyAppStreamingPolicy", "()I", "GetGetNearbyAppStreamingPolicyHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNearbyAppStreamingPolicy", "()I", "GetGetNearbyAppStreamingPolicyHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.RequiresPermission("android.permission.READ_NEARBY_STREAMING_POLICY")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.RequiresPermission("android.permission.READ_NEARBY_STREAMING_POLICY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setNearbyAppStreamingPolicy", "(I)V", "GetSetNearbyAppStreamingPolicy_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setNearbyAppStreamingPolicy", "(I)V", "GetSetNearbyAppStreamingPolicy_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="policy">One of the <c>NearbyStreamingPolicy</c> constants.</param>
        <summary>Returns the current runtime nearby app streaming policy set by the device or profile owner. -or- Called by a device/profile owner to set nearby app streaming policy.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current runtime nearby app streaming policy set by the device or profile owner.</para>
          <para>The caller must be the target user's device owner/profile owner or hold the
            <c>android.Manifest.permission#READ_NEARBY_STREAMING_POLICY READ_NEARBY_STREAMING_POLICY</c>
            permission.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getNearbyAppStreamingPolicy()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getNearbyAppStreamingPolicy()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Called by a device/profile owner to set nearby app streaming policy. App streaming is when
            the device starts an app on a virtual display and sends a video stream of the app to nearby
            devices.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setNearbyAppStreamingPolicy(int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setNearbyAppStreamingPolicy(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NearbyNotificationStreamingPolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NearbyNotificationStreamingPolicy As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int NearbyNotificationStreamingPolicy { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int NearbyNotificationStreamingPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NearbyNotificationStreamingPolicy" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.NearbyNotificationStreamingPolicy" />
      <MemberSignature Language="F#" Value="member this.NearbyNotificationStreamingPolicy : int with get, set" Usage="Android.App.Admin.DevicePolicyManager.NearbyNotificationStreamingPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNearbyNotificationStreamingPolicy", "()I", "GetGetNearbyNotificationStreamingPolicyHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNearbyNotificationStreamingPolicy", "()I", "GetGetNearbyNotificationStreamingPolicyHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.RequiresPermission("android.permission.READ_NEARBY_STREAMING_POLICY")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.RequiresPermission("android.permission.READ_NEARBY_STREAMING_POLICY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setNearbyNotificationStreamingPolicy", "(I)V", "GetSetNearbyNotificationStreamingPolicy_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setNearbyNotificationStreamingPolicy", "(I)V", "GetSetNearbyNotificationStreamingPolicy_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="policy">One of the <c>NearbyStreamingPolicy</c> constants.</param>
        <summary>Returns the current runtime nearby notification streaming policy set by the device or profile
            owner. -or- Called by a device/profile owner to set nearby notification streaming policy.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current runtime nearby notification streaming policy set by the device or profile
            owner.</para>
          <para>The caller must be the target user's device owner/profile owner or hold the
            <c>android.Manifest.permission#READ_NEARBY_STREAMING_POLICY READ_NEARBY_STREAMING_POLICY</c>
            permission.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getNearbyNotificationStreamingPolicy()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getNearbyNotificationStreamingPolicy()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Called by a device/profile owner to set nearby notification streaming policy. Notification
            streaming is sending notification data from pre-installed apps to nearby devices.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setNearbyNotificationStreamingPolicy(int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setNearbyNotificationStreamingPolicy(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NearbyStreamingDisabled">
      <MemberSignature Language="VB.NET" Value="Public Const NearbyStreamingDisabled As NearbyStreaming  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::NearbyStreaming NearbyStreamingDisabled = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.NearbyStreaming NearbyStreamingDisabled = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.NearbyStreaming NearbyStreamingDisabled = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.NearbyStreamingDisabled" />
      <MemberSignature Language="F#" Value="val mutable NearbyStreamingDisabled : Android.App.Admin.NearbyStreaming" Usage="Android.App.Admin.DevicePolicyManager.NearbyStreamingDisabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NEARBY_STREAMING_DISABLED", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NEARBY_STREAMING_DISABLED", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.NearbyStreaming enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.NearbyStreaming enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.NearbyStreaming</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Indicates that nearby streaming is disabled.</summary>
        <remarks>
          <para>Indicates that nearby streaming is disabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#NEARBY_STREAMING_DISABLED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.NEARBY_STREAMING_DISABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NearbyStreamingEnabled">
      <MemberSignature Language="VB.NET" Value="Public Const NearbyStreamingEnabled As NearbyStreaming  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::NearbyStreaming NearbyStreamingEnabled = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.NearbyStreaming NearbyStreamingEnabled = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.NearbyStreaming NearbyStreamingEnabled = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.NearbyStreamingEnabled" />
      <MemberSignature Language="F#" Value="val mutable NearbyStreamingEnabled : Android.App.Admin.NearbyStreaming" Usage="Android.App.Admin.DevicePolicyManager.NearbyStreamingEnabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NEARBY_STREAMING_ENABLED", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NEARBY_STREAMING_ENABLED", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.NearbyStreaming enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.NearbyStreaming enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.NearbyStreaming</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Indicates that nearby streaming is enabled.</summary>
        <remarks>
          <para>Indicates that nearby streaming is enabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#NEARBY_STREAMING_ENABLED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.NEARBY_STREAMING_ENABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NearbyStreamingNotControlledByPolicy">
      <MemberSignature Language="VB.NET" Value="Public Const NearbyStreamingNotControlledByPolicy As NearbyStreaming  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::NearbyStreaming NearbyStreamingNotControlledByPolicy = 0;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.NearbyStreaming NearbyStreamingNotControlledByPolicy = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.NearbyStreaming NearbyStreamingNotControlledByPolicy = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.NearbyStreamingNotControlledByPolicy" />
      <MemberSignature Language="F#" Value="val mutable NearbyStreamingNotControlledByPolicy : Android.App.Admin.NearbyStreaming" Usage="Android.App.Admin.DevicePolicyManager.NearbyStreamingNotControlledByPolicy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NEARBY_STREAMING_NOT_CONTROLLED_BY_POLICY", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NEARBY_STREAMING_NOT_CONTROLLED_BY_POLICY", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.NearbyStreaming enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.NearbyStreaming enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.NearbyStreaming</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Indicates that nearby streaming is not controlled by policy, which means nearby streaming is
            allowed.</summary>
        <remarks>
          <para>Indicates that nearby streaming is not controlled by policy, which means nearby streaming is
            allowed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#NEARBY_STREAMING_NOT_CONTROLLED_BY_POLICY" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.NEARBY_STREAMING_NOT_CONTROLLED_BY_POLICY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NearbyStreamingSameManagedAccountOnly">
      <MemberSignature Language="VB.NET" Value="Public Const NearbyStreamingSameManagedAccountOnly As NearbyStreaming  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::NearbyStreaming NearbyStreamingSameManagedAccountOnly = 3;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.NearbyStreaming NearbyStreamingSameManagedAccountOnly = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.NearbyStreaming NearbyStreamingSameManagedAccountOnly = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.NearbyStreamingSameManagedAccountOnly" />
      <MemberSignature Language="F#" Value="val mutable NearbyStreamingSameManagedAccountOnly : Android.App.Admin.NearbyStreaming" Usage="Android.App.Admin.DevicePolicyManager.NearbyStreamingSameManagedAccountOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NEARBY_STREAMING_SAME_MANAGED_ACCOUNT_ONLY", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NEARBY_STREAMING_SAME_MANAGED_ACCOUNT_ONLY", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.NearbyStreaming enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.NearbyStreaming enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.NearbyStreaming</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Indicates that nearby streaming is enabled only to devices offering a comparable level of
            security, with the same authenticated managed account.</summary>
        <remarks>
          <para>Indicates that nearby streaming is enabled only to devices offering a comparable level of
            security, with the same authenticated managed account.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#NEARBY_STREAMING_SAME_MANAGED_ACCOUNT_ONLY" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.NEARBY_STREAMING_SAME_MANAGED_ACCOUNT_ONLY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OperationSafetyReasonDrivingDistraction">
      <MemberSignature Language="VB.NET" Value="Public Const OperationSafetyReasonDrivingDistraction As OperationSafetyReason  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::OperationSafetyReason OperationSafetyReasonDrivingDistraction = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.OperationSafetyReason OperationSafetyReasonDrivingDistraction = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.OperationSafetyReason OperationSafetyReasonDrivingDistraction = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.OperationSafetyReasonDrivingDistraction" />
      <MemberSignature Language="F#" Value="val mutable OperationSafetyReasonDrivingDistraction : Android.App.Admin.OperationSafetyReason" Usage="Android.App.Admin.DevicePolicyManager.OperationSafetyReasonDrivingDistraction" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("OPERATION_SAFETY_REASON_DRIVING_DISTRACTION", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("OPERATION_SAFETY_REASON_DRIVING_DISTRACTION", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.OperationSafetyReason enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.OperationSafetyReason enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.OperationSafetyReason</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Indicates that a <c>UnsafeStateException</c> was thrown because the operation would distract
            the driver of the vehicle.</summary>
        <remarks>
          <para>Indicates that a <c>UnsafeStateException</c> was thrown because the operation would distract
            the driver of the vehicle.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#OPERATION_SAFETY_REASON_DRIVING_DISTRACTION" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.OPERATION_SAFETY_REASON_DRIVING_DISTRACTION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordComplexity">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PasswordComplexity As PasswordComplexity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::App::Admin::PasswordComplexity PasswordComplexity { Android::App::Admin::PasswordComplexity get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.PasswordComplexity PasswordComplexity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.App.Admin.PasswordComplexity PasswordComplexity" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.PasswordComplexity" />
      <MemberSignature Language="F#" Value="member this.PasswordComplexity : Android.App.Admin.PasswordComplexity" Usage="Android.App.Admin.DevicePolicyManager.PasswordComplexity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPasswordComplexity", "()I", "GetGetPasswordComplexityHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPasswordComplexity", "()I", "GetGetPasswordComplexityHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PasswordComplexity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns how complex the current user's screen lock is.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns how complex the current user's screen lock is.</para>
          <para>Note that when called from a profile which uses an unified challenge with its parent, the
            screen lock complexity of the parent will be returned.</para>
          <para>Apps need the <c>permission#REQUEST_PASSWORD_COMPLEXITY</c> permission to call this
            method. On Android <c>android.os.Build.VERSION_CODES#S</c> and above, the calling
            application does not need this permission if it is a device owner or a profile owner.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to retrieve
            restrictions on the parent profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPasswordComplexity()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPasswordComplexity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordComplexityHigh">
      <MemberSignature Language="VB.NET" Value="Public Const PasswordComplexityHigh As PasswordComplexity  = 327680" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PasswordComplexity PasswordComplexityHigh = 327680;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PasswordComplexity PasswordComplexityHigh = 327680;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PasswordComplexity PasswordComplexityHigh = (327680)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PasswordComplexityHigh" />
      <MemberSignature Language="F#" Value="val mutable PasswordComplexityHigh : Android.App.Admin.PasswordComplexity" Usage="Android.App.Admin.DevicePolicyManager.PasswordComplexityHigh" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PASSWORD_COMPLEXITY_HIGH", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PASSWORD_COMPLEXITY_HIGH", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PasswordComplexity enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PasswordComplexity enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PasswordComplexity</ReturnType>
      </ReturnValue>
      <MemberValue>327680</MemberValue>
      <Docs>
        <summary>Constant for <c>#getPasswordComplexity()</c> and
            <c>#setRequiredPasswordComplexity(int)</c>.</summary>
        <remarks>
          <para>Constant for <c>#getPasswordComplexity()</c> and
            <c>#setRequiredPasswordComplexity(int)</c>.
            Define the high password complexity band as:
            &lt;ul&gt;
            &lt;li&gt;PIN with &lt;b&gt;no&lt;/b&gt; repeating (4444) or ordered (1234, 4321, 2468) sequences, length at
            least 8
            &lt;li&gt;alphabetic, length at least 6
            &lt;li&gt;alphanumeric, length at least 6
            &lt;/ul&gt;</para>
          <para>When returned from <c>#getPasswordComplexity()</c>, the constant represents
            the exact complexity band the password is in.
            When passed to #setRequiredPasswordComplexity(int), it sets the minimum complexity
            band which the password must meet.
            
            @see #PASSWORD_QUALITY_NUMERIC_COMPLEX
            @see #PASSWORD_QUALITY_ALPHABETIC
            @see #PASSWORD_QUALITY_ALPHANUMERIC</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PASSWORD_COMPLEXITY_HIGH" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PASSWORD_COMPLEXITY_HIGH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordComplexityLow">
      <MemberSignature Language="VB.NET" Value="Public Const PasswordComplexityLow As PasswordComplexity  = 65536" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PasswordComplexity PasswordComplexityLow = 65536;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PasswordComplexity PasswordComplexityLow = 65536;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PasswordComplexity PasswordComplexityLow = (65536)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PasswordComplexityLow" />
      <MemberSignature Language="F#" Value="val mutable PasswordComplexityLow : Android.App.Admin.PasswordComplexity" Usage="Android.App.Admin.DevicePolicyManager.PasswordComplexityLow" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PASSWORD_COMPLEXITY_LOW", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PASSWORD_COMPLEXITY_LOW", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PasswordComplexity enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PasswordComplexity enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PasswordComplexity</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary>Constant for <c>#getPasswordComplexity()</c> and
            <c>#setRequiredPasswordComplexity(int)</c>.</summary>
        <remarks>
          <para>Constant for <c>#getPasswordComplexity()</c> and
            <c>#setRequiredPasswordComplexity(int)</c>.
            Define the low password complexity band as:
            &lt;ul&gt;
            &lt;li&gt;pattern
            &lt;li&gt;PIN with repeating (4444) or ordered (1234, 4321, 2468) sequences
            &lt;/ul&gt;</para>
          <para>When returned from <c>#getPasswordComplexity()</c>, the constant represents
            the exact complexity band the password is in.
            When passed to #setRequiredPasswordComplexity(int), it sets the minimum complexity
            band which the password must meet.
            
            @see #PASSWORD_QUALITY_SOMETHING
            @see #PASSWORD_QUALITY_NUMERIC</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PASSWORD_COMPLEXITY_LOW" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PASSWORD_COMPLEXITY_LOW</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordComplexityMedium">
      <MemberSignature Language="VB.NET" Value="Public Const PasswordComplexityMedium As PasswordComplexity  = 196608" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PasswordComplexity PasswordComplexityMedium = 196608;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PasswordComplexity PasswordComplexityMedium = 196608;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PasswordComplexity PasswordComplexityMedium = (196608)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PasswordComplexityMedium" />
      <MemberSignature Language="F#" Value="val mutable PasswordComplexityMedium : Android.App.Admin.PasswordComplexity" Usage="Android.App.Admin.DevicePolicyManager.PasswordComplexityMedium" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PASSWORD_COMPLEXITY_MEDIUM", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PASSWORD_COMPLEXITY_MEDIUM", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PasswordComplexity enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PasswordComplexity enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PasswordComplexity</ReturnType>
      </ReturnValue>
      <MemberValue>196608</MemberValue>
      <Docs>
        <summary>Constant for <c>#getPasswordComplexity()</c> and
            <c>#setRequiredPasswordComplexity(int)</c>.</summary>
        <remarks>
          <para>Constant for <c>#getPasswordComplexity()</c> and
            <c>#setRequiredPasswordComplexity(int)</c>.
            Define the medium password complexity band as:
            &lt;ul&gt;
            &lt;li&gt;PIN with &lt;b&gt;no&lt;/b&gt; repeating (4444) or ordered (1234, 4321, 2468) sequences, length at
            least 4
            &lt;li&gt;alphabetic, length at least 4
            &lt;li&gt;alphanumeric, length at least 4
            &lt;/ul&gt;</para>
          <para>When returned from <c>#getPasswordComplexity()</c>, the constant represents
            the exact complexity band the password is in.
            When passed to #setRequiredPasswordComplexity(int), it sets the minimum complexity
            band which the password must meet.
            
            @see #PASSWORD_QUALITY_NUMERIC_COMPLEX
            @see #PASSWORD_QUALITY_ALPHABETIC
            @see #PASSWORD_QUALITY_ALPHANUMERIC</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PASSWORD_COMPLEXITY_MEDIUM" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PASSWORD_COMPLEXITY_MEDIUM</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordComplexityNone">
      <MemberSignature Language="VB.NET" Value="Public Const PasswordComplexityNone As PasswordComplexity  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PasswordComplexity PasswordComplexityNone = 0;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PasswordComplexity PasswordComplexityNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PasswordComplexity PasswordComplexityNone = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PasswordComplexityNone" />
      <MemberSignature Language="F#" Value="val mutable PasswordComplexityNone : Android.App.Admin.PasswordComplexity" Usage="Android.App.Admin.DevicePolicyManager.PasswordComplexityNone" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PASSWORD_COMPLEXITY_NONE", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PASSWORD_COMPLEXITY_NONE", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PasswordComplexity enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PasswordComplexity enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PasswordComplexity</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Constant for <c>#getPasswordComplexity()</c> and
            <c>#setRequiredPasswordComplexity(int)</c>: no password.</summary>
        <remarks>
          <para>Constant for <c>#getPasswordComplexity()</c> and
            <c>#setRequiredPasswordComplexity(int)</c>: no password.</para>
          <para>When returned from <c>#getPasswordComplexity()</c>, the constant represents
            the exact complexity band the password is in.
            When passed to #setRequiredPasswordComplexity(int), it sets the minimum complexity
            band which the password must meet.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PASSWORD_COMPLEXITY_NONE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PASSWORD_COMPLEXITY_NONE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalAppsNotSuspended">
      <MemberSignature Language="VB.NET" Value="Public Const PersonalAppsNotSuspended As PersonalAppsDevicePolicy  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PersonalAppsDevicePolicy PersonalAppsNotSuspended = 0;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PersonalAppsDevicePolicy PersonalAppsNotSuspended = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PersonalAppsDevicePolicy PersonalAppsNotSuspended = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PersonalAppsNotSuspended" />
      <MemberSignature Language="F#" Value="val mutable PersonalAppsNotSuspended : Android.App.Admin.PersonalAppsDevicePolicy" Usage="Android.App.Admin.DevicePolicyManager.PersonalAppsNotSuspended" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PERSONAL_APPS_NOT_SUSPENDED", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PERSONAL_APPS_NOT_SUSPENDED", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PersonalAppsDevicePolicy enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PersonalAppsDevicePolicy enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PersonalAppsDevicePolicy</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Return value for <c>#getPersonalAppsSuspendedReasons</c> when personal apps are not
            suspended.</summary>
        <remarks>
          <para>Return value for <c>#getPersonalAppsSuspendedReasons</c> when personal apps are not
            suspended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PERSONAL_APPS_NOT_SUSPENDED" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PERSONAL_APPS_NOT_SUSPENDED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalAppsSuspendedExplicitly">
      <MemberSignature Language="VB.NET" Value="Public Const PersonalAppsSuspendedExplicitly As PersonalAppsDevicePolicy  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PersonalAppsDevicePolicy PersonalAppsSuspendedExplicitly = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PersonalAppsDevicePolicy PersonalAppsSuspendedExplicitly = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PersonalAppsDevicePolicy PersonalAppsSuspendedExplicitly = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PersonalAppsSuspendedExplicitly" />
      <MemberSignature Language="F#" Value="val mutable PersonalAppsSuspendedExplicitly : Android.App.Admin.PersonalAppsDevicePolicy" Usage="Android.App.Admin.DevicePolicyManager.PersonalAppsSuspendedExplicitly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PERSONAL_APPS_SUSPENDED_EXPLICITLY", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PERSONAL_APPS_SUSPENDED_EXPLICITLY", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PersonalAppsDevicePolicy enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PersonalAppsDevicePolicy enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PersonalAppsDevicePolicy</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for <c>#getPersonalAppsSuspendedReasons</c> return value.</summary>
        <remarks>
          <para>Flag for <c>#getPersonalAppsSuspendedReasons</c> return value. Set when personal
            apps are suspended by an admin explicitly via <c>#setPersonalAppsSuspended</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PERSONAL_APPS_SUSPENDED_EXPLICITLY" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PERSONAL_APPS_SUSPENDED_EXPLICITLY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersonalAppsSuspendedProfileTimeout">
      <MemberSignature Language="VB.NET" Value="Public Const PersonalAppsSuspendedProfileTimeout As PersonalAppsDevicePolicy  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PersonalAppsDevicePolicy PersonalAppsSuspendedProfileTimeout = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PersonalAppsDevicePolicy PersonalAppsSuspendedProfileTimeout = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PersonalAppsDevicePolicy PersonalAppsSuspendedProfileTimeout = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PersonalAppsSuspendedProfileTimeout" />
      <MemberSignature Language="F#" Value="val mutable PersonalAppsSuspendedProfileTimeout : Android.App.Admin.PersonalAppsDevicePolicy" Usage="Android.App.Admin.DevicePolicyManager.PersonalAppsSuspendedProfileTimeout" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PERSONAL_APPS_SUSPENDED_PROFILE_TIMEOUT", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PERSONAL_APPS_SUSPENDED_PROFILE_TIMEOUT", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PersonalAppsDevicePolicy enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PersonalAppsDevicePolicy enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PersonalAppsDevicePolicy</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag for <c>#getPersonalAppsSuspendedReasons</c> return value.</summary>
        <remarks>
          <para>Flag for <c>#getPersonalAppsSuspendedReasons</c> return value. Set when personal apps are
            suspended by framework because managed profile was off for longer than allowed by policy.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PERSONAL_APPS_SUSPENDED_PROFILE_TIMEOUT" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PERSONAL_APPS_SUSPENDED_PROFILE_TIMEOUT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyDisableCamera">
      <MemberSignature Language="VB.NET" Value="Public Const PolicyDisableCamera As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ PolicyDisableCamera;" />
      <MemberSignature Language="C#" Value="public const string PolicyDisableCamera;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PolicyDisableCamera" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PolicyDisableCamera" />
      <MemberSignature Language="F#" Value="val mutable PolicyDisableCamera : string" Usage="Android.App.Admin.DevicePolicyManager.PolicyDisableCamera" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("POLICY_DISABLE_CAMERA", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("POLICY_DISABLE_CAMERA", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Constant to indicate the feature of disabling the camera.</summary>
        <remarks>
          <para>Constant to indicate the feature of disabling the camera. Used as argument to
            <c>#createAdminSupportIntent(String)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#POLICY_DISABLE_CAMERA" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.POLICY_DISABLE_CAMERA</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PolicyDisableScreenCapture">
      <MemberSignature Language="VB.NET" Value="Public Const PolicyDisableScreenCapture As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ PolicyDisableScreenCapture;" />
      <MemberSignature Language="C#" Value="public const string PolicyDisableScreenCapture;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string PolicyDisableScreenCapture" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PolicyDisableScreenCapture" />
      <MemberSignature Language="F#" Value="val mutable PolicyDisableScreenCapture : string" Usage="Android.App.Admin.DevicePolicyManager.PolicyDisableScreenCapture" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("POLICY_DISABLE_SCREEN_CAPTURE", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("POLICY_DISABLE_SCREEN_CAPTURE", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Constant to indicate the feature of disabling screen captures.</summary>
        <remarks>
          <para>Constant to indicate the feature of disabling screen captures. Used as argument to
            <c>#createAdminSupportIntent(String)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#POLICY_DISABLE_SCREEN_CAPTURE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.POLICY_DISABLE_SCREEN_CAPTURE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferentialNetworkServiceConfigs">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PreferentialNetworkServiceConfigs As IList(Of PreferentialNetworkServiceConfig)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;Android::App::Admin::PreferentialNetworkServiceConfig ^&gt; ^ PreferentialNetworkServiceConfigs { System::Collections::Generic::IList&lt;Android::App::Admin::PreferentialNetworkServiceConfig ^&gt; ^ get(); void set(System::Collections::Generic::IList&lt;Android::App::Admin::PreferentialNetworkServiceConfig ^&gt; ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.App.Admin.PreferentialNetworkServiceConfig&gt; PreferentialNetworkServiceConfigs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.App.Admin.PreferentialNetworkServiceConfig&gt; PreferentialNetworkServiceConfigs" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.PreferentialNetworkServiceConfigs" />
      <MemberSignature Language="F#" Value="member this.PreferentialNetworkServiceConfigs : System.Collections.Generic.IList&lt;Android.App.Admin.PreferentialNetworkServiceConfig&gt; with get, set" Usage="Android.App.Admin.DevicePolicyManager.PreferentialNetworkServiceConfigs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPreferentialNetworkServiceConfigs", "()Ljava/util/List;", "GetGetPreferentialNetworkServiceConfigsHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPreferentialNetworkServiceConfigs", "()Ljava/util/List;", "GetGetPreferentialNetworkServiceConfigsHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPreferentialNetworkServiceConfigs", "(Ljava/util/List;)V", "GetSetPreferentialNetworkServiceConfigs_Ljava_util_List_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPreferentialNetworkServiceConfigs", "(Ljava/util/List;)V", "GetSetPreferentialNetworkServiceConfigs_Ljava_util_List_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.Admin.PreferentialNetworkServiceConfig&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="preferentialNetworkServiceConfigs">list of preferential network configurations.</param>
        <summary>Get preferential network configuration
            <c>PreferentialNetworkServiceConfig</c> -or- Sets preferential network configurations.</summary>
        <value>preferential network configuration.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Get preferential network configuration
            <c>PreferentialNetworkServiceConfig</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getPreferentialNetworkServiceConfigs()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getPreferentialNetworkServiceConfigs()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets preferential network configurations.
            <c>PreferentialNetworkServiceConfig</c>
            
            An example of a supported preferential network service is the Enterprise
            slice on 5G networks. For devices on 4G networks, the profile owner needs to additionally
            configure enterprise APN to set up data call for the preferential network service.
            These APNs can be added using <c>#addOverrideApn</c>.
            
            By default, preferential network service is disabled on the work profile and fully managed
            devices, on supported carriers and devices. Admins can explicitly enable it with this API.
            If admin wants to have multiple enterprise slices,
            it can be configured by passing list of <c>PreferentialNetworkServiceConfig</c> objects.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPreferentialNetworkServiceConfigs(java.util.List%3Candroid.app.admin.PreferentialNetworkServiceConfig%3E)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPreferentialNetworkServiceConfigs(java.util.List&lt;android.app.admin.PreferentialNetworkServiceConfig&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferentialNetworkServiceEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PreferentialNetworkServiceEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool PreferentialNetworkServiceEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool PreferentialNetworkServiceEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreferentialNetworkServiceEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.PreferentialNetworkServiceEnabled" />
      <MemberSignature Language="F#" Value="member this.PreferentialNetworkServiceEnabled : bool with get, set" Usage="Android.App.Admin.DevicePolicyManager.PreferentialNetworkServiceEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPreferentialNetworkServiceEnabled", "()Z", "GetIsPreferentialNetworkServiceEnabledHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPreferentialNetworkServiceEnabled", "()Z", "GetIsPreferentialNetworkServiceEnabledHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setPreferentialNetworkServiceEnabled", "(Z)V", "GetSetPreferentialNetworkServiceEnabled_ZHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setPreferentialNetworkServiceEnabled", "(Z)V", "GetSetPreferentialNetworkServiceEnabled_ZHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="enabled">whether preferential network service should be enabled.</param>
        <summary>Indicates whether preferential network service is enabled. -or- Sets whether preferential network service is enabled.</summary>
        <value>whether preferential network service is enabled.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Indicates whether preferential network service is enabled.</para>
          <para>Before Android version <c>android.os.Build.VERSION_CODES#TIRAMISU</c>:
            This method can be called by the profile owner of a managed profile.</para>
          <para>Starting from Android version <c>android.os.Build.VERSION_CODES#TIRAMISU</c>:
            This method can be called by the profile owner of a managed profile
            or device owner.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isPreferentialNetworkServiceEnabled()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isPreferentialNetworkServiceEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets whether preferential network service is enabled.
            For example, an organization can have a deal/agreement with a carrier that all of
            the work data from its employees’ devices will be sent via a network service dedicated
            for enterprise use.
            
            An example of a supported preferential network service is the Enterprise
            slice on 5G networks. For devices on 4G networks, the profile owner needs to additionally
            configure enterprise APN to set up data call for the preferential network service.
            These APNs can be added using <c>#addOverrideApn</c>.
            
            By default, preferential network service is disabled on the work profile and
            fully managed devices, on supported carriers and devices.
            Admins can explicitly enable it with this API.</para>
          <para>This method enables preferential network service with a default configuration.
            To fine-tune the configuration, use <c>#setPreferentialNetworkServiceConfigs) instead.
            &lt;p&gt; Before Android version {@link android.os.Build.VERSION_CODES#TIRAMISU</c>:
            this method can be called by the profile owner of a managed profile.</para>
          <para>Starting from Android version <c>android.os.Build.VERSION_CODES#TIRAMISU</c>:
            This method can be called by the profile owner of a managed profile
            or device owner.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPreferentialNetworkServiceEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPreferentialNetworkServiceEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateDnsModeOff">
      <MemberSignature Language="VB.NET" Value="Public Const PrivateDnsModeOff As PrivateDnsMode  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PrivateDnsMode PrivateDnsModeOff = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PrivateDnsMode PrivateDnsModeOff = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PrivateDnsMode PrivateDnsModeOff = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PrivateDnsModeOff" />
      <MemberSignature Language="F#" Value="val mutable PrivateDnsModeOff : Android.App.Admin.PrivateDnsMode" Usage="Android.App.Admin.DevicePolicyManager.PrivateDnsModeOff" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRIVATE_DNS_MODE_OFF", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRIVATE_DNS_MODE_OFF", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PrivateDnsMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Specifies that Private DNS was turned off completely.</summary>
        <remarks>
          <para>Specifies that Private DNS was turned off completely.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PRIVATE_DNS_MODE_OFF" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PRIVATE_DNS_MODE_OFF</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateDnsModeOpportunistic">
      <MemberSignature Language="VB.NET" Value="Public Const PrivateDnsModeOpportunistic As PrivateDnsMode  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PrivateDnsMode PrivateDnsModeOpportunistic = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PrivateDnsMode PrivateDnsModeOpportunistic = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PrivateDnsMode PrivateDnsModeOpportunistic = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PrivateDnsModeOpportunistic" />
      <MemberSignature Language="F#" Value="val mutable PrivateDnsModeOpportunistic : Android.App.Admin.PrivateDnsMode" Usage="Android.App.Admin.DevicePolicyManager.PrivateDnsModeOpportunistic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRIVATE_DNS_MODE_OPPORTUNISTIC", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRIVATE_DNS_MODE_OPPORTUNISTIC", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PrivateDnsMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Specifies that the device owner requested opportunistic DNS over TLS</summary>
        <remarks>
          <para>Specifies that the device owner requested opportunistic DNS over TLS</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PRIVATE_DNS_MODE_OPPORTUNISTIC" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PRIVATE_DNS_MODE_OPPORTUNISTIC</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateDnsModeProviderHostname">
      <MemberSignature Language="VB.NET" Value="Public Const PrivateDnsModeProviderHostname As PrivateDnsMode  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PrivateDnsMode PrivateDnsModeProviderHostname = 3;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PrivateDnsMode PrivateDnsModeProviderHostname = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PrivateDnsMode PrivateDnsModeProviderHostname = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PrivateDnsModeProviderHostname" />
      <MemberSignature Language="F#" Value="val mutable PrivateDnsModeProviderHostname : Android.App.Admin.PrivateDnsMode" Usage="Android.App.Admin.DevicePolicyManager.PrivateDnsModeProviderHostname" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRIVATE_DNS_MODE_PROVIDER_HOSTNAME", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRIVATE_DNS_MODE_PROVIDER_HOSTNAME", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PrivateDnsMode</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Specifies that the device owner configured a specific host to use for Private DNS.</summary>
        <remarks>
          <para>Specifies that the device owner configured a specific host to use for Private DNS.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PRIVATE_DNS_MODE_PROVIDER_HOSTNAME" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PRIVATE_DNS_MODE_PROVIDER_HOSTNAME</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateDnsModeUnknown">
      <MemberSignature Language="VB.NET" Value="Public Const PrivateDnsModeUnknown As PrivateDnsMode  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PrivateDnsMode PrivateDnsModeUnknown = 0;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PrivateDnsMode PrivateDnsModeUnknown = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PrivateDnsMode PrivateDnsModeUnknown = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PrivateDnsModeUnknown" />
      <MemberSignature Language="F#" Value="val mutable PrivateDnsModeUnknown : Android.App.Admin.PrivateDnsMode" Usage="Android.App.Admin.DevicePolicyManager.PrivateDnsModeUnknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRIVATE_DNS_MODE_UNKNOWN", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRIVATE_DNS_MODE_UNKNOWN", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsMode enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsMode enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PrivateDnsMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Specifies that the Private DNS setting is in an unknown state.</summary>
        <remarks>
          <para>Specifies that the Private DNS setting is in an unknown state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PRIVATE_DNS_MODE_UNKNOWN" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PRIVATE_DNS_MODE_UNKNOWN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateDnsSetErrorFailureSetting">
      <MemberSignature Language="VB.NET" Value="Public Const PrivateDnsSetErrorFailureSetting As PrivateDnsSet  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PrivateDnsSet PrivateDnsSetErrorFailureSetting = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PrivateDnsSet PrivateDnsSetErrorFailureSetting = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PrivateDnsSet PrivateDnsSetErrorFailureSetting = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PrivateDnsSetErrorFailureSetting" />
      <MemberSignature Language="F#" Value="val mutable PrivateDnsSetErrorFailureSetting : Android.App.Admin.PrivateDnsSet" Usage="Android.App.Admin.DevicePolicyManager.PrivateDnsSetErrorFailureSetting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRIVATE_DNS_SET_ERROR_FAILURE_SETTING", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRIVATE_DNS_SET_ERROR_FAILURE_SETTING", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsSet enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsSet enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PrivateDnsSet</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>General failure to set the Private DNS mode, not due to one of the reasons listed above.</summary>
        <remarks>
          <para>General failure to set the Private DNS mode, not due to one of the reasons listed above.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PRIVATE_DNS_SET_ERROR_FAILURE_SETTING" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PRIVATE_DNS_SET_ERROR_FAILURE_SETTING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateDnsSetErrorHostNotServing">
      <MemberSignature Language="VB.NET" Value="Public Const PrivateDnsSetErrorHostNotServing As PrivateDnsSet  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PrivateDnsSet PrivateDnsSetErrorHostNotServing = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PrivateDnsSet PrivateDnsSetErrorHostNotServing = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PrivateDnsSet PrivateDnsSetErrorHostNotServing = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PrivateDnsSetErrorHostNotServing" />
      <MemberSignature Language="F#" Value="val mutable PrivateDnsSetErrorHostNotServing : Android.App.Admin.PrivateDnsSet" Usage="Android.App.Admin.DevicePolicyManager.PrivateDnsSetErrorHostNotServing" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRIVATE_DNS_SET_ERROR_HOST_NOT_SERVING", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRIVATE_DNS_SET_ERROR_HOST_NOT_SERVING", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsSet enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsSet enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PrivateDnsSet</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>If the <c>privateDnsHost</c> provided was of a valid hostname but that host was found
            to not support DNS-over-TLS.</summary>
        <remarks>
          <para>If the <c>privateDnsHost</c> provided was of a valid hostname but that host was found
            to not support DNS-over-TLS.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PRIVATE_DNS_SET_ERROR_HOST_NOT_SERVING" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PRIVATE_DNS_SET_ERROR_HOST_NOT_SERVING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrivateDnsSetNoError">
      <MemberSignature Language="VB.NET" Value="Public Const PrivateDnsSetNoError As PrivateDnsSet  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::PrivateDnsSet PrivateDnsSetNoError = 0;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.PrivateDnsSet PrivateDnsSetNoError = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.PrivateDnsSet PrivateDnsSetNoError = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.PrivateDnsSetNoError" />
      <MemberSignature Language="F#" Value="val mutable PrivateDnsSetNoError : Android.App.Admin.PrivateDnsSet" Usage="Android.App.Admin.DevicePolicyManager.PrivateDnsSetNoError" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PRIVATE_DNS_SET_NO_ERROR", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PRIVATE_DNS_SET_NO_ERROR", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsSet enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.PrivateDnsSet enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PrivateDnsSet</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>The selected mode has been set successfully.</summary>
        <remarks>
          <para>The selected mode has been set successfully. If the mode is
            <c>PRIVATE_DNS_MODE_PROVIDER_HOSTNAME</c> then it implies the supplied host is valid
            and reachable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PRIVATE_DNS_SET_NO_ERROR" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PRIVATE_DNS_SET_NO_ERROR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningModeFullyManagedDevice">
      <MemberSignature Language="VB.NET" Value="Public Const ProvisioningModeFullyManagedDevice As Integer  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: int ProvisioningModeFullyManagedDevice = 1;" />
      <MemberSignature Language="C#" Value="public const int ProvisioningModeFullyManagedDevice = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ProvisioningModeFullyManagedDevice = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ProvisioningModeFullyManagedDevice" />
      <MemberSignature Language="F#" Value="val mutable ProvisioningModeFullyManagedDevice : int" Usage="Android.App.Admin.DevicePolicyManager.ProvisioningModeFullyManagedDevice" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROVISIONING_MODE_FULLY_MANAGED_DEVICE", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROVISIONING_MODE_FULLY_MANAGED_DEVICE", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The provisioning mode for fully managed device.</summary>
        <remarks>
          <para>The provisioning mode for fully managed device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PROVISIONING_MODE_FULLY_MANAGED_DEVICE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PROVISIONING_MODE_FULLY_MANAGED_DEVICE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningModeManagedProfile">
      <MemberSignature Language="VB.NET" Value="Public Const ProvisioningModeManagedProfile As Integer  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: int ProvisioningModeManagedProfile = 2;" />
      <MemberSignature Language="C#" Value="public const int ProvisioningModeManagedProfile = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ProvisioningModeManagedProfile = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ProvisioningModeManagedProfile" />
      <MemberSignature Language="F#" Value="val mutable ProvisioningModeManagedProfile : int" Usage="Android.App.Admin.DevicePolicyManager.ProvisioningModeManagedProfile" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROVISIONING_MODE_MANAGED_PROFILE", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROVISIONING_MODE_MANAGED_PROFILE", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>The provisioning mode for managed profile.</summary>
        <remarks>
          <para>The provisioning mode for managed profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PROVISIONING_MODE_MANAGED_PROFILE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PROVISIONING_MODE_MANAGED_PROFILE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProvisioningModeManagedProfileOnPersonalDevice">
      <MemberSignature Language="VB.NET" Value="Public Const ProvisioningModeManagedProfileOnPersonalDevice As Integer  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: int ProvisioningModeManagedProfileOnPersonalDevice = 3;" />
      <MemberSignature Language="C#" Value="public const int ProvisioningModeManagedProfileOnPersonalDevice = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 ProvisioningModeManagedProfileOnPersonalDevice = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ProvisioningModeManagedProfileOnPersonalDevice" />
      <MemberSignature Language="F#" Value="val mutable ProvisioningModeManagedProfileOnPersonalDevice : int" Usage="Android.App.Admin.DevicePolicyManager.ProvisioningModeManagedProfileOnPersonalDevice" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PROVISIONING_MODE_MANAGED_PROFILE_ON_PERSONAL_DEVICE", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PROVISIONING_MODE_MANAGED_PROFILE_ON_PERSONAL_DEVICE", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>The provisioning mode for a managed profile on a personal device.</summary>
        <remarks>
          <para>The provisioning mode for a managed profile on a personal device.</para>
          <para>This mode is only available when the provisioning initiator has explicitly instructed the
            provisioning flow to support managed profile on a personal device provisioning. In that case,
            <c>#PROVISIONING_MODE_MANAGED_PROFILE</c> corresponds to an organization-owned managed
            profile, whereas this constant corresponds to a personally-owned managed profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#PROVISIONING_MODE_MANAGED_PROFILE_ON_PERSONAL_DEVICE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.PROVISIONING_MODE_MANAGED_PROFILE_ON_PERSONAL_DEVICE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reboot">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reboot (admin As ComponentName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reboot(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual void Reboot (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reboot(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.Reboot(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member Reboot : Android.Content.ComponentName -&gt; unit&#xA;override this.Reboot : Android.Content.ComponentName -&gt; unit" Usage="devicePolicyManager.Reboot admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reboot", "(Landroid/content/ComponentName;)V", "GetReboot_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reboot", "(Landroid/content/ComponentName;)V", "GetReboot_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which device owner the request is associated with.</param>
        <summary>Called by device owner to reboot the device.</summary>
        <remarks>
          <para>Called by device owner to reboot the device. If there is an ongoing call on the device,
            throws an <c>IllegalStateException</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#reboot(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.reboot(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActiveAdmin">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveActiveAdmin (admin As ComponentName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveActiveAdmin(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual void RemoveActiveAdmin (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveActiveAdmin(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.RemoveActiveAdmin(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member RemoveActiveAdmin : Android.Content.ComponentName -&gt; unit&#xA;override this.RemoveActiveAdmin : Android.Content.ComponentName -&gt; unit" Usage="devicePolicyManager.RemoveActiveAdmin admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeActiveAdmin", "(Landroid/content/ComponentName;)V", "GetRemoveActiveAdmin_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeActiveAdmin", "(Landroid/content/ComponentName;)V", "GetRemoveActiveAdmin_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">The administration compononent to remove.</param>
        <summary>Remove a current administration component.</summary>
        <remarks>
          <para>Remove a current administration component.  This can only be called
            by the application that owns the administration component; if you
            try to remove someone else's component, a security exception will be
            thrown.</para>
          <para>Note that the operation is not synchronous and the admin might still be active (as
            indicated by <c>#getActiveAdmins()</c>) by the time this method returns.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#removeActiveAdmin(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.removeActiveAdmin(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="RemoveCrossProfileWidgetProvider">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveCrossProfileWidgetProvider (admin As ComponentName, packageName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RemoveCrossProfileWidgetProvider(Android::Content::ComponentName ^ admin, System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual bool RemoveCrossProfileWidgetProvider (Android.Content.ComponentName? admin, string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveCrossProfileWidgetProvider(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.RemoveCrossProfileWidgetProvider(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member RemoveCrossProfileWidgetProvider : Android.Content.ComponentName * string -&gt; bool&#xA;override this.RemoveCrossProfileWidgetProvider : Android.Content.ComponentName * string -&gt; bool" Usage="devicePolicyManager.RemoveCrossProfileWidgetProvider (admin, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeCrossProfileWidgetProvider", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetRemoveCrossProfileWidgetProvider_Landroid_content_ComponentName_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeCrossProfileWidgetProvider", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetRemoveCrossProfileWidgetProvider_Landroid_content_ComponentName_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PROFILE_INTERACTION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PROFILE_INTERACTION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="packageName">The package from which widget providers are no longer allowlisted.</param>
        <summary>Called by the profile owner of a managed profile or a holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_PROFILE_INTERACTION</c> to disable
            widget providers from a given package to be available in the parent profile.</summary>
        <returns>Whether the package was removed.</returns>
        <remarks>
          <para>Called by the profile owner of a managed profile or a holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_PROFILE_INTERACTION</c> to disable
            widget providers from a given package to be available in the parent profile. For this method
            to take effect the package should have been added via
            <c>#addCrossProfileWidgetProvider( android.content.ComponentName, String)</c>.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; By default no widget provider package is allowlisted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#removeCrossProfileWidgetProvider(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.removeCrossProfileWidgetProvider(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.AddCrossProfileWidgetProvider(Android.Content.ComponentName, System.String)" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.GetCrossProfileWidgetProviders(Android.Content.ComponentName)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyPair">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveKeyPair (admin As ComponentName, alias As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RemoveKeyPair(Android::Content::ComponentName ^ admin, System::String ^ alias);" />
      <MemberSignature Language="C#" Value="public virtual bool RemoveKeyPair (Android.Content.ComponentName? admin, string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveKeyPair(class Android.Content.ComponentName admin, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.RemoveKeyPair(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member RemoveKeyPair : Android.Content.ComponentName * string -&gt; bool&#xA;override this.RemoveKeyPair : Android.Content.ComponentName * string -&gt; bool" Usage="devicePolicyManager.RemoveKeyPair (admin, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeKeyPair", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetRemoveKeyPair_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeKeyPair", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetRemoveKeyPair_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                   <c>null</c> if the caller is not a device admin.</param>
        <param name="alias">The private key alias under which the certificate is installed.</param>
        <summary>This API can be called by the following to remove a certificate and private key pair
            installed under a given alias:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
            &lt;/ul&gt;</summary>
        <returns>
          <c>true</c> if the private key alias no longer exists, <c>false</c> otherwise.</returns>
        <remarks>
          <para>This API can be called by the following to remove a certificate and private key pair
            installed under a given alias:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>From Android <c>android.os.Build.VERSION_CODES#S</c>, the credential management app
            can call this API. If called by the credential management app, the componentName must be
            <c>null</c>. Note, there can only be a credential management app on an unmanaged device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#removeKeyPair(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.removeKeyPair(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveOverrideApn">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveOverrideApn (admin As ComponentName, apnId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RemoveOverrideApn(Android::Content::ComponentName ^ admin, int apnId);" />
      <MemberSignature Language="C#" Value="public virtual bool RemoveOverrideApn (Android.Content.ComponentName admin, int apnId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveOverrideApn(class Android.Content.ComponentName admin, int32 apnId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.RemoveOverrideApn(Android.Content.ComponentName,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member RemoveOverrideApn : Android.Content.ComponentName * int -&gt; bool&#xA;override this.RemoveOverrideApn : Android.Content.ComponentName * int -&gt; bool" Usage="devicePolicyManager.RemoveOverrideApn (admin, apnId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeOverrideApn", "(Landroid/content/ComponentName;I)Z", "GetRemoveOverrideApn_Landroid_content_ComponentName_IHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeOverrideApn", "(Landroid/content/ComponentName;I)Z", "GetRemoveOverrideApn_Landroid_content_ComponentName_IHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="apnId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with</param>
        <param name="apnId">the <c>id</c> of the override APN to remove</param>
        <summary>Called by device owner or managed profile owner to remove an override APN.</summary>
        <returns>
          <c>true</c> if the required override APN is successfully removed, <c>false</c>
                    otherwise.</returns>
        <remarks>
          <para>Called by device owner or managed profile owner to remove an override APN.</para>
          <para>This method may returns <c>false</c> if there is no override APN with the given
            <c>apnId</c>.</para>
          <para>Before Android version <c>android.os.Build.VERSION_CODES#TIRAMISU</c>:
            Only device owners can remove APNs.</para>
          <para>Starting from Android version <c>android.os.Build.VERSION_CODES#TIRAMISU</c>:
            Both device owners and managed profile owners can remove enterprise APNs
            (<c>ApnSetting#TYPE_ENTERPRISE</c>), while only device owners can remove other type of APNs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#removeOverrideApn(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.removeOverrideApn(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveUser">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RemoveUser (admin As ComponentName, userHandle As UserHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RemoveUser(Android::Content::ComponentName ^ admin, Android::OS::UserHandle ^ userHandle);" />
      <MemberSignature Language="C#" Value="public virtual bool RemoveUser (Android.Content.ComponentName admin, Android.OS.UserHandle userHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RemoveUser(class Android.Content.ComponentName admin, class Android.OS.UserHandle userHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.RemoveUser(Android.Content.ComponentName,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member RemoveUser : Android.Content.ComponentName * Android.OS.UserHandle -&gt; bool&#xA;override this.RemoveUser : Android.Content.ComponentName * Android.OS.UserHandle -&gt; bool" Usage="devicePolicyManager.RemoveUser (admin, userHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeUser", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)Z", "GetRemoveUser_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeUser", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)Z", "GetRemoveUser_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="userHandle" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="userHandle">the user to remove.</param>
        <summary>Called by a device owner to remove a user/profile and all associated data.</summary>
        <returns>
          <c>true</c> if the user was removed, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Called by a device owner to remove a user/profile and all associated data. The primary user
            can not be removed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#removeUser(android.content.ComponentName,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.removeUser(android.content.ComponentName, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestBugreport">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RequestBugreport (admin As ComponentName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RequestBugreport(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual bool RequestBugreport (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RequestBugreport(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.RequestBugreport(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member RequestBugreport : Android.Content.ComponentName -&gt; bool&#xA;override this.RequestBugreport : Android.Content.ComponentName -&gt; bool" Usage="devicePolicyManager.RequestBugreport admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("requestBugreport", "(Landroid/content/ComponentName;)Z", "GetRequestBugreport_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("requestBugreport", "(Landroid/content/ComponentName;)Z", "GetRequestBugreport_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Called by a device owner to request a bugreport.</summary>
        <returns>
          <c>true</c> if the bugreport collection started successfully, or <c>false</c> if it
                    wasn't triggered because a previous bugreport operation is still active (either the
                    bugreport is still running or waiting for the user to share or decline)</returns>
        <remarks>
          <para>Called by a device owner to request a bugreport.</para>
          <para>If the device contains secondary users or profiles, they must be affiliated with the device.
            Otherwise a <c>SecurityException</c> will be thrown. See <c>#isAffiliatedUser</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#requestBugreport(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.requestBugreport(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiredPasswordComplexity">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequiredPasswordComplexity As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RequiredPasswordComplexity { int get(); void set(int value); };" />
      <MemberSignature Language="C#" Value="public virtual int RequiredPasswordComplexity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RequiredPasswordComplexity" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.RequiredPasswordComplexity" />
      <MemberSignature Language="F#" Value="member this.RequiredPasswordComplexity : int with get, set" Usage="Android.App.Admin.DevicePolicyManager.RequiredPasswordComplexity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRequiredPasswordComplexity", "()I", "GetGetRequiredPasswordComplexityHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRequiredPasswordComplexity", "()I", "GetGetRequiredPasswordComplexityHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setRequiredPasswordComplexity", "(I)V", "GetSetRequiredPasswordComplexity_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setRequiredPasswordComplexity", "(I)V", "GetSetRequiredPasswordComplexity_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the password complexity requirement set by <c>#setRequiredPasswordComplexity(int)</c>,
            for the current user. -or- Sets a minimum password complexity requirement for the user's screen lock.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Gets the password complexity requirement set by <c>#setRequiredPasswordComplexity(int)</c>,
            for the current user.</para>
          <para>The difference between this method and <c>#getPasswordComplexity()</c> is that this
            method simply returns the value set by <c>#setRequiredPasswordComplexity(int)</c> while
            <c>#getPasswordComplexity()</c> returns the complexity of the actual password.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to get
            restrictions on the parent profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getRequiredPasswordComplexity()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getRequiredPasswordComplexity()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Sets a minimum password complexity requirement for the user's screen lock.
            The complexity level is one of the pre-defined levels, and the user is unable to set a
            password with a lower complexity level.</para>
          <para>Note that when called on a profile which uses an unified challenge with its parent, the
            complexity would apply to the unified challenge.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance
            returned by <c>#getParentProfileInstance(ComponentName)</c> in order to set
            restrictions on the parent profile.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; Specifying password requirements using this method clears any
            password requirements set using the obsolete <c>#setPasswordQuality(ComponentName, int)</c>
            and any of its associated methods.
            Additionally, if there are password requirements set using the obsolete
            <c>#setPasswordQuality(ComponentName, int)</c> on the parent <c>DevicePolicyManager</c>
            instance, they must be cleared by calling <c>#setPasswordQuality(ComponentName, int)</c>
            with <c>#PASSWORD_QUALITY_UNSPECIFIED</c> on that instance prior to setting complexity
            requirement for the managed profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setRequiredPasswordComplexity(int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setRequiredPasswordComplexity(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResetPassword (password As String, flags As ResetPasswordFlags) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ResetPassword(System::String ^ password, Android::App::Admin::ResetPasswordFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual bool ResetPassword (string? password, Android.App.Admin.ResetPasswordFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ResetPassword(string password, valuetype Android.App.Admin.ResetPasswordFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.ResetPassword(System.String,Android.App.Admin.ResetPasswordFlags)" />
      <MemberSignature Language="F#" Value="abstract member ResetPassword : string * Android.App.Admin.ResetPasswordFlags -&gt; bool&#xA;override this.ResetPassword : string * Android.App.Admin.ResetPasswordFlags -&gt; bool" Usage="devicePolicyManager.ResetPassword (password, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resetPassword", "(Ljava/lang/String;I)Z", "GetResetPassword_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resetPassword", "(Ljava/lang/String;I)Z", "GetResetPassword_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="flags" Type="Android.App.Admin.ResetPasswordFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="password">The new password for the user. Null or empty clears the password.</param>
        <param name="flags">May be 0 or combination of <c>#RESET_PASSWORD_REQUIRE_ENTRY</c> and
                       <c>#RESET_PASSWORD_DO_NOT_ASK_CREDENTIALS_ON_BOOT</c>.</param>
        <summary>Force a new password for device unlock (the password needed to access the entire device) or
            the work profile challenge on the current user.</summary>
        <returns>Returns true if the password was applied, or false if it is not acceptable for the
                    current constraints.</returns>
        <remarks>
          <para>Force a new password for device unlock (the password needed to access the entire device) or
            the work profile challenge on the current user. This takes effect immediately.</para>
          <para>Before <c>android.os.Build.VERSION_CODES#N</c>, this API is available to device admin,
            profile owner and device owner. Starting from <c>android.os.Build.VERSION_CODES#N</c>,
            legacy device admin (who is not also profile owner or device owner) can only call this
            API to set a new password if there is currently no password set. Profile owner and device
            owner can continue to force change an existing password as long as the target user is
            unlocked, although device owner will not be able to call this API at all if there is also a
            managed profile on the device.</para>
          <para>Between <c>android.os.Build.VERSION_CODES#O</c>,
            <c>android.os.Build.VERSION_CODES#P</c> and <c>android.os.Build.VERSION_CODES#Q</c>,
            profile owner and devices owner targeting SDK level <c>android.os.Build.VERSION_CODES#O</c>
            or above who attempt to call this API will receive <c>SecurityException</c>; they are
            encouraged to migrate to the new <c>#resetPasswordWithToken</c> API instead.
            Profile owner and device owner targeting older SDK levels are not affected: they continue
            to experience the existing behaviour described in the previous paragraph.</para>
          <para>&lt;em&gt;Starting from <c>android.os.Build.VERSION_CODES#R</c>, this API is no longer
            supported in most cases.&lt;/em&gt; Device owner and profile owner calling
            this API will receive <c>SecurityException</c> if they target SDK level
            <c>android.os.Build.VERSION_CODES#O</c> or above, or they will receive a silent failure
            (API returning <c>false</c>) if they target lower SDK level.
            For legacy device admins, this API throws <c>SecurityException</c> if they target SDK level
            <c>android.os.Build.VERSION_CODES#N</c> or above, and returns <c>false</c> otherwise. Only
            privileged apps holding RESET_PASSWORD permission which are part of
            the system factory image can still call this API to set a new password if there is currently
            no password set. In this case, if the device already has a password, this API will throw
            <c>SecurityException</c>.</para>
          <para>The given password must be sufficient for the current password quality and length constraints
            as returned by <c>#getPasswordQuality(ComponentName)</c> and
            <c>#getPasswordMinimumLength(ComponentName)</c>; if it does not meet these constraints, then
            it will be rejected and false returned. Note that the password may be a stronger quality
            (containing alphanumeric characters when the requested quality is only numeric), in which
            case the currently active quality will be increased to match.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, this
            methods does nothing.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_RESET_PASSWORD</c> to be able to call this method; if it has
            not, a security exception will be thrown.</para>
          <para>This member is deprecated. Please use <c>#resetPasswordWithToken</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#resetPassword(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.resetPassword(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ResetPasswordDoNotAskCredentialsOnBoot">
      <MemberSignature Language="VB.NET" Value="Public Const ResetPasswordDoNotAskCredentialsOnBoot As ResetPasswordFlags  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::ResetPasswordFlags ResetPasswordDoNotAskCredentialsOnBoot = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.ResetPasswordFlags ResetPasswordDoNotAskCredentialsOnBoot = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.ResetPasswordFlags ResetPasswordDoNotAskCredentialsOnBoot = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ResetPasswordDoNotAskCredentialsOnBoot" />
      <MemberSignature Language="F#" Value="val mutable ResetPasswordDoNotAskCredentialsOnBoot : Android.App.Admin.ResetPasswordFlags" Usage="Android.App.Admin.DevicePolicyManager.ResetPasswordDoNotAskCredentialsOnBoot" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("RESET_PASSWORD_DO_NOT_ASK_CREDENTIALS_ON_BOOT", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("RESET_PASSWORD_DO_NOT_ASK_CREDENTIALS_ON_BOOT", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.ResetPasswordFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.ResetPasswordFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.ResetPasswordFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag for <c>#resetPasswordWithToken</c> and <c>#resetPassword</c>: don't ask for user
            credentials on device boot.</summary>
        <remarks>
          <para>Flag for <c>#resetPasswordWithToken</c> and <c>#resetPassword</c>: don't ask for user
            credentials on device boot.
            If the flag is set, the device can be booted without asking for user password.
            The absence of this flag does not change the current boot requirements. This flag
            can be set by the device owner only. If the app is not the device owner, the flag
            is ignored. Once the flag is set, it cannot be reverted back without resetting the
            device to factory defaults.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#RESET_PASSWORD_DO_NOT_ASK_CREDENTIALS_ON_BOOT" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.RESET_PASSWORD_DO_NOT_ASK_CREDENTIALS_ON_BOOT</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPasswordRequireEntry">
      <MemberSignature Language="VB.NET" Value="Public Const ResetPasswordRequireEntry As ResetPasswordFlags  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::ResetPasswordFlags ResetPasswordRequireEntry = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.ResetPasswordFlags ResetPasswordRequireEntry = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.ResetPasswordFlags ResetPasswordRequireEntry = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.ResetPasswordRequireEntry" />
      <MemberSignature Language="F#" Value="val mutable ResetPasswordRequireEntry : Android.App.Admin.ResetPasswordFlags" Usage="Android.App.Admin.DevicePolicyManager.ResetPasswordRequireEntry" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("RESET_PASSWORD_REQUIRE_ENTRY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("RESET_PASSWORD_REQUIRE_ENTRY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.ResetPasswordFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.ResetPasswordFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.ResetPasswordFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for <c>#resetPasswordWithToken</c> and <c>#resetPassword</c>: don't allow other admins
            to change the password again until the user has entered it.</summary>
        <remarks>
          <para>Flag for <c>#resetPasswordWithToken</c> and <c>#resetPassword</c>: don't allow other admins
            to change the password again until the user has entered it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#RESET_PASSWORD_REQUIRE_ENTRY" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.RESET_PASSWORD_REQUIRE_ENTRY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ResetPasswordWithToken">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResetPasswordWithToken (admin As ComponentName, password As String, token As Byte(), flags As ResetPasswordFlags) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ResetPasswordWithToken(Android::Content::ComponentName ^ admin, System::String ^ password, cli::array &lt;System::Byte&gt; ^ token, Android::App::Admin::ResetPasswordFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual bool ResetPasswordWithToken (Android.Content.ComponentName? admin, string? password, byte[]? token, Android.App.Admin.ResetPasswordFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ResetPasswordWithToken(class Android.Content.ComponentName admin, string password, unsigned int8[] token, valuetype Android.App.Admin.ResetPasswordFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.ResetPasswordWithToken(Android.Content.ComponentName,System.String,System.Byte[],Android.App.Admin.ResetPasswordFlags)" />
      <MemberSignature Language="F#" Value="abstract member ResetPasswordWithToken : Android.Content.ComponentName * string * byte[] * Android.App.Admin.ResetPasswordFlags -&gt; bool&#xA;override this.ResetPasswordWithToken : Android.Content.ComponentName * string * byte[] * Android.App.Admin.ResetPasswordFlags -&gt; bool" Usage="devicePolicyManager.ResetPasswordWithToken (admin, password, token, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resetPasswordWithToken", "(Landroid/content/ComponentName;Ljava/lang/String;[BI)Z", "GetResetPasswordWithToken_Landroid_content_ComponentName_Ljava_lang_String_arrayBIHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resetPasswordWithToken", "(Landroid/content/ComponentName;Ljava/lang/String;[BI)Z", "GetResetPasswordWithToken_Landroid_content_ComponentName_Ljava_lang_String_arrayBIHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_RESET_PASSWORD")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_RESET_PASSWORD")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="token" Type="System.Byte[]" />
        <Parameter Name="flags" Type="Android.App.Admin.ResetPasswordFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="password">The new password for the user. <c>null</c> or empty clears the password.</param>
        <param name="token">the password reset token previously provisioned by
                   <c>#setResetPasswordToken</c>.</param>
        <param name="flags">May be 0 or combination of <c>#RESET_PASSWORD_REQUIRE_ENTRY</c> and
                   <c>#RESET_PASSWORD_DO_NOT_ASK_CREDENTIALS_ON_BOOT</c>.</param>
        <summary>Called by device or profile owner to force set a new device unlock password or a managed
            profile challenge on current user.</summary>
        <returns>Returns true if the password was applied, or false if it is not acceptable for the
                    current constraints.</returns>
        <remarks>
          <para>Called by device or profile owner to force set a new device unlock password or a managed
            profile challenge on current user. This takes effect immediately.</para>
          <para>Unlike <c>#resetPassword</c>, this API can change the password even before the user or
            device is unlocked or decrypted. The supplied token must have been previously provisioned via
            <c>#setResetPasswordToken</c>, and in active state <c>#isResetPasswordTokenActive</c>.</para>
          <para>The given password must be sufficient for the current password quality and length constraints
            as returned by <c>#getPasswordQuality(ComponentName)</c> and
            <c>#getPasswordMinimumLength(ComponentName)</c>; if it does not meet these constraints, then
            it will be rejected and false returned. Note that the password may be a stronger quality, for
            example, a password containing alphanumeric characters when the requested quality is only
            numeric.</para>
          <para>Calling with a <c>null</c> or empty password will clear any existing PIN, pattern or
            password if the current password constraints allow it.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature,
            calling this methods has no effect - the password is always empty - and false is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#resetPasswordWithToken(android.content.ComponentName,%20java.lang.String,%20byte[],%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.resetPasswordWithToken(android.content.ComponentName, java.lang.String, byte[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Resources As DevicePolicyResourcesManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::App::Admin::DevicePolicyResourcesManager ^ Resources { Android::App::Admin::DevicePolicyResourcesManager ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.DevicePolicyResourcesManager Resources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.Admin.DevicePolicyResourcesManager Resources" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.Resources" />
      <MemberSignature Language="F#" Value="member this.Resources : Android.App.Admin.DevicePolicyResourcesManager" Usage="Android.App.Admin.DevicePolicyManager.Resources" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getResources", "()Landroid/app/admin/DevicePolicyResourcesManager;", "GetGetResourcesHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getResources", "()Landroid/app/admin/DevicePolicyResourcesManager;", "GetGetResourcesHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.DevicePolicyResourcesManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a <c>DevicePolicyResourcesManager</c> containing the required APIs to set, reset,
            and get device policy related resources.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns a <c>DevicePolicyResourcesManager</c> containing the required APIs to set, reset,
            and get device policy related resources.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getResources()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getResources()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveNetworkLogs">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RetrieveNetworkLogs (admin As ComponentName, batchToken As Long) As IList(Of NetworkEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Android::App::Admin::NetworkEvent ^&gt; ^ RetrieveNetworkLogs(Android::Content::ComponentName ^ admin, long batchToken);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.App.Admin.NetworkEvent&gt;? RetrieveNetworkLogs (Android.Content.ComponentName? admin, long batchToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.App.Admin.NetworkEvent&gt; RetrieveNetworkLogs(class Android.Content.ComponentName admin, int64 batchToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.RetrieveNetworkLogs(Android.Content.ComponentName,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member RetrieveNetworkLogs : Android.Content.ComponentName * int64 -&gt; System.Collections.Generic.IList&lt;Android.App.Admin.NetworkEvent&gt;&#xA;override this.RetrieveNetworkLogs : Android.Content.ComponentName * int64 -&gt; System.Collections.Generic.IList&lt;Android.App.Admin.NetworkEvent&gt;" Usage="devicePolicyManager.RetrieveNetworkLogs (admin, batchToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("retrieveNetworkLogs", "(Landroid/content/ComponentName;J)Ljava/util/List;", "GetRetrieveNetworkLogs_Landroid_content_ComponentName_JHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("retrieveNetworkLogs", "(Landroid/content/ComponentName;J)Ljava/util/List;", "GetRetrieveNetworkLogs_Landroid_content_ComponentName_JHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.Admin.NetworkEvent&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="batchToken" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                   <c>null</c> if called by a delegated app.</param>
        <param name="batchToken">A token of the batch to retrieve</param>
        <summary>Called by device owner, profile owner of a managed profile or delegated app with
            <c>#DELEGATION_NETWORK_LOGGING</c> to retrieve the most recent batch of
            network logging events.</summary>
        <returns>A new batch of network logs which is a list of <c>NetworkEvent</c>. Returns
                   <c>null</c> if the batch represented by batchToken is no longer available or if
                   logging is disabled.</returns>
        <remarks>
          <para>Called by device owner, profile owner of a managed profile or delegated app with
            <c>#DELEGATION_NETWORK_LOGGING</c> to retrieve the most recent batch of
            network logging events.</para>
          <para>When network logging is enabled by a profile owner, the network logs will only include
            work profile network activity, not activity on the personal profile.
            
            A device owner or profile owner has to provide a batchToken provided as part of
            <c>DeviceAdminReceiver#onNetworkLogsAvailable</c> callback. If the token doesn't match the
            token of the most recent available batch of logs, <c>null</c> will be returned.</para>
          <para>
            <c>NetworkEvent</c> can be one of <c>DnsEvent</c> or <c>ConnectEvent</c>.</para>
          <para>The list of network events is sorted chronologically, and contains at most 1200 events.</para>
          <para>Access to the logs is rate limited and this method will only return a new batch of logs
            after the device device owner has been notified via
            <c>DeviceAdminReceiver#onNetworkLogsAvailable</c>.</para>
          <para>If the caller is not a profile owner and a secondary user or profile is created, calling
            this method will throw a <c>SecurityException</c> until all users become affiliated again.
            It will also no longer be possible to retrieve the network logs batch with the most recent
            batchToken provided by <c>DeviceAdminReceiver#onNetworkLogsAvailable</c>.
            See <c>DevicePolicyManager#setAffiliationIds</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#retrieveNetworkLogs(android.content.ComponentName,%20long)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.retrieveNetworkLogs(android.content.ComponentName, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrievePreRebootSecurityLogs">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RetrievePreRebootSecurityLogs (admin As ComponentName) As IList(Of SecurityLog.SecurityEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Android::App::Admin::SecurityLog::SecurityEvent ^&gt; ^ RetrievePreRebootSecurityLogs(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.App.Admin.SecurityLog.SecurityEvent&gt;? RetrievePreRebootSecurityLogs (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.App.Admin.SecurityLog/SecurityEvent&gt; RetrievePreRebootSecurityLogs(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.RetrievePreRebootSecurityLogs(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member RetrievePreRebootSecurityLogs : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;Android.App.Admin.SecurityLog.SecurityEvent&gt;&#xA;override this.RetrievePreRebootSecurityLogs : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;Android.App.Admin.SecurityLog.SecurityEvent&gt;" Usage="devicePolicyManager.RetrievePreRebootSecurityLogs admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("retrievePreRebootSecurityLogs", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetRetrievePreRebootSecurityLogs_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("retrievePreRebootSecurityLogs", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetRetrievePreRebootSecurityLogs_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SECURITY_LOGGING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SECURITY_LOGGING")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.Admin.SecurityLog+SecurityEvent&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which device admin this request is associated with, or <c>null</c>
                        if called by a delegated app.</param>
        <summary>Called by device owner or profile owner of an organization-owned managed profile to retrieve
            device logs from before the device's last reboot.</summary>
        <returns>Device logs from before the latest reboot of the system, or <c>null</c> if this API
                    is not supported on the device.</returns>
        <remarks>
          <para>Called by device owner or profile owner of an organization-owned managed profile to retrieve
            device logs from before the device's last reboot.</para>
          <para>&lt;strong&gt; This API is not supported on all devices. Calling this API on unsupported devices
            will result in <c>null</c> being returned. The device logs are retrieved from a RAM region
            which is not guaranteed to be corruption-free during power cycles, as a result be cautious
            about data corruption when parsing. &lt;/strong&gt;</para>
          <para>When called by a device owner, if there is any other user or profile on the device,
            it must be affiliated with the device. Otherwise a <c>SecurityException</c> will be thrown.
            See <c>#isAffiliatedUser</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#retrievePreRebootSecurityLogs(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.retrievePreRebootSecurityLogs(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RetrieveSecurityLogs">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RetrieveSecurityLogs (admin As ComponentName) As IList(Of SecurityLog.SecurityEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;Android::App::Admin::SecurityLog::SecurityEvent ^&gt; ^ RetrieveSecurityLogs(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.App.Admin.SecurityLog.SecurityEvent&gt;? RetrieveSecurityLogs (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.App.Admin.SecurityLog/SecurityEvent&gt; RetrieveSecurityLogs(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.RetrieveSecurityLogs(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member RetrieveSecurityLogs : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;Android.App.Admin.SecurityLog.SecurityEvent&gt;&#xA;override this.RetrieveSecurityLogs : Android.Content.ComponentName -&gt; System.Collections.Generic.IList&lt;Android.App.Admin.SecurityLog.SecurityEvent&gt;" Usage="devicePolicyManager.RetrieveSecurityLogs admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("retrieveSecurityLogs", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetRetrieveSecurityLogs_Landroid_content_ComponentName_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("retrieveSecurityLogs", "(Landroid/content/ComponentName;)Ljava/util/List;", "GetRetrieveSecurityLogs_Landroid_content_ComponentName_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SECURITY_LOGGING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SECURITY_LOGGING")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.App.Admin.SecurityLog+SecurityEvent&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which device admin this request is associated with, or <c>null</c>
                         if called by a delegated app.</param>
        <summary>Called by device owner or profile owner of an organization-owned managed profile to retrieve
            all new security logging entries since the last call to this API after device boots.</summary>
        <returns>the new batch of security logs which is a list of <c>SecurityEvent</c>,
            or <c>null</c> if rate limitation is exceeded or if logging is currently disabled.</returns>
        <remarks>
          <para>Called by device owner or profile owner of an organization-owned managed profile to retrieve
            all new security logging entries since the last call to this API after device boots.</para>
          <para>Access to the logs is rate limited and it will only return new logs after the admin has
            been notified via <c>DeviceAdminReceiver#onSecurityLogsAvailable</c>.</para>
          <para>When called by a device owner, if there is any other user or profile on the device,
            it must be affiliated with the device. Otherwise a <c>SecurityException</c> will be thrown.
            See <c>#isAffiliatedUser</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#retrieveSecurityLogs(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.retrieveSecurityLogs(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeKeyPairFromApp">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RevokeKeyPairFromApp (admin As ComponentName, alias As String, packageName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RevokeKeyPairFromApp(Android::Content::ComponentName ^ admin, System::String ^ alias, System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual bool RevokeKeyPairFromApp (Android.Content.ComponentName? admin, string alias, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RevokeKeyPairFromApp(class Android.Content.ComponentName admin, string alias, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.RevokeKeyPairFromApp(Android.Content.ComponentName,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member RevokeKeyPairFromApp : Android.Content.ComponentName * string * string -&gt; bool&#xA;override this.RevokeKeyPairFromApp : Android.Content.ComponentName * string * string -&gt; bool" Usage="devicePolicyManager.RevokeKeyPairFromApp (admin, alias, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("revokeKeyPairFromApp", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)Z", "GetRevokeKeyPairFromApp_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("revokeKeyPairFromApp", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)Z", "GetRevokeKeyPairFromApp_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                   <c>null</c> if calling from a delegated certificate chooser.</param>
        <param name="alias">The alias of the key to revoke access from.</param>
        <param name="packageName">The name of the (already installed) package to revoke access from.</param>
        <summary>Called by a device or profile owner, or delegated certificate chooser (an app that has been
            delegated the <c>#DELEGATION_CERT_SELECTION</c> privilege), to revoke an application's
            grant to a KeyChain key pair.</summary>
        <returns>
          <c>true</c> if the grant was revoked successfully, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Called by a device or profile owner, or delegated certificate chooser (an app that has been
            delegated the <c>#DELEGATION_CERT_SELECTION</c> privilege), to revoke an application's
            grant to a KeyChain key pair.
            Calls by the application to <c>android.security.KeyChain#getPrivateKey</c>
            will fail after the grant is revoked.
            
            The grantee app will receive the <c>android.security.KeyChain#ACTION_KEY_ACCESS_CHANGED</c>
            broadcast when access to a key is revoked.
            
            Starting from <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> throws an
            <c>IllegalArgumentException</c> if <c>alias</c> doesn't correspond to an existing key.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#revokeKeyPairFromApp(android.content.ComponentName,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.revokeKeyPairFromApp(android.content.ComponentName, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeKeyPairFromWifiAuth">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function RevokeKeyPairFromWifiAuth (alias As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool RevokeKeyPairFromWifiAuth(System::String ^ alias);" />
      <MemberSignature Language="C#" Value="public virtual bool RevokeKeyPairFromWifiAuth (string alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RevokeKeyPairFromWifiAuth(string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.RevokeKeyPairFromWifiAuth(System.String)" />
      <MemberSignature Language="F#" Value="abstract member RevokeKeyPairFromWifiAuth : string -&gt; bool&#xA;override this.RevokeKeyPairFromWifiAuth : string -&gt; bool" Usage="devicePolicyManager.RevokeKeyPairFromWifiAuth alias" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("revokeKeyPairFromWifiAuth", "(Ljava/lang/String;)Z", "GetRevokeKeyPairFromWifiAuth_Ljava_lang_String_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("revokeKeyPairFromWifiAuth", "(Ljava/lang/String;)Z", "GetRevokeKeyPairFromWifiAuth_Ljava_lang_String_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="alias">The alias of the key pair.</param>
        <summary>Called by a device or profile owner, or delegated certificate chooser (an app that has been
            delegated the <c>#DELEGATION_CERT_SELECTION</c> privilege), to deny using a KeyChain key
            pair for authentication to Wifi networks.</summary>
        <returns>
          <c>true</c> if the operation was set successfully, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Called by a device or profile owner, or delegated certificate chooser (an app that has been
            delegated the <c>#DELEGATION_CERT_SELECTION</c> privilege), to deny using a KeyChain key
            pair for authentication to Wifi networks. Configured networks using this key won't be able to
            authenticate.
            
            Starting from <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> throws an
            <c>IllegalArgumentException</c> if <c>alias</c> doesn't correspond to an existing key.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#revokeKeyPairFromWifiAuth(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.revokeKeyPairFromWifiAuth(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAccountManagementDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAccountManagementDisabled (admin As ComponentName, accountType As String, disabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAccountManagementDisabled(Android::Content::ComponentName ^ admin, System::String ^ accountType, bool disabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetAccountManagementDisabled (Android.Content.ComponentName? admin, string? accountType, bool disabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAccountManagementDisabled(class Android.Content.ComponentName admin, string accountType, bool disabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetAccountManagementDisabled(Android.Content.ComponentName,System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetAccountManagementDisabled : Android.Content.ComponentName * string * bool -&gt; unit&#xA;override this.SetAccountManagementDisabled : Android.Content.ComponentName * string * bool -&gt; unit" Usage="devicePolicyManager.SetAccountManagementDisabled (admin, accountType, disabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAccountManagementDisabled", "(Landroid/content/ComponentName;Ljava/lang/String;Z)V", "GetSetAccountManagementDisabled_Landroid_content_ComponentName_Ljava_lang_String_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAccountManagementDisabled", "(Landroid/content/ComponentName;Ljava/lang/String;Z)V", "GetSetAccountManagementDisabled_Landroid_content_ComponentName_Ljava_lang_String_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_ACCOUNT_MANAGEMENT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_ACCOUNT_MANAGEMENT")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="accountType" Type="System.String" />
        <Parameter Name="disabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="accountType">For which account management is disabled or enabled.</param>
        <param name="disabled">The boolean indicating that account management will be disabled (true) or
                       enabled (false).</param>
        <summary>Called by a device owner or profile owner to disable account management for a specific type
            of account.</summary>
        <remarks>
          <para>Called by a device owner or profile owner to disable account management for a specific type
            of account.</para>
          <para>The calling device admin must be a device owner or profile owner. If it is not, a security
            exception will be thrown.</para>
          <para>When account management is disabled for an account type, adding or removing an account of
            that type will not be possible.</para>
          <para>From <c>android.os.Build.VERSION_CODES#N</c> the profile or device owner can still use
            <c>android.accounts.AccountManager</c> APIs to add or remove accounts when account
            management for a specific type is disabled.</para>
          <para>This method may be called on the <c>DevicePolicyManager</c> instance returned from
            <c>#getParentProfileInstance(ComponentName)</c> by the profile owner on an
            organization-owned device, to restrict accounts that may not be managed on the primary
            profile.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, after the account management
            disabled policy has been set, <c>PolicyUpdateReceiver#onPolicySetResult(Context, String,
            Bundle, TargetUser, PolicyUpdateResult)</c> will notify the admin on whether the policy was
            successfully set or not. This callback will contain:
            &lt;ul&gt;
            &lt;li&gt; The policy identifier
            <c>DevicePolicyIdentifiers#ACCOUNT_MANAGEMENT_DISABLED_POLICY</c>&lt;li&gt; The additional policy params bundle, which contains
            <c>PolicyUpdateReceiver#EXTRA_ACCOUNT_TYPE</c> the account type the policy applies to
            &lt;li&gt; The <c>TargetUser</c> that this policy relates to
            &lt;li&gt; The <c>PolicyUpdateResult</c>, which will be
            <c>PolicyUpdateResult#RESULT_POLICY_SET</c> if the policy was successfully set or the
            reason the policy failed to be set
            (e.g. <c>PolicyUpdateResult#RESULT_FAILURE_CONFLICTING_ADMIN_POLICY</c>)
            &lt;/ul&gt;
            If there has been a change to the policy,
            <c>PolicyUpdateReceiver#onPolicyChanged(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin of this change. This callback will contain the
            same parameters as PolicyUpdateReceiver#onPolicySetResult and the <c>PolicyUpdateResult</c>
            will contain the reason why the policy changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setAccountManagementDisabled(android.content.ComponentName,%20java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setAccountManagementDisabled(android.content.ComponentName, java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAffiliationIds">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAffiliationIds (admin As ComponentName, ids As ICollection(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAffiliationIds(Android::Content::ComponentName ^ admin, System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ids);" />
      <MemberSignature Language="C#" Value="public virtual void SetAffiliationIds (Android.Content.ComponentName admin, System.Collections.Generic.ICollection&lt;string&gt; ids);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAffiliationIds(class Android.Content.ComponentName admin, class System.Collections.Generic.ICollection`1&lt;string&gt; ids) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetAffiliationIds(Android.Content.ComponentName,System.Collections.Generic.ICollection{System.String})" />
      <MemberSignature Language="F#" Value="abstract member SetAffiliationIds : Android.Content.ComponentName * System.Collections.Generic.ICollection&lt;string&gt; -&gt; unit&#xA;override this.SetAffiliationIds : Android.Content.ComponentName * System.Collections.Generic.ICollection&lt;string&gt; -&gt; unit" Usage="devicePolicyManager.SetAffiliationIds (admin, ids)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAffiliationIds", "(Landroid/content/ComponentName;Ljava/util/Set;)V", "GetSetAffiliationIds_Landroid_content_ComponentName_Ljava_util_Set_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAffiliationIds", "(Landroid/content/ComponentName;Ljava/util/Set;)V", "GetSetAffiliationIds_Landroid_content_ComponentName_Ljava_util_Set_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="ids" Type="System.Collections.Generic.ICollection&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="admin">Which device owner, or owner of secondary user, this request is associated with.</param>
        <param name="ids">A set of opaque non-empty affiliation ids.</param>
        <summary>Indicates the entity that controls the device.</summary>
        <remarks>
          <para>Indicates the entity that controls the device. Two users are
            affiliated if the set of ids set by the device owner and the admin of the secondary user.</para>
          <para>A user that is affiliated with the device owner user is considered to be
            affiliated with the device.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; Features that depend on user affiliation (such as security logging
            or <c>#bindDeviceAdminServiceAsUser</c>) won't be available when a secondary user
            is created, until it becomes affiliated. Therefore it is recommended that the appropriate
            affiliation ids are set by its owner as soon as possible after the user is
            created.</para>
          <para>Note: This method used to be available for affiliating device owner and profile
            owner. However, since Android 11, this combination is not possible. This method is now
            only useful for affiliating the primary user with managed secondary users.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setAffiliationIds(android.content.ComponentName,%20java.util.Set%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setAffiliationIds(android.content.ComponentName, java.util.Set&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAlwaysOnVpnPackage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAlwaysOnVpnPackage (admin As ComponentName, vpnPackage As String, lockdownEnabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAlwaysOnVpnPackage(Android::Content::ComponentName ^ admin, System::String ^ vpnPackage, bool lockdownEnabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetAlwaysOnVpnPackage (Android.Content.ComponentName admin, string? vpnPackage, bool lockdownEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAlwaysOnVpnPackage(class Android.Content.ComponentName admin, string vpnPackage, bool lockdownEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetAlwaysOnVpnPackage(Android.Content.ComponentName,System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetAlwaysOnVpnPackage : Android.Content.ComponentName * string * bool -&gt; unit&#xA;override this.SetAlwaysOnVpnPackage : Android.Content.ComponentName * string * bool -&gt; unit" Usage="devicePolicyManager.SetAlwaysOnVpnPackage (admin, vpnPackage, lockdownEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAlwaysOnVpnPackage", "(Landroid/content/ComponentName;Ljava/lang/String;Z)V", "GetSetAlwaysOnVpnPackage_Landroid_content_ComponentName_Ljava_lang_String_ZHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAlwaysOnVpnPackage", "(Landroid/content/ComponentName;Ljava/lang/String;Z)V", "GetSetAlwaysOnVpnPackage_Landroid_content_ComponentName_Ljava_lang_String_ZHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="vpnPackage" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="lockdownEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">To be added.</param>
        <param name="vpnPackage">The package name for an installed VPN app on the device, or <c>null</c> to
                   remove an existing always-on VPN configuration.</param>
        <param name="lockdownEnabled">
          <c>true</c> to disallow networking when the VPN is not connected or
                   <c>false</c> otherwise. This has no effect when clearing.</param>
        <summary>Called by a device or profile owner to configure an always-on VPN connection through a
            specific application for the current user.</summary>
        <remarks>
          <para>Called by a device or profile owner to configure an always-on VPN connection through a
            specific application for the current user. This connection is automatically granted and
            persisted after a reboot.</para>
          <para>To support the always-on feature, an app must
            &lt;ul&gt;
                &lt;li&gt;declare a <c>android.net.VpnService</c> in its manifest, guarded by
                    <c>android.Manifest.permission#BIND_VPN_SERVICE</c>;&lt;/li&gt;
                &lt;li&gt;target <c>android.os.Build.VERSION_CODES#N API 24</c> or above; and&lt;/li&gt;
                &lt;li&gt;<i>not</i> explicitly opt out of the feature through
                    <c>android.net.VpnService#SERVICE_META_DATA_SUPPORTS_ALWAYS_ON</c>.&lt;/li&gt;
            &lt;/ul&gt;
            The call will fail if called with the package name of an unsupported VPN app.</para>
          <para>Enabling lockdown via <c>lockdownEnabled</c> argument carries the risk that any failure
            of the VPN provider could break networking for all apps. This method clears any lockdown
            allowlist set by <c>#setAlwaysOnVpnPackage(ComponentName, String, boolean, Set)</c>.</para>
          <para>Starting from <c>android.os.Build.VERSION_CODES#S API 31</c> calling this method with
            <c>vpnPackage</c> set to <c>null</c> only removes the existing configuration if it was
            previously created by this admin. To remove VPN configuration created by the user use
            <c>UserManager#DISALLOW_CONFIG_VPN</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setAlwaysOnVpnPackage(android.content.ComponentName,%20java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setAlwaysOnVpnPackage(android.content.ComponentName, java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAlwaysOnVpnPackage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAlwaysOnVpnPackage (admin As ComponentName, vpnPackage As String, lockdownEnabled As Boolean, lockdownAllowlist As ICollection(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAlwaysOnVpnPackage(Android::Content::ComponentName ^ admin, System::String ^ vpnPackage, bool lockdownEnabled, System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ lockdownAllowlist);" />
      <MemberSignature Language="C#" Value="public virtual void SetAlwaysOnVpnPackage (Android.Content.ComponentName admin, string? vpnPackage, bool lockdownEnabled, System.Collections.Generic.ICollection&lt;string&gt;? lockdownAllowlist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAlwaysOnVpnPackage(class Android.Content.ComponentName admin, string vpnPackage, bool lockdownEnabled, class System.Collections.Generic.ICollection`1&lt;string&gt; lockdownAllowlist) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetAlwaysOnVpnPackage(Android.Content.ComponentName,System.String,System.Boolean,System.Collections.Generic.ICollection{System.String})" />
      <MemberSignature Language="F#" Value="abstract member SetAlwaysOnVpnPackage : Android.Content.ComponentName * string * bool * System.Collections.Generic.ICollection&lt;string&gt; -&gt; unit&#xA;override this.SetAlwaysOnVpnPackage : Android.Content.ComponentName * string * bool * System.Collections.Generic.ICollection&lt;string&gt; -&gt; unit" Usage="devicePolicyManager.SetAlwaysOnVpnPackage (admin, vpnPackage, lockdownEnabled, lockdownAllowlist)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAlwaysOnVpnPackage", "(Landroid/content/ComponentName;Ljava/lang/String;ZLjava/util/Set;)V", "GetSetAlwaysOnVpnPackage_Landroid_content_ComponentName_Ljava_lang_String_ZLjava_util_Set_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAlwaysOnVpnPackage", "(Landroid/content/ComponentName;Ljava/lang/String;ZLjava/util/Set;)V", "GetSetAlwaysOnVpnPackage_Landroid_content_ComponentName_Ljava_lang_String_ZLjava_util_Set_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="vpnPackage" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="lockdownEnabled" Type="System.Boolean" />
        <Parameter Name="lockdownAllowlist" Type="System.Collections.Generic.ICollection&lt;System.String&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">To be added.</param>
        <param name="vpnPackage">package name for an installed VPN app on the device, or <c>null</c>
                    to remove an existing always-on VPN configuration</param>
        <param name="lockdownEnabled">
          <c>true</c> to disallow networking when the VPN is not connected or
                    <c>false</c> otherwise. This has no effect when clearing.</param>
        <param name="lockdownAllowlist">Packages that will be able to access the network directly when VPN
                    is in lockdown mode but not connected. Has no effect when clearing.</param>
        <summary>A version of <c>#setAlwaysOnVpnPackage(ComponentName, String, boolean)</c> that allows the
            admin to specify a set of apps that should be able to access the network directly when VPN
            is not connected.</summary>
        <remarks>
          <para>A version of <c>#setAlwaysOnVpnPackage(ComponentName, String, boolean)</c> that allows the
            admin to specify a set of apps that should be able to access the network directly when VPN
            is not connected. When VPN connects these apps switch over to VPN if allowed to use that VPN.
            System apps can always bypass VPN.</para>
          <para>Note that the system doesn't update the allowlist when packages are installed or
            uninstalled, the admin app must call this method to keep the list up to date.</para>
          <para>When <c>lockdownEnabled</c> is false <c>lockdownAllowlist</c> is ignored . When
            <c>lockdownEnabled</c> is <c>true</c> and <c>lockdownAllowlist</c> is <c>null</c> or
            empty, only system apps can bypass VPN.</para>
          <para>Setting always-on VPN package to <c>null</c> or using
            <c>#setAlwaysOnVpnPackage(ComponentName, String, boolean)</c> clears lockdown allowlist.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setAlwaysOnVpnPackage(android.content.ComponentName,%20java.lang.String,%20boolean,%20java.util.Set%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setAlwaysOnVpnPackage(android.content.ComponentName, java.lang.String, boolean, java.util.Set&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetApplicationHidden">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetApplicationHidden (admin As ComponentName, packageName As String, hidden As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetApplicationHidden(Android::Content::ComponentName ^ admin, System::String ^ packageName, bool hidden);" />
      <MemberSignature Language="C#" Value="public virtual bool SetApplicationHidden (Android.Content.ComponentName? admin, string? packageName, bool hidden);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetApplicationHidden(class Android.Content.ComponentName admin, string packageName, bool hidden) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetApplicationHidden(Android.Content.ComponentName,System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetApplicationHidden : Android.Content.ComponentName * string * bool -&gt; bool&#xA;override this.SetApplicationHidden : Android.Content.ComponentName * string * bool -&gt; bool" Usage="devicePolicyManager.SetApplicationHidden (admin, packageName, hidden)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setApplicationHidden", "(Landroid/content/ComponentName;Ljava/lang/String;Z)Z", "GetSetApplicationHidden_Landroid_content_ComponentName_Ljava_lang_String_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setApplicationHidden", "(Landroid/content/ComponentName;Ljava/lang/String;Z)Z", "GetSetApplicationHidden_Landroid_content_ComponentName_Ljava_lang_String_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PACKAGE_STATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PACKAGE_STATE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="hidden" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                       <c>null</c> if the caller is not a device admin.</param>
        <param name="packageName">The name of the package to hide or unhide.</param>
        <param name="hidden">
          <c>true</c> if the package should be hidden, <c>false</c> if it should be
                       unhidden.</param>
        <summary>Hide or unhide packages.</summary>
        <returns>boolean Whether the hidden setting of the package was successfully updated.</returns>
        <remarks>
          <para>Hide or unhide packages. When a package is hidden it is unavailable for use, but the data and
            actual package file remain. This function can be called by a device owner, profile owner, or
            by a delegate given the <c>#DELEGATION_PACKAGE_ACCESS</c> scope via
            <c>#setDelegatedScopes</c>.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance, returned by
            <c>#getParentProfileInstance(ComponentName)</c>, where the caller must be the profile owner
            of an organization-owned managed profile and the package must be a system package. If called
            on the parent instance, then the package is hidden or unhidden in the personal profile.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, after the application hidden
            policy has been set, <c>PolicyUpdateReceiver#onPolicySetResult(Context, String,
            Bundle, TargetUser, PolicyUpdateResult)</c> will notify the admin on whether the policy was
            successfully set or not. This callback will contain:
            &lt;ul&gt;
            &lt;li&gt; The policy identifier
            <c>DevicePolicyIdentifiers#APPLICATION_HIDDEN_POLICY</c>&lt;li&gt; The additional policy params bundle, which contains
            <c>PolicyUpdateReceiver#EXTRA_PACKAGE_NAME</c> the package name the policy applies to
            &lt;li&gt; The <c>TargetUser</c> that this policy relates to
            &lt;li&gt; The <c>PolicyUpdateResult</c>, which will be
            <c>PolicyUpdateResult#RESULT_POLICY_SET</c> if the policy was successfully set or the
            reason the policy failed to be set
            (e.g. <c>PolicyUpdateResult#RESULT_FAILURE_CONFLICTING_ADMIN_POLICY</c>)
            &lt;/ul&gt;
            If there has been a change to the policy,
            <c>PolicyUpdateReceiver#onPolicyChanged(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin of this change. This callback will contain the
            same parameters as PolicyUpdateReceiver#onPolicySetResult and the <c>PolicyUpdateResult</c>
            will contain the reason why the policy changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setApplicationHidden(android.content.ComponentName,%20java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setApplicationHidden(android.content.ComponentName, java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetApplicationRestrictions">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetApplicationRestrictions (admin As ComponentName, packageName As String, settings As Bundle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetApplicationRestrictions(Android::Content::ComponentName ^ admin, System::String ^ packageName, Android::OS::Bundle ^ settings);" />
      <MemberSignature Language="C#" Value="public virtual void SetApplicationRestrictions (Android.Content.ComponentName? admin, string? packageName, Android.OS.Bundle? settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetApplicationRestrictions(class Android.Content.ComponentName admin, string packageName, class Android.OS.Bundle settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetApplicationRestrictions(Android.Content.ComponentName,System.String,Android.OS.Bundle)" />
      <MemberSignature Language="F#" Value="abstract member SetApplicationRestrictions : Android.Content.ComponentName * string * Android.OS.Bundle -&gt; unit&#xA;override this.SetApplicationRestrictions : Android.Content.ComponentName * string * Android.OS.Bundle -&gt; unit" Usage="devicePolicyManager.SetApplicationRestrictions (admin, packageName, settings)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setApplicationRestrictions", "(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;)V", "GetSetApplicationRestrictions_Landroid_content_ComponentName_Ljava_lang_String_Landroid_os_Bundle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setApplicationRestrictions", "(Landroid/content/ComponentName;Ljava/lang/String;Landroid/os/Bundle;)V", "GetSetApplicationRestrictions_Landroid_content_ComponentName_Ljava_lang_String_Landroid_os_Bundle_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="settings" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                       <c>null</c> if called by the application restrictions managing package.</param>
        <param name="packageName">The name of the package to update restricted settings for.</param>
        <param name="settings">A <c>Bundle</c> to be parsed by the receiving application, conveying a new
                       set of active restrictions.</param>
        <summary>Sets the application restrictions for a given target application running in the calling user.</summary>
        <remarks>
          <para>Sets the application restrictions for a given target application running in the calling user.</para>
          <para>The caller must be a profile or device owner on that user, or the package allowed to manage
            application restrictions via <c>#setDelegatedScopes</c> with the
            <c>#DELEGATION_APP_RESTRICTIONS</c> scope; otherwise a security exception will be thrown.</para>
          <para>The provided <c>Bundle</c> consists of key-value pairs, where the types of values may be:
            &lt;ul&gt;
            &lt;li&gt;<c>boolean</c>&lt;li&gt;<c>int</c>&lt;li&gt;<c>String</c> or <c>String[]</c>&lt;li&gt;From <c>android.os.Build.VERSION_CODES#M</c>, <c>Bundle</c> or <c>Bundle[]</c>&lt;/ul&gt;</para>
          <para>If the restrictions are not available yet, but may be applied in the near future, the caller
            can notify the target application of that by adding
            <c>UserManager#KEY_RESTRICTIONS_PENDING</c> to the settings parameter.</para>
          <para>The application restrictions are only made visible to the target application via
            <c>UserManager#getApplicationRestrictions(String)</c>, in addition to the profile or device
            owner, and the application restrictions managing package via
            <c>#getApplicationRestrictions</c>.</para>
          <para>Starting from Android Version <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>,
            multiple admins can set app restrictions for the same application, the target application can
            get the list of app restrictions set by each admin via
            <c>android.content.RestrictionsManager#getApplicationRestrictionsPerAdmin</c>.</para>
          <para>NOTE: The method performs disk I/O and shouldn't be called on the main thread</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setApplicationRestrictions(android.content.ComponentName,%20java.lang.String,%20android.os.Bundle)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setApplicationRestrictions(android.content.ComponentName, java.lang.String, android.os.Bundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="F:Android.OS.UserManager.KeyRestrictionsPending" />
      </Docs>
    </Member>
    <Member MemberName="SetApplicationRestrictionsManagingPackage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetApplicationRestrictionsManagingPackage (admin As ComponentName, packageName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetApplicationRestrictionsManagingPackage(Android::Content::ComponentName ^ admin, System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual void SetApplicationRestrictionsManagingPackage (Android.Content.ComponentName admin, string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetApplicationRestrictionsManagingPackage(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetApplicationRestrictionsManagingPackage(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetApplicationRestrictionsManagingPackage : Android.Content.ComponentName * string -&gt; unit&#xA;override this.SetApplicationRestrictionsManagingPackage : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.SetApplicationRestrictionsManagingPackage (admin, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setApplicationRestrictionsManagingPackage", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetSetApplicationRestrictionsManagingPackage_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setApplicationRestrictionsManagingPackage", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetSetApplicationRestrictionsManagingPackage_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="packageName">The package name which will be given access to application restrictions
                       APIs. If <c>null</c> is given the current package will be cleared.</param>
        <summary>Called by a profile owner or device owner to grant permission to a package to manage
            application restrictions for the calling user via <c>#setApplicationRestrictions</c> and
            <c>#getApplicationRestrictions</c>.</summary>
        <remarks>
          <para>Called by a profile owner or device owner to grant permission to a package to manage
            application restrictions for the calling user via <c>#setApplicationRestrictions</c> and
            <c>#getApplicationRestrictions</c>.</para>
          <para>This permission is persistent until it is later cleared by calling this method with a
            <c>null</c> value or uninstalling the managing package.</para>
          <para>The supplied application restriction managing package must be installed when calling this
            API, otherwise an <c>NameNotFoundException</c> will be thrown.</para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#O</c>. Use <c>#setDelegatedScopes</c>
            with the <c>#DELEGATION_APP_RESTRICTIONS</c> scope instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setApplicationRestrictionsManagingPackage(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setApplicationRestrictionsManagingPackage(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAutoTimeEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAutoTimeEnabled (admin As ComponentName, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAutoTimeEnabled(Android::Content::ComponentName ^ admin, bool enabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetAutoTimeEnabled (Android.Content.ComponentName? admin, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAutoTimeEnabled(class Android.Content.ComponentName admin, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetAutoTimeEnabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetAutoTimeEnabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetAutoTimeEnabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetAutoTimeEnabled (admin, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAutoTimeEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetAutoTimeEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAutoTimeEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetAutoTimeEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.SET_TIME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.SET_TIME")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="enabled">Whether time should be obtained automatically from the network or not.</param>
        <summary>Called by a device owner, a profile owner for the primary user or a profile
            owner of an organization-owned managed profile to turn auto time on and off.</summary>
        <remarks>
          <para>Called by a device owner, a profile owner for the primary user or a profile
            owner of an organization-owned managed profile to turn auto time on and off.
            Callers are recommended to use <c>UserManager#DISALLOW_CONFIG_DATE_TIME</c>
            to prevent the user from changing this setting.</para>
          <para>If user restriction <c>UserManager#DISALLOW_CONFIG_DATE_TIME</c> is used,
            no user will be able set the date and time. Instead, the network date
            and time will be used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setAutoTimeEnabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setAutoTimeEnabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAutoTimeRequired">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAutoTimeRequired (admin As ComponentName, required As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAutoTimeRequired(Android::Content::ComponentName ^ admin, bool required);" />
      <MemberSignature Language="C#" Value="public virtual void SetAutoTimeRequired (Android.Content.ComponentName admin, bool required);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAutoTimeRequired(class Android.Content.ComponentName admin, bool required) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetAutoTimeRequired(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetAutoTimeRequired : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetAutoTimeRequired : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetAutoTimeRequired (admin, required)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAutoTimeRequired", "(Landroid/content/ComponentName;Z)V", "GetSetAutoTimeRequired_Landroid_content_ComponentName_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAutoTimeRequired", "(Landroid/content/ComponentName;Z)V", "GetSetAutoTimeRequired_Landroid_content_ComponentName_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="required" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="required">Whether auto time is set required or not.</param>
        <summary>Called by a device owner, or alternatively a profile owner from Android 8.</summary>
        <remarks>
          <para>Called by a device owner, or alternatively a profile owner from Android 8.0 (API level 26) or
            higher, to set whether auto time is required. If auto time is required, no user will be able
            set the date and time and network date and time will be used.</para>
          <para>Note: If auto time is required the user can still manually set the time zone. Staring from
            Android 11, if auto time is required, the user cannot manually set the time zone.</para>
          <para>The calling device admin must be a device owner, or alternatively a profile owner from
            Android 8.0 (API level 26) or higher. If it is not, a security exception will be thrown.</para>
          <para>Staring from Android 11, this API switches to use
            <c>UserManager#DISALLOW_CONFIG_DATE_TIME</c> to enforce the auto time settings. Calling
            this API to enforce auto time will result in
            <c>UserManager#DISALLOW_CONFIG_DATE_TIME</c> being set, while calling this API to lift
            the requirement will result in <c>UserManager#DISALLOW_CONFIG_DATE_TIME</c> being cleared.
            From Android 11, this API can also no longer be called on a managed profile.</para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#R</c>. Use <c>#setAutoTimeEnabled</c>
            to turn auto time on or off and use <c>UserManager#DISALLOW_CONFIG_DATE_TIME</c>
            to prevent the user from changing this setting.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setAutoTimeRequired(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setAutoTimeRequired(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAutoTimeZoneEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAutoTimeZoneEnabled (admin As ComponentName, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAutoTimeZoneEnabled(Android::Content::ComponentName ^ admin, bool enabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetAutoTimeZoneEnabled (Android.Content.ComponentName? admin, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAutoTimeZoneEnabled(class Android.Content.ComponentName admin, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetAutoTimeZoneEnabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetAutoTimeZoneEnabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetAutoTimeZoneEnabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetAutoTimeZoneEnabled (admin, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAutoTimeZoneEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetAutoTimeZoneEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAutoTimeZoneEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetAutoTimeZoneEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.SET_TIME_ZONE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.SET_TIME_ZONE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with or Null if the
                         caller is not a device admin.</param>
        <param name="enabled">Whether time zone should be obtained automatically from the network or not.</param>
        <summary>Called by a device owner, a profile owner for the primary user or a profile
            owner of an organization-owned managed profile to turn auto time zone on and off.</summary>
        <remarks>
          <para>Called by a device owner, a profile owner for the primary user or a profile
            owner of an organization-owned managed profile to turn auto time zone on and off.
            Callers are recommended to use <c>UserManager#DISALLOW_CONFIG_DATE_TIME</c>
            to prevent the user from changing this setting.</para>
          <para>If user restriction <c>UserManager#DISALLOW_CONFIG_DATE_TIME</c> is used,
            no user will be able set the date and time zone. Instead, the network date
            and time zone will be used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setAutoTimeZoneEnabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setAutoTimeZoneEnabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBackupServiceEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetBackupServiceEnabled (admin As ComponentName, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetBackupServiceEnabled(Android::Content::ComponentName ^ admin, bool enabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetBackupServiceEnabled (Android.Content.ComponentName admin, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBackupServiceEnabled(class Android.Content.ComponentName admin, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetBackupServiceEnabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetBackupServiceEnabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetBackupServiceEnabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetBackupServiceEnabled (admin, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setBackupServiceEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetBackupServiceEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setBackupServiceEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetBackupServiceEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="enabled">
          <c>true</c> to enable the backup service, <c>false</c> to disable it.</param>
        <summary>Allows the device owner or profile owner to enable or disable the backup service.</summary>
        <remarks>
          <para>Allows the device owner or profile owner to enable or disable the backup service.</para>
          <para>Each user has its own backup service which manages the backup and restore mechanisms in
            that user. Disabling the backup service will prevent data from being backed up or restored.</para>
          <para>Device owner calls this API to control backup services across all users on the device.
            Profile owner can use this API to enable or disable the profile's backup service. However,
            for a managed profile its backup functionality is only enabled if both the device owner
            and the profile owner have enabled the backup service.</para>
          <para>By default, backup service is disabled on a device with device owner, and within a
            managed profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setBackupServiceEnabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setBackupServiceEnabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBluetoothContactSharingDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetBluetoothContactSharingDisabled (admin As ComponentName, disabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetBluetoothContactSharingDisabled(Android::Content::ComponentName ^ admin, bool disabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetBluetoothContactSharingDisabled (Android.Content.ComponentName admin, bool disabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBluetoothContactSharingDisabled(class Android.Content.ComponentName admin, bool disabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetBluetoothContactSharingDisabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetBluetoothContactSharingDisabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetBluetoothContactSharingDisabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetBluetoothContactSharingDisabled (admin, disabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setBluetoothContactSharingDisabled", "(Landroid/content/ComponentName;Z)V", "GetSetBluetoothContactSharingDisabled_Landroid_content_ComponentName_ZHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setBluetoothContactSharingDisabled", "(Landroid/content/ComponentName;Z)V", "GetSetBluetoothContactSharingDisabled_Landroid_content_ComponentName_ZHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="disabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="disabled">If true, bluetooth devices cannot access enterprise contacts.</param>
        <summary>Called by a profile owner of a managed profile to set whether bluetooth devices can access
            enterprise contacts.</summary>
        <remarks>
          <para>Called by a profile owner of a managed profile to set whether bluetooth devices can access
            enterprise contacts.</para>
          <para>The calling device admin must be a profile owner. If it is not, a security exception will be
            thrown.</para>
          <para>This API works on managed profile only.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setBluetoothContactSharingDisabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setBluetoothContactSharingDisabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCameraDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCameraDisabled (admin As ComponentName, disabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCameraDisabled(Android::Content::ComponentName ^ admin, bool disabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetCameraDisabled (Android.Content.ComponentName? admin, bool disabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCameraDisabled(class Android.Content.ComponentName admin, bool disabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetCameraDisabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetCameraDisabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetCameraDisabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetCameraDisabled (admin, disabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCameraDisabled", "(Landroid/content/ComponentName;Z)V", "GetSetCameraDisabled_Landroid_content_ComponentName_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCameraDisabled", "(Landroid/content/ComponentName;Z)V", "GetSetCameraDisabled_Landroid_content_ComponentName_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CAMERA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CAMERA")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="disabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with or null if
                                 the caller is not a device admin</param>
        <param name="disabled">Whether or not the camera should be disabled.</param>
        <summary>Called by an application that is administering the device to disable all cameras on the
            device, for this user.</summary>
        <remarks>
          <para>Called by an application that is administering the device to disable all cameras on the
            device, for this user. After setting this, no applications running as this user will be able
            to access any cameras on the device.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance,
            returned by <c>#getParentProfileInstance(ComponentName)</c>, where the caller must be
            the profile owner of an organization-owned managed profile.</para>
          <para>If the caller is device owner, then the restriction will be applied to all users. If
            called on the parent instance, then the restriction will be applied on the personal profile.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_DISABLE_CAMERA</c> to be able to call this method; if it has
            not, a security exception will be thrown.</para>
          <para>&lt;b&gt;Note&lt;/b&gt;, this policy type is deprecated for legacy device admins since
            <c>android.os.Build.VERSION_CODES#Q</c>. On Android
            <c>android.os.Build.VERSION_CODES#Q</c> devices, legacy device admins targeting SDK
            version <c>android.os.Build.VERSION_CODES#P</c> or below can still call this API to
            disable camera, while legacy device admins targeting SDK version
            <c>android.os.Build.VERSION_CODES#Q</c> will receive a SecurityException. Starting
            from Android <c>android.os.Build.VERSION_CODES#R</c>, requests to disable camera from
            legacy device admins targeting SDK version <c>android.os.Build.VERSION_CODES#P</c> or
            below will be silently ignored.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, after the camera disabled
            policy has been set, <c>PolicyUpdateReceiver#onPolicySetResult(Context, String,
            Bundle, TargetUser, PolicyUpdateResult)</c> will notify the admin on whether the policy was
            successfully set or not. This callback will contain:
            &lt;ul&gt;
            &lt;li&gt; The policy identifier returned from
            <c>DevicePolicyIdentifiers#getIdentifierForUserRestriction(String)</c> with user restriction
            <c>UserManager#DISALLOW_CAMERA</c>&lt;li&gt; The <c>TargetUser</c> that this policy relates to
            &lt;li&gt; The <c>PolicyUpdateResult</c>, which will be
            <c>PolicyUpdateResult#RESULT_POLICY_SET</c> if the policy was successfully set or the
            reason the policy failed to be set
            (e.g. <c>PolicyUpdateResult#RESULT_FAILURE_CONFLICTING_ADMIN_POLICY</c>)
            &lt;/ul&gt;
            If there has been a change to the policy,
            <c>PolicyUpdateReceiver#onPolicyChanged(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin of this change. This callback will contain the
            same parameters as PolicyUpdateReceiver#onPolicySetResult and the <c>PolicyUpdateResult</c>
            will contain the reason why the policy changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setCameraDisabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setCameraDisabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="SetCertInstallerPackage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCertInstallerPackage (admin As ComponentName, installerPackage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCertInstallerPackage(Android::Content::ComponentName ^ admin, System::String ^ installerPackage);" />
      <MemberSignature Language="C#" Value="public virtual void SetCertInstallerPackage (Android.Content.ComponentName admin, string? installerPackage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCertInstallerPackage(class Android.Content.ComponentName admin, string installerPackage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetCertInstallerPackage(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetCertInstallerPackage : Android.Content.ComponentName * string -&gt; unit&#xA;override this.SetCertInstallerPackage : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.SetCertInstallerPackage (admin, installerPackage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCertInstallerPackage", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetSetCertInstallerPackage_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCertInstallerPackage", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetSetCertInstallerPackage_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="installerPackage" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="installerPackage">The package name of the certificate installer which will be given
                       access. If <c>null</c> is given the current package will be cleared.</param>
        <summary>Called by a profile owner or device owner to grant access to privileged certificate
            manipulation APIs to a third-party certificate installer app.</summary>
        <remarks>
          <para>Called by a profile owner or device owner to grant access to privileged certificate
            manipulation APIs to a third-party certificate installer app. Granted APIs include
            <c>#getInstalledCaCerts</c>, <c>#hasCaCertInstalled</c>, <c>#installCaCert</c>,
            <c>#uninstallCaCert</c>, <c>#uninstallAllUserCaCerts</c> and <c>#installKeyPair</c>.</para>
          <para>Delegated certificate installer is a per-user state. The delegated access is persistent until
            it is later cleared by calling this method with a null value or uninstallling the certificate
            installer.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt;Starting from <c>android.os.Build.VERSION_CODES#N</c>, if the caller
            application's target SDK version is <c>android.os.Build.VERSION_CODES#N</c> or newer, the
            supplied certificate installer package must be installed when calling this API, otherwise an
            <c>IllegalArgumentException</c> will be thrown.</para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#O</c>. Use <c>#setDelegatedScopes</c>
            with the <c>#DELEGATION_CERT_INSTALL</c> scope instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setCertInstallerPackage(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setCertInstallerPackage(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCommonCriteriaModeEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCommonCriteriaModeEnabled (admin As ComponentName, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCommonCriteriaModeEnabled(Android::Content::ComponentName ^ admin, bool enabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetCommonCriteriaModeEnabled (Android.Content.ComponentName? admin, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCommonCriteriaModeEnabled(class Android.Content.ComponentName admin, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetCommonCriteriaModeEnabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetCommonCriteriaModeEnabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetCommonCriteriaModeEnabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetCommonCriteriaModeEnabled (admin, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCommonCriteriaModeEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetCommonCriteriaModeEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCommonCriteriaModeEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetCommonCriteriaModeEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_COMMON_CRITERIA_MODE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_COMMON_CRITERIA_MODE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="enabled">whether Common Criteria mode should be enabled or not.</param>
        <summary>Called by device owner or profile owner of an organization-owned managed profile to toggle
            Common Criteria mode for the device.</summary>
        <remarks>
          <para>Called by device owner or profile owner of an organization-owned managed profile to toggle
            Common Criteria mode for the device. When the device is in Common Criteria mode,
            certain device functionalities are tuned to meet the higher
            security level required by Common Criteria certification. For example:
            &lt;ul&gt;
            &lt;li&gt; Bluetooth long term key material is additionally integrity-protected with AES-GCM. &lt;/li&gt;
            &lt;li&gt; WiFi configuration store is additionally integrity-protected with AES-GCM. &lt;/li&gt;
            &lt;/ul&gt;
            Common Criteria mode is disabled by default.</para>
          <para>&lt;em&gt;Note:&lt;/em&gt; if Common Critera mode is turned off after being enabled previously,
            all existing WiFi configurations will be lost.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setCommonCriteriaModeEnabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setCommonCriteriaModeEnabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetConfiguredNetworksLockdownState">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetConfiguredNetworksLockdownState (admin As ComponentName, lockdown As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetConfiguredNetworksLockdownState(Android::Content::ComponentName ^ admin, bool lockdown);" />
      <MemberSignature Language="C#" Value="public virtual void SetConfiguredNetworksLockdownState (Android.Content.ComponentName? admin, bool lockdown);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetConfiguredNetworksLockdownState(class Android.Content.ComponentName admin, bool lockdown) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetConfiguredNetworksLockdownState(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetConfiguredNetworksLockdownState : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetConfiguredNetworksLockdownState : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetConfiguredNetworksLockdownState (admin, lockdown)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setConfiguredNetworksLockdownState", "(Landroid/content/ComponentName;Z)V", "GetSetConfiguredNetworksLockdownState_Landroid_content_ComponentName_ZHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setConfiguredNetworksLockdownState", "(Landroid/content/ComponentName;Z)V", "GetSetConfiguredNetworksLockdownState_Landroid_content_ComponentName_ZHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIFI")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIFI")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="lockdown" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">admin Which <c>DeviceAdminReceiver</c> this request is associated
                                     with. Null if the caller is not a device admin.</param>
        <param name="lockdown">Whether the admin configured networks should be unmodifiable by the
                                     user.</param>
        <summary>Called by a device owner or a profile owner of an organization-owned managed profile to
            control whether the user can change networks configured by the admin.</summary>
        <remarks>
          <para>Called by a device owner or a profile owner of an organization-owned managed profile to
            control whether the user can change networks configured by the admin. When this lockdown is
            enabled, the user can still configure and connect to other Wi-Fi networks, or use other Wi-Fi
            capabilities such as tethering.</para>
          <para>WiFi network configuration lockdown is controlled by a global settings
            <c>android.provider.Settings.Global#WIFI_DEVICE_OWNER_CONFIGS_LOCKDOWN</c> and calling
            this API effectively modifies the global settings. Previously device owners can also
            control this directly via <c>#setGlobalSetting</c> but they are recommended to switch
            to this API.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setConfiguredNetworksLockdownState(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setConfiguredNetworksLockdownState(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCrossProfileCalendarPackages">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCrossProfileCalendarPackages (admin As ComponentName, packageNames As ICollection(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCrossProfileCalendarPackages(Android::Content::ComponentName ^ admin, System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ packageNames);" />
      <MemberSignature Language="C#" Value="public virtual void SetCrossProfileCalendarPackages (Android.Content.ComponentName admin, System.Collections.Generic.ICollection&lt;string&gt;? packageNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCrossProfileCalendarPackages(class Android.Content.ComponentName admin, class System.Collections.Generic.ICollection`1&lt;string&gt; packageNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetCrossProfileCalendarPackages(Android.Content.ComponentName,System.Collections.Generic.ICollection{System.String})" />
      <MemberSignature Language="F#" Value="abstract member SetCrossProfileCalendarPackages : Android.Content.ComponentName * System.Collections.Generic.ICollection&lt;string&gt; -&gt; unit&#xA;override this.SetCrossProfileCalendarPackages : Android.Content.ComponentName * System.Collections.Generic.ICollection&lt;string&gt; -&gt; unit" Usage="devicePolicyManager.SetCrossProfileCalendarPackages (admin, packageNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCrossProfileCalendarPackages", "(Landroid/content/ComponentName;Ljava/util/Set;)V", "GetSetCrossProfileCalendarPackages_Landroid_content_ComponentName_Ljava_util_Set_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCrossProfileCalendarPackages", "(Landroid/content/ComponentName;Ljava/util/Set;)V", "GetSetCrossProfileCalendarPackages_Landroid_content_ComponentName_Ljava_util_Set_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageNames" Type="System.Collections.Generic.ICollection&lt;System.String&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with</param>
        <param name="packageNames">set of packages to be allowlisted</param>
        <summary>Allows a set of packages to access cross-profile calendar APIs.</summary>
        <remarks>
          <para>Allows a set of packages to access cross-profile calendar APIs.</para>
          <para>Called by a profile owner of a managed profile.</para>
          <para>Calling with a <c>null</c> value for the set disables the restriction so that all
            packages are allowed to access cross-profile calendar APIs. Calling with an empty set
            disallows all packages from accessing cross-profile calendar APIs. If this method isn't
            called, no package is allowed to access cross-profile calendar APIs by default.</para>
          <para>This member is deprecated. Use <c>#setCrossProfilePackages(ComponentName, Set)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setCrossProfileCalendarPackages(android.content.ComponentName,%20java.util.Set%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setCrossProfileCalendarPackages(android.content.ComponentName, java.util.Set&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCrossProfileCallerIdDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCrossProfileCallerIdDisabled (admin As ComponentName, disabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCrossProfileCallerIdDisabled(Android::Content::ComponentName ^ admin, bool disabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetCrossProfileCallerIdDisabled (Android.Content.ComponentName admin, bool disabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCrossProfileCallerIdDisabled(class Android.Content.ComponentName admin, bool disabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetCrossProfileCallerIdDisabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetCrossProfileCallerIdDisabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetCrossProfileCallerIdDisabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetCrossProfileCallerIdDisabled (admin, disabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCrossProfileCallerIdDisabled", "(Landroid/content/ComponentName;Z)V", "GetSetCrossProfileCallerIdDisabled_Landroid_content_ComponentName_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCrossProfileCallerIdDisabled", "(Landroid/content/ComponentName;Z)V", "GetSetCrossProfileCallerIdDisabled_Landroid_content_ComponentName_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="disabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="disabled">If true caller-Id information in the managed profile is not displayed.</param>
        <summary>Called by a profile owner of a managed profile to set whether caller-Id information from the
            managed profile will be shown in the parent profile, for incoming calls.</summary>
        <remarks>
          <para>Called by a profile owner of a managed profile to set whether caller-Id information from the
            managed profile will be shown in the parent profile, for incoming calls.</para>
          <para>The calling device admin must be a profile owner. If it is not, a security exception will be
            thrown.</para>
          <para>Starting with <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, calling this function
            is similar to calling <c>#setManagedProfileCallerIdAccessPolicy(PackagePolicy)</c>
            with a <c>PackagePolicy#PACKAGE_POLICY_BLOCKLIST</c> policy type when <c>disabled</c> is
            false or a <c>PackagePolicy#PACKAGE_POLICY_ALLOWLIST</c> policy type when
            <c>disabled</c> is true.</para>
          <para>This member is deprecated. starting with <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, use
            <c>#setManagedProfileCallerIdAccessPolicy(PackagePolicy)</c> instead</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setCrossProfileCallerIdDisabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setCrossProfileCallerIdDisabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCrossProfileContactsSearchDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCrossProfileContactsSearchDisabled (admin As ComponentName, disabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCrossProfileContactsSearchDisabled(Android::Content::ComponentName ^ admin, bool disabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetCrossProfileContactsSearchDisabled (Android.Content.ComponentName admin, bool disabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCrossProfileContactsSearchDisabled(class Android.Content.ComponentName admin, bool disabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetCrossProfileContactsSearchDisabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetCrossProfileContactsSearchDisabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetCrossProfileContactsSearchDisabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetCrossProfileContactsSearchDisabled (admin, disabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCrossProfileContactsSearchDisabled", "(Landroid/content/ComponentName;Z)V", "GetSetCrossProfileContactsSearchDisabled_Landroid_content_ComponentName_ZHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCrossProfileContactsSearchDisabled", "(Landroid/content/ComponentName;Z)V", "GetSetCrossProfileContactsSearchDisabled_Landroid_content_ComponentName_ZHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="disabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="disabled">If true contacts search in the managed profile is not displayed.</param>
        <summary>Called by a profile owner of a managed profile to set whether contacts search from the
            managed profile will be shown in the parent profile, for incoming calls.</summary>
        <remarks>
          <para>Called by a profile owner of a managed profile to set whether contacts search from the
            managed profile will be shown in the parent profile, for incoming calls.</para>
          <para>The calling device admin must be a profile owner. If it is not, a security exception will be
            thrown.
            
            Starting with <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, calling this function
            is similar to calling <c>#setManagedProfileContactsAccessPolicy(PackagePolicy)</c> with a
            <c>PackagePolicy#PACKAGE_POLICY_BLOCKLIST</c> policy type when <c>disabled</c> is false
            or a <c>PackagePolicy#PACKAGE_POLICY_ALLOWLIST</c> policy type when <c>disabled</c>
            is true.</para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> use
            <c>#setManagedProfileContactsAccessPolicy(PackagePolicy)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setCrossProfileContactsSearchDisabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setCrossProfileContactsSearchDisabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCrossProfilePackages">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetCrossProfilePackages (admin As ComponentName, packageNames As ICollection(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetCrossProfilePackages(Android::Content::ComponentName ^ admin, System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ packageNames);" />
      <MemberSignature Language="C#" Value="public virtual void SetCrossProfilePackages (Android.Content.ComponentName admin, System.Collections.Generic.ICollection&lt;string&gt; packageNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetCrossProfilePackages(class Android.Content.ComponentName admin, class System.Collections.Generic.ICollection`1&lt;string&gt; packageNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetCrossProfilePackages(Android.Content.ComponentName,System.Collections.Generic.ICollection{System.String})" />
      <MemberSignature Language="F#" Value="abstract member SetCrossProfilePackages : Android.Content.ComponentName * System.Collections.Generic.ICollection&lt;string&gt; -&gt; unit&#xA;override this.SetCrossProfilePackages : Android.Content.ComponentName * System.Collections.Generic.ICollection&lt;string&gt; -&gt; unit" Usage="devicePolicyManager.SetCrossProfilePackages (admin, packageNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCrossProfilePackages", "(Landroid/content/ComponentName;Ljava/util/Set;)V", "GetSetCrossProfilePackages_Landroid_content_ComponentName_Ljava_util_Set_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCrossProfilePackages", "(Landroid/content/ComponentName;Ljava/util/Set;)V", "GetSetCrossProfilePackages_Landroid_content_ComponentName_Ljava_util_Set_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageNames" Type="System.Collections.Generic.ICollection&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="admin">the <c>DeviceAdminReceiver</c> this request is associated with</param>
        <param name="packageNames">the new cross-profile package names</param>
        <summary>Sets the set of admin-allowlisted package names that are allowed to request user consent for
            cross-profile communication.</summary>
        <remarks>
          <para>Sets the set of admin-allowlisted package names that are allowed to request user consent for
            cross-profile communication.</para>
          <para>Assumes that the caller is a profile owner and is the given <c>admin</c>.</para>
          <para>Previous calls are overridden by each subsequent call to this method.</para>
          <para>Note that other apps may be able to request user consent for cross-profile communication
            if they have been explicitly allowlisted by the OEM.</para>
          <para>When previously-set cross-profile packages are missing from <c>packageNames</c>, the
            app-op for <c>INTERACT_ACROSS_PROFILES</c> will be reset for those packages. This will not
            occur for packages that are allowlisted by the OEM.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setCrossProfilePackages(android.content.ComponentName,%20java.util.Set%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setCrossProfilePackages(android.content.ComponentName, java.util.Set&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultDialerApplication">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetDefaultDialerApplication (packageName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetDefaultDialerApplication(System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual void SetDefaultDialerApplication (string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultDialerApplication(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetDefaultDialerApplication(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultDialerApplication : string -&gt; unit&#xA;override this.SetDefaultDialerApplication : string -&gt; unit" Usage="devicePolicyManager.SetDefaultDialerApplication packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDefaultDialerApplication", "(Ljava/lang/String;)V", "GetSetDefaultDialerApplication_Ljava_lang_String_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDefaultDialerApplication", "(Ljava/lang/String;)V", "GetSetDefaultDialerApplication_Ljava_lang_String_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package to set as the default dialer application.</param>
        <summary>Must be called by a device owner or a profile owner of an organization-owned managed profile
            to set the default dialer application for the calling user.</summary>
        <remarks>
          <para>Must be called by a device owner or a profile owner of an organization-owned managed profile
            to set the default dialer application for the calling user.</para>
          <para>When the profile owner of an organization-owned managed profile calls this method, it sets
            the default dialer application in the work profile. This is only meaningful when work profile
            telephony is enabled by <c>#setManagedSubscriptionsPolicy</c>.</para>
          <para>If the device does not support telephony (<c>PackageManager#FEATURE_TELEPHONY</c>), calling
            this method will do nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setDefaultDialerApplication(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setDefaultDialerApplication(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultSmsApplication">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetDefaultSmsApplication (admin As ComponentName, packageName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetDefaultSmsApplication(Android::Content::ComponentName ^ admin, System::String ^ packageName);" />
      <MemberSignature Language="C#" Value="public virtual void SetDefaultSmsApplication (Android.Content.ComponentName? admin, string packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDefaultSmsApplication(class Android.Content.ComponentName admin, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetDefaultSmsApplication(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultSmsApplication : Android.Content.ComponentName * string -&gt; unit&#xA;override this.SetDefaultSmsApplication : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.SetDefaultSmsApplication (admin, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDefaultSmsApplication", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetSetDefaultSmsApplication_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDefaultSmsApplication", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetSetDefaultSmsApplication_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_DEFAULT_SMS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_DEFAULT_SMS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="packageName">The name of the package to set as the default SMS application.</param>
        <summary>Must be called by a device owner or a profile owner of an organization-owned managed profile
            to set the default SMS application.</summary>
        <remarks>
          <para>Must be called by a device owner or a profile owner of an organization-owned managed profile
            to set the default SMS application.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance, returned by
            <c>#getParentProfileInstance(ComponentName)</c>, where the caller must be the profile owner
            of an organization-owned managed profile and the package must be a pre-installed system
            package. If called on the parent instance, then the default SMS application is set on the
            personal profile.</para>
          <para>Starting from Android <c>android.os.Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, the profile
            owner of an organization-owned managed profile can also call this method directly (not on the
            parent profile instance) to set the default SMS application in the work profile. This is only
            meaningful when work profile telephony is enabled by <c>#setManagedSubscriptionsPolicy</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setDefaultSmsApplication(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setDefaultSmsApplication(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDelegatedScopes">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetDelegatedScopes (admin As ComponentName, delegatePackage As String, scopes As IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetDelegatedScopes(Android::Content::ComponentName ^ admin, System::String ^ delegatePackage, System::Collections::Generic::IList&lt;System::String ^&gt; ^ scopes);" />
      <MemberSignature Language="C#" Value="public virtual void SetDelegatedScopes (Android.Content.ComponentName admin, string delegatePackage, System.Collections.Generic.IList&lt;string&gt; scopes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDelegatedScopes(class Android.Content.ComponentName admin, string delegatePackage, class System.Collections.Generic.IList`1&lt;string&gt; scopes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetDelegatedScopes(Android.Content.ComponentName,System.String,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="abstract member SetDelegatedScopes : Android.Content.ComponentName * string * System.Collections.Generic.IList&lt;string&gt; -&gt; unit&#xA;override this.SetDelegatedScopes : Android.Content.ComponentName * string * System.Collections.Generic.IList&lt;string&gt; -&gt; unit" Usage="devicePolicyManager.SetDelegatedScopes (admin, delegatePackage, scopes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDelegatedScopes", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/util/List;)V", "GetSetDelegatedScopes_Landroid_content_ComponentName_Ljava_lang_String_Ljava_util_List_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDelegatedScopes", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/util/List;)V", "GetSetDelegatedScopes_Landroid_content_ComponentName_Ljava_lang_String_Ljava_util_List_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="delegatePackage" Type="System.String" />
        <Parameter Name="scopes" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="delegatePackage">The package name of the app which will be given access.</param>
        <param name="scopes">The groups of privileged APIs whose access should be granted to
                       <c>delegatedPackage</c>.</param>
        <summary>Called by a profile owner or device owner to grant access to privileged APIs to another app.</summary>
        <remarks>
          <para>Called by a profile owner or device owner to grant access to privileged APIs to another app.
            Granted APIs are determined by <c>scopes</c>, which is a list of the <c>DELEGATION_*</c>
            constants.</para>
          <para>A broadcast with the <c>#ACTION_APPLICATION_DELEGATION_SCOPES_CHANGED</c> action will be
            sent to the <c>delegatePackage</c> with its new scopes in an <c>ArrayList&lt;String&gt;</c> extra
            under the <c>#EXTRA_DELEGATION_SCOPES</c> key. The broadcast is sent with the
            <c>Intent#FLAG_RECEIVER_REGISTERED_ONLY</c> flag.</para>
          <para>Delegated scopes are a per-user state. The delegated access is persistent until it is later
            cleared by calling this method with an empty <c>scopes</c> list or uninstalling the
            <c>delegatePackage</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setDelegatedScopes(android.content.ComponentName,%20java.lang.String,%20java.util.List%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setDelegatedScopes(android.content.ComponentName, java.lang.String, java.util.List&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDeviceOwnerLockScreenInfo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetDeviceOwnerLockScreenInfo (admin As ComponentName, info As ICharSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetDeviceOwnerLockScreenInfo(Android::Content::ComponentName ^ admin, Java::Lang::ICharSequence ^ info);" />
      <MemberSignature Language="C#" Value="public virtual void SetDeviceOwnerLockScreenInfo (Android.Content.ComponentName admin, Java.Lang.ICharSequence? info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetDeviceOwnerLockScreenInfo(class Android.Content.ComponentName admin, class Java.Lang.ICharSequence info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetDeviceOwnerLockScreenInfo(Android.Content.ComponentName,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member SetDeviceOwnerLockScreenInfo : Android.Content.ComponentName * Java.Lang.ICharSequence -&gt; unit&#xA;override this.SetDeviceOwnerLockScreenInfo : Android.Content.ComponentName * Java.Lang.ICharSequence -&gt; unit" Usage="devicePolicyManager.SetDeviceOwnerLockScreenInfo (admin, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDeviceOwnerLockScreenInfo", "(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V", "GetSetDeviceOwnerLockScreenInfo_Landroid_content_ComponentName_Ljava_lang_CharSequence_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDeviceOwnerLockScreenInfo", "(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V", "GetSetDeviceOwnerLockScreenInfo_Landroid_content_ComponentName_Ljava_lang_CharSequence_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="info" Type="Java.Lang.ICharSequence">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check.</param>
        <param name="info">Device owner information which will be displayed instead of the user owner info.</param>
        <summary>Sets the device owner information to be shown on the lock screen.</summary>
        <remarks>
          <para>Sets the device owner information to be shown on the lock screen.</para>
          <para>Device owner information set using this method overrides any owner information manually set
            by the user and prevents the user from further changing it.</para>
          <para>If the device owner information is <c>null</c> or empty then the device owner info is
            cleared and the user owner info is shown on the lock screen if it is set.</para>
          <para>If the device owner information contains only whitespaces then the message on the lock screen
            will be blank and the user will not be allowed to change it.</para>
          <para>If the device owner information needs to be localized, it is the responsibility of the
            <c>DeviceAdminReceiver</c> to listen to the <c>Intent#ACTION_LOCALE_CHANGED</c> broadcast
            and set a new version of this string accordingly.</para>
          <para>May be called by the device owner or the profile owner of an organization-owned device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setDeviceOwnerLockScreenInfo(android.content.ComponentName,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setDeviceOwnerLockScreenInfo(android.content.ComponentName, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDeviceOwnerLockScreenInfo">
      <MemberSignature Language="VB.NET" Value="Public Sub SetDeviceOwnerLockScreenInfo (admin As ComponentName, info As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDeviceOwnerLockScreenInfo(Android::Content::ComponentName ^ admin, System::String ^ info);" />
      <MemberSignature Language="C#" Value="public void SetDeviceOwnerLockScreenInfo (Android.Content.ComponentName admin, string? info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDeviceOwnerLockScreenInfo(class Android.Content.ComponentName admin, string info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetDeviceOwnerLockScreenInfo(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="member this.SetDeviceOwnerLockScreenInfo : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.SetDeviceOwnerLockScreenInfo (admin, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="info" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">The name of the admin component to check.</param>
        <param name="info">Device owner information which will be displayed instead of the user owner info.</param>
        <summary>Sets the device owner information to be shown on the lock screen.</summary>
        <remarks>
          <para>Sets the device owner information to be shown on the lock screen.</para>
          <para>Device owner information set using this method overrides any owner information manually set
            by the user and prevents the user from further changing it.</para>
          <para>If the device owner information is <c>null</c> or empty then the device owner info is
            cleared and the user owner info is shown on the lock screen if it is set.</para>
          <para>If the device owner information contains only whitespaces then the message on the lock screen
            will be blank and the user will not be allowed to change it.</para>
          <para>If the device owner information needs to be localized, it is the responsibility of the
            <c>DeviceAdminReceiver</c> to listen to the <c>Intent#ACTION_LOCALE_CHANGED</c> broadcast
            and set a new version of this string accordingly.</para>
          <para>May be called by the device owner or the profile owner of an organization-owned device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setDeviceOwnerLockScreenInfo(android.content.ComponentName,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setDeviceOwnerLockScreenInfo(android.content.ComponentName, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEndUserSessionMessage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEndUserSessionMessage (admin As ComponentName, endUserSessionMessage As ICharSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEndUserSessionMessage(Android::Content::ComponentName ^ admin, Java::Lang::ICharSequence ^ endUserSessionMessage);" />
      <MemberSignature Language="C#" Value="public virtual void SetEndUserSessionMessage (Android.Content.ComponentName admin, Java.Lang.ICharSequence? endUserSessionMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEndUserSessionMessage(class Android.Content.ComponentName admin, class Java.Lang.ICharSequence endUserSessionMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetEndUserSessionMessage(Android.Content.ComponentName,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member SetEndUserSessionMessage : Android.Content.ComponentName * Java.Lang.ICharSequence -&gt; unit&#xA;override this.SetEndUserSessionMessage : Android.Content.ComponentName * Java.Lang.ICharSequence -&gt; unit" Usage="devicePolicyManager.SetEndUserSessionMessage (admin, endUserSessionMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setEndUserSessionMessage", "(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V", "GetSetEndUserSessionMessage_Landroid_content_ComponentName_Ljava_lang_CharSequence_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setEndUserSessionMessage", "(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V", "GetSetEndUserSessionMessage_Landroid_content_ComponentName_Ljava_lang_CharSequence_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="endUserSessionMessage" Type="Java.Lang.ICharSequence">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="endUserSessionMessage">message for ending user session, or <c>null</c> to use system
            default message.</param>
        <summary>Called by a device owner to specify the user session end message.</summary>
        <remarks>
          <para>Called by a device owner to specify the user session end message. This may be displayed
            during a user switch.</para>
          <para>The message should be limited to a short statement or it may be truncated.</para>
          <para>If the message needs to be localized, it is the responsibility of the
            <c>DeviceAdminReceiver</c> to listen to the <c>Intent#ACTION_LOCALE_CHANGED</c> broadcast
            and set a new version of this message accordingly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setEndUserSessionMessage(android.content.ComponentName,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setEndUserSessionMessage(android.content.ComponentName, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetEndUserSessionMessage">
      <MemberSignature Language="VB.NET" Value="Public Sub SetEndUserSessionMessage (admin As ComponentName, endUserSessionMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEndUserSessionMessage(Android::Content::ComponentName ^ admin, System::String ^ endUserSessionMessage);" />
      <MemberSignature Language="C#" Value="public void SetEndUserSessionMessage (Android.Content.ComponentName admin, string? endUserSessionMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEndUserSessionMessage(class Android.Content.ComponentName admin, string endUserSessionMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetEndUserSessionMessage(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="member this.SetEndUserSessionMessage : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.SetEndUserSessionMessage (admin, endUserSessionMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="endUserSessionMessage" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="endUserSessionMessage">message for ending user session, or <c>null</c> to use system
            default message.</param>
        <summary>Called by a device owner to specify the user session end message.</summary>
        <remarks>
          <para>Called by a device owner to specify the user session end message. This may be displayed
            during a user switch.</para>
          <para>The message should be limited to a short statement or it may be truncated.</para>
          <para>If the message needs to be localized, it is the responsibility of the
            <c>DeviceAdminReceiver</c> to listen to the <c>Intent#ACTION_LOCALE_CHANGED</c> broadcast
            and set a new version of this message accordingly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setEndUserSessionMessage(android.content.ComponentName,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setEndUserSessionMessage(android.content.ComponentName, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFactoryResetProtectionPolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFactoryResetProtectionPolicy (admin As ComponentName, policy As FactoryResetProtectionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFactoryResetProtectionPolicy(Android::Content::ComponentName ^ admin, Android::App::Admin::FactoryResetProtectionPolicy ^ policy);" />
      <MemberSignature Language="C#" Value="public virtual void SetFactoryResetProtectionPolicy (Android.Content.ComponentName? admin, Android.App.Admin.FactoryResetProtectionPolicy? policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFactoryResetProtectionPolicy(class Android.Content.ComponentName admin, class Android.App.Admin.FactoryResetProtectionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetFactoryResetProtectionPolicy(Android.Content.ComponentName,Android.App.Admin.FactoryResetProtectionPolicy)" />
      <MemberSignature Language="F#" Value="abstract member SetFactoryResetProtectionPolicy : Android.Content.ComponentName * Android.App.Admin.FactoryResetProtectionPolicy -&gt; unit&#xA;override this.SetFactoryResetProtectionPolicy : Android.Content.ComponentName * Android.App.Admin.FactoryResetProtectionPolicy -&gt; unit" Usage="devicePolicyManager.SetFactoryResetProtectionPolicy (admin, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFactoryResetProtectionPolicy", "(Landroid/content/ComponentName;Landroid/app/admin/FactoryResetProtectionPolicy;)V", "GetSetFactoryResetProtectionPolicy_Landroid_content_ComponentName_Landroid_app_admin_FactoryResetProtectionPolicy_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFactoryResetProtectionPolicy", "(Landroid/content/ComponentName;Landroid/app/admin/FactoryResetProtectionPolicy;)V", "GetSetFactoryResetProtectionPolicy_Landroid_content_ComponentName_Landroid_app_admin_FactoryResetProtectionPolicy_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_FACTORY_RESET")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_FACTORY_RESET")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="policy" Type="Android.App.Admin.FactoryResetProtectionPolicy" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin</param>
        <param name="policy">the new FRP policy, or <c>null</c> to clear the current policy.</param>
        <summary>Callable by device owner or profile owner of an organization-owned device, to set a
            factory reset protection (FRP) policy.</summary>
        <remarks>
          <para>Callable by device owner or profile owner of an organization-owned device, to set a
            factory reset protection (FRP) policy. When a new policy is set, the system
            notifies the FRP management agent of a policy change by broadcasting
            <c>ACTION_RESET_PROTECTION_POLICY_CHANGED</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setFactoryResetProtectionPolicy(android.content.ComponentName,%20android.app.admin.FactoryResetProtectionPolicy)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setFactoryResetProtectionPolicy(android.content.ComponentName, android.app.admin.FactoryResetProtectionPolicy)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalPrivateDnsModeOpportunistic">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetGlobalPrivateDnsModeOpportunistic (admin As ComponentName) As PrivateDnsSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Admin::PrivateDnsSet SetGlobalPrivateDnsModeOpportunistic(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.PrivateDnsSet SetGlobalPrivateDnsModeOpportunistic (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.Admin.PrivateDnsSet SetGlobalPrivateDnsModeOpportunistic(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetGlobalPrivateDnsModeOpportunistic(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member SetGlobalPrivateDnsModeOpportunistic : Android.Content.ComponentName -&gt; Android.App.Admin.PrivateDnsSet&#xA;override this.SetGlobalPrivateDnsModeOpportunistic : Android.Content.ComponentName -&gt; Android.App.Admin.PrivateDnsSet" Usage="devicePolicyManager.SetGlobalPrivateDnsModeOpportunistic admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setGlobalPrivateDnsModeOpportunistic", "(Landroid/content/ComponentName;)I", "GetSetGlobalPrivateDnsModeOpportunistic_Landroid_content_ComponentName_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setGlobalPrivateDnsModeOpportunistic", "(Landroid/content/ComponentName;)I", "GetSetGlobalPrivateDnsModeOpportunistic_Landroid_content_ComponentName_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PrivateDnsSet</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Sets the global Private DNS mode to opportunistic.</summary>
        <returns>
          <c>PRIVATE_DNS_SET_NO_ERROR</c> if the mode was set successfully, or
                    <c>PRIVATE_DNS_SET_ERROR_FAILURE_SETTING</c> if it could not be set.</returns>
        <remarks>
          <para>Sets the global Private DNS mode to opportunistic.
            May only be called by the device owner.</para>
          <para>In this mode, the DNS subsystem will attempt a TLS handshake to the network-supplied
            resolver prior to attempting name resolution in cleartext.</para>
          <para>Note: The device owner won't be able to set the global private DNS mode if there are
            unaffiliated secondary users or profiles on the device. It's recommended that affiliation
            ids are set for new users as soon as possible after provisioning via
            <c>#setAffiliationIds</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setGlobalPrivateDnsModeOpportunistic(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setGlobalPrivateDnsModeOpportunistic(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalPrivateDnsModeSpecifiedHost">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetGlobalPrivateDnsModeSpecifiedHost (admin As ComponentName, privateDnsHost As String) As PrivateDnsSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Admin::PrivateDnsSet SetGlobalPrivateDnsModeSpecifiedHost(Android::Content::ComponentName ^ admin, System::String ^ privateDnsHost);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.PrivateDnsSet SetGlobalPrivateDnsModeSpecifiedHost (Android.Content.ComponentName admin, string privateDnsHost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.Admin.PrivateDnsSet SetGlobalPrivateDnsModeSpecifiedHost(class Android.Content.ComponentName admin, string privateDnsHost) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetGlobalPrivateDnsModeSpecifiedHost(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetGlobalPrivateDnsModeSpecifiedHost : Android.Content.ComponentName * string -&gt; Android.App.Admin.PrivateDnsSet&#xA;override this.SetGlobalPrivateDnsModeSpecifiedHost : Android.Content.ComponentName * string -&gt; Android.App.Admin.PrivateDnsSet" Usage="devicePolicyManager.SetGlobalPrivateDnsModeSpecifiedHost (admin, privateDnsHost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setGlobalPrivateDnsModeSpecifiedHost", "(Landroid/content/ComponentName;Ljava/lang/String;)I", "GetSetGlobalPrivateDnsModeSpecifiedHost_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setGlobalPrivateDnsModeSpecifiedHost", "(Landroid/content/ComponentName;Ljava/lang/String;)I", "GetSetGlobalPrivateDnsModeSpecifiedHost_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.PrivateDnsSet</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="privateDnsHost" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="privateDnsHost">The hostname of a server that implements DNS over TLS (RFC7858).</param>
        <summary>Sets the global Private DNS host to be used.</summary>
        <returns>
          <c>PRIVATE_DNS_SET_NO_ERROR</c> if the mode was set successfully,
                    <c>PRIVATE_DNS_SET_ERROR_FAILURE_SETTING</c> if it could not be set or
                    <c>PRIVATE_DNS_SET_ERROR_HOST_NOT_SERVING</c> if the specified host does not
                    implement RFC7858.</returns>
        <remarks>
          <para>Sets the global Private DNS host to be used.
            May only be called by the device owner.</para>
          <para>Note that the method is blocking as it will perform a connectivity check to the resolver,
            to ensure it is valid. Because of that, the method should not be called on any thread that
            relates to user interaction, such as the UI thread.</para>
          <para>In case a VPN is used in conjunction with Private DNS resolver, the Private DNS resolver
            must be reachable both from within and outside the VPN. Otherwise, the device may lose
            the ability to resolve hostnames as system traffic to the resolver may not go through the
            VPN.</para>
          <para>Note: The device owner won't be able to set the global private DNS mode if there are
            unaffiliated secondary users or profiles on the device. It's recommended that affiliation
            ids are set for new users as soon as possible after provisioning via
            <c>#setAffiliationIds</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setGlobalPrivateDnsModeSpecifiedHost(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setGlobalPrivateDnsModeSpecifiedHost(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalSetting">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetGlobalSetting (admin As ComponentName, setting As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetGlobalSetting(Android::Content::ComponentName ^ admin, System::String ^ setting, System::String ^ value);" />
      <MemberSignature Language="C#" Value="public virtual void SetGlobalSetting (Android.Content.ComponentName admin, string? setting, string? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetGlobalSetting(class Android.Content.ComponentName admin, string setting, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetGlobalSetting(Android.Content.ComponentName,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetGlobalSetting : Android.Content.ComponentName * string * string -&gt; unit&#xA;override this.SetGlobalSetting : Android.Content.ComponentName * string * string -&gt; unit" Usage="devicePolicyManager.SetGlobalSetting (admin, setting, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setGlobalSetting", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V", "GetSetGlobalSetting_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setGlobalSetting", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V", "GetSetGlobalSetting_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="setting" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="setting">The name of the setting to update.</param>
        <param name="value">The value to update the setting to.</param>
        <summary>This method is mostly deprecated.</summary>
        <remarks>
          <para>This method is mostly deprecated.
            Most of the settings that still have an effect have dedicated setter methods or user
            restrictions. See individual settings for details.</para>
          <para>Called by device owner to update <c>android.provider.Settings.Global</c> settings.
            Validation that the value of the setting is in the correct form for the setting type should
            be performed by the caller.</para>
          <para>The settings that can be updated with this method are:
            &lt;ul&gt;
            &lt;li&gt;<c>android.provider.Settings.Global#ADB_ENABLED</c> : use
            <c>UserManager#DISALLOW_DEBUGGING_FEATURES</c> instead to restrict users from enabling
            debugging features and this setting to turn adb on.&lt;/li&gt;
            &lt;li&gt;<c>android.provider.Settings.Global#USB_MASS_STORAGE_ENABLED</c>&lt;/li&gt;
            &lt;li&gt;<c>android.provider.Settings.Global#STAY_ON_WHILE_PLUGGED_IN</c> This setting is only
            available from <c>android.os.Build.VERSION_CODES#M</c> onwards and can only be set if
            <c>#setMaximumTimeToLock</c> is not used to set a timeout.&lt;/li&gt;
            &lt;li&gt;<c>android.provider.Settings.Global#WIFI_DEVICE_OWNER_CONFIGS_LOCKDOWN</c>&lt;/li&gt; This
            setting is only available from <c>android.os.Build.VERSION_CODES#M</c> onwards.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>The following settings used to be supported, but can be controlled in other ways:
            &lt;ul&gt;
            &lt;li&gt;<c>android.provider.Settings.Global#AUTO_TIME</c> : Use <c>#setAutoTimeEnabled</c> and
            <c>UserManager#DISALLOW_CONFIG_DATE_TIME</c> instead.&lt;/li&gt;
            &lt;li&gt;<c>android.provider.Settings.Global#AUTO_TIME_ZONE</c> : Use
            <c>#setAutoTimeZoneEnabled</c> and <c>UserManager#DISALLOW_CONFIG_DATE_TIME</c>
            instead.&lt;/li&gt;
            &lt;li&gt;<c>android.provider.Settings.Global#DATA_ROAMING</c> : Use
            <c>UserManager#DISALLOW_DATA_ROAMING</c> instead.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>Changing the following settings has no effect as of <c>android.os.Build.VERSION_CODES#M</c>:
            &lt;ul&gt;
            &lt;li&gt;<c>android.provider.Settings.Global#BLUETOOTH_ON</c>. Use
            <c>android.bluetooth.BluetoothAdapter#enable()</c> and
            <c>android.bluetooth.BluetoothAdapter#disable()</c> instead.&lt;/li&gt;
            &lt;li&gt;<c>android.provider.Settings.Global#DEVELOPMENT_SETTINGS_ENABLED</c>&lt;/li&gt;
            &lt;li&gt;<c>android.provider.Settings.Global#MODE_RINGER</c>. Use
            <c>android.media.AudioManager#setRingerMode(int)</c> instead.&lt;/li&gt;
            &lt;li&gt;<c>android.provider.Settings.Global#NETWORK_PREFERENCE</c>&lt;/li&gt;
            &lt;li&gt;<c>android.provider.Settings.Global#WIFI_ON</c>. Use
            <c>android.net.wifi.WifiManager#setWifiEnabled(boolean)</c> instead.&lt;/li&gt;
            &lt;li&gt;<c>android.provider.Settings.Global#WIFI_SLEEP_POLICY</c>. No longer has effect.&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setGlobalSetting(android.content.ComponentName,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setGlobalSetting(android.content.ComponentName, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeepUninstalledPackages">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetKeepUninstalledPackages (admin As ComponentName, packageNames As IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetKeepUninstalledPackages(Android::Content::ComponentName ^ admin, System::Collections::Generic::IList&lt;System::String ^&gt; ^ packageNames);" />
      <MemberSignature Language="C#" Value="public virtual void SetKeepUninstalledPackages (Android.Content.ComponentName? admin, System.Collections.Generic.IList&lt;string&gt; packageNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetKeepUninstalledPackages(class Android.Content.ComponentName admin, class System.Collections.Generic.IList`1&lt;string&gt; packageNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetKeepUninstalledPackages(Android.Content.ComponentName,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="abstract member SetKeepUninstalledPackages : Android.Content.ComponentName * System.Collections.Generic.IList&lt;string&gt; -&gt; unit&#xA;override this.SetKeepUninstalledPackages : Android.Content.ComponentName * System.Collections.Generic.IList&lt;string&gt; -&gt; unit" Usage="devicePolicyManager.SetKeepUninstalledPackages (admin, packageNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setKeepUninstalledPackages", "(Landroid/content/ComponentName;Ljava/util/List;)V", "GetSetKeepUninstalledPackages_Landroid_content_ComponentName_Ljava_util_List_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setKeepUninstalledPackages", "(Landroid/content/ComponentName;Ljava/util/List;)V", "GetSetKeepUninstalledPackages_Landroid_content_ComponentName_Ljava_util_List_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="packageNames" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                       <c>null</c> if the caller is a keep uninstalled packages delegate.</param>
        <param name="packageNames">List of package names to keep cached.</param>
        <summary>Set a list of apps to keep around as APKs even if no user has currently installed it.</summary>
        <remarks>
          <para>Set a list of apps to keep around as APKs even if no user has currently installed it. This
            function can be called by a device owner or by a delegate given the
            <c>#DELEGATION_KEEP_UNINSTALLED_PACKAGES</c> scope via <c>#setDelegatedScopes</c>.</para>
          <para>Please note that setting this policy does not imply that specified apps will be
            automatically pre-cached.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setKeepUninstalledPackages(android.content.ComponentName,%20java.util.List%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setKeepUninstalledPackages(android.content.ComponentName, java.util.List&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyguardDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetKeyguardDisabled (admin As ComponentName, disabled As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetKeyguardDisabled(Android::Content::ComponentName ^ admin, bool disabled);" />
      <MemberSignature Language="C#" Value="public virtual bool SetKeyguardDisabled (Android.Content.ComponentName admin, bool disabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetKeyguardDisabled(class Android.Content.ComponentName admin, bool disabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetKeyguardDisabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetKeyguardDisabled : Android.Content.ComponentName * bool -&gt; bool&#xA;override this.SetKeyguardDisabled : Android.Content.ComponentName * bool -&gt; bool" Usage="devicePolicyManager.SetKeyguardDisabled (admin, disabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setKeyguardDisabled", "(Landroid/content/ComponentName;Z)Z", "GetSetKeyguardDisabled_Landroid_content_ComponentName_ZHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setKeyguardDisabled", "(Landroid/content/ComponentName;Z)Z", "GetSetKeyguardDisabled_Landroid_content_ComponentName_ZHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="disabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="disabled">
          <c>true</c> disables the keyguard, <c>false</c> reenables it.</param>
        <summary>Called by a device owner or profile owner of secondary users that is affiliated with the
            device to disable the keyguard altogether.</summary>
        <returns>
          <c>false</c> if attempting to disable the keyguard while a lock password was in
                    place. <c>true</c> otherwise.</returns>
        <remarks>
          <para>Called by a device owner or profile owner of secondary users that is affiliated with the
            device to disable the keyguard altogether.</para>
          <para>Setting the keyguard to disabled has the same effect as choosing "None" as the screen lock
            type. However, this call has no effect if a password, pin or pattern is currently set. If a
            password, pin or pattern is set after the keyguard was disabled, the keyguard stops being
            disabled.</para>
          <para>As of <c>android.os.Build.VERSION_CODES#P</c>, this call also dismisses the
            keyguard if it is currently shown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setKeyguardDisabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setKeyguardDisabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetKeyguardDisabledFeatures">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetKeyguardDisabledFeatures (admin As ComponentName, which As KeyguardDisable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetKeyguardDisabledFeatures(Android::Content::ComponentName ^ admin, Android::App::Admin::KeyguardDisable which);" />
      <MemberSignature Language="C#" Value="public virtual void SetKeyguardDisabledFeatures (Android.Content.ComponentName? admin, Android.App.Admin.KeyguardDisable which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetKeyguardDisabledFeatures(class Android.Content.ComponentName admin, valuetype Android.App.Admin.KeyguardDisable which) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetKeyguardDisabledFeatures(Android.Content.ComponentName,Android.App.Admin.KeyguardDisable)" />
      <MemberSignature Language="F#" Value="abstract member SetKeyguardDisabledFeatures : Android.Content.ComponentName * Android.App.Admin.KeyguardDisable -&gt; unit&#xA;override this.SetKeyguardDisabledFeatures : Android.Content.ComponentName * Android.App.Admin.KeyguardDisable -&gt; unit" Usage="devicePolicyManager.SetKeyguardDisabledFeatures (admin, which)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setKeyguardDisabledFeatures", "(Landroid/content/ComponentName;I)V", "GetSetKeyguardDisabledFeatures_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setKeyguardDisabledFeatures", "(Landroid/content/ComponentName;I)V", "GetSetKeyguardDisabledFeatures_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_KEYGUARD")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_KEYGUARD")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="which" Type="Android.App.Admin.KeyguardDisable">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin</param>
        <param name="which">The disabled features flag which can be either
                       <c>#KEYGUARD_DISABLE_FEATURES_NONE</c> (default),
                       <c>#KEYGUARD_DISABLE_FEATURES_ALL</c>, or a combination of
                       <c>#KEYGUARD_DISABLE_WIDGETS_ALL</c>, <c>#KEYGUARD_DISABLE_SECURE_CAMERA</c>,
                       <c>#KEYGUARD_DISABLE_SECURE_NOTIFICATIONS</c>,
                       <c>#KEYGUARD_DISABLE_TRUST_AGENTS</c>,
                       <c>#KEYGUARD_DISABLE_UNREDACTED_NOTIFICATIONS</c>,
                       <c>#KEYGUARD_DISABLE_FINGERPRINT</c>,
                       <c>#KEYGUARD_DISABLE_FACE</c>,
                       <c>#KEYGUARD_DISABLE_IRIS</c>,
                       <c>#KEYGUARD_DISABLE_SHORTCUTS_ALL</c>.</param>
        <summary>Called by an application that is administering the device to disable keyguard customizations,
            such as widgets.</summary>
        <remarks>
          <para>Called by an application that is administering the device to disable keyguard customizations,
            such as widgets. After setting this, keyguard features will be disabled according to the
            provided feature list.</para>
          <para>A calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_DISABLE_KEYGUARD_FEATURES</c> to be able to call this method;
            if it has not, a security exception will be thrown.</para>
          <para>Calling this from a managed profile before version <c>android.os.Build.VERSION_CODES#M</c>
            will throw a security exception. From version <c>android.os.Build.VERSION_CODES#M</c> the
            profile owner of a managed profile can set:
            &lt;ul&gt;
            &lt;li&gt;<c>#KEYGUARD_DISABLE_TRUST_AGENTS</c>, which affects the parent user, but only if there
            is no separate challenge set on the managed profile.
            &lt;li&gt;<c>#KEYGUARD_DISABLE_FINGERPRINT</c>, <c>#KEYGUARD_DISABLE_FACE</c> or
            <c>#KEYGUARD_DISABLE_IRIS</c> which affects the managed profile challenge if
            there is one, or the parent user otherwise.
            &lt;li&gt;<c>#KEYGUARD_DISABLE_UNREDACTED_NOTIFICATIONS</c> which affects notifications generated
            by applications in the managed profile.
            &lt;/ul&gt;</para>
          <para>From version <c>android.os.Build.VERSION_CODES#R</c> the profile owner of an
            organization-owned managed profile can set:
            &lt;ul&gt;
            &lt;li&gt;<c>#KEYGUARD_DISABLE_SECURE_CAMERA</c> which affects the parent user when called on the
            parent profile.
            &lt;li&gt;<c>#KEYGUARD_DISABLE_SECURE_NOTIFICATIONS</c> which affects the parent user when called
            on the parent profile.
            &lt;/ul&gt;
            <c>#KEYGUARD_DISABLE_TRUST_AGENTS</c>, <c>#KEYGUARD_DISABLE_FINGERPRINT</c>,
            <c>#KEYGUARD_DISABLE_FACE</c>, <c>#KEYGUARD_DISABLE_IRIS</c>,
            <c>#KEYGUARD_DISABLE_SECURE_CAMERA</c> and <c>#KEYGUARD_DISABLE_SECURE_NOTIFICATIONS</c>
            can also be set on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set restrictions on the parent
            profile. <c>#KEYGUARD_DISABLE_SECURE_CAMERA</c> can only be set on the parent profile
            instance if the calling device admin is the profile owner of an organization-owned
            managed profile.</para>
          <para>Requests to disable other features on a managed profile will be ignored.</para>
          <para>The admin can check which features have been disabled by calling
            <c>#getKeyguardDisabledFeatures(ComponentName)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setKeyguardDisabledFeatures(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setKeyguardDisabledFeatures(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="SetKeyPairCertificate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetKeyPairCertificate (admin As ComponentName, alias As String, certs As IList(Of Certificate), isUserSelectable As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetKeyPairCertificate(Android::Content::ComponentName ^ admin, System::String ^ alias, System::Collections::Generic::IList&lt;Java::Security::Cert::Certificate ^&gt; ^ certs, bool isUserSelectable);" />
      <MemberSignature Language="C#" Value="public virtual bool SetKeyPairCertificate (Android.Content.ComponentName? admin, string alias, System.Collections.Generic.IList&lt;Java.Security.Cert.Certificate&gt; certs, bool isUserSelectable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetKeyPairCertificate(class Android.Content.ComponentName admin, string alias, class System.Collections.Generic.IList`1&lt;class Java.Security.Cert.Certificate&gt; certs, bool isUserSelectable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetKeyPairCertificate(Android.Content.ComponentName,System.String,System.Collections.Generic.IList{Java.Security.Cert.Certificate},System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetKeyPairCertificate : Android.Content.ComponentName * string * System.Collections.Generic.IList&lt;Java.Security.Cert.Certificate&gt; * bool -&gt; bool&#xA;override this.SetKeyPairCertificate : Android.Content.ComponentName * string * System.Collections.Generic.IList&lt;Java.Security.Cert.Certificate&gt; * bool -&gt; bool" Usage="devicePolicyManager.SetKeyPairCertificate (admin, alias, certs, isUserSelectable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setKeyPairCertificate", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/util/List;Z)Z", "GetSetKeyPairCertificate_Landroid_content_ComponentName_Ljava_lang_String_Ljava_util_List_ZHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setKeyPairCertificate", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/util/List;Z)Z", "GetSetKeyPairCertificate_Landroid_content_ComponentName_Ljava_lang_String_Ljava_util_List_ZHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_CERTIFICATES")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="alias" Type="System.String" />
        <Parameter Name="certs" Type="System.Collections.Generic.IList&lt;Java.Security.Cert.Certificate&gt;" />
        <Parameter Name="isUserSelectable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                       <c>null</c> if the caller is not a device admin.</param>
        <param name="alias">The private key alias under which to install the certificate. The <c>alias</c>
                   should denote an existing private key. If a certificate with that alias already
                   exists, it will be overwritten.</param>
        <param name="certs">The certificate chain to install. The chain should start with the leaf
                   certificate and include the chain of trust in order. This will be returned by
                   <c>android.security.KeyChain#getCertificateChain</c>.</param>
        <param name="isUserSelectable">
          <c>true</c> to indicate that a user can select this key via the
                   certificate selection prompt, <c>false</c> to indicate that this key can only be
                   granted access by implementing
                   <c>android.app.admin.DeviceAdminReceiver#onChoosePrivateKeyAlias</c>.</param>
        <summary>This API can be called by the following to associate certificates with a key pair that was
            generated using <c>#generateKeyPair</c>, and set whether the key is available for the user
            to choose in the certificate selection prompt:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
            &lt;/ul&gt;</summary>
        <returns>
          <c>true</c> if the provided <c>alias</c> exists and the certificates has been
                   successfully associated with it, <c>false</c> otherwise.</returns>
        <remarks>
          <para>This API can be called by the following to associate certificates with a key pair that was
            generated using <c>#generateKeyPair</c>, and set whether the key is available for the user
            to choose in the certificate selection prompt:
            &lt;ul&gt;
               &lt;li&gt;Device owner&lt;/li&gt;
               &lt;li&gt;Profile owner&lt;/li&gt;
               &lt;li&gt;Delegated certificate installer&lt;/li&gt;
               &lt;li&gt;Credential management app&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>From Android <c>android.os.Build.VERSION_CODES#S</c>, the credential management app
            can call this API. If called by the credential management app, the componentName must be
            <c>null</c>. Note, there can only be a credential management app on an unmanaged device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setKeyPairCertificate(android.content.ComponentName,%20java.lang.String,%20java.util.List%3Cjava.security.cert.Certificate%3E,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setKeyPairCertificate(android.content.ComponentName, java.lang.String, java.util.List&lt;java.security.cert.Certificate&gt;, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLocationEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetLocationEnabled (admin As ComponentName, locationEnabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLocationEnabled(Android::Content::ComponentName ^ admin, bool locationEnabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetLocationEnabled (Android.Content.ComponentName admin, bool locationEnabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLocationEnabled(class Android.Content.ComponentName admin, bool locationEnabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetLocationEnabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetLocationEnabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetLocationEnabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetLocationEnabled (admin, locationEnabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLocationEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetLocationEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLocationEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetLocationEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="locationEnabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with</param>
        <param name="locationEnabled">whether location should be enabled or disabled. &lt;b&gt;Note: &lt;/b&gt; on
            <c>android.content.pm.PackageManager#FEATURE_AUTOMOTIVE automotive builds</c>, calls to
            disable will be ignored.</param>
        <summary>Called by device owners to set the user's global location setting.</summary>
        <remarks>
          <para>Called by device owners to set the user's global location setting.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setLocationEnabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setLocationEnabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLockTaskFeatures">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetLockTaskFeatures (admin As ComponentName, flags As LockTaskFeatures)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLockTaskFeatures(Android::Content::ComponentName ^ admin, Android::App::Admin::LockTaskFeatures flags);" />
      <MemberSignature Language="C#" Value="public virtual void SetLockTaskFeatures (Android.Content.ComponentName? admin, Android.App.Admin.LockTaskFeatures flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLockTaskFeatures(class Android.Content.ComponentName admin, valuetype Android.App.Admin.LockTaskFeatures flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetLockTaskFeatures(Android.Content.ComponentName,Android.App.Admin.LockTaskFeatures)" />
      <MemberSignature Language="F#" Value="abstract member SetLockTaskFeatures : Android.Content.ComponentName * Android.App.Admin.LockTaskFeatures -&gt; unit&#xA;override this.SetLockTaskFeatures : Android.Content.ComponentName * Android.App.Admin.LockTaskFeatures -&gt; unit" Usage="devicePolicyManager.SetLockTaskFeatures (admin, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLockTaskFeatures", "(Landroid/content/ComponentName;I)V", "GetSetLockTaskFeatures_Landroid_content_ComponentName_IHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLockTaskFeatures", "(Landroid/content/ComponentName;I)V", "GetSetLockTaskFeatures_Landroid_content_ComponentName_IHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_TASK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_TASK")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="flags" Type="Android.App.Admin.LockTaskFeatures">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <param name="flags">The system features enabled during lock task mode.</param>
        <summary>Sets which system features are enabled when the device runs in lock task mode.</summary>
        <remarks>
          <para>Sets which system features are enabled when the device runs in lock task mode. This method
            doesn't affect the features when lock task mode is inactive. Any system features not included
            in <c>flags</c> are implicitly disabled when calling this method. By default, only
            <c>#LOCK_TASK_FEATURE_GLOBAL_ACTIONS</c> is enabled; all the other features are disabled. To
            disable the global actions dialog, call this method omitting
            <c>#LOCK_TASK_FEATURE_GLOBAL_ACTIONS</c>.</para>
          <para>This method can only be called by the device owner, a profile owner of an affiliated
            user or profile, or the profile owner when no device owner is set or holders of the
            permission <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_LOCK_TASK</c>. See
            <c>#isAffiliatedUser</c>.
            Any features set using this method are cleared if the user becomes unaffiliated.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, after the lock task features
            policy has been set, <c>PolicyUpdateReceiver#onPolicySetResult(Context, String, Bundle,
            TargetUser, PolicyUpdateResult)</c> will notify the admin on whether the policy was
            successfully set or not. This callback will contain:
            &lt;ul&gt;
            &lt;li&gt; The policy identifier <c>DevicePolicyIdentifiers#LOCK_TASK_POLICY</c>&lt;li&gt; The <c>TargetUser</c> that this policy relates to
            &lt;li&gt; The <c>PolicyUpdateResult</c>, which will be
            <c>PolicyUpdateResult#RESULT_POLICY_SET</c> if the policy was successfully set or the
            reason the policy failed to be set
            (e.g. <c>PolicyUpdateResult#RESULT_FAILURE_CONFLICTING_ADMIN_POLICY</c>)
            &lt;/ul&gt;
            If there has been a change to the policy,
            <c>PolicyUpdateReceiver#onPolicyChanged(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin of this change. This callback will contain the
            same parameters as PolicyUpdateReceiver#onPolicySetResult and the <c>PolicyUpdateResult</c>
            will contain the reason why the policy changed.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, lock task features and lock task
            packages are bundled as one policy. A failure to apply one will result in a failure to apply
            the other.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setLockTaskFeatures(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setLockTaskFeatures(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLockTaskPackages">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetLockTaskPackages (admin As ComponentName, packages As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLockTaskPackages(Android::Content::ComponentName ^ admin, cli::array &lt;System::String ^&gt; ^ packages);" />
      <MemberSignature Language="C#" Value="public virtual void SetLockTaskPackages (Android.Content.ComponentName? admin, string[] packages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLockTaskPackages(class Android.Content.ComponentName admin, string[] packages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetLockTaskPackages(Android.Content.ComponentName,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member SetLockTaskPackages : Android.Content.ComponentName * string[] -&gt; unit&#xA;override this.SetLockTaskPackages : Android.Content.ComponentName * string[] -&gt; unit" Usage="devicePolicyManager.SetLockTaskPackages (admin, packages)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLockTaskPackages", "(Landroid/content/ComponentName;[Ljava/lang/String;)V", "GetSetLockTaskPackages_Landroid_content_ComponentName_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLockTaskPackages", "(Landroid/content/ComponentName;[Ljava/lang/String;)V", "GetSetLockTaskPackages_Landroid_content_ComponentName_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_TASK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_TASK")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="packages" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="packages">The list of packages allowed to enter lock task mode</param>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <summary>Sets which packages may enter lock task mode.</summary>
        <remarks>
          <para>Sets which packages may enter lock task mode.</para>
          <para>Any packages that share uid with an allowed package will also be allowed to activate lock
            task. From <c>android.os.Build.VERSION_CODES#M</c> removing packages from the lock task
            package list results in locked tasks belonging to those packages to be finished.</para>
          <para>This function can only be called by the device owner, a profile owner of an affiliated user
            or profile, or the profile owner when no device owner is set or holders of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_LOCK_TASK</c>. See
            <c>#isAffiliatedUser</c>.
            Any package set via this method will be cleared if the user becomes unaffiliated.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, after the lock task policy has
            been set, <c>PolicyUpdateReceiver#onPolicySetResult(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin on whether the policy was successfully set or not.
            This callback will contain:
            &lt;ul&gt;
            &lt;li&gt; The policy identifier <c>DevicePolicyIdentifiers#LOCK_TASK_POLICY</c>&lt;li&gt; The <c>TargetUser</c> that this policy relates to
            &lt;li&gt; The <c>PolicyUpdateResult</c>, which will be
            <c>PolicyUpdateResult#RESULT_POLICY_SET</c> if the policy was successfully set or the
            reason the policy failed to be set
            (e.g. <c>PolicyUpdateResult#RESULT_FAILURE_CONFLICTING_ADMIN_POLICY</c>)
            &lt;/ul&gt;
            If there has been a change to the policy,
            <c>PolicyUpdateReceiver#onPolicyChanged(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin of this change. This callback will contain the
            same parameters as PolicyUpdateReceiver#onPolicySetResult and the <c>PolicyUpdateResult</c>
            will contain the reason why the policy changed.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, lock task features and lock task
            packages are bundled as one policy. A failure to apply one will result in a failure to apply
            the other.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setLockTaskPackages(android.content.ComponentName,%20java.lang.String[])" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setLockTaskPackages(android.content.ComponentName, java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.SecurityException" />
        <altmember cref="M:Android.App.Activity.StartLockTask" />
        <altmember cref="M:Android.App.Admin.DeviceAdminReceiver.OnLockTaskModeEntering(Android.Content.Context, Android.Content.Intent, Android.Content.Intent)" />
        <altmember cref="M:Android.App.Admin.DeviceAdminReceiver.OnLockTaskModeExiting(Android.Content.Context, Android.Content.Intent)" />
        <altmember cref="F:Android.OS.UserManager.DisallowCreateWindows" />
      </Docs>
    </Member>
    <Member MemberName="SetLogoutEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetLogoutEnabled (admin As ComponentName, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLogoutEnabled(Android::Content::ComponentName ^ admin, bool enabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetLogoutEnabled (Android.Content.ComponentName admin, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLogoutEnabled(class Android.Content.ComponentName admin, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetLogoutEnabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetLogoutEnabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetLogoutEnabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetLogoutEnabled (admin, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLogoutEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetLogoutEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLogoutEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetLogoutEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="enabled">whether logout should be enabled or not.</param>
        <summary>Called by a device owner to specify whether logout is enabled for all secondary users.</summary>
        <remarks>
          <para>Called by a device owner to specify whether logout is enabled for all secondary users. The
            system may show a logout button that stops the user and switches back to the primary user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setLogoutEnabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setLogoutEnabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLongSupportMessage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetLongSupportMessage (admin As ComponentName, message As ICharSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetLongSupportMessage(Android::Content::ComponentName ^ admin, Java::Lang::ICharSequence ^ message);" />
      <MemberSignature Language="C#" Value="public virtual void SetLongSupportMessage (Android.Content.ComponentName admin, Java.Lang.ICharSequence? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetLongSupportMessage(class Android.Content.ComponentName admin, class Java.Lang.ICharSequence message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetLongSupportMessage(Android.Content.ComponentName,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member SetLongSupportMessage : Android.Content.ComponentName * Java.Lang.ICharSequence -&gt; unit&#xA;override this.SetLongSupportMessage : Android.Content.ComponentName * Java.Lang.ICharSequence -&gt; unit" Usage="devicePolicyManager.SetLongSupportMessage (admin, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setLongSupportMessage", "(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V", "GetSetLongSupportMessage_Landroid_content_ComponentName_Ljava_lang_CharSequence_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setLongSupportMessage", "(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V", "GetSetLongSupportMessage_Landroid_content_ComponentName_Ljava_lang_CharSequence_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="message" Type="Java.Lang.ICharSequence">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="message">Long message to be displayed to the user in settings or null to clear the
                       existing message.</param>
        <summary>Called by a device admin to set the long support message.</summary>
        <remarks>
          <para>Called by a device admin to set the long support message. This will be displayed to the user
            in the device administrators settings screen. If the message is longer than 20000 characters
            it may be truncated.</para>
          <para>If the long support message needs to be localized, it is the responsibility of the
            <c>DeviceAdminReceiver</c> to listen to the <c>Intent#ACTION_LOCALE_CHANGED</c> broadcast
            and set a new version of this string accordingly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setLongSupportMessage(android.content.ComponentName,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setLongSupportMessage(android.content.ComponentName, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetLongSupportMessage">
      <MemberSignature Language="VB.NET" Value="Public Sub SetLongSupportMessage (admin As ComponentName, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetLongSupportMessage(Android::Content::ComponentName ^ admin, System::String ^ message);" />
      <MemberSignature Language="C#" Value="public void SetLongSupportMessage (Android.Content.ComponentName admin, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetLongSupportMessage(class Android.Content.ComponentName admin, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetLongSupportMessage(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="member this.SetLongSupportMessage : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.SetLongSupportMessage (admin, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="message" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="message">Long message to be displayed to the user in settings or null to clear the
                       existing message.</param>
        <summary>Called by a device admin to set the long support message.</summary>
        <remarks>
          <para>Called by a device admin to set the long support message. This will be displayed to the user
            in the device administrators settings screen. If the message is longer than 20000 characters
            it may be truncated.</para>
          <para>If the long support message needs to be localized, it is the responsibility of the
            <c>DeviceAdminReceiver</c> to listen to the <c>Intent#ACTION_LOCALE_CHANGED</c> broadcast
            and set a new version of this string accordingly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setLongSupportMessage(android.content.ComponentName,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setLongSupportMessage(android.content.ComponentName, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetManagedProfileMaximumTimeOff">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetManagedProfileMaximumTimeOff (admin As ComponentName, timeoutMillis As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetManagedProfileMaximumTimeOff(Android::Content::ComponentName ^ admin, long timeoutMillis);" />
      <MemberSignature Language="C#" Value="public virtual void SetManagedProfileMaximumTimeOff (Android.Content.ComponentName admin, long timeoutMillis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetManagedProfileMaximumTimeOff(class Android.Content.ComponentName admin, int64 timeoutMillis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetManagedProfileMaximumTimeOff(Android.Content.ComponentName,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetManagedProfileMaximumTimeOff : Android.Content.ComponentName * int64 -&gt; unit&#xA;override this.SetManagedProfileMaximumTimeOff : Android.Content.ComponentName * int64 -&gt; unit" Usage="devicePolicyManager.SetManagedProfileMaximumTimeOff (admin, timeoutMillis)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setManagedProfileMaximumTimeOff", "(Landroid/content/ComponentName;J)V", "GetSetManagedProfileMaximumTimeOff_Landroid_content_ComponentName_JHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setManagedProfileMaximumTimeOff", "(Landroid/content/ComponentName;J)V", "GetSetManagedProfileMaximumTimeOff_Landroid_content_ComponentName_JHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="timeoutMillis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with</param>
        <param name="timeoutMillis">Maximum time the profile is allowed to be off in milliseconds or 0 if
                   not limited. The minimum non-zero value corresponds to 72 hours. If an admin sets a
                   smaller non-zero vaulue, 72 hours will be set instead.</param>
        <summary>Called by a profile owner of an organization-owned managed profile to set maximum time
            the profile is allowed to be turned off.</summary>
        <remarks>
          <para>Called by a profile owner of an organization-owned managed profile to set maximum time
            the profile is allowed to be turned off. If the profile is turned off for longer, personal
            apps are suspended on the device.</para>
          <para>When personal apps are suspended, an ongoing notification about that is shown to the user.
            When the user taps the notification, system invokes <c>#ACTION_CHECK_POLICY_COMPLIANCE</c>
            in the profile owner package. Profile owner implementation that uses personal apps suspension
            must handle this intent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setManagedProfileMaximumTimeOff(android.content.ComponentName,%20long)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setManagedProfileMaximumTimeOff(android.content.ComponentName, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMasterVolumeMuted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMasterVolumeMuted (admin As ComponentName, on As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMasterVolumeMuted(Android::Content::ComponentName ^ admin, bool on);" />
      <MemberSignature Language="C#" Value="public virtual void SetMasterVolumeMuted (Android.Content.ComponentName admin, bool on);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMasterVolumeMuted(class Android.Content.ComponentName admin, bool on) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetMasterVolumeMuted(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetMasterVolumeMuted : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetMasterVolumeMuted : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetMasterVolumeMuted (admin, on)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMasterVolumeMuted", "(Landroid/content/ComponentName;Z)V", "GetSetMasterVolumeMuted_Landroid_content_ComponentName_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMasterVolumeMuted", "(Landroid/content/ComponentName;Z)V", "GetSetMasterVolumeMuted_Landroid_content_ComponentName_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="on" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="on">
          <c>true</c> to mute global volume, <c>false</c> to turn mute off.</param>
        <summary>Called by profile or device owners to set the global volume mute on or off.</summary>
        <remarks>
          <para>Called by profile or device owners to set the global volume mute on or off.
            This has no effect when set on a managed profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setMasterVolumeMuted(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setMasterVolumeMuted(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMaximumFailedPasswordsForWipe">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMaximumFailedPasswordsForWipe (admin As ComponentName, num As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMaximumFailedPasswordsForWipe(Android::Content::ComponentName ^ admin, int num);" />
      <MemberSignature Language="C#" Value="public virtual void SetMaximumFailedPasswordsForWipe (Android.Content.ComponentName? admin, int num);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaximumFailedPasswordsForWipe(class Android.Content.ComponentName admin, int32 num) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetMaximumFailedPasswordsForWipe(Android.Content.ComponentName,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetMaximumFailedPasswordsForWipe : Android.Content.ComponentName * int -&gt; unit&#xA;override this.SetMaximumFailedPasswordsForWipe : Android.Content.ComponentName * int -&gt; unit" Usage="devicePolicyManager.SetMaximumFailedPasswordsForWipe (admin, num)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMaximumFailedPasswordsForWipe", "(Landroid/content/ComponentName;I)V", "GetSetMaximumFailedPasswordsForWipe_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMaximumFailedPasswordsForWipe", "(Landroid/content/ComponentName;I)V", "GetSetMaximumFailedPasswordsForWipe_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIPE_DATA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIPE_DATA")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="num" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="num">The number of failed password attempts at which point the device or profile will
                       be wiped.</param>
        <summary>Setting this to a value greater than zero enables a policy that will perform a
            device or profile wipe after too many incorrect device-unlock passwords have been entered.</summary>
        <remarks>
          <para>Setting this to a value greater than zero enables a policy that will perform a
            device or profile wipe after too many incorrect device-unlock passwords have been entered.
            This policy combines watching for failed passwords and wiping the device, and
            requires that calling Device Admins request both
            <c>DeviceAdminInfo#USES_POLICY_WATCH_LOGIN</c> and
            <c>DeviceAdminInfo#USES_POLICY_WIPE_DATA</c>}.</para>
          <para>When this policy is set on the system or the main user, the device will be factory reset
            after too many incorrect password attempts. When set on any other user, only the
            corresponding user or profile will be wiped.</para>
          <para>To implement any other policy (e.g. wiping data for a particular application only, erasing or
            revoking credentials, or reporting the failure to a server), you should implement
            <c>DeviceAdminReceiver#onPasswordFailed(Context, android.content.Intent)</c> instead. Do not
            use this API, because if the maximum count is reached, the device or profile will be wiped
            immediately, and your callback will not be invoked.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set a value on the parent
            profile.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always empty and this method has no effect - i.e. the policy is not set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setMaximumFailedPasswordsForWipe(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setMaximumFailedPasswordsForWipe(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetMaximumTimeToLock">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetMaximumTimeToLock (admin As ComponentName, timeMs As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetMaximumTimeToLock(Android::Content::ComponentName ^ admin, long timeMs);" />
      <MemberSignature Language="C#" Value="public virtual void SetMaximumTimeToLock (Android.Content.ComponentName? admin, long timeMs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetMaximumTimeToLock(class Android.Content.ComponentName admin, int64 timeMs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetMaximumTimeToLock(Android.Content.ComponentName,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetMaximumTimeToLock : Android.Content.ComponentName * int64 -&gt; unit&#xA;override this.SetMaximumTimeToLock : Android.Content.ComponentName * int64 -&gt; unit" Usage="devicePolicyManager.SetMaximumTimeToLock (admin, timeMs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMaximumTimeToLock", "(Landroid/content/ComponentName;J)V", "GetSetMaximumTimeToLock_Landroid_content_ComponentName_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMaximumTimeToLock", "(Landroid/content/ComponentName;J)V", "GetSetMaximumTimeToLock_Landroid_content_ComponentName_JHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="timeMs" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin</param>
        <param name="timeMs">The new desired maximum time to lock in milliseconds. A value of 0 means there
                       is no restriction.</param>
        <summary>Called by an application that is administering the device to set the maximum time for user
            activity until the device will lock.</summary>
        <remarks>
          <para>Called by an application that is administering the device to set the maximum time for user
            activity until the device will lock. This limits the length that the user can set. It takes
            effect immediately.</para>
          <para>A calling device admin must have requested <c>DeviceAdminInfo#USES_POLICY_FORCE_LOCK</c>
            to be able to call this method; if it has not, a security exception will be thrown.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set restrictions on the parent
            profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setMaximumTimeToLock(android.content.ComponentName,%20long)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setMaximumTimeToLock(android.content.ComponentName, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetMeteredDataDisabledPackages">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetMeteredDataDisabledPackages (admin As ComponentName, packageNames As IList(Of String)) As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ SetMeteredDataDisabledPackages(Android::Content::ComponentName ^ admin, System::Collections::Generic::IList&lt;System::String ^&gt; ^ packageNames);" />
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; SetMeteredDataDisabledPackages (Android.Content.ComponentName admin, System.Collections.Generic.IList&lt;string&gt; packageNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; SetMeteredDataDisabledPackages(class Android.Content.ComponentName admin, class System.Collections.Generic.IList`1&lt;string&gt; packageNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetMeteredDataDisabledPackages(Android.Content.ComponentName,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="abstract member SetMeteredDataDisabledPackages : Android.Content.ComponentName * System.Collections.Generic.IList&lt;string&gt; -&gt; System.Collections.Generic.IList&lt;string&gt;&#xA;override this.SetMeteredDataDisabledPackages : Android.Content.ComponentName * System.Collections.Generic.IList&lt;string&gt; -&gt; System.Collections.Generic.IList&lt;string&gt;" Usage="devicePolicyManager.SetMeteredDataDisabledPackages (admin, packageNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setMeteredDataDisabledPackages", "(Landroid/content/ComponentName;Ljava/util/List;)Ljava/util/List;", "GetSetMeteredDataDisabledPackages_Landroid_content_ComponentName_Ljava_util_List_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setMeteredDataDisabledPackages", "(Landroid/content/ComponentName;Ljava/util/List;)Ljava/util/List;", "GetSetMeteredDataDisabledPackages_Landroid_content_ComponentName_Ljava_util_List_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageNames" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="packageNames">the list of package names to be restricted.</param>
        <summary>Called by a device or profile owner to restrict packages from using metered data.</summary>
        <returns>a list of package names which could not be restricted.</returns>
        <remarks>
          <para>Called by a device or profile owner to restrict packages from using metered data.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setMeteredDataDisabledPackages(android.content.ComponentName,%20java.util.List%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setMeteredDataDisabledPackages(android.content.ComponentName, java.util.List&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNetworkLoggingEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetNetworkLoggingEnabled (admin As ComponentName, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetNetworkLoggingEnabled(Android::Content::ComponentName ^ admin, bool enabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetNetworkLoggingEnabled (Android.Content.ComponentName? admin, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetNetworkLoggingEnabled(class Android.Content.ComponentName admin, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetNetworkLoggingEnabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetNetworkLoggingEnabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetNetworkLoggingEnabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetNetworkLoggingEnabled (admin, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setNetworkLoggingEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetNetworkLoggingEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setNetworkLoggingEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetNetworkLoggingEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                   <c>null</c> if called by a delegated app.</param>
        <param name="enabled">whether network logging should be enabled or not.</param>
        <summary>Called by a device owner, profile owner of a managed profile or delegated app with
            <c>#DELEGATION_NETWORK_LOGGING</c> to control the network logging feature.</summary>
        <remarks>
          <para>Called by a device owner, profile owner of a managed profile or delegated app with
            <c>#DELEGATION_NETWORK_LOGGING</c> to control the network logging feature.</para>
          <para>Supported for a device owner from Android 8 and a delegated app granted by a device
            owner from Android 10. Supported for a profile owner of a managed profile and a delegated
            app granted by a profile owner from Android 12. When network logging is enabled by a
            profile owner, the network logs will only include work profile network activity, not
            activity on the personal profile.</para>
          <para>Network logs contain DNS lookup and connect() library call events. The following library
                functions are recorded while network logging is active:
                &lt;ul&gt;
                  &lt;li&gt;<c>getaddrinfo()</c>&lt;/li&gt;
                  &lt;li&gt;<c>gethostbyname()</c>&lt;/li&gt;
                  &lt;li&gt;<c>connect()</c>&lt;/li&gt;
                &lt;/ul&gt;</para>
          <para>Network logging is a low-overhead tool for forensics but it is not guaranteed to use
                full system call logging; event reporting is enabled by default for all processes but not
                strongly enforced.
                Events from applications using alternative implementations of libc, making direct kernel
                calls, or deliberately obfuscating traffic may not be recorded.</para>
          <para>Some common network events may not be reported. For example:
                &lt;ul&gt;
                  &lt;li&gt;Applications may hardcode IP addresses to reduce the number of DNS lookups, or use
                      an alternative system for name resolution, and so avoid calling
                      <c>getaddrinfo()</c> or <c>gethostbyname</c>.&lt;/li&gt;
                  &lt;li&gt;Applications may use datagram sockets for performance reasons, for example
                      for a game client. Calling <c>connect()</c> is unnecessary for this kind of
                      socket, so it will not trigger a network event.&lt;/li&gt;
                &lt;/ul&gt;</para>
          <para>It is possible to directly intercept layer 3 traffic leaving the device using an
                always-on VPN service.
                See <c>#setAlwaysOnVpnPackage(ComponentName, String, boolean)</c>
                and <c>android.net.VpnService</c> for details.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; The device owner won't be able to retrieve network logs if there
            are unaffiliated secondary users or profiles on the device, regardless of whether the
            feature is enabled. Logs will be discarded if the internal buffer fills up while waiting for
            all users to become affiliated. Therefore it's recommended that affiliation ids are set for
            new users as soon as possible after provisioning via <c>#setAffiliationIds</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setNetworkLoggingEnabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setNetworkLoggingEnabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOrganizationColor">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOrganizationColor (admin As ComponentName, color As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOrganizationColor(Android::Content::ComponentName ^ admin, Android::Graphics::Color color);" />
      <MemberSignature Language="C#" Value="public virtual void SetOrganizationColor (Android.Content.ComponentName admin, Android.Graphics.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOrganizationColor(class Android.Content.ComponentName admin, valuetype Android.Graphics.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetOrganizationColor(Android.Content.ComponentName,Android.Graphics.Color)" />
      <MemberSignature Language="F#" Value="abstract member SetOrganizationColor : Android.Content.ComponentName * Android.Graphics.Color -&gt; unit&#xA;override this.SetOrganizationColor : Android.Content.ComponentName * Android.Graphics.Color -&gt; unit" Usage="devicePolicyManager.SetOrganizationColor (admin, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOrganizationColor", "(Landroid/content/ComponentName;I)V", "GetSetOrganizationColor_Landroid_content_ComponentName_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOrganizationColor", "(Landroid/content/ComponentName;I)V", "GetSetOrganizationColor_Landroid_content_ComponentName_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="color" Type="Android.Graphics.Color" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="color">The 24bit (0xRRGGBB) representation of the color to be used.</param>
        <summary>Called by a profile owner of a managed profile to set the color used for customization.</summary>
        <remarks>
          <para>Called by a profile owner of a managed profile to set the color used for customization. This
            color is used as background color of the confirm credentials screen for that user. The
            default color is teal (#00796B).</para>
          <para>The confirm credentials screen can be created using
            <c>android.app.KeyguardManager#createConfirmDeviceCredentialIntent</c>.</para>
          <para>Starting from Android R, the organization color will no longer be used as the background
            color of the confirm credentials screen.</para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#R</c>, the organization color is never
            used as the background color of the confirm credentials screen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setOrganizationColor(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setOrganizationColor(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOrganizationId">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOrganizationId (enterpriseId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOrganizationId(System::String ^ enterpriseId);" />
      <MemberSignature Language="C#" Value="public virtual void SetOrganizationId (string enterpriseId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOrganizationId(string enterpriseId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetOrganizationId(System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetOrganizationId : string -&gt; unit&#xA;override this.SetOrganizationId : string -&gt; unit" Usage="devicePolicyManager.SetOrganizationId enterpriseId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOrganizationId", "(Ljava/lang/String;)V", "GetSetOrganizationId_Ljava_lang_String_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOrganizationId", "(Ljava/lang/String;)V", "GetSetOrganizationId_Ljava_lang_String_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enterpriseId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enterpriseId">An identifier of the organization this work profile or device is
                                enrolled into.</param>
        <summary>Sets the Enterprise ID for the work profile or managed device.</summary>
        <remarks>
          <para>Sets the Enterprise ID for the work profile or managed device. This is a requirement for
            generating an enrollment-specific ID for the device, see <c>#getEnrollmentSpecificId()</c>.
            
            It is recommended that the Enterprise ID is at least 6 characters long, and no more than
            64 characters.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setOrganizationId(java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setOrganizationId(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOrganizationName">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOrganizationName (admin As ComponentName, title As ICharSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOrganizationName(Android::Content::ComponentName ^ admin, Java::Lang::ICharSequence ^ title);" />
      <MemberSignature Language="C#" Value="public virtual void SetOrganizationName (Android.Content.ComponentName? admin, Java.Lang.ICharSequence? title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOrganizationName(class Android.Content.ComponentName admin, class Java.Lang.ICharSequence title) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetOrganizationName(Android.Content.ComponentName,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member SetOrganizationName : Android.Content.ComponentName * Java.Lang.ICharSequence -&gt; unit&#xA;override this.SetOrganizationName : Android.Content.ComponentName * Java.Lang.ICharSequence -&gt; unit" Usage="devicePolicyManager.SetOrganizationName (admin, title)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOrganizationName", "(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V", "GetSetOrganizationName_Landroid_content_ComponentName_Ljava_lang_CharSequence_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOrganizationName", "(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V", "GetSetOrganizationName_Landroid_content_ComponentName_Ljava_lang_CharSequence_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_ORGANIZATION_IDENTITY")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_ORGANIZATION_IDENTITY")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="title" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <param name="title">The organization name or <c>null</c> to clear a previously set name.</param>
        <summary>Called by the device owner (since API 26) or profile owner (since API 24) to set the name of
            the organization under management.</summary>
        <remarks>
          <para>Called by the device owner (since API 26) or profile owner (since API 24) to set the name of
            the organization under management.</para>
          <para>If the organization name needs to be localized, it is the responsibility of the caller
            to listen to the <c>Intent#ACTION_LOCALE_CHANGED</c> broadcast and set a new version of this
            string accordingly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setOrganizationName(android.content.ComponentName,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setOrganizationName(android.content.ComponentName, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOrganizationName">
      <MemberSignature Language="VB.NET" Value="Public Sub SetOrganizationName (admin As ComponentName, title As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetOrganizationName(Android::Content::ComponentName ^ admin, System::String ^ title);" />
      <MemberSignature Language="C#" Value="public void SetOrganizationName (Android.Content.ComponentName? admin, string? title);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOrganizationName(class Android.Content.ComponentName admin, string title) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetOrganizationName(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="member this.SetOrganizationName : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.SetOrganizationName (admin, title)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="title" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <param name="title">The organization name or <c>null</c> to clear a previously set name.</param>
        <summary>Called by the device owner (since API 26) or profile owner (since API 24) to set the name of
            the organization under management.</summary>
        <remarks>
          <para>Called by the device owner (since API 26) or profile owner (since API 24) to set the name of
            the organization under management.</para>
          <para>If the organization name needs to be localized, it is the responsibility of the caller
            to listen to the <c>Intent#ACTION_LOCALE_CHANGED</c> broadcast and set a new version of this
            string accordingly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setOrganizationName(android.content.ComponentName,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setOrganizationName(android.content.ComponentName, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOverrideApnsEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOverrideApnsEnabled (admin As ComponentName, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOverrideApnsEnabled(Android::Content::ComponentName ^ admin, bool enabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetOverrideApnsEnabled (Android.Content.ComponentName admin, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOverrideApnsEnabled(class Android.Content.ComponentName admin, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetOverrideApnsEnabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetOverrideApnsEnabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetOverrideApnsEnabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetOverrideApnsEnabled (admin, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOverrideApnsEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetOverrideApnsEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOverrideApnsEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetOverrideApnsEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with</param>
        <param name="enabled">
          <c>true</c> if override APNs should be enabled, <c>false</c> otherwise</param>
        <summary>Called by device owner to set if override APNs should be enabled.</summary>
        <remarks>
          <para>Called by device owner to set if override APNs should be enabled.</para>
          <para>Override APNs are separated from other APNs on the device, and can only be inserted or
            modified by the device owner. When enabled, only override APNs are in use, any other APNs
            are ignored.</para>
          <para>Note: Enterprise APNs added by managed profile owners do not need to be enabled by
            this API. They are part of the preferential network service config and is controlled by
            <c>#setPreferentialNetworkServiceConfigs</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setOverrideApnsEnabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setOverrideApnsEnabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPackagesSuspended">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPackagesSuspended (admin As ComponentName, packageNames As String(), suspended As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ SetPackagesSuspended(Android::Content::ComponentName ^ admin, cli::array &lt;System::String ^&gt; ^ packageNames, bool suspended);" />
      <MemberSignature Language="C#" Value="public virtual string[] SetPackagesSuspended (Android.Content.ComponentName? admin, string[] packageNames, bool suspended);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] SetPackagesSuspended(class Android.Content.ComponentName admin, string[] packageNames, bool suspended) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPackagesSuspended(Android.Content.ComponentName,System.String[],System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetPackagesSuspended : Android.Content.ComponentName * string[] * bool -&gt; string[]&#xA;override this.SetPackagesSuspended : Android.Content.ComponentName * string[] * bool -&gt; string[]" Usage="devicePolicyManager.SetPackagesSuspended (admin, packageNames, suspended)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPackagesSuspended", "(Landroid/content/ComponentName;[Ljava/lang/String;Z)[Ljava/lang/String;", "GetSetPackagesSuspended_Landroid_content_ComponentName_arrayLjava_lang_String_ZHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPackagesSuspended", "(Landroid/content/ComponentName;[Ljava/lang/String;Z)[Ljava/lang/String;", "GetSetPackagesSuspended_Landroid_content_ComponentName_arrayLjava_lang_String_ZHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PACKAGE_STATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_PACKAGE_STATE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="packageNames" Type="System.String[]" />
        <Parameter Name="suspended" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="packageNames">The package names to suspend or unsuspend.</param>
        <param name="suspended">If set to <c>true</c> than the packages will be suspended, if set to
                       <c>false</c> the packages will be unsuspended.</param>
        <summary>Called by device or profile owners to suspend packages for this user.</summary>
        <returns>an array of package names for which the suspended status is not set as requested in
                    this method.</returns>
        <remarks>
          <para>Called by device or profile owners to suspend packages for this user. This function can be
            called by a device owner, profile owner, or by a delegate given the
            <c>#DELEGATION_PACKAGE_ACCESS</c> scope via <c>#setDelegatedScopes</c>.</para>
          <para>A suspended package will not be able to start activities. Its notifications will be hidden,
            it will not show up in recents, will not be able to show toasts or dialogs or ring the
            device.</para>
          <para>The package must already be installed. If the package is uninstalled while suspended the
            package will no longer be suspended. The admin can block this by using
            <c>#setUninstallBlocked</c>.</para>
          <para>Some apps cannot be suspended, such as device admins, the active launcher, the required
            package installer, the required package uninstaller, the required package verifier, the
            default dialer, and the permission controller.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPackagesSuspended(android.content.ComponentName,%20java.lang.String[],%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPackagesSuspended(android.content.ComponentName, java.lang.String[], boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPasswordExpirationTimeout">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPasswordExpirationTimeout (admin As ComponentName, timeout As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPasswordExpirationTimeout(Android::Content::ComponentName ^ admin, long timeout);" />
      <MemberSignature Language="C#" Value="public virtual void SetPasswordExpirationTimeout (Android.Content.ComponentName? admin, long timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordExpirationTimeout(class Android.Content.ComponentName admin, int64 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPasswordExpirationTimeout(Android.Content.ComponentName,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetPasswordExpirationTimeout : Android.Content.ComponentName * int64 -&gt; unit&#xA;override this.SetPasswordExpirationTimeout : Android.Content.ComponentName * int64 -&gt; unit" Usage="devicePolicyManager.SetPasswordExpirationTimeout (admin, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPasswordExpirationTimeout", "(Landroid/content/ComponentName;J)V", "GetSetPasswordExpirationTimeout_Landroid_content_ComponentName_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPasswordExpirationTimeout", "(Landroid/content/ComponentName;J)V", "GetSetPasswordExpirationTimeout_Landroid_content_ComponentName_JHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="timeout" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin</param>
        <param name="timeout">The limit (in ms) that a password can remain in effect. A value of 0 means
                       there is no restriction (unlimited).</param>
        <summary>Called by a device admin to set the password expiration timeout.</summary>
        <remarks>
          <para>Called by a device admin to set the password expiration timeout. Calling this method will
            restart the countdown for password expiration for the given admin, as will changing the
            device password (for all admins).</para>
          <para>The provided timeout is the time delta in ms and will be added to the current time. For
            example, to have the password expire 5 days from now, timeout would be 5 * 86400 * 1000 =
            432000000 ms for timeout.</para>
          <para>To disable password expiration, a value of 0 may be used for timeout.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password expiration is always disabled.</para>
          <para>A calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_EXPIRE_PASSWORD</c> to be able to call this method; if it has
            not, a security exception will be thrown.</para>
          <para>Note that setting the password will automatically reset the expiration time for all active
            admins. Active admins do not need to explicitly call this method in that case.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set restrictions on the parent
            profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPasswordExpirationTimeout(android.content.ComponentName,%20long)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPasswordExpirationTimeout(android.content.ComponentName, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordHistoryLength">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPasswordHistoryLength (admin As ComponentName, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPasswordHistoryLength(Android::Content::ComponentName ^ admin, int length);" />
      <MemberSignature Language="C#" Value="public virtual void SetPasswordHistoryLength (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordHistoryLength(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPasswordHistoryLength(Android.Content.ComponentName,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPasswordHistoryLength : Android.Content.ComponentName * int -&gt; unit&#xA;override this.SetPasswordHistoryLength : Android.Content.ComponentName * int -&gt; unit" Usage="devicePolicyManager.SetPasswordHistoryLength (admin, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPasswordHistoryLength", "(Landroid/content/ComponentName;I)V", "GetSetPasswordHistoryLength_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPasswordHistoryLength", "(Landroid/content/ComponentName;I)V", "GetSetPasswordHistoryLength_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="length">The new desired length of password history. A value of 0 means there is no
                       restriction.</param>
        <summary>Called by an application that is administering the device to set the length of the password
            history.</summary>
        <remarks>
          <para>Called by an application that is administering the device to set the length of the password
            history. After setting this, the user will not be able to enter a new password that is the
            same as any password in the history. Note that the current password will remain until the
            user has set a new one, so the change does not take place immediately. To prompt the user for
            a new password, use <c>#ACTION_SET_NEW_PASSWORD</c> or
            <c>#ACTION_SET_NEW_PARENT_PROFILE_PASSWORD</c> after setting this value.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password history length is always 0.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_LIMIT_PASSWORD</c> to be able to call this method; if it has
            not, a security exception will be thrown.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set restrictions on the parent
            profile.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPasswordHistoryLength(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPasswordHistoryLength(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumLength">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPasswordMinimumLength (admin As ComponentName, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPasswordMinimumLength(Android::Content::ComponentName ^ admin, int length);" />
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumLength (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumLength(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPasswordMinimumLength(Android.Content.ComponentName,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPasswordMinimumLength : Android.Content.ComponentName * int -&gt; unit&#xA;override this.SetPasswordMinimumLength : Android.Content.ComponentName * int -&gt; unit" Usage="devicePolicyManager.SetPasswordMinimumLength (admin, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPasswordMinimumLength", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumLength_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPasswordMinimumLength", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumLength_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="length">The new desired minimum password length. A value of 0 means there is no
                restriction.</param>
        <summary>Called by an application that is administering the device to set the minimum allowed password
            length.</summary>
        <remarks>
          <para>Called by an application that is administering the device to set the minimum allowed password
            length. After setting this, the user will not be able to enter a new password that is not at
            least as restrictive as what has been set. Note that the current password will remain until
            the user has set a new one, so the change does not take place immediately. To prompt the user
            for a new password, use <c>#ACTION_SET_NEW_PASSWORD</c> or
            <c>#ACTION_SET_NEW_PARENT_PROFILE_PASSWORD</c> after setting this value. This constraint is
            only imposed if the administrator has also requested either <c>#PASSWORD_QUALITY_NUMERIC</c>
            , <c>#PASSWORD_QUALITY_NUMERIC_COMPLEX</c>, <c>#PASSWORD_QUALITY_ALPHABETIC</c>,
            <c>#PASSWORD_QUALITY_ALPHANUMERIC</c>, or <c>#PASSWORD_QUALITY_COMPLEX</c> with
            <c>#setPasswordQuality</c>. If an app targeting SDK level
            <c>android.os.Build.VERSION_CODES#R</c> and above enforces this constraint without settings
            password quality to one of these values first, this method will throw
            <c>IllegalStateException</c>.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_LIMIT_PASSWORD</c> to be able to call this method; if it has
            not, a security exception will be thrown.</para>
          <para>Apps targeting <c>android.os.Build.VERSION_CODES#R</c> and below can call this method on the
            <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set restrictions on the parent
            profile.</para>
          <para>&lt;string&gt;Note:&lt;/strong&gt; this method is ignored on
            {PackageManager#FEATURE_AUTOMOTIVE automotive builds}.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPasswordMinimumLength(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPasswordMinimumLength(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumLetters">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPasswordMinimumLetters (admin As ComponentName, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPasswordMinimumLetters(Android::Content::ComponentName ^ admin, int length);" />
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumLetters (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumLetters(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPasswordMinimumLetters(Android.Content.ComponentName,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPasswordMinimumLetters : Android.Content.ComponentName * int -&gt; unit&#xA;override this.SetPasswordMinimumLetters : Android.Content.ComponentName * int -&gt; unit" Usage="devicePolicyManager.SetPasswordMinimumLetters (admin, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPasswordMinimumLetters", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumLetters_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPasswordMinimumLetters", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumLetters_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="length">The new desired minimum number of letters required in the password. A value of
                       0 means there is no restriction.</param>
        <summary>Called by an application that is administering the device to set the minimum number of
            letters required in the password.</summary>
        <remarks>
          <para>Called by an application that is administering the device to set the minimum number of
            letters required in the password. After setting this, the user will not be able to enter a
            new password that is not at least as restrictive as what has been set. Note that the current
            password will remain until the user has set a new one, so the change does not take place
            immediately. To prompt the user for a new password, use <c>#ACTION_SET_NEW_PASSWORD</c> or
            <c>#ACTION_SET_NEW_PARENT_PROFILE_PASSWORD</c> after setting this value. This constraint is
            only imposed if the administrator has also requested <c>#PASSWORD_QUALITY_COMPLEX</c> with
            <c>#setPasswordQuality</c>. If an app targeting SDK level
            <c>android.os.Build.VERSION_CODES#R</c> and above enforces this constraint without settings
            password quality to <c>#PASSWORD_QUALITY_COMPLEX</c> first, this method will throw
            <c>IllegalStateException</c>. The default value is 1.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_LIMIT_PASSWORD</c> to be able to call this method; if it has
            not, a security exception will be thrown.</para>
          <para>Apps targeting <c>android.os.Build.VERSION_CODES#R</c> and below can call this method on the
            <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set restrictions on the parent
            profile.</para>
          <para>&lt;string&gt;Note:&lt;/strong&gt; this method is ignored on
            {PackageManager#FEATURE_AUTOMOTIVE automotive builds}.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPasswordMinimumLetters(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPasswordMinimumLetters(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumLowerCase">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPasswordMinimumLowerCase (admin As ComponentName, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPasswordMinimumLowerCase(Android::Content::ComponentName ^ admin, int length);" />
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumLowerCase (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumLowerCase(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPasswordMinimumLowerCase(Android.Content.ComponentName,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPasswordMinimumLowerCase : Android.Content.ComponentName * int -&gt; unit&#xA;override this.SetPasswordMinimumLowerCase : Android.Content.ComponentName * int -&gt; unit" Usage="devicePolicyManager.SetPasswordMinimumLowerCase (admin, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPasswordMinimumLowerCase", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumLowerCase_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPasswordMinimumLowerCase", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumLowerCase_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="length">The new desired minimum number of lower case letters required in the password.
                       A value of 0 means there is no restriction.</param>
        <summary>Called by an application that is administering the device to set the minimum number of lower
            case letters required in the password.</summary>
        <remarks>
          <para>Called by an application that is administering the device to set the minimum number of lower
            case letters required in the password. After setting this, the user will not be able to enter
            a new password that is not at least as restrictive as what has been set. Note that the
            current password will remain until the user has set a new one, so the change does not take
            place immediately. To prompt the user for a new password, use
            <c>#ACTION_SET_NEW_PASSWORD</c> or <c>#ACTION_SET_NEW_PARENT_PROFILE_PASSWORD</c> after
            setting this value. This constraint is only imposed if the administrator has also requested
            <c>#PASSWORD_QUALITY_COMPLEX</c> with <c>#setPasswordQuality</c>. If an app targeting
            SDK level <c>android.os.Build.VERSION_CODES#R</c> and above enforces this constraint without
            settings password quality to <c>#PASSWORD_QUALITY_COMPLEX</c> first, this method will throw
            <c>IllegalStateException</c>. The default value is 0.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_LIMIT_PASSWORD</c> to be able to call this method; if it has
            not, a security exception will be thrown.</para>
          <para>Apps targeting <c>android.os.Build.VERSION_CODES#R</c> and below can call this method on the
            <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set restrictions on the parent
            profile.</para>
          <para>&lt;string&gt;Note:&lt;/strong&gt; this method is ignored on
            {PackageManager#FEATURE_AUTOMOTIVE automotive builds}.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPasswordMinimumLowerCase(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPasswordMinimumLowerCase(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumNonLetter">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPasswordMinimumNonLetter (admin As ComponentName, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPasswordMinimumNonLetter(Android::Content::ComponentName ^ admin, int length);" />
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumNonLetter (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumNonLetter(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPasswordMinimumNonLetter(Android.Content.ComponentName,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPasswordMinimumNonLetter : Android.Content.ComponentName * int -&gt; unit&#xA;override this.SetPasswordMinimumNonLetter : Android.Content.ComponentName * int -&gt; unit" Usage="devicePolicyManager.SetPasswordMinimumNonLetter (admin, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPasswordMinimumNonLetter", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumNonLetter_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPasswordMinimumNonLetter", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumNonLetter_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="length">The new desired minimum number of letters required in the password. A value of
                       0 means there is no restriction.</param>
        <summary>Called by an application that is administering the device to set the minimum number of
            non-letter characters (numerical digits or symbols) required in the password.</summary>
        <remarks>
          <para>Called by an application that is administering the device to set the minimum number of
            non-letter characters (numerical digits or symbols) required in the password. After setting
            this, the user will not be able to enter a new password that is not at least as restrictive
            as what has been set. Note that the current password will remain until the user has set a new
            one, so the change does not take place immediately. To prompt the user for a new password,
            use <c>#ACTION_SET_NEW_PASSWORD</c> or <c>#ACTION_SET_NEW_PARENT_PROFILE_PASSWORD</c> after
            setting this value. This constraint is only imposed if the administrator has also requested
            <c>#PASSWORD_QUALITY_COMPLEX</c> with <c>#setPasswordQuality</c>. If an app targeting
            SDK level <c>android.os.Build.VERSION_CODES#R</c> and above enforces this constraint without
            settings password quality to <c>#PASSWORD_QUALITY_COMPLEX</c> first, this method will throw
            <c>IllegalStateException</c>. The default value is 0.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_LIMIT_PASSWORD</c> to be able to call this method; if it has
            not, a security exception will be thrown.</para>
          <para>Apps targeting <c>android.os.Build.VERSION_CODES#R</c> and below can call this method on the
            <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set restrictions on the parent
            profile.</para>
          <para>&lt;string&gt;Note:&lt;/strong&gt; this method is ignored on
            {PackageManager#FEATURE_AUTOMOTIVE automotive builds}.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPasswordMinimumNonLetter(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPasswordMinimumNonLetter(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumNumeric">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPasswordMinimumNumeric (admin As ComponentName, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPasswordMinimumNumeric(Android::Content::ComponentName ^ admin, int length);" />
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumNumeric (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumNumeric(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPasswordMinimumNumeric(Android.Content.ComponentName,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPasswordMinimumNumeric : Android.Content.ComponentName * int -&gt; unit&#xA;override this.SetPasswordMinimumNumeric : Android.Content.ComponentName * int -&gt; unit" Usage="devicePolicyManager.SetPasswordMinimumNumeric (admin, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPasswordMinimumNumeric", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumNumeric_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPasswordMinimumNumeric", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumNumeric_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="length">The new desired minimum number of numerical digits required in the password. A
                       value of 0 means there is no restriction.</param>
        <summary>Called by an application that is administering the device to set the minimum number of
            numerical digits required in the password.</summary>
        <remarks>
          <para>Called by an application that is administering the device to set the minimum number of
            numerical digits required in the password. After setting this, the user will not be able to
            enter a new password that is not at least as restrictive as what has been set. Note that the
            current password will remain until the user has set a new one, so the change does not take
            place immediately. To prompt the user for a new password, use
            <c>#ACTION_SET_NEW_PASSWORD</c> or <c>#ACTION_SET_NEW_PARENT_PROFILE_PASSWORD</c> after
            setting this value. This constraint is only imposed if the administrator has also requested
            <c>#PASSWORD_QUALITY_COMPLEX</c> with <c>#setPasswordQuality</c>. If an app targeting
            SDK level <c>android.os.Build.VERSION_CODES#R</c> and above enforces this constraint without
            settings password quality to <c>#PASSWORD_QUALITY_COMPLEX</c> first, this method will throw
            <c>IllegalStateException</c>. The default value is 1.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_LIMIT_PASSWORD</c> to be able to call this method; if it has
            not, a security exception will be thrown.</para>
          <para>Apps targeting <c>android.os.Build.VERSION_CODES#R</c> and below can call this method on the
            <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set restrictions on the parent
            profile.</para>
          <para>&lt;string&gt;Note:&lt;/strong&gt; this method is ignored on
            {PackageManager#FEATURE_AUTOMOTIVE automotive builds}.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPasswordMinimumNumeric(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPasswordMinimumNumeric(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumSymbols">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPasswordMinimumSymbols (admin As ComponentName, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPasswordMinimumSymbols(Android::Content::ComponentName ^ admin, int length);" />
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumSymbols (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumSymbols(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPasswordMinimumSymbols(Android.Content.ComponentName,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPasswordMinimumSymbols : Android.Content.ComponentName * int -&gt; unit&#xA;override this.SetPasswordMinimumSymbols : Android.Content.ComponentName * int -&gt; unit" Usage="devicePolicyManager.SetPasswordMinimumSymbols (admin, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPasswordMinimumSymbols", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumSymbols_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPasswordMinimumSymbols", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumSymbols_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="length">The new desired minimum number of symbols required in the password. A value of
                       0 means there is no restriction.</param>
        <summary>Called by an application that is administering the device to set the minimum number of
            symbols required in the password.</summary>
        <remarks>
          <para>Called by an application that is administering the device to set the minimum number of
            symbols required in the password. After setting this, the user will not be able to enter a
            new password that is not at least as restrictive as what has been set. Note that the current
            password will remain until the user has set a new one, so the change does not take place
            immediately. To prompt the user for a new password, use <c>#ACTION_SET_NEW_PASSWORD</c> or
            <c>#ACTION_SET_NEW_PARENT_PROFILE_PASSWORD</c> after setting this value. This constraint is
            only imposed if the administrator has also requested <c>#PASSWORD_QUALITY_COMPLEX</c> with
            <c>#setPasswordQuality</c>. If an app targeting SDK level
            <c>android.os.Build.VERSION_CODES#R</c> and above enforces this constraint without settings
            password quality to <c>#PASSWORD_QUALITY_COMPLEX</c> first, this method will throw
            <c>IllegalStateException</c>. The default value is 1.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_LIMIT_PASSWORD</c> to be able to call this method; if it has
            not, a security exception will be thrown.</para>
          <para>Apps targeting <c>android.os.Build.VERSION_CODES#R</c> and below can call this method on the
            <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set restrictions on the parent
            profile.</para>
          <para>&lt;string&gt;Note:&lt;/strong&gt; this method is ignored on
            {PackageManager#FEATURE_AUTOMOTIVE automotive builds}.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPasswordMinimumSymbols(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPasswordMinimumSymbols(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordMinimumUpperCase">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPasswordMinimumUpperCase (admin As ComponentName, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPasswordMinimumUpperCase(Android::Content::ComponentName ^ admin, int length);" />
      <MemberSignature Language="C#" Value="public virtual void SetPasswordMinimumUpperCase (Android.Content.ComponentName admin, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordMinimumUpperCase(class Android.Content.ComponentName admin, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPasswordMinimumUpperCase(Android.Content.ComponentName,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetPasswordMinimumUpperCase : Android.Content.ComponentName * int -&gt; unit&#xA;override this.SetPasswordMinimumUpperCase : Android.Content.ComponentName * int -&gt; unit" Usage="devicePolicyManager.SetPasswordMinimumUpperCase (admin, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPasswordMinimumUpperCase", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumUpperCase_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPasswordMinimumUpperCase", "(Landroid/content/ComponentName;I)V", "GetSetPasswordMinimumUpperCase_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="length">The new desired minimum number of upper case letters required in the password.
                       A value of 0 means there is no restriction.</param>
        <summary>Called by an application that is administering the device to set the minimum number of upper
            case letters required in the password.</summary>
        <remarks>
          <para>Called by an application that is administering the device to set the minimum number of upper
            case letters required in the password. After setting this, the user will not be able to enter
            a new password that is not at least as restrictive as what has been set. Note that the
            current password will remain until the user has set a new one, so the change does not take
            place immediately. To prompt the user for a new password, use
            <c>#ACTION_SET_NEW_PASSWORD</c> or <c>#ACTION_SET_NEW_PARENT_PROFILE_PASSWORD</c> after
            setting this value. This constraint is only imposed if the administrator has also requested
            <c>#PASSWORD_QUALITY_COMPLEX</c> with <c>#setPasswordQuality</c>. If an app targeting
            SDK level <c>android.os.Build.VERSION_CODES#R</c> and above enforces this constraint without
            settings password quality to <c>#PASSWORD_QUALITY_COMPLEX</c> first, this method will throw
            <c>IllegalStateException</c>. The default value is 0.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_LIMIT_PASSWORD</c> to be able to call this method; if it has
            not, a security exception will be thrown.</para>
          <para>Apps targeting <c>android.os.Build.VERSION_CODES#R</c> and below can call this method on the
            <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set restrictions on the parent
            profile.</para>
          <para>&lt;string&gt;Note:&lt;/strong&gt; this method is ignored on
            {PackageManager#FEATURE_AUTOMOTIVE automotive builds}.</para>
          <para>This member is deprecated. see <c>#setPasswordQuality(ComponentName, int)</c> for details.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPasswordMinimumUpperCase(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPasswordMinimumUpperCase(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetPasswordQuality">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPasswordQuality (admin As ComponentName, quality As PasswordQuality)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPasswordQuality(Android::Content::ComponentName ^ admin, Android::App::Admin::PasswordQuality quality);" />
      <MemberSignature Language="C#" Value="public virtual void SetPasswordQuality (Android.Content.ComponentName admin, Android.App.Admin.PasswordQuality quality);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPasswordQuality(class Android.Content.ComponentName admin, valuetype Android.App.Admin.PasswordQuality quality) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPasswordQuality(Android.Content.ComponentName,Android.App.Admin.PasswordQuality)" />
      <MemberSignature Language="F#" Value="abstract member SetPasswordQuality : Android.Content.ComponentName * Android.App.Admin.PasswordQuality -&gt; unit&#xA;override this.SetPasswordQuality : Android.Content.ComponentName * Android.App.Admin.PasswordQuality -&gt; unit" Usage="devicePolicyManager.SetPasswordQuality (admin, quality)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPasswordQuality", "(Landroid/content/ComponentName;I)V", "GetSetPasswordQuality_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPasswordQuality", "(Landroid/content/ComponentName;I)V", "GetSetPasswordQuality_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="quality" Type="Android.App.Admin.PasswordQuality">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="quality">The new desired quality. One of <c>#PASSWORD_QUALITY_UNSPECIFIED</c>,
                       <c>#PASSWORD_QUALITY_BIOMETRIC_WEAK</c>,
                       <c>#PASSWORD_QUALITY_SOMETHING</c>, <c>#PASSWORD_QUALITY_NUMERIC</c>,
                       <c>#PASSWORD_QUALITY_NUMERIC_COMPLEX</c>, <c>#PASSWORD_QUALITY_ALPHABETIC</c>,
                       <c>#PASSWORD_QUALITY_ALPHANUMERIC</c> or <c>#PASSWORD_QUALITY_COMPLEX</c>.</param>
        <summary>Called by an application that is administering the device to set the password restrictions it
            is imposing.</summary>
        <remarks>
          <para>Called by an application that is administering the device to set the password restrictions it
            is imposing. After setting this, the user will not be able to enter a new password that is
            not at least as restrictive as what has been set. Note that the current password will remain
            until the user has set a new one, so the change does not take place immediately. To prompt
            the user for a new password, use <c>#ACTION_SET_NEW_PASSWORD</c> or
            <c>#ACTION_SET_NEW_PARENT_PROFILE_PASSWORD</c> after calling this method.</para>
          <para>Quality constants are ordered so that higher values are more restrictive; thus the highest
            requested quality constant (between the policy set here, the user's preference, and any other
            considerations) is the one that is in effect.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            password is always treated as empty.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_LIMIT_PASSWORD</c> to be able to call this method; if it has
            not, a security exception will be thrown.</para>
          <para>Apps targeting <c>android.os.Build.VERSION_CODES#R</c> and below can call this method on the
            <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set restrictions on the parent
            profile. Apps targeting <c>android.os.Build.VERSION_CODES#S</c> and above, with the
            exception of a profile owner on an organization-owned device (as can be identified by
            <c>#isOrganizationOwnedDeviceWithManagedProfile</c>), will get a
            <c>IllegalArgumentException</c> when calling this method on the parent
            <c>DevicePolicyManager</c> instance.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; Specifying password requirements using this method clears the
            password complexity requirements set using <c>#setRequiredPasswordComplexity(int)</c>.
            If this method is called on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c>, then password complexity requirements
            set on the primary <c>DevicePolicyManager</c> must be cleared first by calling
            <c>#setRequiredPasswordComplexity</c> with <c>#PASSWORD_COMPLEXITY_NONE) first.
            
            &lt;p&gt;&lt;string&gt;Note:&lt;/strong&gt; this method is ignored on
            {PackageManager#FEATURE_AUTOMOTIVE automotive builds</c>.</para>
          <para>This member is deprecated. Prefer using <c>#setRequiredPasswordComplexity(int)</c>, to require a password
            that satisfies a complexity level defined by the platform, rather than specifying custom
            password requirement.
            Setting custom, overly-complicated password requirements leads to passwords that are hard
            for users to remember and may not provide any security benefits given as Android uses
            hardware-backed throttling to thwart online and offline brute-forcing of the device's
            screen lock. Company-owned devices (fully-managed and organization-owned managed profile
            devices) are able to continue using this method, though it is recommended that
            <c>#setRequiredPasswordComplexity(int)</c> should be used instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPasswordQuality(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPasswordQuality(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="SetPermissionGrantState">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPermissionGrantState (admin As ComponentName, packageName As String, permission As String, grantState As PermissionGrantState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetPermissionGrantState(Android::Content::ComponentName ^ admin, System::String ^ packageName, System::String ^ permission, Android::App::Admin::PermissionGrantState grantState);" />
      <MemberSignature Language="C#" Value="public virtual bool SetPermissionGrantState (Android.Content.ComponentName? admin, string packageName, string permission, Android.App.Admin.PermissionGrantState grantState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPermissionGrantState(class Android.Content.ComponentName admin, string packageName, string permission, valuetype Android.App.Admin.PermissionGrantState grantState) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPermissionGrantState(Android.Content.ComponentName,System.String,System.String,Android.App.Admin.PermissionGrantState)" />
      <MemberSignature Language="F#" Value="abstract member SetPermissionGrantState : Android.Content.ComponentName * string * string * Android.App.Admin.PermissionGrantState -&gt; bool&#xA;override this.SetPermissionGrantState : Android.Content.ComponentName * string * string * Android.App.Admin.PermissionGrantState -&gt; bool" Usage="devicePolicyManager.SetPermissionGrantState (admin, packageName, permission, grantState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPermissionGrantState", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;I)Z", "GetSetPermissionGrantState_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_IHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPermissionGrantState", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;I)Z", "GetSetPermissionGrantState_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_IHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_RUNTIME_PERMISSIONS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_RUNTIME_PERMISSIONS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="permission" Type="System.String" />
        <Parameter Name="grantState" Type="Android.App.Admin.PermissionGrantState">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <param name="packageName">The application to grant or revoke a permission to.</param>
        <param name="permission">The permission to grant or revoke.</param>
        <param name="grantState">The permission grant state which is one of
                       <c>#PERMISSION_GRANT_STATE_DENIED</c>, <c>#PERMISSION_GRANT_STATE_DEFAULT</c>,
                       <c>#PERMISSION_GRANT_STATE_GRANTED</c>,</param>
        <summary>Sets the grant state of a runtime permission for a specific application.</summary>
        <returns>whether the permission was successfully granted or revoked.</returns>
        <remarks>
          <para>Sets the grant state of a runtime permission for a specific application. The state can be
            <c>#PERMISSION_GRANT_STATE_DEFAULT default</c> in which a user can manage it through the UI,
            <c>#PERMISSION_GRANT_STATE_DENIED denied</c>, in which the permission is denied and the user
            cannot manage it through the UI, and <c>#PERMISSION_GRANT_STATE_GRANTED granted</c> in which
            the permission is granted and the user cannot manage it through the UI. This method can only
            be called by a profile owner, device owner, or a delegate given the
            <c>#DELEGATION_PERMISSION_GRANT</c> scope via <c>#setDelegatedScopes</c>.
            &lt;p/&gt;
            Note that user cannot manage other permissions in the affected group through the UI
            either and their granted state will be kept as the current value. Thus, it's recommended that
            you set the grant state of all the permissions in the affected group.
            &lt;p/&gt;
            Setting the grant state to <c>#PERMISSION_GRANT_STATE_DEFAULT default</c> does not revoke
            the permission. It retains the previous grant, if any.
            &lt;p/&gt;
            Device admins with a <c>targetSdkVersion</c> &amp;lt; <c>android.os.Build.VERSION_CODES#Q</c>
            cannot grant and revoke permissions for applications built with a <c>targetSdkVersion</c>
            &amp;lt; <c>android.os.Build.VERSION_CODES#M</c>.
            &lt;p/&gt;
            Admins with a <c>targetSdkVersion</c> &amp;ge; <c>android.os.Build.VERSION_CODES#Q</c> can
            grant and revoke permissions of all apps. Similar to the user revoking a permission from a
            application built with a <c>targetSdkVersion</c> &amp;lt;
            <c>android.os.Build.VERSION_CODES#M</c> the app-op matching the permission is set to
            <c>android.app.AppOpsManager#MODE_IGNORED</c>, but the permission stays granted.</para>
          <para>NOTE: On devices running <c>android.os.Build.VERSION_CODES#S</c> and above, control over
            the following, sensors-related, permissions is restricted:
            &lt;ul&gt;
               &lt;li&gt;Manifest.permission.ACCESS_FINE_LOCATION&lt;/li&gt;
               &lt;li&gt;Manifest.permission.ACCESS_BACKGROUND_LOCATION&lt;/li&gt;
               &lt;li&gt;Manifest.permission.ACCESS_COARSE_LOCATION&lt;/li&gt;
               &lt;li&gt;Manifest.permission.CAMERA&lt;/li&gt;
               &lt;li&gt;Manifest.permission.RECORD_AUDIO&lt;/li&gt;
               &lt;li&gt;Manifest.permission.RECORD_BACKGROUND_AUDIO&lt;/li&gt;
               &lt;li&gt;Manifest.permission.ACTIVITY_RECOGNITION&lt;/li&gt;
               &lt;li&gt;Manifest.permission.BODY_SENSORS&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>A profile owner may not grant these permissions (i.e. call this method with any of the
            permissions listed above and <c>grantState</c> of <c>#PERMISSION_GRANT_STATE_GRANTED</c>),
            but may deny them.</para>
          <para>A device owner, by default, may continue granting these permissions. However, for increased
            user control, the admin may opt out of controlling grants for these permissions by including
            <c>#EXTRA_PROVISIONING_SENSORS_PERMISSION_GRANT_OPT_OUT</c> in the provisioning parameters.
            In that case the device owner's control will be limited do denying these permissions.</para>
          <para>NOTE: On devices running <c>android.os.Build.VERSION_CODES#S</c> and above, control over
            the following permissions are restricted for managed profile owners:
            &lt;ul&gt;
               &lt;li&gt;Manifest.permission.READ_SMS&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>A managed profile owner may not grant these permissions (i.e. call this method with any of
            the permissions listed above and <c>grantState</c> of
            <c>#PERMISSION_GRANT_STATE_GRANTED</c>), but may deny them.</para>
          <para>Attempts by the admin to grant these permissions, when the admin is restricted from doing
            so, will be silently ignored (no exception will be thrown).
            
            Control over the following permissions are restricted for managed profile owners:
            &lt;ul&gt;
             &lt;li&gt;Manifest.permission.READ_SMS&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>A managed profile owner may not grant these permissions (i.e. call this method with any of
            the permissions listed above and <c>grantState</c> of
            <c>#PERMISSION_GRANT_STATE_GRANTED</c>), but may deny them.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPermissionGrantState(android.content.ComponentName,%20java.lang.String,%20java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPermissionGrantState(android.content.ComponentName, java.lang.String, java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPermissionPolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPermissionPolicy (admin As ComponentName, policy As PermissionPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPermissionPolicy(Android::Content::ComponentName ^ admin, Android::App::Admin::PermissionPolicy policy);" />
      <MemberSignature Language="C#" Value="public virtual void SetPermissionPolicy (Android.Content.ComponentName admin, Android.App.Admin.PermissionPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPermissionPolicy(class Android.Content.ComponentName admin, valuetype Android.App.Admin.PermissionPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPermissionPolicy(Android.Content.ComponentName,Android.App.Admin.PermissionPolicy)" />
      <MemberSignature Language="F#" Value="abstract member SetPermissionPolicy : Android.Content.ComponentName * Android.App.Admin.PermissionPolicy -&gt; unit&#xA;override this.SetPermissionPolicy : Android.Content.ComponentName * Android.App.Admin.PermissionPolicy -&gt; unit" Usage="devicePolicyManager.SetPermissionPolicy (admin, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPermissionPolicy", "(Landroid/content/ComponentName;I)V", "GetSetPermissionPolicy_Landroid_content_ComponentName_IHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPermissionPolicy", "(Landroid/content/ComponentName;I)V", "GetSetPermissionPolicy_Landroid_content_ComponentName_IHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="policy" Type="Android.App.Admin.PermissionPolicy">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which profile or device owner this request is associated with.</param>
        <param name="policy">One of the policy constants <c>#PERMISSION_POLICY_PROMPT</c>,
                       <c>#PERMISSION_POLICY_AUTO_GRANT</c> and <c>#PERMISSION_POLICY_AUTO_DENY</c>.</param>
        <summary>Set the default response for future runtime permission requests by applications.</summary>
        <remarks>
          <para>Set the default response for future runtime permission requests by applications. This
            function can be called by a device owner, profile owner, or by a delegate given the
            <c>#DELEGATION_PERMISSION_GRANT</c> scope via <c>#setDelegatedScopes</c>.
            The policy can allow for normal operation which prompts the user to grant a permission, or
            can allow automatic granting or denying of runtime permission requests by an application.
            This also applies to new permissions declared by app updates. When a permission is denied or
            granted this way, the effect is equivalent to setting the permission * grant state via
            <c>#setPermissionGrantState</c>.
            &lt;p/&gt;
            As this policy only acts on runtime permission requests, it only applies to applications
            built with a <c>targetSdkVersion</c> of <c>android.os.Build.VERSION_CODES#M</c> or later.</para>
          <para>NOTE: On devices running <c>android.os.Build.VERSION_CODES#S</c> and above, an auto-grant
            policy will not apply to certain sensors-related permissions on some configurations.
            See <c>#setPermissionGrantState(ComponentName, String, String, int)</c> for the list of
            permissions affected, and the behavior change for managed profiles and fully-managed
            devices.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPermissionPolicy(android.content.ComponentName,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPermissionPolicy(android.content.ComponentName, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPermittedAccessibilityServices">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPermittedAccessibilityServices (admin As ComponentName, packageNames As IList(Of String)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetPermittedAccessibilityServices(Android::Content::ComponentName ^ admin, System::Collections::Generic::IList&lt;System::String ^&gt; ^ packageNames);" />
      <MemberSignature Language="C#" Value="public virtual bool SetPermittedAccessibilityServices (Android.Content.ComponentName admin, System.Collections.Generic.IList&lt;string&gt;? packageNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPermittedAccessibilityServices(class Android.Content.ComponentName admin, class System.Collections.Generic.IList`1&lt;string&gt; packageNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPermittedAccessibilityServices(Android.Content.ComponentName,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="abstract member SetPermittedAccessibilityServices : Android.Content.ComponentName * System.Collections.Generic.IList&lt;string&gt; -&gt; bool&#xA;override this.SetPermittedAccessibilityServices : Android.Content.ComponentName * System.Collections.Generic.IList&lt;string&gt; -&gt; bool" Usage="devicePolicyManager.SetPermittedAccessibilityServices (admin, packageNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPermittedAccessibilityServices", "(Landroid/content/ComponentName;Ljava/util/List;)Z", "GetSetPermittedAccessibilityServices_Landroid_content_ComponentName_Ljava_util_List_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPermittedAccessibilityServices", "(Landroid/content/ComponentName;Ljava/util/List;)Z", "GetSetPermittedAccessibilityServices_Landroid_content_ComponentName_Ljava_util_List_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageNames" Type="System.Collections.Generic.IList&lt;System.String&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="packageNames">List of accessibility service package names.</param>
        <summary>Called by a profile or device owner to set the permitted
            <c>android.accessibilityservice.AccessibilityService</c>.</summary>
        <returns>
          <c>true</c> if the operation succeeded, or <c>false</c> if the list didn't
                    contain every enabled non-system accessibility service.</returns>
        <remarks>
          <para>Called by a profile or device owner to set the permitted
            <c>android.accessibilityservice.AccessibilityService</c>. When set by
            a device owner or profile owner the restriction applies to all profiles of the user the
            device owner or profile owner is an admin for. By default, the user can use any accessibility
            service. When zero or more packages have been added, accessibility services that are not in
            the list and not part of the system can not be enabled by the user.</para>
          <para>Calling with a <c>null</c> value for the list disables the restriction so that all services
            can be used, calling with an empty list only allows the built-in system services. Any
            non-system accessibility service that's currently enabled must be included in the list.</para>
          <para>System accessibility services are always available to the user and this method can't
            disable them.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPermittedAccessibilityServices(android.content.ComponentName,%20java.util.List%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPermittedAccessibilityServices(android.content.ComponentName, java.util.List&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPermittedCrossProfileNotificationListeners">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPermittedCrossProfileNotificationListeners (admin As ComponentName, packageList As IList(Of String)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetPermittedCrossProfileNotificationListeners(Android::Content::ComponentName ^ admin, System::Collections::Generic::IList&lt;System::String ^&gt; ^ packageList);" />
      <MemberSignature Language="C#" Value="public virtual bool SetPermittedCrossProfileNotificationListeners (Android.Content.ComponentName admin, System.Collections.Generic.IList&lt;string&gt;? packageList);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPermittedCrossProfileNotificationListeners(class Android.Content.ComponentName admin, class System.Collections.Generic.IList`1&lt;string&gt; packageList) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPermittedCrossProfileNotificationListeners(Android.Content.ComponentName,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="abstract member SetPermittedCrossProfileNotificationListeners : Android.Content.ComponentName * System.Collections.Generic.IList&lt;string&gt; -&gt; bool&#xA;override this.SetPermittedCrossProfileNotificationListeners : Android.Content.ComponentName * System.Collections.Generic.IList&lt;string&gt; -&gt; bool" Usage="devicePolicyManager.SetPermittedCrossProfileNotificationListeners (admin, packageList)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPermittedCrossProfileNotificationListeners", "(Landroid/content/ComponentName;Ljava/util/List;)Z", "GetSetPermittedCrossProfileNotificationListeners_Landroid_content_ComponentName_Ljava_util_List_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPermittedCrossProfileNotificationListeners", "(Landroid/content/ComponentName;Ljava/util/List;)Z", "GetSetPermittedCrossProfileNotificationListeners_Landroid_content_ComponentName_Ljava_util_List_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageList" Type="System.Collections.Generic.IList&lt;System.String&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="packageList">List of package names to allowlist</param>
        <summary>Called by a profile owner of a managed profile to set the packages that are allowed to use
            a <c>android.service.notification.NotificationListenerService</c> in the primary user to
            see notifications from the managed profile.</summary>
        <returns>true if setting the restriction succeeded. It will fail if called outside a managed
            profile</returns>
        <remarks>
          <para>Called by a profile owner of a managed profile to set the packages that are allowed to use
            a <c>android.service.notification.NotificationListenerService</c> in the primary user to
            see notifications from the managed profile. By default all packages are permitted by this
            policy. When zero or more packages have been added, notification listeners installed on the
            primary user that are not in the list and are not part of the system won't receive events
            for managed profile notifications.</para>
          <para>Calling with a <c>null</c> value for the list disables the restriction so that all
            notification listener services be used. Calling with an empty list disables all but the
            system's own notification listeners. System notification listener services are always
            available to the user.</para>
          <para>If a device or profile owner want to stop notification listeners in their user from seeing
            that user's notifications they should prevent that service from running instead (e.g. via
            <c>#setApplicationHidden(ComponentName, String, boolean)</c>)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPermittedCrossProfileNotificationListeners(android.content.ComponentName,%20java.util.List%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPermittedCrossProfileNotificationListeners(android.content.ComponentName, java.util.List&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPermittedInputMethods">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetPermittedInputMethods (admin As ComponentName, packageNames As IList(Of String)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetPermittedInputMethods(Android::Content::ComponentName ^ admin, System::Collections::Generic::IList&lt;System::String ^&gt; ^ packageNames);" />
      <MemberSignature Language="C#" Value="public virtual bool SetPermittedInputMethods (Android.Content.ComponentName? admin, System.Collections.Generic.IList&lt;string&gt;? packageNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetPermittedInputMethods(class Android.Content.ComponentName admin, class System.Collections.Generic.IList`1&lt;string&gt; packageNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPermittedInputMethods(Android.Content.ComponentName,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="abstract member SetPermittedInputMethods : Android.Content.ComponentName * System.Collections.Generic.IList&lt;string&gt; -&gt; bool&#xA;override this.SetPermittedInputMethods : Android.Content.ComponentName * System.Collections.Generic.IList&lt;string&gt; -&gt; bool" Usage="devicePolicyManager.SetPermittedInputMethods (admin, packageNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPermittedInputMethods", "(Landroid/content/ComponentName;Ljava/util/List;)Z", "GetSetPermittedInputMethods_Landroid_content_ComponentName_Ljava_util_List_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPermittedInputMethods", "(Landroid/content/ComponentName;Ljava/util/List;)Z", "GetSetPermittedInputMethods_Landroid_content_ComponentName_Ljava_util_List_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_INPUT_METHODS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_INPUT_METHODS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageNames" Type="System.Collections.Generic.IList&lt;System.String&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin</param>
        <param name="packageNames">List of input method package names.</param>
        <summary>Called by a profile or device owner or holder of the
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_INPUT_METHODS</c> permission to set
            the permitted input methods services for this user.</summary>
        <returns>
          <c>true</c> if the operation succeeded, or <c>false</c> if the list didn't
                   contain every enabled non-system input method service.</returns>
        <remarks>
          <para>Called by a profile or device owner or holder of the
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_INPUT_METHODS</c> permission to set
            the permitted input methods services for this user. By default, the user can use any input
            method.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance,
            returned by <c>#getParentProfileInstance(ComponentName)</c>, where the caller must be
            a profile owner of an organization-owned device.</para>
          <para>If called on the parent instance:
            &lt;ul&gt;
               &lt;li&gt;The permitted input methods will be applied on the personal profile&lt;/li&gt;
               &lt;li&gt;Can only permit all input methods (calling this method with a <c>null</c> package
               list) or only permit system input methods (calling this method with an empty package
               list). This is to prevent the caller from learning which packages are installed on
               the personal side&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>When zero or more packages have been added, input method that are not in the list and not
            part of the system can not be enabled by the user. This method will fail if it is called for
            a admin that is not for the foreground user or a profile of the foreground user. Any
            non-system input method service that's currently enabled must be included in the list.</para>
          <para>Calling with a null value for the list disables the restriction so that all input methods can
            be used, calling with an empty list disables all but the system's own input methods.</para>
          <para>System input methods are always available to the user - this method can't modify this.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPermittedInputMethods(android.content.ComponentName,%20java.util.List%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPermittedInputMethods(android.content.ComponentName, java.util.List&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPersonalAppsSuspended">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetPersonalAppsSuspended (admin As ComponentName, suspended As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetPersonalAppsSuspended(Android::Content::ComponentName ^ admin, bool suspended);" />
      <MemberSignature Language="C#" Value="public virtual void SetPersonalAppsSuspended (Android.Content.ComponentName admin, bool suspended);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetPersonalAppsSuspended(class Android.Content.ComponentName admin, bool suspended) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetPersonalAppsSuspended(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetPersonalAppsSuspended : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetPersonalAppsSuspended : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetPersonalAppsSuspended (admin, suspended)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setPersonalAppsSuspended", "(Landroid/content/ComponentName;Z)V", "GetSetPersonalAppsSuspended_Landroid_content_ComponentName_ZHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setPersonalAppsSuspended", "(Landroid/content/ComponentName;Z)V", "GetSetPersonalAppsSuspended_Landroid_content_ComponentName_ZHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="suspended" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with</param>
        <param name="suspended">Whether personal apps should be suspended.</param>
        <summary>Called by a profile owner of an organization-owned managed profile to suspend personal
            apps on the device.</summary>
        <remarks>
          <para>Called by a profile owner of an organization-owned managed profile to suspend personal
            apps on the device. When personal apps are suspended the device can only be used for calls.</para>
          <para>When personal apps are suspended, an ongoing notification about that is shown to the user.
            When the user taps the notification, system invokes <c>#ACTION_CHECK_POLICY_COMPLIANCE</c>
            in the profile owner package. Profile owner implementation that uses personal apps suspension
            must handle this intent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setPersonalAppsSuspended(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setPersonalAppsSuspended(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProfileEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetProfileEnabled (admin As ComponentName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetProfileEnabled(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual void SetProfileEnabled (Android.Content.ComponentName admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProfileEnabled(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetProfileEnabled(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member SetProfileEnabled : Android.Content.ComponentName -&gt; unit&#xA;override this.SetProfileEnabled : Android.Content.ComponentName -&gt; unit" Usage="devicePolicyManager.SetProfileEnabled admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setProfileEnabled", "(Landroid/content/ComponentName;)V", "GetSetProfileEnabled_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setProfileEnabled", "(Landroid/content/ComponentName;)V", "GetSetProfileEnabled_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <summary>Sets the enabled state of the profile.</summary>
        <remarks>
          <para>Sets the enabled state of the profile. A profile should be enabled only once it is ready to
            be used. Only the profile owner can call this.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setProfileEnabled(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setProfileEnabled(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.IsProfileOwnerApp(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetProfileName">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetProfileName (admin As ComponentName, profileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetProfileName(Android::Content::ComponentName ^ admin, System::String ^ profileName);" />
      <MemberSignature Language="C#" Value="public virtual void SetProfileName (Android.Content.ComponentName admin, string? profileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProfileName(class Android.Content.ComponentName admin, string profileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetProfileName(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetProfileName : Android.Content.ComponentName * string -&gt; unit&#xA;override this.SetProfileName : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.SetProfileName (admin, profileName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setProfileName", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetSetProfileName_Landroid_content_ComponentName_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setProfileName", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "GetSetProfileName_Landroid_content_ComponentName_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="profileName" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associate with.</param>
        <param name="profileName">The name of the profile. If the name is longer than 200 characters
                               it will be truncated.</param>
        <summary>Sets the name of the profile.</summary>
        <remarks>
          <para>Sets the name of the profile. In the device owner case it sets the name of the user which it
            is called from. Only a profile owner or device owner can call this. If this is never called
            by the profile or device owner, the name will be set to default values.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setProfileName(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setProfileName(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.IsProfileOwnerApp(System.String)" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.IsDeviceOwnerApp(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetRecommendedGlobalProxy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRecommendedGlobalProxy (admin As ComponentName, proxyInfo As ProxyInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRecommendedGlobalProxy(Android::Content::ComponentName ^ admin, Android::Net::ProxyInfo ^ proxyInfo);" />
      <MemberSignature Language="C#" Value="public virtual void SetRecommendedGlobalProxy (Android.Content.ComponentName admin, Android.Net.ProxyInfo? proxyInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRecommendedGlobalProxy(class Android.Content.ComponentName admin, class Android.Net.ProxyInfo proxyInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetRecommendedGlobalProxy(Android.Content.ComponentName,Android.Net.ProxyInfo)" />
      <MemberSignature Language="F#" Value="abstract member SetRecommendedGlobalProxy : Android.Content.ComponentName * Android.Net.ProxyInfo -&gt; unit&#xA;override this.SetRecommendedGlobalProxy : Android.Content.ComponentName * Android.Net.ProxyInfo -&gt; unit" Usage="devicePolicyManager.SetRecommendedGlobalProxy (admin, proxyInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRecommendedGlobalProxy", "(Landroid/content/ComponentName;Landroid/net/ProxyInfo;)V", "GetSetRecommendedGlobalProxy_Landroid_content_ComponentName_Landroid_net_ProxyInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRecommendedGlobalProxy", "(Landroid/content/ComponentName;Landroid/net/ProxyInfo;)V", "GetSetRecommendedGlobalProxy_Landroid_content_ComponentName_Landroid_net_ProxyInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="proxyInfo" Type="Android.Net.ProxyInfo">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="proxyInfo">The a <c>ProxyInfo</c> object defining the new global HTTP proxy. A
                       <c>null</c> value will clear the global HTTP proxy.</param>
        <summary>Set a network-independent global HTTP proxy.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setRecommendedGlobalProxy(android.content.ComponentName,%20.*ProxyInfo)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setRecommendedGlobalProxy(android.content.ComponentName, .*ProxyInfo)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="T:Android.Net.ProxyInfo" />
      </Docs>
    </Member>
    <Member MemberName="SetRequiredStrongAuthTimeout">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRequiredStrongAuthTimeout (admin As ComponentName, timeoutMs As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRequiredStrongAuthTimeout(Android::Content::ComponentName ^ admin, long timeoutMs);" />
      <MemberSignature Language="C#" Value="public virtual void SetRequiredStrongAuthTimeout (Android.Content.ComponentName? admin, long timeoutMs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRequiredStrongAuthTimeout(class Android.Content.ComponentName admin, int64 timeoutMs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetRequiredStrongAuthTimeout(Android.Content.ComponentName,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetRequiredStrongAuthTimeout : Android.Content.ComponentName * int64 -&gt; unit&#xA;override this.SetRequiredStrongAuthTimeout : Android.Content.ComponentName * int64 -&gt; unit" Usage="devicePolicyManager.SetRequiredStrongAuthTimeout (admin, timeoutMs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRequiredStrongAuthTimeout", "(Landroid/content/ComponentName;J)V", "GetSetRequiredStrongAuthTimeout_Landroid_content_ComponentName_JHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRequiredStrongAuthTimeout", "(Landroid/content/ComponentName;J)V", "GetSetRequiredStrongAuthTimeout_Landroid_content_ComponentName_JHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_LOCK_CREDENTIALS")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="timeoutMs" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin</param>
        <param name="timeoutMs">The new timeout in milliseconds, after which the user will have to unlock
                    with strong authentication method. A value of 0 means the admin is not participating
                    in controlling the timeout.
                    The minimum and maximum timeouts are platform-defined and are typically 1 hour and
                    72 hours, respectively. Though discouraged, the admin may choose to require strong
                    auth at all times using <c>#KEYGUARD_DISABLE_FINGERPRINT</c> and/or
                    <c>#KEYGUARD_DISABLE_TRUST_AGENTS</c>.</param>
        <summary>Called by a device/profile owner to set the timeout after which unlocking with secondary, non
            strong auth (e.</summary>
        <remarks>
          <para>Called by a device/profile owner to set the timeout after which unlocking with secondary, non
            strong auth (e.g. fingerprint, face, trust agents) times out, i.e. the user has to use a
            strong authentication method like password, pin or pattern.</para>
          <para>This timeout is used internally to reset the timer to require strong auth again after
            specified timeout each time it has been successfully used.</para>
          <para>Fingerprint can also be disabled altogether using <c>#KEYGUARD_DISABLE_FINGERPRINT</c>.</para>
          <para>Trust agents can also be disabled altogether using <c>#KEYGUARD_DISABLE_TRUST_AGENTS</c>.</para>
          <para>A calling device admin can verify the value it has set by calling
            <c>#getRequiredStrongAuthTimeout(ComponentName)</c> and passing in its instance.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set restrictions on the parent
            profile.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature,
            calling this methods has no effect - i.e. the timeout is not set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setRequiredStrongAuthTimeout(android.content.ComponentName,%20long)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setRequiredStrongAuthTimeout(android.content.ComponentName, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetResetPasswordToken">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetResetPasswordToken (admin As ComponentName, token As Byte()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetResetPasswordToken(Android::Content::ComponentName ^ admin, cli::array &lt;System::Byte&gt; ^ token);" />
      <MemberSignature Language="C#" Value="public virtual bool SetResetPasswordToken (Android.Content.ComponentName? admin, byte[]? token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetResetPasswordToken(class Android.Content.ComponentName admin, unsigned int8[] token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetResetPasswordToken(Android.Content.ComponentName,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member SetResetPasswordToken : Android.Content.ComponentName * byte[] -&gt; bool&#xA;override this.SetResetPasswordToken : Android.Content.ComponentName * byte[] -&gt; bool" Usage="devicePolicyManager.SetResetPasswordToken (admin, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setResetPasswordToken", "(Landroid/content/ComponentName;[B)Z", "GetSetResetPasswordToken_Landroid_content_ComponentName_arrayBHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setResetPasswordToken", "(Landroid/content/ComponentName;[B)Z", "GetSetResetPasswordToken_Landroid_content_ComponentName_arrayBHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_RESET_PASSWORD")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_RESET_PASSWORD")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="token" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="token">a secure token a least 32-byte long, which must be generated by a
                   cryptographically strong random number generator.</param>
        <summary>Called by a profile or device owner to provision a token which can later be used to reset the
            device lockscreen password (if called by device owner), or managed profile challenge (if
            called by profile owner), via <c>#resetPasswordWithToken</c>.</summary>
        <returns>true if the operation is successful, false otherwise.</returns>
        <remarks>
          <para>Called by a profile or device owner to provision a token which can later be used to reset the
            device lockscreen password (if called by device owner), or managed profile challenge (if
            called by profile owner), via <c>#resetPasswordWithToken</c>.</para>
          <para>If the user currently has a lockscreen password, the provisioned token will not be
            immediately usable; it only becomes active after the user performs a confirm credential
            operation, which can be triggered by <c>KeyguardManager#createConfirmDeviceCredentialIntent</c>.
            If the user has no lockscreen password, the token is activated immediately. In all cases,
            the active state of the current token can be checked by <c>#isResetPasswordTokenActive</c>.
            For security reasons, un-activated tokens are only stored in memory and will be lost once
            the device reboots. In this case a new token needs to be provisioned again.</para>
          <para>Once provisioned and activated, the token will remain effective even if the user changes
            or clears the lockscreen password.</para>
          <para>&lt;em&gt;This token is highly sensitive and should be treated at the same level as user
            credentials. In particular, NEVER store this token on device in plaintext. Do not store
            the plaintext token in device-encrypted storage if it will be needed to reset password on
            file-based encryption devices before user unlocks. Consider carefully how any password token
            will be stored on your server and who will need access to them. Tokens may be the subject of
            legal access requests.
            &lt;/em&gt;</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, the
            reset token is not set and this method returns false.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setResetPasswordToken(android.content.ComponentName,%20byte[])" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setResetPasswordToken(android.content.ComponentName, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetRestrictionsProvider">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetRestrictionsProvider (admin As ComponentName, provider As ComponentName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetRestrictionsProvider(Android::Content::ComponentName ^ admin, Android::Content::ComponentName ^ provider);" />
      <MemberSignature Language="C#" Value="public virtual void SetRestrictionsProvider (Android.Content.ComponentName admin, Android.Content.ComponentName? provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetRestrictionsProvider(class Android.Content.ComponentName admin, class Android.Content.ComponentName provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetRestrictionsProvider(Android.Content.ComponentName,Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member SetRestrictionsProvider : Android.Content.ComponentName * Android.Content.ComponentName -&gt; unit&#xA;override this.SetRestrictionsProvider : Android.Content.ComponentName * Android.Content.ComponentName -&gt; unit" Usage="devicePolicyManager.SetRestrictionsProvider (admin, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setRestrictionsProvider", "(Landroid/content/ComponentName;Landroid/content/ComponentName;)V", "GetSetRestrictionsProvider_Landroid_content_ComponentName_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setRestrictionsProvider", "(Landroid/content/ComponentName;Landroid/content/ComponentName;)V", "GetSetRestrictionsProvider_Landroid_content_ComponentName_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="provider" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="provider">The component name of the service that implements
                       <c>RestrictionsReceiver</c>. If this param is null, it removes the restrictions
                       provider previously assigned.</param>
        <summary>Designates a specific service component as the provider for making permission requests of a
            local or remote administrator of the user.</summary>
        <remarks>
          <para>Designates a specific service component as the provider for making permission requests of a
            local or remote administrator of the user.
            &lt;p/&gt;
            Only a device owner or profile owner can designate the restrictions provider.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setRestrictionsProvider(android.content.ComponentName,%20android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setRestrictionsProvider(android.content.ComponentName, android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetScreenCaptureDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetScreenCaptureDisabled (admin As ComponentName, disabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetScreenCaptureDisabled(Android::Content::ComponentName ^ admin, bool disabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetScreenCaptureDisabled (Android.Content.ComponentName? admin, bool disabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetScreenCaptureDisabled(class Android.Content.ComponentName admin, bool disabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetScreenCaptureDisabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetScreenCaptureDisabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetScreenCaptureDisabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetScreenCaptureDisabled (admin, disabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setScreenCaptureDisabled", "(Landroid/content/ComponentName;Z)V", "GetSetScreenCaptureDisabled_Landroid_content_ComponentName_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setScreenCaptureDisabled", "(Landroid/content/ComponentName;Z)V", "GetSetScreenCaptureDisabled_Landroid_content_ComponentName_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SCREEN_CAPTURE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SCREEN_CAPTURE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="disabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="disabled">Whether screen capture is disabled or not.</param>
        <summary>Called by a device/profile owner to set whether the screen capture is disabled.</summary>
        <remarks>
          <para>Called by a device/profile owner to set whether the screen capture is disabled. Disabling
            screen capture also prevents the content from being shown on display devices that do not have
            a secure video output. See <c>android.view.Display#FLAG_SECURE</c> for more details about
            secure surfaces and secure displays.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance, returned by
            <c>#getParentProfileInstance(ComponentName)</c>, where the calling device admin must be
            the profile owner of an organization-owned managed profile. If it is not, a security
            exception will be thrown.</para>
          <para>If the caller is device owner or called on the parent instance by a profile owner of an
            organization-owned managed profile, then the restriction will be applied to all users.</para>
          <para>From version <c>android.os.Build.VERSION_CODES#M</c> disabling screen capture also blocks
            assist requests for all activities of the relevant user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setScreenCaptureDisabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setScreenCaptureDisabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSecureSetting">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetSecureSetting (admin As ComponentName, setting As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSecureSetting(Android::Content::ComponentName ^ admin, System::String ^ setting, System::String ^ value);" />
      <MemberSignature Language="C#" Value="public virtual void SetSecureSetting (Android.Content.ComponentName admin, string? setting, string? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSecureSetting(class Android.Content.ComponentName admin, string setting, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetSecureSetting(Android.Content.ComponentName,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetSecureSetting : Android.Content.ComponentName * string * string -&gt; unit&#xA;override this.SetSecureSetting : Android.Content.ComponentName * string * string -&gt; unit" Usage="devicePolicyManager.SetSecureSetting (admin, setting, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSecureSetting", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V", "GetSetSecureSetting_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSecureSetting", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V", "GetSetSecureSetting_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="setting" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="setting">The name of the setting to update.</param>
        <param name="value">The value to update the setting to.</param>
        <summary>This method is mostly deprecated.</summary>
        <remarks>
          <para>This method is mostly deprecated.
            Most of the settings that still have an effect have dedicated setter methods
            (e.g. <c>#setLocationEnabled</c>) or user restrictions.</para>
          <para>Called by profile or device owners to update <c>android.provider.Settings.Secure</c>
            settings. Validation that the value of the setting is in the correct form for the setting
            type should be performed by the caller.</para>
          <para>The settings that can be updated by a profile or device owner with this method are:
            &lt;ul&gt;
            &lt;li&gt;<c>android.provider.Settings.Secure#DEFAULT_INPUT_METHOD</c>&lt;/li&gt;
            &lt;li&gt;<c>android.provider.Settings.Secure#SKIP_FIRST_USE_HINTS</c>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>A device owner can additionally update the following settings:
            &lt;ul&gt;
            &lt;li&gt;<c>android.provider.Settings.Secure#LOCATION_MODE</c>, but see note below.&lt;/li&gt;
            &lt;/ul&gt;
            
            &lt;strong&gt;Note: Starting from Android O, apps should no longer call this method with the
            setting <c>android.provider.Settings.Secure#INSTALL_NON_MARKET_APPS</c>, which is
            deprecated. Instead, device owners or profile owners should use the restriction
            <c>UserManager#DISALLOW_INSTALL_UNKNOWN_SOURCES</c>.
            If any app targeting <c>android.os.Build.VERSION_CODES#O</c> or higher calls this method
            with <c>android.provider.Settings.Secure#INSTALL_NON_MARKET_APPS</c>,
            an <c>UnsupportedOperationException</c> is thrown.
            
            Starting from Android Q, the device and profile owner can also call
            <c>UserManager#DISALLOW_INSTALL_UNKNOWN_SOURCES_GLOBALLY</c> to restrict unknown sources for
            all users.
            &lt;/strong&gt;
            
            &lt;strong&gt;Note: Starting from Android R, apps should no longer call this method with the
            setting <c>android.provider.Settings.Secure#LOCATION_MODE</c>, which is deprecated. Instead,
            device owners should call <c>#setLocationEnabled(ComponentName, boolean)</c>. This will be
            enforced for all apps targeting Android R or above.
            &lt;/strong&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setSecureSetting(android.content.ComponentName,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setSecureSetting(android.content.ComponentName, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSecurityLoggingEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetSecurityLoggingEnabled (admin As ComponentName, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSecurityLoggingEnabled(Android::Content::ComponentName ^ admin, bool enabled);" />
      <MemberSignature Language="C#" Value="public virtual void SetSecurityLoggingEnabled (Android.Content.ComponentName? admin, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSecurityLoggingEnabled(class Android.Content.ComponentName admin, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetSecurityLoggingEnabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetSecurityLoggingEnabled : Android.Content.ComponentName * bool -&gt; unit&#xA;override this.SetSecurityLoggingEnabled : Android.Content.ComponentName * bool -&gt; unit" Usage="devicePolicyManager.SetSecurityLoggingEnabled (admin, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSecurityLoggingEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetSecurityLoggingEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSecurityLoggingEnabled", "(Landroid/content/ComponentName;Z)V", "GetSetSecurityLoggingEnabled_Landroid_content_ComponentName_ZHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SECURITY_LOGGING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SECURITY_LOGGING")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which device admin this request is associated with, or <c>null</c>
                         if called by a delegated app.</param>
        <param name="enabled">whether security logging should be enabled or not.</param>
        <summary>Called by device owner or a profile owner of an organization-owned managed profile to
            control the security logging feature.</summary>
        <remarks>
          <para>Called by device owner or a profile owner of an organization-owned managed profile to
            control the security logging feature.</para>
          <para>Security logs contain various information intended for security auditing purposes.
            When security logging is enabled by any app other than the device owner, certain security
            logs are not visible (for example personal app launch events) or they will be redacted
            (for example, details of the physical volume mount events).
            Please see <c>SecurityEvent</c> for details.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; The device owner won't be able to retrieve security logs if there
            are unaffiliated secondary users or profiles on the device, regardless of whether the
            feature is enabled. Logs will be discarded if the internal buffer fills up while waiting for
            all users to become affiliated. Therefore it's recommended that affiliation ids are set for
            new users as soon as possible after provisioning via <c>#setAffiliationIds</c>. Non device
            owners are not subject to this restriction since all
            privacy-sensitive events happening outside the managed profile would have been redacted
            already.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setSecurityLoggingEnabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setSecurityLoggingEnabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShortSupportMessage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetShortSupportMessage (admin As ComponentName, message As ICharSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetShortSupportMessage(Android::Content::ComponentName ^ admin, Java::Lang::ICharSequence ^ message);" />
      <MemberSignature Language="C#" Value="public virtual void SetShortSupportMessage (Android.Content.ComponentName? admin, Java.Lang.ICharSequence? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetShortSupportMessage(class Android.Content.ComponentName admin, class Java.Lang.ICharSequence message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetShortSupportMessage(Android.Content.ComponentName,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member SetShortSupportMessage : Android.Content.ComponentName * Java.Lang.ICharSequence -&gt; unit&#xA;override this.SetShortSupportMessage : Android.Content.ComponentName * Java.Lang.ICharSequence -&gt; unit" Usage="devicePolicyManager.SetShortSupportMessage (admin, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setShortSupportMessage", "(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V", "GetSetShortSupportMessage_Landroid_content_ComponentName_Ljava_lang_CharSequence_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setShortSupportMessage", "(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V", "GetSetShortSupportMessage_Landroid_content_ComponentName_Ljava_lang_CharSequence_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SUPPORT_MESSAGE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SUPPORT_MESSAGE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="message" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <param name="message">Short message to be displayed to the user in settings or null to clear the
                       existing message.</param>
        <summary>Called by a device admin to set the short support message.</summary>
        <remarks>
          <para>Called by a device admin to set the short support message. This will be displayed to the user
            in settings screens where functionality has been disabled by the admin. The message should be
            limited to a short statement such as "This setting is disabled by your administrator. Contact
            someone</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setShortSupportMessage(android.content.ComponentName,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setShortSupportMessage(android.content.ComponentName, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetShortSupportMessage">
      <MemberSignature Language="VB.NET" Value="Public Sub SetShortSupportMessage (admin As ComponentName, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetShortSupportMessage(Android::Content::ComponentName ^ admin, System::String ^ message);" />
      <MemberSignature Language="C#" Value="public void SetShortSupportMessage (Android.Content.ComponentName? admin, string? message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetShortSupportMessage(class Android.Content.ComponentName admin, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetShortSupportMessage(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="member this.SetShortSupportMessage : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.SetShortSupportMessage (admin, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <param name="message">Short message to be displayed to the user in settings or null to clear the
                       existing message.</param>
        <summary>Called by a device admin to set the short support message.</summary>
        <remarks>
          <para>Called by a device admin to set the short support message. This will be displayed to the user
            in settings screens where functionality has been disabled by the admin. The message should be
            limited to a short statement such as "This setting is disabled by your administrator. Contact
            someone</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setShortSupportMessage(android.content.ComponentName,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setShortSupportMessage(android.content.ComponentName, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStartUserSessionMessage">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetStartUserSessionMessage (admin As ComponentName, startUserSessionMessage As ICharSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetStartUserSessionMessage(Android::Content::ComponentName ^ admin, Java::Lang::ICharSequence ^ startUserSessionMessage);" />
      <MemberSignature Language="C#" Value="public virtual void SetStartUserSessionMessage (Android.Content.ComponentName admin, Java.Lang.ICharSequence? startUserSessionMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStartUserSessionMessage(class Android.Content.ComponentName admin, class Java.Lang.ICharSequence startUserSessionMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetStartUserSessionMessage(Android.Content.ComponentName,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member SetStartUserSessionMessage : Android.Content.ComponentName * Java.Lang.ICharSequence -&gt; unit&#xA;override this.SetStartUserSessionMessage : Android.Content.ComponentName * Java.Lang.ICharSequence -&gt; unit" Usage="devicePolicyManager.SetStartUserSessionMessage (admin, startUserSessionMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStartUserSessionMessage", "(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V", "GetSetStartUserSessionMessage_Landroid_content_ComponentName_Ljava_lang_CharSequence_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStartUserSessionMessage", "(Landroid/content/ComponentName;Ljava/lang/CharSequence;)V", "GetSetStartUserSessionMessage_Landroid_content_ComponentName_Ljava_lang_CharSequence_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="startUserSessionMessage" Type="Java.Lang.ICharSequence">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="startUserSessionMessage">message for starting user session, or <c>null</c> to use
            system default message.</param>
        <summary>Called by a device owner to specify the user session start message.</summary>
        <remarks>
          <para>Called by a device owner to specify the user session start message. This may be displayed
            during a user switch.</para>
          <para>The message should be limited to a short statement or it may be truncated.</para>
          <para>If the message needs to be localized, it is the responsibility of the
            <c>DeviceAdminReceiver</c> to listen to the <c>Intent#ACTION_LOCALE_CHANGED</c> broadcast
            and set a new version of this message accordingly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setStartUserSessionMessage(android.content.ComponentName,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setStartUserSessionMessage(android.content.ComponentName, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStartUserSessionMessage">
      <MemberSignature Language="VB.NET" Value="Public Sub SetStartUserSessionMessage (admin As ComponentName, startUserSessionMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetStartUserSessionMessage(Android::Content::ComponentName ^ admin, System::String ^ startUserSessionMessage);" />
      <MemberSignature Language="C#" Value="public void SetStartUserSessionMessage (Android.Content.ComponentName admin, string? startUserSessionMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetStartUserSessionMessage(class Android.Content.ComponentName admin, string startUserSessionMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetStartUserSessionMessage(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="member this.SetStartUserSessionMessage : Android.Content.ComponentName * string -&gt; unit" Usage="devicePolicyManager.SetStartUserSessionMessage (admin, startUserSessionMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="startUserSessionMessage" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="startUserSessionMessage">message for starting user session, or <c>null</c> to use
            system default message.</param>
        <summary>Called by a device owner to specify the user session start message.</summary>
        <remarks>
          <para>Called by a device owner to specify the user session start message. This may be displayed
            during a user switch.</para>
          <para>The message should be limited to a short statement or it may be truncated.</para>
          <para>If the message needs to be localized, it is the responsibility of the
            <c>DeviceAdminReceiver</c> to listen to the <c>Intent#ACTION_LOCALE_CHANGED</c> broadcast
            and set a new version of this message accordingly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setStartUserSessionMessage(android.content.ComponentName,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setStartUserSessionMessage(android.content.ComponentName, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStatusBarDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetStatusBarDisabled (admin As ComponentName, disabled As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetStatusBarDisabled(Android::Content::ComponentName ^ admin, bool disabled);" />
      <MemberSignature Language="C#" Value="public virtual bool SetStatusBarDisabled (Android.Content.ComponentName? admin, bool disabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetStatusBarDisabled(class Android.Content.ComponentName admin, bool disabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetStatusBarDisabled(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetStatusBarDisabled : Android.Content.ComponentName * bool -&gt; bool&#xA;override this.SetStatusBarDisabled : Android.Content.ComponentName * bool -&gt; bool" Usage="devicePolicyManager.SetStatusBarDisabled (admin, disabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStatusBarDisabled", "(Landroid/content/ComponentName;Z)Z", "GetSetStatusBarDisabled_Landroid_content_ComponentName_ZHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStatusBarDisabled", "(Landroid/content/ComponentName;Z)Z", "GetSetStatusBarDisabled_Landroid_content_ComponentName_ZHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_STATUS_BAR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_STATUS_BAR")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="disabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin.</param>
        <param name="disabled">
          <c>true</c> disables the status bar, <c>false</c> reenables it.</param>
        <summary>Called by device owner or profile owner of secondary users that is affiliated with the
            device to disable the status bar.</summary>
        <returns>
          <c>false</c> if attempting to disable the status bar failed. <c>true</c> otherwise.</returns>
        <remarks>
          <para>Called by device owner or profile owner of secondary users that is affiliated with the
            device to disable the status bar. Disabling the status bar blocks notifications and quick
            settings.</para>
          <para>&lt;strong&gt;Note:&lt;/strong&gt; This method has no effect for LockTask mode. The behavior of the
            status bar in LockTask mode can be configured with
            <c>#setLockTaskFeatures(ComponentName, int)</c>. Calls to this method when the device is in
            LockTask mode will be registered, but will only take effect when the device leaves LockTask
            mode.</para>
          <para>This policy does not have any effect while on the lock screen, where the status bar will
            not be disabled. Using LockTask instead of this method is recommended.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setStatusBarDisabled(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setStatusBarDisabled(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetStorageEncryption">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetStorageEncryption (admin As ComponentName, encrypt As Boolean) As EncryptionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Admin::EncryptionStatus SetStorageEncryption(Android::Content::ComponentName ^ admin, bool encrypt);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.EncryptionStatus SetStorageEncryption (Android.Content.ComponentName admin, bool encrypt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.App.Admin.EncryptionStatus SetStorageEncryption(class Android.Content.ComponentName admin, bool encrypt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetStorageEncryption(Android.Content.ComponentName,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetStorageEncryption : Android.Content.ComponentName * bool -&gt; Android.App.Admin.EncryptionStatus&#xA;override this.SetStorageEncryption : Android.Content.ComponentName * bool -&gt; Android.App.Admin.EncryptionStatus" Usage="devicePolicyManager.SetStorageEncryption (admin, encrypt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStorageEncryption", "(Landroid/content/ComponentName;Z)I", "GetSetStorageEncryption_Landroid_content_ComponentName_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStorageEncryption", "(Landroid/content/ComponentName;Z)I", "GetSetStorageEncryption_Landroid_content_ComponentName_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.EncryptionStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="encrypt" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="encrypt">true to request encryption, false to release any previous request</param>
        <summary>This member is deprecated.</summary>
        <returns>the new total request status (for all active admins), or <c>DevicePolicyManager#ENCRYPTION_STATUS_UNSUPPORTED</c> if called for a non-system user.
                    Will be one of <c>#ENCRYPTION_STATUS_UNSUPPORTED</c>, <c>#ENCRYPTION_STATUS_INACTIVE</c>, or <c>#ENCRYPTION_STATUS_ACTIVE</c>. This is the value
                    of the requests; use <c>#getStorageEncryptionStatus()</c> to query the actual device
                    state.</returns>
        <remarks>
          <para>This member is deprecated. This method does not actually modify the storage encryption of the device.
            It has never affected the encryption status of a device.
            
            Called by an application that is administering the device to request that the storage system
            be encrypted. Does nothing if the caller is on a secondary user or a managed profile.
            &lt;p&gt;
            When multiple device administrators attempt to control device encryption, the most secure,
            supported setting will always be used. If any device administrator requests device
            encryption, it will be enabled; Conversely, if a device administrator attempts to disable
            device encryption while another device administrator has enabled it, the call to disable will
            fail (most commonly returning <c>#ENCRYPTION_STATUS_ACTIVE</c>).
            &lt;p&gt;
            This policy controls encryption of the secure (application data) storage area. Data written
            to other storage areas may or may not be encrypted, and this policy does not require or
            control the encryption of any other storage areas. There is one exception: If
            <c>android.os.Environment#isExternalStorageEmulated()</c> is <c>true</c>, then the
            directory returned by <c>android.os.Environment#getExternalStorageDirectory()</c> must be
            written to disk within the encrypted storage area.
            &lt;p&gt;
            Important Note: On some devices, it is possible to encrypt storage without requiring the user
            to create a device PIN or Password. In this case, the storage is encrypted, but the
            encryption key may not be fully secured. For maximum security, the administrator should also
            require (and check for) a pattern, PIN, or password.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setStorageEncryption(android.content.ComponentName,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setStorageEncryption(android.content.ComponentName, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetSystemSetting">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetSystemSetting (admin As ComponentName, setting As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSystemSetting(Android::Content::ComponentName ^ admin, System::String ^ setting, System::String ^ value);" />
      <MemberSignature Language="C#" Value="public virtual void SetSystemSetting (Android.Content.ComponentName admin, string setting, string? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSystemSetting(class Android.Content.ComponentName admin, string setting, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetSystemSetting(Android.Content.ComponentName,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetSystemSetting : Android.Content.ComponentName * string * string -&gt; unit&#xA;override this.SetSystemSetting : Android.Content.ComponentName * string * string -&gt; unit" Usage="devicePolicyManager.SetSystemSetting (admin, setting, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSystemSetting", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V", "GetSetSystemSetting_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSystemSetting", "(Landroid/content/ComponentName;Ljava/lang/String;Ljava/lang/String;)V", "GetSetSystemSetting_Landroid_content_ComponentName_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="setting" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.StringDef(Fields=new System.String[] { "", "", "" }, Type="")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.StringDef(Fields=new System.String[] { "", "", "" }, Type="")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="value" Type="System.String">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="setting">The name of the setting to update.</param>
        <param name="value">The value to update the setting to.</param>
        <summary>Called by a device or profile owner to update <c>android.provider.Settings.System</c>
            settings.</summary>
        <remarks>
          <para>Called by a device or profile owner to update <c>android.provider.Settings.System</c>
            settings. Validation that the value of the setting is in the correct form for the setting
            type should be performed by the caller.</para>
          <para>The settings that can be updated by a device owner or profile owner of secondary user with
            this method are:
            &lt;ul&gt;
            &lt;li&gt;<c>android.provider.Settings.System#SCREEN_BRIGHTNESS</c>&lt;/li&gt;
            &lt;li&gt;<c>android.provider.Settings.System#SCREEN_BRIGHTNESS_MODE</c>&lt;/li&gt;
            &lt;li&gt;<c>android.provider.Settings.System#SCREEN_OFF_TIMEOUT</c>&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para />
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setSystemSetting(android.content.ComponentName,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setSystemSetting(android.content.ComponentName, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSystemUpdatePolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetSystemUpdatePolicy (admin As ComponentName, policy As SystemUpdatePolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSystemUpdatePolicy(Android::Content::ComponentName ^ admin, Android::App::Admin::SystemUpdatePolicy ^ policy);" />
      <MemberSignature Language="C#" Value="public virtual void SetSystemUpdatePolicy (Android.Content.ComponentName admin, Android.App.Admin.SystemUpdatePolicy? policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSystemUpdatePolicy(class Android.Content.ComponentName admin, class Android.App.Admin.SystemUpdatePolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetSystemUpdatePolicy(Android.Content.ComponentName,Android.App.Admin.SystemUpdatePolicy)" />
      <MemberSignature Language="F#" Value="abstract member SetSystemUpdatePolicy : Android.Content.ComponentName * Android.App.Admin.SystemUpdatePolicy -&gt; unit&#xA;override this.SetSystemUpdatePolicy : Android.Content.ComponentName * Android.App.Admin.SystemUpdatePolicy -&gt; unit" Usage="devicePolicyManager.SetSystemUpdatePolicy (admin, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSystemUpdatePolicy", "(Landroid/content/ComponentName;Landroid/app/admin/SystemUpdatePolicy;)V", "GetSetSystemUpdatePolicy_Landroid_content_ComponentName_Landroid_app_admin_SystemUpdatePolicy_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSystemUpdatePolicy", "(Landroid/content/ComponentName;Landroid/app/admin/SystemUpdatePolicy;)V", "GetSetSystemUpdatePolicy_Landroid_content_ComponentName_Landroid_app_admin_SystemUpdatePolicy_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SYSTEM_UPDATES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_SYSTEM_UPDATES")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="policy" Type="Android.App.Admin.SystemUpdatePolicy">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. All
                       components in the package can set system update policies and the most
                       recent policy takes effect. This should be null if the caller is not a device
                         admin.</param>
        <param name="policy">the new policy, or <c>null</c> to clear the current policy.</param>
        <summary>Called by device owners or profile owners of an organization-owned managed profile to to set
            a local system update policy.</summary>
        <remarks>
          <para>Called by device owners or profile owners of an organization-owned managed profile to to set
            a local system update policy. When a new policy is set,
            <c>#ACTION_SYSTEM_UPDATE_POLICY_CHANGED</c> is broadcast.</para>
          <para>If the supplied system update policy has freeze periods set but the freeze periods do not
            meet 90-day maximum length or 60-day minimum separation requirement set out in
            <c>SystemUpdatePolicy#setFreezePeriods</c>,
            <c>SystemUpdatePolicy.ValidationFailedException</c> will the thrown. Note that the system
            keeps a record of freeze periods the device experienced previously, and combines them with
            the new freeze periods to be set when checking the maximum freeze length and minimum freeze
            separation constraints. As a result, freeze periods that passed validation during
            <c>SystemUpdatePolicy#setFreezePeriods</c> might fail the additional checks here due to
            the freeze period history. If this is causing issues during development,
            <c>adb shell dpm clear-freeze-period-record</c> can be used to clear the record.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setSystemUpdatePolicy(android.content.ComponentName,%20android.app.admin.SystemUpdatePolicy)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setSystemUpdatePolicy(android.content.ComponentName, android.app.admin.SystemUpdatePolicy)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTime">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTime (admin As ComponentName, millis As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetTime(Android::Content::ComponentName ^ admin, long millis);" />
      <MemberSignature Language="C#" Value="public virtual bool SetTime (Android.Content.ComponentName? admin, long millis);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTime(class Android.Content.ComponentName admin, int64 millis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetTime(Android.Content.ComponentName,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member SetTime : Android.Content.ComponentName * int64 -&gt; bool&#xA;override this.SetTime : Android.Content.ComponentName * int64 -&gt; bool" Usage="devicePolicyManager.SetTime (admin, millis)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTime", "(Landroid/content/ComponentName;J)Z", "GetSetTime_Landroid_content_ComponentName_JHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTime", "(Landroid/content/ComponentName;J)Z", "GetSetTime_Landroid_content_ComponentName_JHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.SET_TIME")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.SET_TIME")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="millis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <param name="millis">time in milliseconds since the Epoch</param>
        <summary>Called by a device owner or a profile owner of an organization-owned managed
            profile to set the system wall clock time.</summary>
        <returns>
          <c>true</c> if set time succeeded, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Called by a device owner or a profile owner of an organization-owned managed
            profile to set the system wall clock time. This only takes effect if called when
            <c>android.provider.Settings.Global#AUTO_TIME</c> is 0, otherwise <c>false</c>
            will be returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setTime(android.content.ComponentName,%20long)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setTime(android.content.ComponentName, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTimeZone">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SetTimeZone (admin As ComponentName, timeZone As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SetTimeZone(Android::Content::ComponentName ^ admin, System::String ^ timeZone);" />
      <MemberSignature Language="C#" Value="public virtual bool SetTimeZone (Android.Content.ComponentName? admin, string? timeZone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetTimeZone(class Android.Content.ComponentName admin, string timeZone) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetTimeZone(Android.Content.ComponentName,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetTimeZone : Android.Content.ComponentName * string -&gt; bool&#xA;override this.SetTimeZone : Android.Content.ComponentName * string -&gt; bool" Usage="devicePolicyManager.SetTimeZone (admin, timeZone)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTimeZone", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetSetTimeZone_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTimeZone", "(Landroid/content/ComponentName;Ljava/lang/String;)Z", "GetSetTimeZone_Landroid_content_ComponentName_Ljava_lang_String_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.SET_TIME_ZONE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.SET_TIME_ZONE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="timeZone" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <param name="timeZone">one of the Olson ids from the list returned by
                <c>java.util.TimeZone#getAvailableIDs</c></param>
        <summary>Called by a device owner or a profile owner of an organization-owned managed
            profile to set the system's persistent default time zone.</summary>
        <returns>
          <c>true</c> if set timezone succeeded, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Called by a device owner or a profile owner of an organization-owned managed
            profile to set the system's persistent default time zone. This only takes
            effect if called when <c>android.provider.Settings.Global#AUTO_TIME_ZONE</c>
            is 0, otherwise <c>false</c> will be returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setTimeZone(android.content.ComponentName,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setTimeZone(android.content.ComponentName, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTrustAgentConfiguration">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTrustAgentConfiguration (admin As ComponentName, target As ComponentName, configuration As PersistableBundle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTrustAgentConfiguration(Android::Content::ComponentName ^ admin, Android::Content::ComponentName ^ target, Android::OS::PersistableBundle ^ configuration);" />
      <MemberSignature Language="C#" Value="public virtual void SetTrustAgentConfiguration (Android.Content.ComponentName? admin, Android.Content.ComponentName target, Android.OS.PersistableBundle? configuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTrustAgentConfiguration(class Android.Content.ComponentName admin, class Android.Content.ComponentName target, class Android.OS.PersistableBundle configuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetTrustAgentConfiguration(Android.Content.ComponentName,Android.Content.ComponentName,Android.OS.PersistableBundle)" />
      <MemberSignature Language="F#" Value="abstract member SetTrustAgentConfiguration : Android.Content.ComponentName * Android.Content.ComponentName * Android.OS.PersistableBundle -&gt; unit&#xA;override this.SetTrustAgentConfiguration : Android.Content.ComponentName * Android.Content.ComponentName * Android.OS.PersistableBundle -&gt; unit" Usage="devicePolicyManager.SetTrustAgentConfiguration (admin, target, configuration)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTrustAgentConfiguration", "(Landroid/content/ComponentName;Landroid/content/ComponentName;Landroid/os/PersistableBundle;)V", "GetSetTrustAgentConfiguration_Landroid_content_ComponentName_Landroid_content_ComponentName_Landroid_os_PersistableBundle_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTrustAgentConfiguration", "(Landroid/content/ComponentName;Landroid/content/ComponentName;Landroid/os/PersistableBundle;)V", "GetSetTrustAgentConfiguration_Landroid_content_ComponentName_Landroid_content_ComponentName_Landroid_os_PersistableBundle_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_KEYGUARD")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_KEYGUARD")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="target" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="configuration" Type="Android.OS.PersistableBundle" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                         caller is not a device admin</param>
        <param name="target">Component name of the agent to be configured.</param>
        <param name="configuration">Trust-agent-specific feature configuration bundle. Please consult
                   documentation of the specific trust agent to determine the interpretation of this
                   bundle.</param>
        <summary>Sets a list of configuration features to enable for a trust agent component.</summary>
        <remarks>
          <para>Sets a list of configuration features to enable for a trust agent component. This is meant to
            be used in conjunction with <c>#KEYGUARD_DISABLE_TRUST_AGENTS</c>, which disables all trust
            agents but those enabled by this function call. If flag
            <c>#KEYGUARD_DISABLE_TRUST_AGENTS</c> is not set, then this call has no effect.</para>
          <para>For any specific trust agent, whether it is disabled or not depends on the aggregated state
            of each admin's <c>#KEYGUARD_DISABLE_TRUST_AGENTS</c> setting and its trust agent
            configuration as set by this function call. In particular: if any admin sets
            <c>#KEYGUARD_DISABLE_TRUST_AGENTS</c> and does not additionally set any
            trust agent configuration, the trust agent is disabled completely. Otherwise, the trust agent
            will receive the list of configurations from all admins who set
            <c>#KEYGUARD_DISABLE_TRUST_AGENTS</c> and aggregate the configurations to determine its
            behavior. The exact meaning of aggregation is trust-agent-specific.</para>
          <para>A calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_DISABLE_KEYGUARD_FEATURES</c> to be able to call this method;
            if not, a security exception will be thrown.</para>
          <para>This method can be called on the <c>DevicePolicyManager</c> instance returned by
            <c>#getParentProfileInstance(ComponentName)</c> in order to set the configuration for
            the parent profile.</para>
          <para>On devices not supporting <c>PackageManager#FEATURE_SECURE_LOCK_SCREEN</c> feature, calling
            this method has no effect - no trust agent configuration will be set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setTrustAgentConfiguration(android.content.ComponentName,%20android.content.ComponentName,%20android.os.PersistableBundle)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setTrustAgentConfiguration(android.content.ComponentName, android.content.ComponentName, android.os.PersistableBundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUninstallBlocked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetUninstallBlocked (admin As ComponentName, packageName As String, uninstallBlocked As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUninstallBlocked(Android::Content::ComponentName ^ admin, System::String ^ packageName, bool uninstallBlocked);" />
      <MemberSignature Language="C#" Value="public virtual void SetUninstallBlocked (Android.Content.ComponentName? admin, string? packageName, bool uninstallBlocked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUninstallBlocked(class Android.Content.ComponentName admin, string packageName, bool uninstallBlocked) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetUninstallBlocked(Android.Content.ComponentName,System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetUninstallBlocked : Android.Content.ComponentName * string * bool -&gt; unit&#xA;override this.SetUninstallBlocked : Android.Content.ComponentName * string * bool -&gt; unit" Usage="devicePolicyManager.SetUninstallBlocked (admin, packageName, uninstallBlocked)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setUninstallBlocked", "(Landroid/content/ComponentName;Ljava/lang/String;Z)V", "GetSetUninstallBlocked_Landroid_content_ComponentName_Ljava_lang_String_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setUninstallBlocked", "(Landroid/content/ComponentName;Ljava/lang/String;Z)V", "GetSetUninstallBlocked_Landroid_content_ComponentName_Ljava_lang_String_ZHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_APPS_CONTROL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_APPS_CONTROL")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="uninstallBlocked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <param name="packageName">package to change.</param>
        <param name="uninstallBlocked">true if the user shouldn't be able to uninstall the package.</param>
        <summary>Change whether a user can uninstall a package.</summary>
        <remarks>
          <para>Change whether a user can uninstall a package. This function can be called by a device owner,
            profile owner, or by a delegate given the <c>#DELEGATION_BLOCK_UNINSTALL</c> scope via
            <c>#setDelegatedScopes</c> or holders of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_APPS_CONTROL</c>.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, after the set uninstall blocked
            policy has been set, <c>PolicyUpdateReceiver#onPolicySetResult(Context, String,
            Bundle, TargetUser, PolicyUpdateResult)</c> will notify the admin on whether the policy was
            successfully set or not. This callback will contain:
            &lt;ul&gt;
            &lt;li&gt; The policy identifier
            <c>DevicePolicyIdentifiers#PACKAGE_UNINSTALL_BLOCKED_POLICY</c>&lt;li&gt; The additional policy params bundle, which contains
            <c>PolicyUpdateReceiver#EXTRA_PACKAGE_NAME</c> the package name the policy applies to
            &lt;li&gt; The <c>TargetUser</c> that this policy relates to
            &lt;li&gt; The <c>PolicyUpdateResult</c>, which will be
            <c>PolicyUpdateResult#RESULT_POLICY_SET</c> if the policy was successfully set or the
            reason the policy failed to be set
            (e.g. <c>PolicyUpdateResult#RESULT_FAILURE_CONFLICTING_ADMIN_POLICY</c>)
            &lt;/ul&gt;
            If there has been a change to the policy,
            <c>PolicyUpdateReceiver#onPolicyChanged(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin of this change. This callback will contain the
            same parameters as PolicyUpdateReceiver#onPolicySetResult and the <c>PolicyUpdateResult</c>
            will contain the reason why the policy changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setUninstallBlocked(android.content.ComponentName,%20java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setUninstallBlocked(android.content.ComponentName, java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserControlDisabledPackages">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetUserControlDisabledPackages (admin As ComponentName, packages As IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUserControlDisabledPackages(Android::Content::ComponentName ^ admin, System::Collections::Generic::IList&lt;System::String ^&gt; ^ packages);" />
      <MemberSignature Language="C#" Value="public virtual void SetUserControlDisabledPackages (Android.Content.ComponentName? admin, System.Collections.Generic.IList&lt;string&gt; packages);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserControlDisabledPackages(class Android.Content.ComponentName admin, class System.Collections.Generic.IList`1&lt;string&gt; packages) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetUserControlDisabledPackages(Android.Content.ComponentName,System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="F#" Value="abstract member SetUserControlDisabledPackages : Android.Content.ComponentName * System.Collections.Generic.IList&lt;string&gt; -&gt; unit&#xA;override this.SetUserControlDisabledPackages : Android.Content.ComponentName * System.Collections.Generic.IList&lt;string&gt; -&gt; unit" Usage="devicePolicyManager.SetUserControlDisabledPackages (admin, packages)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setUserControlDisabledPackages", "(Landroid/content/ComponentName;Ljava/util/List;)V", "GetSetUserControlDisabledPackages_Landroid_content_ComponentName_Ljava_util_List_Handler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setUserControlDisabledPackages", "(Landroid/content/ComponentName;Ljava/util/List;)V", "GetSetUserControlDisabledPackages_Landroid_content_ComponentName_Ljava_util_List_Handler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_APPS_CONTROL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_APPS_CONTROL")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="packages" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with. Null if the
                          caller is not a device admin.</param>
        <param name="packages">The package names for the apps.</param>
        <summary>Called by a device owner or a profile owner or holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_APPS_CONTROL</c> to disable user
            control over apps.</summary>
        <remarks>
          <para>Called by a device owner or a profile owner or holder of the permission
            <c>android.Manifest.permission#MANAGE_DEVICE_POLICY_APPS_CONTROL</c> to disable user
            control over apps. User will not be able to clear app data or force-stop packages. When
            called by a device owner, applies to all users on the device. Packages with user control
            disabled are exempted from App Standby Buckets.</para>
          <para>Starting from <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c>, after the user control disabled
            packages policy has been set, <c>PolicyUpdateReceiver#onPolicySetResult(Context, String,
            Bundle, TargetUser, PolicyUpdateResult)</c> will notify the admin on whether the policy was
            successfully set or not. This callback will contain:
            &lt;ul&gt;
            &lt;li&gt; The policy identifier
            <c>DevicePolicyIdentifiers#USER_CONTROL_DISABLED_PACKAGES_POLICY</c>&lt;li&gt; The <c>TargetUser</c> that this policy relates to
            &lt;li&gt; The <c>PolicyUpdateResult</c>, which will be
            <c>PolicyUpdateResult#RESULT_POLICY_SET</c> if the policy was successfully set or the
            reason the policy failed to be set
            (e.g. <c>PolicyUpdateResult#RESULT_FAILURE_CONFLICTING_ADMIN_POLICY</c>)
            &lt;/ul&gt;
            If there has been a change to the policy,
            <c>PolicyUpdateReceiver#onPolicyChanged(Context, String, Bundle, TargetUser,
            PolicyUpdateResult)</c> will notify the admin of this change. This callback will contain the
            same parameters as PolicyUpdateReceiver#onPolicySetResult and the <c>PolicyUpdateResult</c>
            will contain the reason why the policy changed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setUserControlDisabledPackages(android.content.ComponentName,%20java.util.List%3Cjava.lang.String%3E)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setUserControlDisabledPackages(android.content.ComponentName, java.util.List&lt;java.lang.String&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetUserIcon">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetUserIcon (admin As ComponentName, icon As Bitmap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetUserIcon(Android::Content::ComponentName ^ admin, Android::Graphics::Bitmap ^ icon);" />
      <MemberSignature Language="C#" Value="public virtual void SetUserIcon (Android.Content.ComponentName admin, Android.Graphics.Bitmap? icon);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetUserIcon(class Android.Content.ComponentName admin, class Android.Graphics.Bitmap icon) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SetUserIcon(Android.Content.ComponentName,Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="abstract member SetUserIcon : Android.Content.ComponentName * Android.Graphics.Bitmap -&gt; unit&#xA;override this.SetUserIcon : Android.Content.ComponentName * Android.Graphics.Bitmap -&gt; unit" Usage="devicePolicyManager.SetUserIcon (admin, icon)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setUserIcon", "(Landroid/content/ComponentName;Landroid/graphics/Bitmap;)V", "GetSetUserIcon_Landroid_content_ComponentName_Landroid_graphics_Bitmap_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setUserIcon", "(Landroid/content/ComponentName;Landroid/graphics/Bitmap;)V", "GetSetUserIcon_Landroid_content_ComponentName_Landroid_graphics_Bitmap_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="icon" Type="Android.Graphics.Bitmap">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="icon">the bitmap to set as the photo.</param>
        <summary>Called by profile or device owners to set the user's photo.</summary>
        <remarks>
          <para>Called by profile or device owners to set the user's photo.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setUserIcon(android.content.ComponentName,%20android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setUserIcon(android.content.ComponentName, android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipSetupWizard">
      <MemberSignature Language="VB.NET" Value="Public Const SkipSetupWizard As UserManagementFlags  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::UserManagementFlags SkipSetupWizard = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.UserManagementFlags SkipSetupWizard = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.UserManagementFlags SkipSetupWizard = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.SkipSetupWizard" />
      <MemberSignature Language="F#" Value="val mutable SkipSetupWizard : Android.App.Admin.UserManagementFlags" Usage="Android.App.Admin.DevicePolicyManager.SkipSetupWizard" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SKIP_SETUP_WIZARD", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SKIP_SETUP_WIZARD", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.UserManagementFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.UserManagementFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.UserManagementFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag used by <c>#createAndManageUser</c> to skip setup wizard after creating a new user.</summary>
        <remarks>
          <para>Flag used by <c>#createAndManageUser</c> to skip setup wizard after creating a new user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#SKIP_SETUP_WIZARD" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.SKIP_SETUP_WIZARD</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartUserInBackground">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StartUserInBackground (admin As ComponentName, userHandle As UserHandle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int StartUserInBackground(Android::Content::ComponentName ^ admin, Android::OS::UserHandle ^ userHandle);" />
      <MemberSignature Language="C#" Value="public virtual int StartUserInBackground (Android.Content.ComponentName admin, Android.OS.UserHandle userHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 StartUserInBackground(class Android.Content.ComponentName admin, class Android.OS.UserHandle userHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.StartUserInBackground(Android.Content.ComponentName,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member StartUserInBackground : Android.Content.ComponentName * Android.OS.UserHandle -&gt; int&#xA;override this.StartUserInBackground : Android.Content.ComponentName * Android.OS.UserHandle -&gt; int" Usage="devicePolicyManager.StartUserInBackground (admin, userHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startUserInBackground", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)I", "GetStartUserInBackground_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startUserInBackground", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)I", "GetStartUserInBackground_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="userHandle" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="userHandle">the user to be started in background.</param>
        <summary>Called by a device owner to start the specified secondary user in background.</summary>
        <returns>one of the following result codes:
            <c>UserManager#USER_OPERATION_ERROR_UNKNOWN</c>,
            <c>UserManager#USER_OPERATION_SUCCESS</c>,
            <c>UserManager#USER_OPERATION_ERROR_MANAGED_PROFILE</c>,
            <c>UserManager#USER_OPERATION_ERROR_MAX_RUNNING_USERS</c>,</returns>
        <remarks>
          <para>Called by a device owner to start the specified secondary user in background.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#startUserInBackground(android.content.ComponentName,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.startUserInBackground(android.content.ComponentName, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopUser">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function StopUser (admin As ComponentName, userHandle As UserHandle) As UserOperationResultCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::OS::UserOperationResultCode StopUser(Android::Content::ComponentName ^ admin, Android::OS::UserHandle ^ userHandle);" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.UserOperationResultCode StopUser (Android.Content.ComponentName admin, Android.OS.UserHandle userHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.OS.UserOperationResultCode StopUser(class Android.Content.ComponentName admin, class Android.OS.UserHandle userHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.StopUser(Android.Content.ComponentName,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member StopUser : Android.Content.ComponentName * Android.OS.UserHandle -&gt; Android.OS.UserOperationResultCode&#xA;override this.StopUser : Android.Content.ComponentName * Android.OS.UserHandle -&gt; Android.OS.UserOperationResultCode" Usage="devicePolicyManager.StopUser (admin, userHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopUser", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)I", "GetStopUser_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopUser", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)I", "GetStopUser_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.UserOperationResultCode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="userHandle" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="userHandle">the user to be stopped.</param>
        <summary>Called by a device owner to stop the specified secondary user.</summary>
        <returns>one of the following result codes:
            <c>UserManager#USER_OPERATION_ERROR_UNKNOWN</c>,
            <c>UserManager#USER_OPERATION_SUCCESS</c>,
            <c>UserManager#USER_OPERATION_ERROR_MANAGED_PROFILE</c>,
            <c>UserManager#USER_OPERATION_ERROR_CURRENT_USER</c></returns>
        <remarks>
          <para>Called by a device owner to stop the specified secondary user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#stopUser(android.content.ComponentName,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.stopUser(android.content.ComponentName, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StorageEncryptionStatus">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property StorageEncryptionStatus As EncryptionStatus" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::App::Admin::EncryptionStatus StorageEncryptionStatus { Android::App::Admin::EncryptionStatus get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.EncryptionStatus StorageEncryptionStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.App.Admin.EncryptionStatus StorageEncryptionStatus" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.StorageEncryptionStatus" />
      <MemberSignature Language="F#" Value="member this.StorageEncryptionStatus : Android.App.Admin.EncryptionStatus" Usage="Android.App.Admin.DevicePolicyManager.StorageEncryptionStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStorageEncryptionStatus", "()I", "GetGetStorageEncryptionStatusHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStorageEncryptionStatus", "()I", "GetGetStorageEncryptionStatusHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.EncryptionStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Called by an application that is administering the device to
            determine the current encryption status of the device.</summary>
        <value>current status of encryption. The value will be one of
            <c>#ENCRYPTION_STATUS_UNSUPPORTED</c>, <c>#ENCRYPTION_STATUS_INACTIVE</c>,
            <c>#ENCRYPTION_STATUS_ACTIVATING</c>, <c>#ENCRYPTION_STATUS_ACTIVE_DEFAULT_KEY</c>,
            <c>#ENCRYPTION_STATUS_ACTIVE</c>, or <c>#ENCRYPTION_STATUS_ACTIVE_PER_USER</c>.</value>
        <remarks>
          <para>Called by an application that is administering the device to
            determine the current encryption status of the device.</para>
          <para>Depending on the returned status code, the caller may proceed in different
            ways.  If the result is <c>#ENCRYPTION_STATUS_UNSUPPORTED</c>, the
            storage system does not support encryption.  If the
            result is <c>#ENCRYPTION_STATUS_INACTIVE</c>, use <c>#ACTION_START_ENCRYPTION</c> to begin the process of encrypting or decrypting the
            storage.  If the result is <c>#ENCRYPTION_STATUS_ACTIVE_DEFAULT_KEY</c>, the
            storage system has enabled encryption but no password is set so further action
            may be required.  If the result is <c>#ENCRYPTION_STATUS_ACTIVATING</c>,
            <c>#ENCRYPTION_STATUS_ACTIVE</c> or <c>#ENCRYPTION_STATUS_ACTIVE_PER_USER</c>,
            no further action is required.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getStorageEncryptionStatus()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getStorageEncryptionStatus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SwitchUser">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SwitchUser (admin As ComponentName, userHandle As UserHandle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool SwitchUser(Android::Content::ComponentName ^ admin, Android::OS::UserHandle ^ userHandle);" />
      <MemberSignature Language="C#" Value="public virtual bool SwitchUser (Android.Content.ComponentName admin, Android.OS.UserHandle? userHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SwitchUser(class Android.Content.ComponentName admin, class Android.OS.UserHandle userHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.SwitchUser(Android.Content.ComponentName,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member SwitchUser : Android.Content.ComponentName * Android.OS.UserHandle -&gt; bool&#xA;override this.SwitchUser : Android.Content.ComponentName * Android.OS.UserHandle -&gt; bool" Usage="devicePolicyManager.SwitchUser (admin, userHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("switchUser", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)Z", "GetSwitchUser_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("switchUser", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)Z", "GetSwitchUser_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="userHandle" Type="Android.OS.UserHandle">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="userHandle">the user to switch to; null will switch to primary.</param>
        <summary>Called by a device owner to switch the specified secondary user to the foreground.</summary>
        <returns>
          <c>true</c> if the switch was successful, <c>false</c> otherwise.</returns>
        <remarks>
          <para>Called by a device owner to switch the specified secondary user to the foreground.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#switchUser(android.content.ComponentName,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.switchUser(android.content.ComponentName, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="F:Android.Content.Intent.ActionUserForeground" />
      </Docs>
    </Member>
    <Member MemberName="SystemUpdatePolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SystemUpdatePolicy As SystemUpdatePolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::App::Admin::SystemUpdatePolicy ^ SystemUpdatePolicy { Android::App::Admin::SystemUpdatePolicy ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.SystemUpdatePolicy? SystemUpdatePolicy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.Admin.SystemUpdatePolicy SystemUpdatePolicy" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.SystemUpdatePolicy" />
      <MemberSignature Language="F#" Value="member this.SystemUpdatePolicy : Android.App.Admin.SystemUpdatePolicy" Usage="Android.App.Admin.DevicePolicyManager.SystemUpdatePolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSystemUpdatePolicy", "()Landroid/app/admin/SystemUpdatePolicy;", "GetGetSystemUpdatePolicyHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSystemUpdatePolicy", "()Landroid/app/admin/SystemUpdatePolicy;", "GetGetSystemUpdatePolicyHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.SystemUpdatePolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve a local system update policy set previously by <c>#setSystemUpdatePolicy</c>.</summary>
        <value>The current policy object, or <c>null</c> if no policy is set.</value>
        <remarks>
          <para>Retrieve a local system update policy set previously by <c>#setSystemUpdatePolicy</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getSystemUpdatePolicy()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getSystemUpdatePolicy()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.Admin.DevicePolicyManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.Admin.DevicePolicyManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferOwnership">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub TransferOwnership (admin As ComponentName, target As ComponentName, bundle As PersistableBundle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void TransferOwnership(Android::Content::ComponentName ^ admin, Android::Content::ComponentName ^ target, Android::OS::PersistableBundle ^ bundle);" />
      <MemberSignature Language="C#" Value="public virtual void TransferOwnership (Android.Content.ComponentName admin, Android.Content.ComponentName target, Android.OS.PersistableBundle? bundle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void TransferOwnership(class Android.Content.ComponentName admin, class Android.Content.ComponentName target, class Android.OS.PersistableBundle bundle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.TransferOwnership(Android.Content.ComponentName,Android.Content.ComponentName,Android.OS.PersistableBundle)" />
      <MemberSignature Language="F#" Value="abstract member TransferOwnership : Android.Content.ComponentName * Android.Content.ComponentName * Android.OS.PersistableBundle -&gt; unit&#xA;override this.TransferOwnership : Android.Content.ComponentName * Android.Content.ComponentName * Android.OS.PersistableBundle -&gt; unit" Usage="devicePolicyManager.TransferOwnership (admin, target, bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("transferOwnership", "(Landroid/content/ComponentName;Landroid/content/ComponentName;Landroid/os/PersistableBundle;)V", "GetTransferOwnership_Landroid_content_ComponentName_Landroid_content_ComponentName_Landroid_os_PersistableBundle_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("transferOwnership", "(Landroid/content/ComponentName;Landroid/content/ComponentName;Landroid/os/PersistableBundle;)V", "GetTransferOwnership_Landroid_content_ComponentName_Landroid_content_ComponentName_Landroid_os_PersistableBundle_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="target" Type="Android.Content.ComponentName" />
        <Parameter Name="bundle" Type="Android.OS.PersistableBundle">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with.</param>
        <param name="target">which <c>DeviceAdminReceiver</c> we want the new administrator to be.</param>
        <param name="bundle">data to be sent to the new administrator.</param>
        <summary>Changes the current administrator to another one.</summary>
        <remarks>
          <para>Changes the current administrator to another one. All policies from the current
            administrator are migrated to the new administrator. The whole operation is atomic -
            the transfer is either complete or not done at all.</para>
          <para>Depending on the current administrator (device owner, profile owner), you have the
            following expected behaviour:
            &lt;ul&gt;
                &lt;li&gt;A device owner can only be transferred to a new device owner&lt;/li&gt;
                &lt;li&gt;A profile owner can only be transferred to a new profile owner&lt;/li&gt;
            &lt;/ul&gt;</para>
          <para>Use the <c>bundle</c> parameter to pass data to the new administrator. The data
            will be received in the
            <c>DeviceAdminReceiver#onTransferOwnershipComplete(Context, PersistableBundle)</c>
            callback of the new administrator.</para>
          <para>The transfer has failed if the original administrator is still the corresponding owner
            after calling this method.</para>
          <para>The incoming target administrator must have the
            <c>&amp;lt;support-transfer-ownership /&amp;gt;</c> tag inside the
            <c>&amp;lt;device-admin&amp;gt;&amp;lt;/device-admin&amp;gt;</c> tags in the xml file referenced by
            <c>DeviceAdminReceiver#DEVICE_ADMIN_META_DATA</c>. Otherwise an
            <c>IllegalArgumentException</c> will be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#transferOwnership(android.content.ComponentName,%20android.content.ComponentName,%20android.os.PersistableBundle)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.transferOwnership(android.content.ComponentName, android.content.ComponentName, android.os.PersistableBundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferOwnershipBundle">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TransferOwnershipBundle As PersistableBundle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::OS::PersistableBundle ^ TransferOwnershipBundle { Android::OS::PersistableBundle ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.PersistableBundle? TransferOwnershipBundle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.PersistableBundle TransferOwnershipBundle" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.TransferOwnershipBundle" />
      <MemberSignature Language="F#" Value="member this.TransferOwnershipBundle : Android.OS.PersistableBundle" Usage="Android.App.Admin.DevicePolicyManager.TransferOwnershipBundle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTransferOwnershipBundle", "()Landroid/os/PersistableBundle;", "GetGetTransferOwnershipBundleHandler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTransferOwnershipBundle", "()Landroid/os/PersistableBundle;", "GetGetTransferOwnershipBundleHandler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.PersistableBundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the data passed from the current administrator to the new administrator during an
            ownership transfer.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the data passed from the current administrator to the new administrator during an
            ownership transfer. This is the same <c>bundle</c> passed in
            <c>#transferOwnership(ComponentName, ComponentName, PersistableBundle)</c>. The bundle is
            persisted until the profile owner or device owner is removed.</para>
          <para>This is the same <c>bundle</c> received in the
            <c>DeviceAdminReceiver#onTransferOwnershipComplete(Context, PersistableBundle)</c>.
            Use this method to retrieve it after the transfer as long as the new administrator is the
            active device or profile owner.</para>
          <para>Returns <c>null</c> if no ownership transfer was started for the calling user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getTransferOwnershipBundle()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getTransferOwnershipBundle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UninstallAllUserCaCerts">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UninstallAllUserCaCerts (admin As ComponentName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UninstallAllUserCaCerts(Android::Content::ComponentName ^ admin);" />
      <MemberSignature Language="C#" Value="public virtual void UninstallAllUserCaCerts (Android.Content.ComponentName? admin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UninstallAllUserCaCerts(class Android.Content.ComponentName admin) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.UninstallAllUserCaCerts(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="abstract member UninstallAllUserCaCerts : Android.Content.ComponentName -&gt; unit&#xA;override this.UninstallAllUserCaCerts : Android.Content.ComponentName -&gt; unit" Usage="devicePolicyManager.UninstallAllUserCaCerts admin" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("uninstallAllUserCaCerts", "(Landroid/content/ComponentName;)V", "GetUninstallAllUserCaCerts_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("uninstallAllUserCaCerts", "(Landroid/content/ComponentName;)V", "GetUninstallAllUserCaCerts_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                         <c>null</c> if calling from a delegated certificate installer.</param>
        <summary>Uninstalls all custom trusted CA certificates from the profile.</summary>
        <remarks>
          <para>Uninstalls all custom trusted CA certificates from the profile. Certificates installed by
            means other than device policy will also be removed, except for system CA certificates.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#uninstallAllUserCaCerts(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.uninstallAllUserCaCerts(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UninstallCaCert">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UninstallCaCert (admin As ComponentName, certBuffer As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UninstallCaCert(Android::Content::ComponentName ^ admin, cli::array &lt;System::Byte&gt; ^ certBuffer);" />
      <MemberSignature Language="C#" Value="public virtual void UninstallCaCert (Android.Content.ComponentName? admin, byte[]? certBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UninstallCaCert(class Android.Content.ComponentName admin, unsigned int8[] certBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.UninstallCaCert(Android.Content.ComponentName,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member UninstallCaCert : Android.Content.ComponentName * byte[] -&gt; unit&#xA;override this.UninstallCaCert : Android.Content.ComponentName * byte[] -&gt; unit" Usage="devicePolicyManager.UninstallCaCert (admin, certBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("uninstallCaCert", "(Landroid/content/ComponentName;[B)V", "GetUninstallCaCert_Landroid_content_ComponentName_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("uninstallCaCert", "(Landroid/content/ComponentName;[B)V", "GetUninstallCaCert_Landroid_content_ComponentName_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="certBuffer" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="admin">Which <c>DeviceAdminReceiver</c> this request is associated with, or
                         <c>null</c> if calling from a delegated certificate installer.</param>
        <param name="certBuffer">encoded form of the certificate to remove.</param>
        <summary>Uninstalls the given certificate from trusted user CAs, if present.</summary>
        <remarks>
          <para>Uninstalls the given certificate from trusted user CAs, if present.
            
            The caller must be a profile or device owner on that user, or a delegate package given the
            <c>#DELEGATION_CERT_INSTALL</c> scope via <c>#setDelegatedScopes</c>; otherwise a
            security exception will be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#uninstallCaCert(android.content.ComponentName,%20byte[])" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.uninstallCaCert(android.content.ComponentName, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateOverrideApn">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UpdateOverrideApn (admin As ComponentName, apnId As Integer, apnSetting As ApnSetting) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool UpdateOverrideApn(Android::Content::ComponentName ^ admin, int apnId, Android::Telephony::Data::ApnSetting ^ apnSetting);" />
      <MemberSignature Language="C#" Value="public virtual bool UpdateOverrideApn (Android.Content.ComponentName admin, int apnId, Android.Telephony.Data.ApnSetting apnSetting);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool UpdateOverrideApn(class Android.Content.ComponentName admin, int32 apnId, class Android.Telephony.Data.ApnSetting apnSetting) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.UpdateOverrideApn(Android.Content.ComponentName,System.Int32,Android.Telephony.Data.ApnSetting)" />
      <MemberSignature Language="F#" Value="abstract member UpdateOverrideApn : Android.Content.ComponentName * int * Android.Telephony.Data.ApnSetting -&gt; bool&#xA;override this.UpdateOverrideApn : Android.Content.ComponentName * int * Android.Telephony.Data.ApnSetting -&gt; bool" Usage="devicePolicyManager.UpdateOverrideApn (admin, apnId, apnSetting)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateOverrideApn", "(Landroid/content/ComponentName;ILandroid/telephony/data/ApnSetting;)Z", "GetUpdateOverrideApn_Landroid_content_ComponentName_ILandroid_telephony_data_ApnSetting_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateOverrideApn", "(Landroid/content/ComponentName;ILandroid/telephony/data/ApnSetting;)Z", "GetUpdateOverrideApn_Landroid_content_ComponentName_ILandroid_telephony_data_ApnSetting_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="admin" Type="Android.Content.ComponentName" />
        <Parameter Name="apnId" Type="System.Int32" />
        <Parameter Name="apnSetting" Type="Android.Telephony.Data.ApnSetting" />
      </Parameters>
      <Docs>
        <param name="admin">which <c>DeviceAdminReceiver</c> this request is associated with</param>
        <param name="apnId">the <c>id</c> of the override APN to update</param>
        <param name="apnSetting">the override APN to update</param>
        <summary>Called by device owner or managed profile owner to update an override APN.</summary>
        <returns>
          <c>true</c> if the required override APN is successfully updated,
                    <c>false</c> otherwise.</returns>
        <remarks>
          <para>Called by device owner or managed profile owner to update an override APN.</para>
          <para>This method may returns <c>false</c> if there is no override APN with the given
            <c>apnId</c>.</para>
          <para>This method may also returns <c>false</c> if <c>apnSetting</c> conflicts with an
            existing override APN. Update the existing conflicted APN instead.</para>
          <para>See <c>#addOverrideApn</c> for the definition of conflict.</para>
          <para>Before Android version <c>android.os.Build.VERSION_CODES#TIRAMISU</c>:
            Only device owners can update APNs.</para>
          <para>Starting from Android version <c>android.os.Build.VERSION_CODES#TIRAMISU</c>:
            Both device owners and managed profile owners can update enterprise APNs
            (<c>ApnSetting#TYPE_ENTERPRISE</c>), while only device owners can update other type of APNs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#updateOverrideApn(android.content.ComponentName,%20int,%20android.telephony.data.ApnSetting)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.updateOverrideApn(android.content.ComponentName, int, android.telephony.data.ApnSetting)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsbDataSignalingEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UsbDataSignalingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UsbDataSignalingEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="C#" Value="public virtual bool UsbDataSignalingEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsbDataSignalingEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.UsbDataSignalingEnabled" />
      <MemberSignature Language="F#" Value="member this.UsbDataSignalingEnabled : bool with get, set" Usage="Android.App.Admin.DevicePolicyManager.UsbDataSignalingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isUsbDataSignalingEnabled", "()Z", "GetIsUsbDataSignalingEnabledHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isUsbDataSignalingEnabled", "()Z", "GetIsUsbDataSignalingEnabledHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setUsbDataSignalingEnabled", "(Z)V", "GetSetUsbDataSignalingEnabled_ZHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setUsbDataSignalingEnabled", "(Z)V", "GetSetUsbDataSignalingEnabled_ZHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_USB_DATA_SIGNALLING")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_USB_DATA_SIGNALLING")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="enabled">whether USB data signaling should be enabled or not.</param>
        <summary>Returns whether USB data signaling is currently enabled. -or- Called by a device owner or profile owner of an organization-owned managed profile to enable
            or disable USB data signaling for the device.</summary>
        <value>
          <c>true</c> if USB data signaling is enabled, <c>false</c> otherwise.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns whether USB data signaling is currently enabled.</para>
          <para>When called by a device owner or profile owner of an organization-owned managed profile,
            this API returns whether USB data signaling is currently enabled by that admin. When called
            by any other app, returns whether USB data signaling is currently enabled on the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#isUsbDataSignalingEnabled()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.isUsbDataSignalingEnabled()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Called by a device owner or profile owner of an organization-owned managed profile to enable
            or disable USB data signaling for the device. When disabled, USB data connections
            (except from charging functions) are prohibited.</para>
          <para>This API is not supported on all devices, the caller should call
            <c>#canUsbDataSignalingBeDisabled()</c> to check whether enabling or disabling USB data
            signaling is supported on the device.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setUsbDataSignalingEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setUsbDataSignalingEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserRestrictionsGlobally">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UserRestrictionsGlobally As Bundle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::OS::Bundle ^ UserRestrictionsGlobally { Android::OS::Bundle ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle UserRestrictionsGlobally { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Bundle UserRestrictionsGlobally" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.UserRestrictionsGlobally" />
      <MemberSignature Language="F#" Value="member this.UserRestrictionsGlobally : Android.OS.Bundle" Usage="Android.App.Admin.DevicePolicyManager.UserRestrictionsGlobally" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUserRestrictionsGlobally", "()Landroid/os/Bundle;", "GetGetUserRestrictionsGloballyHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUserRestrictionsGlobally", "()Landroid/os/Bundle;", "GetGetUserRestrictionsGloballyHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Called by a profile or device owner to get global user restrictions set with
            <c>#addUserRestrictionGlobally(String)</c>.</summary>
        <value>a <c>Bundle</c> whose keys are the user restrictions, and the values a
            <c>boolean</c> indicating whether the restriction is set.</value>
        <remarks>
          <para>Called by a profile or device owner to get global user restrictions set with
            <c>#addUserRestrictionGlobally(String)</c>.</para>
          <para>To get all the user restrictions currently set for a certain user, use
            <c>UserManager#getUserRestrictions()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getUserRestrictionsGlobally()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getUserRestrictionsGlobally()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WifiSecurityEnterprise192">
      <MemberSignature Language="VB.NET" Value="Public Const WifiSecurityEnterprise192 As WifiSecurity  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::WifiSecurity WifiSecurityEnterprise192 = 3;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.WifiSecurity WifiSecurityEnterprise192 = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.WifiSecurity WifiSecurityEnterprise192 = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.WifiSecurityEnterprise192" />
      <MemberSignature Language="F#" Value="val mutable WifiSecurityEnterprise192 : Android.App.Admin.WifiSecurity" Usage="Android.App.Admin.DevicePolicyManager.WifiSecurityEnterprise192" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("WIFI_SECURITY_ENTERPRISE_192", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("WIFI_SECURITY_ENTERPRISE_192", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WifiSecurity enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WifiSecurity enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.WifiSecurity</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Constant for <c>#getMinimumRequiredWifiSecurityLevel()</c> and
            <c>#setMinimumRequiredWifiSecurityLevel(int)</c>: enterprise 192 bit network.</summary>
        <remarks>
          <para>Constant for <c>#getMinimumRequiredWifiSecurityLevel()</c> and
            <c>#setMinimumRequiredWifiSecurityLevel(int)</c>: enterprise 192 bit network.</para>
          <para>When returned from <c>#getMinimumRequiredWifiSecurityLevel()</c>, the constant
            represents the current minimum security level required.
            When passed to <c>#setMinimumRequiredWifiSecurityLevel(int)</c>, it sets the
            minimum security level a Wi-Fi network must meet.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#WIFI_SECURITY_ENTERPRISE_192" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.WIFI_SECURITY_ENTERPRISE_192</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WifiSecurityEnterpriseEap">
      <MemberSignature Language="VB.NET" Value="Public Const WifiSecurityEnterpriseEap As WifiSecurity  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::WifiSecurity WifiSecurityEnterpriseEap = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.WifiSecurity WifiSecurityEnterpriseEap = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.WifiSecurity WifiSecurityEnterpriseEap = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.WifiSecurityEnterpriseEap" />
      <MemberSignature Language="F#" Value="val mutable WifiSecurityEnterpriseEap : Android.App.Admin.WifiSecurity" Usage="Android.App.Admin.DevicePolicyManager.WifiSecurityEnterpriseEap" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("WIFI_SECURITY_ENTERPRISE_EAP", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("WIFI_SECURITY_ENTERPRISE_EAP", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WifiSecurity enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WifiSecurity enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.WifiSecurity</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Constant for <c>#getMinimumRequiredWifiSecurityLevel()</c> and
            <c>#setMinimumRequiredWifiSecurityLevel(int)</c>: enterprise EAP network.</summary>
        <remarks>
          <para>Constant for <c>#getMinimumRequiredWifiSecurityLevel()</c> and
            <c>#setMinimumRequiredWifiSecurityLevel(int)</c>: enterprise EAP network.</para>
          <para>When returned from <c>#getMinimumRequiredWifiSecurityLevel()</c>, the constant
            represents the current minimum security level required.
            When passed to <c>#setMinimumRequiredWifiSecurityLevel(int)</c>, it sets the
            minimum security level a Wi-Fi network must meet.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#WIFI_SECURITY_ENTERPRISE_EAP" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.WIFI_SECURITY_ENTERPRISE_EAP</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WifiSecurityOpen">
      <MemberSignature Language="VB.NET" Value="Public Const WifiSecurityOpen As WifiSecurity  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::WifiSecurity WifiSecurityOpen = 0;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.WifiSecurity WifiSecurityOpen = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.WifiSecurity WifiSecurityOpen = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.WifiSecurityOpen" />
      <MemberSignature Language="F#" Value="val mutable WifiSecurityOpen : Android.App.Admin.WifiSecurity" Usage="Android.App.Admin.DevicePolicyManager.WifiSecurityOpen" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("WIFI_SECURITY_OPEN", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("WIFI_SECURITY_OPEN", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WifiSecurity enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WifiSecurity enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.WifiSecurity</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Constant for <c>#getMinimumRequiredWifiSecurityLevel()</c> and
            <c>#setMinimumRequiredWifiSecurityLevel(int)</c>: no minimum security level.</summary>
        <remarks>
          <para>Constant for <c>#getMinimumRequiredWifiSecurityLevel()</c> and
            <c>#setMinimumRequiredWifiSecurityLevel(int)</c>: no minimum security level.</para>
          <para>When returned from <c>#getMinimumRequiredWifiSecurityLevel()</c>, the constant
            represents the current minimum security level required.
            When passed to <c>#setMinimumRequiredWifiSecurityLevel(int)</c>, it sets the
            minimum security level a Wi-Fi network must meet.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#WIFI_SECURITY_OPEN" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.WIFI_SECURITY_OPEN</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WifiSecurityPersonal">
      <MemberSignature Language="VB.NET" Value="Public Const WifiSecurityPersonal As WifiSecurity  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::WifiSecurity WifiSecurityPersonal = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.WifiSecurity WifiSecurityPersonal = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.WifiSecurity WifiSecurityPersonal = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.WifiSecurityPersonal" />
      <MemberSignature Language="F#" Value="val mutable WifiSecurityPersonal : Android.App.Admin.WifiSecurity" Usage="Android.App.Admin.DevicePolicyManager.WifiSecurityPersonal" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("WIFI_SECURITY_PERSONAL", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("WIFI_SECURITY_PERSONAL", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WifiSecurity enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WifiSecurity enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.WifiSecurity</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Constant for <c>#getMinimumRequiredWifiSecurityLevel()</c> and
            <c>#setMinimumRequiredWifiSecurityLevel(int)</c>: personal network such as WEP, WPA2-PSK.</summary>
        <remarks>
          <para>Constant for <c>#getMinimumRequiredWifiSecurityLevel()</c> and
            <c>#setMinimumRequiredWifiSecurityLevel(int)</c>: personal network such as WEP, WPA2-PSK.</para>
          <para>When returned from <c>#getMinimumRequiredWifiSecurityLevel()</c>, the constant
            represents the current minimum security level required.
            When passed to <c>#setMinimumRequiredWifiSecurityLevel(int)</c>, it sets the
            minimum security level a Wi-Fi network must meet.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#WIFI_SECURITY_PERSONAL" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.WIFI_SECURITY_PERSONAL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WifiSsidPolicy">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property WifiSsidPolicy As WifiSsidPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::App::Admin::WifiSsidPolicy ^ WifiSsidPolicy { Android::App::Admin::WifiSsidPolicy ^ get(); void set(Android::App::Admin::WifiSsidPolicy ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.WifiSsidPolicy? WifiSsidPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.App.Admin.WifiSsidPolicy WifiSsidPolicy" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DevicePolicyManager.WifiSsidPolicy" />
      <MemberSignature Language="F#" Value="member this.WifiSsidPolicy : Android.App.Admin.WifiSsidPolicy with get, set" Usage="Android.App.Admin.DevicePolicyManager.WifiSsidPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWifiSsidPolicy", "()Landroid/app/admin/WifiSsidPolicy;", "GetGetWifiSsidPolicyHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWifiSsidPolicy", "()Landroid/app/admin/WifiSsidPolicy;", "GetGetWifiSsidPolicyHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIFI")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIFI")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setWifiSsidPolicy", "(Landroid/app/admin/WifiSsidPolicy;)V", "GetSetWifiSsidPolicy_Landroid_app_admin_WifiSsidPolicy_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setWifiSsidPolicy", "(Landroid/app/admin/WifiSsidPolicy;)V", "GetSetWifiSsidPolicy_Landroid_app_admin_WifiSsidPolicy_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIFI")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIFI")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.WifiSsidPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="policy">Wi-Fi SSID policy</param>
        <summary>Returns the current Wi-Fi SSID policy. -or- Called by device owner or profile owner of an organization-owned managed profile to
            specify the Wi-Fi SSID policy (<c>WifiSsidPolicy</c>).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the current Wi-Fi SSID policy.
            If the policy has not been set, it will return NULL.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#getWifiSsidPolicy()" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.getWifiSsidPolicy()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Called by device owner or profile owner of an organization-owned managed profile to
            specify the Wi-Fi SSID policy (<c>WifiSsidPolicy</c>).
            Wi-Fi SSID policy specifies the SSID restriction the network must satisfy
            in order to be eligible for a connection. Providing a null policy results in the
            deactivation of the SSID restriction</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#setWifiSsidPolicy(android.app.admin.WifiSsidPolicy)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.setWifiSsidPolicy(android.app.admin.WifiSsidPolicy)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WipeData">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WipeData (flags As WipeDataFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WipeData(Android::App::Admin::WipeDataFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void WipeData (Android.App.Admin.WipeDataFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WipeData(valuetype Android.App.Admin.WipeDataFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.WipeData(Android.App.Admin.WipeDataFlags)" />
      <MemberSignature Language="F#" Value="abstract member WipeData : Android.App.Admin.WipeDataFlags -&gt; unit&#xA;override this.WipeData : Android.App.Admin.WipeDataFlags -&gt; unit" Usage="devicePolicyManager.WipeData flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wipeData", "(I)V", "GetWipeData_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wipeData", "(I)V", "GetWipeData_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIPE_DATA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIPE_DATA")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.App.Admin.WipeDataFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Bit mask of additional options: currently supported flags are
                         <c>#WIPE_EXTERNAL_STORAGE</c>, <c>#WIPE_RESET_PROTECTION_DATA</c>,
                         <c>#WIPE_EUICC</c> and <c>#WIPE_SILENTLY</c>.</param>
        <summary>See <c>#wipeData(int, CharSequence)</c></summary>
        <remarks>
          <para>See <c>#wipeData(int, CharSequence)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#wipeData(int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.wipeData(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="WipeData">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WipeData (flags As WipeDataFlags, reason As ICharSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WipeData(Android::App::Admin::WipeDataFlags flags, Java::Lang::ICharSequence ^ reason);" />
      <MemberSignature Language="C#" Value="public virtual void WipeData (Android.App.Admin.WipeDataFlags flags, Java.Lang.ICharSequence reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WipeData(valuetype Android.App.Admin.WipeDataFlags flags, class Java.Lang.ICharSequence reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.WipeData(Android.App.Admin.WipeDataFlags,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member WipeData : Android.App.Admin.WipeDataFlags * Java.Lang.ICharSequence -&gt; unit&#xA;override this.WipeData : Android.App.Admin.WipeDataFlags * Java.Lang.ICharSequence -&gt; unit" Usage="devicePolicyManager.WipeData (flags, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wipeData", "(ILjava/lang/CharSequence;)V", "GetWipeData_ILjava_lang_CharSequence_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wipeData", "(ILjava/lang/CharSequence;)V", "GetWipeData_ILjava_lang_CharSequence_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIPE_DATA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIPE_DATA")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.App.Admin.WipeDataFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="reason" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="flags">Bit mask of additional options: currently supported flags are
                       <c>#WIPE_EXTERNAL_STORAGE</c>, <c>#WIPE_RESET_PROTECTION_DATA</c> and
                       <c>#WIPE_EUICC</c>.</param>
        <param name="reason">a string that contains the reason for wiping data, which can be
                       presented to the user.</param>
        <summary>Ask that all user data be wiped.</summary>
        <remarks>
          <para>Ask that all user data be wiped.</para>
          <para>If called as a secondary user or managed profile, the user itself and its associated user
            data will be wiped. In particular, If the caller is a profile owner of an
            organization-owned managed profile, calling this method will relinquish the device for
            personal use, removing the managed profile and all policies set by the profile owner.</para>
          <para>Calling this method from the primary user will only work if the calling app is
            targeting SDK level <c>Build.VERSION_CODES#TIRAMISU</c> or below, in which case it will
            cause the device to reboot, erasing all device data - including all the secondary users
            and their data - while booting up. If an app targeting SDK level
            <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> and above is calling this method from the
            primary user or last full user, <c>IllegalStateException</c> will be thrown.</para>
          <para>If an app wants to wipe the entire device irrespective of which user they are from, they
            should use <c>#wipeDevice</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#wipeData(int,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.wipeData(int, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WipeData">
      <MemberSignature Language="VB.NET" Value="Public Sub WipeData (flags As WipeDataFlags, reason As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WipeData(Android::App::Admin::WipeDataFlags flags, System::String ^ reason);" />
      <MemberSignature Language="C#" Value="public void WipeData (Android.App.Admin.WipeDataFlags flags, string reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WipeData(valuetype Android.App.Admin.WipeDataFlags flags, string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.WipeData(Android.App.Admin.WipeDataFlags,System.String)" />
      <MemberSignature Language="F#" Value="member this.WipeData : Android.App.Admin.WipeDataFlags * string -&gt; unit" Usage="devicePolicyManager.WipeData (flags, reason)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.App.Admin.WipeDataFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="flags">Bit mask of additional options: currently supported flags are
                       <c>#WIPE_EXTERNAL_STORAGE</c>, <c>#WIPE_RESET_PROTECTION_DATA</c> and
                       <c>#WIPE_EUICC</c>.</param>
        <param name="reason">a string that contains the reason for wiping data, which can be
                       presented to the user.</param>
        <summary>Ask that all user data be wiped.</summary>
        <remarks>
          <para>Ask that all user data be wiped.</para>
          <para>If called as a secondary user or managed profile, the user itself and its associated user
            data will be wiped. In particular, If the caller is a profile owner of an
            organization-owned managed profile, calling this method will relinquish the device for
            personal use, removing the managed profile and all policies set by the profile owner.</para>
          <para>Calling this method from the primary user will only work if the calling app is
            targeting SDK level <c>Build.VERSION_CODES#TIRAMISU</c> or below, in which case it will
            cause the device to reboot, erasing all device data - including all the secondary users
            and their data - while booting up. If an app targeting SDK level
            <c>Build.VERSION_CODES#UPSIDE_DOWN_CAKE</c> and above is calling this method from the
            primary user or last full user, <c>IllegalStateException</c> will be thrown.</para>
          <para>If an app wants to wipe the entire device irrespective of which user they are from, they
            should use <c>#wipeDevice</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#wipeData(int,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.wipeData(int, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WipeDevice">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WipeDevice (flags As WipeDataFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WipeDevice(Android::App::Admin::WipeDataFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void WipeDevice (Android.App.Admin.WipeDataFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WipeDevice(valuetype Android.App.Admin.WipeDataFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DevicePolicyManager.WipeDevice(Android.App.Admin.WipeDataFlags)" />
      <MemberSignature Language="F#" Value="abstract member WipeDevice : Android.App.Admin.WipeDataFlags -&gt; unit&#xA;override this.WipeDevice : Android.App.Admin.WipeDataFlags -&gt; unit" Usage="devicePolicyManager.WipeDevice flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wipeDevice", "(I)V", "GetWipeDevice_IHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wipeDevice", "(I)V", "GetWipeDevice_IHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIPE_DATA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.MANAGE_DEVICE_POLICY_WIPE_DATA")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.App.Admin.WipeDataFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Bit mask of additional options: currently supported flags are
                         <c>#WIPE_EXTERNAL_STORAGE</c>, <c>#WIPE_RESET_PROTECTION_DATA</c>,
                         <c>#WIPE_EUICC</c> and <c>#WIPE_SILENTLY</c>.</param>
        <summary>Ask that the device be wiped and factory reset.</summary>
        <remarks>
          <para>Ask that the device be wiped and factory reset.</para>
          <para>The calling Device Owner or Organization Owned Profile Owner must have requested
            <c>DeviceAdminInfo#USES_POLICY_WIPE_DATA</c> to be able to call this method; if it has
            not, a security exception will be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#wipeDevice(int)" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.wipeDevice(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WipeEuicc">
      <MemberSignature Language="VB.NET" Value="Public Const WipeEuicc As WipeDataFlags  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::WipeDataFlags WipeEuicc = 4;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.WipeDataFlags WipeEuicc = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.WipeDataFlags WipeEuicc = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.WipeEuicc" />
      <MemberSignature Language="F#" Value="val mutable WipeEuicc : Android.App.Admin.WipeDataFlags" Usage="Android.App.Admin.DevicePolicyManager.WipeEuicc" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("WIPE_EUICC", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("WIPE_EUICC", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WipeDataFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WipeDataFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.WipeDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Flag for <c>#wipeData(int)</c>: also erase the device's eUICC data.</summary>
        <remarks>
          <para>Flag for <c>#wipeData(int)</c>: also erase the device's eUICC data.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#WIPE_EUICC" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.WIPE_EUICC</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WipeExternalStorage">
      <MemberSignature Language="VB.NET" Value="Public Const WipeExternalStorage As WipeDataFlags  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::WipeDataFlags WipeExternalStorage = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.WipeDataFlags WipeExternalStorage = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.WipeDataFlags WipeExternalStorage = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.WipeExternalStorage" />
      <MemberSignature Language="F#" Value="val mutable WipeExternalStorage : Android.App.Admin.WipeDataFlags" Usage="Android.App.Admin.DevicePolicyManager.WipeExternalStorage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("WIPE_EXTERNAL_STORAGE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("WIPE_EXTERNAL_STORAGE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WipeDataFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WipeDataFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.WipeDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag for <c>#wipeData(int)</c>: also erase the device's external
            storage (such as SD cards).</summary>
        <remarks>
          <para>Flag for <c>#wipeData(int)</c>: also erase the device's external
            storage (such as SD cards).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#WIPE_EXTERNAL_STORAGE" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.WIPE_EXTERNAL_STORAGE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="WipeResetProtectionData">
      <MemberSignature Language="VB.NET" Value="Public Const WipeResetProtectionData As WipeDataFlags  = 2" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::WipeDataFlags WipeResetProtectionData = 2;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.WipeDataFlags WipeResetProtectionData = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.WipeDataFlags WipeResetProtectionData = (2)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.WipeResetProtectionData" />
      <MemberSignature Language="F#" Value="val mutable WipeResetProtectionData : Android.App.Admin.WipeDataFlags" Usage="Android.App.Admin.DevicePolicyManager.WipeResetProtectionData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("WIPE_RESET_PROTECTION_DATA", ApiSince=22)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("WIPE_RESET_PROTECTION_DATA", ApiSince=22)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WipeDataFlags enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.WipeDataFlags enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android22.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android22.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.WipeDataFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Flag for <c>#wipeData(int)</c>: also erase the factory reset protection
            data.</summary>
        <remarks>
          <para>Flag for <c>#wipeData(int)</c>: also erase the factory reset protection
            data.</para>
          <para>This flag may only be set by device owner admins; if it is set by
            other admins a <c>SecurityException</c> will be thrown.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#WIPE_RESET_PROTECTION_DATA" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.WIPE_RESET_PROTECTION_DATA</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WipeSilently">
      <MemberSignature Language="VB.NET" Value="Public Const WipeSilently As Integer  = 8" />
      <MemberSignature Language="C++ CLI" Value="public: int WipeSilently = 8;" />
      <MemberSignature Language="C#" Value="public const int WipeSilently = 8;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 WipeSilently = (8)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DevicePolicyManager.WipeSilently" />
      <MemberSignature Language="F#" Value="val mutable WipeSilently : int" Usage="Android.App.Admin.DevicePolicyManager.WipeSilently" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("WIPE_SILENTLY", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("WIPE_SILENTLY", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>Flag for <c>#wipeData(int)</c>: won't show reason for wiping to the user.</summary>
        <remarks>
          <para>Flag for <c>#wipeData(int)</c>: won't show reason for wiping to the user.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DevicePolicyManager#WIPE_SILENTLY" title="Reference documentation">Java documentation for <code>android.app.admin.DevicePolicyManager.WIPE_SILENTLY</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
