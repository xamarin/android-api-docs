<Type Name="DeviceAdminReceiver" FullName="Android.App.Admin.DeviceAdminReceiver">
  <TypeSignature Language="VB.NET" Value="Public Class DeviceAdminReceiver&#xA;Inherits BroadcastReceiver" />
  <TypeSignature Language="C++ CLI" Value="public ref class DeviceAdminReceiver : Android::Content::BroadcastReceiver" />
  <TypeSignature Language="C#" Value="public class DeviceAdminReceiver : Android.Content.BroadcastReceiver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DeviceAdminReceiver extends Android.Content.BroadcastReceiver" />
  <TypeSignature Language="DocId" Value="T:Android.App.Admin.DeviceAdminReceiver" />
  <TypeSignature Language="F#" Value="type DeviceAdminReceiver = class&#xA;    inherit BroadcastReceiver" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Content.BroadcastReceiver</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/app/admin/DeviceAdminReceiver", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/app/admin/DeviceAdminReceiver", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>Base class for implementing a device administration component.</summary>
    <remarks>
      <para>Base class for implementing a device administration component.  This
            class provides a convenience for interpreting the raw intent actions
            that are sent by the system.</para>
      <para>The callback methods, like the base
            <c>BroadcastReceiver#onReceive(Context, Intent) BroadcastReceiver.onReceive()</c>
            method, happen on the main thread of the process.  Thus long running
            operations must be done on another thread.  Note that because a receiver
            is done once returning from its receive function, such long-running operations
            should probably be done in a <c>Service</c>.</para>
      <para>When publishing your DeviceAdmin subclass as a receiver, it must
            handle <c>#ACTION_DEVICE_ADMIN_ENABLED</c> and require the
            <c>android.Manifest.permission#BIND_DEVICE_ADMIN</c> permission.  A typical
            manifest entry would look like:</para>
      <para>{</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DeviceAdminReceiver();" />
      <MemberSignature Language="C#" Value="public DeviceAdminReceiver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DeviceAdminReceiver(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected DeviceAdminReceiver (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.App.Admin.DeviceAdminReceiver : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.App.Admin.DeviceAdminReceiver" Usage="new Android.App.Admin.DeviceAdminReceiver (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionChoosePrivateKeyAlias">
      <MemberSignature Language="VB.NET" Value="Public Const ActionChoosePrivateKeyAlias As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionChoosePrivateKeyAlias;" />
      <MemberSignature Language="C#" Value="public const string ActionChoosePrivateKeyAlias;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionChoosePrivateKeyAlias" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ActionChoosePrivateKeyAlias" />
      <MemberSignature Language="F#" Value="val mutable ActionChoosePrivateKeyAlias : string" Usage="Android.App.Admin.DeviceAdminReceiver.ActionChoosePrivateKeyAlias" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_CHOOSE_PRIVATE_KEY_ALIAS", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_CHOOSE_PRIVATE_KEY_ALIAS", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast action: notify that some app is attempting to choose a KeyChain key.</summary>
        <remarks>
          <para>Broadcast action: notify that some app is attempting to choose a KeyChain key.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#ACTION_CHOOSE_PRIVATE_KEY_ALIAS" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.ACTION_CHOOSE_PRIVATE_KEY_ALIAS</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionDeviceAdminDisabled">
      <MemberSignature Language="VB.NET" Value="Public Const ActionDeviceAdminDisabled As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionDeviceAdminDisabled;" />
      <MemberSignature Language="C#" Value="public const string ActionDeviceAdminDisabled;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionDeviceAdminDisabled" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ActionDeviceAdminDisabled" />
      <MemberSignature Language="F#" Value="val mutable ActionDeviceAdminDisabled : string" Usage="Android.App.Admin.DeviceAdminReceiver.ActionDeviceAdminDisabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_DEVICE_ADMIN_DISABLED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_DEVICE_ADMIN_DISABLED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Action sent to a device administrator when the user has disabled
            it.</summary>
        <remarks>
          <para>Action sent to a device administrator when the user has disabled
            it.  Upon return, the application no longer has access to the
            protected device policy manager APIs.  You will generally
            handle this in <c>DeviceAdminReceiver#onDisabled(Context, Intent)</c>.  Note
            that this action will be
            sent the receiver regardless of whether it is explicitly listed in
            its intent filter.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#ACTION_DEVICE_ADMIN_DISABLED" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.ACTION_DEVICE_ADMIN_DISABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionDeviceAdminDisableRequested">
      <MemberSignature Language="VB.NET" Value="Public Const ActionDeviceAdminDisableRequested As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionDeviceAdminDisableRequested;" />
      <MemberSignature Language="C#" Value="public const string ActionDeviceAdminDisableRequested;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionDeviceAdminDisableRequested" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ActionDeviceAdminDisableRequested" />
      <MemberSignature Language="F#" Value="val mutable ActionDeviceAdminDisableRequested : string" Usage="Android.App.Admin.DeviceAdminReceiver.ActionDeviceAdminDisableRequested" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_DEVICE_ADMIN_DISABLE_REQUESTED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_DEVICE_ADMIN_DISABLE_REQUESTED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Action sent to a device administrator when the user has requested to
            disable it, but before this has actually been done.</summary>
        <remarks>
          <para>Action sent to a device administrator when the user has requested to
            disable it, but before this has actually been done.  This gives you
            a chance to supply a message to the user about the impact of
            disabling your admin, by setting the extra field
            <c>#EXTRA_DISABLE_WARNING</c> in the result Intent.  If not set,
            no warning will be displayed.  If set, the given text will be shown
            to the user before they disable your admin.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#ACTION_DEVICE_ADMIN_DISABLE_REQUESTED" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.ACTION_DEVICE_ADMIN_DISABLE_REQUESTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionDeviceAdminEnabled">
      <MemberSignature Language="VB.NET" Value="Public Const ActionDeviceAdminEnabled As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionDeviceAdminEnabled;" />
      <MemberSignature Language="C#" Value="public const string ActionDeviceAdminEnabled;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionDeviceAdminEnabled" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ActionDeviceAdminEnabled" />
      <MemberSignature Language="F#" Value="val mutable ActionDeviceAdminEnabled : string" Usage="Android.App.Admin.DeviceAdminReceiver.ActionDeviceAdminEnabled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_DEVICE_ADMIN_ENABLED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_DEVICE_ADMIN_ENABLED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This is the primary action that a device administrator must implement to be
            allowed to manage a device.</summary>
        <remarks>
          <para>This is the primary action that a device administrator must implement to be
            allowed to manage a device.  This will be set to the receiver
            when the user enables it for administration.  You will generally
            handle this in <c>DeviceAdminReceiver#onEnabled(Context, Intent)</c>.  To be
            supported, the receiver must also require the
            <c>android.Manifest.permission#BIND_DEVICE_ADMIN</c> permission so
            that other applications can not abuse it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#ACTION_DEVICE_ADMIN_ENABLED" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.ACTION_DEVICE_ADMIN_ENABLED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionLockTaskEntering">
      <MemberSignature Language="VB.NET" Value="Public Const ActionLockTaskEntering As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionLockTaskEntering;" />
      <MemberSignature Language="C#" Value="public const string ActionLockTaskEntering;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionLockTaskEntering" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ActionLockTaskEntering" />
      <MemberSignature Language="F#" Value="val mutable ActionLockTaskEntering : string" Usage="Android.App.Admin.DeviceAdminReceiver.ActionLockTaskEntering" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_LOCK_TASK_ENTERING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_LOCK_TASK_ENTERING")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Action sent to a device administrator to notify that the device is entering
            lock task mode.</summary>
        <remarks>
          <para>Action sent to a device administrator to notify that the device is entering
            lock task mode.  The extra <c>#EXTRA_LOCK_TASK_PACKAGE</c>
            will describe the package using lock task mode.</para>
          <para>The calling device admin must be the device owner or profile
            owner to receive this broadcast.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#ACTION_LOCK_TASK_ENTERING" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.ACTION_LOCK_TASK_ENTERING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.IsLockTaskPermitted(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ActionLockTaskExiting">
      <MemberSignature Language="VB.NET" Value="Public Const ActionLockTaskExiting As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionLockTaskExiting;" />
      <MemberSignature Language="C#" Value="public const string ActionLockTaskExiting;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionLockTaskExiting" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ActionLockTaskExiting" />
      <MemberSignature Language="F#" Value="val mutable ActionLockTaskExiting : string" Usage="Android.App.Admin.DeviceAdminReceiver.ActionLockTaskExiting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_LOCK_TASK_EXITING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_LOCK_TASK_EXITING")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Action sent to a device administrator to notify that the device is exiting
            lock task mode.</summary>
        <remarks>
          <para>Action sent to a device administrator to notify that the device is exiting
            lock task mode.</para>
          <para>The calling device admin must be the device owner or profile
            owner to receive this broadcast.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#ACTION_LOCK_TASK_EXITING" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.ACTION_LOCK_TASK_EXITING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.IsLockTaskPermitted(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ActionNetworkLogsAvailable">
      <MemberSignature Language="VB.NET" Value="Public Const ActionNetworkLogsAvailable As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionNetworkLogsAvailable;" />
      <MemberSignature Language="C#" Value="public const string ActionNetworkLogsAvailable;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionNetworkLogsAvailable" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ActionNetworkLogsAvailable" />
      <MemberSignature Language="F#" Value="val mutable ActionNetworkLogsAvailable : string" Usage="Android.App.Admin.DeviceAdminReceiver.ActionNetworkLogsAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_NETWORK_LOGS_AVAILABLE", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_NETWORK_LOGS_AVAILABLE", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast action: notify that a new batch of network logs is ready to be collected.</summary>
        <remarks>
          <para>Broadcast action: notify that a new batch of network logs is ready to be collected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#ACTION_NETWORK_LOGS_AVAILABLE" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.ACTION_NETWORK_LOGS_AVAILABLE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionPasswordChanged">
      <MemberSignature Language="VB.NET" Value="Public Const ActionPasswordChanged As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionPasswordChanged;" />
      <MemberSignature Language="C#" Value="public const string ActionPasswordChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionPasswordChanged" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ActionPasswordChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionPasswordChanged : string" Usage="Android.App.Admin.DeviceAdminReceiver.ActionPasswordChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_PASSWORD_CHANGED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_PASSWORD_CHANGED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Action sent to a device administrator when the user has changed the password of their device
            or profile challenge.</summary>
        <remarks>
          <para>Action sent to a device administrator when the user has changed the password of their device
            or profile challenge.  You can at this point check the characteristics
            of the new password with <c>DevicePolicyManager#isActivePasswordSufficient()
            DevicePolicyManager.isActivePasswordSufficient()</c>.
            You will generally
            handle this in <c>DeviceAdminReceiver#onPasswordChanged(Context, Intent, UserHandle)</c>.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_LIMIT_PASSWORD</c> to receive
            this broadcast.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#ACTION_PASSWORD_CHANGED" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.ACTION_PASSWORD_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionPasswordExpiring">
      <MemberSignature Language="VB.NET" Value="Public Const ActionPasswordExpiring As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionPasswordExpiring;" />
      <MemberSignature Language="C#" Value="public const string ActionPasswordExpiring;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionPasswordExpiring" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ActionPasswordExpiring" />
      <MemberSignature Language="F#" Value="val mutable ActionPasswordExpiring : string" Usage="Android.App.Admin.DeviceAdminReceiver.ActionPasswordExpiring" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_PASSWORD_EXPIRING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_PASSWORD_EXPIRING")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Action periodically sent to a device administrator when the device or profile challenge
            password is expiring.</summary>
        <remarks>
          <para>Action periodically sent to a device administrator when the device or profile challenge
            password is expiring.  You will generally
            handle this in <c>DeviceAdminReceiver#onPasswordExpiring(Context, Intent, UserHandle)</c>.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_EXPIRE_PASSWORD</c> to receive
            this broadcast.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#ACTION_PASSWORD_EXPIRING" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.ACTION_PASSWORD_EXPIRING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ActionPasswordFailed">
      <MemberSignature Language="VB.NET" Value="Public Const ActionPasswordFailed As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionPasswordFailed;" />
      <MemberSignature Language="C#" Value="public const string ActionPasswordFailed;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionPasswordFailed" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ActionPasswordFailed" />
      <MemberSignature Language="F#" Value="val mutable ActionPasswordFailed : string" Usage="Android.App.Admin.DeviceAdminReceiver.ActionPasswordFailed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_PASSWORD_FAILED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_PASSWORD_FAILED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Action sent to a device administrator when the user has entered an incorrect device
            or profile challenge password.</summary>
        <remarks>
          <para>Action sent to a device administrator when the user has entered an incorrect device
            or profile challenge password.  You can at this point check the
            number of failed password attempts there have been with
            <c>DevicePolicyManager#getCurrentFailedPasswordAttempts
            DevicePolicyManager.getCurrentFailedPasswordAttempts()</c>.  You will generally
            handle this in <c>DeviceAdminReceiver#onPasswordFailed(Context, Intent, UserHandle)</c>.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_WATCH_LOGIN</c> to receive
            this broadcast.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#ACTION_PASSWORD_FAILED" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.ACTION_PASSWORD_FAILED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionPasswordSucceeded">
      <MemberSignature Language="VB.NET" Value="Public Const ActionPasswordSucceeded As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionPasswordSucceeded;" />
      <MemberSignature Language="C#" Value="public const string ActionPasswordSucceeded;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionPasswordSucceeded" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ActionPasswordSucceeded" />
      <MemberSignature Language="F#" Value="val mutable ActionPasswordSucceeded : string" Usage="Android.App.Admin.DeviceAdminReceiver.ActionPasswordSucceeded" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_PASSWORD_SUCCEEDED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_PASSWORD_SUCCEEDED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Action sent to a device administrator when the user has successfully entered their device
            or profile challenge password, after failing one or more times.</summary>
        <remarks>
          <para>Action sent to a device administrator when the user has successfully entered their device
            or profile challenge password, after failing one or more times.  You will generally
            handle this in <c>DeviceAdminReceiver#onPasswordSucceeded(Context, Intent, UserHandle)</c>.</para>
          <para>The calling device admin must have requested
            <c>DeviceAdminInfo#USES_POLICY_WATCH_LOGIN</c> to receive
            this broadcast.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#ACTION_PASSWORD_SUCCEEDED" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.ACTION_PASSWORD_SUCCEEDED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ActionProfileProvisioningComplete">
      <MemberSignature Language="VB.NET" Value="Public Const ActionProfileProvisioningComplete As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionProfileProvisioningComplete;" />
      <MemberSignature Language="C#" Value="public const string ActionProfileProvisioningComplete;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionProfileProvisioningComplete" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ActionProfileProvisioningComplete" />
      <MemberSignature Language="F#" Value="val mutable ActionProfileProvisioningComplete : string" Usage="Android.App.Admin.DeviceAdminReceiver.ActionProfileProvisioningComplete" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_PROFILE_PROVISIONING_COMPLETE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_PROFILE_PROVISIONING_COMPLETE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast Action: This broadcast is sent to indicate that provisioning of a managed profile
            or managed device has completed successfully.</summary>
        <remarks>
          <para>Broadcast Action: This broadcast is sent to indicate that provisioning of a managed profile
            or managed device has completed successfully.</para>
          <para>The broadcast is limited to the profile that will be managed by the application that
            requested provisioning. In the device owner case the profile is the primary user.
            The broadcast will also be limited to the <c>DeviceAdminReceiver</c> component
            specified in the original intent or NFC bump that started the provisioning process
            (see <c>DevicePolicyManager#ACTION_PROVISION_MANAGED_PROFILE
            DevicePolicyManager.ACTION_PROVISION_MANAGED_PROFILE</c>).</para>
          <para>A device admin application which listens to this intent can find out if the device was
            provisioned for the device owner or profile owner case by calling respectively
            <c>android.app.admin.DevicePolicyManager#isDeviceOwnerApp</c> and
            <c>android.app.admin.DevicePolicyManager#isProfileOwnerApp</c>. You will generally handle
            this in <c>DeviceAdminReceiver#onProfileProvisioningComplete</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#ACTION_PROFILE_PROVISIONING_COMPLETE" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.ACTION_PROFILE_PROVISIONING_COMPLETE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionSecurityLogsAvailable">
      <MemberSignature Language="VB.NET" Value="Public Const ActionSecurityLogsAvailable As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ActionSecurityLogsAvailable;" />
      <MemberSignature Language="C#" Value="public const string ActionSecurityLogsAvailable;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionSecurityLogsAvailable" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ActionSecurityLogsAvailable" />
      <MemberSignature Language="F#" Value="val mutable ActionSecurityLogsAvailable : string" Usage="Android.App.Admin.DeviceAdminReceiver.ActionSecurityLogsAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_SECURITY_LOGS_AVAILABLE", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_SECURITY_LOGS_AVAILABLE", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast action: notify that a new batch of security logs is ready to be collected.</summary>
        <remarks>
          <para>Broadcast action: notify that a new batch of security logs is ready to be collected.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#ACTION_SECURITY_LOGS_AVAILABLE" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.ACTION_SECURITY_LOGS_AVAILABLE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BugreportFailureFailedCompleting">
      <MemberSignature Language="VB.NET" Value="Public Const BugreportFailureFailedCompleting As BugReportFailureReason  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::BugReportFailureReason BugreportFailureFailedCompleting = 0;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.BugReportFailureReason BugreportFailureFailedCompleting = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.BugReportFailureReason BugreportFailureFailedCompleting = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.BugreportFailureFailedCompleting" />
      <MemberSignature Language="F#" Value="val mutable BugreportFailureFailedCompleting : Android.App.Admin.BugReportFailureReason" Usage="Android.App.Admin.DeviceAdminReceiver.BugreportFailureFailedCompleting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("BUGREPORT_FAILURE_FAILED_COMPLETING", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("BUGREPORT_FAILURE_FAILED_COMPLETING", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.BugReportFailureReason enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.BugReportFailureReason enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.BugReportFailureReason</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Bugreport completion process failed.</summary>
        <remarks>
          <para>Bugreport completion process failed.</para>
          <para>If this error code is received, the requesting of bugreport can be retried.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#BUGREPORT_FAILURE_FAILED_COMPLETING" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.BUGREPORT_FAILURE_FAILED_COMPLETING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BugreportFailureFileNoLongerAvailable">
      <MemberSignature Language="VB.NET" Value="Public Const BugreportFailureFileNoLongerAvailable As BugReportFailureReason  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: Android::App::Admin::BugReportFailureReason BugreportFailureFileNoLongerAvailable = 1;" />
      <MemberSignature Language="C#" Value="public const Android.App.Admin.BugReportFailureReason BugreportFailureFileNoLongerAvailable = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.App.Admin.BugReportFailureReason BugreportFailureFileNoLongerAvailable = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.BugreportFailureFileNoLongerAvailable" />
      <MemberSignature Language="F#" Value="val mutable BugreportFailureFileNoLongerAvailable : Android.App.Admin.BugReportFailureReason" Usage="Android.App.Admin.DeviceAdminReceiver.BugreportFailureFileNoLongerAvailable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.BugReportFailureReason enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.App.Admin.BugReportFailureReason enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.BugReportFailureReason</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Bugreport has been created, but is no longer available for collection.</summary>
        <remarks>
          <para>Bugreport has been created, but is no longer available for collection.</para>
          <para>This error likely occurs because the user of the device hasn't consented to share
            the bugreport for a long period after its creation.</para>
          <para>If this error code is received, the requesting of bugreport can be retried.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeviceAdminMetaData">
      <MemberSignature Language="VB.NET" Value="Public Const DeviceAdminMetaData As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DeviceAdminMetaData;" />
      <MemberSignature Language="C#" Value="public const string DeviceAdminMetaData;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeviceAdminMetaData" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.DeviceAdminMetaData" />
      <MemberSignature Language="F#" Value="val mutable DeviceAdminMetaData : string" Usage="Android.App.Admin.DeviceAdminReceiver.DeviceAdminMetaData" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DEVICE_ADMIN_META_DATA")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DEVICE_ADMIN_META_DATA")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Name under which a DevicePolicy component publishes information
            about itself.</summary>
        <remarks>
          <para>Name under which a DevicePolicy component publishes information
            about itself.  This meta-data must reference an XML resource containing
            a device-admin tag.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#DEVICE_ADMIN_META_DATA" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.DEVICE_ADMIN_META_DATA</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ExtraDisableWarning">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraDisableWarning As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraDisableWarning;" />
      <MemberSignature Language="C#" Value="public const string ExtraDisableWarning;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraDisableWarning" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ExtraDisableWarning" />
      <MemberSignature Language="F#" Value="val mutable ExtraDisableWarning : string" Usage="Android.App.Admin.DeviceAdminReceiver.ExtraDisableWarning" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_DISABLE_WARNING")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_DISABLE_WARNING")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A CharSequence that can be shown to the user informing them of the
            impact of disabling your admin.</summary>
        <remarks>
          <para>A CharSequence that can be shown to the user informing them of the
            impact of disabling your admin.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#EXTRA_DISABLE_WARNING" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.EXTRA_DISABLE_WARNING</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="F:Android.App.Admin.DeviceAdminReceiver.ActionDeviceAdminDisableRequested" />
      </Docs>
    </Member>
    <Member MemberName="ExtraLockTaskPackage">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraLockTaskPackage As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraLockTaskPackage;" />
      <MemberSignature Language="C#" Value="public const string ExtraLockTaskPackage;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraLockTaskPackage" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ExtraLockTaskPackage" />
      <MemberSignature Language="F#" Value="val mutable ExtraLockTaskPackage : string" Usage="Android.App.Admin.DeviceAdminReceiver.ExtraLockTaskPackage" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_LOCK_TASK_PACKAGE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_LOCK_TASK_PACKAGE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A string containing the name of the package entering lock task mode.</summary>
        <remarks>
          <para>A string containing the name of the package entering lock task mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#EXTRA_LOCK_TASK_PACKAGE" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.EXTRA_LOCK_TASK_PACKAGE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="F:Android.App.Admin.DeviceAdminReceiver.ActionLockTaskEntering" />
      </Docs>
    </Member>
    <Member MemberName="ExtraTransferOwnershipAdminExtrasBundle">
      <MemberSignature Language="VB.NET" Value="Public Const ExtraTransferOwnershipAdminExtrasBundle As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ ExtraTransferOwnershipAdminExtrasBundle;" />
      <MemberSignature Language="C#" Value="public const string ExtraTransferOwnershipAdminExtrasBundle;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ExtraTransferOwnershipAdminExtrasBundle" />
      <MemberSignature Language="DocId" Value="F:Android.App.Admin.DeviceAdminReceiver.ExtraTransferOwnershipAdminExtrasBundle" />
      <MemberSignature Language="F#" Value="val mutable ExtraTransferOwnershipAdminExtrasBundle : string" Usage="Android.App.Admin.DeviceAdminReceiver.ExtraTransferOwnershipAdminExtrasBundle" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("EXTRA_TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("EXTRA_TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>A <c>android.os.Parcelable</c> extra of type <c>android.os.PersistableBundle</c> that
            allows a mobile device management application to pass data to the management application
            instance after owner transfer.</summary>
        <remarks>
          <para>A <c>android.os.Parcelable</c> extra of type <c>android.os.PersistableBundle</c> that
            allows a mobile device management application to pass data to the management application
            instance after owner transfer.</para>
          <para>If the transfer is successful, the new owner receives the data in
            <c>DeviceAdminReceiver#onTransferOwnershipComplete(Context, PersistableBundle)</c>.
            The bundle is not changed during the ownership transfer.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#EXTRA_TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.EXTRA_TRANSFER_OWNERSHIP_ADMIN_EXTRAS_BUNDLE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManager">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManager (context As Context) As DevicePolicyManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::Admin::DevicePolicyManager ^ GetManager(Android::Content::Context ^ context);" />
      <MemberSignature Language="C#" Value="public virtual Android.App.Admin.DevicePolicyManager GetManager (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.Admin.DevicePolicyManager GetManager(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.GetManager(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="abstract member GetManager : Android.Content.Context -&gt; Android.App.Admin.DevicePolicyManager&#xA;override this.GetManager : Android.Content.Context -&gt; Android.App.Admin.DevicePolicyManager" Usage="deviceAdminReceiver.GetManager context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getManager", "(Landroid/content/Context;)Landroid/app/admin/DevicePolicyManager;", "GetGetManager_Landroid_content_Context_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getManager", "(Landroid/content/Context;)Landroid/app/admin/DevicePolicyManager;", "GetGetManager_Landroid_content_Context_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.Admin.DevicePolicyManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Retrieve the DevicePolicyManager interface for this administrator to work
            with the system.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Retrieve the DevicePolicyManager interface for this administrator to work
            with the system.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#getManager(android.content.Context)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.getManager(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetWho">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetWho (context As Context) As ComponentName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::Content::ComponentName ^ GetWho(Android::Content::Context ^ context);" />
      <MemberSignature Language="C#" Value="public virtual Android.Content.ComponentName GetWho (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.ComponentName GetWho(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.GetWho(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="abstract member GetWho : Android.Content.Context -&gt; Android.Content.ComponentName&#xA;override this.GetWho : Android.Content.Context -&gt; Android.Content.ComponentName" Usage="deviceAdminReceiver.GetWho context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getWho", "(Landroid/content/Context;)Landroid/content/ComponentName;", "GetGetWho_Landroid_content_Context_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getWho", "(Landroid/content/Context;)Landroid/content/ComponentName;", "GetGetWho_Landroid_content_Context_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.ComponentName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>Retrieve the ComponentName describing who this device administrator is, for
            use in <c>DevicePolicyManager</c> APIs that require the administrator to
            identify itself.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Retrieve the ComponentName describing who this device administrator is, for
            use in <c>DevicePolicyManager</c> APIs that require the administrator to
            identify itself.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#getWho(android.content.Context)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.getWho(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DeviceAdminReceiver.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.App.Admin.DeviceAdminReceiver.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBugreportFailed">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnBugreportFailed (context As Context, intent As Intent, failureCode As BugReportFailureReason)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnBugreportFailed(Android::Content::Context ^ context, Android::Content::Intent ^ intent, Android::App::Admin::BugReportFailureReason failureCode);" />
      <MemberSignature Language="C#" Value="public virtual void OnBugreportFailed (Android.Content.Context context, Android.Content.Intent intent, Android.App.Admin.BugReportFailureReason failureCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnBugreportFailed(class Android.Content.Context context, class Android.Content.Intent intent, valuetype Android.App.Admin.BugReportFailureReason failureCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnBugreportFailed(Android.Content.Context,Android.Content.Intent,Android.App.Admin.BugReportFailureReason)" />
      <MemberSignature Language="F#" Value="abstract member OnBugreportFailed : Android.Content.Context * Android.Content.Intent * Android.App.Admin.BugReportFailureReason -&gt; unit&#xA;override this.OnBugreportFailed : Android.Content.Context * Android.Content.Intent * Android.App.Admin.BugReportFailureReason -&gt; unit" Usage="deviceAdminReceiver.OnBugreportFailed (context, intent, failureCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBugreportFailed", "(Landroid/content/Context;Landroid/content/Intent;I)V", "GetOnBugreportFailed_Landroid_content_Context_Landroid_content_Intent_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBugreportFailed", "(Landroid/content/Context;Landroid/content/Intent;I)V", "GetOnBugreportFailed_Landroid_content_Context_Landroid_content_Intent_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="failureCode" Type="Android.App.Admin.BugReportFailureReason">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="failureCode">int containing failure code. One of
            <c>#BUGREPORT_FAILURE_FAILED_COMPLETING</c>
            or <c>#BUGREPORT_FAILURE_FILE_NO_LONGER_AVAILABLE</c></param>
        <summary>Called when the bugreport collection flow has failed.</summary>
        <remarks>
          <para>Called when the bugreport collection flow has failed.</para>
          <para>This callback is only applicable to device owners.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onBugreportFailed(android.content.Context,%20android.content.Intent,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onBugreportFailed(android.content.Context, android.content.Intent, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBugreportShared">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnBugreportShared (context As Context, intent As Intent, bugreportHash As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnBugreportShared(Android::Content::Context ^ context, Android::Content::Intent ^ intent, System::String ^ bugreportHash);" />
      <MemberSignature Language="C#" Value="public virtual void OnBugreportShared (Android.Content.Context context, Android.Content.Intent intent, string bugreportHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnBugreportShared(class Android.Content.Context context, class Android.Content.Intent intent, string bugreportHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnBugreportShared(Android.Content.Context,Android.Content.Intent,System.String)" />
      <MemberSignature Language="F#" Value="abstract member OnBugreportShared : Android.Content.Context * Android.Content.Intent * string -&gt; unit&#xA;override this.OnBugreportShared : Android.Content.Context * Android.Content.Intent * string -&gt; unit" Usage="deviceAdminReceiver.OnBugreportShared (context, intent, bugreportHash)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBugreportShared", "(Landroid/content/Context;Landroid/content/Intent;Ljava/lang/String;)V", "GetOnBugreportShared_Landroid_content_Context_Landroid_content_Intent_Ljava_lang_String_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBugreportShared", "(Landroid/content/Context;Landroid/content/Intent;Ljava/lang/String;)V", "GetOnBugreportShared_Landroid_content_Context_Landroid_content_Intent_Ljava_lang_String_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="bugreportHash" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>. Contains the URI of
            the bugreport file (with MIME type "application/vnd.android.bugreport"), that can be accessed
            by calling <c>Intent#getData()</c></param>
        <param name="bugreportHash">SHA-256 hash of the bugreport file.</param>
        <summary>Called when the bugreport has been shared with the device administrator app.</summary>
        <remarks>
          <para>Called when the bugreport has been shared with the device administrator app.</para>
          <para>This callback is only applicable to device owners.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onBugreportShared(android.content.Context,%20android.content.Intent,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onBugreportShared(android.content.Context, android.content.Intent, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBugreportSharingDeclined">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnBugreportSharingDeclined (context As Context, intent As Intent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnBugreportSharingDeclined(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual void OnBugreportSharingDeclined (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnBugreportSharingDeclined(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnBugreportSharingDeclined(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnBugreportSharingDeclined : Android.Content.Context * Android.Content.Intent -&gt; unit&#xA;override this.OnBugreportSharingDeclined : Android.Content.Context * Android.Content.Intent -&gt; unit" Usage="deviceAdminReceiver.OnBugreportSharingDeclined (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onBugreportSharingDeclined", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnBugreportSharingDeclined_Landroid_content_Context_Landroid_content_Intent_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onBugreportSharingDeclined", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnBugreportSharingDeclined_Landroid_content_Context_Landroid_content_Intent_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called when sharing a bugreport has been cancelled by the user of the device.</summary>
        <remarks>
          <para>Called when sharing a bugreport has been cancelled by the user of the device.</para>
          <para>This callback is only applicable to device owners.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onBugreportSharingDeclined(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onBugreportSharingDeclined(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChoosePrivateKeyAlias">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnChoosePrivateKeyAlias (context As Context, intent As Intent, uid As Integer, uri As Uri, alias As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ OnChoosePrivateKeyAlias(Android::Content::Context ^ context, Android::Content::Intent ^ intent, int uid, Android::Net::Uri ^ uri, System::String ^ alias);" />
      <MemberSignature Language="C#" Value="public virtual string? OnChoosePrivateKeyAlias (Android.Content.Context context, Android.Content.Intent intent, int uid, Android.Net.Uri? uri, string? alias);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string OnChoosePrivateKeyAlias(class Android.Content.Context context, class Android.Content.Intent intent, int32 uid, class Android.Net.Uri uri, string alias) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnChoosePrivateKeyAlias(Android.Content.Context,Android.Content.Intent,System.Int32,Android.Net.Uri,System.String)" />
      <MemberSignature Language="F#" Value="abstract member OnChoosePrivateKeyAlias : Android.Content.Context * Android.Content.Intent * int * Android.Net.Uri * string -&gt; string&#xA;override this.OnChoosePrivateKeyAlias : Android.Content.Context * Android.Content.Intent * int * Android.Net.Uri * string -&gt; string" Usage="deviceAdminReceiver.OnChoosePrivateKeyAlias (context, intent, uid, uri, alias)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onChoosePrivateKeyAlias", "(Landroid/content/Context;Landroid/content/Intent;ILandroid/net/Uri;Ljava/lang/String;)Ljava/lang/String;", "GetOnChoosePrivateKeyAlias_Landroid_content_Context_Landroid_content_Intent_ILandroid_net_Uri_Ljava_lang_String_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onChoosePrivateKeyAlias", "(Landroid/content/Context;Landroid/content/Intent;ILandroid/net/Uri;Ljava/lang/String;)Ljava/lang/String;", "GetOnChoosePrivateKeyAlias_Landroid_content_Context_Landroid_content_Intent_ILandroid_net_Uri_Ljava_lang_String_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="intent" Type="Android.Content.Intent">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="uri" Type="Android.Net.Uri" />
        <Parameter Name="alias" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="uid">The uid of the app asking for the private key and certificate pair.</param>
        <param name="uri">The URI to authenticate, may be null.</param>
        <param name="alias">The alias preselected by the client, or null.</param>
        <summary>Allows this receiver to select the alias for a private key and certificate pair for
            authentication.</summary>
        <returns>The private key alias to return and grant access to.</returns>
        <remarks>
          <para>Allows this receiver to select the alias for a private key and certificate pair for
            authentication. If this method returns null, the default <c>android.app.Activity</c> will be
            shown that lets the user pick a private key and certificate pair.
            If this method returns <c>KeyChain#KEY_ALIAS_SELECTION_DENIED</c>,
            the default <c>android.app.Activity</c> will not be shown and the user will not be allowed
            to pick anything. And the app, that called <c>KeyChain#choosePrivateKeyAlias</c>, will
            receive <c>null</c> back.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onChoosePrivateKeyAlias(android.content.Context,%20android.content.Intent,%20int,%20android.net.Uri,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onChoosePrivateKeyAlias(android.content.Context, android.content.Intent, int, android.net.Uri, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnComplianceAcknowledgementRequired">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComplianceAcknowledgementRequired (context As Context, intent As Intent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComplianceAcknowledgementRequired(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual void OnComplianceAcknowledgementRequired (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComplianceAcknowledgementRequired(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnComplianceAcknowledgementRequired(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnComplianceAcknowledgementRequired : Android.Content.Context * Android.Content.Intent -&gt; unit&#xA;override this.OnComplianceAcknowledgementRequired : Android.Content.Context * Android.Content.Intent -&gt; unit" Usage="deviceAdminReceiver.OnComplianceAcknowledgementRequired (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onComplianceAcknowledgementRequired", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnComplianceAcknowledgementRequired_Landroid_content_Context_Landroid_content_Intent_Handler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onComplianceAcknowledgementRequired", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnComplianceAcknowledgementRequired_Landroid_content_Context_Landroid_content_Intent_Handler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">the running context as per <c>#onReceive</c></param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called to notify a profile owner of an organization-owned device that it needs to acknowledge
            device compliance to allow the user to turn the profile off if needed according to the
            maximum profile time off policy.</summary>
        <remarks>
          <para>Called to notify a profile owner of an organization-owned device that it needs to acknowledge
            device compliance to allow the user to turn the profile off if needed according to the
            maximum profile time off policy.</para>
          <para>Default implementation acknowledges compliance immediately. DPC may prefer to override this
            implementation to delay acknowledgement until a successful policy sync. Until compliance is
            acknowledged the user is still free to turn the profile off, but the timer won't be reset,
            so personal apps will be suspended sooner. This callback is delivered using a foreground
            broadcast and should be handled quickly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onComplianceAcknowledgementRequired(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onComplianceAcknowledgementRequired(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDisabled (context As Context, intent As Intent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDisabled(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual void OnDisabled (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDisabled(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnDisabled(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnDisabled : Android.Content.Context * Android.Content.Intent -&gt; unit&#xA;override this.OnDisabled : Android.Content.Context * Android.Content.Intent -&gt; unit" Usage="deviceAdminReceiver.OnDisabled (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDisabled", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnDisabled_Landroid_content_Context_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDisabled", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnDisabled_Landroid_content_Context_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called prior to the administrator being disabled, as a result of
            receiving <c>#ACTION_DEVICE_ADMIN_DISABLED</c>.</summary>
        <remarks>
          <para>Called prior to the administrator being disabled, as a result of
            receiving <c>#ACTION_DEVICE_ADMIN_DISABLED</c>.  Upon return, you
            can no longer use the protected parts of the <c>DevicePolicyManager</c>
            API.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onDisabled(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onDisabled(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnDisableRequested">
      <MemberSignature Language="VB.NET" Value="Public Function OnDisableRequested (context As Context, intent As Intent) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ OnDisableRequested(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public string? OnDisableRequested (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string OnDisableRequested(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnDisableRequested(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="member this.OnDisableRequested : Android.Content.Context * Android.Content.Intent -&gt; string" Usage="deviceAdminReceiver.OnDisableRequested (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called when the user has asked to disable the administrator, as a result of
            receiving <c>#ACTION_DEVICE_ADMIN_DISABLE_REQUESTED</c>, giving you
            a chance to present a warning message to them.</summary>
        <returns>Return the warning message to display to the user before
            being disabled; if null is returned, no message is displayed.</returns>
        <remarks>
          <para>Called when the user has asked to disable the administrator, as a result of
            receiving <c>#ACTION_DEVICE_ADMIN_DISABLE_REQUESTED</c>, giving you
            a chance to present a warning message to them.  The message is returned
            as the result; if null is returned (the default implementation), no
            message will be displayed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onDisableRequested(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onDisableRequested(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDisableRequestedFormatted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnDisableRequestedFormatted (context As Context, intent As Intent) As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Lang::ICharSequence ^ OnDisableRequestedFormatted(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? OnDisableRequestedFormatted (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence OnDisableRequestedFormatted(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnDisableRequestedFormatted(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnDisableRequestedFormatted : Android.Content.Context * Android.Content.Intent -&gt; Java.Lang.ICharSequence&#xA;override this.OnDisableRequestedFormatted : Android.Content.Context * Android.Content.Intent -&gt; Java.Lang.ICharSequence" Usage="deviceAdminReceiver.OnDisableRequestedFormatted (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDisableRequested", "(Landroid/content/Context;Landroid/content/Intent;)Ljava/lang/CharSequence;", "GetOnDisableRequested_Landroid_content_Context_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDisableRequested", "(Landroid/content/Context;Landroid/content/Intent;)Ljava/lang/CharSequence;", "GetOnDisableRequested_Landroid_content_Context_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called when the user has asked to disable the administrator, as a result of
            receiving <c>#ACTION_DEVICE_ADMIN_DISABLE_REQUESTED</c>, giving you
            a chance to present a warning message to them.</summary>
        <returns>Return the warning message to display to the user before
            being disabled; if null is returned, no message is displayed.</returns>
        <remarks>
          <para>Called when the user has asked to disable the administrator, as a result of
            receiving <c>#ACTION_DEVICE_ADMIN_DISABLE_REQUESTED</c>, giving you
            a chance to present a warning message to them.  The message is returned
            as the result; if null is returned (the default implementation), no
            message will be displayed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onDisableRequested(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onDisableRequested(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnEnabled (context As Context, intent As Intent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnEnabled(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual void OnEnabled (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnEnabled(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnEnabled(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnEnabled : Android.Content.Context * Android.Content.Intent -&gt; unit&#xA;override this.OnEnabled : Android.Content.Context * Android.Content.Intent -&gt; unit" Usage="deviceAdminReceiver.OnEnabled (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onEnabled", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnEnabled_Landroid_content_Context_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onEnabled", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnEnabled_Landroid_content_Context_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called after the administrator is first enabled, as a result of
            receiving <c>#ACTION_DEVICE_ADMIN_ENABLED</c>.</summary>
        <remarks>
          <para>Called after the administrator is first enabled, as a result of
            receiving <c>#ACTION_DEVICE_ADMIN_ENABLED</c>.  At this point you
            can use <c>DevicePolicyManager</c> to set your desired policies.</para>
          <para>If the admin is activated by a device owner, then the intent
            may contain private extras that are relevant to user setup.
            <c>DevicePolicyManager#createAndManageUser(ComponentName, String, ComponentName,
                 PersistableBundle, int)</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onEnabled(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onEnabled(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnLockTaskModeEntering">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnLockTaskModeEntering (context As Context, intent As Intent, pkg As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnLockTaskModeEntering(Android::Content::Context ^ context, Android::Content::Intent ^ intent, System::String ^ pkg);" />
      <MemberSignature Language="C#" Value="public virtual void OnLockTaskModeEntering (Android.Content.Context context, Android.Content.Intent intent, string pkg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLockTaskModeEntering(class Android.Content.Context context, class Android.Content.Intent intent, string pkg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnLockTaskModeEntering(Android.Content.Context,Android.Content.Intent,System.String)" />
      <MemberSignature Language="F#" Value="abstract member OnLockTaskModeEntering : Android.Content.Context * Android.Content.Intent * string -&gt; unit&#xA;override this.OnLockTaskModeEntering : Android.Content.Context * Android.Content.Intent * string -&gt; unit" Usage="deviceAdminReceiver.OnLockTaskModeEntering (context, intent, pkg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onLockTaskModeEntering", "(Landroid/content/Context;Landroid/content/Intent;Ljava/lang/String;)V", "GetOnLockTaskModeEntering_Landroid_content_Context_Landroid_content_Intent_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onLockTaskModeEntering", "(Landroid/content/Context;Landroid/content/Intent;Ljava/lang/String;)V", "GetOnLockTaskModeEntering_Landroid_content_Context_Landroid_content_Intent_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="pkg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="pkg">The authorized package using lock task mode.</param>
        <summary>Called when a device is entering lock task mode.</summary>
        <remarks>
          <para>Called when a device is entering lock task mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onLockTaskModeEntering(android.content.Context,%20android.content.Intent,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onLockTaskModeEntering(android.content.Context, android.content.Intent, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLockTaskModeExiting">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnLockTaskModeExiting (context As Context, intent As Intent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnLockTaskModeExiting(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual void OnLockTaskModeExiting (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnLockTaskModeExiting(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnLockTaskModeExiting(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnLockTaskModeExiting : Android.Content.Context * Android.Content.Intent -&gt; unit&#xA;override this.OnLockTaskModeExiting : Android.Content.Context * Android.Content.Intent -&gt; unit" Usage="deviceAdminReceiver.OnLockTaskModeExiting (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onLockTaskModeExiting", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnLockTaskModeExiting_Landroid_content_Context_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onLockTaskModeExiting", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnLockTaskModeExiting_Landroid_content_Context_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called when a device is exiting lock task mode.</summary>
        <remarks>
          <para>Called when a device is exiting lock task mode.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onLockTaskModeExiting(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onLockTaskModeExiting(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNetworkLogsAvailable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnNetworkLogsAvailable (context As Context, intent As Intent, batchToken As Long, networkLogsCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnNetworkLogsAvailable(Android::Content::Context ^ context, Android::Content::Intent ^ intent, long batchToken, int networkLogsCount);" />
      <MemberSignature Language="C#" Value="public virtual void OnNetworkLogsAvailable (Android.Content.Context context, Android.Content.Intent intent, long batchToken, int networkLogsCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnNetworkLogsAvailable(class Android.Content.Context context, class Android.Content.Intent intent, int64 batchToken, int32 networkLogsCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnNetworkLogsAvailable(Android.Content.Context,Android.Content.Intent,System.Int64,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnNetworkLogsAvailable : Android.Content.Context * Android.Content.Intent * int64 * int -&gt; unit&#xA;override this.OnNetworkLogsAvailable : Android.Content.Context * Android.Content.Intent * int64 * int -&gt; unit" Usage="deviceAdminReceiver.OnNetworkLogsAvailable (context, intent, batchToken, networkLogsCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onNetworkLogsAvailable", "(Landroid/content/Context;Landroid/content/Intent;JI)V", "GetOnNetworkLogsAvailable_Landroid_content_Context_Landroid_content_Intent_JIHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onNetworkLogsAvailable", "(Landroid/content/Context;Landroid/content/Intent;JI)V", "GetOnNetworkLogsAvailable_Landroid_content_Context_Landroid_content_Intent_JIHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="batchToken" Type="System.Int64" />
        <Parameter Name="networkLogsCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="batchToken">The token representing the current batch of network logs.</param>
        <param name="networkLogsCount">The total count of events in the current batch of network logs.</param>
        <summary>Called each time a new batch of network logs can be retrieved.</summary>
        <remarks>
          <para>Called each time a new batch of network logs can be retrieved. This callback method will only
            ever be called when network logging is enabled. The logs can only be retrieved while network
            logging is enabled.</para>
          <para>If a secondary user or profile is created, this callback won't be received until all users
            become affiliated again (even if network logging is enabled). It will also no longer be
            possible to retrieve the network logs batch with the most recent <c>batchToken</c> provided
            by this callback. See <c>DevicePolicyManager#setAffiliationIds</c>.</para>
          <para>This callback is only applicable to device owners and profile owners.</para>
          <para>This callback is triggered by a foreground broadcast and the app should ensure that any
            long-running work is not executed synchronously inside the callback.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onNetworkLogsAvailable(android.content.Context,%20android.content.Intent,%20long,%20int)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onNetworkLogsAvailable(android.content.Context, android.content.Intent, long, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOperationSafetyStateChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnOperationSafetyStateChanged (context As Context, reason As Integer, isSafe As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnOperationSafetyStateChanged(Android::Content::Context ^ context, int reason, bool isSafe);" />
      <MemberSignature Language="C#" Value="public virtual void OnOperationSafetyStateChanged (Android.Content.Context context, int reason, bool isSafe);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnOperationSafetyStateChanged(class Android.Content.Context context, int32 reason, bool isSafe) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnOperationSafetyStateChanged(Android.Content.Context,System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member OnOperationSafetyStateChanged : Android.Content.Context * int * bool -&gt; unit&#xA;override this.OnOperationSafetyStateChanged : Android.Content.Context * int * bool -&gt; unit" Usage="deviceAdminReceiver.OnOperationSafetyStateChanged (context, reason, isSafe)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onOperationSafetyStateChanged", "(Landroid/content/Context;IZ)V", "GetOnOperationSafetyStateChanged_Landroid_content_Context_IZHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onOperationSafetyStateChanged", "(Landroid/content/Context;IZ)V", "GetOnOperationSafetyStateChanged_Landroid_content_Context_IZHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="reason" Type="System.Int32">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.IntDef(Fields=new System.String[] { "OperationSafetyReasonDrivingDistraction" }, Type="Android.App.Admin.DevicePolicyManager")]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.IntDef(Fields=new System.String[] { "OperationSafetyReasonDrivingDistraction" }, Type="Android.App.Admin.DevicePolicyManager")&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="isSafe" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="context">the running context as per <c>#onReceive</c></param>
        <param name="reason">the reason an operation could be unsafe.</param>
        <param name="isSafe">whether the operation is safe to be executed.</param>
        <summary>Called to notify the state of operations that can be unsafe to execute has changed.</summary>
        <remarks>
          <para>Called to notify the state of operations that can be unsafe to execute has changed.</para>
          <para>&lt;b&gt;Note:/b&gt; notice that the operation safety state might change between the time this
            callback is received and the operation's method on <c>DevicePolicyManager</c> is called, so
            calls to the latter could still throw a <c>UnsafeStateException</c> even when this method
            is called with <c>isSafe</c> as <c>true</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onOperationSafetyStateChanged(android.content.Context,%20int,%20boolean)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onOperationSafetyStateChanged(android.content.Context, int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPasswordChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPasswordChanged (context As Context, intent As Intent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnPasswordChanged(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual void OnPasswordChanged (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPasswordChanged(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnPasswordChanged(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnPasswordChanged : Android.Content.Context * Android.Content.Intent -&gt; unit&#xA;override this.OnPasswordChanged : Android.Content.Context * Android.Content.Intent -&gt; unit" Usage="deviceAdminReceiver.OnPasswordChanged (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPasswordChanged", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnPasswordChanged_Landroid_content_Context_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPasswordChanged", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnPasswordChanged_Landroid_content_Context_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called after the user has changed their device or profile challenge password, as a result of
            receiving <c>#ACTION_PASSWORD_CHANGED</c>.</summary>
        <remarks>
          <para>Called after the user has changed their device or profile challenge password, as a result of
            receiving <c>#ACTION_PASSWORD_CHANGED</c>.  At this point you
            can use <c>DevicePolicyManager#getPasswordQuality(android.content.ComponentName)</c>
            to retrieve the active password characteristics.</para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#O</c>, use
                        <c>#onPasswordChanged(Context, Intent, UserHandle)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onPasswordChanged(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onPasswordChanged(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnPasswordChanged">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPasswordChanged (context As Context, intent As Intent, user As UserHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnPasswordChanged(Android::Content::Context ^ context, Android::Content::Intent ^ intent, Android::OS::UserHandle ^ user);" />
      <MemberSignature Language="C#" Value="public virtual void OnPasswordChanged (Android.Content.Context context, Android.Content.Intent intent, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPasswordChanged(class Android.Content.Context context, class Android.Content.Intent intent, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnPasswordChanged(Android.Content.Context,Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member OnPasswordChanged : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit&#xA;override this.OnPasswordChanged : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="deviceAdminReceiver.OnPasswordChanged (context, intent, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPasswordChanged", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnPasswordChanged_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPasswordChanged", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnPasswordChanged_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="user">The user or profile for whom the password changed. To see whether this
                   user is the current profile or a parent user, check for equality with
                   <c>Process#myUserHandle</c>.</param>
        <summary>Called after the user has changed their device or profile challenge password, as a result of
            receiving <c>#ACTION_PASSWORD_CHANGED</c>.</summary>
        <remarks>
          <para>Called after the user has changed their device or profile challenge password, as a result of
            receiving <c>#ACTION_PASSWORD_CHANGED</c>.  At this point you
            can use <c>DevicePolicyManager#getPasswordQuality(android.content.ComponentName)</c>
            to retrieve the active password characteristics.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onPasswordChanged(android.content.Context,%20android.content.Intent,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onPasswordChanged(android.content.Context, android.content.Intent, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPasswordExpiring">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPasswordExpiring (context As Context, intent As Intent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnPasswordExpiring(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual void OnPasswordExpiring (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPasswordExpiring(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnPasswordExpiring(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnPasswordExpiring : Android.Content.Context * Android.Content.Intent -&gt; unit&#xA;override this.OnPasswordExpiring : Android.Content.Context * Android.Content.Intent -&gt; unit" Usage="deviceAdminReceiver.OnPasswordExpiring (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPasswordExpiring", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnPasswordExpiring_Landroid_content_Context_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPasswordExpiring", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnPasswordExpiring_Landroid_content_Context_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called periodically when the device or profile challenge password is about to expire
            or has expired.</summary>
        <remarks>
          <para>Called periodically when the device or profile challenge password is about to expire
            or has expired.  It will typically be called at these times: on device boot, once per day
            before the password expires, and at the time when the password expires.</para>
          <para>If the password is not updated by the user, this method will continue to be called
            once per day until the password is changed or the device admin disables password expiration.</para>
          <para>The admin will typically post a notification requesting the user to change their password
            in response to this call. The actual password expiration time can be obtained by calling
            <c>DevicePolicyManager#getPasswordExpiration(ComponentName) </c></para>
          <para>The admin should be sure to take down any notifications it posted in response to this call
            when it receives <c>DeviceAdminReceiver#onPasswordChanged(Context, Intent) </c>.</para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#O</c>, use
                        <c>#onPasswordExpiring(Context, Intent, UserHandle)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onPasswordExpiring(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onPasswordExpiring(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="OnPasswordExpiring">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPasswordExpiring (context As Context, intent As Intent, user As UserHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnPasswordExpiring(Android::Content::Context ^ context, Android::Content::Intent ^ intent, Android::OS::UserHandle ^ user);" />
      <MemberSignature Language="C#" Value="public virtual void OnPasswordExpiring (Android.Content.Context context, Android.Content.Intent intent, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPasswordExpiring(class Android.Content.Context context, class Android.Content.Intent intent, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnPasswordExpiring(Android.Content.Context,Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member OnPasswordExpiring : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit&#xA;override this.OnPasswordExpiring : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="deviceAdminReceiver.OnPasswordExpiring (context, intent, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPasswordExpiring", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnPasswordExpiring_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPasswordExpiring", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnPasswordExpiring_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="user">The user or profile for whom the password is expiring. To see whether this
                   user is the current profile or a parent user, check for equality with
                   <c>Process#myUserHandle</c>.</param>
        <summary>Called periodically when the device or profile challenge password is about to expire
            or has expired.</summary>
        <remarks>
          <para>Called periodically when the device or profile challenge password is about to expire
            or has expired.  It will typically be called at these times: on device boot, once per day
            before the password expires, and at the time when the password expires.</para>
          <para>If the password is not updated by the user, this method will continue to be called
            once per day until the password is changed or the device admin disables password expiration.</para>
          <para>The admin will typically post a notification requesting the user to change their password
            in response to this call. The actual password expiration time can be obtained by calling
            <c>DevicePolicyManager#getPasswordExpiration(ComponentName) </c></para>
          <para>The admin should be sure to take down any notifications it posted in response to this call
            when it receives <c>DeviceAdminReceiver#onPasswordChanged(Context, Intent, UserHandle) </c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onPasswordExpiring(android.content.Context,%20android.content.Intent,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onPasswordExpiring(android.content.Context, android.content.Intent, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPasswordFailed">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPasswordFailed (context As Context, intent As Intent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnPasswordFailed(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual void OnPasswordFailed (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPasswordFailed(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnPasswordFailed(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnPasswordFailed : Android.Content.Context * Android.Content.Intent -&gt; unit&#xA;override this.OnPasswordFailed : Android.Content.Context * Android.Content.Intent -&gt; unit" Usage="deviceAdminReceiver.OnPasswordFailed (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPasswordFailed", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnPasswordFailed_Landroid_content_Context_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPasswordFailed", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnPasswordFailed_Landroid_content_Context_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called after the user has failed at entering their device or profile challenge password,
            as a result of receiving <c>#ACTION_PASSWORD_FAILED</c>.</summary>
        <remarks>
          <para>Called after the user has failed at entering their device or profile challenge password,
            as a result of receiving <c>#ACTION_PASSWORD_FAILED</c>.  At this point you can use
            <c>DevicePolicyManager#getCurrentFailedPasswordAttempts()</c> to retrieve the number of
            failed password attempts.</para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#O</c>, use
                        <c>#onPasswordFailed(Context, Intent, UserHandle)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onPasswordFailed(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onPasswordFailed(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnPasswordFailed">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPasswordFailed (context As Context, intent As Intent, user As UserHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnPasswordFailed(Android::Content::Context ^ context, Android::Content::Intent ^ intent, Android::OS::UserHandle ^ user);" />
      <MemberSignature Language="C#" Value="public virtual void OnPasswordFailed (Android.Content.Context context, Android.Content.Intent intent, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPasswordFailed(class Android.Content.Context context, class Android.Content.Intent intent, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnPasswordFailed(Android.Content.Context,Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member OnPasswordFailed : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit&#xA;override this.OnPasswordFailed : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="deviceAdminReceiver.OnPasswordFailed (context, intent, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPasswordFailed", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnPasswordFailed_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPasswordFailed", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnPasswordFailed_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="user">The user or profile for whom the password check failed. To see whether this
                   user is the current profile or a parent user, check for equality with
                   <c>Process#myUserHandle</c>.</param>
        <summary>Called after the user has failed at entering their device or profile challenge password,
            as a result of receiving <c>#ACTION_PASSWORD_FAILED</c>.</summary>
        <remarks>
          <para>Called after the user has failed at entering their device or profile challenge password,
            as a result of receiving <c>#ACTION_PASSWORD_FAILED</c>.  At this point you can use
            <c>DevicePolicyManager#getCurrentFailedPasswordAttempts()</c> to retrieve the number of
            failed password attempts.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onPasswordFailed(android.content.Context,%20android.content.Intent,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onPasswordFailed(android.content.Context, android.content.Intent, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPasswordSucceeded">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPasswordSucceeded (context As Context, intent As Intent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnPasswordSucceeded(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual void OnPasswordSucceeded (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPasswordSucceeded(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnPasswordSucceeded(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnPasswordSucceeded : Android.Content.Context * Android.Content.Intent -&gt; unit&#xA;override this.OnPasswordSucceeded : Android.Content.Context * Android.Content.Intent -&gt; unit" Usage="deviceAdminReceiver.OnPasswordSucceeded (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPasswordSucceeded", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnPasswordSucceeded_Landroid_content_Context_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPasswordSucceeded", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnPasswordSucceeded_Landroid_content_Context_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called after the user has succeeded at entering their device or profile challenge password,
            as a result of receiving <c>#ACTION_PASSWORD_SUCCEEDED</c>.</summary>
        <remarks>
          <para>Called after the user has succeeded at entering their device or profile challenge password,
            as a result of receiving <c>#ACTION_PASSWORD_SUCCEEDED</c>.  This will
            only be received the first time they succeed after having previously
            failed.</para>
          <para>This member is deprecated. From <c>android.os.Build.VERSION_CODES#O</c>, use
                        <c>#onPasswordSucceeded(Context, Intent, UserHandle)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onPasswordSucceeded(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onPasswordSucceeded(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnPasswordSucceeded">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnPasswordSucceeded (context As Context, intent As Intent, user As UserHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnPasswordSucceeded(Android::Content::Context ^ context, Android::Content::Intent ^ intent, Android::OS::UserHandle ^ user);" />
      <MemberSignature Language="C#" Value="public virtual void OnPasswordSucceeded (Android.Content.Context context, Android.Content.Intent intent, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnPasswordSucceeded(class Android.Content.Context context, class Android.Content.Intent intent, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnPasswordSucceeded(Android.Content.Context,Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member OnPasswordSucceeded : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit&#xA;override this.OnPasswordSucceeded : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="deviceAdminReceiver.OnPasswordSucceeded (context, intent, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPasswordSucceeded", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnPasswordSucceeded_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPasswordSucceeded", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnPasswordSucceeded_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="user">The user of profile for whom the password check succeeded.  To see whether this
                   user is the current profile or a parent user, check for equality with
                   <c>Process#myUserHandle</c>.</param>
        <summary>Called after the user has succeeded at entering their device or profile challenge password,
            as a result of receiving <c>#ACTION_PASSWORD_SUCCEEDED</c>.</summary>
        <remarks>
          <para>Called after the user has succeeded at entering their device or profile challenge password,
            as a result of receiving <c>#ACTION_PASSWORD_SUCCEEDED</c>.  This will
            only be received the first time they succeed after having previously
            failed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onPasswordSucceeded(android.content.Context,%20android.content.Intent,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onPasswordSucceeded(android.content.Context, android.content.Intent, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnProfileProvisioningComplete">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnProfileProvisioningComplete (context As Context, intent As Intent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnProfileProvisioningComplete(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual void OnProfileProvisioningComplete (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnProfileProvisioningComplete(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnProfileProvisioningComplete(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnProfileProvisioningComplete : Android.Content.Context * Android.Content.Intent -&gt; unit&#xA;override this.OnProfileProvisioningComplete : Android.Content.Context * Android.Content.Intent -&gt; unit" Usage="deviceAdminReceiver.OnProfileProvisioningComplete (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onProfileProvisioningComplete", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnProfileProvisioningComplete_Landroid_content_Context_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onProfileProvisioningComplete", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnProfileProvisioningComplete_Landroid_content_Context_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called when provisioning of a managed profile or managed device has completed successfully.</summary>
        <remarks>
          <para>Called when provisioning of a managed profile or managed device has completed successfully.</para>
          <para>As a prerequisite for the execution of this callback the <c>DeviceAdminReceiver</c> has
            to declare an intent filter for <c>#ACTION_PROFILE_PROVISIONING_COMPLETE</c>.
            Its component must also be specified in the <c>DevicePolicyManager#EXTRA_DEVICE_ADMIN</c>
            of the <c>DevicePolicyManager#ACTION_PROVISION_MANAGED_PROFILE</c> intent that started the
            managed provisioning.</para>
          <para>When provisioning of a managed profile is complete, the managed profile is hidden until
            the profile owner calls <c>DevicePolicyManager#setProfileEnabled(ComponentName admin)</c>.
            Typically a profile owner will enable the profile when it has finished any additional setup
            such as adding an account by using the <c>AccountManager</c> and calling APIs to bring the
            profile into the desired state.</para>
          <para>Note that provisioning completes without waiting for any server interactions, so the
            profile owner needs to wait for data to be available if required (e.g. Android device IDs or
            other data that is set as a result of server interactions).</para>
          <para>From version <c>android.os.Build.VERSION_CODES#O</c>, when managed provisioning has
            completed, along with this callback the activity intent
            <c>DevicePolicyManager#ACTION_PROVISIONING_SUCCESSFUL</c> will also be sent to the same
            application.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onProfileProvisioningComplete(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onProfileProvisioningComplete(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReadyForUserInitialization">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnReadyForUserInitialization (context As Context, intent As Intent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnReadyForUserInitialization(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual void OnReadyForUserInitialization (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnReadyForUserInitialization(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnReadyForUserInitialization(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnReadyForUserInitialization : Android.Content.Context * Android.Content.Intent -&gt; unit&#xA;override this.OnReadyForUserInitialization : Android.Content.Context * Android.Content.Intent -&gt; unit" Usage="deviceAdminReceiver.OnReadyForUserInitialization (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onReadyForUserInitialization", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnReadyForUserInitialization_Landroid_content_Context_Landroid_content_Intent_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onReadyForUserInitialization", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnReadyForUserInitialization_Landroid_content_Context_Landroid_content_Intent_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called during provisioning of a managed device to allow the device initializer to perform
            user setup steps.</summary>
        <remarks>
          <para>Called during provisioning of a managed device to allow the device initializer to perform
            user setup steps.</para>
          <para>This member is deprecated. Do not use</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onReadyForUserInitialization(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onReadyForUserInitialization(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReceive">
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnReceive (context As Context, intent As Intent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnReceive(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public override void OnReceive (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnReceive(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnReceive(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="override this.OnReceive : Android.Content.Context * Android.Content.Intent -&gt; unit" Usage="deviceAdminReceiver.OnReceive (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onReceive", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onReceive", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The Context in which the receiver is running.</param>
        <param name="intent">The Intent being received.
</param>
        <summary>Intercept standard device administrator broadcasts.</summary>
        <remarks>
          <para>Intercept standard device administrator broadcasts.  Implementations
            should not override this method; it is better to implement the
            convenience callbacks for each action.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onReceive(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onReceive(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="OnSecurityLogsAvailable">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnSecurityLogsAvailable (context As Context, intent As Intent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnSecurityLogsAvailable(Android::Content::Context ^ context, Android::Content::Intent ^ intent);" />
      <MemberSignature Language="C#" Value="public virtual void OnSecurityLogsAvailable (Android.Content.Context context, Android.Content.Intent intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSecurityLogsAvailable(class Android.Content.Context context, class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnSecurityLogsAvailable(Android.Content.Context,Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="abstract member OnSecurityLogsAvailable : Android.Content.Context * Android.Content.Intent -&gt; unit&#xA;override this.OnSecurityLogsAvailable : Android.Content.Context * Android.Content.Intent -&gt; unit" Usage="deviceAdminReceiver.OnSecurityLogsAvailable (context, intent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSecurityLogsAvailable", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnSecurityLogsAvailable_Landroid_content_Context_Landroid_content_Intent_Handler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSecurityLogsAvailable", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnSecurityLogsAvailable_Landroid_content_Context_Landroid_content_Intent_Handler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <summary>Called when a new batch of security logs can be retrieved.</summary>
        <remarks>
          <para>Called when a new batch of security logs can be retrieved.</para>
          <para>If a secondary user or profile is created, this callback won't be received until all users
            become affiliated again (even if security logging is enabled).
            See <c>DevicePolicyManager#setAffiliationIds</c></para>
          <para>This callback will be re-triggered if the logs are not retrieved.</para>
          <para>This callback is only applicable to device owners and profile owners of
            organization-owned managed profiles.</para>
          <para>This callback is triggered by a foreground broadcast and the app should ensure that any
            long-running work is not executed synchronously inside the callback.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onSecurityLogsAvailable(android.content.Context,%20android.content.Intent)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onSecurityLogsAvailable(android.content.Context, android.content.Intent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSystemUpdatePending">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnSystemUpdatePending (context As Context, intent As Intent, receivedTime As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnSystemUpdatePending(Android::Content::Context ^ context, Android::Content::Intent ^ intent, long receivedTime);" />
      <MemberSignature Language="C#" Value="public virtual void OnSystemUpdatePending (Android.Content.Context context, Android.Content.Intent intent, long receivedTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSystemUpdatePending(class Android.Content.Context context, class Android.Content.Intent intent, int64 receivedTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnSystemUpdatePending(Android.Content.Context,Android.Content.Intent,System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member OnSystemUpdatePending : Android.Content.Context * Android.Content.Intent * int64 -&gt; unit&#xA;override this.OnSystemUpdatePending : Android.Content.Context * Android.Content.Intent * int64 -&gt; unit" Usage="deviceAdminReceiver.OnSystemUpdatePending (context, intent, receivedTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSystemUpdatePending", "(Landroid/content/Context;Landroid/content/Intent;J)V", "GetOnSystemUpdatePending_Landroid_content_Context_Landroid_content_Intent_JHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSystemUpdatePending", "(Landroid/content/Context;Landroid/content/Intent;J)V", "GetOnSystemUpdatePending_Landroid_content_Context_Landroid_content_Intent_JHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="receivedTime" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="receivedTime">The time as given by <c>System#currentTimeMillis()</c> indicating when
                   the current pending update was first available. -1 if no pending update is available.</param>
        <summary>Called when the information about a pending system update is available.</summary>
        <remarks>
          <para>Called when the information about a pending system update is available.</para>
          <para>Allows the receiver to be notified when information about a pending system update is
            available from the system update service. The same pending system update can trigger multiple
            calls to this method, so it is necessary to examine the incoming parameters for details about
            the update.</para>
          <para>This callback is only applicable to device owners and profile owners.</para>
          <para>To get further information about a pending system update (for example, whether or not the
            update is a security patch), the device owner or profile owner can call
            <c>DevicePolicyManager#getPendingSystemUpdate</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onSystemUpdatePending(android.content.Context,%20android.content.Intent,%20long)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onSystemUpdatePending(android.content.Context, android.content.Intent, long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTransferAffiliatedProfileOwnershipComplete">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnTransferAffiliatedProfileOwnershipComplete (context As Context, user As UserHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnTransferAffiliatedProfileOwnershipComplete(Android::Content::Context ^ context, Android::OS::UserHandle ^ user);" />
      <MemberSignature Language="C#" Value="public virtual void OnTransferAffiliatedProfileOwnershipComplete (Android.Content.Context context, Android.OS.UserHandle user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTransferAffiliatedProfileOwnershipComplete(class Android.Content.Context context, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnTransferAffiliatedProfileOwnershipComplete(Android.Content.Context,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member OnTransferAffiliatedProfileOwnershipComplete : Android.Content.Context * Android.OS.UserHandle -&gt; unit&#xA;override this.OnTransferAffiliatedProfileOwnershipComplete : Android.Content.Context * Android.OS.UserHandle -&gt; unit" Usage="deviceAdminReceiver.OnTransferAffiliatedProfileOwnershipComplete (context, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTransferAffiliatedProfileOwnershipComplete", "(Landroid/content/Context;Landroid/os/UserHandle;)V", "GetOnTransferAffiliatedProfileOwnershipComplete_Landroid_content_Context_Landroid_os_UserHandle_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTransferAffiliatedProfileOwnershipComplete", "(Landroid/content/Context;Landroid/os/UserHandle;)V", "GetOnTransferAffiliatedProfileOwnershipComplete_Landroid_content_Context_Landroid_os_UserHandle_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="context">the running context as per <c>#onReceive</c></param>
        <param name="user">the <c>UserHandle</c> of the affiliated user</param>
        <summary>Called on the device owner when the ownership of one of its affiliated profiles is
            transferred.</summary>
        <remarks>
          <para>Called on the device owner when the ownership of one of its affiliated profiles is
            transferred.</para>
          <para>This can be used when transferring both device and profile ownership when using
            work profile on a fully managed device. The process would look like this:
            &lt;ol&gt;
            &lt;li&gt;Transfer profile ownership&lt;/li&gt;
            &lt;li&gt;The device owner gets notified with this callback&lt;/li&gt;
            &lt;li&gt;Transfer device ownership&lt;/li&gt;
            &lt;li&gt;Both profile and device ownerships have been transferred&lt;/li&gt;
            &lt;/ol&gt;</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onTransferAffiliatedProfileOwnershipComplete(android.content.Context,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onTransferAffiliatedProfileOwnershipComplete(android.content.Context, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTransferOwnershipComplete">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnTransferOwnershipComplete (context As Context, bundle As PersistableBundle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnTransferOwnershipComplete(Android::Content::Context ^ context, Android::OS::PersistableBundle ^ bundle);" />
      <MemberSignature Language="C#" Value="public virtual void OnTransferOwnershipComplete (Android.Content.Context context, Android.OS.PersistableBundle? bundle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTransferOwnershipComplete(class Android.Content.Context context, class Android.OS.PersistableBundle bundle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnTransferOwnershipComplete(Android.Content.Context,Android.OS.PersistableBundle)" />
      <MemberSignature Language="F#" Value="abstract member OnTransferOwnershipComplete : Android.Content.Context * Android.OS.PersistableBundle -&gt; unit&#xA;override this.OnTransferOwnershipComplete : Android.Content.Context * Android.OS.PersistableBundle -&gt; unit" Usage="deviceAdminReceiver.OnTransferOwnershipComplete (context, bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTransferOwnershipComplete", "(Landroid/content/Context;Landroid/os/PersistableBundle;)V", "GetOnTransferOwnershipComplete_Landroid_content_Context_Landroid_os_PersistableBundle_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTransferOwnershipComplete", "(Landroid/content/Context;Landroid/os/PersistableBundle;)V", "GetOnTransferOwnershipComplete_Landroid_content_Context_Landroid_os_PersistableBundle_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="bundle" Type="Android.OS.PersistableBundle">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="context">the running context as per <c>#onReceive</c></param>
        <param name="bundle">the data to be passed to the new owner</param>
        <summary>Called on the newly assigned owner (either device owner or profile owner) when the ownership
            transfer has completed successfully.</summary>
        <remarks>
          <para>Called on the newly assigned owner (either device owner or profile owner) when the ownership
            transfer has completed successfully.</para>
          <para>The <c>bundle</c> parameter allows the original owner to pass data
            to the new one.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onTransferOwnershipComplete(android.content.Context,%20android.os.PersistableBundle)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onTransferOwnershipComplete(android.content.Context, android.os.PersistableBundle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUserAdded">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnUserAdded (context As Context, intent As Intent, addedUser As UserHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnUserAdded(Android::Content::Context ^ context, Android::Content::Intent ^ intent, Android::OS::UserHandle ^ addedUser);" />
      <MemberSignature Language="C#" Value="public virtual void OnUserAdded (Android.Content.Context context, Android.Content.Intent intent, Android.OS.UserHandle addedUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUserAdded(class Android.Content.Context context, class Android.Content.Intent intent, class Android.OS.UserHandle addedUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnUserAdded(Android.Content.Context,Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member OnUserAdded : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit&#xA;override this.OnUserAdded : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="deviceAdminReceiver.OnUserAdded (context, intent, addedUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUserAdded", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnUserAdded_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUserAdded", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnUserAdded_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="addedUser" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="addedUser">The <c>UserHandle</c> of the user that has just been added.</param>
        <summary>Called when a user or profile is created.</summary>
        <remarks>
          <para>Called when a user or profile is created.</para>
          <para>This callback is only applicable to device owners.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onUserAdded(android.content.Context,%20android.content.Intent,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onUserAdded(android.content.Context, android.content.Intent, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUserRemoved">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnUserRemoved (context As Context, intent As Intent, removedUser As UserHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnUserRemoved(Android::Content::Context ^ context, Android::Content::Intent ^ intent, Android::OS::UserHandle ^ removedUser);" />
      <MemberSignature Language="C#" Value="public virtual void OnUserRemoved (Android.Content.Context context, Android.Content.Intent intent, Android.OS.UserHandle removedUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUserRemoved(class Android.Content.Context context, class Android.Content.Intent intent, class Android.OS.UserHandle removedUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnUserRemoved(Android.Content.Context,Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member OnUserRemoved : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit&#xA;override this.OnUserRemoved : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="deviceAdminReceiver.OnUserRemoved (context, intent, removedUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUserRemoved", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnUserRemoved_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUserRemoved", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnUserRemoved_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="removedUser" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="removedUser">The <c>UserHandle</c> of the user that has just been removed.</param>
        <summary>Called when a user or profile is removed.</summary>
        <remarks>
          <para>Called when a user or profile is removed.</para>
          <para>This callback is only applicable to device owners.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onUserRemoved(android.content.Context,%20android.content.Intent,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onUserRemoved(android.content.Context, android.content.Intent, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUserStarted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnUserStarted (context As Context, intent As Intent, startedUser As UserHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnUserStarted(Android::Content::Context ^ context, Android::Content::Intent ^ intent, Android::OS::UserHandle ^ startedUser);" />
      <MemberSignature Language="C#" Value="public virtual void OnUserStarted (Android.Content.Context context, Android.Content.Intent intent, Android.OS.UserHandle startedUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUserStarted(class Android.Content.Context context, class Android.Content.Intent intent, class Android.OS.UserHandle startedUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnUserStarted(Android.Content.Context,Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member OnUserStarted : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit&#xA;override this.OnUserStarted : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="deviceAdminReceiver.OnUserStarted (context, intent, startedUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUserStarted", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnUserStarted_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUserStarted", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnUserStarted_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="startedUser" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="startedUser">The <c>UserHandle</c> of the user that has just been started.</param>
        <summary>Called when a user or profile is started.</summary>
        <remarks>
          <para>Called when a user or profile is started.</para>
          <para>This callback is only applicable to device owners.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onUserStarted(android.content.Context,%20android.content.Intent,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onUserStarted(android.content.Context, android.content.Intent, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUserStopped">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnUserStopped (context As Context, intent As Intent, stoppedUser As UserHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnUserStopped(Android::Content::Context ^ context, Android::Content::Intent ^ intent, Android::OS::UserHandle ^ stoppedUser);" />
      <MemberSignature Language="C#" Value="public virtual void OnUserStopped (Android.Content.Context context, Android.Content.Intent intent, Android.OS.UserHandle stoppedUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUserStopped(class Android.Content.Context context, class Android.Content.Intent intent, class Android.OS.UserHandle stoppedUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnUserStopped(Android.Content.Context,Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member OnUserStopped : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit&#xA;override this.OnUserStopped : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="deviceAdminReceiver.OnUserStopped (context, intent, stoppedUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUserStopped", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnUserStopped_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUserStopped", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnUserStopped_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="stoppedUser" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="stoppedUser">The <c>UserHandle</c> of the user that has just been stopped.</param>
        <summary>Called when a user or profile is stopped.</summary>
        <remarks>
          <para>Called when a user or profile is stopped.</para>
          <para>This callback is only applicable to device owners.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onUserStopped(android.content.Context,%20android.content.Intent,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onUserStopped(android.content.Context, android.content.Intent, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUserSwitched">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnUserSwitched (context As Context, intent As Intent, switchedUser As UserHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnUserSwitched(Android::Content::Context ^ context, Android::Content::Intent ^ intent, Android::OS::UserHandle ^ switchedUser);" />
      <MemberSignature Language="C#" Value="public virtual void OnUserSwitched (Android.Content.Context context, Android.Content.Intent intent, Android.OS.UserHandle switchedUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnUserSwitched(class Android.Content.Context context, class Android.Content.Intent intent, class Android.OS.UserHandle switchedUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.App.Admin.DeviceAdminReceiver.OnUserSwitched(Android.Content.Context,Android.Content.Intent,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="abstract member OnUserSwitched : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit&#xA;override this.OnUserSwitched : Android.Content.Context * Android.Content.Intent * Android.OS.UserHandle -&gt; unit" Usage="deviceAdminReceiver.OnUserSwitched (context, intent, switchedUser)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUserSwitched", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnUserSwitched_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUserSwitched", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/UserHandle;)V", "GetOnUserSwitched_Landroid_content_Context_Landroid_content_Intent_Landroid_os_UserHandle_Handler", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="switchedUser" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="context">The running context as per <c>#onReceive</c>.</param>
        <param name="intent">The received intent as per <c>#onReceive</c>.</param>
        <param name="switchedUser">The <c>UserHandle</c> of the user that has just been switched to.</param>
        <summary>Called when a user or profile is switched to.</summary>
        <remarks>
          <para>Called when a user or profile is switched to.</para>
          <para>This callback is only applicable to device owners.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/app/admin/DeviceAdminReceiver#onUserSwitched(android.content.Context,%20android.content.Intent,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.app.admin.DeviceAdminReceiver.onUserSwitched(android.content.Context, android.content.Intent, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DeviceAdminReceiver.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.App.Admin.DeviceAdminReceiver.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.App.Admin.DeviceAdminReceiver.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.App.Admin.DeviceAdminReceiver.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
