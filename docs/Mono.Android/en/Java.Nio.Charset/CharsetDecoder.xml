<Type Name="CharsetDecoder" FullName="Java.Nio.Charset.CharsetDecoder">
  <TypeSignature Language="C#" Value="public abstract class CharsetDecoder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CharsetDecoder extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/nio/charset/CharsetDecoder", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A converter that can convert a byte sequence from a charset into a 16-bit
 Unicode character sequence.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A converter that can convert a byte sequence from a charset into a 16-bit
 Unicode character sequence.
 </para>
      <para tool="javadoc-to-mdoc">
 The input byte sequence is wrapped by a
 <c><see cref="T:Java.Nio.ByteBuffer" /></c> and the output character sequence is a
 <c><see cref="T:Java.Nio.CharBuffer" /></c>. A decoder instance should be used in
 the following sequence, which is referred to as a decoding operation:
 <list type="number"><item><term>invoking the <c><see cref="M:Java.Nio.Charset.CharsetDecoder.Reset" /></c> method to reset the decoder if the
 decoder has been used;</term></item><item><term>invoking the <c><see cref="M:Java.Nio.Charset.CharsetDecoder.Decode(Java.Nio.ByteBuffer,Java.Nio.CharBuffer,Java.Nio.CharBuffer)" /></c>
 method until the additional input is not needed, the <c>endOfInput</c>
 parameter must be set to false, the input buffer must be filled and the
 output buffer must be flushed between invocations;</term></item><item><term>invoking the <c><see cref="M:Java.Nio.Charset.CharsetDecoder.Decode(Java.Nio.ByteBuffer,Java.Nio.CharBuffer,Java.Nio.CharBuffer)" /></c>
 method for the last time, and then the <c>endOfInput</c> parameter
 must be set to true;</term></item><item><term>invoking the <c><see cref="M:Java.Nio.Charset.CharsetDecoder.Flush(Java.Nio.CharBuffer)" /></c> method to flush the
 output.</term></item></list></para>
      <para tool="javadoc-to-mdoc">
 The <c><see cref="M:Java.Nio.Charset.CharsetDecoder.Decode(Java.Nio.ByteBuffer,Java.Nio.CharBuffer,Java.Nio.CharBuffer)" /></c> method will
 convert as many bytes as possible, and the process won't stop until the input
 bytes have run out, the output buffer has been filled or some error has
 happened. A <c><see cref="T:Java.Nio.Charset.CoderResult" /></c> instance will be returned to
 indicate the stop reason, and the invoker can identify the result and choose
 further action, which includes filling the input buffer, flushing the output
 buffer or recovering from an error and trying again.
 </para>
      <para tool="javadoc-to-mdoc">
 There are two common decoding errors. One is named malformed and it is
 returned when the input byte sequence is illegal for the current specific
 charset, the other is named unmappable character and it is returned when a
 problem occurs mapping a legal input byte sequence to its Unicode character
 equivalent.
 </para>
      <para tool="javadoc-to-mdoc">
 Both errors can be handled in three ways, the default one is to report the
 error to the invoker by a <c><see cref="T:Java.Nio.Charset.CoderResult" /></c> instance, and the
 alternatives are to ignore it or to replace the erroneous input with the
 replacement string. The replacement string is "�" by default and can be
 changed by invoking <c><see cref="M:Java.Nio.Charset.CharsetDecoder.ReplaceWith(System.String)" /></c> method. The
 invoker of this decoder can choose one way by specifying a
 <c><see cref="T:Java.Nio.Charset.CodingErrorAction" /></c> instance for each error type via
 <c><see cref="M:Java.Nio.Charset.CharsetDecoder.OnMalformedInput(Java.Nio.Charset.CodingErrorAction)" /></c> method and
 <c><see cref="M:Java.Nio.Charset.CharsetDecoder.OnUnmappableCharacter(Java.Nio.Charset.CodingErrorAction)" /></c>
 method.
 </para>
      <para tool="javadoc-to-mdoc">
 This is an abstract class and encapsulates many common operations of the
 decoding process for all charsets. Decoders for a specific charset should
 extend this class and need only to implement the
 <c><see cref="M:Java.Nio.Charset.CharsetDecoder.DecodeLoop(Java.Nio.ByteBuffer,Java.Nio.CharBuffer)" /></c> method for the basic
 decoding. If a subclass maintains an internal state, it should override the
 <c><see cref="M:Java.Nio.Charset.CharsetDecoder.ImplFlush(Java.Nio.CharBuffer)" /></c> method and the
 <c><see cref="M:Java.Nio.Charset.CharsetDecoder.ImplReset" /></c> method in addition.
 </para>
      <para tool="javadoc-to-mdoc">
 This class is not thread-safe.<format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Java.Nio.Charset.Charset" /></c></term></item><item><term><c><see cref="T:Java.Nio.Charset.CharsetEncoder" /></c></term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CharsetDecoder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CharsetDecoder (Java.Nio.Charset.Charset charset, float averageCharsPerByte, float maxCharsPerByte);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Nio.Charset.Charset charset, float32 averageCharsPerByte, float32 maxCharsPerByte) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/nio/charset/Charset;FF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="charset" Type="Java.Nio.Charset.Charset" />
        <Parameter Name="averageCharsPerByte" Type="System.Single" />
        <Parameter Name="maxCharsPerByte" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="charset">To be added.</param>
        <param name="averageCharsPerByte">To be added.</param>
        <param name="maxCharsPerByte">To be added.</param>
        <summary>Constructs a new <c>CharsetDecoder</c> using the given
 <c>Charset</c>, average number and maximum number of characters
 created by this decoder for one input byte, and the default replacement
 string "�".</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>CharsetDecoder</c> using the given
 <c>Charset</c>, average number and maximum number of characters
 created by this decoder for one input byte, and the default replacement
 string "�".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#CharsetDecoder(java.nio.charset.Charset, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>averageCharsPerByte &lt;= 0 || maxCharsPerByte &lt;= 0 || averageCharsPerByte &gt; maxCharsPerByte</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AverageCharsPerByte">
      <MemberSignature Language="C#" Value="public float AverageCharsPerByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 AverageCharsPerByte() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("averageCharsPerByte", "()F", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the average number of characters created by this decoder for a
 single input byte.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the average number of characters created by this decoder for a
 single input byte.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#averageCharsPerByte()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Charset">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.Charset Charset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.Charset Charset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("charset", "()Ljava/nio/charset/Charset;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.Charset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <c><see cref="T:Java.Nio.Charset.Charset" /></c> which this decoder uses.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the <c><see cref="T:Java.Nio.Charset.Charset" /></c> which this decoder uses.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#charset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public Java.Nio.CharBuffer Decode (Java.Nio.ByteBuffer in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.CharBuffer Decode(class Java.Nio.ByteBuffer in) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("decode", "(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="in">the input buffer.</param>
        <summary>This is a facade method for the decoding operation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This is a facade method for the decoding operation.
 </para>
          <para tool="javadoc-to-mdoc">
 This method decodes the remaining byte sequence of the given byte buffer
 into a new character buffer. This method performs a complete decoding
 operation, resets at first, then decodes, and flushes at last.
 </para>
          <para tool="javadoc-to-mdoc">
 This method should not be invoked while another <c>decode</c> operation
 is ongoing.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#decode(java.nio.ByteBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if another decoding operation is ongoing.</exception>
        <exception cref="T:Java.Nio.Charset.MalformedInputException">if an illegal input byte sequence for this charset was
             encountered, and the action for malformed error is
             <c><see cref="P:Java.Nio.Charset.CodingErrorAction.Report" /></c></exception>
        <exception cref="T:Java.Nio.Charset.UnmappableCharacterException">if a legal but unmappable input byte sequence for this
             charset was encountered, and the action for unmappable
             character error is
             <c><see cref="P:Java.Nio.Charset.CodingErrorAction.Report" /></c>.
             Unmappable means the byte sequence at the input buffer's
             current position cannot be mapped to a Unicode character
             sequence.</exception>
        <exception cref="T:Java.Nio.Charset.CharacterCodingException">if another exception happened during the decode operation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CoderResult Decode (Java.Nio.ByteBuffer in, Java.Nio.CharBuffer out, bool endOfInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CoderResult Decode(class Java.Nio.ByteBuffer in, class Java.Nio.CharBuffer out, bool endOfInput) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("decode", "(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CoderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="out" Type="Java.Nio.CharBuffer" />
        <Parameter Name="endOfInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="in">the input buffer.</param>
        <param name="out">the output buffer.</param>
        <param name="endOfInput">true if all the input characters have been provided.</param>
        <summary>Decodes bytes starting at the current position of the given input buffer,
 and writes the equivalent character sequence into the given output buffer
 from its current position.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Decodes bytes starting at the current position of the given input buffer,
 and writes the equivalent character sequence into the given output buffer
 from its current position.
 </para>
          <para tool="javadoc-to-mdoc">
 The buffers' position will be changed with the reading and writing
 operation, but their limits and marks will be kept intact.
 </para>
          <para tool="javadoc-to-mdoc">
 A <c>CoderResult</c> instance will be returned according to
 following rules:
 <list type="bullet"><item><term><c><see cref="P:Java.Nio.Charset.CoderResult.Overflow" /></c> indicates that
 even though not all of the input has been processed, the buffer the
 output is being written to has reached its capacity. In the event of this
 code being returned this method should be called once more with an
 <c>out</c> argument that has not already been filled.</term></item><item><term><c><see cref="P:Java.Nio.Charset.CoderResult.Underflow" /></c> indicates that
 as many bytes as possible in the input buffer have been decoded. If there
 is no further input and no remaining bytes in the input buffer then this
 operation may be regarded as complete. Otherwise, this method should be
 called once more with additional input.</term></item><item><term>A <c><see cref="M:Java.Nio.Charset.CoderResult.MalformedForLength(System.Int32)" /></c> result
 indicates that some malformed input error has been encountered, and the
 erroneous bytes start at the input buffer's position and their number can
 be got by result's <c><see cref="M:Java.Nio.Charset.CoderResult.Length" /></c>. This kind of
 result can be returned only if the malformed action is
 <c><see cref="P:Java.Nio.Charset.CodingErrorAction.Report" /></c>. </term></item><item><term>A <c><see cref="M:Java.Nio.Charset.CoderResult.UnmappableForLength(System.Int32)" /></c>
 result indicates that some unmappable character error has been
 encountered, and the erroneous bytes start at the input buffer's position
 and their number can be got by result's
 <c><see cref="M:Java.Nio.Charset.CoderResult.Length" /></c>. This kind of result can be returned
 only if the unmappable character action is
 <c><see cref="P:Java.Nio.Charset.CodingErrorAction.Report" /></c>. </term></item></list></para>
          <para tool="javadoc-to-mdoc">
 The <c>endOfInput</c> parameter indicates that the invoker cannot
 provide further input. This parameter is true if and only if the bytes in
 current input buffer are all inputs for this decoding operation. Note
 that it is common and won't cause an error if the invoker sets false and
 then can't provide more input, while it may cause an error if the invoker
 always sets true in several consecutive invocations. This would make the
 remaining input to be treated as malformed input.
 </para>
          <para tool="javadoc-to-mdoc">
 This method invokes the
 <c><see cref="M:Java.Nio.Charset.CharsetDecoder.DecodeLoop(Java.Nio.ByteBuffer,Java.Nio.CharBuffer)" /></c> method to
 implement the basic decode logic for a specific charset.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#decode(java.nio.ByteBuffer, java.nio.CharBuffer, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if decoding has started or no more input is needed in this
             decoding progress.</exception>
        <exception cref="T:Java.Nio.Charset.CoderMalfunctionError">if the <c><see cref="M:Java.Nio.Charset.CharsetDecoder.DecodeLoop(Java.Nio.ByteBuffer,Java.Nio.CharBuffer)" /></c>
             method threw an <c>BufferUnderflowException</c> or
             <c>BufferOverflowException</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DecodeLoop">
      <MemberSignature Language="C#" Value="protected abstract Java.Nio.Charset.CoderResult DecodeLoop (Java.Nio.ByteBuffer in, Java.Nio.CharBuffer out);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Nio.Charset.CoderResult DecodeLoop(class Java.Nio.ByteBuffer in, class Java.Nio.CharBuffer out) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("decodeLoop", "(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;", "GetDecodeLoop_Ljava_nio_ByteBuffer_Ljava_nio_CharBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CoderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="out" Type="Java.Nio.CharBuffer" />
      </Parameters>
      <Docs>
        <param name="in">the input buffer.</param>
        <param name="out">the output buffer.</param>
        <summary>Decodes bytes into characters.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Decodes bytes into characters. This method is called by the
 <c><see cref="M:Java.Nio.Charset.CharsetDecoder.Decode(Java.Nio.ByteBuffer,Java.Nio.CharBuffer,Java.Nio.CharBuffer)" /></c> method.
 </para>
          <para tool="javadoc-to-mdoc">
 This method will implement the essential decoding operation, and it won't
 stop decoding until either all the input bytes are read, the output
 buffer is filled, or some exception is encountered. Then it will return a
 <c>CoderResult</c> object indicating the result of current
 decoding operation. The rules to construct the <c>CoderResult</c>
 are the same as for
 <c><see cref="M:Java.Nio.Charset.CharsetDecoder.Decode(Java.Nio.ByteBuffer,Java.Nio.CharBuffer,Java.Nio.CharBuffer)" /></c>. When an
 exception is encountered in the decoding operation, most implementations
 of this method will return a relevant result object to the
 <c><see cref="M:Java.Nio.Charset.CharsetDecoder.Decode(Java.Nio.ByteBuffer,Java.Nio.CharBuffer,Java.Nio.CharBuffer)" /></c> method, and some
 performance optimized implementation may handle the exception and
 implement the error action itself.
 </para>
          <para tool="javadoc-to-mdoc">
 The buffers are scanned from their current positions, and their positions
 will be modified accordingly, while their marks and limits will be
 intact. At most <c><see cref="M:Java.Nio.Buffer.Remaining" /></c> characters
 will be read, and <c><see cref="M:Java.Nio.Buffer.Remaining" /></c> bytes
 will be written.
 </para>
          <para tool="javadoc-to-mdoc">
 Note that some implementations may pre-scan the input buffer and return a
 <c>CoderResult.UNDERFLOW</c> until it receives sufficient input.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DetectedCharset">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Charset.Charset DetectedCharset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Charset.Charset DetectedCharset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("detectedCharset", "()Ljava/nio/charset/Charset;", "GetDetectedCharsetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.Charset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gets the charset detected by this decoder; this method is optional.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets the charset detected by this decoder; this method is optional.
 </para>
          <para tool="javadoc-to-mdoc">
 If implementing an auto-detecting charset, then this decoder returns the
 detected charset from this method when it is available. The returned
 charset will be the same for the rest of the decode operation.
 </para>
          <para tool="javadoc-to-mdoc">
 If insufficient bytes have been read to determine the charset, an
 <c>IllegalStateException</c> will be thrown.
 </para>
          <para tool="javadoc-to-mdoc">
 The default implementation always throws
 <c>UnsupportedOperationException</c>, so it should be overridden
 by a subclass if needed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#detectedCharset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">if this decoder does not implement an auto-detecting charset.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if insufficient bytes have been read to determine the
             charset.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CoderResult Flush (Java.Nio.CharBuffer out);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CoderResult Flush(class Java.Nio.CharBuffer out) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flush", "(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CoderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Java.Nio.CharBuffer" />
      </Parameters>
      <Docs>
        <param name="out">the given output buffer.</param>
        <summary>Flushes this decoder.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Flushes this decoder.

 This method will call <c><see cref="M:Java.Nio.Charset.CharsetDecoder.ImplFlush(Java.Nio.CharBuffer)" /></c>. Some
 decoders may need to write some characters to the output buffer when they
 have read all input bytes; subclasses can override
 <c><see cref="M:Java.Nio.Charset.CharsetDecoder.ImplFlush(Java.Nio.CharBuffer)" /></c> to perform the writing operation.
 </para>
          <para tool="javadoc-to-mdoc">
 The maximum number of written bytes won't be larger than
 <c><see cref="M:Java.Nio.Buffer.Remaining" /></c>. If some decoder wants to
 write more bytes than an output buffer's remaining space allows, then a
 <c>CoderResult.OVERFLOW</c> will be returned, and this method
 must be called again with a character buffer that has more remaining
 space. Otherwise this method will return
 <c>CoderResult.UNDERFLOW</c>, which means one decoding process
 has been completed successfully.
 </para>
          <para tool="javadoc-to-mdoc">
 During the flush, the output buffer's position will be changed
 accordingly, while its mark and limit will be intact.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#flush(java.nio.CharBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this decoder isn't already flushed or at end of input.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImplFlush">
      <MemberSignature Language="C#" Value="protected virtual Java.Nio.Charset.CoderResult ImplFlush (Java.Nio.CharBuffer out);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Nio.Charset.CoderResult ImplFlush(class Java.Nio.CharBuffer out) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implFlush", "(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;", "GetImplFlush_Ljava_nio_CharBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CoderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Java.Nio.CharBuffer" />
      </Parameters>
      <Docs>
        <param name="out">the output buffer.</param>
        <summary>Flushes this decoder.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Flushes this decoder. The default implementation does nothing and always
 returns <c>CoderResult.UNDERFLOW</c>; this method can be
 overridden if needed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#implFlush(java.nio.CharBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ImplOnMalformedInput">
      <MemberSignature Language="C#" Value="protected virtual void ImplOnMalformedInput (Java.Nio.Charset.CodingErrorAction newAction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplOnMalformedInput(class Java.Nio.Charset.CodingErrorAction newAction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implOnMalformedInput", "(Ljava/nio/charset/CodingErrorAction;)V", "GetImplOnMalformedInput_Ljava_nio_charset_CodingErrorAction_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAction" Type="Java.Nio.Charset.CodingErrorAction" />
      </Parameters>
      <Docs>
        <param name="newAction">the new action.
</param>
        <summary>Notifies that this decoder's <c>CodingErrorAction</c> specified
 for malformed input error has been changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Notifies that this decoder's <c>CodingErrorAction</c> specified
 for malformed input error has been changed. The default implementation
 does nothing; this method can be overridden if needed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#implOnMalformedInput(java.nio.charset.CodingErrorAction)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ImplOnUnmappableCharacter">
      <MemberSignature Language="C#" Value="protected virtual void ImplOnUnmappableCharacter (Java.Nio.Charset.CodingErrorAction newAction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplOnUnmappableCharacter(class Java.Nio.Charset.CodingErrorAction newAction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implOnUnmappableCharacter", "(Ljava/nio/charset/CodingErrorAction;)V", "GetImplOnUnmappableCharacter_Ljava_nio_charset_CodingErrorAction_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAction" Type="Java.Nio.Charset.CodingErrorAction" />
      </Parameters>
      <Docs>
        <param name="newAction">the new action.
</param>
        <summary>Notifies that this decoder's <c>CodingErrorAction</c> specified
 for unmappable character error has been changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Notifies that this decoder's <c>CodingErrorAction</c> specified
 for unmappable character error has been changed. The default
 implementation does nothing; this method can be overridden if needed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ImplReplaceWith">
      <MemberSignature Language="C#" Value="protected virtual void ImplReplaceWith (string newReplacement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplReplaceWith(string newReplacement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implReplaceWith", "(Ljava/lang/String;)V", "GetImplReplaceWith_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newReplacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newReplacement">the new replacement string.
</param>
        <summary>Notifies that this decoder's replacement has been changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Notifies that this decoder's replacement has been changed. The default
 implementation does nothing; this method can be overridden if needed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#implReplaceWith(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ImplReset">
      <MemberSignature Language="C#" Value="protected virtual void ImplReset ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplReset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implReset", "()V", "GetImplResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reset this decoder's charset related state.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Reset this decoder's charset related state. The default implementation
 does nothing; this method can be overridden if needed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#implReset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsAutoDetecting">
      <MemberSignature Language="C#" Value="public virtual bool IsAutoDetecting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutoDetecting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isAutoDetecting", "()Z", "GetIsAutoDetectingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this decoder implements an auto-detecting charset.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether this decoder implements an auto-detecting charset.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#isAutoDetecting()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsCharsetDetected">
      <MemberSignature Language="C#" Value="public virtual bool IsCharsetDetected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCharsetDetected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isCharsetDetected", "()Z", "GetIsCharsetDetectedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether this decoder has detected a charset; this method is
 optional.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates whether this decoder has detected a charset; this method is
 optional.
 </para>
          <para tool="javadoc-to-mdoc">
 If this decoder implements an auto-detecting charset, then this method
 may start to return true during decoding operation to indicate that a
 charset has been detected in the input bytes and that the charset can be
 retrieved by invoking the <c><see cref="M:Java.Nio.Charset.CharsetDecoder.DetectedCharset" /></c>
 method.
 </para>
          <para tool="javadoc-to-mdoc">
 Note that a decoder that implements an auto-detecting charset may still
 succeed in decoding a portion of the given input even when it is unable
 to detect the charset. For this reason users should be aware that a
 <c>false</c> return value does not indicate that no decoding took
 place.
 </para>
          <para tool="javadoc-to-mdoc">
 The default implementation always throws an
 <c>UnsupportedOperationException</c>; it should be overridden by
 a subclass if needed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#isCharsetDetected()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">if this decoder doesn't implement an auto-detecting charset.
</exception>
      </Docs>
    </Member>
    <Member MemberName="MalformedInputAction">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Charset.CodingErrorAction MalformedInputAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Charset.CodingErrorAction MalformedInputAction() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("malformedInputAction", "()Ljava/nio/charset/CodingErrorAction;", "GetMalformedInputActionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CodingErrorAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this decoder's <c>CodingErrorAction</c> when malformed input
 occurred during the decoding process.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this decoder's <c>CodingErrorAction</c> when malformed input
 occurred during the decoding process.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#malformedInputAction()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxCharsPerByte">
      <MemberSignature Language="C#" Value="public float MaxCharsPerByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 MaxCharsPerByte() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("maxCharsPerByte", "()F", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the maximum number of characters which can be created by this
 decoder for one input byte, must be positive.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the maximum number of characters which can be created by this
 decoder for one input byte, must be positive.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#maxCharsPerByte()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnMalformedInput">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CharsetDecoder OnMalformedInput (Java.Nio.Charset.CodingErrorAction newAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CharsetDecoder OnMalformedInput(class Java.Nio.Charset.CodingErrorAction newAction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onMalformedInput", "(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAction" Type="Java.Nio.Charset.CodingErrorAction" />
      </Parameters>
      <Docs>
        <param name="newAction">the new action on malformed input error.</param>
        <summary>Sets this decoder's action on malformed input errors.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets this decoder's action on malformed input errors.

 This method will call the
 <c><see cref="M:Java.Nio.Charset.CharsetDecoder.ImplOnMalformedInput(Java.Nio.Charset.CodingErrorAction)" /></c>
 method with the given new action as argument.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#onMalformedInput(java.nio.charset.CodingErrorAction)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>newAction == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OnUnmappableCharacter">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CharsetDecoder OnUnmappableCharacter (Java.Nio.Charset.CodingErrorAction newAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CharsetDecoder OnUnmappableCharacter(class Java.Nio.Charset.CodingErrorAction newAction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onUnmappableCharacter", "(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAction" Type="Java.Nio.Charset.CodingErrorAction" />
      </Parameters>
      <Docs>
        <param name="newAction">the new action on unmappable character error.</param>
        <summary>Sets this decoder's action on unmappable character errors.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets this decoder's action on unmappable character errors.

 This method will call the
 <c><see cref="M:Java.Nio.Charset.CharsetDecoder.ImplOnUnmappableCharacter(Java.Nio.Charset.CodingErrorAction)" /></c>
 method with the given new action as argument.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#onUnmappableCharacter(java.nio.charset.CodingErrorAction)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>newAction == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Replacement">
      <MemberSignature Language="C#" Value="public string Replacement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replacement() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("replacement", "()Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the replacement string, which is never null or empty.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the replacement string, which is never null or empty.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#replacement()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReplaceWith">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CharsetDecoder ReplaceWith (string replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CharsetDecoder ReplaceWith(string replacement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("replaceWith", "(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newReplacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="replacement">the replacement string cannot be null, empty, or longer
            than <c><see cref="M:Java.Nio.Charset.CharsetDecoder.MaxCharsPerByte" /></c>.</param>
        <summary>Sets the new replacement string.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the new replacement string.

 This method first checks the given replacement's validity, then changes
 the replacement value, and at last calls the
 <c><see cref="M:Java.Nio.Charset.CharsetDecoder.ImplReplaceWith(System.String)" /></c> method with the given
 new replacement as argument.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#replaceWith(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given replacement cannot satisfy the requirement
             mentioned above.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CharsetDecoder Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CharsetDecoder Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()Ljava/nio/charset/CharsetDecoder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetDecoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets this decoder.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Resets this decoder. This method will reset the internal state, and then
 calls <c><see cref="M:Java.Nio.Charset.CharsetDecoder.ImplReset" /></c> to reset any state related to the
 specific charset.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#reset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnmappableCharacterAction">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Charset.CodingErrorAction UnmappableCharacterAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Charset.CodingErrorAction UnmappableCharacterAction() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unmappableCharacterAction", "()Ljava/nio/charset/CodingErrorAction;", "GetUnmappableCharacterActionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CodingErrorAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this decoder's <c>CodingErrorAction</c> when an unmappable
 character error occurred during the decoding process.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this decoder's <c>CodingErrorAction</c> when an unmappable
 character error occurred during the decoding process.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetDecoder.html#unmappableCharacterAction()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
