<Type Name="CharsetDecoder" FullName="Java.Nio.Charset.CharsetDecoder">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CharsetDecoder&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class CharsetDecoder abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class CharsetDecoder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CharsetDecoder extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Charset.CharsetDecoder" />
  <TypeSignature Language="F#" Value="type CharsetDecoder = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/charset/CharsetDecoder", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/charset/CharsetDecoder", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>An engine that can transform a sequence of bytes in a specific charset into a sequence of
            sixteen-bit Unicode characters.</summary>
    <remarks>
      <para>An engine that can transform a sequence of bytes in a specific charset into a sequence of
            sixteen-bit Unicode characters.
            
            "steps"&gt;</para>
      <para>The input byte sequence is provided in a byte buffer or a series
            of such buffers.  The output character sequence is written to a character buffer
            or a series of such buffers.  A decoder should always be used by making
            the following sequence of method invocations, hereinafter referred to as a
            <i>decoding operation</i>:
            
            &lt;ol&gt;
            
              &lt;li&gt;</para>
      <para>Reset the decoder via the <c>#reset reset</c> method, unless it
              has not been used before;</para>
      <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
      <para>Invoke the <c>#decode decode</c> method zero or more times, as
              long as additional input may be available, passing <c>false</c> for the
              <c>endOfInput</c> argument and filling the input buffer and flushing the
              output buffer between invocations;</para>
      <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
      <para>Invoke the <c>#decode decode</c> method one final time, passing
              <c>true</c> for the <c>endOfInput</c> argument; and then</para>
      <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
      <para>Invoke the <c>#flush flush</c> method so that the decoder can
              flush any internal state to the output buffer.</para>
      <para>&lt;/li&gt;
            
            &lt;/ol&gt;
            
            Each invocation of the <c>#decode decode</c> method will decode as many
            bytes as possible from the input buffer, writing the resulting characters
            to the output buffer.  The <c>#decode decode</c> method returns when more
            input is required, when there is not enough room in the output buffer, or
            when a decoding error has occurred.  In each case a <c>CoderResult</c>
            object is returned to describe the reason for termination.  An invoker can
            examine this object and fill the input buffer, flush the output buffer, or
            attempt to recover from a decoding error, as appropriate, and try again.
            
            "ce"&gt;</para>
      <para>There are two general types of decoding errors.  If the input byte
            sequence is not legal for this charset then the input is considered <i>malformed</i>.  If
            the input byte sequence is legal but cannot be mapped to a valid
            Unicode character then an <i>unmappable character</i> has been encountered.
            
            "cae"&gt;</para>
      <para>How a decoding error is handled depends upon the action requested for
            that type of error, which is described by an instance of the <c>CodingErrorAction</c> class.  The possible error actions are to CodingErrorAction#IGNORE ignore the erroneous input, CodingErrorAction#REPORT report the error to the invoker via
            the returned <c>CoderResult</c> object, or CodingErrorAction#REPLACE
            replace the erroneous input with the current value of the
            replacement string.  The replacement
            
            
            
            
            
            
            has the initial value <c>"&amp;#92;uFFFD"</c>;
            
            
            its value may be changed via the <c>#replaceWith(java.lang.String)
            replaceWith</c> method.</para>
      <para>The default action for malformed-input and unmappable-character errors
            is to CodingErrorAction#REPORT report them.  The
            malformed-input error action may be changed via the <c>#onMalformedInput(CodingErrorAction) onMalformedInput</c> method; the
            unmappable-character action may be changed via the <c>#onUnmappableCharacter(CodingErrorAction) onUnmappableCharacter</c> method.</para>
      <para>This class is designed to handle many of the details of the decoding
            process, including the implementation of error actions.  A decoder for a
            specific charset, which is a concrete subclass of this class, need only
            implement the abstract <c>#decodeLoop decodeLoop</c> method, which
            encapsulates the basic decoding loop.  A subclass that maintains internal
            state should, additionally, override the <c>#implFlush implFlush</c> and
            <c>#implReset implReset</c> methods.</para>
      <para>Instances of this class are not safe for use by multiple concurrent
            threads.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CharsetDecoder(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected CharsetDecoder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Charset.CharsetDecoder : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.Charset.CharsetDecoder" Usage="new Java.Nio.Charset.CharsetDecoder (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (cs As Charset, averageCharsPerByte As Single, maxCharsPerByte As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CharsetDecoder(Java::Nio::Charset::Charset ^ cs, float averageCharsPerByte, float maxCharsPerByte);" />
      <MemberSignature Language="C#" Value="protected CharsetDecoder (Java.Nio.Charset.Charset? cs, float averageCharsPerByte, float maxCharsPerByte);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Nio.Charset.Charset cs, float32 averageCharsPerByte, float32 maxCharsPerByte) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.#ctor(Java.Nio.Charset.Charset,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Charset.CharsetDecoder : Java.Nio.Charset.Charset * single * single -&gt; Java.Nio.Charset.CharsetDecoder" Usage="new Java.Nio.Charset.CharsetDecoder (cs, averageCharsPerByte, maxCharsPerByte)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/nio/charset/Charset;FF)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/nio/charset/Charset;FF)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="cs" Type="Java.Nio.Charset.Charset" />
        <Parameter Name="averageCharsPerByte" Type="System.Single" />
        <Parameter Name="maxCharsPerByte" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="cs">The charset that created this decoder</param>
        <param name="averageCharsPerByte">A positive float value indicating the expected number of
                    characters that will be produced for each input byte</param>
        <param name="maxCharsPerByte">A positive float value indicating the maximum number of
                    characters that will be produced for each input byte</param>
        <summary>Initializes a new decoder.</summary>
        <remarks>
          <para>Initializes a new decoder.  The new decoder will have the given
            chars-per-byte values and its replacement will be the
            string <c>"&amp;#92;uFFFD"</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#CharsetDecoder(java.nio.charset.Charset,%20float,%20float)" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.CharsetDecoder(java.nio.charset.Charset, float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>averageCharsPerByte &lt;= 0 || maxCharsPerByte &lt;= 0 || averageCharsPerByte &gt; maxCharsPerByte</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AverageCharsPerByte">
      <MemberSignature Language="VB.NET" Value="Public Function AverageCharsPerByte () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float AverageCharsPerByte();" />
      <MemberSignature Language="C#" Value="public float AverageCharsPerByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 AverageCharsPerByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.AverageCharsPerByte" />
      <MemberSignature Language="F#" Value="member this.AverageCharsPerByte : unit -&gt; single" Usage="charsetDecoder.AverageCharsPerByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("averageCharsPerByte", "()F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("averageCharsPerByte", "()F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the average number of characters that will be produced for each
            byte of input.</summary>
        <returns>The average number of characters produced
                     per byte of input</returns>
        <remarks>
          <para>Returns the average number of characters that will be produced for each
            byte of input.  This heuristic value may be used to estimate the size
            of the output buffer required for a given input sequence.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#averageCharsPerByte()" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.averageCharsPerByte()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Charset">
      <MemberSignature Language="VB.NET" Value="Public Function Charset () As Charset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::Charset::Charset ^ Charset();" />
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.Charset? Charset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.Charset Charset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.Charset" />
      <MemberSignature Language="F#" Value="member this.Charset : unit -&gt; Java.Nio.Charset.Charset" Usage="charsetDecoder.Charset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("charset", "()Ljava/nio/charset/Charset;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("charset", "()Ljava/nio/charset/Charset;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.Charset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the charset that created this decoder.</summary>
        <returns>This decoder's charset</returns>
        <remarks>
          <para>Returns the charset that created this decoder.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#charset()" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.charset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="VB.NET" Value="Public Function Decode (in As ByteBuffer) As CharBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::CharBuffer ^ Decode(Java::Nio::ByteBuffer ^ in);" />
      <MemberSignature Language="C#" Value="public Java.Nio.CharBuffer? Decode (Java.Nio.ByteBuffer? in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.CharBuffer Decode(class Java.Nio.ByteBuffer in) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.Decode(Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="member this.Decode : Java.Nio.ByteBuffer -&gt; Java.Nio.CharBuffer" Usage="charsetDecoder.Decode in" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decode", "(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decode", "(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="in">The input byte buffer</param>
        <summary>Convenience method that decodes the remaining content of a single input
            byte buffer into a newly-allocated character buffer.</summary>
        <returns>A newly-allocated character buffer containing the result of the
                    decoding operation.  The buffer's position will be zero and its
                    limit will follow the last character written.</returns>
        <remarks>
          <para>Convenience method that decodes the remaining content of a single input
            byte buffer into a newly-allocated character buffer.</para>
          <para>This method implements an entire decoding
            operation; that is, it resets this decoder, then it decodes the
            bytes in the given byte buffer, and finally it flushes this
            decoder.  This method should therefore not be invoked if a decoding
            operation is already in progress.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#decode(java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if another decoding operation is ongoing.</exception>
        <exception cref="T:Java.Nio.Charset.MalformedInputException">if an illegal input byte sequence for this charset was
             encountered, and the action for malformed error is
             <see cref="P:Java.Nio.Charset.CodingErrorAction.Report" /></exception>
        <exception cref="T:Java.Nio.Charset.UnmappableCharacterException">if a legal but unmappable input byte sequence for this
             charset was encountered, and the action for unmappable
             character error is
             <see cref="P:Java.Nio.Charset.CodingErrorAction.Report" />.
             Unmappable means the byte sequence at the input buffer's
             current position cannot be mapped to a Unicode character
             sequence.</exception>
        <exception cref="T:Java.Nio.Charset.CharacterCodingException">if another exception happened during the decode operation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="VB.NET" Value="Public Function Decode (in As ByteBuffer, out As CharBuffer, endOfInput As Boolean) As CoderResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::Charset::CoderResult ^ Decode(Java::Nio::ByteBuffer ^ in, Java::Nio::CharBuffer ^ out, bool endOfInput);" />
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CoderResult? Decode (Java.Nio.ByteBuffer? in, Java.Nio.CharBuffer? out, bool endOfInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CoderResult Decode(class Java.Nio.ByteBuffer in, class Java.Nio.CharBuffer out, bool endOfInput) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.Decode(Java.Nio.ByteBuffer,Java.Nio.CharBuffer,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.Decode : Java.Nio.ByteBuffer * Java.Nio.CharBuffer * bool -&gt; Java.Nio.Charset.CoderResult" Usage="charsetDecoder.Decode (in, out, endOfInput)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decode", "(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decode", "(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;Z)Ljava/nio/charset/CoderResult;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CoderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="out" Type="Java.Nio.CharBuffer" />
        <Parameter Name="endOfInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="in">The input byte buffer</param>
        <param name="out">The output character buffer</param>
        <param name="endOfInput">
          <c>true</c> if, and only if, the invoker can provide no
                    additional input bytes beyond those in the given buffer</param>
        <summary>Decodes as many bytes as possible from the given input buffer,
            writing the results to the given output buffer.</summary>
        <returns>A coder-result object describing the reason for termination</returns>
        <remarks>
          <para>Decodes as many bytes as possible from the given input buffer,
            writing the results to the given output buffer.</para>
          <para>The buffers are read from, and written to, starting at their current
            positions.  At most <c>Buffer#remaining in.remaining()</c> bytes
            will be read and at most <c>Buffer#remaining out.remaining()</c>
            characters will be written.  The buffers' positions will be advanced to
            reflect the bytes read and the characters written, but their marks and
            limits will not be modified.</para>
          <para>In addition to reading bytes from the input buffer and writing
            characters to the output buffer, this method returns a <c>CoderResult</c>
            object to describe its reason for termination:
            
            &lt;ul&gt;
            
              &lt;li&gt;</para>
          <para>
            <c>CoderResult#UNDERFLOW</c> indicates that as much of the
              input buffer as possible has been decoded.  If there is no further
              input then the invoker can proceed to the next step of the
              decoding operation.  Otherwise this method
              should be invoked again with further input.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>
            <c>CoderResult#OVERFLOW</c> indicates that there is
              insufficient space in the output buffer to decode any more bytes.
              This method should be invoked again with an output buffer that has
              more Buffer#remaining remaining characters. This is
              typically done by draining any decoded characters from the output
              buffer.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>A CoderResult#malformedForLength
              malformed-input result indicates that a malformed-input
              error has been detected.  The malformed bytes begin at the input
              buffer's (possibly incremented) position; the number of malformed
              bytes may be determined by invoking the result object's <c>CoderResult#length() length</c> method.  This case applies only if the
              #onMalformedInput malformed action of this decoder
              is <c>CodingErrorAction#REPORT</c>; otherwise the malformed input
              will be ignored or replaced, as requested.</para>
          <para>&lt;/li&gt;
            
              &lt;li&gt;</para>
          <para>An CoderResult#unmappableForLength
              unmappable-character result indicates that an
              unmappable-character error has been detected.  The bytes that
              decode the unmappable character begin at the input buffer's (possibly
              incremented) position; the number of such bytes may be determined
              by invoking the result object's <c>CoderResult#length() length</c>
              method.  This case applies only if the #onUnmappableCharacter
              unmappable action of this decoder is <c>CodingErrorAction#REPORT</c>; otherwise the unmappable character will be
              ignored or replaced, as requested.</para>
          <para>&lt;/li&gt;
            
            &lt;/ul&gt;
            
            In any case, if this method is to be reinvoked in the same decoding
            operation then care should be taken to preserve any bytes remaining
            in the input buffer so that they are available to the next invocation.</para>
          <para>The <c>endOfInput</c> parameter advises this method as to whether
            the invoker can provide further input beyond that contained in the given
            input buffer.  If there is a possibility of providing additional input
            then the invoker should pass <c>false</c> for this parameter; if there
            is no possibility of providing further input then the invoker should
            pass <c>true</c>.  It is not erroneous, and in fact it is quite
            common, to pass <c>false</c> in one invocation and later discover that
            no further input was actually available.  It is critical, however, that
            the final invocation of this method in a sequence of invocations always
            pass <c>true</c> so that any remaining undecoded input will be treated
            as being malformed.</para>
          <para>This method works by invoking the <c>#decodeLoop decodeLoop</c>
            method, interpreting its results, handling error conditions, and
            reinvoking it as necessary.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#decode(java.nio.ByteBuffer,%20java.nio.CharBuffer,%20boolean)" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.decode(java.nio.ByteBuffer, java.nio.CharBuffer, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if decoding has started or no more input is needed in this
             decoding progress.</exception>
        <exception cref="T:Java.Nio.Charset.CoderMalfunctionError">if the <see cref="M:Java.Nio.Charset.CharsetDecoder.DecodeLoop(Java.Nio.ByteBuffer,Java.Nio.CharBuffer)" />
             method threw an <c>BufferUnderflowException</c> or
             <c>BufferOverflowException</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DecodeLoop">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function DecodeLoop (in As ByteBuffer, out As CharBuffer) As CoderResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Java::Nio::Charset::CoderResult ^ DecodeLoop(Java::Nio::ByteBuffer ^ in, Java::Nio::CharBuffer ^ out);" />
      <MemberSignature Language="C#" Value="protected abstract Java.Nio.Charset.CoderResult? DecodeLoop (Java.Nio.ByteBuffer? in, Java.Nio.CharBuffer? out);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Nio.Charset.CoderResult DecodeLoop(class Java.Nio.ByteBuffer in, class Java.Nio.CharBuffer out) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.DecodeLoop(Java.Nio.ByteBuffer,Java.Nio.CharBuffer)" />
      <MemberSignature Language="F#" Value="abstract member DecodeLoop : Java.Nio.ByteBuffer * Java.Nio.CharBuffer -&gt; Java.Nio.Charset.CoderResult" Usage="charsetDecoder.DecodeLoop (in, out)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decodeLoop", "(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;", "GetDecodeLoop_Ljava_nio_ByteBuffer_Ljava_nio_CharBuffer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decodeLoop", "(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;", "GetDecodeLoop_Ljava_nio_ByteBuffer_Ljava_nio_CharBuffer_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CoderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="out" Type="Java.Nio.CharBuffer" />
      </Parameters>
      <Docs>
        <param name="in">The input byte buffer</param>
        <param name="out">The output character buffer</param>
        <summary>Decodes one or more bytes into one or more characters.</summary>
        <returns>A coder-result object describing the reason for termination</returns>
        <remarks>
          <para>Decodes one or more bytes into one or more characters.</para>
          <para>This method encapsulates the basic decoding loop, decoding as many
            bytes as possible until it either runs out of input, runs out of room
            in the output buffer, or encounters a decoding error.  This method is
            invoked by the <c>#decode decode</c> method, which handles result
            interpretation and error recovery.</para>
          <para>The buffers are read from, and written to, starting at their current
            positions.  At most <c>Buffer#remaining in.remaining()</c> bytes
            will be read, and at most <c>Buffer#remaining out.remaining()</c>
            characters will be written.  The buffers' positions will be advanced to
            reflect the bytes read and the characters written, but their marks and
            limits will not be modified.</para>
          <para>This method returns a <c>CoderResult</c> object to describe its
            reason for termination, in the same manner as the <c>#decode decode</c>
            method.  Most implementations of this method will handle decoding errors
            by returning an appropriate result object for interpretation by the
            <c>#decode decode</c> method.  An optimized implementation may instead
            examine the relevant error action and implement that action itself.</para>
          <para>An implementation of this method may perform arbitrary lookahead by
            returning <c>CoderResult#UNDERFLOW</c> until it receives sufficient
            input.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#decodeLoop(java.nio.ByteBuffer,%20java.nio.CharBuffer)" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.decodeLoop(java.nio.ByteBuffer, java.nio.CharBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DetectedCharset">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DetectedCharset () As Charset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Charset::Charset ^ DetectedCharset();" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Charset.Charset? DetectedCharset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Charset.Charset DetectedCharset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.DetectedCharset" />
      <MemberSignature Language="F#" Value="abstract member DetectedCharset : unit -&gt; Java.Nio.Charset.Charset&#xA;override this.DetectedCharset : unit -&gt; Java.Nio.Charset.Charset" Usage="charsetDecoder.DetectedCharset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("detectedCharset", "()Ljava/nio/charset/Charset;", "GetDetectedCharsetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("detectedCharset", "()Ljava/nio/charset/Charset;", "GetDetectedCharsetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.Charset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retrieves the charset that was detected by this
            decoder&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <returns>The charset detected by this auto-detecting decoder,
                     or <c>null</c> if the charset has not yet been determined</returns>
        <remarks>
          <para>Retrieves the charset that was detected by this
            decoder&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</para>
          <para>If this decoder implements an auto-detecting charset then this
            method returns the actual charset once it has been detected.  After that
            point, this method returns the same value for the duration of the
            current decoding operation.  If not enough input bytes have yet been
            read to determine the actual charset then this method throws an <c>IllegalStateException</c>.</para>
          <para>The default implementation of this method always throws an <c>UnsupportedOperationException</c>; it should be overridden by
            auto-detecting decoders to return the appropriate value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#detectedCharset()" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.detectedCharset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">if this decoder does not implement an auto-detecting charset.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if insufficient bytes have been read to determine the
             charset.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="VB.NET" Value="Public Function Flush (out As CharBuffer) As CoderResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::Charset::CoderResult ^ Flush(Java::Nio::CharBuffer ^ out);" />
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CoderResult? Flush (Java.Nio.CharBuffer? out);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CoderResult Flush(class Java.Nio.CharBuffer out) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.Flush(Java.Nio.CharBuffer)" />
      <MemberSignature Language="F#" Value="member this.Flush : Java.Nio.CharBuffer -&gt; Java.Nio.Charset.CoderResult" Usage="charsetDecoder.Flush out" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flush", "(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("flush", "(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CoderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Java.Nio.CharBuffer" />
      </Parameters>
      <Docs>
        <param name="out">The output character buffer</param>
        <summary>Flushes this decoder.</summary>
        <returns>A coder-result object, either <c>CoderResult#UNDERFLOW</c> or
                     <c>CoderResult#OVERFLOW</c></returns>
        <remarks>
          <para>Flushes this decoder.</para>
          <para>Some decoders maintain internal state and may need to write some
            final characters to the output buffer once the overall input sequence has
            been read.</para>
          <para>Any additional output is written to the output buffer beginning at
            its current position.  At most <c>Buffer#remaining out.remaining()</c>
            characters will be written.  The buffer's position will be advanced
            appropriately, but its mark and limit will not be modified.</para>
          <para>If this method completes successfully then it returns <c>CoderResult#UNDERFLOW</c>.  If there is insufficient room in the output
            buffer then it returns <c>CoderResult#OVERFLOW</c>.  If this happens
            then this method must be invoked again, with an output buffer that has
            more room, in order to complete the current decoding
            operation.</para>
          <para>If this decoder has already been flushed then invoking this method
            has no effect.</para>
          <para>This method invokes the <c>#implFlush implFlush</c> method to
            perform the actual flushing operation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#flush(java.nio.CharBuffer)" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.flush(java.nio.CharBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this decoder isn't already flushed or at end of input.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImplFlush">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ImplFlush (out As CharBuffer) As CoderResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Java::Nio::Charset::CoderResult ^ ImplFlush(Java::Nio::CharBuffer ^ out);" />
      <MemberSignature Language="C#" Value="protected virtual Java.Nio.Charset.CoderResult? ImplFlush (Java.Nio.CharBuffer? out);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Nio.Charset.CoderResult ImplFlush(class Java.Nio.CharBuffer out) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.ImplFlush(Java.Nio.CharBuffer)" />
      <MemberSignature Language="F#" Value="abstract member ImplFlush : Java.Nio.CharBuffer -&gt; Java.Nio.Charset.CoderResult&#xA;override this.ImplFlush : Java.Nio.CharBuffer -&gt; Java.Nio.Charset.CoderResult" Usage="charsetDecoder.ImplFlush out" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("implFlush", "(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;", "GetImplFlush_Ljava_nio_CharBuffer_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("implFlush", "(Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;", "GetImplFlush_Ljava_nio_CharBuffer_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CoderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Java.Nio.CharBuffer" />
      </Parameters>
      <Docs>
        <param name="out">The output character buffer</param>
        <summary>Flushes this decoder.</summary>
        <returns>A coder-result object, either <c>CoderResult#UNDERFLOW</c> or
                     <c>CoderResult#OVERFLOW</c></returns>
        <remarks>
          <para>Flushes this decoder.</para>
          <para>The default implementation of this method does nothing, and always
            returns <c>CoderResult#UNDERFLOW</c>.  This method should be overridden
            by decoders that may need to write final characters to the output buffer
            once the entire input sequence has been read.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#implFlush(java.nio.CharBuffer)" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.implFlush(java.nio.CharBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ImplOnMalformedInput">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ImplOnMalformedInput (newAction As CodingErrorAction)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ImplOnMalformedInput(Java::Nio::Charset::CodingErrorAction ^ newAction);" />
      <MemberSignature Language="C#" Value="protected virtual void ImplOnMalformedInput (Java.Nio.Charset.CodingErrorAction? newAction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplOnMalformedInput(class Java.Nio.Charset.CodingErrorAction newAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.ImplOnMalformedInput(Java.Nio.Charset.CodingErrorAction)" />
      <MemberSignature Language="F#" Value="abstract member ImplOnMalformedInput : Java.Nio.Charset.CodingErrorAction -&gt; unit&#xA;override this.ImplOnMalformedInput : Java.Nio.Charset.CodingErrorAction -&gt; unit" Usage="charsetDecoder.ImplOnMalformedInput newAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("implOnMalformedInput", "(Ljava/nio/charset/CodingErrorAction;)V", "GetImplOnMalformedInput_Ljava_nio_charset_CodingErrorAction_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("implOnMalformedInput", "(Ljava/nio/charset/CodingErrorAction;)V", "GetImplOnMalformedInput_Ljava_nio_charset_CodingErrorAction_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAction" Type="Java.Nio.Charset.CodingErrorAction" />
      </Parameters>
      <Docs>
        <param name="newAction">The new action</param>
        <summary>Reports a change to this decoder's malformed-input action.</summary>
        <remarks>
          <para>Reports a change to this decoder's malformed-input action.</para>
          <para>The default implementation of this method does nothing.  This method
            should be overridden by decoders that require notification of changes to
            the malformed-input action.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#implOnMalformedInput(java.nio.charset.CodingErrorAction)" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.implOnMalformedInput(java.nio.charset.CodingErrorAction)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ImplOnUnmappableCharacter">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ImplOnUnmappableCharacter (newAction As CodingErrorAction)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ImplOnUnmappableCharacter(Java::Nio::Charset::CodingErrorAction ^ newAction);" />
      <MemberSignature Language="C#" Value="protected virtual void ImplOnUnmappableCharacter (Java.Nio.Charset.CodingErrorAction? newAction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplOnUnmappableCharacter(class Java.Nio.Charset.CodingErrorAction newAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.ImplOnUnmappableCharacter(Java.Nio.Charset.CodingErrorAction)" />
      <MemberSignature Language="F#" Value="abstract member ImplOnUnmappableCharacter : Java.Nio.Charset.CodingErrorAction -&gt; unit&#xA;override this.ImplOnUnmappableCharacter : Java.Nio.Charset.CodingErrorAction -&gt; unit" Usage="charsetDecoder.ImplOnUnmappableCharacter newAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("implOnUnmappableCharacter", "(Ljava/nio/charset/CodingErrorAction;)V", "GetImplOnUnmappableCharacter_Ljava_nio_charset_CodingErrorAction_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("implOnUnmappableCharacter", "(Ljava/nio/charset/CodingErrorAction;)V", "GetImplOnUnmappableCharacter_Ljava_nio_charset_CodingErrorAction_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAction" Type="Java.Nio.Charset.CodingErrorAction" />
      </Parameters>
      <Docs>
        <param name="newAction">The new action</param>
        <summary>Reports a change to this decoder's unmappable-character action.</summary>
        <remarks>
          <para>Reports a change to this decoder's unmappable-character action.</para>
          <para>The default implementation of this method does nothing.  This method
            should be overridden by decoders that require notification of changes to
            the unmappable-character action.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ImplReplaceWith">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ImplReplaceWith (newReplacement As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ImplReplaceWith(System::String ^ newReplacement);" />
      <MemberSignature Language="C#" Value="protected virtual void ImplReplaceWith (string? newReplacement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplReplaceWith(string newReplacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.ImplReplaceWith(System.String)" />
      <MemberSignature Language="F#" Value="abstract member ImplReplaceWith : string -&gt; unit&#xA;override this.ImplReplaceWith : string -&gt; unit" Usage="charsetDecoder.ImplReplaceWith newReplacement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("implReplaceWith", "(Ljava/lang/String;)V", "GetImplReplaceWith_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("implReplaceWith", "(Ljava/lang/String;)V", "GetImplReplaceWith_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newReplacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newReplacement">The replacement value</param>
        <summary>Reports a change to this decoder's replacement value.</summary>
        <remarks>
          <para>Reports a change to this decoder's replacement value.</para>
          <para>The default implementation of this method does nothing.  This method
            should be overridden by decoders that require notification of changes to
            the replacement.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#implReplaceWith(java.lang.String)" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.implReplaceWith(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ImplReset">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ImplReset ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ImplReset();" />
      <MemberSignature Language="C#" Value="protected virtual void ImplReset ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplReset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.ImplReset" />
      <MemberSignature Language="F#" Value="abstract member ImplReset : unit -&gt; unit&#xA;override this.ImplReset : unit -&gt; unit" Usage="charsetDecoder.ImplReset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("implReset", "()V", "GetImplResetHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("implReset", "()V", "GetImplResetHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets this decoder, clearing any charset-specific internal state.</summary>
        <remarks>
          <para>Resets this decoder, clearing any charset-specific internal state.</para>
          <para>The default implementation of this method does nothing.  This method
            should be overridden by decoders that maintain internal state.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#implReset()" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.implReset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsAutoDetecting">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAutoDetecting As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAutoDetecting { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsAutoDetecting { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAutoDetecting" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Charset.CharsetDecoder.IsAutoDetecting" />
      <MemberSignature Language="F#" Value="member this.IsAutoDetecting : bool" Usage="Java.Nio.Charset.CharsetDecoder.IsAutoDetecting" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isAutoDetecting", "()Z", "GetIsAutoDetectingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isAutoDetecting", "()Z", "GetIsAutoDetectingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells whether or not this decoder implements an auto-detecting charset.</summary>
        <value>
          <c>true</c> if, and only if, this decoder implements an
                     auto-detecting charset</value>
        <remarks>
          <para>Tells whether or not this decoder implements an auto-detecting charset.</para>
          <para>The default implementation of this method always returns
            <c>false</c>; it should be overridden by auto-detecting decoders to
            return <c>true</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#isAutoDetecting()" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.isAutoDetecting()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsCharsetDetected">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCharsetDetected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCharsetDetected { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsCharsetDetected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCharsetDetected" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Charset.CharsetDecoder.IsCharsetDetected" />
      <MemberSignature Language="F#" Value="member this.IsCharsetDetected : bool" Usage="Java.Nio.Charset.CharsetDecoder.IsCharsetDetected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isCharsetDetected", "()Z", "GetIsCharsetDetectedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isCharsetDetected", "()Z", "GetIsCharsetDetectedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells whether or not this decoder has yet detected a
            charset&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</summary>
        <value>
          <c>true</c> if, and only if, this decoder has detected a
                     specific charset</value>
        <remarks>
          <para>Tells whether or not this decoder has yet detected a
            charset&amp;nbsp;&amp;nbsp;<i>(optional operation)</i>.</para>
          <para>If this decoder implements an auto-detecting charset then at a
            single point during a decoding operation this method may start returning
            <c>true</c> to indicate that a specific charset has been detected in
            the input byte sequence.  Once this occurs, the <c>#detectedCharset
            detectedCharset</c> method may be invoked to retrieve the detected charset.</para>
          <para>That this method returns <c>false</c> does not imply that no bytes
            have yet been decoded.  Some auto-detecting decoders are capable of
            decoding some, or even all, of an input byte sequence without fixing on
            a particular charset.</para>
          <para>The default implementation of this method always throws an <c>UnsupportedOperationException</c>; it should be overridden by
            auto-detecting decoders to return <c>true</c> once the input charset
            has been determined.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#isCharsetDetected()" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.isCharsetDetected()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">if this decoder doesn't implement an auto-detecting charset.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Charset.CharsetDecoder.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.Charset.CharsetDecoder.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MalformedInputAction">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MalformedInputAction () As CodingErrorAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Charset::CodingErrorAction ^ MalformedInputAction();" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Charset.CodingErrorAction? MalformedInputAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Charset.CodingErrorAction MalformedInputAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.MalformedInputAction" />
      <MemberSignature Language="F#" Value="abstract member MalformedInputAction : unit -&gt; Java.Nio.Charset.CodingErrorAction&#xA;override this.MalformedInputAction : unit -&gt; Java.Nio.Charset.CodingErrorAction" Usage="charsetDecoder.MalformedInputAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("malformedInputAction", "()Ljava/nio/charset/CodingErrorAction;", "GetMalformedInputActionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("malformedInputAction", "()Ljava/nio/charset/CodingErrorAction;", "GetMalformedInputActionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CodingErrorAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this decoder's current action for malformed-input errors.</summary>
        <returns>The current malformed-input action, which is never <c>null</c></returns>
        <remarks>
          <para>Returns this decoder's current action for malformed-input errors.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#malformedInputAction()" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.malformedInputAction()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxCharsPerByte">
      <MemberSignature Language="VB.NET" Value="Public Function MaxCharsPerByte () As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; float MaxCharsPerByte();" />
      <MemberSignature Language="C#" Value="public float MaxCharsPerByte ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 MaxCharsPerByte() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.MaxCharsPerByte" />
      <MemberSignature Language="F#" Value="member this.MaxCharsPerByte : unit -&gt; single" Usage="charsetDecoder.MaxCharsPerByte " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("maxCharsPerByte", "()F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("maxCharsPerByte", "()F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the maximum number of characters that will be produced for each
            byte of input.</summary>
        <returns>The maximum number of characters that will be produced per
                     byte of input</returns>
        <remarks>
          <para>Returns the maximum number of characters that will be produced for each
            byte of input.  This value may be used to compute the worst-case size
            of the output buffer required for a given input sequence. This value
            accounts for any necessary content-independent prefix or suffix</para>
          <para />
          <para>characters.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#maxCharsPerByte()" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.maxCharsPerByte()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnMalformedInput">
      <MemberSignature Language="VB.NET" Value="Public Function OnMalformedInput (newAction As CodingErrorAction) As CharsetDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::Charset::CharsetDecoder ^ OnMalformedInput(Java::Nio::Charset::CodingErrorAction ^ newAction);" />
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CharsetDecoder? OnMalformedInput (Java.Nio.Charset.CodingErrorAction? newAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CharsetDecoder OnMalformedInput(class Java.Nio.Charset.CodingErrorAction newAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.OnMalformedInput(Java.Nio.Charset.CodingErrorAction)" />
      <MemberSignature Language="F#" Value="member this.OnMalformedInput : Java.Nio.Charset.CodingErrorAction -&gt; Java.Nio.Charset.CharsetDecoder" Usage="charsetDecoder.OnMalformedInput newAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onMalformedInput", "(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onMalformedInput", "(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAction" Type="Java.Nio.Charset.CodingErrorAction" />
      </Parameters>
      <Docs>
        <param name="newAction">The new action; must not be <c>null</c></param>
        <summary>Changes this decoder's action for malformed-input errors.</summary>
        <returns>This decoder</returns>
        <remarks>
          <para>Changes this decoder's action for malformed-input errors.</para>
          <para>This method invokes the <c>#implOnMalformedInput
            implOnMalformedInput</c> method, passing the new action.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#onMalformedInput(java.nio.charset.CodingErrorAction)" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.onMalformedInput(java.nio.charset.CodingErrorAction)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>newAction == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OnUnmappableCharacter">
      <MemberSignature Language="VB.NET" Value="Public Function OnUnmappableCharacter (newAction As CodingErrorAction) As CharsetDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::Charset::CharsetDecoder ^ OnUnmappableCharacter(Java::Nio::Charset::CodingErrorAction ^ newAction);" />
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CharsetDecoder? OnUnmappableCharacter (Java.Nio.Charset.CodingErrorAction? newAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CharsetDecoder OnUnmappableCharacter(class Java.Nio.Charset.CodingErrorAction newAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.OnUnmappableCharacter(Java.Nio.Charset.CodingErrorAction)" />
      <MemberSignature Language="F#" Value="member this.OnUnmappableCharacter : Java.Nio.Charset.CodingErrorAction -&gt; Java.Nio.Charset.CharsetDecoder" Usage="charsetDecoder.OnUnmappableCharacter newAction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onUnmappableCharacter", "(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onUnmappableCharacter", "(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetDecoder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAction" Type="Java.Nio.Charset.CodingErrorAction" />
      </Parameters>
      <Docs>
        <param name="newAction">The new action; must not be <c>null</c></param>
        <summary>Changes this decoder's action for unmappable-character errors.</summary>
        <returns>This decoder</returns>
        <remarks>
          <para>Changes this decoder's action for unmappable-character errors.</para>
          <para>This method invokes the <c>#implOnUnmappableCharacter
            implOnUnmappableCharacter</c> method, passing the new action.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#onUnmappableCharacter(java.nio.charset.CodingErrorAction)" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.onUnmappableCharacter(java.nio.charset.CodingErrorAction)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if <c>newAction == null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Replacement">
      <MemberSignature Language="VB.NET" Value="Public Function Replacement () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replacement();" />
      <MemberSignature Language="C#" Value="public string? Replacement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replacement() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.Replacement" />
      <MemberSignature Language="F#" Value="member this.Replacement : unit -&gt; string" Usage="charsetDecoder.Replacement " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replacement", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replacement", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this decoder's replacement value.</summary>
        <returns>This decoder's current replacement,
                     which is never <c>null</c> and is never empty</returns>
        <remarks>
          <para>Returns this decoder's replacement value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#replacement()" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.replacement()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReplaceWith">
      <MemberSignature Language="VB.NET" Value="Public Function ReplaceWith (newReplacement As String) As CharsetDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::Charset::CharsetDecoder ^ ReplaceWith(System::String ^ newReplacement);" />
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CharsetDecoder? ReplaceWith (string? newReplacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CharsetDecoder ReplaceWith(string newReplacement) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.ReplaceWith(System.String)" />
      <MemberSignature Language="F#" Value="member this.ReplaceWith : string -&gt; Java.Nio.Charset.CharsetDecoder" Usage="charsetDecoder.ReplaceWith newReplacement" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replaceWith", "(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replaceWith", "(Ljava/lang/String;)Ljava/nio/charset/CharsetDecoder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetDecoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newReplacement" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="newReplacement">The new replacement; must not be
                    <c>null</c>, must have non-zero length,
            
                    and must not be longer than the value returned by the
                    <c>#maxCharsPerByte() maxCharsPerByte</c> method</param>
        <summary>Changes this decoder's replacement value.</summary>
        <returns>This decoder</returns>
        <remarks>
          <para>Changes this decoder's replacement value.</para>
          <para>This method invokes the <c>#implReplaceWith implReplaceWith</c>
            method, passing the new replacement, after checking that the new
            replacement is acceptable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#replaceWith(java.lang.String)" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.replaceWith(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given replacement cannot satisfy the requirement
             mentioned above.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="VB.NET" Value="Public Function Reset () As CharsetDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::Charset::CharsetDecoder ^ Reset();" />
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CharsetDecoder? Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CharsetDecoder Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.Reset" />
      <MemberSignature Language="F#" Value="member this.Reset : unit -&gt; Java.Nio.Charset.CharsetDecoder" Usage="charsetDecoder.Reset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reset", "()Ljava/nio/charset/CharsetDecoder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reset", "()Ljava/nio/charset/CharsetDecoder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetDecoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets this decoder, clearing any internal state.</summary>
        <returns>This decoder</returns>
        <remarks>
          <para>Resets this decoder, clearing any internal state.</para>
          <para>This method resets charset-independent state and also invokes the
            <c>#implReset() implReset</c> method in order to perform any
            charset-specific reset actions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#reset()" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.reset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Charset.CharsetDecoder.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.Charset.CharsetDecoder.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Charset.CharsetDecoder.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.Charset.CharsetDecoder.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnmappableCharacterAction">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnmappableCharacterAction () As CodingErrorAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Nio::Charset::CodingErrorAction ^ UnmappableCharacterAction();" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Charset.CodingErrorAction? UnmappableCharacterAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Charset.CodingErrorAction UnmappableCharacterAction() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.CharsetDecoder.UnmappableCharacterAction" />
      <MemberSignature Language="F#" Value="abstract member UnmappableCharacterAction : unit -&gt; Java.Nio.Charset.CodingErrorAction&#xA;override this.UnmappableCharacterAction : unit -&gt; Java.Nio.Charset.CodingErrorAction" Usage="charsetDecoder.UnmappableCharacterAction " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unmappableCharacterAction", "()Ljava/nio/charset/CodingErrorAction;", "GetUnmappableCharacterActionHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unmappableCharacterAction", "()Ljava/nio/charset/CodingErrorAction;", "GetUnmappableCharacterActionHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CodingErrorAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this decoder's current action for unmappable-character errors.</summary>
        <returns>The current unmappable-character action, which is never
                    <c>null</c></returns>
        <remarks>
          <para>Returns this decoder's current action for unmappable-character errors.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/CharsetDecoder#unmappableCharacterAction()" title="Reference documentation">Java documentation for <code>java.nio.charset.CharsetDecoder.unmappableCharacterAction()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
