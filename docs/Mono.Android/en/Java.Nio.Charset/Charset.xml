<Type Name="Charset" FullName="Java.Nio.Charset.Charset">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Charset&#xA;Inherits Object&#xA;Implements IComparable, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Charset abstract : Java::Lang::Object, IDisposable, Java::Interop::IJavaPeerable, Java::Lang::IComparable" />
  <TypeSignature Language="C#" Value="public abstract class Charset : Java.Lang.Object, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IComparable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Charset extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.IComparable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Nio.Charset.Charset" />
  <TypeSignature Language="F#" Value="type Charset = class&#xA;    inherit Object&#xA;    interface IComparable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/nio/charset/Charset", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/nio/charset/Charset", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A named mapping between sequences of sixteen-bit Unicode code units and sequences of
            bytes.</summary>
    <remarks>
      <para>A named mapping between sequences of sixteen-bit Unicode code units and sequences of
            bytes.  This class defines methods for creating decoders and encoders and
            for retrieving the various names associated with a charset.  Instances of
            this class are immutable.</para>
      <para>This class also defines static methods for testing whether a particular
            charset is supported, for locating charset instances by name, and for
            constructing a map that contains every charset for which support is
            available in the current Java virtual machine.  Support for new charsets can
            be added via the service-provider interface defined in the <c>java.nio.charset.spi.CharsetProvider</c> class.</para>
      <para>All of the methods defined in this class are safe for use by multiple
            concurrent threads.
            
            
            "charenc"&gt;&lt;h2&gt;Charset names&lt;/h2&gt;</para>
      <para>Charsets are named by strings composed of the following characters:
            
            &lt;ul&gt;
            
              &lt;li&gt; The uppercase letters <c>'A'</c> through <c>'Z'</c>
                   (<c>'&amp;#92;u0041'</c>&amp;nbsp;through&amp;nbsp;<c>'&amp;#92;u005a'</c>),
            
              &lt;li&gt; The lowercase letters <c>'a'</c> through <c>'z'</c>
                   (<c>'&amp;#92;u0061'</c>&amp;nbsp;through&amp;nbsp;<c>'&amp;#92;u007a'</c>),
            
              &lt;li&gt; The digits <c>'0'</c> through <c>'9'</c>
                   (<c>'&amp;#92;u0030'</c>&amp;nbsp;through&amp;nbsp;<c>'&amp;#92;u0039'</c>),
            
              &lt;li&gt; The dash character <c>'-'</c>
                   (<c>'&amp;#92;u002d'</c>,&amp;nbsp;&lt;small&gt;HYPHEN-MINUS&lt;/small&gt;),
            
              &lt;li&gt; The plus character <c>'+'</c>
                   (<c>'&amp;#92;u002b'</c>,&amp;nbsp;&lt;small&gt;PLUS SIGN&lt;/small&gt;),
            
              &lt;li&gt; The period character <c>'.'</c>
                   (<c>'&amp;#92;u002e'</c>,&amp;nbsp;&lt;small&gt;FULL STOP&lt;/small&gt;),
            
              &lt;li&gt; The colon character <c>':'</c>
                   (<c>'&amp;#92;u003a'</c>,&amp;nbsp;&lt;small&gt;COLON&lt;/small&gt;), and
            
              &lt;li&gt; The underscore character <c>'_'</c>
                   (<c>'&amp;#92;u005f'</c>,&amp;nbsp;&lt;small&gt;LOW&amp;nbsp;LINE&lt;/small&gt;).
            
            &lt;/ul&gt;
            
            A charset name must begin with either a letter or a digit.  The empty string
            is not a legal charset name.  Charset names are not case-sensitive; that is,
            case is always ignored when comparing charset names.  Charset names
            generally follow the conventions documented in <see href="http://www.ietf.org/rfc/rfc2278.txt"><i>RFC&amp;nbsp;2278:&amp;nbsp;IANA Charset
            Registration Procedures</i></see>.</para>
      <para>Every charset has a <i>canonical name</i> and may also have one or more
            <i>aliases</i>.  The canonical name is returned by the <c>#name() name</c> method
            of this class.  Canonical names are, by convention, usually in upper case.
            The aliases of a charset are returned by the <c>#aliases() aliases</c>
            method.</para>
      <para>"hn"&gt;Some charsets have an &lt;i&gt;historical name&lt;/i&gt; that is defined for
            compatibility with previous versions of the Java platform.  A charset's
            historical name is either its canonical name or one of its aliases.  The
            historical name is returned by the <c>getEncoding()</c> methods of the
            <c>java.io.InputStreamReader#getEncoding InputStreamReader</c> and <c>java.io.OutputStreamWriter#getEncoding OutputStreamWriter</c> classes.</para>
      <para>"iana"&gt; If a charset listed in the <see href="http://www.iana.org/assignments/character-sets"><i>IANA Charset
            Registry</i></see> is supported by an implementation of the Java platform then
            its canonical name must be the name listed in the registry. Many charsets
            are given more than one name in the registry, in which case the registry
            identifies one of the names as <i>MIME-preferred</i>.  If a charset has more
            than one registry name then its canonical name must be the MIME-preferred
            name and the other names in the registry must be valid aliases.  If a
            supported charset is not listed in the IANA registry then its canonical name
            must begin with one of the strings <c>"X-"</c> or <c>"x-"</c>.</para>
      <para>The IANA charset registry does change over time, and so the canonical
            name and the aliases of a particular charset may also change over time.  To
            ensure compatibility it is recommended that no alias ever be removed from a
            charset, and that if the canonical name of a charset is changed then its
            previous canonical name be made into an alias.
            
            
            &lt;h2&gt;Standard charsets&lt;/h2&gt;</para>
      <para>"standard"&gt;Every implementation of the Java platform is required to support the
            following standard charsets.  Consult the release documentation for your
            implementation to see if any other charsets are supported.  The behavior
            of such optional charsets may differ between implementations.
            
            &lt;blockquote&gt;&lt;table class="striped" style="width:80%"&gt;
            &lt;caption style="display:none"&gt;Description of standard charsets&lt;/caption&gt;
            &lt;thead&gt;
            &lt;tr&gt;&lt;th scope="col" style="text-align:left"&gt;Charset&lt;/th&gt;&lt;th scope="col" style="text-align:left"&gt;Description&lt;/th&gt;&lt;/tr&gt;
            &lt;/thead&gt;
            &lt;tbody&gt;
            &lt;tr&gt;&lt;th scope="row" style="vertical-align:top"&gt;<c>US-ASCII</c>&lt;/th&gt;
                &lt;td&gt;Seven-bit ASCII, a.k.a. <c>ISO646-US</c>,
                    a.k.a. the Basic Latin block of the Unicode character set&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th scope="row" style="vertical-align:top"&gt;<c>ISO-8859-1&amp;nbsp;&amp;nbsp;</c>&lt;/th&gt;
                &lt;td&gt;ISO Latin Alphabet No. 1, a.k.a. <c>ISO-LATIN-1</c>&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th scope="row" style="vertical-align:top"&gt;<c>UTF-8</c>&lt;/th&gt;
                &lt;td&gt;Eight-bit UCS Transformation Format&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th scope="row" style="vertical-align:top"&gt;<c>UTF-16BE</c>&lt;/th&gt;
                &lt;td&gt;Sixteen-bit UCS Transformation Format,
                    big-endian byte&amp;nbsp;order&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th scope="row" style="vertical-align:top"&gt;<c>UTF-16LE</c>&lt;/th&gt;
                &lt;td&gt;Sixteen-bit UCS Transformation Format,
                    little-endian byte&amp;nbsp;order&lt;/td&gt;&lt;/tr&gt;
            &lt;tr&gt;&lt;th scope="row" style="vertical-align:top"&gt;<c>UTF-16</c>&lt;/th&gt;
                &lt;td&gt;Sixteen-bit UCS Transformation Format,
                    byte&amp;nbsp;order identified by an optional byte-order mark&lt;/td&gt;&lt;/tr&gt;
            &lt;/tbody&gt;
            &lt;/table&gt;&lt;/blockquote&gt;</para>
      <para>The <c>UTF-8</c> charset is specified by <see href="http://www.ietf.org/rfc/rfc2279.txt"><i>RFC&amp;nbsp;2279</i></see>; the
            transformation format upon which it is based is specified in
            Amendment&amp;nbsp;2 of ISO&amp;nbsp;10646-1 and is also described in the <see href="http://www.unicode.org/unicode/standard/standard.html"><i>Unicode
            Standard</i></see>.</para>
      <para>The <c>UTF-16</c> charsets are specified by <see href="http://www.ietf.org/rfc/rfc2781.txt"><i>RFC&amp;nbsp;2781</i></see>; the
            transformation formats upon which they are based are specified in
            Amendment&amp;nbsp;1 of ISO&amp;nbsp;10646-1 and are also described in the <see href="http://www.unicode.org/unicode/standard/standard.html"><i>Unicode
            Standard</i></see>.</para>
      <para>The <c>UTF-16</c> charsets use sixteen-bit quantities and are
            therefore sensitive to byte order.  In these encodings the byte order of a
            stream may be indicated by an initial <i>byte-order mark</i> represented by
            the Unicode character <c>'&amp;#92;uFEFF'</c>.  Byte-order marks are handled
            as follows:
            
            &lt;ul&gt;
            
              &lt;li&gt;</para>
      <para>When decoding, the <c>UTF-16BE</c> and <c>UTF-16LE</c>
              charsets interpret the initial byte-order marks as a &lt;small&gt;ZERO-WIDTH
              NON-BREAKING SPACE&lt;/small&gt;; when encoding, they do not write
              byte-order marks.</para>
      <para>&lt;/li&gt;
            
            
              &lt;li&gt;</para>
      <para>When decoding, the <c>UTF-16</c> charset interprets the
              byte-order mark at the beginning of the input stream to indicate the
              byte-order of the stream but defaults to big-endian if there is no
              byte-order mark; when encoding, it uses big-endian byte order and writes
              a big-endian byte-order mark.</para>
      <para>&lt;/li&gt;
            
            &lt;/ul&gt;
            
            In any case, byte order marks occurring after the first element of an
            input sequence are not omitted since the same code is used to represent
            &lt;small&gt;ZERO-WIDTH NON-BREAKING SPACE&lt;/small&gt;.</para>
      <para>Android note: The Android platform default is always UTF-8.</para>
      <para>The <c>StandardCharsets</c> class defines constants for each of the
            standard charsets.
            
            &lt;h2&gt;Terminology&lt;/h2&gt;</para>
      <para>The name of this class is taken from the terms used in
            <see href="http://www.ietf.org/rfc/rfc2278.txt"><i>RFC&amp;nbsp;2278</i></see>.
            In that document a <i>charset</i> is defined as the combination of
            one or more coded character sets and a character-encoding scheme.
            (This definition is confusing; some other software systems define
            <i>charset</i> as a synonym for <i>coded character set</i>.)</para>
      <para>A <i>coded character set</i> is a mapping between a set of abstract
            characters and a set of integers.  US-ASCII, ISO&amp;nbsp;8859-1,
            JIS&amp;nbsp;X&amp;nbsp;0201, and Unicode are examples of coded character sets.</para>
      <para>Some standards have defined a <i>character set</i> to be simply a
            set of abstract characters without an associated assigned numbering.
            An alphabet is an example of such a character set.  However, the subtle
            distinction between <i>character set</i> and <i>coded character set</i>
            is rarely used in practice; the former has become a short form for the
            latter, including in the Java API specification.</para>
      <para>A <i>character-encoding scheme</i> is a mapping between one or more
            coded character sets and a set of octet (eight-bit byte) sequences.
            UTF-8, UTF-16, ISO&amp;nbsp;2022, and EUC are examples of
            character-encoding schemes.  Encoding schemes are often associated with
            a particular coded character set; UTF-8, for example, is used only to
            encode Unicode.  Some schemes, however, are associated with multiple
            coded character sets; EUC, for example, can be used to encode
            characters in a variety of Asian coded character sets.</para>
      <para>When a coded character set is used exclusively with a single
            character-encoding scheme then the corresponding charset is usually
            named for the coded character set; otherwise a charset is usually named
            for the encoding scheme and, possibly, the locale of the coded
            character sets that it supports.  Hence <c>US-ASCII</c> is both the
            name of a coded character set and of the charset that encodes it, while
            <c>EUC-JP</c> is the name of the charset that encodes the
            JIS&amp;nbsp;X&amp;nbsp;0201, JIS&amp;nbsp;X&amp;nbsp;0208, and JIS&amp;nbsp;X&amp;nbsp;0212
            coded character sets for the Japanese language.</para>
      <para>The native character encoding of the Java programming language is
            UTF-16.  A charset in the Java platform therefore defines a mapping
            between sequences of sixteen-bit UTF-16 code units (that is, sequences
            of chars) and sequences of bytes.</para>
      <para>Added in 1.4.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/nio/charset/Charset" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Charset(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected Charset (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Java.Nio.Charset.Charset : nativeint * Android.Runtime.JniHandleOwnership -&gt; Java.Nio.Charset.Charset" Usage="new Java.Nio.Charset.Charset (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (canonicalName As String, aliases As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Charset(System::String ^ canonicalName, cli::array &lt;System::String ^&gt; ^ aliases);" />
      <MemberSignature Language="C#" Value="protected Charset (string? canonicalName, string[]? aliases);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string canonicalName, string[] aliases) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.#ctor(System.String,System.String[])" />
      <MemberSignature Language="F#" Value="new Java.Nio.Charset.Charset : string * string[] -&gt; Java.Nio.Charset.Charset" Usage="new Java.Nio.Charset.Charset (canonicalName, aliases)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;[Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;[Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="canonicalName" Type="System.String" />
        <Parameter Name="aliases" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="canonicalName">The canonical name of this charset</param>
        <param name="aliases">An array of this charset's aliases, or null if it has no aliases</param>
        <summary>Initializes a new charset with the given canonical name and alias
            set.</summary>
        <remarks>
          <para>Initializes a new charset with the given canonical name and alias
            set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#Charset(java.lang.String,%20java.lang.String[])" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.Charset(java.lang.String, java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Charset.IllegalCharsetNameException">on an illegal value being supplied for either
             <c>canonicalName</c> or for any element of
             <c>aliases</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Aliases">
      <MemberSignature Language="VB.NET" Value="Public Function Aliases () As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ Aliases();" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt;? Aliases ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;string&gt; Aliases() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.Aliases" />
      <MemberSignature Language="F#" Value="member this.Aliases : unit -&gt; System.Collections.Generic.ICollection&lt;string&gt;" Usage="charset.Aliases " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("aliases", "()Ljava/util/Set;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("aliases", "()Ljava/util/Set;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a set containing this charset's aliases.</summary>
        <returns>An immutable set of this charset's aliases</returns>
        <remarks>
          <para>Returns a set containing this charset's aliases.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#aliases()" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.aliases()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AvailableCharsets">
      <MemberSignature Language="VB.NET" Value="Public Shared Function AvailableCharsets () As IDictionary(Of String, Charset)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IDictionary&lt;System::String ^, Java::Nio::Charset::Charset ^&gt; ^ AvailableCharsets();" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IDictionary&lt;string,Java.Nio.Charset.Charset&gt;? AvailableCharsets ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IDictionary`2&lt;string, class Java.Nio.Charset.Charset&gt; AvailableCharsets() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.AvailableCharsets" />
      <MemberSignature Language="F#" Value="static member AvailableCharsets : unit -&gt; System.Collections.Generic.IDictionary&lt;string, Java.Nio.Charset.Charset&gt;" Usage="Java.Nio.Charset.Charset.AvailableCharsets " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("availableCharsets", "()Ljava/util/SortedMap;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("availableCharsets", "()Ljava/util/SortedMap;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Java.Nio.Charset.Charset&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Constructs a sorted map from canonical charset names to charset objects.</summary>
        <returns>An immutable, case-insensitive map from canonical charset names
                    to charset objects</returns>
        <remarks>
          <para>Constructs a sorted map from canonical charset names to charset objects.</para>
          <para>The map returned by this method will have one entry for each charset
            for which support is available in the current Java virtual machine.  If
            two or more supported charsets have the same canonical name then the
            resulting map will contain just one of them; which one it will contain
            is not specified.</para>
          <para>The invocation of this method, and the subsequent use of the
            resulting map, may cause time-consuming disk or network I/O operations
            to occur.  This method is provided for applications that need to
            enumerate all of the available charsets, for example to allow user
            charset selection.  This method is not used by the <c>#forName
            forName</c> method, which instead employs an efficient incremental lookup
            algorithm.</para>
          <para>This method may return different results at different times if new
            charset providers are dynamically made available to the current Java
            virtual machine.  In the absence of such changes, the charsets returned
            by this method are exactly those that can be retrieved via the <c>#forName forName</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#availableCharsets()" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.availableCharsets()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CanEncode">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanEncode () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanEncode();" />
      <MemberSignature Language="C#" Value="public virtual bool CanEncode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanEncode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.CanEncode" />
      <MemberSignature Language="F#" Value="abstract member CanEncode : unit -&gt; bool&#xA;override this.CanEncode : unit -&gt; bool" Usage="charset.CanEncode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canEncode", "()Z", "GetCanEncodeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canEncode", "()Z", "GetCanEncodeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Tells whether or not this charset supports encoding.</summary>
        <returns>
          <c>true</c> if, and only if, this charset supports encoding</returns>
        <remarks>
          <para>Tells whether or not this charset supports encoding.</para>
          <para>Nearly all charsets support encoding.  The primary exceptions are
            special-purpose <i>auto-detect</i> charsets whose decoders can determine
            which of several possible encoding schemes is in use by examining the
            input byte sequence.  Such charsets do not support encoding because
            there is no way to determine which encoding should be used on output.
            Implementations of such charsets should override this method to return
            <c>false</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#canEncode()" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.canEncode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (that As Charset) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(Java::Nio::Charset::Charset ^ that);" />
      <MemberSignature Language="C#" Value="public int CompareTo (Java.Nio.Charset.Charset? that);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class Java.Nio.Charset.Charset that) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.CompareTo(Java.Nio.Charset.Charset)" />
      <MemberSignature Language="F#" Value="member this.CompareTo : Java.Nio.Charset.Charset -&gt; int" Usage="charset.CompareTo that" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("compareTo", "(Ljava/nio/charset/Charset;)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("compareTo", "(Ljava/nio/charset/Charset;)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="that" Type="Java.Nio.Charset.Charset" />
      </Parameters>
      <Docs>
        <param name="that">The charset to which this charset is to be compared</param>
        <summary>Compares this charset to another.</summary>
        <returns>A negative integer, zero, or a positive integer as this charset
                    is less than, equal to, or greater than the specified charset</returns>
        <remarks>
          <para>Compares this charset to another.</para>
          <para>Charsets are ordered by their canonical names, without regard to
            case.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#compareTo(java.nio.charset.Charset)" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.compareTo(java.nio.charset.Charset)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (cs As Charset) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool Contains(Java::Nio::Charset::Charset ^ cs);" />
      <MemberSignature Language="C#" Value="public abstract bool Contains (Java.Nio.Charset.Charset? cs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(class Java.Nio.Charset.Charset cs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.Contains(Java.Nio.Charset.Charset)" />
      <MemberSignature Language="F#" Value="abstract member Contains : Java.Nio.Charset.Charset -&gt; bool" Usage="charset.Contains cs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("contains", "(Ljava/nio/charset/Charset;)Z", "GetContains_Ljava_nio_charset_Charset_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("contains", "(Ljava/nio/charset/Charset;)Z", "GetContains_Ljava_nio_charset_Charset_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cs" Type="Java.Nio.Charset.Charset" />
      </Parameters>
      <Docs>
        <param name="cs">The given charset</param>
        <summary>Tells whether or not this charset contains the given charset.</summary>
        <returns>
          <c>true</c> if the given charset is contained in this charset</returns>
        <remarks>
          <para>Tells whether or not this charset contains the given charset.</para>
          <para>A charset <i>C</i> is said to <i>contain</i> a charset <i>D</i> if,
            and only if, every character representable in <i>D</i> is also
            representable in <i>C</i>.  If this relationship holds then it is
            guaranteed that every string that can be encoded in <i>D</i> can also be
            encoded in <i>C</i> without performing any replacements.</para>
          <para>That <i>C</i> contains <i>D</i> does not imply that each character
            representable in <i>C</i> by a particular byte sequence is represented
            in <i>D</i> by the same byte sequence, although sometimes this is the
            case.</para>
          <para>Every charset contains itself.</para>
          <para>This method computes an approximation of the containment relation:
            If it returns <c>true</c> then the given charset is known to be
            contained by this charset; if it returns <c>false</c>, however, then
            it is not necessarily the case that the given charset is not contained
            in this charset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#contains(java.nio.charset.Charset)" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.contains(java.nio.charset.Charset)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="VB.NET" Value="Public Function Decode (bb As ByteBuffer) As CharBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::CharBuffer ^ Decode(Java::Nio::ByteBuffer ^ bb);" />
      <MemberSignature Language="C#" Value="public Java.Nio.CharBuffer? Decode (Java.Nio.ByteBuffer? bb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.CharBuffer Decode(class Java.Nio.ByteBuffer bb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.Decode(Java.Nio.ByteBuffer)" />
      <MemberSignature Language="F#" Value="member this.Decode : Java.Nio.ByteBuffer -&gt; Java.Nio.CharBuffer" Usage="charset.Decode bb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("decode", "(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("decode", "(Ljava/nio/ByteBuffer;)Ljava/nio/CharBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.CharBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bb" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="bb">The byte buffer to be decoded</param>
        <summary>Convenience method that decodes bytes in this charset into Unicode
            characters.</summary>
        <returns>A char buffer containing the decoded characters</returns>
        <remarks>
          <para>Convenience method that decodes bytes in this charset into Unicode
            characters.</para>
          <para>An invocation of this method upon a charset <c>cs</c> returns the
            same result as the expression</para>
          <code lang="text/java">cs.newDecoder()
                  .onMalformedInput(CodingErrorAction.REPLACE)
                  .onUnmappableCharacter(CodingErrorAction.REPLACE)
                  .decode(bb); </code>
          <para>except that it is potentially more efficient because it can cache
            decoders between successive invocations.</para>
          <para>This method always replaces malformed-input and unmappable-character
            sequences with this charset's default replacement byte array.  In order
            to detect such sequences, use the <c>CharsetDecoder#decode(java.nio.ByteBuffer)</c> method directly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#decode(java.nio.ByteBuffer)" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.decode(java.nio.ByteBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DefaultCharset">
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefaultCharset () As Charset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Nio::Charset::Charset ^ DefaultCharset();" />
      <MemberSignature Language="C#" Value="public static Java.Nio.Charset.Charset? DefaultCharset ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Charset.Charset DefaultCharset() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.DefaultCharset" />
      <MemberSignature Language="F#" Value="static member DefaultCharset : unit -&gt; Java.Nio.Charset.Charset" Usage="Java.Nio.Charset.Charset.DefaultCharset " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("defaultCharset", "()Ljava/nio/charset/Charset;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("defaultCharset", "()Ljava/nio/charset/Charset;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.Charset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the default charset of this Java virtual machine.</summary>
        <returns>A charset object for the default charset</returns>
        <remarks>
          <para>Returns the default charset of this Java virtual machine.</para>
          <para>Android note: The Android platform default is always UTF-8.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#defaultCharset()" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.defaultCharset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisplayName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ DisplayName();" />
      <MemberSignature Language="C#" Value="public virtual string? DisplayName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DisplayName() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.DisplayName" />
      <MemberSignature Language="F#" Value="abstract member DisplayName : unit -&gt; string&#xA;override this.DisplayName : unit -&gt; string" Usage="charset.DisplayName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("displayName", "()Ljava/lang/String;", "GetDisplayNameHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("displayName", "()Ljava/lang/String;", "GetDisplayNameHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this charset's human-readable name for the default locale.</summary>
        <returns>The display name of this charset in the default locale</returns>
        <remarks>
          <para>Returns this charset's human-readable name for the default locale.</para>
          <para>The default implementation of this method simply returns this
            charset's canonical name.  Concrete subclasses of this class may
            override this method in order to provide a localized display name.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#displayName()" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.displayName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisplayName (locale As Locale) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ DisplayName(Java::Util::Locale ^ locale);" />
      <MemberSignature Language="C#" Value="public virtual string? DisplayName (Java.Util.Locale? locale);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string DisplayName(class Java.Util.Locale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.DisplayName(Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="abstract member DisplayName : Java.Util.Locale -&gt; string&#xA;override this.DisplayName : Java.Util.Locale -&gt; string" Usage="charset.DisplayName locale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("displayName", "(Ljava/util/Locale;)Ljava/lang/String;", "GetDisplayName_Ljava_util_Locale_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("displayName", "(Ljava/util/Locale;)Ljava/lang/String;", "GetDisplayName_Ljava_util_Locale_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">The locale for which the display name is to be retrieved</param>
        <summary>Returns this charset's human-readable name for the given locale.</summary>
        <returns>The display name of this charset in the given locale</returns>
        <remarks>
          <para>Returns this charset's human-readable name for the given locale.</para>
          <para>The default implementation of this method simply returns this
            charset's canonical name.  Concrete subclasses of this class may
            override this method in order to provide a localized display name.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#displayName(java.util.Locale)" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.displayName(java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="VB.NET" Value="Public Function Encode (cb As CharBuffer) As ByteBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::ByteBuffer ^ Encode(Java::Nio::CharBuffer ^ cb);" />
      <MemberSignature Language="C#" Value="public Java.Nio.ByteBuffer? Encode (Java.Nio.CharBuffer? cb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.ByteBuffer Encode(class Java.Nio.CharBuffer cb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.Encode(Java.Nio.CharBuffer)" />
      <MemberSignature Language="F#" Value="member this.Encode : Java.Nio.CharBuffer -&gt; Java.Nio.ByteBuffer" Usage="charset.Encode cb" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("encode", "(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("encode", "(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cb" Type="Java.Nio.CharBuffer" />
      </Parameters>
      <Docs>
        <param name="cb">The char buffer to be encoded</param>
        <summary>Convenience method that encodes Unicode characters into bytes in this
            charset.</summary>
        <returns>A byte buffer containing the encoded characters</returns>
        <remarks>
          <para>Convenience method that encodes Unicode characters into bytes in this
            charset.</para>
          <para>An invocation of this method upon a charset <c>cs</c> returns the
            same result as the expression</para>
          <code lang="text/java">cs.newEncoder()
                  .onMalformedInput(CodingErrorAction.REPLACE)
                  .onUnmappableCharacter(CodingErrorAction.REPLACE)
                  .encode(bb); </code>
          <para>except that it is potentially more efficient because it can cache
            encoders between successive invocations.</para>
          <para>This method always replaces malformed-input and unmappable-character
            sequences with this charset's default replacement string.  In order to
            detect such sequences, use the <c>CharsetEncoder#encode(java.nio.CharBuffer)</c> method directly.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#encode(java.nio.CharBuffer)" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.encode(java.nio.CharBuffer)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="VB.NET" Value="Public Function Encode (str As String) As ByteBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Nio::ByteBuffer ^ Encode(System::String ^ str);" />
      <MemberSignature Language="C#" Value="public Java.Nio.ByteBuffer? Encode (string? str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.ByteBuffer Encode(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.Encode(System.String)" />
      <MemberSignature Language="F#" Value="member this.Encode : string -&gt; Java.Nio.ByteBuffer" Usage="charset.Encode str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("encode", "(Ljava/lang/String;)Ljava/nio/ByteBuffer;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("encode", "(Ljava/lang/String;)Ljava/nio/ByteBuffer;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The string to be encoded</param>
        <summary>Convenience method that encodes a string into bytes in this charset.</summary>
        <returns>A byte buffer containing the encoded characters</returns>
        <remarks>
          <para>Convenience method that encodes a string into bytes in this charset.</para>
          <para>An invocation of this method upon a charset <c>cs</c> returns the
            same result as the expression</para>
          <code lang="text/java">cs.encode(CharBuffer.wrap(s)); </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#encode(java.lang.String)" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.encode(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function Equals (ob As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(Java::Lang::Object ^ ob);" />
      <MemberSignature Language="C#" Value="public override sealed bool Equals (Java.Lang.Object? ob);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(class Java.Lang.Object ob) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.Equals(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="override this.Equals : Java.Lang.Object -&gt; bool" Usage="charset.Equals ob" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("equals", "(Ljava/lang/Object;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("equals", "(Ljava/lang/Object;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ob" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="ob">To be added.</param>
        <summary>Tells whether or not this object is equal to another.</summary>
        <returns>
          <c>true</c> if, and only if, this charset is equal to the
                     given object</returns>
        <remarks>
          <para>Tells whether or not this object is equal to another.</para>
          <para>Two charsets are equal if, and only if, they have the same canonical
            names.  A charset is never equal to any other type of object.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#equals(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.equals(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ForName">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ForName (charsetName As String) As Charset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Nio::Charset::Charset ^ ForName(System::String ^ charsetName);" />
      <MemberSignature Language="C#" Value="public static Java.Nio.Charset.Charset? ForName (string? charsetName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Nio.Charset.Charset ForName(string charsetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.ForName(System.String)" />
      <MemberSignature Language="F#" Value="static member ForName : string -&gt; Java.Nio.Charset.Charset" Usage="Java.Nio.Charset.Charset.ForName charsetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forName", "(Ljava/lang/String;)Ljava/nio/charset/Charset;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forName", "(Ljava/lang/String;)Ljava/nio/charset/Charset;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.Charset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charsetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="charsetName">The name of the requested charset; may be either
                    a canonical name or an alias</param>
        <summary>Returns a charset object for the named charset.</summary>
        <returns>A charset object for the named charset</returns>
        <remarks>
          <para>Returns a charset object for the named charset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#forName(java.lang.String)" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.forName(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Charset.IllegalCharsetNameException">if the specified charset name is illegal.</exception>
        <exception cref="T:Java.Nio.Charset.UnsupportedCharsetException">if the desired charset is not supported by this runtime.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="C#" Value="public override sealed int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.GetHashCode" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="charset.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hashCode", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hashCode", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Computes a hashcode for this charset.</summary>
        <returns>An integer hashcode</returns>
        <remarks>
          <para>Computes a hashcode for this charset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#hashCode()" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.hashCode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsRegistered">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRegistered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRegistered { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsRegistered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRegistered" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Charset.Charset.IsRegistered" />
      <MemberSignature Language="F#" Value="member this.IsRegistered : bool" Usage="Java.Nio.Charset.Charset.IsRegistered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRegistered", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRegistered", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tells whether or not this charset is registered in the <see href="http://www.iana.org/assignments/character-sets">IANA Charset
            Registry</see>.</summary>
        <value>
          <c>true</c> if, and only if, this charset is known by its
                     implementor to be registered with the IANA</value>
        <remarks>
          <para>Tells whether or not this charset is registered in the <see href="http://www.iana.org/assignments/character-sets">IANA Charset
            Registry</see>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#isRegistered()" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.isRegistered()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSupported">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSupported (charsetName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSupported(System::String ^ charsetName);" />
      <MemberSignature Language="C#" Value="public static bool IsSupported (string? charsetName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSupported(string charsetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.IsSupported(System.String)" />
      <MemberSignature Language="F#" Value="static member IsSupported : string -&gt; bool" Usage="Java.Nio.Charset.Charset.IsSupported charsetName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isSupported", "(Ljava/lang/String;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isSupported", "(Ljava/lang/String;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="charsetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="charsetName">The name of the requested charset; may be either
                    a canonical name or an alias</param>
        <summary>Tells whether the named charset is supported.</summary>
        <returns>
          <c>true</c> if, and only if, support for the named charset
                     is available in the current Java virtual machine</returns>
        <remarks>
          <para>Tells whether the named charset is supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#isSupported(java.lang.String)" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.isSupported(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Nio.Charset.IllegalCharsetNameException">if the specified charset name is illegal.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Java.Lang.IComparable.CompareTo">
      <MemberSignature Language="VB.NET" Value="Function CompareTo (o As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int Java.Lang.IComparable.CompareTo(Java::Lang::Object ^ o) = Java::Lang::IComparable::CompareTo;" />
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (Java.Lang.Object o);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 Java.Lang.IComparable.CompareTo(class Java.Lang.Object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.Java#Lang#IComparable#CompareTo(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int&#xA;override this.Java.Lang.IComparable.CompareTo : Java.Lang.Object -&gt; int" Usage="charset.Java.Lang.IComparable.CompareTo o" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IComparable.CompareTo(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="o">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Charset.Charset.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Nio.Charset.Charset.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="VB.NET" Value="Public Function Name () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Name();" />
      <MemberSignature Language="C#" Value="public string? Name ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Name() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.Name" />
      <MemberSignature Language="F#" Value="member this.Name : unit -&gt; string" Usage="charset.Name " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("name", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("name", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this charset's canonical name.</summary>
        <returns>The canonical name of this charset</returns>
        <remarks>
          <para>Returns this charset's canonical name.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#name()" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.name()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewDecoder">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function NewDecoder () As CharsetDecoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Charset::CharsetDecoder ^ NewDecoder();" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Charset.CharsetDecoder? NewDecoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Charset.CharsetDecoder NewDecoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.NewDecoder" />
      <MemberSignature Language="F#" Value="abstract member NewDecoder : unit -&gt; Java.Nio.Charset.CharsetDecoder" Usage="charset.NewDecoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newDecoder", "()Ljava/nio/charset/CharsetDecoder;", "GetNewDecoderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newDecoder", "()Ljava/nio/charset/CharsetDecoder;", "GetNewDecoderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetDecoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Constructs a new decoder for this charset.</summary>
        <returns>A new decoder for this charset</returns>
        <remarks>
          <para>Constructs a new decoder for this charset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#newDecoder()" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.newDecoder()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewEncoder">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function NewEncoder () As CharsetEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Java::Nio::Charset::CharsetEncoder ^ NewEncoder();" />
      <MemberSignature Language="C#" Value="public abstract Java.Nio.Charset.CharsetEncoder? NewEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Charset.CharsetEncoder NewEncoder() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.NewEncoder" />
      <MemberSignature Language="F#" Value="abstract member NewEncoder : unit -&gt; Java.Nio.Charset.CharsetEncoder" Usage="charset.NewEncoder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newEncoder", "()Ljava/nio/charset/CharsetEncoder;", "GetNewEncoderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newEncoder", "()Ljava/nio/charset/CharsetEncoder;", "GetNewEncoderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetEncoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Constructs a new encoder for this charset.</summary>
        <returns>A new encoder for this charset</returns>
        <remarks>
          <para>Constructs a new encoder for this charset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#newEncoder()" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.newEncoder()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Charset.Charset.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Nio.Charset.Charset.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Nio.Charset.Charset.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Nio.Charset.Charset.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="C#" Value="public override sealed string? ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Nio.Charset.Charset.ToString" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="charset.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toString", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toString", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string describing this charset.</summary>
        <returns>A string describing this charset</returns>
        <remarks>
          <para>Returns a string describing this charset.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/nio/charset/Charset#toString()" title="Reference documentation">Java documentation for <code>java.nio.charset.Charset.toString()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
