<Type Name="CharsetEncoder" FullName="Java.Nio.Charset.CharsetEncoder">
  <TypeSignature Language="C#" Value="public abstract class CharsetEncoder : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CharsetEncoder extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("java/nio/charset/CharsetEncoder", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Transforms a sequence of 16-bit Java characters to a byte sequence in some encoding.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Transforms a sequence of 16-bit Java characters to a byte sequence in some encoding.

 </para>
      <para tool="javadoc-to-mdoc">The input character sequence is a <c><see cref="T:Java.Nio.CharBuffer" /></c> and the
 output byte sequence is a <c><see cref="T:Java.Nio.ByteBuffer" /></c>.

 </para>
      <para tool="javadoc-to-mdoc">Use <c><see cref="M:Java.Nio.Charset.CharsetEncoder.Encode(Java.Nio.CharBuffer)" /></c> to encode an entire <c>CharBuffer</c> to a
 new <c>ByteBuffer</c>, or <c><see cref="M:Java.Nio.Charset.CharsetEncoder.Encode(Java.Nio.CharBuffer,Java.Nio.ByteBuffer,Java.Nio.ByteBuffer)" /></c> for more
 control. When using the latter method, the entire operation proceeds as follows:
 <list type="number"><item><term>Invoke <c><see cref="M:Java.Nio.Charset.CharsetEncoder.Reset" /></c> to reset the encoder if this instance has been used before.</term></item><item><term>Invoke <c><see cref="M:Java.Nio.Charset.CharsetEncoder.Encode(Java.Nio.CharBuffer,Java.Nio.ByteBuffer,Java.Nio.ByteBuffer)" /></c> with the <c>endOfInput</c>
 parameter set to false until additional input is not needed (as signaled by the return value).
 The input buffer must be filled and the output buffer must be flushed between invocations.
 The <c><see cref="M:Java.Nio.Charset.CharsetEncoder.Encode(Java.Nio.CharBuffer,Java.Nio.ByteBuffer,Java.Nio.ByteBuffer)" /></c> method will
 convert as many characters as possible, and the process won't stop until the
 input buffer has been exhausted, the output buffer has been filled, or an
 error has occurred. A <c><see cref="T:Java.Nio.Charset.CoderResult" /></c> instance will be
 returned to indicate the current state. The caller should fill the input buffer, flush
 the output buffer, or recovering from an error and try again, accordingly.
 </term></item><item><term>Invoke <c><see cref="M:Java.Nio.Charset.CharsetEncoder.Encode(Java.Nio.CharBuffer,Java.Nio.ByteBuffer,Java.Nio.ByteBuffer)" /></c> for the last time with
 <c>endOfInput</c> set to true.</term></item><item><term>Invoke <c><see cref="M:Java.Nio.Charset.CharsetEncoder.Flush(Java.Nio.ByteBuffer)" /></c> to flush remaining output.</term></item></list></para>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">There are two classes of encoding error: <format type="text/html"><i>malformed input</i></format>
 signifies that the input character sequence is not legal, while <format type="text/html"><i>unmappable character</i></format>
 signifies that the input is legal but cannot be mapped to a byte sequence (because the charset
 cannot represent the character, for example).

 </para>
      <para tool="javadoc-to-mdoc">Errors can be handled in three ways. The default is to
 <c><see cref="P:Java.Nio.Charset.CodingErrorAction.Report" /></c> the error to the caller. The alternatives are to
 <c><see cref="P:Java.Nio.Charset.CodingErrorAction.Ignore" /></c> the error or <c><see cref="P:Java.Nio.Charset.CodingErrorAction.Replace" /></c>
 the problematic input with the byte sequence returned by <c><see cref="M:Java.Nio.Charset.CharsetEncoder.Replacement" /></c>. The disposition
 for each of the two kinds of error can be set independently using the <c><see cref="M:Java.Nio.Charset.CharsetEncoder.OnMalformedInput(Java.Nio.Charset.CodingErrorAction)" /></c>
 and <c><see cref="M:Java.Nio.Charset.CharsetEncoder.OnUnmappableCharacter(Java.Nio.Charset.CodingErrorAction)" /></c> methods.

 </para>
      <para tool="javadoc-to-mdoc">The default replacement bytes depend on the charset but can be overridden using the
 <c><see cref="M:Java.Nio.Charset.CharsetEncoder.ReplaceWith(System.Byte[])" /></c> method.

 </para>
      <para tool="javadoc-to-mdoc">This class is abstract and encapsulates many common operations of the
 encoding process for all charsets. Encoders for a specific charset should
 extend this class and need only to implement the
 <c><see cref="M:Java.Nio.Charset.CharsetEncoder.EncodeLoop(Java.Nio.CharBuffer,Java.Nio.ByteBuffer)" /></c> method for basic
 encoding. If a subclass maintains internal state, it should also override the
 <c><see cref="M:Java.Nio.Charset.CharsetEncoder.ImplFlush(Java.Nio.ByteBuffer)" /></c> and <c><see cref="M:Java.Nio.Charset.CharsetEncoder.ImplReset" /></c> methods.

 </para>
      <para tool="javadoc-to-mdoc">This class is not thread-safe.<format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Java.Nio.Charset.Charset" /></c></term></item><item><term><c><see cref="T:Java.Nio.Charset.CharsetDecoder" /></c></term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CharsetEncoder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CharsetEncoder (Java.Nio.Charset.Charset cs, float averageBytesPerChar, float maxBytesPerChar);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Nio.Charset.Charset cs, float32 averageBytesPerChar, float32 maxBytesPerChar) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/nio/charset/Charset;FF)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="cs" Type="Java.Nio.Charset.Charset" />
        <Parameter Name="averageBytesPerChar" Type="System.Single" />
        <Parameter Name="maxBytesPerChar" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="cs">To be added.</param>
        <param name="averageBytesPerChar">To be added.</param>
        <param name="maxBytesPerChar">To be added.</param>
        <summary>Constructs a new <c>CharsetEncoder</c> using the given parameters and
 the replacement byte array <c>{ (byte) '?' </c>}.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>CharsetEncoder</c> using the given parameters and
 the replacement byte array <c>{ (byte) '?' </c>}.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#CharsetEncoder(java.nio.charset.Charset, float, float)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CharsetEncoder (Java.Nio.Charset.Charset cs, float averageBytesPerChar, float maxBytesPerChar, byte[] replacement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Nio.Charset.Charset cs, float32 averageBytesPerChar, float32 maxBytesPerChar, unsigned int8[] replacement) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/nio/charset/Charset;FF[B)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="cs" Type="Java.Nio.Charset.Charset" />
        <Parameter Name="averageBytesPerChar" Type="System.Single" />
        <Parameter Name="maxBytesPerChar" Type="System.Single" />
        <Parameter Name="replacement" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cs">To be added.</param>
        <param name="averageBytesPerChar">To be added.</param>
        <param name="maxBytesPerChar">To be added.</param>
        <param name="replacement">To be added.</param>
        <summary>Constructs a new <c>CharsetEncoder</c> using the given
 <c>Charset</c>, replacement byte array, average number and
 maximum number of bytes created by this encoder for one input character.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Constructs a new <c>CharsetEncoder</c> using the given
 <c>Charset</c>, replacement byte array, average number and
 maximum number of bytes created by this encoder for one input character.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#CharsetEncoder(java.nio.charset.Charset, float, float, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if any parameters are invalid.
</exception>
      </Docs>
    </Member>
    <Member MemberName="AverageBytesPerChar">
      <MemberSignature Language="C#" Value="public float AverageBytesPerChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 AverageBytesPerChar() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("averageBytesPerChar", "()F", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the average number of bytes created by this encoder for a single
 input character.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the average number of bytes created by this encoder for a single
 input character.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#averageBytesPerChar()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CanEncode">
      <MemberSignature Language="C#" Value="public virtual bool CanEncode (Java.Lang.ICharSequence sequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanEncode(class Java.Lang.ICharSequence sequence) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canEncode", "(Ljava/lang/CharSequence;)Z", "GetCanEncode_Ljava_lang_CharSequence_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="sequence">the given <c>CharSequence</c>.</param>
        <summary>Tests whether the given <c>CharSequence</c> can be encoded by this
 encoder.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Tests whether the given <c>CharSequence</c> can be encoded by this
 encoder.

 </para>
          <para tool="javadoc-to-mdoc">Note that this method may change the internal state of this encoder, so
 it should not be called when another encode process is ongoing, otherwise
 it will throw an <c>IllegalStateException</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#canEncode(java.lang.CharSequence)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if another encode process is ongoing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CanEncode">
      <MemberSignature Language="C#" Value="public virtual bool CanEncode (char c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanEncode(char c) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canEncode", "(C)Z", "GetCanEncode_CHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="c">the given encoder.</param>
        <summary>Tests whether the given character can be encoded by this encoder.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Tests whether the given character can be encoded by this encoder.

 </para>
          <para tool="javadoc-to-mdoc">Note that this method may change the internal state of this encoder, so
 it should not be called when another encoding process is ongoing,
 otherwise it will throw an <c>IllegalStateException</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#canEncode(char)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if another encode process is ongoing.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CanEncode">
      <MemberSignature Language="C#" Value="public bool CanEncode (string sequence);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanEncode(string sequence) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequence" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sequence">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Charset">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.Charset Charset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.Charset Charset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("charset", "()Ljava/nio/charset/Charset;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.Charset</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the <c><see cref="T:Java.Nio.Charset.Charset" /></c> which this encoder uses.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the <c><see cref="T:Java.Nio.Charset.Charset" /></c> which this encoder uses.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#charset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public Java.Nio.ByteBuffer Encode (Java.Nio.CharBuffer in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.ByteBuffer Encode(class Java.Nio.CharBuffer in) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("encode", "(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.Nio.CharBuffer" />
      </Parameters>
      <Docs>
        <param name="in">the input buffer.</param>
        <summary>This is a facade method for the encoding operation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This is a facade method for the encoding operation.
 </para>
          <para tool="javadoc-to-mdoc">
 This method encodes the remaining character sequence of the given
 character buffer into a new byte buffer. This method performs a complete
 encoding operation, resets at first, then encodes, and flushes at last.
 </para>
          <para tool="javadoc-to-mdoc">
 This method should not be invoked if another encode operation is ongoing.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#encode(java.nio.CharBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if another encoding operation is ongoing.</exception>
        <exception cref="T:Java.Nio.Charset.MalformedInputException">if an illegal input character sequence for this charset is
             encountered, and the action for malformed error is
             <c><see cref="P:Java.Nio.Charset.CodingErrorAction.Report" /></c></exception>
        <exception cref="T:Java.Nio.Charset.UnmappableCharacterException">if a legal but unmappable input character sequence for this
             charset is encountered, and the action for unmappable
             character error is
             <c><see cref="P:Java.Nio.Charset.CodingErrorAction.Report" /></c>.
             Unmappable means the Unicode character sequence at the input
             buffer's current position cannot be mapped to a equivalent
             byte sequence.</exception>
        <exception cref="T:Java.Nio.Charset.CharacterCodingException">if other exception happened during the encode operation.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CoderResult Encode (Java.Nio.CharBuffer in, Java.Nio.ByteBuffer out, bool endOfInput);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CoderResult Encode(class Java.Nio.CharBuffer in, class Java.Nio.ByteBuffer out, bool endOfInput) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("encode", "(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CoderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.Nio.CharBuffer" />
        <Parameter Name="out" Type="Java.Nio.ByteBuffer" />
        <Parameter Name="endOfInput" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="in">the input buffer.</param>
        <param name="out">the output buffer.</param>
        <param name="endOfInput">true if all the input characters have been provided.</param>
        <summary>Encodes characters starting at the current position of the given input
 buffer, and writes the equivalent byte sequence into the given output
 buffer from its current position.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Encodes characters starting at the current position of the given input
 buffer, and writes the equivalent byte sequence into the given output
 buffer from its current position.
 </para>
          <para tool="javadoc-to-mdoc">
 The buffers' position will be changed with the reading and writing
 operation, but their limits and marks will be kept intact.
 </para>
          <para tool="javadoc-to-mdoc">
 A <c>CoderResult</c> instance will be returned according to
 following rules:
 <list type="bullet"><item><term>A <c><see cref="M:Java.Nio.Charset.CoderResult.MalformedForLength(System.Int32)" /></c> result
 indicates that some malformed input error was encountered, and the
 erroneous characters start at the input buffer's position and their
 number can be got by result's <c><see cref="M:Java.Nio.Charset.CoderResult.Length" /></c>. This
 kind of result can be returned only if the malformed action is
 <c><see cref="P:Java.Nio.Charset.CodingErrorAction.Report" /></c>.</term></item><item><term><c><see cref="P:Java.Nio.Charset.CoderResult.Underflow" /></c> indicates that
 as many characters as possible in the input buffer have been encoded. If
 there is no further input and no characters left in the input buffer then
 this task is complete. If this is not the case then the client should
 call this method again supplying some more input characters.</term></item><item><term><c><see cref="P:Java.Nio.Charset.CoderResult.Overflow" /></c> indicates that the
 output buffer has been filled, while there are still some characters
 remaining in the input buffer. This method should be invoked again with a
 non-full output buffer.</term></item><item><term>A <c><see cref="M:Java.Nio.Charset.CoderResult.UnmappableForLength(System.Int32)" /></c>
 result indicates that some unmappable character error was encountered,
 and the erroneous characters start at the input buffer's position and
 their number can be got by result's <c><see cref="M:Java.Nio.Charset.CoderResult.Length" /></c>.
 This kind of result can be returned only on
 <c><see cref="P:Java.Nio.Charset.CodingErrorAction.Report" /></c>.</term></item></list></para>
          <para tool="javadoc-to-mdoc">
 The <c>endOfInput</c> parameter indicates if the invoker can
 provider further input. This parameter is true if and only if the
 characters in the current input buffer are all inputs for this encoding
 operation. Note that it is common and won't cause an error if the invoker
 sets false and then has no more input available, while it may cause an
 error if the invoker always sets true in several consecutive invocations.
 This would make the remaining input to be treated as malformed input.
 input.
 </para>
          <para tool="javadoc-to-mdoc">
 This method invokes the
 <c><see cref="M:Java.Nio.Charset.CharsetEncoder.EncodeLoop(Java.Nio.CharBuffer,Java.Nio.ByteBuffer)" /></c> method to
 implement the basic encode logic for a specific charset.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#encode(java.nio.CharBuffer, java.nio.ByteBuffer, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if the encoding operation has already started or no more
             input is needed in this encoding process.</exception>
        <exception cref="T:Java.Nio.Charset.CoderMalfunctionError">If the <c><see cref="M:Java.Nio.Charset.CharsetEncoder.EncodeLoop(Java.Nio.CharBuffer,Java.Nio.ByteBuffer)" /></c>
             method threw an <c>BufferUnderflowException</c> or
             <c>BufferUnderflowException</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="EncodeLoop">
      <MemberSignature Language="C#" Value="protected abstract Java.Nio.Charset.CoderResult EncodeLoop (Java.Nio.CharBuffer in, Java.Nio.ByteBuffer out);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Nio.Charset.CoderResult EncodeLoop(class Java.Nio.CharBuffer in, class Java.Nio.ByteBuffer out) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("encodeLoop", "(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;", "GetEncodeLoop_Ljava_nio_CharBuffer_Ljava_nio_ByteBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CoderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.Nio.CharBuffer" />
        <Parameter Name="out" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="in">the input buffer.</param>
        <param name="out">the output buffer.</param>
        <summary>Encodes characters into bytes.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Encodes characters into bytes. This method is called by
 <c><see cref="M:Java.Nio.Charset.CharsetEncoder.Encode(Java.Nio.CharBuffer,Java.Nio.ByteBuffer,Java.Nio.ByteBuffer)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 This method will implement the essential encoding operation, and it won't
 stop encoding until either all the input characters are read, the output
 buffer is filled, or some exception is encountered. Then it will
 return a <c>CoderResult</c> object indicating the result of the
 current encoding operation. The rule to construct the
 <c>CoderResult</c> is the same as for
 <c><see cref="M:Java.Nio.Charset.CharsetEncoder.Encode(Java.Nio.CharBuffer,Java.Nio.ByteBuffer,Java.Nio.ByteBuffer)" /></c>. When an
 exception is encountered in the encoding operation, most implementations
 of this method will return a relevant result object to the
 <c><see cref="M:Java.Nio.Charset.CharsetEncoder.Encode(Java.Nio.CharBuffer,Java.Nio.ByteBuffer,Java.Nio.ByteBuffer)" /></c> method, and
 subclasses may handle the exception and
 implement the error action themselves.
 </para>
          <para tool="javadoc-to-mdoc">
 The buffers are scanned from their current positions, and their positions
 will be modified accordingly, while their marks and limits will be
 intact. At most <c><see cref="M:Java.Nio.Buffer.Remaining" /></c> characters
 will be read, and <c><see cref="M:Java.Nio.Buffer.Remaining" /></c> bytes
 will be written.
 </para>
          <para tool="javadoc-to-mdoc">
 Note that some implementations may pre-scan the input buffer and return
 <c>CoderResult.UNDERFLOW</c> until it receives sufficient input.
 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#encodeLoop(java.nio.CharBuffer, java.nio.ByteBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CoderResult Flush (Java.Nio.ByteBuffer out);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CoderResult Flush(class Java.Nio.ByteBuffer out) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("flush", "(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CoderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="out">the given output buffer.</param>
        <summary>Flushes this encoder.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Flushes this encoder.
 </para>
          <para tool="javadoc-to-mdoc">
 This method will call <c><see cref="M:Java.Nio.Charset.CharsetEncoder.ImplFlush(Java.Nio.ByteBuffer)" /></c>. Some
 encoders may need to write some bytes to the output buffer when they have
 read all input characters. Subclasses can override
 <c><see cref="M:Java.Nio.Charset.CharsetEncoder.ImplFlush(Java.Nio.ByteBuffer)" /></c> to perform any writes that are
 required at the end of the output sequence, such as footers and other
 metadata.
 </para>
          <para tool="javadoc-to-mdoc">
 The maximum number of written bytes won't be larger than
 <c><see cref="M:Java.Nio.Buffer.Remaining" /></c>. If the encoder wants to
 write more bytes than the output buffer's available remaining space, then
 it will return <c>CoderResult.OVERFLOW</c>. This method must then be
 called again with a byte buffer that has free space.
 </para>
          <para tool="javadoc-to-mdoc">
 If the encoder was asked to flush its output when its input is incomplete,
 (because it ends with an unpaired surrogate, say) it may return
 <c>CodeResult.MALFORMED</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 In all other cases the encoder will return <c>CoderResult.UNDERFLOW</c>,
 which signifies that all the input so far has been successfully encoded.
 </para>
          <para tool="javadoc-to-mdoc">
 During the flush, the output buffer's position will be changed
 accordingly, while its mark and limit will be intact.
 </para>
          <para tool="javadoc-to-mdoc">
 This method is a no-op if the encoder has already been flushed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#flush(java.nio.ByteBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalStateException">if this encoder isn't already flushed or at end of input.
</exception>
      </Docs>
    </Member>
    <Member MemberName="ImplFlush">
      <MemberSignature Language="C#" Value="protected virtual Java.Nio.Charset.CoderResult ImplFlush (Java.Nio.ByteBuffer out);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Nio.Charset.CoderResult ImplFlush(class Java.Nio.ByteBuffer out) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implFlush", "(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;", "GetImplFlush_Ljava_nio_ByteBuffer_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CoderResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Java.Nio.ByteBuffer" />
      </Parameters>
      <Docs>
        <param name="out">the output buffer.</param>
        <summary>Flushes this encoder.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Flushes this encoder. The default implementation does nothing and always
 returns <c>CoderResult.UNDERFLOW</c>; this method can be
 overridden if needed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#implFlush(java.nio.ByteBuffer)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ImplOnMalformedInput">
      <MemberSignature Language="C#" Value="protected virtual void ImplOnMalformedInput (Java.Nio.Charset.CodingErrorAction newAction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplOnMalformedInput(class Java.Nio.Charset.CodingErrorAction newAction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implOnMalformedInput", "(Ljava/nio/charset/CodingErrorAction;)V", "GetImplOnMalformedInput_Ljava_nio_charset_CodingErrorAction_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAction" Type="Java.Nio.Charset.CodingErrorAction" />
      </Parameters>
      <Docs>
        <param name="newAction">the new action.
</param>
        <summary>Notifies that this encoder's <c>CodingErrorAction</c> specified
 for malformed input error has been changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Notifies that this encoder's <c>CodingErrorAction</c> specified
 for malformed input error has been changed. The default implementation
 does nothing; this method can be overridden if needed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#implOnMalformedInput(java.nio.charset.CodingErrorAction)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ImplOnUnmappableCharacter">
      <MemberSignature Language="C#" Value="protected virtual void ImplOnUnmappableCharacter (Java.Nio.Charset.CodingErrorAction newAction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplOnUnmappableCharacter(class Java.Nio.Charset.CodingErrorAction newAction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implOnUnmappableCharacter", "(Ljava/nio/charset/CodingErrorAction;)V", "GetImplOnUnmappableCharacter_Ljava_nio_charset_CodingErrorAction_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAction" Type="Java.Nio.Charset.CodingErrorAction" />
      </Parameters>
      <Docs>
        <param name="newAction">the new action.
</param>
        <summary>Notifies that this encoder's <c>CodingErrorAction</c> specified
 for unmappable character error has been changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Notifies that this encoder's <c>CodingErrorAction</c> specified
 for unmappable character error has been changed. The default
 implementation does nothing; this method can be overridden if needed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#implOnUnmappableCharacter(java.nio.charset.CodingErrorAction)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ImplReplaceWith">
      <MemberSignature Language="C#" Value="protected virtual void ImplReplaceWith (byte[] newReplacement);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplReplaceWith(unsigned int8[] newReplacement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implReplaceWith", "([B)V", "GetImplReplaceWith_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newReplacement" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="newReplacement">the new replacement string.
</param>
        <summary>Notifies that this encoder's replacement has been changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Notifies that this encoder's replacement has been changed. The default
 implementation does nothing; this method can be overridden if needed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#implReplaceWith(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ImplReset">
      <MemberSignature Language="C#" Value="protected virtual void ImplReset ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ImplReset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("implReset", "()V", "GetImplResetHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets this encoder's charset related state.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Resets this encoder's charset related state. The default implementation
 does nothing; this method can be overridden if needed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#implReset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsLegalReplacement">
      <MemberSignature Language="C#" Value="public virtual bool IsLegalReplacement (byte[] replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsLegalReplacement(unsigned int8[] replacement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isLegalReplacement", "([B)Z", "GetIsLegalReplacement_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="repl" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="replacement">To be added.</param>
        <summary>Tests whether the given argument is legal as this encoder's replacement byte
 array.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Tests whether the given argument is legal as this encoder's replacement byte
 array. The given byte array is legal if and only if it can be decoded into
 characters.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#isLegalReplacement(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MalformedInputAction">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Charset.CodingErrorAction MalformedInputAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Charset.CodingErrorAction MalformedInputAction() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("malformedInputAction", "()Ljava/nio/charset/CodingErrorAction;", "GetMalformedInputActionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CodingErrorAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this encoder's <c>CodingErrorAction</c> when a malformed
 input error occurred during the encoding process.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this encoder's <c>CodingErrorAction</c> when a malformed
 input error occurred during the encoding process.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#malformedInputAction()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="MaxBytesPerChar">
      <MemberSignature Language="C#" Value="public float MaxBytesPerChar ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float32 MaxBytesPerChar() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("maxBytesPerChar", "()F", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the maximum number of bytes which can be created by this encoder for
 one input character, must be positive.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the maximum number of bytes which can be created by this encoder for
 one input character, must be positive.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#maxBytesPerChar()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnMalformedInput">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CharsetEncoder OnMalformedInput (Java.Nio.Charset.CodingErrorAction newAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CharsetEncoder OnMalformedInput(class Java.Nio.Charset.CodingErrorAction newAction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onMalformedInput", "(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAction" Type="Java.Nio.Charset.CodingErrorAction" />
      </Parameters>
      <Docs>
        <param name="newAction">the new action on malformed input error.</param>
        <summary>Sets this encoder's action on malformed input error.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets this encoder's action on malformed input error.

 This method will call the
 <c><see cref="M:Java.Nio.Charset.CharsetEncoder.ImplOnMalformedInput(Java.Nio.Charset.CodingErrorAction)" /></c>
 method with the given new action as argument.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#onMalformedInput(java.nio.charset.CodingErrorAction)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given newAction is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="OnUnmappableCharacter">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CharsetEncoder OnUnmappableCharacter (Java.Nio.Charset.CodingErrorAction newAction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CharsetEncoder OnUnmappableCharacter(class Java.Nio.Charset.CodingErrorAction newAction) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onUnmappableCharacter", "(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAction" Type="Java.Nio.Charset.CodingErrorAction" />
      </Parameters>
      <Docs>
        <param name="newAction">the new action on unmappable character error.</param>
        <summary>Sets this encoder's action on unmappable character error.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets this encoder's action on unmappable character error.

 This method will call the
 <c><see cref="M:Java.Nio.Charset.CharsetEncoder.ImplOnUnmappableCharacter(Java.Nio.Charset.CodingErrorAction)" /></c>
 method with the given new action as argument.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#onUnmappableCharacter(java.nio.charset.CodingErrorAction)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given newAction is null.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Replacement">
      <MemberSignature Language="C#" Value="public byte[] Replacement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Replacement() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("replacement", "()[B", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the replacement byte array, which is never null or empty.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the replacement byte array, which is never null or empty.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#replacement()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReplaceWith">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CharsetEncoder ReplaceWith (byte[] replacement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CharsetEncoder ReplaceWith(unsigned int8[] replacement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("replaceWith", "([B)Ljava/nio/charset/CharsetEncoder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetEncoder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="replacement" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="replacement">the replacement byte array, cannot be null or empty, its
            length cannot be larger than <c>maxBytesPerChar</c>,
            and it must be legal replacement, which can be justified by
            calling <c>isLegalReplacement(byte[] replacement)</c>.</param>
        <summary>Sets the new replacement value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the new replacement value.

 This method first checks the given replacement's validity, then changes
 the replacement value and finally calls the
 <c><see cref="M:Java.Nio.Charset.CharsetEncoder.ImplReplaceWith(System.Byte[])" /></c> method with the given
 new replacement as argument.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#replaceWith(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given replacement cannot satisfy the requirement
             mentioned above.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public Java.Nio.Charset.CharsetEncoder Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Nio.Charset.CharsetEncoder Reset() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("reset", "()Ljava/nio/charset/CharsetEncoder;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CharsetEncoder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Resets this encoder.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Resets this encoder. This method will reset the internal state and then
 calls <c><see cref="M:Java.Nio.Charset.CharsetEncoder.ImplReset" /></c> to reset any state related to the
 specific charset.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#reset()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnmappableCharacterAction">
      <MemberSignature Language="C#" Value="public virtual Java.Nio.Charset.CodingErrorAction UnmappableCharacterAction ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Nio.Charset.CodingErrorAction UnmappableCharacterAction() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unmappableCharacterAction", "()Ljava/nio/charset/CodingErrorAction;", "GetUnmappableCharacterActionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.Charset.CodingErrorAction</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns this encoder's <c>CodingErrorAction</c> when unmappable
 character occurred during encoding process.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns this encoder's <c>CodingErrorAction</c> when unmappable
 character occurred during encoding process.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/java/nio/charset/CharsetEncoder.html#unmappableCharacterAction()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
