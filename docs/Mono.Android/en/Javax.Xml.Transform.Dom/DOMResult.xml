<Type Name="DOMResult" FullName="Javax.Xml.Transform.Dom.DOMResult">
  <TypeSignature Language="C#" Value="public class DOMResult : Java.Lang.Object, IDisposable, Javax.Xml.Transform.IResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DOMResult extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Javax.Xml.Transform.IResult, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Javax.Xml.Transform.IResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("javax/xml/transform/dom/DOMResult", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="8">
    <summary>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">Acts as a holder for a transformation result tree in the form of a Document Object Model (DOM) tree.</para>
      <para tool="javadoc-to-mdoc">If no output DOM source is set, the transformation will create a Document node as the holder for the result of the transformation,
 which may be retrieved with <c><see cref="P:Javax.Xml.Transform.Dom.DOMResult.Node" /></c>.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 8" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DOMResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Zero-argument default constructor.</para>
          <para tool="javadoc-to-mdoc">
            <c>node</c>,
 <c>siblingNode</c> and
 <c>systemId</c>
 will be set to <c>null</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html#DOMResult()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DOMResult (Org.W3c.Dom.INode node);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Org.W3c.Dom.INode node) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Lorg/w3c/dom/Node;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="node" Type="Org.W3c.Dom.INode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Use a DOM node to create a new output target.</para>
          <para tool="javadoc-to-mdoc">In practice, the node should be
 a <c><see cref="T:Org.W3c.Dom.IDocument" /></c> node,
 a <c><see cref="T:Org.W3c.Dom.IDocumentFragment" /></c> node, or
 a <c><see cref="T:Org.W3c.Dom.IElement" /></c> node.
 In other words, a node that accepts children.</para>
          <para tool="javadoc-to-mdoc">
            <c>siblingNode</c> and
 <c>systemId</c>
 will be set to <c>null</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html#DOMResult(org.w3c.dom.Node)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DOMResult (Org.W3c.Dom.INode node, Org.W3c.Dom.INode nextSibling);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Org.W3c.Dom.INode node, class Org.W3c.Dom.INode nextSibling) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="node" Type="Org.W3c.Dom.INode" />
        <Parameter Name="nextSibling" Type="Org.W3c.Dom.INode" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="nextSibling">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Use a DOM node to create a new output target specifying the child node where the result nodes should be inserted before.</para>
          <para tool="javadoc-to-mdoc">In practice, <c>node</c> and <c>nextSibling</c> should be
 a <c><see cref="T:Org.W3c.Dom.IDocument" /></c> node,
 a <c><see cref="T:Org.W3c.Dom.IDocumentFragment" /></c> node, or
 a <c><see cref="T:Org.W3c.Dom.IElement" /></c> node.
 In other words, a node that accepts children.</para>
          <para tool="javadoc-to-mdoc">Use <c>nextSibling</c> to specify the child node
 where the result nodes should be inserted before.
 If <c>nextSibling</c> is not a sibling of <c>node</c>,
 then an <c>IllegalArgumentException</c> is thrown.
 If <c>node</c> is <c>null</c> and <c>nextSibling</c> is not <c>null</c>,
 then an <c>IllegalArgumentException</c> is thrown.
 If <c>nextSibling</c> is <c>null</c>,
 then the behavior is the same as calling <c><see cref="C:Javax.Xml.Transform.Dom.DOMResult(Org.W3c.Dom.INode)" /></c>,
 i.e. append the result nodes as the last child of the specified <c>node</c>.</para>
          <para tool="javadoc-to-mdoc">
            <c>systemId</c> will be set to <c>null</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html#DOMResult(org.w3c.dom.Node, org.w3c.dom.Node)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If <c>nextSibling</c> is not a sibling of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If <c>node</c> is <c>null</c> and <c>nextSibling</c> is not <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DOMResult (Org.W3c.Dom.INode node, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Org.W3c.Dom.INode node, string systemId) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Lorg/w3c/dom/Node;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="node" Type="Org.W3c.Dom.INode" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="systemId">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Use a DOM node to create a new output target with the specified System ID.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">In practice, the node should be
 a <c><see cref="T:Org.W3c.Dom.IDocument" /></c> node,
 a <c><see cref="T:Org.W3c.Dom.IDocumentFragment" /></c> node, or
 a <c><see cref="T:Org.W3c.Dom.IElement" /></c> node.
 In other words, a node that accepts children.</para>
          <para tool="javadoc-to-mdoc">
            <c>siblingNode</c> will be set to <c>null</c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html#DOMResult(org.w3c.dom.Node, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DOMResult (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DOMResult (Org.W3c.Dom.INode node, Org.W3c.Dom.INode nextSibling, string systemId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Org.W3c.Dom.INode node, class Org.W3c.Dom.INode nextSibling, string systemId) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Lorg/w3c/dom/Node;Lorg/w3c/dom/Node;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="node" Type="Org.W3c.Dom.INode" />
        <Parameter Name="nextSibling" Type="Org.W3c.Dom.INode" />
        <Parameter Name="systemId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">To be added.</param>
        <param name="nextSibling">To be added.</param>
        <param name="systemId">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">Use a DOM node to create a new output target specifying the child node where the result nodes should be inserted before and
 the specified System ID.</para>
          <para tool="javadoc-to-mdoc">In practice, <c>node</c> and <c>nextSibling</c> should be
 a <c><see cref="T:Org.W3c.Dom.IDocument" /></c> node,
 a <c><see cref="T:Org.W3c.Dom.IDocumentFragment" /></c> node, or a
 <c><see cref="T:Org.W3c.Dom.IElement" /></c> node.
 In other words, a node that accepts children.</para>
          <para tool="javadoc-to-mdoc">Use <c>nextSibling</c> to specify the child node
 where the result nodes should be inserted before.
 If <c>nextSibling</c> is not a sibling of <c>node</c>,
 then an <c>IllegalArgumentException</c> is thrown.
 If <c>node</c> is <c>null</c> and <c>nextSibling</c> is not <c>null</c>,
 then an <c>IllegalArgumentException</c> is thrown.
 If <c>nextSibling</c> is <c>null</c>,
 then the behavior is the same as calling <c><see cref="C:Javax.Xml.Transform.Dom.DOMResult(Org.W3c.Dom.INode,System.String)" /></c>,
 i.e. append the result nodes as the last child of the specified node and use the specified System ID.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html#DOMResult(org.w3c.dom.Node, org.w3c.dom.Node, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If <c>nextSibling</c> is not a sibling of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If <c>node</c> is <c>null</c> and <c>nextSibling</c> is not <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Feature">
      <MemberSignature Language="C#" Value="public const string Feature;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Feature" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FEATURE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">If <c><see cref="M:Javax.Xml.Transform.TransformerFactory.GetFeature(System.String)" /></c>
 returns <c>true</c> when passed this value as an argument,
 the <c>Transformer</c> supports <c>Result</c> output of this type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html#FEATURE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="NextSibling">
      <MemberSignature Language="C#" Value="public virtual Org.W3c.Dom.INode NextSibling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.INode NextSibling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNextSibling", "()Lorg/w3c/dom/Node;", "GetGetNextSiblingHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNextSibling", "(Lorg/w3c/dom/Node;)V", "GetSetNextSibling_Lorg_w3c_dom_Node_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.INode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html#getNextSibling()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Get the child node before which the result nodes will be inserted.</para>
          <para tool="javadoc-to-mdoc">If no node was set via
 <c><see cref="C:Javax.Xml.Transform.Dom.DOMResult(Org.W3c.Dom.INode,Org.W3c.Dom.INode)" /></c>,
 <c><see cref="C:Javax.Xml.Transform.Dom.DOMResult(Org.W3c.Dom.INode,Org.W3c.Dom.INode,Org.W3c.Dom.INode)" /></c> or
 <c><see cref="P:Javax.Xml.Transform.Dom.DOMResult.NextSibling" /></c>,
 then <c>null</c> will be returned.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html#setNextSibling(org.w3c.dom.Node)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Set the child node before which the result nodes will be inserted.</para>
          <para tool="javadoc-to-mdoc">Use <c>nextSibling</c> to specify the child node
 before which the result nodes should be inserted.
 If <c>nextSibling</c> is not a descendant of <c>node</c>,
 then an <c>IllegalArgumentException</c> is thrown.
 If <c>node</c> is <c>null</c> and <c>nextSibling</c> is not <c>null</c>,
 then an <c>IllegalStateException</c> is thrown.
 If <c>nextSibling</c> is <c>null</c>,
 then the behavior is the same as calling <c><see cref="C:Javax.Xml.Transform.Dom.DOMResult(Org.W3c.Dom.INode)" /></c>,
 i.e. append the result nodes as the last child of the specified <c>node</c>.</para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalArgumentException">If <c>nextSibling</c> is not a descendant of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>node</c> is <c>null</c> and <c>nextSibling</c> is not <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If <c>nextSibling</c> is not a descendant of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>node</c> is <c>null</c> and <c>nextSibling</c> is not <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If <c>nextSibling</c> is not a descendant of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>node</c> is <c>null</c> and <c>nextSibling</c> is not <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If <c>nextSibling</c> is not a descendant of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>node</c> is <c>null</c> and <c>nextSibling</c> is not <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If <c>nextSibling</c> is not a descendant of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>node</c> is <c>null</c> and <c>nextSibling</c> is not <c>null</c>.</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If <c>nextSibling</c> is not a descendant of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>node</c> is <c>null</c> and <c>nextSibling</c> is not <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Node">
      <MemberSignature Language="C#" Value="public virtual Org.W3c.Dom.INode Node { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.W3c.Dom.INode Node" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNode", "()Lorg/w3c/dom/Node;", "GetGetNodeHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setNode", "(Lorg/w3c/dom/Node;)V", "GetSetNode_Lorg_w3c_dom_Node_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.W3c.Dom.INode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html#getNode()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Get the node that will contain the result DOM tree.</para>
          <para tool="javadoc-to-mdoc">If no node was set via
 <c><see cref="C:Javax.Xml.Transform.Dom.DOMResult(Org.W3c.Dom.INode)" /></c>,
 <c><see cref="C:Javax.Xml.Transform.Dom.DOMResult(Org.W3c.Dom.INode,System.String)" /></c>,
 <c><see cref="C:Javax.Xml.Transform.Dom.DOMResult(Org.W3c.Dom.INode,Org.W3c.Dom.INode)" /></c>,
 <c><see cref="C:Javax.Xml.Transform.Dom.DOMResult(Org.W3c.Dom.INode,Org.W3c.Dom.INode,Org.W3c.Dom.INode)" /></c> or
 <c><see cref="P:Javax.Xml.Transform.Dom.DOMResult.Node" /></c>,
 then the node will be set by the transformation, and may be obtained from this method once the transformation is complete.
 Calling this method before the transformation will return <c>null</c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html#setNode(org.w3c.dom.Node)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Set the node that will contain the result DOM tree.</para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">In practice, the node should be
 a <c><see cref="T:Org.W3c.Dom.IDocument" /></c> node,
 a <c><see cref="T:Org.W3c.Dom.IDocumentFragment" /></c> node, or
 a <c><see cref="T:Org.W3c.Dom.IElement" /></c> node.
 In other words, a node that accepts children.</para>
          <para tool="javadoc-to-mdoc">An <c>IllegalStateException</c> is thrown if <c>nextSibling</c> is not <c>null</c> and
 <c>node</c> is not a parent of <c>nextSibling</c>.
 An <c>IllegalStateException</c> is thrown if <c>node</c> is <c>null</c> and
 <c>nextSibling</c> is not <c>null</c>.</para>
        </remarks>
        <since version="Added in API level 8" />
        <exception cref="T:Java.Lang.IllegalStateException">If <c>nextSibling</c> is not <c>null</c> and
   <c>nextSibling</c> is not a child of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>node</c> is <c>null</c> and
   <c>nextSibling</c> is not <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>nextSibling</c> is not <c>null</c> and
   <c>nextSibling</c> is not a child of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>node</c> is <c>null</c> and
   <c>nextSibling</c> is not <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>nextSibling</c> is not <c>null</c> and
   <c>nextSibling</c> is not a child of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>node</c> is <c>null</c> and
   <c>nextSibling</c> is not <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>nextSibling</c> is not <c>null</c> and
   <c>nextSibling</c> is not a child of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>node</c> is <c>null</c> and
   <c>nextSibling</c> is not <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>nextSibling</c> is not <c>null</c> and
   <c>nextSibling</c> is not a child of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>node</c> is <c>null</c> and
   <c>nextSibling</c> is not <c>null</c>.
</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>nextSibling</c> is not <c>null</c> and
   <c>nextSibling</c> is not a child of <c>node</c>.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">If <c>node</c> is <c>null</c> and
   <c>nextSibling</c> is not <c>null</c>.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SystemId">
      <MemberSignature Language="C#" Value="public virtual string SystemId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SystemId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSystemId", "()Ljava/lang/String;", "GetGetSystemIdHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSystemId", "(Ljava/lang/String;)V", "GetSetSystemId_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html#getSystemId()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Get the System Identifier.</para>
          <para tool="javadoc-to-mdoc">If no System ID was set via
 <c><see cref="C:Javax.Xml.Transform.Dom.DOMResult(Org.W3c.Dom.INode,System.String)" /></c>,
 <c><see cref="C:Javax.Xml.Transform.Dom.DOMResult(Org.W3c.Dom.INode,Org.W3c.Dom.INode,Org.W3c.Dom.INode)" /></c> or
 <c><see cref="P:Javax.Xml.Transform.Dom.DOMResult.SystemId" /></c>,
 then <c>null</c> will be returned.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/javax/xml/transform/dom/DOMResult.html#setSystemId(java.lang.String)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc">Set the systemId that may be used in association with the node.</para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
