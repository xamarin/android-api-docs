<Type Name="WifiP2pDnsSdServiceRequest" FullName="Android.Net.Wifi.P2p.Nsd.WifiP2pDnsSdServiceRequest">
  <TypeSignature Language="C#" Value="public class WifiP2pDnsSdServiceRequest : Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WifiP2pDnsSdServiceRequest extends Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="16">
    <summary>A class for creating a Bonjour service discovery request for use with
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.AddServiceRequest(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest)" /></c> and <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.RemoveServiceRequest(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest)" /></c></summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A class for creating a Bonjour service discovery request for use with
 <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.AddServiceRequest(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest)" /></c> and <c><see cref="M:Android.Net.Wifi.P2p.WifiP2pManager.RemoveServiceRequest(.Channel,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest,Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest)" /></c></para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Android.Net.Wifi.P2p.WifiP2pManager" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Android.Net.Wifi.P2p.Nsd.WifiP2pServiceRequest" />
            </c>
          </term>
        </item>
        <item>
          <term>
            <c>
              <see cref="T:Android.Net.Wifi.P2p.Nsd.WifiP2pUpnpServiceRequest" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 16" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WifiP2pDnsSdServiceRequest (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.P2p.Nsd.WifiP2pDnsSdServiceRequest NewInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Net.Wifi.P2p.Nsd.WifiP2pDnsSdServiceRequest NewInstance() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "()Landroid/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.P2p.Nsd.WifiP2pDnsSdServiceRequest</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Create a service discovery request to search all Bonjour services.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a service discovery request to search all Bonjour services.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest.html#newInstance()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.P2p.Nsd.WifiP2pDnsSdServiceRequest NewInstance (string serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Net.Wifi.P2p.Nsd.WifiP2pDnsSdServiceRequest NewInstance(string serviceType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "(Ljava/lang/String;)Landroid/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.P2p.Nsd.WifiP2pDnsSdServiceRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceType">service type. Cannot be null <format type="text/html"><br /></format>
  "_afpovertcp._tcp."(Apple File Sharing over TCP)<format type="text/html"><br /></format>
  "_ipp._tcp" (IP Printing over TCP)<format type="text/html"><br /></format>
  "_http._tcp" (http service)</param>
        <summary>Create a service discovery to search for Bonjour services with the specified
 service type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a service discovery to search for Bonjour services with the specified
 service type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest.html#newInstance(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public static Android.Net.Wifi.P2p.Nsd.WifiP2pDnsSdServiceRequest NewInstance (string instanceName, string serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Net.Wifi.P2p.Nsd.WifiP2pDnsSdServiceRequest NewInstance(string instanceName, string serviceType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("newInstance", "(Ljava/lang/String;Ljava/lang/String;)Landroid/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Wifi.P2p.Nsd.WifiP2pDnsSdServiceRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceName" Type="System.String" />
        <Parameter Name="serviceType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instanceName">instance name. Cannot be null. <format type="text/html"><br /></format>
  "MyPrinter"</param>
        <param name="serviceType">service type. Cannot be null. <format type="text/html"><br /></format>
 e.g) <format type="text/html"><br /></format>
  "_afpovertcp._tcp"(Apple File Sharing over TCP)<format type="text/html"><br /></format>
  "_ipp._tcp" (IP Printing over TCP)<format type="text/html"><br /></format></param>
        <summary>Create a service discovery request to get the TXT data from the specified
 Bonjour service.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a service discovery request to get the TXT data from the specified
 Bonjour service.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/net/wifi/p2p/nsd/WifiP2pDnsSdServiceRequest.html#newInstance(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
