<Type Name="Allocation" FullName="Android.Renderscripts.Allocation">
  <TypeSignature Language="VB.NET" Value="Public Class Allocation&#xA;Inherits BaseObj" />
  <TypeSignature Language="C++ CLI" Value="public ref class Allocation : Android::Renderscripts::BaseObj" />
  <TypeSignature Language="C#" Value="public class Allocation : Android.Renderscripts.BaseObj" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Allocation extends Android.Renderscripts.BaseObj" />
  <TypeSignature Language="DocId" Value="T:Android.Renderscripts.Allocation" />
  <TypeSignature Language="F#" Value="type Allocation = class&#xA;    inherit BaseObj" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Renderscripts.BaseObj</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/renderscript/Allocation", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/renderscript/Allocation", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0", "This class is obsoleted in this android platform")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0", "This class is obsoleted in this android platform")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary>This class provides the primary method through which data is passed to
            and from RenderScript kernels.</summary>
    <remarks>
      <para>This class provides the primary method through which data is passed to
            and from RenderScript kernels.  An Allocation provides the backing store for
            a given <c>android.renderscript.Type</c>.</para>
      <para>An Allocation also contains a set of usage flags that denote how the
            Allocation could be used. For example, an Allocation may have usage flags
            specifying that it can be used from a script as well as input to a <c>android.renderscript.Sampler</c>. A developer must synchronize across these
            different usages using <c>android.renderscript.Allocation#syncAll</c> in
            order to ensure that different users of the Allocation have a consistent view
            of memory. For example, in the case where an Allocation is used as the output
            of one kernel and as Sampler input in a later kernel, a developer must call
            <c>#syncAll syncAll(Allocation.USAGE_SCRIPT)</c> prior to launching the
            second kernel to ensure correctness.</para>
      <para>An Allocation can be populated with the <c>#copyFrom</c> routines. For
            more complex Element types, the <c>#copyFromUnchecked</c> methods can be
            used to copy from byte arrays or similar constructs.</para>
      <para>&lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guides&lt;/h3&gt;</para>
      <para>For more information about creating an application that uses RenderScript, read the
            <see href="https://developer.android.com/guide/topics/renderscript/index.html">RenderScript</see> developer guide.</para>
      <para>&lt;/div&gt;</para>
      <para>This member is deprecated. Renderscript has been deprecated in API level 31. Please refer to the <see href="https://developer.android.com/guide/topics/renderscript/migration-guide">migration
            guide</see> for the proposed alternatives.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/renderscript/Allocation" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Allocation(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected Allocation (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Renderscripts.Allocation : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Renderscripts.Allocation" Usage="new Android.Renderscripts.Allocation (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferAvailable">
      <MemberSignature Language="VB.NET" Value="Public Custom Event BufferAvailable As EventHandler(Of Allocation.BufferAvailableEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;Android::Renderscripts::Allocation::BufferAvailableEventArgs ^&gt; ^ BufferAvailable;" />
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Renderscripts.Allocation.BufferAvailableEventArgs&gt; BufferAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Renderscripts.Allocation/BufferAvailableEventArgs&gt; BufferAvailable" />
      <MemberSignature Language="DocId" Value="E:Android.Renderscripts.Allocation.BufferAvailable" />
      <MemberSignature Language="F#" Value="member this.BufferAvailable : EventHandler&lt;Android.Renderscripts.Allocation.BufferAvailableEventArgs&gt; " Usage="member this.BufferAvailable : System.EventHandler&lt;Android.Renderscripts.Allocation.BufferAvailableEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[add: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;add: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[remove: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;remove: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Renderscripts.Allocation+BufferAvailableEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ByteBuffer">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ByteBuffer As ByteBuffer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Nio::ByteBuffer ^ ByteBuffer { Java::Nio::ByteBuffer ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Java.Nio.ByteBuffer? ByteBuffer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Nio.ByteBuffer ByteBuffer" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.Allocation.ByteBuffer" />
      <MemberSignature Language="F#" Value="member this.ByteBuffer : Java.Nio.ByteBuffer" Usage="Android.Renderscripts.Allocation.ByteBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getByteBuffer", "()Ljava/nio/ByteBuffer;", "GetGetByteBufferHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getByteBuffer", "()Ljava/nio/ByteBuffer;", "GetGetByteBufferHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Nio.ByteBuffer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or creates a ByteBuffer that contains the raw data of the current Allocation.</summary>
        <value>ByteBuffer The ByteBuffer associated with raw data pointer of the Allocation.</value>
        <remarks>
          <para>Gets or creates a ByteBuffer that contains the raw data of the current Allocation.</para>
          <para>If the Allocation is created with USAGE_IO_INPUT, the returned ByteBuffer
            would contain the up-to-date data as READ ONLY.
            For a 2D or 3D Allocation, the raw data maybe padded so that each row of
            the Allocation has certain alignment. The size of each row including padding,
            called stride, can be queried using the <c>#getStride()</c> method.
            
            Note: Operating on the ByteBuffer of a destroyed Allocation will triger errors.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#getByteBuffer()" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.getByteBuffer()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesSize">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BytesSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int BytesSize { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int BytesSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesSize" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.Allocation.BytesSize" />
      <MemberSignature Language="F#" Value="member this.BytesSize : int" Usage="Android.Renderscripts.Allocation.BytesSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBytesSize", "()I", "GetGetBytesSizeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBytesSize", "()I", "GetGetBytesSizeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the size of the Allocation in bytes.</summary>
        <value>size of the Allocation in bytes.</value>
        <remarks>
          <para>Get the size of the Allocation in bytes.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#getBytesSize()" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.getBytesSize()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeFrom (off As Integer, count As Integer, array As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeFrom(int off, int count, Java::Lang::Object ^ array);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, Java.Lang.Object? array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, class Java.Lang.Object array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeFrom(System.Int32,System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeFrom : int * int * Java.Lang.Object -&gt; unit&#xA;override this.Copy1DRangeFrom : int * int * Java.Lang.Object -&gt; unit" Usage="allocation.Copy1DRangeFrom (off, count, array)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeFrom", "(IILjava/lang/Object;)V", "GetCopy1DRangeFrom_IILjava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeFrom", "(IILjava/lang/Object;)V", "GetCopy1DRangeFrom_IILjava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="array">The source array.</param>
        <summary>Copy an array into a 1D region of this Allocation.</summary>
        <remarks>
          <para>Copy an array into a 1D region of this Allocation.  This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> does not match the component type
            of the array passed in.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeFrom(int,%20int,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeFrom(int, int, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeFrom (off As Integer, count As Integer, d As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeFrom(int off, int count, cli::array &lt;System::Byte&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, byte[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, unsigned int8[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeFrom(System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeFrom : int * int * byte[] -&gt; unit&#xA;override this.Copy1DRangeFrom : int * int * byte[] -&gt; unit" Usage="allocation.Copy1DRangeFrom (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeFrom", "(II[B)V", "GetCopy1DRangeFrom_IIarrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeFrom", "(II[B)V", "GetCopy1DRangeFrom_IIarrayBHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy an array into a 1D region of this Allocation.</summary>
        <remarks>
          <para>Copy an array into a 1D region of this Allocation.  This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is not an 8 bit integer nor a vector of 8 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeFrom(int,%20int,%20byte[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeFrom(int, int, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeFrom (off As Integer, count As Integer, d As Short())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeFrom(int off, int count, cli::array &lt;short&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, short[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, int16[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeFrom(System.Int32,System.Int32,System.Int16[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeFrom : int * int * int16[] -&gt; unit&#xA;override this.Copy1DRangeFrom : int * int * int16[] -&gt; unit" Usage="allocation.Copy1DRangeFrom (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeFrom", "(II[S)V", "GetCopy1DRangeFrom_IIarraySHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeFrom", "(II[S)V", "GetCopy1DRangeFrom_IIarraySHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy an array into a 1D region of this Allocation.</summary>
        <remarks>
          <para>Copy an array into a 1D region of this Allocation.  This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is not an 16 bit integer nor a vector of 16 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeFrom(int,%20int,%20short[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeFrom(int, int, short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeFrom (off As Integer, count As Integer, d As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeFrom(int off, int count, cli::array &lt;int&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, int[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, int32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeFrom(System.Int32,System.Int32,System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeFrom : int * int * int[] -&gt; unit&#xA;override this.Copy1DRangeFrom : int * int * int[] -&gt; unit" Usage="allocation.Copy1DRangeFrom (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeFrom", "(II[I)V", "GetCopy1DRangeFrom_IIarrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeFrom", "(II[I)V", "GetCopy1DRangeFrom_IIarrayIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy an array into a 1D region of this Allocation.</summary>
        <remarks>
          <para>Copy an array into a 1D region of this Allocation.  This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is not an 32 bit integer nor a vector of 32 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeFrom(int,%20int,%20int[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeFrom(int, int, int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeFrom (off As Integer, count As Integer, d As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeFrom(int off, int count, cli::array &lt;float&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, float[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, float32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeFrom(System.Int32,System.Int32,System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeFrom : int * int * single[] -&gt; unit&#xA;override this.Copy1DRangeFrom : int * int * single[] -&gt; unit" Usage="allocation.Copy1DRangeFrom (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeFrom", "(II[F)V", "GetCopy1DRangeFrom_IIarrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeFrom", "(II[F)V", "GetCopy1DRangeFrom_IIarrayFHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array.</param>
        <summary>Copy an array into a 1D region of this Allocation.</summary>
        <remarks>
          <para>Copy an array into a 1D region of this Allocation.  This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is neither a 32 bit float nor a vector of
            32 bit floats <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeFrom(int,%20int,%20float[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeFrom(int, int, float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeFrom (off As Integer, count As Integer, data As Allocation, dataOff As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeFrom(int off, int count, Android::Renderscripts::Allocation ^ data, int dataOff);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, Android.Renderscripts.Allocation? data, int dataOff);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, class Android.Renderscripts.Allocation data, int32 dataOff) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeFrom(System.Int32,System.Int32,Android.Renderscripts.Allocation,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeFrom : int * int * Android.Renderscripts.Allocation * int -&gt; unit&#xA;override this.Copy1DRangeFrom : int * int * Android.Renderscripts.Allocation * int -&gt; unit" Usage="allocation.Copy1DRangeFrom (off, count, data, dataOff)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeFrom", "(IILandroid/renderscript/Allocation;I)V", "GetCopy1DRangeFrom_IILandroid_renderscript_Allocation_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeFrom", "(IILandroid/renderscript/Allocation;I)V", "GetCopy1DRangeFrom_IILandroid_renderscript_Allocation_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="data" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="dataOff" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="data">the source data allocation.</param>
        <param name="dataOff">off The offset of the first element in data to
                     be copied.</param>
        <summary>Copy part of an Allocation into this Allocation.</summary>
        <remarks>
          <para>Copy part of an Allocation into this Allocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeFrom(int,%20int,%20android.renderscript.Allocation,%20int)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeFrom(int, int, android.renderscript.Allocation, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeFromUnchecked (off As Integer, count As Integer, array As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeFromUnchecked(int off, int count, Java::Lang::Object ^ array);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, Java.Lang.Object? array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, class Java.Lang.Object array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeFromUnchecked(System.Int32,System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeFromUnchecked : int * int * Java.Lang.Object -&gt; unit&#xA;override this.Copy1DRangeFromUnchecked : int * int * Java.Lang.Object -&gt; unit" Usage="allocation.Copy1DRangeFromUnchecked (off, count, array)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeFromUnchecked", "(IILjava/lang/Object;)V", "GetCopy1DRangeFromUnchecked_IILjava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeFromUnchecked", "(IILjava/lang/Object;)V", "GetCopy1DRangeFromUnchecked_IILjava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="array">The source array</param>
        <summary>Copy an array into a 1D region of this Allocation.</summary>
        <remarks>
          <para>Copy an array into a 1D region of this Allocation.  This method does not
            guarantee that the Allocation is compatible with the input buffer.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeFromUnchecked(int,%20int,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeFromUnchecked(int, int, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeFromUnchecked (off As Integer, count As Integer, d As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeFromUnchecked(int off, int count, cli::array &lt;System::Byte&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, byte[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, unsigned int8[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeFromUnchecked(System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeFromUnchecked : int * int * byte[] -&gt; unit&#xA;override this.Copy1DRangeFromUnchecked : int * int * byte[] -&gt; unit" Usage="allocation.Copy1DRangeFromUnchecked (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[B)V", "GetCopy1DRangeFromUnchecked_IIarrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[B)V", "GetCopy1DRangeFromUnchecked_IIarrayBHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy an array into a 1D region of this Allocation.</summary>
        <remarks>
          <para>Copy an array into a 1D region of this Allocation.  This method does not
            guarantee that the Allocation is compatible with the input buffer.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeFromUnchecked(int,%20int,%20byte[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeFromUnchecked(int, int, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeFromUnchecked (off As Integer, count As Integer, d As Short())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeFromUnchecked(int off, int count, cli::array &lt;short&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, short[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, int16[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeFromUnchecked(System.Int32,System.Int32,System.Int16[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeFromUnchecked : int * int * int16[] -&gt; unit&#xA;override this.Copy1DRangeFromUnchecked : int * int * int16[] -&gt; unit" Usage="allocation.Copy1DRangeFromUnchecked (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[S)V", "GetCopy1DRangeFromUnchecked_IIarraySHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[S)V", "GetCopy1DRangeFromUnchecked_IIarraySHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy an array into a 1D region of this Allocation.</summary>
        <remarks>
          <para>Copy an array into a 1D region of this Allocation.  This method does not
            guarantee that the Allocation is compatible with the input buffer.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeFromUnchecked(int,%20int,%20short[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeFromUnchecked(int, int, short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeFromUnchecked (off As Integer, count As Integer, d As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeFromUnchecked(int off, int count, cli::array &lt;int&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, int[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, int32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeFromUnchecked(System.Int32,System.Int32,System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeFromUnchecked : int * int * int[] -&gt; unit&#xA;override this.Copy1DRangeFromUnchecked : int * int * int[] -&gt; unit" Usage="allocation.Copy1DRangeFromUnchecked (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[I)V", "GetCopy1DRangeFromUnchecked_IIarrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[I)V", "GetCopy1DRangeFromUnchecked_IIarrayIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy an array into a 1D region of this Allocation.</summary>
        <remarks>
          <para>Copy an array into a 1D region of this Allocation.  This method does not
            guarantee that the Allocation is compatible with the input buffer.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeFromUnchecked(int,%20int,%20int[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeFromUnchecked(int, int, int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeFromUnchecked (off As Integer, count As Integer, d As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeFromUnchecked(int off, int count, cli::array &lt;float&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, float[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, float32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeFromUnchecked(System.Int32,System.Int32,System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeFromUnchecked : int * int * single[] -&gt; unit&#xA;override this.Copy1DRangeFromUnchecked : int * int * single[] -&gt; unit" Usage="allocation.Copy1DRangeFromUnchecked (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[F)V", "GetCopy1DRangeFromUnchecked_IIarrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[F)V", "GetCopy1DRangeFromUnchecked_IIarrayFHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy an array into a 1D region of this Allocation.</summary>
        <remarks>
          <para>Copy an array into a 1D region of this Allocation.  This method does not
            guarantee that the Allocation is compatible with the input buffer.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeFromUnchecked(int,%20int,%20float[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeFromUnchecked(int, int, float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeTo (off As Integer, count As Integer, array As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeTo(int off, int count, Java::Lang::Object ^ array);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeTo (int off, int count, Java.Lang.Object? array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeTo(int32 off, int32 count, class Java.Lang.Object array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeTo(System.Int32,System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeTo : int * int * Java.Lang.Object -&gt; unit&#xA;override this.Copy1DRangeTo : int * int * Java.Lang.Object -&gt; unit" Usage="allocation.Copy1DRangeTo (off, count, array)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeTo", "(IILjava/lang/Object;)V", "GetCopy1DRangeTo_IILjava_lang_Object_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeTo", "(IILjava/lang/Object;)V", "GetCopy1DRangeTo_IILjava_lang_Object_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="array">The source array.</param>
        <summary>Copy a 1D region of this Allocation into an array.</summary>
        <remarks>
          <para>Copy a 1D region of this Allocation into an array.  This method is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> does not match the component type
            of the array passed in.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeTo(int,%20int,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeTo(int, int, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeTo (off As Integer, count As Integer, d As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeTo(int off, int count, cli::array &lt;System::Byte&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeTo (int off, int count, byte[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeTo(int32 off, int32 count, unsigned int8[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeTo(System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeTo : int * int * byte[] -&gt; unit&#xA;override this.Copy1DRangeTo : int * int * byte[] -&gt; unit" Usage="allocation.Copy1DRangeTo (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeTo", "(II[B)V", "GetCopy1DRangeTo_IIarrayBHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeTo", "(II[B)V", "GetCopy1DRangeTo_IIarrayBHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy a 1D region of this Allocation into an array.</summary>
        <remarks>
          <para>Copy a 1D region of this Allocation into an array. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is neither an 8 bit integer nor a vector of 8 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeTo(int,%20int,%20byte[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeTo(int, int, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeTo (off As Integer, count As Integer, d As Short())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeTo(int off, int count, cli::array &lt;short&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeTo (int off, int count, short[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeTo(int32 off, int32 count, int16[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeTo(System.Int32,System.Int32,System.Int16[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeTo : int * int * int16[] -&gt; unit&#xA;override this.Copy1DRangeTo : int * int * int16[] -&gt; unit" Usage="allocation.Copy1DRangeTo (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeTo", "(II[S)V", "GetCopy1DRangeTo_IIarraySHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeTo", "(II[S)V", "GetCopy1DRangeTo_IIarraySHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy a 1D region of this Allocation into an array.</summary>
        <remarks>
          <para>Copy a 1D region of this Allocation into an array. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is neither a 16 bit integer nor a vector of 16 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeTo(int,%20int,%20short[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeTo(int, int, short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeTo (off As Integer, count As Integer, d As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeTo(int off, int count, cli::array &lt;int&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeTo (int off, int count, int[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeTo(int32 off, int32 count, int32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeTo(System.Int32,System.Int32,System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeTo : int * int * int[] -&gt; unit&#xA;override this.Copy1DRangeTo : int * int * int[] -&gt; unit" Usage="allocation.Copy1DRangeTo (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeTo", "(II[I)V", "GetCopy1DRangeTo_IIarrayIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeTo", "(II[I)V", "GetCopy1DRangeTo_IIarrayIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy a 1D region of this Allocation into an array.</summary>
        <remarks>
          <para>Copy a 1D region of this Allocation into an array. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is neither a 32 bit integer nor a vector of 32 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeTo(int,%20int,%20int[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeTo(int, int, int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeTo (off As Integer, count As Integer, d As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeTo(int off, int count, cli::array &lt;float&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeTo (int off, int count, float[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeTo(int32 off, int32 count, float32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeTo(System.Int32,System.Int32,System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeTo : int * int * single[] -&gt; unit&#xA;override this.Copy1DRangeTo : int * int * single[] -&gt; unit" Usage="allocation.Copy1DRangeTo (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeTo", "(II[F)V", "GetCopy1DRangeTo_IIarrayFHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeTo", "(II[F)V", "GetCopy1DRangeTo_IIarrayFHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array.</param>
        <summary>Copy a 1D region of this Allocation into an array.</summary>
        <remarks>
          <para>Copy a 1D region of this Allocation into an array. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is neither a 32 bit float nor a vector of
            32 bit floats <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeTo(int,%20int,%20float[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeTo(int, int, float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeToUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeToUnchecked (off As Integer, count As Integer, array As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeToUnchecked(int off, int count, Java::Lang::Object ^ array);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeToUnchecked (int off, int count, Java.Lang.Object? array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeToUnchecked(int32 off, int32 count, class Java.Lang.Object array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeToUnchecked(System.Int32,System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeToUnchecked : int * int * Java.Lang.Object -&gt; unit&#xA;override this.Copy1DRangeToUnchecked : int * int * Java.Lang.Object -&gt; unit" Usage="allocation.Copy1DRangeToUnchecked (off, count, array)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeToUnchecked", "(IILjava/lang/Object;)V", "GetCopy1DRangeToUnchecked_IILjava_lang_Object_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeToUnchecked", "(IILjava/lang/Object;)V", "GetCopy1DRangeToUnchecked_IILjava_lang_Object_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="array">The dest array</param>
        <summary>Copy a 1D region of this Allocation into an array.</summary>
        <remarks>
          <para>Copy a 1D region of this Allocation into an array.  This method does not
            guarantee that the Allocation is compatible with the input buffer.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeToUnchecked(int,%20int,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeToUnchecked(int, int, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeToUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeToUnchecked (off As Integer, count As Integer, d As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeToUnchecked(int off, int count, cli::array &lt;System::Byte&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeToUnchecked (int off, int count, byte[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeToUnchecked(int32 off, int32 count, unsigned int8[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeToUnchecked(System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeToUnchecked : int * int * byte[] -&gt; unit&#xA;override this.Copy1DRangeToUnchecked : int * int * byte[] -&gt; unit" Usage="allocation.Copy1DRangeToUnchecked (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeToUnchecked", "(II[B)V", "GetCopy1DRangeToUnchecked_IIarrayBHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeToUnchecked", "(II[B)V", "GetCopy1DRangeToUnchecked_IIarrayBHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy a 1D region of this Allocation into an array.</summary>
        <remarks>
          <para>Copy a 1D region of this Allocation into an array.  This method does not
            guarantee that the Allocation is compatible with the input buffer.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeToUnchecked(int,%20int,%20byte[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeToUnchecked(int, int, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeToUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeToUnchecked (off As Integer, count As Integer, d As Short())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeToUnchecked(int off, int count, cli::array &lt;short&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeToUnchecked (int off, int count, short[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeToUnchecked(int32 off, int32 count, int16[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeToUnchecked(System.Int32,System.Int32,System.Int16[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeToUnchecked : int * int * int16[] -&gt; unit&#xA;override this.Copy1DRangeToUnchecked : int * int * int16[] -&gt; unit" Usage="allocation.Copy1DRangeToUnchecked (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeToUnchecked", "(II[S)V", "GetCopy1DRangeToUnchecked_IIarraySHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeToUnchecked", "(II[S)V", "GetCopy1DRangeToUnchecked_IIarraySHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy a 1D region of this Allocation into an array.</summary>
        <remarks>
          <para>Copy a 1D region of this Allocation into an array.  This method does not
            guarantee that the Allocation is compatible with the input buffer.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeToUnchecked(int,%20int,%20short[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeToUnchecked(int, int, short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeToUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeToUnchecked (off As Integer, count As Integer, d As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeToUnchecked(int off, int count, cli::array &lt;int&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeToUnchecked (int off, int count, int[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeToUnchecked(int32 off, int32 count, int32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeToUnchecked(System.Int32,System.Int32,System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeToUnchecked : int * int * int[] -&gt; unit&#xA;override this.Copy1DRangeToUnchecked : int * int * int[] -&gt; unit" Usage="allocation.Copy1DRangeToUnchecked (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeToUnchecked", "(II[I)V", "GetCopy1DRangeToUnchecked_IIarrayIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeToUnchecked", "(II[I)V", "GetCopy1DRangeToUnchecked_IIarrayIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy a 1D region of this Allocation into an array.</summary>
        <remarks>
          <para>Copy a 1D region of this Allocation into an array.  This method does not
            guarantee that the Allocation is compatible with the input buffer.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeToUnchecked(int,%20int,%20int[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeToUnchecked(int, int, int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeToUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy1DRangeToUnchecked (off As Integer, count As Integer, d As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy1DRangeToUnchecked(int off, int count, cli::array &lt;float&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeToUnchecked (int off, int count, float[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeToUnchecked(int32 off, int32 count, float32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy1DRangeToUnchecked(System.Int32,System.Int32,System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member Copy1DRangeToUnchecked : int * int * single[] -&gt; unit&#xA;override this.Copy1DRangeToUnchecked : int * int * single[] -&gt; unit" Usage="allocation.Copy1DRangeToUnchecked (off, count, d)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy1DRangeToUnchecked", "(II[F)V", "GetCopy1DRangeToUnchecked_IIarrayFHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy1DRangeToUnchecked", "(II[F)V", "GetCopy1DRangeToUnchecked_IIarrayFHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source array</param>
        <summary>Copy a 1D region of this Allocation into an array.</summary>
        <remarks>
          <para>Copy a 1D region of this Allocation into an array.  This method does not
            guarantee that the Allocation is compatible with the input buffer.</para>
          <para>The size of the region is: count * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy1DRangeToUnchecked(int,%20int,%20float[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy1DRangeToUnchecked(int, int, float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy2DRangeFrom (xoff As Integer, yoff As Integer, data As Bitmap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy2DRangeFrom(int xoff, int yoff, Android::Graphics::Bitmap ^ data);" />
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, Android.Graphics.Bitmap? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, class Android.Graphics.Bitmap data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy2DRangeFrom(System.Int32,System.Int32,Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="abstract member Copy2DRangeFrom : int * int * Android.Graphics.Bitmap -&gt; unit&#xA;override this.Copy2DRangeFrom : int * int * Android.Graphics.Bitmap -&gt; unit" Usage="allocation.Copy2DRangeFrom (xoff, yoff, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy2DRangeFrom", "(IILandroid/graphics/Bitmap;)V", "GetCopy2DRangeFrom_IILandroid_graphics_Bitmap_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy2DRangeFrom", "(IILandroid/graphics/Bitmap;)V", "GetCopy2DRangeFrom_IILandroid_graphics_Bitmap_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="data" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="data">the Bitmap to be copied</param>
        <summary>Copy a <c>android.graphics.Bitmap</c> into an Allocation.</summary>
        <remarks>
          <para>Copy a <c>android.graphics.Bitmap</c> into an Allocation.  The height
            and width of the update will use the height and width of the <c>android.graphics.Bitmap</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy2DRangeFrom(int,%20int,%20android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy2DRangeFrom(int, int, android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy2DRangeFrom (xoff As Integer, yoff As Integer, w As Integer, h As Integer, array As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy2DRangeFrom(int xoff, int yoff, int w, int h, Java::Lang::Object ^ array);" />
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, Java.Lang.Object? array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, class Java.Lang.Object array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy2DRangeFrom(System.Int32,System.Int32,System.Int32,System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Copy2DRangeFrom : int * int * int * int * Java.Lang.Object -&gt; unit&#xA;override this.Copy2DRangeFrom : int * int * int * int * Java.Lang.Object -&gt; unit" Usage="allocation.Copy2DRangeFrom (xoff, yoff, w, h, array)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy2DRangeFrom", "(IIIILjava/lang/Object;)V", "GetCopy2DRangeFrom_IIIILjava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy2DRangeFrom", "(IIIILjava/lang/Object;)V", "GetCopy2DRangeFrom_IIIILjava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="w">Width of the region to update</param>
        <param name="h">Height of the region to update</param>
        <param name="array">Data to be placed into the Allocation</param>
        <summary>Copy from an array into a rectangular region in this Allocation.</summary>
        <remarks>
          <para>Copy from an array into a rectangular region in this Allocation.  The
            array is assumed to be tightly packed. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> does not match the input data type.</para>
          <para>The size of the region is: w * h * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy2DRangeFrom(int,%20int,%20int,%20int,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy2DRangeFrom(int, int, int, int, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy2DRangeFrom (xoff As Integer, yoff As Integer, w As Integer, h As Integer, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy2DRangeFrom(int xoff, int yoff, int w, int h, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, byte[]? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy2DRangeFrom(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member Copy2DRangeFrom : int * int * int * int * byte[] -&gt; unit&#xA;override this.Copy2DRangeFrom : int * int * int * int * byte[] -&gt; unit" Usage="allocation.Copy2DRangeFrom (xoff, yoff, w, h, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy2DRangeFrom", "(IIII[B)V", "GetCopy2DRangeFrom_IIIIarrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy2DRangeFrom", "(IIII[B)V", "GetCopy2DRangeFrom_IIIIarrayBHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="w">Width of the region to update</param>
        <param name="h">Height of the region to update</param>
        <param name="data">to be placed into the Allocation</param>
        <summary>Copy from an array into a rectangular region in this Allocation.</summary>
        <remarks>
          <para>Copy from an array into a rectangular region in this Allocation.  The
            array is assumed to be tightly packed. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is not an 8 bit integer nor a vector of 8 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: w * h * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy2DRangeFrom(int,%20int,%20int,%20int,%20byte[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy2DRangeFrom(int, int, int, int, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy2DRangeFrom (xoff As Integer, yoff As Integer, w As Integer, h As Integer, data As Short())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy2DRangeFrom(int xoff, int yoff, int w, int h, cli::array &lt;short&gt; ^ data);" />
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, short[]? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, int16[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy2DRangeFrom(System.Int32,System.Int32,System.Int32,System.Int32,System.Int16[])" />
      <MemberSignature Language="F#" Value="abstract member Copy2DRangeFrom : int * int * int * int * int16[] -&gt; unit&#xA;override this.Copy2DRangeFrom : int * int * int * int * int16[] -&gt; unit" Usage="allocation.Copy2DRangeFrom (xoff, yoff, w, h, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy2DRangeFrom", "(IIII[S)V", "GetCopy2DRangeFrom_IIIIarraySHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy2DRangeFrom", "(IIII[S)V", "GetCopy2DRangeFrom_IIIIarraySHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="w">Width of the region to update</param>
        <param name="h">Height of the region to update</param>
        <param name="data">to be placed into the Allocation</param>
        <summary>Copy from an array into a rectangular region in this Allocation.</summary>
        <remarks>
          <para>Copy from an array into a rectangular region in this Allocation.  The
            array is assumed to be tightly packed. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is not a 16 bit integer nor a vector of 16 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: w * h * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy2DRangeFrom(int,%20int,%20int,%20int,%20short[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy2DRangeFrom(int, int, int, int, short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy2DRangeFrom (xoff As Integer, yoff As Integer, w As Integer, h As Integer, data As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy2DRangeFrom(int xoff, int yoff, int w, int h, cli::array &lt;int&gt; ^ data);" />
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, int[]? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, int32[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy2DRangeFrom(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member Copy2DRangeFrom : int * int * int * int * int[] -&gt; unit&#xA;override this.Copy2DRangeFrom : int * int * int * int * int[] -&gt; unit" Usage="allocation.Copy2DRangeFrom (xoff, yoff, w, h, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy2DRangeFrom", "(IIII[I)V", "GetCopy2DRangeFrom_IIIIarrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy2DRangeFrom", "(IIII[I)V", "GetCopy2DRangeFrom_IIIIarrayIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="w">Width of the region to update</param>
        <param name="h">Height of the region to update</param>
        <param name="data">to be placed into the Allocation</param>
        <summary>Copy from an array into a rectangular region in this Allocation.</summary>
        <remarks>
          <para>Copy from an array into a rectangular region in this Allocation.  The
            array is assumed to be tightly packed. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is not a 32 bit integer nor a vector of 32 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: w * h * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy2DRangeFrom(int,%20int,%20int,%20int,%20int[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy2DRangeFrom(int, int, int, int, int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy2DRangeFrom (xoff As Integer, yoff As Integer, w As Integer, h As Integer, data As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy2DRangeFrom(int xoff, int yoff, int w, int h, cli::array &lt;float&gt; ^ data);" />
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, float[]? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, float32[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy2DRangeFrom(System.Int32,System.Int32,System.Int32,System.Int32,System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member Copy2DRangeFrom : int * int * int * int * single[] -&gt; unit&#xA;override this.Copy2DRangeFrom : int * int * int * int * single[] -&gt; unit" Usage="allocation.Copy2DRangeFrom (xoff, yoff, w, h, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy2DRangeFrom", "(IIII[F)V", "GetCopy2DRangeFrom_IIIIarrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy2DRangeFrom", "(IIII[F)V", "GetCopy2DRangeFrom_IIIIarrayFHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="w">Width of the region to update</param>
        <param name="h">Height of the region to update</param>
        <param name="data">to be placed into the Allocation</param>
        <summary>Copy from an array into a rectangular region in this Allocation.</summary>
        <remarks>
          <para>Copy from an array into a rectangular region in this Allocation.  The
            array is assumed to be tightly packed. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is neither a 32 bit float nor a vector of
            32 bit floats <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: w * h * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy2DRangeFrom(int,%20int,%20int,%20int,%20float[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy2DRangeFrom(int, int, int, int, float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy2DRangeFrom (xoff As Integer, yoff As Integer, w As Integer, h As Integer, data As Allocation, dataXoff As Integer, dataYoff As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy2DRangeFrom(int xoff, int yoff, int w, int h, Android::Renderscripts::Allocation ^ data, int dataXoff, int dataYoff);" />
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, Android.Renderscripts.Allocation? data, int dataXoff, int dataYoff);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, class Android.Renderscripts.Allocation data, int32 dataXoff, int32 dataYoff) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy2DRangeFrom(System.Int32,System.Int32,System.Int32,System.Int32,Android.Renderscripts.Allocation,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Copy2DRangeFrom : int * int * int * int * Android.Renderscripts.Allocation * int * int -&gt; unit&#xA;override this.Copy2DRangeFrom : int * int * int * int * Android.Renderscripts.Allocation * int * int -&gt; unit" Usage="allocation.Copy2DRangeFrom (xoff, yoff, w, h, data, dataXoff, dataYoff)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy2DRangeFrom", "(IIIILandroid/renderscript/Allocation;II)V", "GetCopy2DRangeFrom_IIIILandroid_renderscript_Allocation_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy2DRangeFrom", "(IIIILandroid/renderscript/Allocation;II)V", "GetCopy2DRangeFrom_IIIILandroid_renderscript_Allocation_IIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="dataXoff" Type="System.Int32" />
        <Parameter Name="dataYoff" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region in this Allocation</param>
        <param name="yoff">Y offset of the region in this Allocation</param>
        <param name="w">Width of the region to update.</param>
        <param name="h">Height of the region to update.</param>
        <param name="data">source Allocation.</param>
        <param name="dataXoff">X offset in source Allocation</param>
        <param name="dataYoff">Y offset in source Allocation</param>
        <summary>Copy a rectangular region from an Allocation into a rectangular region in
            this Allocation.</summary>
        <remarks>
          <para>Copy a rectangular region from an Allocation into a rectangular region in
            this Allocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy2DRangeFrom(int,%20int,%20int,%20int,%20android.renderscript.Allocation,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy2DRangeFrom(int, int, int, int, android.renderscript.Allocation, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy2DRangeTo (xoff As Integer, yoff As Integer, w As Integer, h As Integer, array As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy2DRangeTo(int xoff, int yoff, int w, int h, Java::Lang::Object ^ array);" />
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeTo (int xoff, int yoff, int w, int h, Java.Lang.Object? array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeTo(int32 xoff, int32 yoff, int32 w, int32 h, class Java.Lang.Object array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy2DRangeTo(System.Int32,System.Int32,System.Int32,System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Copy2DRangeTo : int * int * int * int * Java.Lang.Object -&gt; unit&#xA;override this.Copy2DRangeTo : int * int * int * int * Java.Lang.Object -&gt; unit" Usage="allocation.Copy2DRangeTo (xoff, yoff, w, h, array)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy2DRangeTo", "(IIIILjava/lang/Object;)V", "GetCopy2DRangeTo_IIIILjava_lang_Object_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy2DRangeTo", "(IIIILjava/lang/Object;)V", "GetCopy2DRangeTo_IIIILjava_lang_Object_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to copy in this Allocation</param>
        <param name="yoff">Y offset of the region to copy in this Allocation</param>
        <param name="w">Width of the region to copy</param>
        <param name="h">Height of the region to copy</param>
        <param name="array">Dest Array to be copied into</param>
        <summary>Copy from a rectangular region in this Allocation into an array.</summary>
        <remarks>
          <para>Copy from a rectangular region in this Allocation into an array. This
            method is type checked and will generate exceptions if the Allocation's
            <c>android.renderscript.Element</c> does not match the component type
            of the array passed in.</para>
          <para>The size of the region is: w * h * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy2DRangeTo(int,%20int,%20int,%20int,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy2DRangeTo(int, int, int, int, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy2DRangeTo (xoff As Integer, yoff As Integer, w As Integer, h As Integer, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy2DRangeTo(int xoff, int yoff, int w, int h, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeTo (int xoff, int yoff, int w, int h, byte[]? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeTo(int32 xoff, int32 yoff, int32 w, int32 h, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy2DRangeTo(System.Int32,System.Int32,System.Int32,System.Int32,System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member Copy2DRangeTo : int * int * int * int * byte[] -&gt; unit&#xA;override this.Copy2DRangeTo : int * int * int * int * byte[] -&gt; unit" Usage="allocation.Copy2DRangeTo (xoff, yoff, w, h, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy2DRangeTo", "(IIII[B)V", "GetCopy2DRangeTo_IIIIarrayBHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy2DRangeTo", "(IIII[B)V", "GetCopy2DRangeTo_IIIIarrayBHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to copy in this Allocation</param>
        <param name="yoff">Y offset of the region to copy in this Allocation</param>
        <param name="w">Width of the region to copy</param>
        <param name="h">Height of the region to copy</param>
        <param name="data">Dest Array to be copied into</param>
        <summary>Copy from a rectangular region in this Allocation into an array.</summary>
        <remarks>
          <para>Copy from a rectangular region in this Allocation into an array. This
            variant is type checked and will generate exceptions if the Allocation's
            <c>android.renderscript.Element</c> is neither an 8 bit integer nor a vector
            of 8 bit integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: w * h * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy2DRangeTo(int,%20int,%20int,%20int,%20byte[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy2DRangeTo(int, int, int, int, byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy2DRangeTo (xoff As Integer, yoff As Integer, w As Integer, h As Integer, data As Short())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy2DRangeTo(int xoff, int yoff, int w, int h, cli::array &lt;short&gt; ^ data);" />
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeTo (int xoff, int yoff, int w, int h, short[]? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeTo(int32 xoff, int32 yoff, int32 w, int32 h, int16[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy2DRangeTo(System.Int32,System.Int32,System.Int32,System.Int32,System.Int16[])" />
      <MemberSignature Language="F#" Value="abstract member Copy2DRangeTo : int * int * int * int * int16[] -&gt; unit&#xA;override this.Copy2DRangeTo : int * int * int * int * int16[] -&gt; unit" Usage="allocation.Copy2DRangeTo (xoff, yoff, w, h, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy2DRangeTo", "(IIII[S)V", "GetCopy2DRangeTo_IIIIarraySHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy2DRangeTo", "(IIII[S)V", "GetCopy2DRangeTo_IIIIarraySHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to copy in this Allocation</param>
        <param name="yoff">Y offset of the region to copy in this Allocation</param>
        <param name="w">Width of the region to copy</param>
        <param name="h">Height of the region to copy</param>
        <param name="data">Dest Array to be copied into</param>
        <summary>Copy from a rectangular region in this Allocation into an array.</summary>
        <remarks>
          <para>Copy from a rectangular region in this Allocation into an array. This
            variant is type checked and will generate exceptions if the Allocation's
            <c>android.renderscript.Element</c> is neither a 16 bit integer nor a vector
            of 16 bit integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: w * h * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy2DRangeTo(int,%20int,%20int,%20int,%20short[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy2DRangeTo(int, int, int, int, short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy2DRangeTo (xoff As Integer, yoff As Integer, w As Integer, h As Integer, data As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy2DRangeTo(int xoff, int yoff, int w, int h, cli::array &lt;int&gt; ^ data);" />
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeTo (int xoff, int yoff, int w, int h, int[]? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeTo(int32 xoff, int32 yoff, int32 w, int32 h, int32[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy2DRangeTo(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member Copy2DRangeTo : int * int * int * int * int[] -&gt; unit&#xA;override this.Copy2DRangeTo : int * int * int * int * int[] -&gt; unit" Usage="allocation.Copy2DRangeTo (xoff, yoff, w, h, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy2DRangeTo", "(IIII[I)V", "GetCopy2DRangeTo_IIIIarrayIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy2DRangeTo", "(IIII[I)V", "GetCopy2DRangeTo_IIIIarrayIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to copy in this Allocation</param>
        <param name="yoff">Y offset of the region to copy in this Allocation</param>
        <param name="w">Width of the region to copy</param>
        <param name="h">Height of the region to copy</param>
        <param name="data">Dest Array to be copied into</param>
        <summary>Copy from a rectangular region in this Allocation into an array.</summary>
        <remarks>
          <para>Copy from a rectangular region in this Allocation into an array. This
            variant is type checked and will generate exceptions if the Allocation's
            <c>android.renderscript.Element</c> is neither a 32 bit integer nor a vector
            of 32 bit integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: w * h * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy2DRangeTo(int,%20int,%20int,%20int,%20int[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy2DRangeTo(int, int, int, int, int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy2DRangeTo (xoff As Integer, yoff As Integer, w As Integer, h As Integer, data As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy2DRangeTo(int xoff, int yoff, int w, int h, cli::array &lt;float&gt; ^ data);" />
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeTo (int xoff, int yoff, int w, int h, float[]? data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeTo(int32 xoff, int32 yoff, int32 w, int32 h, float32[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy2DRangeTo(System.Int32,System.Int32,System.Int32,System.Int32,System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member Copy2DRangeTo : int * int * int * int * single[] -&gt; unit&#xA;override this.Copy2DRangeTo : int * int * int * int * single[] -&gt; unit" Usage="allocation.Copy2DRangeTo (xoff, yoff, w, h, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy2DRangeTo", "(IIII[F)V", "GetCopy2DRangeTo_IIIIarrayFHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy2DRangeTo", "(IIII[F)V", "GetCopy2DRangeTo_IIIIarrayFHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to copy in this Allocation</param>
        <param name="yoff">Y offset of the region to copy in this Allocation</param>
        <param name="w">Width of the region to copy</param>
        <param name="h">Height of the region to copy</param>
        <param name="data">Dest Array to be copied into</param>
        <summary>Copy from a rectangular region in this Allocation into an array.</summary>
        <remarks>
          <para>Copy from a rectangular region in this Allocation into an array. This
            variant is type checked and will generate exceptions if the Allocation's
            <c>android.renderscript.Element</c> is neither a 32 bit float nor a vector
            of 32 bit floats <c>android.renderscript.Element.DataType</c>.</para>
          <para>The size of the region is: w * h * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy2DRangeTo(int,%20int,%20int,%20int,%20float[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy2DRangeTo(int, int, int, int, float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy3DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy3DRangeFrom (xoff As Integer, yoff As Integer, zoff As Integer, w As Integer, h As Integer, d As Integer, array As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy3DRangeFrom(int xoff, int yoff, int zoff, int w, int h, int d, Java::Lang::Object ^ array);" />
      <MemberSignature Language="C#" Value="public virtual void Copy3DRangeFrom (int xoff, int yoff, int zoff, int w, int h, int d, Java.Lang.Object? array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy3DRangeFrom(int32 xoff, int32 yoff, int32 zoff, int32 w, int32 h, int32 d, class Java.Lang.Object array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy3DRangeFrom(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Copy3DRangeFrom : int * int * int * int * int * int * Java.Lang.Object -&gt; unit&#xA;override this.Copy3DRangeFrom : int * int * int * int * int * int * Java.Lang.Object -&gt; unit" Usage="allocation.Copy3DRangeFrom (xoff, yoff, zoff, w, h, d, array)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy3DRangeFrom", "(IIIIIILjava/lang/Object;)V", "GetCopy3DRangeFrom_IIIIIILjava_lang_Object_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy3DRangeFrom", "(IIIIIILjava/lang/Object;)V", "GetCopy3DRangeFrom_IIIIIILjava_lang_Object_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="zoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int32" />
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="zoff">Z offset of the region to update in this Allocation</param>
        <param name="w">Width of the region to update</param>
        <param name="h">Height of the region to update</param>
        <param name="d">Depth of the region to update</param>
        <param name="array">to be placed into the allocation</param>
        <summary>Copy from an array into a 3D region in this Allocation.</summary>
        <remarks>
          <para>Copy from an array into a 3D region in this Allocation.  The
            array is assumed to be tightly packed. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> does not match the input data type.</para>
          <para>The size of the region is: w * h * d * <c>#getElement</c>.<c>Element#getBytesSize</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the region.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the region. The padding bytes for the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the region. The padding bytes for the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy3DRangeFrom(int,%20int,%20int,%20int,%20int,%20int,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy3DRangeFrom(int, int, int, int, int, int, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy3DRangeFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy3DRangeFrom (xoff As Integer, yoff As Integer, zoff As Integer, w As Integer, h As Integer, d As Integer, data As Allocation, dataXoff As Integer, dataYoff As Integer, dataZoff As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy3DRangeFrom(int xoff, int yoff, int zoff, int w, int h, int d, Android::Renderscripts::Allocation ^ data, int dataXoff, int dataYoff, int dataZoff);" />
      <MemberSignature Language="C#" Value="public virtual void Copy3DRangeFrom (int xoff, int yoff, int zoff, int w, int h, int d, Android.Renderscripts.Allocation? data, int dataXoff, int dataYoff, int dataZoff);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy3DRangeFrom(int32 xoff, int32 yoff, int32 zoff, int32 w, int32 h, int32 d, class Android.Renderscripts.Allocation data, int32 dataXoff, int32 dataYoff, int32 dataZoff) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy3DRangeFrom(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Android.Renderscripts.Allocation,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Copy3DRangeFrom : int * int * int * int * int * int * Android.Renderscripts.Allocation * int * int * int -&gt; unit&#xA;override this.Copy3DRangeFrom : int * int * int * int * int * int * Android.Renderscripts.Allocation * int * int * int -&gt; unit" Usage="allocation.Copy3DRangeFrom (xoff, yoff, zoff, w, h, d, data, dataXoff, dataYoff, dataZoff)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy3DRangeFrom", "(IIIIIILandroid/renderscript/Allocation;III)V", "GetCopy3DRangeFrom_IIIIIILandroid_renderscript_Allocation_IIIHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy3DRangeFrom", "(IIIIIILandroid/renderscript/Allocation;III)V", "GetCopy3DRangeFrom_IIIIIILandroid_renderscript_Allocation_IIIHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="zoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int32" />
        <Parameter Name="data" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="dataXoff" Type="System.Int32" />
        <Parameter Name="dataYoff" Type="System.Int32" />
        <Parameter Name="dataZoff" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="zoff">Z offset of the region to update in this Allocation</param>
        <param name="w">Width of the region to update.</param>
        <param name="h">Height of the region to update.</param>
        <param name="d">Depth of the region to update.</param>
        <param name="data">source allocation.</param>
        <param name="dataXoff">X offset of the region in the source Allocation</param>
        <param name="dataYoff">Y offset of the region in the source Allocation</param>
        <param name="dataZoff">Z offset of the region in the source Allocation</param>
        <summary>Copy a rectangular region into the allocation from another
            allocation.</summary>
        <remarks>
          <para>Copy a rectangular region into the allocation from another
            allocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copy3DRangeFrom(int,%20int,%20int,%20int,%20int,%20int,%20android.renderscript.Allocation,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copy3DRangeFrom(int, int, int, int, int, int, android.renderscript.Allocation, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy3DRangeTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Copy3DRangeTo (xoff As Integer, yoff As Integer, zoff As Integer, w As Integer, h As Integer, d As Integer, array As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Copy3DRangeTo(int xoff, int yoff, int zoff, int w, int h, int d, Java::Lang::Object ^ array);" />
      <MemberSignature Language="C#" Value="public virtual void Copy3DRangeTo (int xoff, int yoff, int zoff, int w, int h, int d, Java.Lang.Object? array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy3DRangeTo(int32 xoff, int32 yoff, int32 zoff, int32 w, int32 h, int32 d, class Java.Lang.Object array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Copy3DRangeTo(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Copy3DRangeTo : int * int * int * int * int * int * Java.Lang.Object -&gt; unit&#xA;override this.Copy3DRangeTo : int * int * int * int * int * int * Java.Lang.Object -&gt; unit" Usage="allocation.Copy3DRangeTo (xoff, yoff, zoff, w, h, d, array)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copy3DRangeTo", "(IIIIIILjava/lang/Object;)V", "GetCopy3DRangeTo_IIIIIILjava_lang_Object_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copy3DRangeTo", "(IIIIIILjava/lang/Object;)V", "GetCopy3DRangeTo_IIIIIILjava_lang_Object_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="zoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int32" />
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="xoff">To be added.</param>
        <param name="yoff">To be added.</param>
        <param name="zoff">To be added.</param>
        <param name="w">To be added.</param>
        <param name="h">To be added.</param>
        <param name="d">To be added.</param>
        <param name="array">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFrom (b As Bitmap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFrom(Android::Graphics::Bitmap ^ b);" />
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (Android.Graphics.Bitmap? b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class Android.Graphics.Bitmap b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyFrom(Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="abstract member CopyFrom : Android.Graphics.Bitmap -&gt; unit&#xA;override this.CopyFrom : Android.Graphics.Bitmap -&gt; unit" Usage="allocation.CopyFrom b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyFrom", "(Landroid/graphics/Bitmap;)V", "GetCopyFrom_Landroid_graphics_Bitmap_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyFrom", "(Landroid/graphics/Bitmap;)V", "GetCopyFrom_Landroid_graphics_Bitmap_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="b">the source bitmap</param>
        <summary>Copy into an Allocation from a <c>android.graphics.Bitmap</c>.</summary>
        <remarks>
          <para>Copy into an Allocation from a <c>android.graphics.Bitmap</c>.  The
            height, width, and format of the bitmap must match the existing
            allocation.</para>
          <para>If the <c>android.graphics.Bitmap</c> is the same as the <c>android.graphics.Bitmap</c> used to create the Allocation with <c>#createFromBitmap</c> and <c>#USAGE_SHARED</c> is set on the Allocation,
            this will synchronize the Allocation with the latest data from the <c>android.graphics.Bitmap</c>, potentially avoiding the actual copy.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyFrom(android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyFrom(android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFrom (a As Allocation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFrom(Android::Renderscripts::Allocation ^ a);" />
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (Android.Renderscripts.Allocation? a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class Android.Renderscripts.Allocation a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyFrom(Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member CopyFrom : Android.Renderscripts.Allocation -&gt; unit&#xA;override this.CopyFrom : Android.Renderscripts.Allocation -&gt; unit" Usage="allocation.CopyFrom a" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyFrom", "(Landroid/renderscript/Allocation;)V", "GetCopyFrom_Landroid_renderscript_Allocation_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyFrom", "(Landroid/renderscript/Allocation;)V", "GetCopyFrom_Landroid_renderscript_Allocation_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="a">the source allocation</param>
        <summary>Copy an Allocation from an Allocation.</summary>
        <remarks>
          <para>Copy an Allocation from an Allocation.  The types of both allocations
            must be identical.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyFrom(android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyFrom(android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFrom (d As BaseObj())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFrom(cli::array &lt;Android::Renderscripts::BaseObj ^&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (Android.Renderscripts.BaseObj[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class Android.Renderscripts.BaseObj[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyFrom(Android.Renderscripts.BaseObj[])" />
      <MemberSignature Language="F#" Value="abstract member CopyFrom : Android.Renderscripts.BaseObj[] -&gt; unit&#xA;override this.CopyFrom : Android.Renderscripts.BaseObj[] -&gt; unit" Usage="allocation.CopyFrom d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyFrom", "([Landroid/renderscript/BaseObj;)V", "GetCopyFrom_arrayLandroid_renderscript_BaseObj_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyFrom", "([Landroid/renderscript/BaseObj;)V", "GetCopyFrom_arrayLandroid_renderscript_BaseObj_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="Android.Renderscripts.BaseObj[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="d">Source array.</param>
        <summary>Copy an array of RS objects to the Allocation.</summary>
        <remarks>
          <para>Copy an array of RS objects to the Allocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyFrom(android.renderscript.BaseObj[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyFrom(android.renderscript.BaseObj[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFrom (array As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFrom(Java::Lang::Object ^ array);" />
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (Java.Lang.Object? array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class Java.Lang.Object array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyFrom(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member CopyFrom : Java.Lang.Object -&gt; unit&#xA;override this.CopyFrom : Java.Lang.Object -&gt; unit" Usage="allocation.CopyFrom array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyFrom", "(Ljava/lang/Object;)V", "GetCopyFrom_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyFrom", "(Ljava/lang/Object;)V", "GetCopyFrom_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="array">The source array</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para>Copy into this Allocation from an array.  This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> does not match the array's
            primitive type.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyFrom(java.lang.Object)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyFrom(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFrom (d As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFrom(cli::array &lt;System::Byte&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (byte[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(unsigned int8[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyFrom(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member CopyFrom : byte[] -&gt; unit&#xA;override this.CopyFrom : byte[] -&gt; unit" Usage="allocation.CopyFrom d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyFrom", "([B)V", "GetCopyFrom_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyFrom", "([B)V", "GetCopyFrom_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="d">the source array</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para>Copy into this Allocation from an array.  This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is not an 8 bit integer nor a vector of 8 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyFrom(byte[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyFrom(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFrom (d As Short())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFrom(cli::array &lt;short&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (short[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(int16[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyFrom(System.Int16[])" />
      <MemberSignature Language="F#" Value="abstract member CopyFrom : int16[] -&gt; unit&#xA;override this.CopyFrom : int16[] -&gt; unit" Usage="allocation.CopyFrom d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyFrom", "([S)V", "GetCopyFrom_arraySHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyFrom", "([S)V", "GetCopyFrom_arraySHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="d">the source array</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para>Copy into this Allocation from an array.  This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is not a 16 bit integer nor a vector of 16 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyFrom(short[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyFrom(short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFrom (d As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFrom(cli::array &lt;int&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (int[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(int32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyFrom(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member CopyFrom : int[] -&gt; unit&#xA;override this.CopyFrom : int[] -&gt; unit" Usage="allocation.CopyFrom d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyFrom", "([I)V", "GetCopyFrom_arrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyFrom", "([I)V", "GetCopyFrom_arrayIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="d">the source array</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para>Copy into this Allocation from an array.  This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is not a 32 bit integer nor a vector of 32 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyFrom(int[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyFrom(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFrom (d As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFrom(cli::array &lt;float&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (float[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(float32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyFrom(System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member CopyFrom : single[] -&gt; unit&#xA;override this.CopyFrom : single[] -&gt; unit" Usage="allocation.CopyFrom d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyFrom", "([F)V", "GetCopyFrom_arrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyFrom", "([F)V", "GetCopyFrom_arrayFHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="d">the source array</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para>Copy into this Allocation from an array.  This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is neither a 32 bit float nor a vector of
            32 bit floats <c>android.renderscript.Element.DataType</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyFrom(float[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyFrom(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFromUnchecked (array As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFromUnchecked(Java::Lang::Object ^ array);" />
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (Java.Lang.Object? array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(class Java.Lang.Object array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyFromUnchecked(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member CopyFromUnchecked : Java.Lang.Object -&gt; unit&#xA;override this.CopyFromUnchecked : Java.Lang.Object -&gt; unit" Usage="allocation.CopyFromUnchecked array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyFromUnchecked", "(Ljava/lang/Object;)V", "GetCopyFromUnchecked_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyFromUnchecked", "(Ljava/lang/Object;)V", "GetCopyFromUnchecked_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="array">The source array</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para>Copy into this Allocation from an array. This method does not guarantee
            that the Allocation is compatible with the input buffer; it copies memory
            without reinterpretation.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyFromUnchecked(java.lang.Object)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyFromUnchecked(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFromUnchecked (d As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFromUnchecked(cli::array &lt;System::Byte&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (byte[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(unsigned int8[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyFromUnchecked(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member CopyFromUnchecked : byte[] -&gt; unit&#xA;override this.CopyFromUnchecked : byte[] -&gt; unit" Usage="allocation.CopyFromUnchecked d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyFromUnchecked", "([B)V", "GetCopyFromUnchecked_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyFromUnchecked", "([B)V", "GetCopyFromUnchecked_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="d">the source array</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para>Copy into this Allocation from an array. This method does not guarantee
            that the Allocation is compatible with the input buffer; it copies memory
            without reinterpretation.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyFromUnchecked(byte[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyFromUnchecked(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFromUnchecked (d As Short())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFromUnchecked(cli::array &lt;short&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (short[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(int16[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyFromUnchecked(System.Int16[])" />
      <MemberSignature Language="F#" Value="abstract member CopyFromUnchecked : int16[] -&gt; unit&#xA;override this.CopyFromUnchecked : int16[] -&gt; unit" Usage="allocation.CopyFromUnchecked d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyFromUnchecked", "([S)V", "GetCopyFromUnchecked_arraySHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyFromUnchecked", "([S)V", "GetCopyFromUnchecked_arraySHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="d">the source array</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para>Copy into this Allocation from an array. This method does not guarantee
            that the Allocation is compatible with the input buffer; it copies memory
            without reinterpretation.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyFromUnchecked(short[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyFromUnchecked(short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFromUnchecked (d As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFromUnchecked(cli::array &lt;int&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (int[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(int32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyFromUnchecked(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member CopyFromUnchecked : int[] -&gt; unit&#xA;override this.CopyFromUnchecked : int[] -&gt; unit" Usage="allocation.CopyFromUnchecked d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyFromUnchecked", "([I)V", "GetCopyFromUnchecked_arrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyFromUnchecked", "([I)V", "GetCopyFromUnchecked_arrayIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="d">the source array</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para>Copy into this Allocation from an array. This method does not guarantee
            that the Allocation is compatible with the input buffer; it copies memory
            without reinterpretation.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyFromUnchecked(int[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyFromUnchecked(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFromUnchecked (d As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFromUnchecked(cli::array &lt;float&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (float[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(float32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyFromUnchecked(System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member CopyFromUnchecked : single[] -&gt; unit&#xA;override this.CopyFromUnchecked : single[] -&gt; unit" Usage="allocation.CopyFromUnchecked d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyFromUnchecked", "([F)V", "GetCopyFromUnchecked_arrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyFromUnchecked", "([F)V", "GetCopyFromUnchecked_arrayFHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="d">the source array</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para>Copy into this Allocation from an array. This method does not guarantee
            that the Allocation is compatible with the input buffer; it copies memory
            without reinterpretation.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyFromUnchecked(float[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyFromUnchecked(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (b As Bitmap)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Android::Graphics::Bitmap ^ b);" />
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Android.Graphics.Bitmap? b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class Android.Graphics.Bitmap b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyTo(Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Android.Graphics.Bitmap -&gt; unit&#xA;override this.CopyTo : Android.Graphics.Bitmap -&gt; unit" Usage="allocation.CopyTo b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyTo", "(Landroid/graphics/Bitmap;)V", "GetCopyTo_Landroid_graphics_Bitmap_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyTo", "(Landroid/graphics/Bitmap;)V", "GetCopyTo_Landroid_graphics_Bitmap_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="b">The bitmap to be set from the Allocation.</param>
        <summary>Copy from the Allocation into a <c>android.graphics.Bitmap</c>.</summary>
        <remarks>
          <para>Copy from the Allocation into a <c>android.graphics.Bitmap</c>.  The
            bitmap must match the dimensions of the Allocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyTo(android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyTo(android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (array As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Java::Lang::Object ^ array);" />
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Java.Lang.Object? array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class Java.Lang.Object array) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyTo(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Java.Lang.Object -&gt; unit&#xA;override this.CopyTo : Java.Lang.Object -&gt; unit" Usage="allocation.CopyTo array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyTo", "(Ljava/lang/Object;)V", "GetCopyTo_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyTo", "(Ljava/lang/Object;)V", "GetCopyTo_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="array">The array to be set from the Allocation.</param>
        <summary>Copy from the Allocation into an array.</summary>
        <remarks>
          <para>Copy from the Allocation into an array. The method is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> does not match the input data type.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells will be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyTo(java.lang.Object)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyTo(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (d As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Byte&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void CopyTo (byte[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(unsigned int8[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyTo(System.Byte[])" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : byte[] -&gt; unit&#xA;override this.CopyTo : byte[] -&gt; unit" Usage="allocation.CopyTo d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyTo", "([B)V", "GetCopyTo_arrayBHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyTo", "([B)V", "GetCopyTo_arrayBHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="d">The array to be set from the Allocation.</param>
        <summary>Copy from the Allocation into a byte array.</summary>
        <remarks>
          <para>Copy from the Allocation into a byte array. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is neither an 8 bit integer nor a vector of 8 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells will be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyTo(byte[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyTo(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (d As Short())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;short&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void CopyTo (short[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int16[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyTo(System.Int16[])" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int16[] -&gt; unit&#xA;override this.CopyTo : int16[] -&gt; unit" Usage="allocation.CopyTo d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyTo", "([S)V", "GetCopyTo_arraySHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyTo", "([S)V", "GetCopyTo_arraySHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="d">The array to be set from the Allocation.</param>
        <summary>Copy from the Allocation into a short array.</summary>
        <remarks>
          <para>Copy from the Allocation into a short array. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is not a 16 bit integer nor a vector of 16 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells will be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyTo(short[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyTo(short[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (d As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;int&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void CopyTo (int[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyTo(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : int[] -&gt; unit&#xA;override this.CopyTo : int[] -&gt; unit" Usage="allocation.CopyTo d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyTo", "([I)V", "GetCopyTo_arrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyTo", "([I)V", "GetCopyTo_arrayIHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="d">The array to be set from the Allocation.</param>
        <summary>Copy from the Allocation into a int array.</summary>
        <remarks>
          <para>Copy from the Allocation into a int array. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is not a 32 bit integer nor a vector of 32 bit
            integers <c>android.renderscript.Element.DataType</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells will be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyTo(int[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyTo(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyTo (d As Single())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;float&gt; ^ d);" />
      <MemberSignature Language="C#" Value="public virtual void CopyTo (float[]? d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(float32[] d) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CopyTo(System.Single[])" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : single[] -&gt; unit&#xA;override this.CopyTo : single[] -&gt; unit" Usage="allocation.CopyTo d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("copyTo", "([F)V", "GetCopyTo_arrayFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("copyTo", "([F)V", "GetCopyTo_arrayFHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="d">The array to be set from the Allocation.</param>
        <summary>Copy from the Allocation into a float array.</summary>
        <remarks>
          <para>Copy from the Allocation into a float array. This variant is type checked
            and will generate exceptions if the Allocation's <c>android.renderscript.Element</c> is neither a 32 bit float nor a vector of
            32 bit floats <c>android.renderscript.Element.DataType</c>.</para>
          <para>If the Allocation does not have Vec3 Elements, then the size of the
            array in bytes must be at least the size of the Allocation <c>#getBytesSize getBytesSize()</c>.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is disabled, then the size of the array in bytes must be at least the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells will be part of the array.</para>
          <para>If the Allocation has Vec3 Elements and <c>#setAutoPadding AutoPadding</c>
            is enabled, then the size of the array in bytes must be at least 3/4 the size
            of the Allocation <c>#getBytesSize getBytesSize()</c>. The padding bytes for
            the cells must not be part of the array.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#copyTo(float[])" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.copyTo(float[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateAllocations">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAllocations (rs As RenderScript, t As Type, usage As Integer, numAlloc As Integer) As Allocation()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;Android::Renderscripts::Allocation ^&gt; ^ CreateAllocations(Android::Renderscripts::RenderScript ^ rs, Android::Renderscripts::Type ^ t, int usage, int numAlloc);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation[]? CreateAllocations (Android.Renderscripts.RenderScript? rs, Android.Renderscripts.Type? t, int usage, int numAlloc);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation[] CreateAllocations(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Type t, int32 usage, int32 numAlloc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateAllocations(Android.Renderscripts.RenderScript,Android.Renderscripts.Type,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CreateAllocations : Android.Renderscripts.RenderScript * Android.Renderscripts.Type * int * int -&gt; Android.Renderscripts.Allocation[]" Usage="Android.Renderscripts.Allocation.CreateAllocations (rs, t, usage, numAlloc)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createAllocations", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;II)[Landroid/renderscript/Allocation;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createAllocations", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;II)[Landroid/renderscript/Allocation;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="t" Type="Android.Renderscripts.Type" />
        <Parameter Name="usage" Type="System.Int32" />
        <Parameter Name="numAlloc" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rs">RenderScript context</param>
        <param name="t">RenderScript type describing data layout</param>
        <param name="usage">bit field specifying how the Allocation is
                         utilized</param>
        <param name="numAlloc">Number of Allocations in the array.</param>
        <summary>Creates a new Allocation Array with the given <c>android.renderscript.Type</c>, and usage flags.</summary>
        <returns>Allocation[]</returns>
        <remarks>
          <para>Creates a new Allocation Array with the given <c>android.renderscript.Type</c>, and usage flags.
            Note: If the input allocation is of usage: USAGE_IO_INPUT,
            the created Allocation will be sharing the same BufferQueue.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createAllocations(android.renderscript.RenderScript,%20android.renderscript.Type,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createAllocations(android.renderscript.RenderScript, android.renderscript.Type, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCubemapFromBitmap">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCubemapFromBitmap (rs As RenderScript, b As Bitmap) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateCubemapFromBitmap(Android::Renderscripts::RenderScript ^ rs, Android::Graphics::Bitmap ^ b);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateCubemapFromBitmap (Android.Renderscripts.RenderScript? rs, Android.Graphics.Bitmap? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateCubemapFromBitmap(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateCubemapFromBitmap(Android.Renderscripts.RenderScript,Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="static member CreateCubemapFromBitmap : Android.Renderscripts.RenderScript * Android.Graphics.Bitmap -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateCubemapFromBitmap (rs, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createCubemapFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createCubemapFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="b">bitmap with cubemap faces layed out in the following
                     format: right, left, top, bottom, front, back</param>
        <summary>Creates a non-mipmapped cubemap Allocation for use as a graphics texture
            from a <c>android.graphics.Bitmap</c> containing the horizontal list of
            cube faces.</summary>
        <returns>allocation containing cubemap data</returns>
        <remarks>
          <para>Creates a non-mipmapped cubemap Allocation for use as a graphics texture
            from a <c>android.graphics.Bitmap</c> containing the horizontal list of
            cube faces. Each face must be a square, have the same size as all other
            faces, and have a width that is a power of 2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createCubemapFromBitmap(android.renderscript.RenderScript,%20android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createCubemapFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateCubemapFromBitmap">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCubemapFromBitmap (rs As RenderScript, b As Bitmap, mips As Allocation.MipmapControl, usage As AllocationUsage) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateCubemapFromBitmap(Android::Renderscripts::RenderScript ^ rs, Android::Graphics::Bitmap ^ b, Android::Renderscripts::Allocation::MipmapControl ^ mips, Android::Renderscripts::AllocationUsage usage);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateCubemapFromBitmap (Android.Renderscripts.RenderScript? rs, Android.Graphics.Bitmap? b, Android.Renderscripts.Allocation.MipmapControl? mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateCubemapFromBitmap(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap b, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateCubemapFromBitmap(Android.Renderscripts.RenderScript,Android.Graphics.Bitmap,Android.Renderscripts.Allocation.MipmapControl,Android.Renderscripts.AllocationUsage)" />
      <MemberSignature Language="F#" Value="static member CreateCubemapFromBitmap : Android.Renderscripts.RenderScript * Android.Graphics.Bitmap * Android.Renderscripts.Allocation.MipmapControl * Android.Renderscripts.AllocationUsage -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateCubemapFromBitmap (rs, b, mips, usage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createCubemapFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createCubemapFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="b">bitmap with cubemap faces layed out in the following
                     format: right, left, top, bottom, front, back</param>
        <param name="mips">specifies desired mipmap behaviour for the cubemap</param>
        <param name="usage">bit field specifying how the cubemap is utilized</param>
        <summary>Creates a non-mipmapped cubemap Allocation for use as a graphics texture
            from a <c>android.graphics.Bitmap</c> containing the horizontal list of
            cube faces.</summary>
        <returns>allocation containing cubemap data</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createCubemapFromBitmap(android.renderscript.RenderScript,%20android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createCubemapFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateCubemapFromCubeFaces">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCubemapFromCubeFaces (rs As RenderScript, xpos As Bitmap, xneg As Bitmap, ypos As Bitmap, yneg As Bitmap, zpos As Bitmap, zneg As Bitmap) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateCubemapFromCubeFaces(Android::Renderscripts::RenderScript ^ rs, Android::Graphics::Bitmap ^ xpos, Android::Graphics::Bitmap ^ xneg, Android::Graphics::Bitmap ^ ypos, Android::Graphics::Bitmap ^ yneg, Android::Graphics::Bitmap ^ zpos, Android::Graphics::Bitmap ^ zneg);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateCubemapFromCubeFaces (Android.Renderscripts.RenderScript? rs, Android.Graphics.Bitmap? xpos, Android.Graphics.Bitmap? xneg, Android.Graphics.Bitmap? ypos, Android.Graphics.Bitmap? yneg, Android.Graphics.Bitmap? zpos, Android.Graphics.Bitmap? zneg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateCubemapFromCubeFaces(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap xpos, class Android.Graphics.Bitmap xneg, class Android.Graphics.Bitmap ypos, class Android.Graphics.Bitmap yneg, class Android.Graphics.Bitmap zpos, class Android.Graphics.Bitmap zneg) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateCubemapFromCubeFaces(Android.Renderscripts.RenderScript,Android.Graphics.Bitmap,Android.Graphics.Bitmap,Android.Graphics.Bitmap,Android.Graphics.Bitmap,Android.Graphics.Bitmap,Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="static member CreateCubemapFromCubeFaces : Android.Renderscripts.RenderScript * Android.Graphics.Bitmap * Android.Graphics.Bitmap * Android.Graphics.Bitmap * Android.Graphics.Bitmap * Android.Graphics.Bitmap * Android.Graphics.Bitmap -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateCubemapFromCubeFaces (rs, xpos, xneg, ypos, yneg, zpos, zneg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createCubemapFromCubeFaces", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createCubemapFromCubeFaces", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="xpos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="xneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="ypos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="yneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="zpos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="zneg" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="xpos">cubemap face in the positive x direction</param>
        <param name="xneg">cubemap face in the negative x direction</param>
        <param name="ypos">cubemap face in the positive y direction</param>
        <param name="yneg">cubemap face in the negative y direction</param>
        <param name="zpos">cubemap face in the positive z direction</param>
        <param name="zneg">cubemap face in the negative z direction</param>
        <summary>Creates a non-mipmapped cubemap Allocation for use as a sampler input
            from 6 <c>android.graphics.Bitmap</c> objects containing the cube
            faces.</summary>
        <returns>allocation containing cubemap data</returns>
        <remarks>
          <para>Creates a non-mipmapped cubemap Allocation for use as a sampler input
            from 6 <c>android.graphics.Bitmap</c> objects containing the cube
            faces. Each face must be a square, have the same size as all other faces,
            and have a width that is a power of 2.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createCubemapFromCubeFaces(android.renderscript.RenderScript,%20android.graphics.Bitmap,%20android.graphics.Bitmap,%20android.graphics.Bitmap,%20android.graphics.Bitmap,%20android.graphics.Bitmap,%20android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createCubemapFromCubeFaces(android.renderscript.RenderScript, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateCubemapFromCubeFaces">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateCubemapFromCubeFaces (rs As RenderScript, xpos As Bitmap, xneg As Bitmap, ypos As Bitmap, yneg As Bitmap, zpos As Bitmap, zneg As Bitmap, mips As Allocation.MipmapControl, usage As AllocationUsage) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateCubemapFromCubeFaces(Android::Renderscripts::RenderScript ^ rs, Android::Graphics::Bitmap ^ xpos, Android::Graphics::Bitmap ^ xneg, Android::Graphics::Bitmap ^ ypos, Android::Graphics::Bitmap ^ yneg, Android::Graphics::Bitmap ^ zpos, Android::Graphics::Bitmap ^ zneg, Android::Renderscripts::Allocation::MipmapControl ^ mips, Android::Renderscripts::AllocationUsage usage);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateCubemapFromCubeFaces (Android.Renderscripts.RenderScript? rs, Android.Graphics.Bitmap? xpos, Android.Graphics.Bitmap? xneg, Android.Graphics.Bitmap? ypos, Android.Graphics.Bitmap? yneg, Android.Graphics.Bitmap? zpos, Android.Graphics.Bitmap? zneg, Android.Renderscripts.Allocation.MipmapControl? mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateCubemapFromCubeFaces(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap xpos, class Android.Graphics.Bitmap xneg, class Android.Graphics.Bitmap ypos, class Android.Graphics.Bitmap yneg, class Android.Graphics.Bitmap zpos, class Android.Graphics.Bitmap zneg, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateCubemapFromCubeFaces(Android.Renderscripts.RenderScript,Android.Graphics.Bitmap,Android.Graphics.Bitmap,Android.Graphics.Bitmap,Android.Graphics.Bitmap,Android.Graphics.Bitmap,Android.Graphics.Bitmap,Android.Renderscripts.Allocation.MipmapControl,Android.Renderscripts.AllocationUsage)" />
      <MemberSignature Language="F#" Value="static member CreateCubemapFromCubeFaces : Android.Renderscripts.RenderScript * Android.Graphics.Bitmap * Android.Graphics.Bitmap * Android.Graphics.Bitmap * Android.Graphics.Bitmap * Android.Graphics.Bitmap * Android.Graphics.Bitmap * Android.Renderscripts.Allocation.MipmapControl * Android.Renderscripts.AllocationUsage -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateCubemapFromCubeFaces (rs, xpos, xneg, ypos, yneg, zpos, zneg, mips, usage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createCubemapFromCubeFaces", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createCubemapFromCubeFaces", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="xpos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="xneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="ypos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="yneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="zpos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="zneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="xpos">cubemap face in the positive x direction</param>
        <param name="xneg">cubemap face in the negative x direction</param>
        <param name="ypos">cubemap face in the positive y direction</param>
        <param name="yneg">cubemap face in the negative y direction</param>
        <param name="zpos">cubemap face in the positive z direction</param>
        <param name="zneg">cubemap face in the negative z direction</param>
        <param name="mips">specifies desired mipmap behaviour for the cubemap</param>
        <param name="usage">bit field specifying how the cubemap is utilized</param>
        <summary>Creates a non-mipmapped cubemap Allocation for use as a sampler input
            from 6 <c>android.graphics.Bitmap</c> objects containing the cube
            faces.</summary>
        <returns>allocation containing cubemap data</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createCubemapFromCubeFaces(android.renderscript.RenderScript,%20android.graphics.Bitmap,%20android.graphics.Bitmap,%20android.graphics.Bitmap,%20android.graphics.Bitmap,%20android.graphics.Bitmap,%20android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createCubemapFromCubeFaces(android.renderscript.RenderScript, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromBitmap">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromBitmap (rs As RenderScript, b As Bitmap) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateFromBitmap(Android::Renderscripts::RenderScript ^ rs, Android::Graphics::Bitmap ^ b);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateFromBitmap (Android.Renderscripts.RenderScript? rs, Android.Graphics.Bitmap? b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromBitmap(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap b) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateFromBitmap(Android.Renderscripts.RenderScript,Android.Graphics.Bitmap)" />
      <MemberSignature Language="F#" Value="static member CreateFromBitmap : Android.Renderscripts.RenderScript * Android.Graphics.Bitmap -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateFromBitmap (rs, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="b">bitmap source for the allocation data</param>
        <summary>Creates an Allocation from a <c>android.graphics.Bitmap</c>.</summary>
        <returns>Allocation containing bitmap data</returns>
        <remarks>
          <para>Creates an Allocation from a <c>android.graphics.Bitmap</c>.</para>
          <para>With target API version 18 or greater, this Allocation will be created
            with <c>#USAGE_SHARED</c>, <c>#USAGE_SCRIPT</c>, and <c>#USAGE_GRAPHICS_TEXTURE</c>. With target API version 17 or lower, this
            Allocation will be created with <c>#USAGE_GRAPHICS_TEXTURE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createFromBitmap(android.renderscript.RenderScript,%20android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromBitmap">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromBitmap (rs As RenderScript, b As Bitmap, mips As Allocation.MipmapControl, usage As AllocationUsage) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateFromBitmap(Android::Renderscripts::RenderScript ^ rs, Android::Graphics::Bitmap ^ b, Android::Renderscripts::Allocation::MipmapControl ^ mips, Android::Renderscripts::AllocationUsage usage);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateFromBitmap (Android.Renderscripts.RenderScript? rs, Android.Graphics.Bitmap? b, Android.Renderscripts.Allocation.MipmapControl? mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromBitmap(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap b, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateFromBitmap(Android.Renderscripts.RenderScript,Android.Graphics.Bitmap,Android.Renderscripts.Allocation.MipmapControl,Android.Renderscripts.AllocationUsage)" />
      <MemberSignature Language="F#" Value="static member CreateFromBitmap : Android.Renderscripts.RenderScript * Android.Graphics.Bitmap * Android.Renderscripts.Allocation.MipmapControl * Android.Renderscripts.AllocationUsage -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateFromBitmap (rs, b, mips, usage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="b">bitmap source for the allocation data</param>
        <param name="mips">specifies desired mipmap behaviour for the
             allocation</param>
        <param name="usage">bit field specifying how the allocation is
              utilized</param>
        <summary>Creates an Allocation from a <c>android.graphics.Bitmap</c>.</summary>
        <returns>Allocation containing bitmap data</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createFromBitmap(android.renderscript.RenderScript,%20android.graphics.Bitmap)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromBitmapResource">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromBitmapResource (rs As RenderScript, res As Resources, id As Integer) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateFromBitmapResource(Android::Renderscripts::RenderScript ^ rs, Android::Content::Res::Resources ^ res, int id);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateFromBitmapResource (Android.Renderscripts.RenderScript? rs, Android.Content.Res.Resources? res, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromBitmapResource(class Android.Renderscripts.RenderScript rs, class Android.Content.Res.Resources res, int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateFromBitmapResource(Android.Renderscripts.RenderScript,Android.Content.Res.Resources,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CreateFromBitmapResource : Android.Renderscripts.RenderScript * Android.Content.Res.Resources * int -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateFromBitmapResource (rs, res, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFromBitmapResource", "(Landroid/renderscript/RenderScript;Landroid/content/res/Resources;I)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFromBitmapResource", "(Landroid/renderscript/RenderScript;Landroid/content/res/Resources;I)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="res">application resources</param>
        <param name="id">resource id to load the data from</param>
        <summary>Creates a non-mipmapped Allocation to use as a graphics texture from the
            <c>android.graphics.Bitmap</c> referenced by resource ID.</summary>
        <returns>Allocation containing resource data</returns>
        <remarks>
          <para>Creates a non-mipmapped Allocation to use as a graphics texture from the
            <c>android.graphics.Bitmap</c> referenced by resource ID.</para>
          <para>With target API version 18 or greater, this allocation will be created
            with <c>#USAGE_SCRIPT</c> and <c>#USAGE_GRAPHICS_TEXTURE</c>. With
            target API version 17 or lower, this allocation will be created with
            <c>#USAGE_GRAPHICS_TEXTURE</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createFromBitmapResource(android.renderscript.RenderScript,%20android.content.res.Resources,%20int)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createFromBitmapResource(android.renderscript.RenderScript, android.content.res.Resources, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromBitmapResource">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromBitmapResource (rs As RenderScript, res As Resources, id As Integer, mips As Allocation.MipmapControl, usage As AllocationUsage) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateFromBitmapResource(Android::Renderscripts::RenderScript ^ rs, Android::Content::Res::Resources ^ res, int id, Android::Renderscripts::Allocation::MipmapControl ^ mips, Android::Renderscripts::AllocationUsage usage);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateFromBitmapResource (Android.Renderscripts.RenderScript? rs, Android.Content.Res.Resources? res, int id, Android.Renderscripts.Allocation.MipmapControl? mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromBitmapResource(class Android.Renderscripts.RenderScript rs, class Android.Content.Res.Resources res, int32 id, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateFromBitmapResource(Android.Renderscripts.RenderScript,Android.Content.Res.Resources,System.Int32,Android.Renderscripts.Allocation.MipmapControl,Android.Renderscripts.AllocationUsage)" />
      <MemberSignature Language="F#" Value="static member CreateFromBitmapResource : Android.Renderscripts.RenderScript * Android.Content.Res.Resources * int * Android.Renderscripts.Allocation.MipmapControl * Android.Renderscripts.AllocationUsage -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateFromBitmapResource (rs, res, id, mips, usage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFromBitmapResource", "(Landroid/renderscript/RenderScript;Landroid/content/res/Resources;ILandroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFromBitmapResource", "(Landroid/renderscript/RenderScript;Landroid/content/res/Resources;ILandroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="res">application resources</param>
        <param name="id">resource id to load the data from</param>
        <param name="mips">specifies desired mipmap behaviour for the
             allocation</param>
        <param name="usage">bit field specifying how the allocation is
              utilized</param>
        <summary>Creates a non-mipmapped Allocation to use as a graphics texture from the
            <c>android.graphics.Bitmap</c> referenced by resource ID.</summary>
        <returns>Allocation containing resource data</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createFromBitmapResource(android.renderscript.RenderScript,%20android.content.res.Resources,%20int)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createFromBitmapResource(android.renderscript.RenderScript, android.content.res.Resources, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromString">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromString (rs As RenderScript, str As String, usage As AllocationUsage) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateFromString(Android::Renderscripts::RenderScript ^ rs, System::String ^ str, Android::Renderscripts::AllocationUsage usage);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateFromString (Android.Renderscripts.RenderScript? rs, string? str, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromString(class Android.Renderscripts.RenderScript rs, string str, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateFromString(Android.Renderscripts.RenderScript,System.String,Android.Renderscripts.AllocationUsage)" />
      <MemberSignature Language="F#" Value="static member CreateFromString : Android.Renderscripts.RenderScript * string * Android.Renderscripts.AllocationUsage -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateFromString (rs, str, usage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createFromString", "(Landroid/renderscript/RenderScript;Ljava/lang/String;I)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createFromString", "(Landroid/renderscript/RenderScript;Ljava/lang/String;I)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="str">string to create the allocation from</param>
        <param name="usage">bit field specifying how the allocaiton is
                         utilized</param>
        <summary>Creates an Allocation containing string data encoded in UTF-8 format.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Creates an Allocation containing string data encoded in UTF-8 format.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createFromString(android.renderscript.RenderScript,%20java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createFromString(android.renderscript.RenderScript, java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateSized">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSized (rs As RenderScript, e As Element, count As Integer) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateSized(Android::Renderscripts::RenderScript ^ rs, Android::Renderscripts::Element ^ e, int count);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateSized (Android.Renderscripts.RenderScript? rs, Android.Renderscripts.Element? e, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateSized(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Element e, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateSized(Android.Renderscripts.RenderScript,Android.Renderscripts.Element,System.Int32)" />
      <MemberSignature Language="F#" Value="static member CreateSized : Android.Renderscripts.RenderScript * Android.Renderscripts.Element * int -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateSized (rs, e, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSized", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;I)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSized", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;I)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="e" Type="Android.Renderscripts.Element" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the Allocation will belong.</param>
        <param name="e">Element to use in the Allocation</param>
        <param name="count">the number of Elements in the Allocation</param>
        <summary>Creates an Allocation with a specified number of given elements</summary>
        <returns>allocation</returns>
        <remarks>
          <para>Creates an Allocation with a specified number of given elements</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createSized(android.renderscript.RenderScript,%20android.renderscript.Element,%20int)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createSized(android.renderscript.RenderScript, android.renderscript.Element, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateSized">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateSized (rs As RenderScript, e As Element, count As Integer, usage As AllocationUsage) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateSized(Android::Renderscripts::RenderScript ^ rs, Android::Renderscripts::Element ^ e, int count, Android::Renderscripts::AllocationUsage usage);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateSized (Android.Renderscripts.RenderScript? rs, Android.Renderscripts.Element? e, int count, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateSized(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Element e, int32 count, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateSized(Android.Renderscripts.RenderScript,Android.Renderscripts.Element,System.Int32,Android.Renderscripts.AllocationUsage)" />
      <MemberSignature Language="F#" Value="static member CreateSized : Android.Renderscripts.RenderScript * Android.Renderscripts.Element * int * Android.Renderscripts.AllocationUsage -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateSized (rs, e, count, usage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createSized", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;II)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createSized", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;II)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="e" Type="Android.Renderscripts.Element" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the Allocation will belong.</param>
        <param name="e">Element to use in the Allocation</param>
        <param name="count">the number of Elements in the Allocation</param>
        <param name="usage">bit field specifying how the Allocation is
                         utilized</param>
        <summary>Creates an Allocation with a specified number of given elements</summary>
        <returns>allocation</returns>
        <remarks>
          <para>Creates an Allocation with a specified number of given elements</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createSized(android.renderscript.RenderScript,%20android.renderscript.Element,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createSized(android.renderscript.RenderScript, android.renderscript.Element, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateTyped">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTyped (rs As RenderScript, type As Type) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateTyped(Android::Renderscripts::RenderScript ^ rs, Android::Renderscripts::Type ^ type);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateTyped (Android.Renderscripts.RenderScript? rs, Android.Renderscripts.Type? type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateTyped(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateTyped(Android.Renderscripts.RenderScript,Android.Renderscripts.Type)" />
      <MemberSignature Language="F#" Value="static member CreateTyped : Android.Renderscripts.RenderScript * Android.Renderscripts.Type -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateTyped (rs, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createTyped", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createTyped", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="type" Type="Android.Renderscripts.Type" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the Allocation will belong.</param>
        <param name="type">RenderScript Type describing data layout</param>
        <summary>Creates an Allocation for use by scripts with a given <c>android.renderscript.Type</c> and no mipmaps</summary>
        <returns>allocation</returns>
        <remarks>
          <para>Creates an Allocation for use by scripts with a given <c>android.renderscript.Type</c> and no mipmaps</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createTyped(android.renderscript.RenderScript,%20android.renderscript.Type)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createTyped(android.renderscript.RenderScript, android.renderscript.Type)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateTyped">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTyped (rs As RenderScript, type As Type, usage As AllocationUsage) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateTyped(Android::Renderscripts::RenderScript ^ rs, Android::Renderscripts::Type ^ type, Android::Renderscripts::AllocationUsage usage);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateTyped (Android.Renderscripts.RenderScript? rs, Android.Renderscripts.Type? type, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateTyped(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Type type, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateTyped(Android.Renderscripts.RenderScript,Android.Renderscripts.Type,Android.Renderscripts.AllocationUsage)" />
      <MemberSignature Language="F#" Value="static member CreateTyped : Android.Renderscripts.RenderScript * Android.Renderscripts.Type * Android.Renderscripts.AllocationUsage -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateTyped (rs, type, usage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createTyped", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;I)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createTyped", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;I)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="type" Type="Android.Renderscripts.Type" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="type">renderscript type describing data layout</param>
        <param name="usage">bit field specifying how the allocation is
                         utilized</param>
        <summary>Creates an Allocation with the size specified by the type and no mipmaps
            generated by default</summary>
        <returns>allocation</returns>
        <remarks>
          <para>Creates an Allocation with the size specified by the type and no mipmaps
            generated by default</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createTyped(android.renderscript.RenderScript,%20android.renderscript.Type,%20int)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createTyped(android.renderscript.RenderScript, android.renderscript.Type, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateTyped">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateTyped (rs As RenderScript, type As Type, mips As Allocation.MipmapControl, usage As AllocationUsage) As Allocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Renderscripts::Allocation ^ CreateTyped(Android::Renderscripts::RenderScript ^ rs, Android::Renderscripts::Type ^ type, Android::Renderscripts::Allocation::MipmapControl ^ mips, Android::Renderscripts::AllocationUsage usage);" />
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation? CreateTyped (Android.Renderscripts.RenderScript? rs, Android.Renderscripts.Type? type, Android.Renderscripts.Allocation.MipmapControl? mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateTyped(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Type type, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.CreateTyped(Android.Renderscripts.RenderScript,Android.Renderscripts.Type,Android.Renderscripts.Allocation.MipmapControl,Android.Renderscripts.AllocationUsage)" />
      <MemberSignature Language="F#" Value="static member CreateTyped : Android.Renderscripts.RenderScript * Android.Renderscripts.Type * Android.Renderscripts.Allocation.MipmapControl * Android.Renderscripts.AllocationUsage -&gt; Android.Renderscripts.Allocation" Usage="Android.Renderscripts.Allocation.CreateTyped (rs, type, mips, usage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createTyped", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createTyped", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="type" Type="Android.Renderscripts.Type" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the Allocation will belong.</param>
        <param name="type">RenderScript Type describing data layout</param>
        <param name="mips">specifies desired mipmap behaviour for the
             allocation</param>
        <param name="usage">bit field specifying how the Allocation is
              utilized
</param>
        <summary>Creates an Allocation for use by scripts with a given <c>android.renderscript.Type</c> and no mipmaps</summary>
        <returns>allocation</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#createTyped(android.renderscript.RenderScript,%20android.renderscript.Type)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.createTyped(android.renderscript.RenderScript, android.renderscript.Type)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Element As Element" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Renderscripts::Element ^ Element { Android::Renderscripts::Element ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Element? Element { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Element Element" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.Allocation.Element" />
      <MemberSignature Language="F#" Value="member this.Element : Android.Renderscripts.Element" Usage="Android.Renderscripts.Allocation.Element" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getElement", "()Landroid/renderscript/Element;", "GetGetElementHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getElement", "()Landroid/renderscript/Element;", "GetGetElementHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Element</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the <c>android.renderscript.Element</c> of the <c>android.renderscript.Type</c> of the Allocation.</summary>
        <value>Element</value>
        <remarks>
          <para>Get the <c>android.renderscript.Element</c> of the <c>android.renderscript.Type</c> of the Allocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#getElement()" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.getElement()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GenerateMipmaps">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GenerateMipmaps ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateMipmaps();" />
      <MemberSignature Language="C#" Value="public virtual void GenerateMipmaps ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateMipmaps() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.GenerateMipmaps" />
      <MemberSignature Language="F#" Value="abstract member GenerateMipmaps : unit -&gt; unit&#xA;override this.GenerateMipmaps : unit -&gt; unit" Usage="allocation.GenerateMipmaps " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("generateMipmaps", "()V", "GetGenerateMipmapsHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("generateMipmaps", "()V", "GetGenerateMipmapsHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generate a mipmap chain.</summary>
        <remarks>
          <para>Generate a mipmap chain. This is only valid if the Type of the Allocation
            includes mipmaps.</para>
          <para>This function will generate a complete set of mipmaps from the top
            level LOD and place them into the script memory space.</para>
          <para>If the Allocation is also using other memory spaces, a call to <c>#syncAll syncAll(Allocation.USAGE_SCRIPT)</c> is required.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#generateMipmaps()" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.generateMipmaps()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IoReceive">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub IoReceive ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void IoReceive();" />
      <MemberSignature Language="C#" Value="public virtual void IoReceive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IoReceive() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.IoReceive" />
      <MemberSignature Language="F#" Value="abstract member IoReceive : unit -&gt; unit&#xA;override this.IoReceive : unit -&gt; unit" Usage="allocation.IoReceive " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ioReceive", "()V", "GetIoReceiveHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ioReceive", "()V", "GetIoReceiveHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Receive the latest input into the Allocation.</summary>
        <remarks>
          <para>Receive the latest input into the Allocation. This operation
            is only valid if <c>#USAGE_IO_INPUT</c> is set on the Allocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#ioReceive()" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.ioReceive()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="IoSend">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub IoSend ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void IoSend();" />
      <MemberSignature Language="C#" Value="public virtual void IoSend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IoSend() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.IoSend" />
      <MemberSignature Language="F#" Value="abstract member IoSend : unit -&gt; unit&#xA;override this.IoSend : unit -&gt; unit" Usage="allocation.IoSend " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ioSend", "()V", "GetIoSendHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ioSend", "()V", "GetIoSendHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Send a buffer to the output stream.</summary>
        <remarks>
          <para>Send a buffer to the output stream.  The contents of the Allocation will
            be undefined after this operation. This operation is only valid if <c>#USAGE_IO_OUTPUT</c> is set on the Allocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#ioSend()" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.ioSend()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.Allocation.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Renderscripts.Allocation.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Resize (dimX As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Resize(int dimX);" />
      <MemberSignature Language="C#" Value="public virtual void Resize (int dimX);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resize(int32 dimX) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.Resize(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Resize : int -&gt; unit&#xA;override this.Resize : int -&gt; unit" Usage="allocation.Resize dimX" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resize", "(I)V", "GetResize_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resize", "(I)V", "GetResize_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimX" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimX">The new size of the allocation.</param>
        <summary>Resize a 1D allocation.</summary>
        <remarks>
          <para>Resize a 1D allocation.  The contents of the allocation are preserved.
            If new elements are allocated objects are created with null contents and
            the new region is otherwise undefined.</para>
          <para>If the new region is smaller the references of any objects outside the
            new region will be released.</para>
          <para>A new type will be created with the new dimension.</para>
          <para>This member is deprecated. RenderScript objects should be immutable once created.  The
            replacement is to create a new allocation and copy the contents. This
            function will throw an exception if API 21 or higher is used.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#resize(int)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.resize(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetAutoPadding">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetAutoPadding (useAutoPadding As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetAutoPadding(bool useAutoPadding);" />
      <MemberSignature Language="C#" Value="public virtual void SetAutoPadding (bool useAutoPadding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAutoPadding(bool useAutoPadding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.SetAutoPadding(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetAutoPadding : bool -&gt; unit&#xA;override this.SetAutoPadding : bool -&gt; unit" Usage="allocation.SetAutoPadding useAutoPadding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setAutoPadding", "(Z)V", "GetSetAutoPadding_ZHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setAutoPadding", "(Z)V", "GetSetAutoPadding_ZHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useAutoPadding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useAutoPadding">True: enable AutoPadding; False: disable AutoPadding</param>
        <summary>Specifies the mapping between the Allocation's cells and an array's elements
            when data is copied from the Allocation to the array, or vice-versa.</summary>
        <remarks>
          <para>Specifies the mapping between the Allocation's cells and an array's elements
            when data is copied from the Allocation to the array, or vice-versa.
            
            Only applies to an Allocation whose Element is a vector of length 3 (such as
            <c>Element#U8_3</c> or <c>Element#RGB_888</c>). Enabling this feature may make
            copying data from the Allocation to an array or vice-versa less efficient.</para>
          <para>Vec3 Element cells are stored in an Allocation as Vec4 Element cells with
            the same <c>android.renderscript.Element.DataType</c>, with the fourth vector
            component treated as padding. When this feature is enabled, only the data components,
            i.e. the first 3 vector components of each cell, will be mapped between the array
            and the Allocation. When disabled, explicit mapping of the padding components
            is required, as described in the following example.</para>
          <para>For example, when copying an integer array to an Allocation of two <c>Element#I32_3</c> cells using <c>#copyFrom(int[])</c>:</para>
          <para>When disabled:
                The array must have at least 8 integers, with the first 4 integers copied
                to the first cell of the Allocation, and the next 4 integers copied to
                the second cell. The 4th and 8th integers are mapped as the padding components.</para>
          <para>When enabled:
                The array just needs to have at least 6 integers, with the first 3 integers
                copied to the the first cell as data components, and the next 3 copied to
                the second cell. There is no mapping for the padding components.</para>
          <para>Similarly, when copying a byte array to an Allocation of two <c>Element#I32_3</c> cells, using <c>#copyFromUnchecked(int[])</c>:</para>
          <para>When disabled:
                The array must have at least 32 bytes, with the first 16 bytes copied
                to the first cell of the Allocation, and the next 16 bytes copied to
                the second cell. The 13th-16th and 29th-32nd bytes are mapped as padding
                components.</para>
          <para>When enabled:
                The array just needs to have at least 24 bytes, with the first 12 bytes copied
                to the first cell of the Allocation, and the next 12 bytes copied to
                the second cell. There is no mapping for the padding components.</para>
          <para>Similar to copying data to an Allocation from an array, when copying data from an
            Allocation to an array, the padding components for Vec3 Element cells will not be
            copied/mapped to the array if AutoPadding is enabled.</para>
          <para>Default: Disabled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#setAutoPadding(boolean)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.setAutoPadding(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFromFieldPacker">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFromFieldPacker (xoff As Integer, fp As FieldPacker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFromFieldPacker(int xoff, Android::Renderscripts::FieldPacker ^ fp);" />
      <MemberSignature Language="C#" Value="public virtual void SetFromFieldPacker (int xoff, Android.Renderscripts.FieldPacker? fp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFromFieldPacker(int32 xoff, class Android.Renderscripts.FieldPacker fp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.SetFromFieldPacker(System.Int32,Android.Renderscripts.FieldPacker)" />
      <MemberSignature Language="F#" Value="abstract member SetFromFieldPacker : int * Android.Renderscripts.FieldPacker -&gt; unit&#xA;override this.SetFromFieldPacker : int * Android.Renderscripts.FieldPacker -&gt; unit" Usage="allocation.SetFromFieldPacker (xoff, fp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFromFieldPacker", "(ILandroid/renderscript/FieldPacker;)V", "GetSetFromFieldPacker_ILandroid_renderscript_FieldPacker_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFromFieldPacker", "(ILandroid/renderscript/FieldPacker;)V", "GetSetFromFieldPacker_ILandroid_renderscript_FieldPacker_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="fp" Type="Android.Renderscripts.FieldPacker" />
      </Parameters>
      <Docs>
        <param name="xoff">xoff</param>
        <param name="fp">fp</param>
        <summary>This is only intended to be used by auto-generated code reflected from
            the RenderScript script files and should not be used by developers.</summary>
        <remarks>
          <para>This is only intended to be used by auto-generated code reflected from
            the RenderScript script files and should not be used by developers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#setFromFieldPacker(int,%20android.renderscript.FieldPacker)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.setFromFieldPacker(int, android.renderscript.FieldPacker)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetFromFieldPacker">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFromFieldPacker (xoff As Integer, component_number As Integer, fp As FieldPacker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFromFieldPacker(int xoff, int component_number, Android::Renderscripts::FieldPacker ^ fp);" />
      <MemberSignature Language="C#" Value="public virtual void SetFromFieldPacker (int xoff, int component_number, Android.Renderscripts.FieldPacker? fp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFromFieldPacker(int32 xoff, int32 component_number, class Android.Renderscripts.FieldPacker fp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.SetFromFieldPacker(System.Int32,System.Int32,Android.Renderscripts.FieldPacker)" />
      <MemberSignature Language="F#" Value="abstract member SetFromFieldPacker : int * int * Android.Renderscripts.FieldPacker -&gt; unit&#xA;override this.SetFromFieldPacker : int * int * Android.Renderscripts.FieldPacker -&gt; unit" Usage="allocation.SetFromFieldPacker (xoff, component_number, fp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFromFieldPacker", "(IILandroid/renderscript/FieldPacker;)V", "GetSetFromFieldPacker_IILandroid_renderscript_FieldPacker_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFromFieldPacker", "(IILandroid/renderscript/FieldPacker;)V", "GetSetFromFieldPacker_IILandroid_renderscript_FieldPacker_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="component_number" Type="System.Int32" />
        <Parameter Name="fp" Type="Android.Renderscripts.FieldPacker" />
      </Parameters>
      <Docs>
        <param name="xoff">xoff</param>
        <param name="component_number">component_number</param>
        <param name="fp">fp</param>
        <summary>This is only intended to be used by auto-generated code reflected from
            the RenderScript script files and should not be used by developers.</summary>
        <remarks>
          <para>This is only intended to be used by auto-generated code reflected from
            the RenderScript script files and should not be used by developers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#setFromFieldPacker(int,%20int,%20android.renderscript.FieldPacker)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.setFromFieldPacker(int, int, android.renderscript.FieldPacker)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetFromFieldPacker">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetFromFieldPacker (xoff As Integer, yoff As Integer, zoff As Integer, component_number As Integer, fp As FieldPacker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetFromFieldPacker(int xoff, int yoff, int zoff, int component_number, Android::Renderscripts::FieldPacker ^ fp);" />
      <MemberSignature Language="C#" Value="public virtual void SetFromFieldPacker (int xoff, int yoff, int zoff, int component_number, Android.Renderscripts.FieldPacker? fp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFromFieldPacker(int32 xoff, int32 yoff, int32 zoff, int32 component_number, class Android.Renderscripts.FieldPacker fp) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.SetFromFieldPacker(System.Int32,System.Int32,System.Int32,System.Int32,Android.Renderscripts.FieldPacker)" />
      <MemberSignature Language="F#" Value="abstract member SetFromFieldPacker : int * int * int * int * Android.Renderscripts.FieldPacker -&gt; unit&#xA;override this.SetFromFieldPacker : int * int * int * int * Android.Renderscripts.FieldPacker -&gt; unit" Usage="allocation.SetFromFieldPacker (xoff, yoff, zoff, component_number, fp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFromFieldPacker", "(IIIILandroid/renderscript/FieldPacker;)V", "GetSetFromFieldPacker_IIIILandroid_renderscript_FieldPacker_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFromFieldPacker", "(IIIILandroid/renderscript/FieldPacker;)V", "GetSetFromFieldPacker_IIIILandroid_renderscript_FieldPacker_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="zoff" Type="System.Int32" />
        <Parameter Name="component_number" Type="System.Int32" />
        <Parameter Name="fp" Type="Android.Renderscripts.FieldPacker" />
      </Parameters>
      <Docs>
        <param name="xoff">xoff</param>
        <param name="yoff">yoff</param>
        <param name="zoff">zoff</param>
        <param name="component_number">component_number</param>
        <param name="fp">fp</param>
        <summary>This is only intended to be used by auto-generated code reflected from
            the RenderScript script files and should not be used by developers.</summary>
        <remarks>
          <para>This is only intended to be used by auto-generated code reflected from
            the RenderScript script files and should not be used by developers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#setFromFieldPacker(int,%20int,%20int,%20int,%20android.renderscript.FieldPacker)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.setFromFieldPacker(int, int, int, int, android.renderscript.FieldPacker)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnBufferAvailableListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOnBufferAvailableListener (callback As Allocation.IOnBufferAvailableListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOnBufferAvailableListener(Android::Renderscripts::Allocation::IOnBufferAvailableListener ^ callback);" />
      <MemberSignature Language="C#" Value="public virtual void SetOnBufferAvailableListener (Android.Renderscripts.Allocation.IOnBufferAvailableListener? callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnBufferAvailableListener(class Android.Renderscripts.Allocation/IOnBufferAvailableListener callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.SetOnBufferAvailableListener(Android.Renderscripts.Allocation.IOnBufferAvailableListener)" />
      <MemberSignature Language="F#" Value="abstract member SetOnBufferAvailableListener : Android.Renderscripts.Allocation.IOnBufferAvailableListener -&gt; unit&#xA;override this.SetOnBufferAvailableListener : Android.Renderscripts.Allocation.IOnBufferAvailableListener -&gt; unit" Usage="allocation.SetOnBufferAvailableListener callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOnBufferAvailableListener", "(Landroid/renderscript/Allocation$OnBufferAvailableListener;)V", "GetSetOnBufferAvailableListener_Landroid_renderscript_Allocation_OnBufferAvailableListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOnBufferAvailableListener", "(Landroid/renderscript/Allocation$OnBufferAvailableListener;)V", "GetSetOnBufferAvailableListener_Landroid_renderscript_Allocation_OnBufferAvailableListener_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Renderscripts.Allocation+IOnBufferAvailableListener" />
      </Parameters>
      <Docs>
        <param name="callback">instance of the OnBufferAvailableListener
                            class to be called when buffer arrive.</param>
        <summary>Set a notification handler for <c>#USAGE_IO_INPUT</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#setOnBufferAvailableListener(android.renderscript.OnBufferAvailableListener)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.setOnBufferAvailableListener(android.renderscript.OnBufferAvailableListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stride">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Stride As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Stride { long get(); };" />
      <MemberSignature Language="C#" Value="public virtual long Stride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Stride" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.Allocation.Stride" />
      <MemberSignature Language="F#" Value="member this.Stride : int64" Usage="Android.Renderscripts.Allocation.Stride" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStride", "()J", "GetGetStrideHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStride", "()J", "GetGetStrideHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the stride of the Allocation.</summary>
        <value>the stride. For 1D Allocation, the stride will be the number of
                    bytes of this Allocation. For 2D and 3D Allocations, the stride
                    will be the stride in X dimension measuring in bytes.</value>
        <remarks>
          <para>Gets the stride of the Allocation.
            For a 2D or 3D Allocation, the raw data maybe padded so that each row of
            the Allocation has certain alignment. The size of each row including such
            padding is called stride.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#getStride()" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.getStride()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Surface">
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Surface As Surface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::Surface ^ Surface { Android::Views::Surface ^ get(); void set(Android::Views::Surface ^ value); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Views.Surface? Surface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Surface Surface" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.Allocation.Surface" />
      <MemberSignature Language="F#" Value="member this.Surface : Android.Views.Surface with get, set" Usage="Android.Renderscripts.Allocation.Surface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSurface", "()Landroid/view/Surface;", "GetGetSurfaceHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSurface", "()Landroid/view/Surface;", "GetGetSurfaceHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setSurface", "(Landroid/view/Surface;)V", "GetSetSurface_Landroid_view_Surface_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setSurface", "(Landroid/view/Surface;)V", "GetSetSurface_Landroid_view_Surface_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Surface</ReturnType>
      </ReturnValue>
      <Docs>
        <param name="sur">Surface to associate with allocation</param>
        <summary>Returns the handle to a raw buffer that is being managed by the screen
            compositor. -or- Associate a <c>android.view.Surface</c> with this Allocation.</summary>
        <value>Surface object associated with allocation</value>
        <remarks>
          <para>Property getter documentation:</para>
          <para>Returns the handle to a raw buffer that is being managed by the screen
            compositor. This operation is only valid for Allocations with <c>#USAGE_IO_INPUT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#getSurface()" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.getSurface()</code>.</a>
            </format>
          </para>
          <para>Property setter documentation:</para>
          <para>Associate a <c>android.view.Surface</c> with this Allocation. This
            operation is only valid for Allocations with <c>#USAGE_IO_OUTPUT</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#setSurface(android.view.Surface)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.setSurface(android.view.Surface)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SyncAll">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SyncAll (srcLocation As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SyncAll(int srcLocation);" />
      <MemberSignature Language="C#" Value="public virtual void SyncAll (int srcLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SyncAll(int32 srcLocation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.Allocation.SyncAll(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SyncAll : int -&gt; unit&#xA;override this.SyncAll : int -&gt; unit" Usage="allocation.SyncAll srcLocation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("syncAll", "(I)V", "GetSyncAll_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("syncAll", "(I)V", "GetSyncAll_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcLocation" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="srcLocation">To be added.</param>
        <summary>Propagate changes from one usage of the Allocation to the
            other usages of the Allocation.</summary>
        <remarks>
          <para>Propagate changes from one usage of the Allocation to the
            other usages of the Allocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#syncAll(int)" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.syncAll(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.Allocation.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Renderscripts.Allocation.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.Allocation.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Renderscripts.Allocation.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeStamp">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TimeStamp As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long TimeStamp { long get(); };" />
      <MemberSignature Language="C#" Value="public virtual long TimeStamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 TimeStamp" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.Allocation.TimeStamp" />
      <MemberSignature Language="F#" Value="member this.TimeStamp : int64" Usage="Android.Renderscripts.Allocation.TimeStamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTimeStamp", "()J", "GetGetTimeStampHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTimeStamp", "()J", "GetGetTimeStampHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the timestamp for the most recent buffer held by this Allocation.</summary>
        <value>long Timestamp associated with the buffer held by the Allocation.</value>
        <remarks>
          <para>Get the timestamp for the most recent buffer held by this Allocation.
            The timestamp is guaranteed to be unique and monotonically increasing.
            Default value: -1. The timestamp will be updated after each <c>#ioReceive ioReceive()</c> call.
            
            It can be used to identify the images by comparing the unique timestamps
            when used with <c>android.hardware.camera2</c> APIs.
            Example steps:
              1. Save <c>android.hardware.camera2.TotalCaptureResult</c> when the
                 capture is completed.
              2. Get the timestamp after <c>#ioReceive ioReceive()</c> call.
              3. Comparing totalCaptureResult.get(CaptureResult.SENSOR_TIMESTAMP) with
                 alloc.getTimeStamp().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#getTimeStamp()" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.getTimeStamp()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Type As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Renderscripts::Type ^ Type { Android::Renderscripts::Type ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Type? Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Type Type" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.Allocation.Type" />
      <MemberSignature Language="F#" Value="member this.Type : Android.Renderscripts.Type" Usage="Android.Renderscripts.Allocation.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getType", "()Landroid/renderscript/Type;", "GetGetTypeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getType", "()Landroid/renderscript/Type;", "GetGetTypeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the <c>android.renderscript.Type</c> of the Allocation.</summary>
        <value>Type</value>
        <remarks>
          <para>Get the <c>android.renderscript.Type</c> of the Allocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#getType()" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.getType()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Usage">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Usage As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Usage { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int Usage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Usage" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.Allocation.Usage" />
      <MemberSignature Language="F#" Value="member this.Usage : int" Usage="Android.Renderscripts.Allocation.Usage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getUsage", "()I", "GetGetUsageHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getUsage", "()I", "GetGetUsageHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the usage flags of the Allocation.</summary>
        <value>usage this Allocation's set of the USAGE_* flags OR'd together</value>
        <remarks>
          <para>Get the usage flags of the Allocation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/Allocation#getUsage()" title="Reference documentation">Java documentation for <code>android.renderscript.Allocation.getUsage()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
  </Members>
</Type>
