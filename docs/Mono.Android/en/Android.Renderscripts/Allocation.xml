<Type Name="Allocation" FullName="Android.Renderscripts.Allocation">
  <TypeSignature Language="C#" Value="public class Allocation : Android.Renderscripts.BaseObj" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Allocation extends Android.Renderscripts.BaseObj" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Renderscripts.BaseObj</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/renderscript/Allocation", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="11">
    <summary>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc"> This class provides the primary method through which data is passed to
 and from RenderScript kernels.  An Allocation provides the backing store for
 a given <c><see cref="T:Android.Renderscripts.Type" /></c>.  </para>
      <para tool="javadoc-to-mdoc">An Allocation also contains a set of usage flags that denote how the
 Allocation could be used. For example, an Allocation may have usage flags
 specifying that it can be used from a script as well as input to a <c><see cref="T:Android.Renderscripts.Sampler" /></c>. A developer must synchronize across these
 different usages using <c><see cref="M:Android.Renderscripts.Allocation.SyncAll(System.Int32)" /></c> in
 order to ensure that different users of the Allocation have a consistent view
 of memory. For example, in the case where an Allocation is used as the output
 of one kernel and as Sampler input in a later kernel, a developer must call
 <c><see cref="M:Android.Renderscripts.Allocation.SyncAll(System.Int32)" /></c> prior to launching the
 second kernel to ensure correctness.

 <format type="text/html"><h3>Developer Guides</h3></format></para>
      <para tool="javadoc-to-mdoc">An Allocation can be populated with the <c><see cref="M:Android.Renderscripts.Allocation.CopyFrom(Android.Graphics.Bitmap)" /></c> routines. For
 more complex Element types, the <c><see cref="M:Android.Renderscripts.Allocation.CopyFromUnchecked(System.Byte[])" /></c> methods can be
 used to copy from byte arrays or similar constructs.</para>
      <para tool="javadoc-to-mdoc">For more information about creating an application that uses RenderScript, read the
 <format type="text/html"><a href="http://developer.android.com/reference/../guide/topics/renderscript/index.html">RenderScript</a></format> developer guide.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/renderscript/Allocation.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 11" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Allocation (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BufferAvailable">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Renderscripts.Allocation.BufferAvailableEventArgs&gt; BufferAvailable;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Renderscripts.Allocation/BufferAvailableEventArgs&gt; BufferAvailable" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Renderscripts.Allocation+BufferAvailableEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BytesSize">
      <MemberSignature Language="C#" Value="public virtual int BytesSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BytesSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBytesSize", "()I", "GetGetBytesSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the size of the Allocation in bytes.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the size of the Allocation in bytes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#getBytesSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, Java.Lang.Object array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, class Java.Lang.Object array) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFrom", "(IILjava/lang/Object;)V", "GetCopy1DRangeFrom_IILjava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="array">The source data array.
</param>
        <summary tool="true">Copy an array into part of this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an array into part of this Allocation.  This variant is type checked
 and will generate exceptions if the Allocation type does not
 match the component type of the array passed in.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFrom(int, int, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, byte[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, unsigned int8[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFrom", "(II[B)V", "GetCopy1DRangeFrom_IIarrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy an array into part of this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an array into part of this Allocation.  This variant is type checked
 and will generate exceptions if the Allocation type is not an 8 bit
 integer type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFrom(int, int, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, short[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, int16[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFrom", "(II[S)V", "GetCopy1DRangeFrom_IIarraySHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy an array into part of this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an array into part of this Allocation.  This variant is type checked
 and will generate exceptions if the Allocation type is not a 16 bit
 integer type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFrom(int, int, short[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, int[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, int32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFrom", "(II[I)V", "GetCopy1DRangeFrom_IIarrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy an array into part of this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an array into part of this Allocation.  This variant is type checked
 and will generate exceptions if the Allocation type is not a 32 bit
 integer type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFrom(int, int, int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, float[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, float32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFrom", "(II[F)V", "GetCopy1DRangeFrom_IIarrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array.
</param>
        <summary>Copy an array into part of this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an array into part of this Allocation.  This variant is type checked
 and will generate exceptions if the Allocation type is not a 32 bit float
 type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFrom(int, int, float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFrom (int off, int count, Android.Renderscripts.Allocation data, int dataOff);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFrom(int32 off, int32 count, class Android.Renderscripts.Allocation data, int32 dataOff) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFrom", "(IILandroid/renderscript/Allocation;I)V", "GetCopy1DRangeFrom_IILandroid_renderscript_Allocation_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="data" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="dataOff" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="data">the source data allocation.</param>
        <param name="dataOff">off The offset of the first element in data to
          be copied.
</param>
        <summary>Copy part of an Allocation into this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy part of an Allocation into this Allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFrom(int, int, android.renderscript.Allocation, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, Java.Lang.Object array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, class Java.Lang.Object array) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFromUnchecked", "(IILjava/lang/Object;)V", "GetCopy1DRangeFromUnchecked_IILjava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="array">The source data array
</param>
        <summary>Copy an array into part of this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an array into part of this Allocation.  This method does not
 guarantee that the Allocation is compatible with the input buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFromUnchecked(int, int, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, byte[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, unsigned int8[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[B)V", "GetCopy1DRangeFromUnchecked_IIarrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy an array into part of this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an array into part of this Allocation.  This method does not
 guarantee that the Allocation is compatible with the input buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFromUnchecked(int, int, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, short[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, int16[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[S)V", "GetCopy1DRangeFromUnchecked_IIarraySHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy an array into part of this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an array into part of this Allocation.  This method does not
 guarantee that the Allocation is compatible with the input buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFromUnchecked(int, int, short[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, int[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, int32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[I)V", "GetCopy1DRangeFromUnchecked_IIarrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy an array into part of this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an array into part of this Allocation.  This method does not
 guarantee that the Allocation is compatible with the input buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFromUnchecked(int, int, int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy1DRangeFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void Copy1DRangeFromUnchecked (int off, int count, float[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy1DRangeFromUnchecked(int32 off, int32 count, float32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy1DRangeFromUnchecked", "(II[F)V", "GetCopy1DRangeFromUnchecked_IIarrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="off" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="off">The offset of the first element to be copied.</param>
        <param name="count">The number of elements to be copied.</param>
        <param name="d">the source data array
</param>
        <summary>Copy an array into part of this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an array into part of this Allocation.  This method does not
 guarantee that the Allocation is compatible with the input buffer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy1DRangeFromUnchecked(int, int, float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, Android.Graphics.Bitmap data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, class Android.Graphics.Bitmap data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy2DRangeFrom", "(IILandroid/graphics/Bitmap;)V", "GetCopy2DRangeFrom_IILandroid_graphics_Bitmap_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="data" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="data">the Bitmap to be copied
</param>
        <summary tool="true">Copy a <c><see cref="T:Android.Graphics.Bitmap" /></c> into an Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy a <c><see cref="T:Android.Graphics.Bitmap" /></c> into an Allocation.  The height
 and width of the update will use the height and width of the <c><see cref="T:Android.Graphics.Bitmap" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy2DRangeFrom(int, int, android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, Java.Lang.Object array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, class Java.Lang.Object array) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy2DRangeFrom", "(IIIILjava/lang/Object;)V", "GetCopy2DRangeFrom_IIIILjava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="w">Width of the region to update</param>
        <param name="h">Height of the region to update</param>
        <param name="array">Data to be placed into the Allocation
</param>
        <summary>Copy from an array into a rectangular region in this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from an array into a rectangular region in this Allocation.  The
 array is assumed to be tightly packed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy2DRangeFrom(int, int, int, int, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, unsigned int8[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy2DRangeFrom", "(IIII[B)V", "GetCopy2DRangeFrom_IIIIarrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="w">Width of the region to update</param>
        <param name="h">Height of the region to update</param>
        <param name="data">to be placed into the Allocation
</param>
        <summary>Copy from an array into a rectangular region in this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from an array into a rectangular region in this Allocation.  The
 array is assumed to be tightly packed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy2DRangeFrom(int, int, int, int, byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, short[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, int16[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy2DRangeFrom", "(IIII[S)V", "GetCopy2DRangeFrom_IIIIarraySHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="w">Width of the region to update</param>
        <param name="h">Height of the region to update</param>
        <param name="data">to be placed into the Allocation
</param>
        <summary>Copy from an array into a rectangular region in this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from an array into a rectangular region in this Allocation.  The
 array is assumed to be tightly packed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy2DRangeFrom(int, int, int, int, short[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, int[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, int32[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy2DRangeFrom", "(IIII[I)V", "GetCopy2DRangeFrom_IIIIarrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="w">Width of the region to update</param>
        <param name="h">Height of the region to update</param>
        <param name="data">to be placed into the Allocation
</param>
        <summary>Copy from an array into a rectangular region in this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from an array into a rectangular region in this Allocation.  The
 array is assumed to be tightly packed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy2DRangeFrom(int, int, int, int, int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, float[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, float32[] data) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy2DRangeFrom", "(IIII[F)V", "GetCopy2DRangeFrom_IIIIarrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region to update in this Allocation</param>
        <param name="yoff">Y offset of the region to update in this Allocation</param>
        <param name="w">Width of the region to update</param>
        <param name="h">Height of the region to update</param>
        <param name="data">to be placed into the Allocation
</param>
        <summary>Copy from an array into a rectangular region in this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from an array into a rectangular region in this Allocation.  The
 array is assumed to be tightly packed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy2DRangeFrom(int, int, int, int, float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Copy2DRangeFrom">
      <MemberSignature Language="C#" Value="public virtual void Copy2DRangeFrom (int xoff, int yoff, int w, int h, Android.Renderscripts.Allocation data, int dataXoff, int dataYoff);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Copy2DRangeFrom(int32 xoff, int32 yoff, int32 w, int32 h, class Android.Renderscripts.Allocation data, int32 dataXoff, int32 dataYoff) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copy2DRangeFrom", "(IIIILandroid/renderscript/Allocation;II)V", "GetCopy2DRangeFrom_IIIILandroid_renderscript_Allocation_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="yoff" Type="System.Int32" />
        <Parameter Name="w" Type="System.Int32" />
        <Parameter Name="h" Type="System.Int32" />
        <Parameter Name="data" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="dataXoff" Type="System.Int32" />
        <Parameter Name="dataYoff" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xoff">X offset of the region in this Allocation</param>
        <param name="yoff">Y offset of the region in this Allocation</param>
        <param name="w">Width of the region to update.</param>
        <param name="h">Height of the region to update.</param>
        <param name="data">source Allocation.</param>
        <param name="dataXoff">X offset in source Allocation</param>
        <param name="dataYoff">Y offset in source Allocation
</param>
        <summary>Copy a rectangular region from an Allocation into a rectangular region in
 this Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy a rectangular region from an Allocation into a rectangular region in
 this Allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copy2DRangeFrom(int, int, int, int, android.renderscript.Allocation, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (Android.Graphics.Bitmap b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class Android.Graphics.Bitmap b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "(Landroid/graphics/Bitmap;)V", "GetCopyFrom_Landroid_graphics_Bitmap_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="b">the source bitmap
</param>
        <summary tool="true">Copy into an Allocation from a <c><see cref="T:Android.Graphics.Bitmap" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy into an Allocation from a <c><see cref="T:Android.Graphics.Bitmap" /></c>.  The
 height, width, and format of the bitmap must match the existing
 allocation.

 </para>
          <para tool="javadoc-to-mdoc">If the <c><see cref="T:Android.Graphics.Bitmap" /></c> is the same as the <c><see cref="T:Android.Graphics.Bitmap" /></c> used to create the Allocation with <c><see cref="M:Android.Renderscripts.Allocation.CreateFromBitmap(Android.Renderscripts.RenderScript,Android.Graphics.Bitmap)" /></c> and <c><see cref="!:Android.Renderscripts.Allocation.USAGE_SHARED" /></c> is set on the Allocation,
 this will synchronize the Allocation with the latest data from the <c><see cref="T:Android.Graphics.Bitmap" /></c>, potentially avoiding the actual copy.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (Android.Renderscripts.Allocation a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class Android.Renderscripts.Allocation a) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "(Landroid/renderscript/Allocation;)V", "GetCopyFrom_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="a">the source allocation
</param>
        <summary>Copy an Allocation from an Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an Allocation from an Allocation.  The types of both allocations
 must be identical.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(android.renderscript.Allocation)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (Android.Renderscripts.BaseObj[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class Android.Renderscripts.BaseObj[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "([Landroid/renderscript/BaseObj;)V", "GetCopyFrom_arrayLandroid_renderscript_BaseObj_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="Android.Renderscripts.BaseObj[]" />
      </Parameters>
      <Docs>
        <param name="d">Source array.
</param>
        <summary>Copy an array of RS objects to the Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy an array of RS objects to the Allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(android.renderscript.BaseObj[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (Java.Lang.Object array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class Java.Lang.Object array) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "(Ljava/lang/Object;)V", "GetCopyFrom_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="array">The source data array
</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy into this Allocation from an array.  This variant is type checked
 and will generate exceptions if the Allocation's <c><see cref="T:Android.Renderscripts.Element" /></c> does not match the array's
 primitive type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (byte[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(unsigned int8[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "([B)V", "GetCopyFrom_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy into this Allocation from an array.  This variant is type checked
 and will generate exceptions if the Allocation's <c><see cref="T:Android.Renderscripts.Element" /></c> is not an 8 bit integer type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (short[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(int16[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "([S)V", "GetCopyFrom_arraySHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy into this Allocation from an array.  This variant is type checked
 and will generate exceptions if the Allocation's <c><see cref="T:Android.Renderscripts.Element" /></c> is not a 16 bit integer type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(short[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (int[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(int32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "([I)V", "GetCopyFrom_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy into this Allocation from an array.  This variant is type checked
 and will generate exceptions if the Allocation's <c><see cref="T:Android.Renderscripts.Element" /></c> is not a 32 bit integer type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (float[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(float32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFrom", "([F)V", "GetCopyFrom_arrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy into this Allocation from an array.  This variant is type checked
 and will generate exceptions if the Allocation's <c><see cref="T:Android.Renderscripts.Element" /></c> is not a 32 bit float type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFrom(float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (Java.Lang.Object array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(class Java.Lang.Object array) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFromUnchecked", "(Ljava/lang/Object;)V", "GetCopyFromUnchecked_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="array">The source data array
</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy into this Allocation from an array. This method does not guarantee
 that the Allocation is compatible with the input buffer; it copies memory
 without reinterpretation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFromUnchecked(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (byte[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(unsigned int8[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFromUnchecked", "([B)V", "GetCopyFromUnchecked_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy into this Allocation from an array. This method does not guarantee
 that the Allocation is compatible with the input buffer; it copies memory
 without reinterpretation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFromUnchecked(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (short[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(int16[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFromUnchecked", "([S)V", "GetCopyFromUnchecked_arraySHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy into this Allocation from an array. This method does not guarantee
 that the Allocation is compatible with the input buffer; it copies memory
 without reinterpretation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFromUnchecked(short[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (int[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(int32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFromUnchecked", "([I)V", "GetCopyFromUnchecked_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy into this Allocation from an array. This method does not guarantee
 that the Allocation is compatible with the input buffer; it copies memory
 without reinterpretation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFromUnchecked(int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyFromUnchecked">
      <MemberSignature Language="C#" Value="public virtual void CopyFromUnchecked (float[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFromUnchecked(float32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyFromUnchecked", "([F)V", "GetCopyFromUnchecked_arrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="d">the source data array
</param>
        <summary>Copy into this Allocation from an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy into this Allocation from an array. This method does not guarantee
 that the Allocation is compatible with the input buffer; it copies memory
 without reinterpretation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyFromUnchecked(float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Android.Graphics.Bitmap b);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class Android.Graphics.Bitmap b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyTo", "(Landroid/graphics/Bitmap;)V", "GetCopyTo_Landroid_graphics_Bitmap_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="b">The bitmap to be set from the Allocation.
</param>
        <summary tool="true">Copy from the Allocation into a <c><see cref="T:Android.Graphics.Bitmap" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from the Allocation into a <c><see cref="T:Android.Graphics.Bitmap" /></c>.  The
 bitmap must match the dimensions of the Allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyTo(android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (Java.Lang.Object array);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class Java.Lang.Object array) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyTo", "(Ljava/lang/Object;)V", "GetCopyTo_Ljava_lang_Object_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="array">The array to be set from the Allocation.
</param>
        <summary>Copy from the Allocation into an array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from the Allocation into an array.  The array must be at
 least as large as the Allocation.  The
 <c><see cref="T:Android.Renderscripts.Element" /></c> must match the component
 type of the array passed in.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyTo(java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (byte[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(unsigned int8[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyTo", "([B)V", "GetCopyTo_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="d">The array to be set from the Allocation.
</param>
        <summary>Copy from the Allocation into a byte array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from the Allocation into a byte array.  The array must be at least
 as large as the Allocation.  The allocation must be of an 8 bit integer
 <c><see cref="T:Android.Renderscripts.Element" /></c> type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyTo(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (short[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int16[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyTo", "([S)V", "GetCopyTo_arraySHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int16[]" />
      </Parameters>
      <Docs>
        <param name="d">The array to be set from the Allocation.
</param>
        <summary>Copy from the Allocation into a short array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from the Allocation into a short array.  The array must be at least
 as large as the Allocation.  The allocation must be of an 16 bit integer
 <c><see cref="T:Android.Renderscripts.Element" /></c> type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyTo(short[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (int[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(int32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyTo", "([I)V", "GetCopyTo_arrayIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="d">The array to be set from the Allocation.
</param>
        <summary>Copy from the Allocation into a int array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from the Allocation into a int array.  The array must be at least as
 large as the Allocation.  The allocation must be of an 32 bit integer
 <c><see cref="T:Android.Renderscripts.Element" /></c> type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyTo(int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public virtual void CopyTo (float[] d);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(float32[] d) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("copyTo", "([F)V", "GetCopyTo_arrayFHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Single[]" />
      </Parameters>
      <Docs>
        <param name="d">The array to be set from the Allocation.
</param>
        <summary>Copy from the Allocation into a float array.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Copy from the Allocation into a float array.  The array must be at least
 as large as the Allocation.  The allocation must be of an 32 bit float
 <c><see cref="T:Android.Renderscripts.Element" /></c> type.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#copyTo(float[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateCubemapFromBitmap">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateCubemapFromBitmap (Android.Renderscripts.RenderScript rs, Android.Graphics.Bitmap b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateCubemapFromBitmap(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createCubemapFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="b">bitmap with cubemap faces layed out in the following
          format: right, left, top, bottom, front, back</param>
        <summary>Creates a non-mipmapped cubemap Allocation for use as a graphics texture
 from a <c><see cref="T:Android.Graphics.Bitmap" /></c> containing the horizontal list of
 cube faces.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a non-mipmapped cubemap Allocation for use as a graphics texture
 from a <c><see cref="T:Android.Graphics.Bitmap" /></c> containing the horizontal list of
 cube faces. Each face must be a square, have the same size as all other
 faces, and have a width that is a power of 2.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createCubemapFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateCubemapFromBitmap">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateCubemapFromBitmap (Android.Renderscripts.RenderScript rs, Android.Graphics.Bitmap b, Android.Renderscripts.Allocation.MipmapControl mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateCubemapFromBitmap(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap b, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createCubemapFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="b">Bitmap with cubemap faces layed out in the following
          format: right, left, top, bottom, front, back</param>
        <param name="mips">specifies desired mipmap behaviour for the cubemap</param>
        <param name="usage">bit field specifying how the cubemap is utilized</param>
        <summary>Creates a cubemap Allocation from a <c><see cref="T:Android.Graphics.Bitmap" /></c>
 containing the horizontal list of cube faces.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a cubemap Allocation from a <c><see cref="T:Android.Graphics.Bitmap" /></c>
 containing the horizontal list of cube faces. Each face must be a square,
 have the same size as all other faces, and have a width that is a power
 of 2.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createCubemapFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap, android.renderscript.Allocation.MipmapControl, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateCubemapFromCubeFaces">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateCubemapFromCubeFaces (Android.Renderscripts.RenderScript rs, Android.Graphics.Bitmap xpos, Android.Graphics.Bitmap xneg, Android.Graphics.Bitmap ypos, Android.Graphics.Bitmap yneg, Android.Graphics.Bitmap zpos, Android.Graphics.Bitmap zneg);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateCubemapFromCubeFaces(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap xpos, class Android.Graphics.Bitmap xneg, class Android.Graphics.Bitmap ypos, class Android.Graphics.Bitmap yneg, class Android.Graphics.Bitmap zpos, class Android.Graphics.Bitmap zneg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createCubemapFromCubeFaces", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="xpos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="xneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="ypos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="yneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="zpos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="zneg" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="xpos">cubemap face in the positive x direction</param>
        <param name="xneg">cubemap face in the negative x direction</param>
        <param name="ypos">cubemap face in the positive y direction</param>
        <param name="yneg">cubemap face in the negative y direction</param>
        <param name="zpos">cubemap face in the positive z direction</param>
        <param name="zneg">cubemap face in the negative z direction</param>
        <summary>Creates a non-mipmapped cubemap Allocation for use as a sampler input
 from 6 <c><see cref="T:Android.Graphics.Bitmap" /></c> objects containing the cube
 faces.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a non-mipmapped cubemap Allocation for use as a sampler input
 from 6 <c><see cref="T:Android.Graphics.Bitmap" /></c> objects containing the cube
 faces. Each face must be a square, have the same size as all other faces,
 and have a width that is a power of 2.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createCubemapFromCubeFaces(android.renderscript.RenderScript, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateCubemapFromCubeFaces">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateCubemapFromCubeFaces (Android.Renderscripts.RenderScript rs, Android.Graphics.Bitmap xpos, Android.Graphics.Bitmap xneg, Android.Graphics.Bitmap ypos, Android.Graphics.Bitmap yneg, Android.Graphics.Bitmap zpos, Android.Graphics.Bitmap zneg, Android.Renderscripts.Allocation.MipmapControl mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateCubemapFromCubeFaces(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap xpos, class Android.Graphics.Bitmap xneg, class Android.Graphics.Bitmap ypos, class Android.Graphics.Bitmap yneg, class Android.Graphics.Bitmap zpos, class Android.Graphics.Bitmap zneg, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createCubemapFromCubeFaces", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="xpos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="xneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="ypos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="yneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="zpos" Type="Android.Graphics.Bitmap" />
        <Parameter Name="zneg" Type="Android.Graphics.Bitmap" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="xpos">cubemap face in the positive x direction</param>
        <param name="xneg">cubemap face in the negative x direction</param>
        <param name="ypos">cubemap face in the positive y direction</param>
        <param name="yneg">cubemap face in the negative y direction</param>
        <param name="zpos">cubemap face in the positive z direction</param>
        <param name="zneg">cubemap face in the negative z direction</param>
        <param name="mips">specifies desired mipmap behaviour for the cubemap</param>
        <param name="usage">bit field specifying how the cubemap is utilized</param>
        <summary>Creates a cubemap Allocation from 6 <c><see cref="T:Android.Graphics.Bitmap" /></c>
 objects containing the cube faces.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a cubemap Allocation from 6 <c><see cref="T:Android.Graphics.Bitmap" /></c>
 objects containing the cube faces. Each face must be a square, have the
 same size as all other faces, and have a width that is a power of 2.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createCubemapFromCubeFaces(android.renderscript.RenderScript, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.graphics.Bitmap, android.renderscript.Allocation.MipmapControl, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromBitmap">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateFromBitmap (Android.Renderscripts.RenderScript rs, Android.Graphics.Bitmap b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromBitmap(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap b) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="b">bitmap source for the allocation data</param>
        <summary>Creates an Allocation from a <c><see cref="T:Android.Graphics.Bitmap" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an Allocation from a <c><see cref="T:Android.Graphics.Bitmap" /></c>.

 </para>
          <para tool="javadoc-to-mdoc">With target API version 18 or greater, this Allocation will be created
 with <c><see cref="!:Android.Renderscripts.Allocation.USAGE_SHARED" /></c>, <c><see cref="!:Android.Renderscripts.Allocation.USAGE_SCRIPT" /></c>, and <c><see cref="!:Android.Renderscripts.Allocation.USAGE_GRAPHICS_TEXTURE" /></c>. With target API version 17 or lower, this
 Allocation will be created with <c><see cref="!:Android.Renderscripts.Allocation.USAGE_GRAPHICS_TEXTURE" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromBitmap">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateFromBitmap (Android.Renderscripts.RenderScript rs, Android.Graphics.Bitmap b, Android.Renderscripts.Allocation.MipmapControl mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromBitmap(class Android.Renderscripts.RenderScript rs, class Android.Graphics.Bitmap b, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromBitmap", "(Landroid/renderscript/RenderScript;Landroid/graphics/Bitmap;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="b" Type="Android.Graphics.Bitmap" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="b">Bitmap source for the allocation data</param>
        <param name="mips">specifies desired mipmap behaviour for the
             allocation</param>
        <param name="usage">bit field specifying how the allocation is
              utilized</param>
        <summary>Creates an Allocation from a <c><see cref="T:Android.Graphics.Bitmap" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an Allocation from a <c><see cref="T:Android.Graphics.Bitmap" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createFromBitmap(android.renderscript.RenderScript, android.graphics.Bitmap, android.renderscript.Allocation.MipmapControl, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromBitmapResource">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateFromBitmapResource (Android.Renderscripts.RenderScript rs, Android.Content.Res.Resources res, int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromBitmapResource(class Android.Renderscripts.RenderScript rs, class Android.Content.Res.Resources res, int32 id) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromBitmapResource", "(Landroid/renderscript/RenderScript;Landroid/content/res/Resources;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="res">application resources</param>
        <param name="id">resource id to load the data from</param>
        <summary>Creates a non-mipmapped Allocation to use as a graphics texture from the
 <c><see cref="T:Android.Graphics.Bitmap" /></c> referenced by resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a non-mipmapped Allocation to use as a graphics texture from the
 <c><see cref="T:Android.Graphics.Bitmap" /></c> referenced by resource ID.

 </para>
          <para tool="javadoc-to-mdoc">With target API version 18 or greater, this allocation will be created
 with <c><see cref="!:Android.Renderscripts.Allocation.USAGE_SCRIPT" /></c> and <c><see cref="!:Android.Renderscripts.Allocation.USAGE_GRAPHICS_TEXTURE" /></c>. With
 target API version 17 or lower, this allocation will be created with
 <c><see cref="!:Android.Renderscripts.Allocation.USAGE_GRAPHICS_TEXTURE" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createFromBitmapResource(android.renderscript.RenderScript, android.content.res.Resources, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromBitmapResource">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateFromBitmapResource (Android.Renderscripts.RenderScript rs, Android.Content.Res.Resources res, int id, Android.Renderscripts.Allocation.MipmapControl mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromBitmapResource(class Android.Renderscripts.RenderScript rs, class Android.Content.Res.Resources res, int32 id, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromBitmapResource", "(Landroid/renderscript/RenderScript;Landroid/content/res/Resources;ILandroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="res" Type="Android.Content.Res.Resources" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="res">application resources</param>
        <param name="id">resource id to load the data from</param>
        <param name="mips">specifies desired mipmap behaviour for the
             allocation</param>
        <param name="usage">bit field specifying how the allocation is
              utilized</param>
        <summary>Creates an Allocation from the Bitmap referenced
 by resource ID.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an Allocation from the Bitmap referenced
 by resource ID.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createFromBitmapResource(android.renderscript.RenderScript, android.content.res.Resources, int, android.renderscript.Allocation.MipmapControl, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromString">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateFromString (Android.Renderscripts.RenderScript rs, string str, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateFromString(class Android.Renderscripts.RenderScript rs, string str, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createFromString", "(Landroid/renderscript/RenderScript;Ljava/lang/String;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="str">string to create the allocation from</param>
        <param name="usage">bit field specifying how the allocaiton is
              utilized

</param>
        <summary>Creates an Allocation containing string data encoded in UTF-8 format.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an Allocation containing string data encoded in UTF-8 format.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createFromString(android.renderscript.RenderScript, java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateSized">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateSized (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Element e, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateSized(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Element e, int32 count) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSized", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="e" Type="Android.Renderscripts.Element" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the Allocation will belong.</param>
        <param name="e">Element to use in the Allocation</param>
        <param name="count">the number of Elements in the Allocation</param>
        <summary>Creates an Allocation with a specified number of given elements</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an Allocation with a specified number of given elements</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createSized(android.renderscript.RenderScript, android.renderscript.Element, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateSized">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateSized (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Element e, int count, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateSized(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Element e, int32 count, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSized", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;II)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="e" Type="Android.Renderscripts.Element" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the Allocation will belong.</param>
        <param name="e">Element to use in the Allocation</param>
        <param name="count">the number of Elements in the Allocation</param>
        <param name="usage">bit field specifying how the Allocation is
              utilized</param>
        <summary>Creates an Allocation with a specified number of given elements</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an Allocation with a specified number of given elements</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createSized(android.renderscript.RenderScript, android.renderscript.Element, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateTyped">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateTyped (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateTyped(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Type type) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createTyped", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="type" Type="Android.Renderscripts.Type" />
      </Parameters>
      <Docs>
        <param name="rs">Context to which the Allocation will belong.</param>
        <param name="type">RenderScript Type describing data layout</param>
        <summary tool="true">Creates an Allocation for use by scripts with a given <c><see cref="T:Android.Renderscripts.Type" /></c> and no mipmaps</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an Allocation for use by scripts with a given <c><see cref="T:Android.Renderscripts.Type" /></c> and no mipmaps</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createTyped(android.renderscript.RenderScript, android.renderscript.Type)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateTyped">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateTyped (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Type type, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateTyped(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Type type, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createTyped", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="type" Type="Android.Renderscripts.Type" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">Context to which the allocation will belong.</param>
        <param name="type">renderscript type describing data layout</param>
        <param name="usage">bit field specifying how the allocation is
              utilized</param>
        <summary>Creates an Allocation with the size specified by the type and no mipmaps
 generated by default</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an Allocation with the size specified by the type and no mipmaps
 generated by default</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createTyped(android.renderscript.RenderScript, android.renderscript.Type, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="CreateTyped">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.Allocation CreateTyped (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Type type, Android.Renderscripts.Allocation.MipmapControl mips, Android.Renderscripts.AllocationUsage usage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.Allocation CreateTyped(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Type type, class Android.Renderscripts.Allocation/MipmapControl mips, valuetype Android.Renderscripts.AllocationUsage usage) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createTyped", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Type;Landroid/renderscript/Allocation$MipmapControl;I)Landroid/renderscript/Allocation;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Allocation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="type" Type="Android.Renderscripts.Type" />
        <Parameter Name="mips" Type="Android.Renderscripts.Allocation+MipmapControl" />
        <Parameter Name="usage" Type="Android.Renderscripts.AllocationUsage">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="rs">To be added.</param>
        <param name="type">RenderScript type describing data layout</param>
        <param name="mips">specifies desired mipmap behaviour for the
             allocation</param>
        <param name="usage">bit field specifying how the Allocation is
              utilized
</param>
        <summary>Creates a new Allocation with the given <c><see cref="T:Android.Renderscripts.Type" /></c>, mipmap flag, and usage flags.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new Allocation with the given <c><see cref="T:Android.Renderscripts.Type" /></c>, mipmap flag, and usage flags.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#createTyped(android.renderscript.RenderScript, android.renderscript.Type, android.renderscript.Allocation.MipmapControl, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Destroy">
      <MemberSignature Language="C#" Value="public override void Destroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Destroy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("destroy", "()V", "GetDestroyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>For USAGE_IO_OUTPUT, destroy() implies setSurface(null).</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">For USAGE_IO_OUTPUT, destroy() implies setSurface(null).

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#destroy()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Element">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Element Element { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Element Element" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getElement", "()Landroid/renderscript/Element;", "GetGetElementHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Element</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the <c><see cref="T:Android.Renderscripts.Element" /></c> of the <c><see cref="T:Android.Renderscripts.Type" /></c> of the Allocation.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the <c><see cref="T:Android.Renderscripts.Element" /></c> of the <c><see cref="T:Android.Renderscripts.Type" /></c> of the Allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#getElement()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="GenerateMipmaps">
      <MemberSignature Language="C#" Value="public virtual void GenerateMipmaps ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateMipmaps() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("generateMipmaps", "()V", "GetGenerateMipmapsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generate a mipmap chain.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Generate a mipmap chain. This is only valid if the Type of the Allocation
 includes mipmaps.

 </para>
          <para tool="javadoc-to-mdoc">This function will generate a complete set of mipmaps from the top
 level LOD and place them into the script memory space.</para>
          <para tool="javadoc-to-mdoc">If the Allocation is also using other memory spaces, a call to <c><see cref="M:Android.Renderscripts.Allocation.SyncAll(System.Int32)" /></c> is required.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#generateMipmaps()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="IoReceive">
      <MemberSignature Language="C#" Value="public virtual void IoReceive ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IoReceive() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ioReceive", "()V", "GetIoReceiveHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Receive the latest input into the Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Receive the latest input into the Allocation. This operation
 is only valid if <c><see cref="!:Android.Renderscripts.Allocation.USAGE_IO_INPUT" /></c> is set on the Allocation.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#ioReceive()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="IoSend">
      <MemberSignature Language="C#" Value="public virtual void IoSend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IoSend() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ioSend", "()V", "GetIoSendHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Send a buffer to the output stream.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Send a buffer to the output stream.  The contents of the Allocation will
 be undefined after this operation. This operation is only valid if <c><see cref="!:Android.Renderscripts.Allocation.USAGE_IO_OUTPUT" /></c> is set on the Allocation.


</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#ioSend()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="Resize">
      <MemberSignature Language="C#" Value="public virtual void Resize (int dimX);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Resize(int32 dimX) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resize", "(I)V", "GetResize_IHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimX" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimX">The new size of the allocation.</param>
        <summary>Resize a 1D allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Resize a 1D allocation.  The contents of the allocation are preserved.
 If new elements are allocated objects are created with null contents and
 the new region is otherwise undefined.

 </para>
          <para tool="javadoc-to-mdoc">If the new region is smaller the references of any objects outside the
 new region will be released.</para>
          <para tool="javadoc-to-mdoc">A new type will be created with the new dimension.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#resize(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetFromFieldPacker">
      <MemberSignature Language="C#" Value="public virtual void SetFromFieldPacker (int xoff, Android.Renderscripts.FieldPacker fp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFromFieldPacker(int32 xoff, class Android.Renderscripts.FieldPacker fp) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFromFieldPacker", "(ILandroid/renderscript/FieldPacker;)V", "GetSetFromFieldPacker_ILandroid_renderscript_FieldPacker_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="fp" Type="Android.Renderscripts.FieldPacker" />
      </Parameters>
      <Docs>
        <param name="xoff">To be added.</param>
        <param name="fp">To be added.</param>
        <summary tool="true">This is only intended to be used by auto-generated code reflected from
 the RenderScript script files and should not be used by developers.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This is only intended to be used by auto-generated code reflected from
 the RenderScript script files and should not be used by developers.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#setFromFieldPacker(int, android.renderscript.FieldPacker)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetFromFieldPacker">
      <MemberSignature Language="C#" Value="public virtual void SetFromFieldPacker (int xoff, int component_number, Android.Renderscripts.FieldPacker fp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFromFieldPacker(int32 xoff, int32 component_number, class Android.Renderscripts.FieldPacker fp) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFromFieldPacker", "(IILandroid/renderscript/FieldPacker;)V", "GetSetFromFieldPacker_IILandroid_renderscript_FieldPacker_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xoff" Type="System.Int32" />
        <Parameter Name="component_number" Type="System.Int32" />
        <Parameter Name="fp" Type="Android.Renderscripts.FieldPacker" />
      </Parameters>
      <Docs>
        <param name="xoff">To be added.</param>
        <param name="component_number">To be added.</param>
        <param name="fp">To be added.</param>
        <summary>This is only intended to be used by auto-generated code reflected from
 the RenderScript script files and should not be used by developers.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This is only intended to be used by auto-generated code reflected from
 the RenderScript script files and should not be used by developers.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#setFromFieldPacker(int, int, android.renderscript.FieldPacker)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="SetName">
      <MemberSignature Language="C#" Value="public override void SetName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetName(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setName", "(Ljava/lang/String;)V", "GetSetName_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOnBufferAvailableListener">
      <MemberSignature Language="C#" Value="public virtual void SetOnBufferAvailableListener (Android.Renderscripts.Allocation.IOnBufferAvailableListener callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOnBufferAvailableListener(class Android.Renderscripts.Allocation/IOnBufferAvailableListener callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOnBufferAvailableListener", "(Landroid/renderscript/Allocation$OnBufferAvailableListener;)V", "GetSetOnBufferAvailableListener_Landroid_renderscript_Allocation_OnBufferAvailableListener_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Renderscripts.Allocation+IOnBufferAvailableListener" />
      </Parameters>
      <Docs>
        <param name="callback">instance of the OnBufferAvailableListener
                 class to be called when buffer arrive.
</param>
        <summary>Set a notification handler for <c><see cref="!:Android.Renderscripts.Allocation.USAGE_IO_INPUT" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set a notification handler for <c><see cref="!:Android.Renderscripts.Allocation.USAGE_IO_INPUT" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#setOnBufferAvailableListener(android.renderscript.Allocation.OnBufferAvailableListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Surface">
      <MemberSignature Language="C#" Value="public virtual Android.Views.Surface Surface { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.Surface Surface" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSurface", "()Landroid/view/Surface;", "GetGetSurfaceHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setSurface", "(Landroid/view/Surface;)V", "GetSetSurface_Landroid_view_Surface_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.Surface</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the handle to a raw buffer that is being managed by the screen
 compositor.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#getSurface()" target="_blank">[Android Documentation]</a>
              <br />
            </format>Returns the handle to a raw buffer that is being managed by the screen
 compositor. This operation is only valid for Allocations with <c><see cref="!:Android.Renderscripts.Allocation.USAGE_IO_INPUT" /></c>.</para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#setSurface(android.view.Surface)" target="_blank">[Android Documentation]</a>
              <br />
            </format>Associate a <c><see cref="T:Android.Views.Surface" /></c> with this Allocation. This
 operation is only valid for Allocations with <c><see cref="!:Android.Renderscripts.Allocation.USAGE_IO_OUTPUT" /></c>.</para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SyncAll">
      <MemberSignature Language="C#" Value="public virtual void SyncAll (int srcLocation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SyncAll(int32 srcLocation) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("syncAll", "(I)V", "GetSyncAll_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="srcLocation" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="srcLocation">To be added.</param>
        <summary>Propagate changes from one usage of the Allocation to the
 other usages of the Allocation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Propagate changes from one usage of the Allocation to the
 other usages of the Allocation.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#syncAll(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Type Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Type Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getType", "()Landroid/renderscript/Type;", "GetGetTypeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the <c><see cref="T:Android.Renderscripts.Type" /></c> of the Allocation.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the <c><see cref="T:Android.Renderscripts.Type" /></c> of the Allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#getType()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Usage">
      <MemberSignature Language="C#" Value="public virtual int Usage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Usage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getUsage", "()I", "GetGetUsageHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the usage flags of the Allocation.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the usage flags of the Allocation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/renderscript/Allocation.html#getUsage()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
  </Members>
</Type>
