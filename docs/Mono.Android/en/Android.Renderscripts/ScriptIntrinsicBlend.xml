<Type Name="ScriptIntrinsicBlend" FullName="Android.Renderscripts.ScriptIntrinsicBlend">
  <TypeSignature Language="C#" Value="public class ScriptIntrinsicBlend : Android.Renderscripts.ScriptIntrinsic" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptIntrinsicBlend extends Android.Renderscripts.ScriptIntrinsic" />
  <TypeSignature Language="DocId" Value="T:Android.Renderscripts.ScriptIntrinsicBlend" />
  <TypeSignature Language="F#" Value="type ScriptIntrinsicBlend = class&#xA;    inherit ScriptIntrinsic" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Renderscripts.ScriptIntrinsic</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/renderscript/ScriptIntrinsicBlend", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Obsolete("This class is obsoleted in this android platform")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="17">
    <summary>Intrinsic kernels for blending two <c>android.renderscript.Allocation</c> objects.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 17" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ScriptIntrinsicBlend (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Renderscripts.ScriptIntrinsicBlend : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Renderscripts.ScriptIntrinsicBlend" Usage="new Android.Renderscripts.ScriptIntrinsicBlend (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.ScriptIntrinsicBlend Create (Android.Renderscripts.RenderScript rs, Android.Renderscripts.Element e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.ScriptIntrinsicBlend Create(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Element e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.Create(Android.Renderscripts.RenderScript,Android.Renderscripts.Element)" />
      <MemberSignature Language="F#" Value="static member Create : Android.Renderscripts.RenderScript * Android.Renderscripts.Element -&gt; Android.Renderscripts.ScriptIntrinsicBlend" Usage="Android.Renderscripts.ScriptIntrinsicBlend.Create (rs, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("create", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;)Landroid/renderscript/ScriptIntrinsicBlend;", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.ScriptIntrinsicBlend</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="e" Type="Android.Renderscripts.Element" />
      </Parameters>
      <Docs>
        <param name="rs">The RenderScript context</param>
        <param name="e">Element type for inputs and outputs</param>
        <summary>Supported elements types are <c>Element#U8_4</c></summary>
        <returns>ScriptIntrinsicBlend</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#create(android.renderscript.RenderScript,%20android.renderscript.Element)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.create(android.renderscript.RenderScript, android.renderscript.Element)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachAdd">
      <MemberSignature Language="C#" Value="public virtual void ForEachAdd (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachAdd(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachAdd(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachAdd : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachAdd : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachAdd (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachAdd", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachAdd_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <summary>Sets dst = min(src + dst, 1.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachAdd(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachAdd(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachAdd">
      <MemberSignature Language="C#" Value="public virtual void ForEachAdd (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachAdd(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachAdd(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachAdd : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachAdd : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachAdd (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachAdd", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachAdd_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Sets dst = min(src + dst, 1.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachAdd(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachAdd(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachClear">
      <MemberSignature Language="C#" Value="public virtual void ForEachClear (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachClear(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachClear(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachClear : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachClear : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachClear (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachClear", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachClear_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer
</param>
        <summary>Sets dst = {0, 0, 0, 0}</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachClear">
      <MemberSignature Language="C#" Value="public virtual void ForEachClear (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachClear(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachClear(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachClear : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachClear : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachClear (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachClear", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachClear_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Sets dst = {0, 0, 0, 0}</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachDst">
      <MemberSignature Language="C#" Value="public virtual void ForEachDst (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachDst(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachDst(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachDst : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachDst : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachDst (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachDst", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachDst_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <summary>Sets dst = dst</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachDst(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachDst(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachDst">
      <MemberSignature Language="C#" Value="public virtual void ForEachDst (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachDst(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachDst(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachDst : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachDst : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachDst (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachDst", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachDst_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Sets dst = dst</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachDst(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachDst(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachDstAtop">
      <MemberSignature Language="C#" Value="public virtual void ForEachDstAtop (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachDstAtop(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachDstAtop(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachDstAtop : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachDstAtop : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachDstAtop (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachDstAtop", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachDstAtop_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <summary>dst = dst.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachDstAtop(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachDstAtop(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachDstAtop">
      <MemberSignature Language="C#" Value="public virtual void ForEachDstAtop (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachDstAtop(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachDstAtop(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachDstAtop : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachDstAtop : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachDstAtop (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachDstAtop", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachDstAtop_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>dst = dst.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachDstAtop(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachDstAtop(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachDstIn">
      <MemberSignature Language="C#" Value="public virtual void ForEachDstIn (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachDstIn(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachDstIn(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachDstIn : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachDstIn : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachDstIn (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachDstIn", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachDstIn_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <summary>Sets dst = dst * src.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachDstIn(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachDstIn(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachDstIn">
      <MemberSignature Language="C#" Value="public virtual void ForEachDstIn (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachDstIn(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachDstIn(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachDstIn : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachDstIn : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachDstIn (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachDstIn", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachDstIn_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Sets dst = dst * src.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachDstIn(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachDstIn(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachDstOut">
      <MemberSignature Language="C#" Value="public virtual void ForEachDstOut (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachDstOut(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachDstOut(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachDstOut : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachDstOut : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachDstOut (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachDstOut", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachDstOut_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <summary>Sets dst = dst * (1.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachDstOut(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachDstOut(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachDstOut">
      <MemberSignature Language="C#" Value="public virtual void ForEachDstOut (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachDstOut(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachDstOut(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachDstOut : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachDstOut : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachDstOut (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachDstOut", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachDstOut_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Sets dst = dst * (1.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachDstOut(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachDstOut(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachDstOver">
      <MemberSignature Language="C#" Value="public virtual void ForEachDstOver (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachDstOver(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachDstOver(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachDstOver : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachDstOver : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachDstOver (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachDstOver", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachDstOver_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <summary>Sets dst = dst + src * (1.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachDstOver(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachDstOver(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachDstOver">
      <MemberSignature Language="C#" Value="public virtual void ForEachDstOver (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachDstOver(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachDstOver(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachDstOver : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachDstOver : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachDstOver (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachDstOver", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachDstOver_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Sets dst = dst + src * (1.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachDstOver(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachDstOver(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachMultiply">
      <MemberSignature Language="C#" Value="public virtual void ForEachMultiply (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachMultiply(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachMultiply(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachMultiply : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachMultiply : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachMultiply (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachMultiply", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachMultiply_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <summary>Sets dst = src * dst</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachMultiply(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachMultiply(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachMultiply">
      <MemberSignature Language="C#" Value="public virtual void ForEachMultiply (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachMultiply(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachMultiply(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachMultiply : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachMultiply : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachMultiply (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachMultiply", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachMultiply_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Sets dst = src * dst</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachMultiply(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachMultiply(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachSrc">
      <MemberSignature Language="C#" Value="public virtual void ForEachSrc (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachSrc(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachSrc(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachSrc : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachSrc : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachSrc (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachSrc", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachSrc_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <summary>Sets dst = src</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachSrc(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachSrc(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachSrc">
      <MemberSignature Language="C#" Value="public virtual void ForEachSrc (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachSrc(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachSrc(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachSrc : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachSrc : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachSrc (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachSrc", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachSrc_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Sets dst = src</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachSrc(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachSrc(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachSrcAtop">
      <MemberSignature Language="C#" Value="public virtual void ForEachSrcAtop (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachSrcAtop(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachSrcAtop(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachSrcAtop : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachSrcAtop : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachSrcAtop (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachSrcAtop", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachSrcAtop_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <summary>dst.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachSrcAtop(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachSrcAtop(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachSrcAtop">
      <MemberSignature Language="C#" Value="public virtual void ForEachSrcAtop (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachSrcAtop(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachSrcAtop(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachSrcAtop : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachSrcAtop : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachSrcAtop (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachSrcAtop", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachSrcAtop_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>dst.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachSrcAtop(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachSrcAtop(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachSrcIn">
      <MemberSignature Language="C#" Value="public virtual void ForEachSrcIn (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachSrcIn(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachSrcIn(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachSrcIn : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachSrcIn : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachSrcIn (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachSrcIn", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachSrcIn_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <summary>Sets dst = src * dst.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachSrcIn(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachSrcIn(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachSrcIn">
      <MemberSignature Language="C#" Value="public virtual void ForEachSrcIn (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachSrcIn(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachSrcIn(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachSrcIn : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachSrcIn : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachSrcIn (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachSrcIn", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachSrcIn_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Sets dst = src * dst.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachSrcIn(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachSrcIn(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachSrcOut">
      <MemberSignature Language="C#" Value="public virtual void ForEachSrcOut (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachSrcOut(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachSrcOut(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachSrcOut : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachSrcOut : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachSrcOut (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachSrcOut", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachSrcOut_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <summary>Sets dst = src * (1.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachSrcOut(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachSrcOut(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachSrcOut">
      <MemberSignature Language="C#" Value="public virtual void ForEachSrcOut (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachSrcOut(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachSrcOut(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachSrcOut : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachSrcOut : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachSrcOut (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachSrcOut", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachSrcOut_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Sets dst = src * (1.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachSrcOut(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachSrcOut(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachSrcOver">
      <MemberSignature Language="C#" Value="public virtual void ForEachSrcOver (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachSrcOver(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachSrcOver(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachSrcOver : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachSrcOver : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachSrcOver (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachSrcOver", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachSrcOver_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <summary>Sets dst = src + dst * (1.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachSrcOver(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachSrcOver(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachSrcOver">
      <MemberSignature Language="C#" Value="public virtual void ForEachSrcOver (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachSrcOver(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachSrcOver(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachSrcOver : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachSrcOver : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachSrcOver (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachSrcOver", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachSrcOver_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Sets dst = src + dst * (1.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachSrcOver(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachSrcOver(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachSubtract">
      <MemberSignature Language="C#" Value="public virtual void ForEachSubtract (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachSubtract(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachSubtract(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachSubtract : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachSubtract : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachSubtract (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachSubtract", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachSubtract_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <summary>Sets dst = max(dst - src, 0.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachSubtract(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachSubtract(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachSubtract">
      <MemberSignature Language="C#" Value="public virtual void ForEachSubtract (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachSubtract(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachSubtract(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachSubtract : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachSubtract : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachSubtract (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachSubtract", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachSubtract_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Sets dst = max(dst - src, 0.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#forEachSubtract(android.renderscript.Allocation,%20android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.forEachSubtract(android.renderscript.Allocation, android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEachXor">
      <MemberSignature Language="C#" Value="public virtual void ForEachXor (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachXor(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachXor(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="abstract member ForEachXor : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit&#xA;override this.ForEachXor : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicBlend.ForEachXor (ain, aout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachXor", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;)V", "GetForEachXor_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer
</param>
        <summary>Sets dst = {src.r ^ dst.r, src.g ^ dst.g, src.b ^ dst.b, src.a ^ dst.a}</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ForEachXor">
      <MemberSignature Language="C#" Value="public virtual void ForEachXor (Android.Renderscripts.Allocation ain, Android.Renderscripts.Allocation aout, Android.Renderscripts.Script.LaunchOptions opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ForEachXor(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Allocation aout, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicBlend.ForEachXor(Android.Renderscripts.Allocation,Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="abstract member ForEachXor : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit&#xA;override this.ForEachXor : Android.Renderscripts.Allocation * Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicBlend.ForEachXor (ain, aout, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("forEachXor", "(Landroid/renderscript/Allocation;Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "GetForEachXor_Landroid_renderscript_Allocation_Landroid_renderscript_Allocation_Landroid_renderscript_Script_LaunchOptions_Handler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The source buffer</param>
        <param name="aout">The destination buffer</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Sets dst = {src.r ^ dst.r, src.g ^ dst.g, src.b ^ dst.b, src.a ^ dst.a}</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Renderscripts.ScriptIntrinsicBlend.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KernelIDAdd">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDAdd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDAdd" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDAdd" />
      <MemberSignature Language="F#" Value="member this.KernelIDAdd : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDAdd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDAdd", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDAddHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the Add kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDAdd()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDAdd()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDClear">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDClear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDClear" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDClear" />
      <MemberSignature Language="F#" Value="member this.KernelIDClear : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDClear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDClear", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDClearHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the Clear kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDClear()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDClear()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDDst">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDDst { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDDst" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDDst" />
      <MemberSignature Language="F#" Value="member this.KernelIDDst : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDDst" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDDst", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDDstHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the Dst kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDDst()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDDst()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDDstAtop">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDDstAtop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDDstAtop" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDDstAtop" />
      <MemberSignature Language="F#" Value="member this.KernelIDDstAtop : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDDstAtop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDDstAtop", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDDstAtopHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the DstAtop kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDDstAtop()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDDstAtop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDDstIn">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDDstIn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDDstIn" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDDstIn" />
      <MemberSignature Language="F#" Value="member this.KernelIDDstIn : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDDstIn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDDstIn", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDDstInHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the DstIn kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDDstIn()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDDstIn()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDDstOut">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDDstOut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDDstOut" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDDstOut" />
      <MemberSignature Language="F#" Value="member this.KernelIDDstOut : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDDstOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDDstOut", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDDstOutHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the DstOut kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDDstOut()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDDstOut()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDDstOver">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDDstOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDDstOver" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDDstOver" />
      <MemberSignature Language="F#" Value="member this.KernelIDDstOver : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDDstOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDDstOver", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDDstOverHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the DstOver kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDDstOver()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDDstOver()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDMultiply">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDMultiply { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDMultiply" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDMultiply" />
      <MemberSignature Language="F#" Value="member this.KernelIDMultiply : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDMultiply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDMultiply", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDMultiplyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the Multiply kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDMultiply()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDMultiply()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDSrc">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDSrc { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDSrc" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDSrc" />
      <MemberSignature Language="F#" Value="member this.KernelIDSrc : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDSrc" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDSrc", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDSrcHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the Src kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDSrc()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDSrc()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDSrcAtop">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDSrcAtop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDSrcAtop" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDSrcAtop" />
      <MemberSignature Language="F#" Value="member this.KernelIDSrcAtop : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDSrcAtop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDSrcAtop", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDSrcAtopHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the SrcAtop kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDSrcAtop()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDSrcAtop()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDSrcIn">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDSrcIn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDSrcIn" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDSrcIn" />
      <MemberSignature Language="F#" Value="member this.KernelIDSrcIn : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDSrcIn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDSrcIn", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDSrcInHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the SrcIn kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDSrcIn()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDSrcIn()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDSrcOut">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDSrcOut { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDSrcOut" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDSrcOut" />
      <MemberSignature Language="F#" Value="member this.KernelIDSrcOut : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDSrcOut" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDSrcOut", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDSrcOutHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the SrcOut kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDSrcOut()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDSrcOut()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDSrcOver">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDSrcOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDSrcOver" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDSrcOver" />
      <MemberSignature Language="F#" Value="member this.KernelIDSrcOver : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDSrcOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDSrcOver", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDSrcOverHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the SrcOver kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDSrcOver()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDSrcOver()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDSubtract">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDSubtract { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDSubtract" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDSubtract" />
      <MemberSignature Language="F#" Value="member this.KernelIDSubtract : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDSubtract" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDSubtract", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDSubtractHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the Subtract kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDSubtract()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDSubtract()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="KernelIDXor">
      <MemberSignature Language="C#" Value="public virtual Android.Renderscripts.Script.KernelID KernelIDXor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelIDXor" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.KernelIDXor" />
      <MemberSignature Language="F#" Value="member this.KernelIDXor : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicBlend.KernelIDXor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getKernelIDXor", "()Landroid/renderscript/Script$KernelID;", "GetGetKernelIDXorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for the Xor kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicBlend#getKernelIDXor()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicBlend.getKernelIDXor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Renderscripts.ScriptIntrinsicBlend.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicBlend.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Renderscripts.ScriptIntrinsicBlend.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
