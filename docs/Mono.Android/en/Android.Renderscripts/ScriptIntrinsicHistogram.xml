<Type Name="ScriptIntrinsicHistogram" FullName="Android.Renderscripts.ScriptIntrinsicHistogram">
  <TypeSignature Language="C#" Value="public sealed class ScriptIntrinsicHistogram : Android.Renderscripts.ScriptIntrinsic" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ScriptIntrinsicHistogram extends Android.Renderscripts.ScriptIntrinsic" />
  <TypeSignature Language="DocId" Value="T:Android.Renderscripts.ScriptIntrinsicHistogram" />
  <TypeSignature Language="F#" Value="type ScriptIntrinsicHistogram = class&#xA;    inherit ScriptIntrinsic" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Renderscripts.ScriptIntrinsic</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/renderscript/ScriptIntrinsicHistogram", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/renderscript/ScriptIntrinsicHistogram", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0", "This class is obsoleted in this android platform")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0", "This class is obsoleted in this android platform")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="19">
    <summary>Intrinsic Histogram filter.</summary>
    <remarks>
      <para>Intrinsic Histogram filter.</para>
      <para>This member is deprecated. Renderscript has been deprecated in API level 31. Please refer to the <see href="https://developer.android.com/guide/topics/renderscript/migration-guide">migration
            guide</see> for the proposed alternatives.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicHistogram" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicHistogram</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static Android.Renderscripts.ScriptIntrinsicHistogram? Create (Android.Renderscripts.RenderScript? rs, Android.Renderscripts.Element? e);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Renderscripts.ScriptIntrinsicHistogram Create(class Android.Renderscripts.RenderScript rs, class Android.Renderscripts.Element e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicHistogram.Create(Android.Renderscripts.RenderScript,Android.Renderscripts.Element)" />
      <MemberSignature Language="F#" Value="static member Create : Android.Renderscripts.RenderScript * Android.Renderscripts.Element -&gt; Android.Renderscripts.ScriptIntrinsicHistogram" Usage="Android.Renderscripts.ScriptIntrinsicHistogram.Create (rs, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("create", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;)Landroid/renderscript/ScriptIntrinsicHistogram;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("create", "(Landroid/renderscript/RenderScript;Landroid/renderscript/Element;)Landroid/renderscript/ScriptIntrinsicHistogram;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.ScriptIntrinsicHistogram</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rs" Type="Android.Renderscripts.RenderScript" />
        <Parameter Name="e" Type="Android.Renderscripts.Element" />
      </Parameters>
      <Docs>
        <param name="rs">The RenderScript context</param>
        <param name="e">Element type for inputs</param>
        <summary>Create an intrinsic for calculating the histogram of an uchar
            or uchar4 image.</summary>
        <returns>ScriptIntrinsicHistogram</returns>
        <remarks>
          <para>Create an intrinsic for calculating the histogram of an uchar
            or uchar4 image.
            
            Supported elements types are
            <c>Element#U8_4</c>, <c>Element#U8_3</c>,
            <c>Element#U8_2</c>, <c>Element#U8</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicHistogram#create(android.renderscript.RenderScript,%20android.renderscript.Element)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicHistogram.create(android.renderscript.RenderScript, android.renderscript.Element)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldID_Input">
      <MemberSignature Language="C#" Value="public Android.Renderscripts.Script.FieldID? FieldID_Input { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/FieldID FieldID_Input" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicHistogram.FieldID_Input" />
      <MemberSignature Language="F#" Value="member this.FieldID_Input : Android.Renderscripts.Script.FieldID" Usage="Android.Renderscripts.ScriptIntrinsicHistogram.FieldID_Input" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getFieldID_Input", "()Landroid/renderscript/Script$FieldID;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getFieldID_Input", "()Landroid/renderscript/Script$FieldID;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+FieldID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a FieldID for the input field of this intrinsic.</summary>
        <value>Script.FieldID The FieldID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicHistogram#getFieldID_Input()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicHistogram.getFieldID_Input()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public void ForEach (Android.Renderscripts.Allocation? ain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForEach(class Android.Renderscripts.Allocation ain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicHistogram.ForEach(Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="override this.ForEach : Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicHistogram.ForEach ain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEach", "(Landroid/renderscript/Allocation;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEach", "(Landroid/renderscript/Allocation;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The input image</param>
        <summary>Process an input buffer and place the histogram into the
            output allocation.</summary>
        <remarks>
          <para>Process an input buffer and place the histogram into the
            output allocation. The output allocation may be a narrower
            vector size than the input. In this case the vector size of
            the output is used to determine how many of the input
            channels are used in the computation. This is useful if you
            have an RGBA input buffer but only want the histogram for
            RGB.</para>
          <para>1D and 2D input allocations are supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicHistogram#forEach(android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicHistogram.forEach(android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEach">
      <MemberSignature Language="C#" Value="public void ForEach (Android.Renderscripts.Allocation? ain, Android.Renderscripts.Script.LaunchOptions? opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForEach(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicHistogram.ForEach(Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="override this.ForEach : Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicHistogram.ForEach (ain, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEach", "(Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEach", "(Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The input image</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Process an input buffer and place the histogram into the
            output allocation.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicHistogram#forEach(android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicHistogram.forEach(android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEach_Dot">
      <MemberSignature Language="C#" Value="public void ForEach_Dot (Android.Renderscripts.Allocation? ain);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForEach_Dot(class Android.Renderscripts.Allocation ain) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicHistogram.ForEach_Dot(Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="member this.ForEach_Dot : Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicHistogram.ForEach_Dot ain" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEach_Dot", "(Landroid/renderscript/Allocation;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEach_Dot", "(Landroid/renderscript/Allocation;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="ain">The input image</param>
        <summary>Process an input buffer and place the histogram into the
            output allocation.</summary>
        <remarks>
          <para>Process an input buffer and place the histogram into the
            output allocation. The dot product of the input channel and
            the coefficients from 'setDotCoefficients' are used to
            calculate the output values.</para>
          <para>1D and 2D input allocations are supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicHistogram#forEach_Dot(android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicHistogram.forEach_Dot(android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForEach_Dot">
      <MemberSignature Language="C#" Value="public void ForEach_Dot (Android.Renderscripts.Allocation? ain, Android.Renderscripts.Script.LaunchOptions? opt);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ForEach_Dot(class Android.Renderscripts.Allocation ain, class Android.Renderscripts.Script/LaunchOptions opt) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicHistogram.ForEach_Dot(Android.Renderscripts.Allocation,Android.Renderscripts.Script.LaunchOptions)" />
      <MemberSignature Language="F#" Value="member this.ForEach_Dot : Android.Renderscripts.Allocation * Android.Renderscripts.Script.LaunchOptions -&gt; unit" Usage="scriptIntrinsicHistogram.ForEach_Dot (ain, opt)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forEach_Dot", "(Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forEach_Dot", "(Landroid/renderscript/Allocation;Landroid/renderscript/Script$LaunchOptions;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ain" Type="Android.Renderscripts.Allocation" />
        <Parameter Name="opt" Type="Android.Renderscripts.Script+LaunchOptions" />
      </Parameters>
      <Docs>
        <param name="ain">The input image</param>
        <param name="opt">LaunchOptions for clipping
</param>
        <summary>Process an input buffer and place the histogram into the
            output allocation.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicHistogram#forEach_Dot(android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicHistogram.forEach_Dot(android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicHistogram.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Renderscripts.ScriptIntrinsicHistogram.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KernelID_Separate">
      <MemberSignature Language="C#" Value="public Android.Renderscripts.Script.KernelID? KernelID_Separate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Renderscripts.Script/KernelID KernelID_Separate" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicHistogram.KernelID_Separate" />
      <MemberSignature Language="F#" Value="member this.KernelID_Separate : Android.Renderscripts.Script.KernelID" Usage="Android.Renderscripts.ScriptIntrinsicHistogram.KernelID_Separate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getKernelID_Separate", "()Landroid/renderscript/Script$KernelID;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getKernelID_Separate", "()Landroid/renderscript/Script$KernelID;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Renderscripts.Script+KernelID</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get a KernelID for this intrinsic kernel.</summary>
        <value>Script.KernelID The KernelID object.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicHistogram#getKernelID_Separate()" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicHistogram.getKernelID_Separate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDotCoefficients">
      <MemberSignature Language="C#" Value="public void SetDotCoefficients (float r, float g, float b, float a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDotCoefficients(float32 r, float32 g, float32 b, float32 a) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicHistogram.SetDotCoefficients(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="member this.SetDotCoefficients : single * single * single * single -&gt; unit" Usage="scriptIntrinsicHistogram.SetDotCoefficients (r, g, b, a)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDotCoefficients", "(FFFF)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDotCoefficients", "(FFFF)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.Single" />
        <Parameter Name="g" Type="System.Single" />
        <Parameter Name="b" Type="System.Single" />
        <Parameter Name="a" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="r">Red coefficient</param>
        <param name="g">Green coefficient</param>
        <param name="b">Blue coefficient</param>
        <param name="a">Alpha coefficient</param>
        <summary>Set the coefficients used for the RGBA to Luminocity
            calculation.</summary>
        <remarks>
          <para>Set the coefficients used for the RGBA to Luminocity
            calculation. The default is {0.299f, 0.587f, 0.114f, 0.f}.
            
            Coefficients must be &gt;= 0 and sum to 1.0 or less.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicHistogram#setDotCoefficients(float,%20float,%20float,%20float)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicHistogram.setDotCoefficients(float, float, float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOutput">
      <MemberSignature Language="C#" Value="public void SetOutput (Android.Renderscripts.Allocation? aout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetOutput(class Android.Renderscripts.Allocation aout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Renderscripts.ScriptIntrinsicHistogram.SetOutput(Android.Renderscripts.Allocation)" />
      <MemberSignature Language="F#" Value="member this.SetOutput : Android.Renderscripts.Allocation -&gt; unit" Usage="scriptIntrinsicHistogram.SetOutput aout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOutput", "(Landroid/renderscript/Allocation;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOutput", "(Landroid/renderscript/Allocation;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="aout" Type="Android.Renderscripts.Allocation" />
      </Parameters>
      <Docs>
        <param name="aout">The output allocation</param>
        <summary>Set the output of the histogram.</summary>
        <remarks>
          <para>Set the output of the histogram.  32 bit integer types are
            supported.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/renderscript/ScriptIntrinsicHistogram#setOutput(android.renderscript.Allocation)" title="Reference documentation">Java documentation for <code>android.renderscript.ScriptIntrinsicHistogram.setOutput(android.renderscript.Allocation)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicHistogram.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Renderscripts.ScriptIntrinsicHistogram.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Renderscripts.ScriptIntrinsicHistogram.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Renderscripts.ScriptIntrinsicHistogram.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
