<Type Name="UtteranceProgressListener" FullName="Android.Speech.Tts.UtteranceProgressListener">
  <TypeSignature Language="C#" Value="public abstract class UtteranceProgressListener : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UtteranceProgressListener extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/speech/tts/UtteranceProgressListener", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="15">
    <summary>Listener for events relating to the progress of an utterance through
 the synthesis queue.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Listener for events relating to the progress of an utterance through
 the synthesis queue. Each utterance is associated with a call to
 <c><see cref="M:Android.Speech.Tts.TextToSpeech.Speak(Java.Lang.ICharSequence,Android.Speech.Tts.QueueMode,Android.Speech.Tts.QueueMode,Android.Speech.Tts.QueueMode)" /></c> or <c><see cref="M:Android.Speech.Tts.TextToSpeech.SynthesizeToFile(Java.Lang.ICharSequence,Android.OS.Bundle,Android.OS.Bundle,Android.OS.Bundle)" /></c> with an
 associated utterance identifier, as per <c><see cref="!:NoType:android/speech/tts/TextToSpeech$Engine;Href=../../../../reference/android/speech/tts/TextToSpeech.Engine.html#KEY_PARAM_UTTERANCE_ID" /></c>.

 The callbacks specified in this method can be called from multiple threads.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/speech/tts/UtteranceProgressListener.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 15" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UtteranceProgressListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/speech/tts/UtteranceProgressListener.html#UtteranceProgressListener()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 15" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UtteranceProgressListener (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDone">
      <MemberSignature Language="C#" Value="public abstract void OnDone (string utteranceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDone(string utteranceId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDone", "(Ljava/lang/String;)V", "GetOnDone_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utteranceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="utteranceId">the utterance ID of the utterance.
</param>
        <summary>Called when an utterance has successfully completed processing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when an utterance has successfully completed processing.
 All audio will have been played back by this point for audible output, and all
 output will have been written to disk for file synthesis requests.

 This request is guaranteed to be called after <c><see cref="M:Android.Speech.Tts.UtteranceProgressListener.OnStart(System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/speech/tts/UtteranceProgressListener.html#onDone(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 15" />
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public abstract void OnError (string utteranceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnError(string utteranceId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onError", "(Ljava/lang/String;)V", "GetOnError_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utteranceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="utteranceId">the utterance ID of the utterance.</param>
        <summary>Called when an error has occurred during processing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when an error has occurred during processing. This can be called
 at any point in the synthesis process. Note that there might be calls
 to <c><see cref="M:Android.Speech.Tts.UtteranceProgressListener.OnStart(System.String)" /></c> for specified utteranceId but there will never
 be a call to both <c><see cref="M:Android.Speech.Tts.UtteranceProgressListener.OnDone(System.String)" /></c> and <c><see cref="M:Android.Speech.Tts.UtteranceProgressListener.OnError(System.String)" /></c> for
 the same utterance.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/speech/tts/UtteranceProgressListener.html#onError(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 21" />
      </Docs>
    </Member>
    <Member MemberName="OnError">
      <MemberSignature Language="C#" Value="public virtual void OnError (string utteranceId, Android.Speech.Tts.TextToSpeechError errorCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnError(string utteranceId, valuetype Android.Speech.Tts.TextToSpeechError errorCode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onError", "(Ljava/lang/String;I)V", "GetOnError_Ljava_lang_String_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utteranceId" Type="System.String" />
        <Parameter Name="errorCode" Type="Android.Speech.Tts.TextToSpeechError">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="utteranceId">the utterance ID of the utterance.</param>
        <param name="errorCode">one of the ERROR_* codes from <c><see cref="T:Android.Speech.Tts.TextToSpeech" /></c></param>
        <summary>Called when an error has occurred during processing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when an error has occurred during processing. This can be called
 at any point in the synthesis process. Note that there might be calls
 to <c><see cref="M:Android.Speech.Tts.UtteranceProgressListener.OnStart(System.String)" /></c> for specified utteranceId but there will never
 be a call to both <c><see cref="M:Android.Speech.Tts.UtteranceProgressListener.OnDone(System.String)" /></c> and <c><see cref="M:Android.Speech.Tts.UtteranceProgressListener.OnError(System.String,Android.Speech.Tts.TextToSpeechError)" /></c> for
 the same utterance. The default implementation calls <c><see cref="M:Android.Speech.Tts.UtteranceProgressListener.OnError(System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/speech/tts/UtteranceProgressListener.html#onError(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStart">
      <MemberSignature Language="C#" Value="public abstract void OnStart (string utteranceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnStart(string utteranceId) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onStart", "(Ljava/lang/String;)V", "GetOnStart_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utteranceId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="utteranceId">the utterance ID of the utterance.
</param>
        <summary>Called when an utterance "starts" as perceived by the caller.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when an utterance "starts" as perceived by the caller. This will
 be soon before audio is played back in the case of a <c><see cref="M:Android.Speech.Tts.TextToSpeech.Speak(Java.Lang.ICharSequence,Android.Speech.Tts.QueueMode,Android.Speech.Tts.QueueMode,Android.Speech.Tts.QueueMode)" /></c>
 or before the first bytes of a file are written to storage in the case
 of <c><see cref="M:Android.Speech.Tts.TextToSpeech.SynthesizeToFile(Java.Lang.ICharSequence,Android.OS.Bundle,Android.OS.Bundle,Android.OS.Bundle)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/speech/tts/UtteranceProgressListener.html#onStart(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 15" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
