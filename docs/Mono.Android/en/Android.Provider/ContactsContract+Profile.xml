<Type Name="ContactsContract+Profile" FullName="Android.Provider.ContactsContract+Profile">
  <TypeSignature Language="C#" Value="public sealed class ContactsContract.Profile : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit ContactsContract/Profile extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/provider/ContactsContract$Profile", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <format type="text/html">
        <h3>Operations</h3>
      </format>
      <format type="text/html">
        <dl>
          <dt>
            <b>Insert</b>
          </dt>
          <dd>The user's profile entry cannot be created explicitly (attempting to do so
 will throw an exception). When a raw contact is inserted into the profile, the
 provider will check for the existence of a profile on the device.  If one is
 found, the raw contact's <c><see cref="F:Android.Provider.ContactsContract+RawContactsColumns.ContactId" /></c> column gets the _ID of
 the profile Contact. If no match is found, the profile Contact is created and
 its _ID is put into the <c><see cref="F:Android.Provider.ContactsContract+RawContactsColumns.ContactId" /></c> column of the newly
 inserted raw contact.</dd>
          <dt>
            <b>Update</b>
          </dt>
          <dd>The profile Contact has the same update restrictions as Contacts in general,
 but requires the android.permission.WRITE_PROFILE permission.</dd>
          <dt>
            <b>Delete</b>
          </dt>
          <dd>The profile Contact cannot be explicitly deleted.  It will be removed
 automatically if all of its constituent raw contact entries are deleted.</dd>
          <dt>
            <b>Query</b>
          </dt>
          <dd>
            <list type="bullet">
              <item>
                <term>The <c><see cref="P:Android.Provider.ContactsContract.Profile.ContentUri" /></c> for profiles behaves in much the same way as
 retrieving a contact by ID, except that it will only ever return the user's
 profile contact.
 </term>
              </item>
              <item>
                <term>
 The profile contact supports all of the same sub-paths as an individual contact
 does - the content of the profile contact can be retrieved as entities or
 data rows.  Similarly, specific raw contact entries can be retrieved by appending
 the desired raw contact ID within the profile.
 </term>
              </item>
            </list>
          </dd>
        </dl>
      </format>
    </summary>
    <remarks>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <h3>Operations</h3>
        </format>
        <format type="text/html">
          <dl>
            <dt>
              <b>Insert</b>
            </dt>
            <dd>The user's profile entry cannot be created explicitly (attempting to do so
 will throw an exception). When a raw contact is inserted into the profile, the
 provider will check for the existence of a profile on the device.  If one is
 found, the raw contact's <c><see cref="F:Android.Provider.ContactsContract+RawContactsColumns.ContactId" /></c> column gets the _ID of
 the profile Contact. If no match is found, the profile Contact is created and
 its _ID is put into the <c><see cref="F:Android.Provider.ContactsContract+RawContactsColumns.ContactId" /></c> column of the newly
 inserted raw contact.</dd>
            <dt>
              <b>Update</b>
            </dt>
            <dd>The profile Contact has the same update restrictions as Contacts in general,
 but requires the android.permission.WRITE_PROFILE permission.</dd>
            <dt>
              <b>Delete</b>
            </dt>
            <dd>The profile Contact cannot be explicitly deleted.  It will be removed
 automatically if all of its constituent raw contact entries are deleted.</dd>
            <dt>
              <b>Query</b>
            </dt>
            <dd>
              <list type="bullet">
                <item>
                  <term>The <c><see cref="P:Android.Provider.ContactsContract.Profile.ContentUri" /></c> for profiles behaves in much the same way as
 retrieving a contact by ID, except that it will only ever return the user's
 profile contact.
 </term>
                </item>
                <item>
                  <term>
 The profile contact supports all of the same sub-paths as an individual contact
 does - the content of the profile contact can be retrieved as entities or
 data rows.  Similarly, specific raw contact entries can be retrieved by appending
 the desired raw contact ID within the profile.
 </term>
                </item>
              </list>
            </dd>
          </dl>
        </format>
      </para>
      <para tool="javadoc-to-mdoc">
 Constants for the user's profile data, which is represented as a single contact on
 the device that represents the user.  The profile contact is not aggregated
 together automatically in the same way that normal contacts are; instead, each
 account (including data set, if applicable) on the device may contribute a single
 raw contact representing the user's personal profile data from that source.
 </para>
      <para tool="javadoc-to-mdoc">
 Access to the profile entry through these URIs (or incidental access to parts of
 the profile if retrieved directly via ID) requires additional permissions beyond
 the read/write contact permissions required by the provider.  Querying for profile
 data requires android.permission.READ_PROFILE permission, and inserting or
 updating profile data requires android.permission.WRITE_PROFILE permission.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/provider/ContactsContract.Profile.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName="ContentRawContactsUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri ContentRawContactsUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Uri ContentRawContactsUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTENT_RAW_CONTACTS_URI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <c>
            <see cref="T:Android.Net.Uri" />
          </c> for referencing the raw contacts that make up the user's profile
 <c><see cref="T:Android.Provider.Contacts" /></c> entry.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="T:Android.Net.Uri" />
            </c> for referencing the raw contacts that make up the user's profile
 <c><see cref="T:Android.Provider.Contacts" /></c> entry.  An individual raw contact entry within the profile
 can be addressed by appending the raw contact ID.  The entities or data within
 that specific raw contact can be requested by appending the entity or data
 path as well.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/ContactsContract.Profile.html#CONTENT_RAW_CONTACTS_URI" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ContentUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri ContentUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Uri ContentUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTENT_URI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The content:// style URI for this table, which requests the contact entry
 representing the user's personal profile data.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The content:// style URI for this table, which requests the contact entry
 representing the user's personal profile data.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/ContactsContract.Profile.html#CONTENT_URI" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ContentVcardUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri ContentVcardUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Uri ContentVcardUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTENT_VCARD_URI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <c>
            <see cref="T:Android.Net.Uri" />
          </c> for referencing the user's profile <c><see cref="T:Android.Provider.Contacts" /></c> entry,
 Provides <c><see cref="T:Android.Provider.OpenableColumns" /></c> columns when queried, or returns the
 user's profile contact formatted as a vCard when opened through
 <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">
            <c>
              <see cref="T:Android.Net.Uri" />
            </c> for referencing the user's profile <c><see cref="T:Android.Provider.Contacts" /></c> entry,
 Provides <c><see cref="T:Android.Provider.OpenableColumns" /></c> columns when queried, or returns the
 user's profile contact formatted as a vCard when opened through
 <c><see cref="M:Android.Content.ContentResolver.OpenAssetFileDescriptor(Android.Net.Uri,System.String)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/ContactsContract.Profile.html#CONTENT_VCARD_URI" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="MinId">
      <MemberSignature Language="C#" Value="public const long MinId = 9223372034707292160;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 MinId = (9223372034707292160)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MIN_ID")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>9223372034707292160</MemberValue>
      <Docs>
        <summary>The minimum ID for any entity that belongs to the profile.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The minimum ID for any entity that belongs to the profile.  This essentially
 defines an ID-space in which profile data is stored, and is used by the provider
 to determine whether a request via a non-profile-specific URI should be directed
 to the profile data rather than general contacts data, along with all the special
 permission checks that entails.

 Callers may use <c><see cref="M:Android.Provider.ContactsContract.IsProfileId(System.Int64)" /></c> to check whether a specific ID falls into
 the set of data intended for the profile.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/ContactsContract.Profile.html#MIN_ID" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
