<Type Name="CalendarContract+Events" FullName="Android.Provider.CalendarContract+Events">
  <TypeSignature Language="C#" Value="public sealed class CalendarContract.Events : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit CalendarContract/Events extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/provider/CalendarContract$Events", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Constants and helpers for the Events table, which contains details for
 individual events.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Constants and helpers for the Events table, which contains details for
 individual events. <format type="text/html"><h3>Operations</h3></format> All operations can be done either
 as an app or as a sync adapter. To perform an operation as a sync adapter
 <c><see cref="F:Android.Provider.CalendarContract.CallerIsSyncadapter" /></c> should be set to true and
 <c><see cref="F:Android.Provider.CalendarContract.SyncColumns.AccountName" /></c> and <c><see cref="F:Android.Provider.CalendarContract.SyncColumns.AccountType" /></c> must be set in the Uri
 parameters. See
 <c><see cref="M:Android.Net.Uri.Builder.AppendQueryParameter(System.String,System.String)" /></c>
 for details on adding parameters. Sync adapters have write access to more
 columns but are restricted to a single account at a time.
 <format type="text/html"><dl><dt><b>Insert</b></dt><dd>When inserting a new event the following fields must be included:
 <list type="bullet"><item><term>dtstart</term></item><item><term>dtend if the event is non-recurring</term></item><item><term>duration if the event is recurring</term></item><item><term>rrule or rdate if the event is recurring</term></item><item><term>eventTimezone</term></item><item><term>a calendar_id</term></item></list>
 There are also further requirements when inserting or updating an event.
 See the section on Writing to Events.</dd><dt><b>Update</b></dt><dd>To perform an update of an Event the <c><see cref="F:Android.Provider.BaseColumns.Id" /></c> of the event
 should be provided either as an appended id to the Uri (
 <c><see cref="M:Android.Content.ContentUris.WithAppendedId(Android.Net.Uri,System.Int64)" /></c>) or as the first selection item--the
 selection should start with "_id=?" and the first selectionArg should be
 the _id of the event. Updates may also be done using a selection and no
 id. Updating an event must respect the same rules as inserting and is
 further restricted in the fields that can be written. See the section on
 Writing to Events.</dd><dt><b>Delete</b></dt><dd>Events can be deleted either by the <c><see cref="F:Android.Provider.BaseColumns.Id" /></c> as an appended
 id on the Uri or using any standard selection. If an appended id is used
 a selection is not allowed. There are two versions of delete: as an app
 and as a sync adapter. An app delete will set the deleted column on an
 event and remove all instances of that event. A sync adapter delete will
 remove the event from the database and all associated data.</dd><dt><b>Query</b></dt><dd>Querying the Events table will get you all information about a set of
 events except their reminders, attendees, and extended properties. There
 will be one row returned for each event that matches the query selection,
 or at most a single row if the <c><see cref="F:Android.Provider.BaseColumns.Id" /></c> is appended to the Uri.
 Recurring events will only return a single row regardless of the number
 of times that event repeats.</dd></dl></format><format type="text/html"><h3>Writing to Events</h3></format> There are further restrictions on all Updates
 and Inserts in the Events table:
 <list type="bullet"><item><term>If allDay is set to 1 eventTimezone must be <c><see cref="F:Android.Text.Format.Time.TimezoneUtc" /></c>
 and the time must correspond to a midnight boundary.</term></item><item><term>Exceptions are not allowed to recur. If rrule or rdate is not empty,
 original_id and original_sync_id must be empty.</term></item><item><term>In general a calendar_id should not be modified after insertion. This
 is not explicitly forbidden but many sync adapters will not behave in an
 expected way if the calendar_id is modified.</term></item></list>
 The following Events columns are writable by both an app and a sync
 adapter.
 <list type="bullet"><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.CalendarId" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.Organizer" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.Title" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.EventLocation" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.Description" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.EventColor" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.Dtstart" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.Dtend" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.EventTimezone" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.EventEndTimezone" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.Duration" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.AllDay" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.Rrule" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.Rdate" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.Exrule" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.Exdate" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.OriginalId" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.OriginalSyncId" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.OriginalInstanceTime" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.OriginalAllDay" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.AccessLevel" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.Availability" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.GuestsCanModify" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.GuestsCanInviteOthers" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.GuestsCanSeeGuests" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.CustomAppPackage" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.CustomAppUri" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.Uid2445" /></c></term></item></list>
 The following Events columns are writable only by a sync adapter
 <list type="bullet"><item><term><c><see cref="F:Android.Provider.CalendarContract.SyncColumns.Dirty" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.SyncColumns.Mutators" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.SyncColumns.SyncId" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.SyncData1" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.SyncData2" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.SyncData3" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.SyncData4" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.SyncData5" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.SyncData6" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.SyncData7" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.SyncData8" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.SyncData9" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.EventsColumns.SyncData10" /></c></term></item></list>
 The remaining columns are either updated by the provider only or are
 views into other tables and cannot be changed through the Events table.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/provider/CalendarContract.Events.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName="ContentExceptionUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri ContentExceptionUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Uri ContentExceptionUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTENT_EXCEPTION_URI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The content:// style URI for recurring event exceptions.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The content:// style URI for recurring event exceptions.  Insertions require an
 appended event ID.  Deletion of exceptions requires both the original event ID and
 the exception event ID (see <c><see cref="M:Android.Net.Uri.Builder.AppendPath(System.String)" /></c>).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/CalendarContract.Events.html#CONTENT_EXCEPTION_URI" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ContentUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri ContentUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Uri ContentUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTENT_URI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The content:// style URL for interacting with events.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The content:// style URL for interacting with events. Appending an
 event id using <c><see cref="M:Android.Content.ContentUris.WithAppendedId(Android.Net.Uri,System.Int64)" /></c> will
 specify a single event.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/CalendarContract.Events.html#CONTENT_URI" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
