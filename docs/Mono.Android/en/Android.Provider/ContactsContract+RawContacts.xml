<Type Name="ContactsContract+RawContacts" FullName="Android.Provider.ContactsContract+RawContacts">
  <TypeSignature Language="C#" Value="public sealed class ContactsContract.RawContacts : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit ContactsContract/RawContacts extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Provider.ContactsContract.RawContacts" />
  <TypeSignature Language="F#" Value="type ContactsContract.RawContacts = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/provider/ContactsContract$RawContacts", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/provider/ContactsContract$RawContacts", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Constants for the raw contacts table, which contains one row of contact
            information for each person in each synced account.</summary>
    <remarks>
      <para>Constants for the raw contacts table, which contains one row of contact
            information for each person in each synced account. Sync adapters and
            contact management apps
            are the primary consumers of this API.
            
            &lt;h3&gt;Aggregation&lt;/h3&gt;</para>
      <para>As soon as a raw contact is inserted or whenever its constituent data
            changes, the provider will check if the raw contact matches other
            existing raw contacts and if so will aggregate it with those. The
            aggregation is reflected in the <c>RawContacts</c> table by the change of the
            <c>#CONTACT_ID</c> field, which is the reference to the aggregate contact.</para>
      <para>Changes to the structured name, organization, phone number, email address,
            or nickname trigger a re-aggregation.</para>
      <para>See also <c>AggregationExceptions</c> for a mechanism to control
            aggregation programmatically.</para>
      <para>&lt;h3&gt;Operations&lt;/h3&gt;
            &lt;dl&gt;
            &lt;dt&gt;&lt;b&gt;Insert&lt;/b&gt;&lt;/dt&gt;
            &lt;dd&gt;</para>
      <para>Raw contacts can be inserted incrementally or in a batch.
            The incremental method is more traditional but less efficient.
            It should be used
            only if no <c>Data</c> values are available at the time the raw contact is created:</para>
      <code lang="text/java">ContentValues values = new ContentValues();
            values.put(RawContacts.ACCOUNT_TYPE, accountType);
            values.put(RawContacts.ACCOUNT_NAME, accountName);
            Uri rawContactUri = getContentResolver().insert(RawContacts.CONTENT_URI, values);
            long rawContactId = ContentUris.parseId(rawContactUri);
            </code>
      <para>&lt;/p&gt;</para>
      <para>Once <c>Data</c> values become available, insert those.
            For example, here's how you would insert a name:</para>
      <code lang="text/java">values.clear();
            values.put(Data.RAW_CONTACT_ID, rawContactId);
            values.put(Data.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE);
            values.put(StructuredName.DISPLAY_NAME, &amp;quot;Mike Sullivan&amp;quot;);
            getContentResolver().insert(Data.CONTENT_URI, values);
            </code>
      <para>&lt;/p&gt;</para>
      <para>The batch method is by far preferred.  It inserts the raw contact and its
            constituent data rows in a single database transaction
            and causes at most one aggregation pass.</para>
      <code lang="text/java">ArrayList&amp;lt;ContentProviderOperation&amp;gt; ops =
                     new ArrayList&amp;lt;ContentProviderOperation&amp;gt;();
            ...
            int rawContactInsertIndex = ops.size();
            ops.add(ContentProviderOperation.newInsert(RawContacts.CONTENT_URI)
                     .withValue(RawContacts.ACCOUNT_TYPE, accountType)
                     .withValue(RawContacts.ACCOUNT_NAME, accountName)
                     .build());
            
            ops.add(ContentProviderOperation.newInsert(Data.CONTENT_URI)
                     .withValueBackReference(Data.RAW_CONTACT_ID, rawContactInsertIndex)
                     .withValue(Data.MIMETYPE, StructuredName.CONTENT_ITEM_TYPE)
                     .withValue(StructuredName.DISPLAY_NAME, &amp;quot;Mike Sullivan&amp;quot;)
                     .build());
            
            getContentResolver().applyBatch(ContactsContract.AUTHORITY, ops);
            </code>
      <para>&lt;/p&gt;</para>
      <para>Note the use of <c>ContentProviderOperation.Builder#withValueBackReference(String, int)</c>
            to refer to the as-yet-unknown index value of the raw contact inserted in the
            first operation.</para>
      <para>&lt;dt&gt;&lt;b&gt;Update&lt;/b&gt;&lt;/dt&gt;
            &lt;dd&gt;</para>
      <para>Raw contacts can be updated incrementally or in a batch.
            Batch mode should be used whenever possible.
            The procedures and considerations are analogous to those documented above for inserts.</para>
      <para>&lt;/dd&gt;
            &lt;dt&gt;&lt;b&gt;Delete&lt;/b&gt;&lt;/dt&gt;
            &lt;dd&gt;</para>
      <para>When a raw contact is deleted, all of its Data rows as well as StatusUpdates,
            AggregationExceptions, PhoneLookup rows are deleted automatically. When all raw
            contacts associated with a <c>Contacts</c> row are deleted, the <c>Contacts</c> row
            itself is also deleted automatically.</para>
      <para>The invocation of <c>resolver.delete(...)</c>, does not immediately delete
            a raw contacts row.
            Instead, it sets the <c>#DELETED</c> flag on the raw contact and
            removes the raw contact from its aggregate contact.
            The sync adapter then deletes the raw contact from the server and
            finalizes phone-side deletion by calling <c>resolver.delete(...)</c>
            again and passing the <c>ContactsContract#CALLER_IS_SYNCADAPTER</c> query parameter.</para>
      <para />
      <para>Some sync adapters are read-only, meaning that they only sync server-side
            changes to the phone, but not the reverse.  If one of those raw contacts
            is marked for deletion, it will remain on the phone.  However it will be
            effectively invisible, because it will not be part of any aggregate contact.
            &lt;/dd&gt;
            
            &lt;dt&gt;&lt;b&gt;Query&lt;/b&gt;&lt;/dt&gt;
            &lt;dd&gt;</para>
      <para>It is easy to find all raw contacts in a Contact:</para>
      <code lang="text/java">Cursor c = getContentResolver().query(RawContacts.CONTENT_URI,
                     new String[]{RawContacts._ID},
                     RawContacts.CONTACT_ID + "=?",
                     new String[]{String.valueOf(contactId)}, null);
            </code>
      <para>&lt;/p&gt;</para>
      <para>To find raw contacts within a specific account,
            you can either put the account name and type in the selection or pass them as query
            parameters.  The latter approach is preferable, especially when you can reuse the
            URI:</para>
      <code lang="text/java">Uri rawContactUri = RawContacts.CONTENT_URI.buildUpon()
                     .appendQueryParameter(RawContacts.ACCOUNT_NAME, accountName)
                     .appendQueryParameter(RawContacts.ACCOUNT_TYPE, accountType)
                     .build();
            Cursor c1 = getContentResolver().query(rawContactUri,
                     RawContacts.STARRED + "&amp;lt;&amp;gt;0", null, null, null);
            ...
            Cursor c2 = getContentResolver().query(rawContactUri,
                     RawContacts.DELETED + "&amp;lt;&amp;gt;0", null, null, null);
            </code>
      <para>&lt;/p&gt;</para>
      <para>The best way to read a raw contact along with all the data associated with it is
            by using the <c>Entity</c> directory. If the raw contact has data rows,
            the Entity cursor will contain a row for each data row.  If the raw contact has no
            data rows, the cursor will still contain one row with the raw contact-level information.</para>
      <code lang="text/java">Uri rawContactUri = ContentUris.withAppendedId(RawContacts.CONTENT_URI, rawContactId);
            Uri entityUri = Uri.withAppendedPath(rawContactUri, Entity.CONTENT_DIRECTORY);
            Cursor c = getContentResolver().query(entityUri,
                     new String[]{RawContacts.SOURCE_ID, Entity.DATA_ID, Entity.MIMETYPE, Entity.DATA1},
                     null, null, null);
            try {
                while (c.moveToNext()) {
                    String sourceId = c.getString(0);
                    if (!c.isNull(1)) {
                        String mimeType = c.getString(2);
                        String data = c.getString(3);
                        ...
                    }
                }
            } finally {
                c.close();
            }
            </code>
      <para>&lt;/p&gt;
            &lt;/dd&gt;
            &lt;/dl&gt;
            &lt;h2&gt;Columns&lt;/h2&gt;
            
            &lt;table class="jd-sumtable"&gt;
            &lt;tr&gt;
            &lt;th colspan='4'&gt;RawContacts&lt;/th&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;long&lt;/td&gt;
            &lt;td&gt;<c>#_ID</c>&lt;/td&gt;
            &lt;td&gt;read-only&lt;/td&gt;
            &lt;td&gt;Row ID. Sync adapters should try to preserve row IDs during updates. In other words,
            it is much better for a sync adapter to update a raw contact rather than to delete and
            re-insert it.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;long&lt;/td&gt;
            &lt;td&gt;<c>#CONTACT_ID</c>&lt;/td&gt;
            &lt;td&gt;read-only&lt;/td&gt;
            &lt;td&gt;The ID of the row in the <c>ContactsContract.Contacts</c> table
            that this raw contact belongs
            to. Raw contacts are linked to contacts by the aggregation process, which can be controlled
            by the <c>#AGGREGATION_MODE</c> field and <c>AggregationExceptions</c>.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;int&lt;/td&gt;
            &lt;td&gt;<c>#AGGREGATION_MODE</c>&lt;/td&gt;
            &lt;td&gt;read/write&lt;/td&gt;
            &lt;td&gt;A mechanism that allows programmatic control of the aggregation process. The allowed
            values are <c>#AGGREGATION_MODE_DEFAULT</c>, <c>#AGGREGATION_MODE_DISABLED</c>
            and <c>#AGGREGATION_MODE_SUSPENDED</c>. See also <c>AggregationExceptions</c>.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;int&lt;/td&gt;
            &lt;td&gt;<c>#DELETED</c>&lt;/td&gt;
            &lt;td&gt;read/write&lt;/td&gt;
            &lt;td&gt;The "deleted" flag: "0" by default, "1" if the row has been marked
            for deletion. When <c>android.content.ContentResolver#delete</c> is
            called on a raw contact, it is marked for deletion and removed from its
            aggregate contact. The sync adaptor deletes the raw contact on the server and
            then calls ContactResolver.delete once more, this time passing the
            <c>ContactsContract#CALLER_IS_SYNCADAPTER</c> query parameter to finalize
            the data removal.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;int&lt;/td&gt;
            &lt;td&gt;<c>#STARRED</c>&lt;/td&gt;
            &lt;td&gt;read/write&lt;/td&gt;
            &lt;td&gt;An indicator for favorite contacts: '1' if favorite, '0' otherwise.
            Changing this field immediately affects the corresponding aggregate contact:
            if any raw contacts in that aggregate contact are starred, then the contact
            itself is marked as starred.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;String&lt;/td&gt;
            &lt;td&gt;<c>#CUSTOM_RINGTONE</c>&lt;/td&gt;
            &lt;td&gt;read/write&lt;/td&gt;
            &lt;td&gt;A custom ringtone associated with a raw contact. Typically this is the
            URI returned by an activity launched with the
            <c>android.media.RingtoneManager#ACTION_RINGTONE_PICKER</c> intent.
            To have an effect on the corresponding value of the aggregate contact, this field
            should be set at the time the raw contact is inserted. To set a custom
            ringtone on a contact, use the field <c>ContactsContract.Contacts#CUSTOM_RINGTONE
            Contacts.CUSTOM_RINGTONE</c>
            instead.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;int&lt;/td&gt;
            &lt;td&gt;<c>#SEND_TO_VOICEMAIL</c>&lt;/td&gt;
            &lt;td&gt;read/write&lt;/td&gt;
            &lt;td&gt;An indicator of whether calls from this raw contact should be forwarded
            directly to voice mail ('1') or not ('0'). To have an effect
            on the corresponding value of the aggregate contact, this field
            should be set at the time the raw contact is inserted.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;String&lt;/td&gt;
            &lt;td&gt;<c>#ACCOUNT_NAME</c>&lt;/td&gt;
            &lt;td&gt;read/write-once&lt;/td&gt;
            &lt;td&gt;The name of the account instance to which this row belongs, which when paired with
            <c>#ACCOUNT_TYPE</c> identifies a specific account.
            For example, this will be the Gmail address if it is a Google account.
            It should be set at the time the raw contact is inserted and never
            changed afterwards.&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;String&lt;/td&gt;
            &lt;td&gt;<c>#ACCOUNT_TYPE</c>&lt;/td&gt;
            &lt;td&gt;read/write-once&lt;/td&gt;
            &lt;td&gt;</para>
      <para>The type of account to which this row belongs, which when paired with
            <c>#ACCOUNT_NAME</c> identifies a specific account.
            It should be set at the time the raw contact is inserted and never
            changed afterwards.</para>
      <para>To ensure uniqueness, new account types should be chosen according to the
            Java package naming convention.  Thus a Google account is of type "com.google".</para>
      <para>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;String&lt;/td&gt;
            &lt;td&gt;<c>#DATA_SET</c>&lt;/td&gt;
            &lt;td&gt;read/write-once&lt;/td&gt;
            &lt;td&gt;</para>
      <para>The data set within the account that this row belongs to.  This allows
            multiple sync adapters for the same account type to distinguish between
            each others' data.  The combination of <c>#ACCOUNT_TYPE</c>,
            <c>#ACCOUNT_NAME</c>, and <c>#DATA_SET</c> identifies a set of data
            that is associated with a single sync adapter.</para>
      <para>This is empty by default, and is completely optional.  It only needs to
            be populated if multiple sync adapters are entering distinct data for
            the same account type and account name.</para>
      <para>It should be set at the time the raw contact is inserted and never
            changed afterwards.</para>
      <para>&lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;String&lt;/td&gt;
            &lt;td&gt;<c>#SOURCE_ID</c>&lt;/td&gt;
            &lt;td&gt;read/write&lt;/td&gt;
            &lt;td&gt;String that uniquely identifies this row to its source account.
            Typically it is set at the time the raw contact is inserted and never
            changed afterwards. The one notable exception is a new raw contact: it
            will have an account name and type (and possibly a data set), but no
            source id. This indicates to the sync adapter that a new contact needs
            to be created server-side and its ID stored in the corresponding
            SOURCE_ID field on the phone.
            &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;int&lt;/td&gt;
            &lt;td&gt;<c>#VERSION</c>&lt;/td&gt;
            &lt;td&gt;read-only&lt;/td&gt;
            &lt;td&gt;Version number that is updated whenever this row or its related data
            changes. This field can be used for optimistic locking of a raw contact.
            &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;int&lt;/td&gt;
            &lt;td&gt;<c>#DIRTY</c>&lt;/td&gt;
            &lt;td&gt;read/write&lt;/td&gt;
            &lt;td&gt;Flag indicating that <c>#VERSION</c> has changed, and this row needs
            to be synchronized by its owning account.  The value is set to "1" automatically
            whenever the raw contact changes, unless the URI has the
            <c>ContactsContract#CALLER_IS_SYNCADAPTER</c> query parameter specified.
            The sync adapter should always supply this query parameter to prevent
            unnecessary synchronization: user changes some data on the server,
            the sync adapter updates the contact on the phone (without the
            CALLER_IS_SYNCADAPTER flag) flag, which sets the DIRTY flag,
            which triggers a sync to bring the changes to the server.
            &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;String&lt;/td&gt;
            &lt;td&gt;<c>#SYNC1</c>&lt;/td&gt;
            &lt;td&gt;read/write&lt;/td&gt;
            &lt;td&gt;Generic column provided for arbitrary use by sync adapters.
            The content provider
            stores this information on behalf of the sync adapter but does not
            interpret it in any way.
            &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;String&lt;/td&gt;
            &lt;td&gt;<c>#SYNC2</c>&lt;/td&gt;
            &lt;td&gt;read/write&lt;/td&gt;
            &lt;td&gt;Generic column for use by sync adapters.
            &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;String&lt;/td&gt;
            &lt;td&gt;<c>#SYNC3</c>&lt;/td&gt;
            &lt;td&gt;read/write&lt;/td&gt;
            &lt;td&gt;Generic column for use by sync adapters.
            &lt;/td&gt;
            &lt;/tr&gt;
            &lt;tr&gt;
            &lt;td&gt;String&lt;/td&gt;
            &lt;td&gt;<c>#SYNC4</c>&lt;/td&gt;
            &lt;td&gt;read/write&lt;/td&gt;
            &lt;td&gt;Generic column for use by sync adapters.
            &lt;/td&gt;
            &lt;/tr&gt;
            &lt;/table&gt;</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/provider/ContactsContract.RawContacts" title="Reference documentation">Java documentation for <code>android.provider.ContactsContract.RawContacts</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 5" />
  </Docs>
  <Members>
    <Member MemberName="ContentItemType">
      <MemberSignature Language="C#" Value="public const string ContentItemType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ContentItemType" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.ContactsContract.RawContacts.ContentItemType" />
      <MemberSignature Language="F#" Value="val mutable ContentItemType : string" Usage="Android.Provider.ContactsContract.RawContacts.ContentItemType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CONTENT_ITEM_TYPE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CONTENT_ITEM_TYPE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The MIME type of the results when a raw contact ID is appended to <c>#CONTENT_URI</c>,
            yielding a subdirectory of a single person.</summary>
        <remarks>
          <para>The MIME type of the results when a raw contact ID is appended to <c>#CONTENT_URI</c>,
            yielding a subdirectory of a single person.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/ContactsContract.RawContacts#CONTENT_ITEM_TYPE" title="Reference documentation">Java documentation for <code>android.provider.ContactsContract.RawContacts.CONTENT_ITEM_TYPE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public const string ContentType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ContentType" />
      <MemberSignature Language="DocId" Value="F:Android.Provider.ContactsContract.RawContacts.ContentType" />
      <MemberSignature Language="F#" Value="val mutable ContentType : string" Usage="Android.Provider.ContactsContract.RawContacts.ContentType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CONTENT_TYPE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CONTENT_TYPE")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The MIME type of the results from <c>#CONTENT_URI</c> when a specific
            ID value is not provided, and multiple raw contacts may be returned.</summary>
        <remarks>
          <para>The MIME type of the results from <c>#CONTENT_URI</c> when a specific
            ID value is not provided, and multiple raw contacts may be returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/ContactsContract.RawContacts#CONTENT_TYPE" title="Reference documentation">Java documentation for <code>android.provider.ContactsContract.RawContacts.CONTENT_TYPE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ContentUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri? ContentUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Uri ContentUri" />
      <MemberSignature Language="DocId" Value="P:Android.Provider.ContactsContract.RawContacts.ContentUri" />
      <MemberSignature Language="F#" Value="static member ContentUri : Android.Net.Uri" Usage="Android.Provider.ContactsContract.RawContacts.ContentUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("CONTENT_URI")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("CONTENT_URI")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The content:// style URI for this table, which requests a directory of
            raw contact rows matching the selection criteria.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The content:// style URI for this table, which requests a directory of
            raw contact rows matching the selection criteria.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/ContactsContract.RawContacts#CONTENT_URI" title="Reference documentation">Java documentation for <code>android.provider.ContactsContract.RawContacts.CONTENT_URI</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetContactLookupUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri? GetContactLookupUri (Android.Content.ContentResolver? resolver, Android.Net.Uri? rawContactUri);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Net.Uri GetContactLookupUri(class Android.Content.ContentResolver resolver, class Android.Net.Uri rawContactUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.ContactsContract.RawContacts.GetContactLookupUri(Android.Content.ContentResolver,Android.Net.Uri)" />
      <MemberSignature Language="F#" Value="static member GetContactLookupUri : Android.Content.ContentResolver * Android.Net.Uri -&gt; Android.Net.Uri" Usage="Android.Provider.ContactsContract.RawContacts.GetContactLookupUri (resolver, rawContactUri)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getContactLookupUri", "(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/net/Uri;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getContactLookupUri", "(Landroid/content/ContentResolver;Landroid/net/Uri;)Landroid/net/Uri;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resolver" Type="Android.Content.ContentResolver" />
        <Parameter Name="rawContactUri" Type="Android.Net.Uri" />
      </Parameters>
      <Docs>
        <param name="resolver">To be added.</param>
        <param name="rawContactUri">To be added.</param>
        <summary>Build a <c>android.provider.ContactsContract.Contacts#CONTENT_LOOKUP_URI</c>
            style <c>Uri</c> for the parent <c>android.provider.ContactsContract.Contacts</c>
            entry of the given <c>RawContacts</c> entry.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Build a <c>android.provider.ContactsContract.Contacts#CONTENT_LOOKUP_URI</c>
            style <c>Uri</c> for the parent <c>android.provider.ContactsContract.Contacts</c>
            entry of the given <c>RawContacts</c> entry.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/ContactsContract.RawContacts#getContactLookupUri(android.content.ContentResolver,%20android.net.Uri)" title="Reference documentation">Java documentation for <code>android.provider.ContactsContract.RawContacts.getContactLookupUri(android.content.ContentResolver, android.net.Uri)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetLocalAccountName">
      <MemberSignature Language="C#" Value="public static string? GetLocalAccountName (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLocalAccountName(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.ContactsContract.RawContacts.GetLocalAccountName(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member GetLocalAccountName : Android.Content.Context -&gt; string" Usage="Android.Provider.ContactsContract.RawContacts.GetLocalAccountName context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLocalAccountName", "(Landroid/content/Context;)Ljava/lang/String;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLocalAccountName", "(Landroid/content/Context;)Ljava/lang/String;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>The default value used for <c>#ACCOUNT_NAME</c> of raw contacts when they are inserted
            without a value for this column.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The default value used for <c>#ACCOUNT_NAME</c> of raw contacts when they are inserted
            without a value for this column.</para>
          <para>This account is used to identify contacts that are only stored locally in the
            contacts database instead of being associated with an <c>Account</c> managed by an
            installed application.</para>
          <para>When this returns null then <c>#getLocalAccountType</c> will also return null and
            when it is non-null <c>#getLocalAccountType</c> will also return a non-null value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/ContactsContract.RawContacts#getLocalAccountName(android.content.Context)" title="Reference documentation">Java documentation for <code>android.provider.ContactsContract.RawContacts.getLocalAccountName(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalAccountType">
      <MemberSignature Language="C#" Value="public static string? GetLocalAccountType (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetLocalAccountType(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Provider.ContactsContract.RawContacts.GetLocalAccountType(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member GetLocalAccountType : Android.Content.Context -&gt; string" Usage="Android.Provider.ContactsContract.RawContacts.GetLocalAccountType context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLocalAccountType", "(Landroid/content/Context;)Ljava/lang/String;", "", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLocalAccountType", "(Landroid/content/Context;)Ljava/lang/String;", "", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>The default value used for <c>#ACCOUNT_TYPE</c> of raw contacts when they are inserted
            without a value for this column.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>The default value used for <c>#ACCOUNT_TYPE</c> of raw contacts when they are inserted
            without a value for this column.</para>
          <para>This account is used to identify contacts that are only stored locally in the
            contacts database instead of being associated with an <c>Account</c> managed by an
            installed application.</para>
          <para>When this returns null then <c>#getLocalAccountName</c> will also return null and
            when it is non-null <c>#getLocalAccountName</c> will also return a non-null value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/provider/ContactsContract.RawContacts#getLocalAccountType(android.content.Context)" title="Reference documentation">Java documentation for <code>android.provider.ContactsContract.RawContacts.getLocalAccountType(android.content.Context)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Provider.ContactsContract.RawContacts.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Provider.ContactsContract.RawContacts.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Provider.ContactsContract.RawContacts.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Provider.ContactsContract.RawContacts.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Provider.ContactsContract.RawContacts.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Provider.ContactsContract.RawContacts.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
