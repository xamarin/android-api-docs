<Type Name="CalendarContract+Calendars" FullName="Android.Provider.CalendarContract+Calendars">
  <TypeSignature Language="C#" Value="public sealed class CalendarContract.Calendars : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit CalendarContract/Calendars extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/provider/CalendarContract$Calendars", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Constants and helpers for the Calendars table, which contains details for
 individual calendars.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Constants and helpers for the Calendars table, which contains details for
 individual calendars. <format type="text/html"><h3>Operations</h3></format> All operations can be done
 either as an app or as a sync adapter. To perform an operation as a sync
 adapter <c><see cref="F:Android.Provider.CalendarContract.CallerIsSyncadapter" /></c> should be set to true and
 <c><see cref="F:Android.Provider.CalendarContract.SyncColumns.AccountName" /></c> and <c><see cref="F:Android.Provider.CalendarContract.SyncColumns.AccountType" /></c> must be set in the Uri
 parameters. See
 <c><see cref="M:Android.Net.Uri.Builder.AppendQueryParameter(System.String,System.String)" /></c>
 for details on adding parameters. Sync adapters have write access to more
 columns but are restricted to a single account at a time. Calendars are
 designed to be primarily managed by a sync adapter and inserting new
 calendars should be done as a sync adapter. For the most part, apps
 should only update calendars (such as changing the color or display
 name). If a local calendar is required an app can do so by inserting as a
 sync adapter and using an <c><see cref="F:Android.Provider.CalendarContract.SyncColumns.AccountType" /></c> of
 <c><see cref="F:Android.Provider.CalendarContract.AccountTypeLocal" /></c> .
 <format type="text/html"><dl><dt><b>Insert</b></dt><dd>When inserting a new calendar the following fields must be included:
 <list type="bullet"><item><term><c><see cref="F:Android.Provider.CalendarContract.SyncColumns.AccountName" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.SyncColumns.AccountType" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.Calendars.Name" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.CalendarDisplayName" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.CalendarColor" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.CalendarAccessLevel" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.OwnerAccount" /></c></term></item></list>
 The following fields are not required when inserting a Calendar but are
 generally a good idea to include:
 <list type="bullet"><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.SyncEvents" /></c> set to 1</term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.CalendarTimeZone" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.AllowedReminders" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.AllowedAvailability" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.AllowedAttendeeTypes" /></c></term></item></list><dt><b>Update</b></dt><dd>To perform an update on a calendar the <c><see cref="F:Android.Provider.BaseColumns.Id" /></c> of the calendar
 should be provided either as an appended id to the Uri (
 <c><see cref="M:Android.Content.ContentUris.WithAppendedId(Android.Net.Uri,System.Int64)" /></c>) or as the first selection item--the
 selection should start with "_id=?" and the first selectionArg should be
 the _id of the calendar. Calendars may also be updated using a selection
 without the id. In general, the <c><see cref="F:Android.Provider.CalendarContract.SyncColumns.AccountName" /></c> and
 <c><see cref="F:Android.Provider.CalendarContract.SyncColumns.AccountType" /></c> should not be changed after a calendar is created
 as this can cause issues for sync adapters.
 <dt><b>Delete</b></dt><dd>Calendars can be deleted either by the <c><see cref="F:Android.Provider.BaseColumns.Id" /></c> as an appended id
 on the Uri or using any standard selection. Deleting a calendar should
 generally be handled by a sync adapter as it will remove the calendar
 from the database and all associated data (aka events).</dd><dt><b>Query</b></dt><dd>Querying the Calendars table will get you all information about a set
 of calendars. There will be one row returned for each calendar that
 matches the query selection, or at most a single row if the <c><see cref="F:Android.Provider.BaseColumns.Id" /></c>
 is appended to the Uri.</dd></dd></dd></dl></format><format type="text/html"><h3>Calendar Columns</h3></format> The following Calendar columns are writable by
 both an app and a sync adapter.
 <list type="bullet"><item><term><c><see cref="F:Android.Provider.CalendarContract.Calendars.Name" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.CalendarDisplayName" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.Visible" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.SyncEvents" /></c></term></item></list>
 The following Calendars columns are writable only by a sync adapter
 <list type="bullet"><item><term><c><see cref="F:Android.Provider.CalendarContract.SyncColumns.AccountName" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.SyncColumns.AccountType" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.CalendarColor" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.SyncColumns.SyncId" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.SyncColumns.Dirty" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.SyncColumns.Mutators" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.OwnerAccount" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.MaxReminders" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.AllowedReminders" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.AllowedAvailability" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.AllowedAttendeeTypes" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.CanModifyTimeZone" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.CanOrganizerRespond" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.SyncColumns.CanPartiallyUpdate" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.Calendars.CalendarLocation" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.CalendarTimeZone" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarColumns.CalendarAccessLevel" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.SyncColumns.Deleted" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarSyncColumns.CalSync1" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarSyncColumns.CalSync2" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarSyncColumns.CalSync3" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarSyncColumns.CalSync4" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarSyncColumns.CalSync5" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarSyncColumns.CalSync6" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarSyncColumns.CalSync7" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarSyncColumns.CalSync8" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarSyncColumns.CalSync9" /></c></term></item><item><term><c><see cref="F:Android.Provider.CalendarContract.CalendarSyncColumns.CalSync10" /></c></term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/provider/CalendarContract.Calendars.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 14" />
  </Docs>
  <Members>
    <Member MemberName="CalendarLocation">
      <MemberSignature Language="C#" Value="public const string CalendarLocation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CalendarLocation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CALENDAR_LOCATION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The default location for the calendar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The default location for the calendar. Column name.
 </para>
          <para tool="javadoc-to-mdoc">Type: TEXT</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/CalendarContract.Calendars.html#CALENDAR_LOCATION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ContentUri">
      <MemberSignature Language="C#" Value="public static Android.Net.Uri ContentUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Net.Uri ContentUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CONTENT_URI")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Net.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The content:// style URL for accessing Calendars
</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">The content:// style URL for accessing Calendars
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/CalendarContract.Calendars.html#CONTENT_URI" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSortOrder">
      <MemberSignature Language="C#" Value="public const string DefaultSortOrder;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultSortOrder" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DEFAULT_SORT_ORDER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The default sort order for this table
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The default sort order for this table
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/CalendarContract.Calendars.html#DEFAULT_SORT_ORDER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public const string Name;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Name" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("NAME")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the calendar.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The name of the calendar. Column name.
 </para>
          <para tool="javadoc-to-mdoc">Type: TEXT</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/provider/CalendarContract.Calendars.html#NAME" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
