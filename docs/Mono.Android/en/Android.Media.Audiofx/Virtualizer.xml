<Type Name="Virtualizer" FullName="Android.Media.Audiofx.Virtualizer">
  <TypeSignature Language="C#" Value="public class Virtualizer : Android.Media.Audiofx.AudioEffect" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Virtualizer extends Android.Media.Audiofx.AudioEffect" />
  <TypeSignature Language="DocId" Value="T:Android.Media.Audiofx.Virtualizer" />
  <TypeSignature Language="F#" Value="type Virtualizer = class&#xA;    inherit AudioEffect" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Media.Audiofx.AudioEffect</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/audiofx/Virtualizer", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/audiofx/Virtualizer", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="9">
    <summary>An audio virtualizer is a general name for an effect to spatialize audio channels.</summary>
    <remarks>
      <para>An audio virtualizer is a general name for an effect to spatialize audio channels. The exact
            behavior of this effect is dependent on the number of audio input channels and the types and
            number of audio output channels of the device. For example, in the case of a stereo input and
            stereo headphone output, a stereo widening effect is used when this effect is turned on.</para>
      <para>An application creates a Virtualizer object to instantiate and control a virtualizer engine
            in the audio framework.</para>
      <para>The methods, parameter types and units exposed by the Virtualizer implementation are directly
            mapping those defined by the OpenSL ES 1.0.1 Specification (http://www.khronos.org/opensles/)
            for the SLVirtualizerItf interface. Please refer to this specification for more details.</para>
      <para>To attach the Virtualizer to a particular AudioTrack or MediaPlayer, specify the audio session
            ID of this AudioTrack or MediaPlayer when constructing the Virtualizer.</para>
      <para>NOTE: attaching a Virtualizer to the global audio output mix by use of session 0 is
            deprecated.</para>
      <para>See <c>android.media.MediaPlayer#getAudioSessionId()</c> for details on audio sessions.</para>
      <para>See <c>android.media.audiofx.AudioEffect</c> class for more details on controlling
            audio effects.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/audiofx/Virtualizer" title="Reference documentation">Java documentation for <code>android.media.audiofx.Virtualizer</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 9" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Virtualizer (int priority, int audioSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 priority, int32 audioSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Audiofx.Virtualizer.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Media.Audiofx.Virtualizer : int * int -&gt; Android.Media.Audiofx.Virtualizer" Usage="new Android.Media.Audiofx.Virtualizer (priority, audioSession)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="priority" Type="System.Int32" />
        <Parameter Name="audioSession" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="priority">the priority level requested by the application for controlling the Virtualizer
            engine. As the same engine can be shared by several applications, this parameter indicates
            how much the requesting application needs control of effect parameters. The normal priority
            is 0, above normal is a positive number, below normal a negative number.</param>
        <param name="audioSession">system wide unique audio session identifier. The Virtualizer will
            be attached to the MediaPlayer or AudioTrack in the same audio session.</param>
        <summary>Class constructor.</summary>
        <remarks>
          <para>Class constructor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/audiofx/Virtualizer#Virtualizer(int,%20int)" title="Reference documentation">Java documentation for <code>android.media.audiofx.Virtualizer.Virtualizer(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.RuntimeException" />
        <exception cref="T:Java.Lang.IllegalStateException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Virtualizer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Audiofx.Virtualizer.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Media.Audiofx.Virtualizer : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Media.Audiofx.Virtualizer" Usage="new Android.Media.Audiofx.Virtualizer (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanVirtualize">
      <MemberSignature Language="C#" Value="public virtual bool CanVirtualize (Android.Media.ChannelIn inputChannelMask, Android.Media.Audiofx.VirtualizationMode virtualizationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanVirtualize(valuetype Android.Media.ChannelIn inputChannelMask, valuetype Android.Media.Audiofx.VirtualizationMode virtualizationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Audiofx.Virtualizer.CanVirtualize(Android.Media.ChannelIn,Android.Media.Audiofx.VirtualizationMode)" />
      <MemberSignature Language="F#" Value="abstract member CanVirtualize : Android.Media.ChannelIn * Android.Media.Audiofx.VirtualizationMode -&gt; bool&#xA;override this.CanVirtualize : Android.Media.ChannelIn * Android.Media.Audiofx.VirtualizationMode -&gt; bool" Usage="virtualizer.CanVirtualize (inputChannelMask, virtualizationMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canVirtualize", "(II)Z", "GetCanVirtualize_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canVirtualize", "(II)Z", "GetCanVirtualize_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputChannelMask" Type="Android.Media.ChannelIn">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="virtualizationMode" Type="Android.Media.Audiofx.VirtualizationMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="inputChannelMask">the channel mask of the content to virtualize.</param>
        <param name="virtualizationMode">the mode for which virtualization processing is to be performed,
               one of <c>#VIRTUALIZATION_MODE_BINAURAL</c>, <c>#VIRTUALIZATION_MODE_TRANSAURAL</c>.</param>
        <summary>Checks if the combination of a channel mask and virtualization mode is supported by this
            virtualizer.</summary>
        <returns>true if the combination of channel mask and virtualization mode is supported, false
               otherwise.
               &lt;br&gt;An indication that a certain channel mask is not supported doesn't necessarily mean
               you cannot play content with that channel mask, it more likely implies the content will
               be downmixed before being virtualized. For instance a virtualizer that only supports a
               mask such as <c>AudioFormat#CHANNEL_OUT_STEREO</c>
               will still be able to process content with a mask of
               <c>AudioFormat#CHANNEL_OUT_5POINT1</c>, but will downmix the content to stereo first, and
               then will virtualize, as opposed to virtualizing each channel individually.</returns>
        <remarks>
          <para>Checks if the combination of a channel mask and virtualization mode is supported by this
            virtualizer.
            Some virtualizer implementations may only support binaural processing (i.e. only support
            headphone output, see <c>#VIRTUALIZATION_MODE_BINAURAL</c>), some may support transaural
            processing (i.e. for speaker output, see <c>#VIRTUALIZATION_MODE_TRANSAURAL</c>) for the
            built-in speakers. Use this method to query the virtualizer implementation capabilities.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/audiofx/Virtualizer#canVirtualize(int,%20int)" title="Reference documentation">Java documentation for <code>android.media.audiofx.Virtualizer.canVirtualize(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
        <exception cref="T:Java.Lang.IllegalStateException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="ForceVirtualizationMode">
      <MemberSignature Language="C#" Value="public virtual bool ForceVirtualizationMode (Android.Media.Audiofx.VirtualizationMode virtualizationMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ForceVirtualizationMode(valuetype Android.Media.Audiofx.VirtualizationMode virtualizationMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Audiofx.Virtualizer.ForceVirtualizationMode(Android.Media.Audiofx.VirtualizationMode)" />
      <MemberSignature Language="F#" Value="abstract member ForceVirtualizationMode : Android.Media.Audiofx.VirtualizationMode -&gt; bool&#xA;override this.ForceVirtualizationMode : Android.Media.Audiofx.VirtualizationMode -&gt; bool" Usage="virtualizer.ForceVirtualizationMode virtualizationMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("forceVirtualizationMode", "(I)Z", "GetForceVirtualizationMode_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("forceVirtualizationMode", "(I)Z", "GetForceVirtualizationMode_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualizationMode" Type="Android.Media.Audiofx.VirtualizationMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="virtualizationMode">one of <c>#VIRTUALIZATION_MODE_BINAURAL</c>,
                <c>#VIRTUALIZATION_MODE_TRANSAURAL</c> to force a particular processing mode, or
                <c>#VIRTUALIZATION_MODE_AUTO</c> to stop forcing a mode.</param>
        <summary>Forces the virtualizer effect to use the given processing mode.</summary>
        <returns>true if the processing mode is supported, and it is successfully set, or
                forcing was successfully disabled, false otherwise.</returns>
        <remarks>
          <para>Forces the virtualizer effect to use the given processing mode.
            The effect must be enabled for the forced mode to be applied.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/audiofx/Virtualizer#forceVirtualizationMode(int)" title="Reference documentation">Java documentation for <code>android.media.audiofx.Virtualizer.forceVirtualizationMode(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
        <exception cref="T:Java.Lang.IllegalStateException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="GetSpeakerAngles">
      <MemberSignature Language="C#" Value="public virtual bool GetSpeakerAngles (Android.Media.ChannelIn inputChannelMask, Android.Media.Audiofx.VirtualizationMode virtualizationMode, int[]? angles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetSpeakerAngles(valuetype Android.Media.ChannelIn inputChannelMask, valuetype Android.Media.Audiofx.VirtualizationMode virtualizationMode, int32[] angles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Audiofx.Virtualizer.GetSpeakerAngles(Android.Media.ChannelIn,Android.Media.Audiofx.VirtualizationMode,System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member GetSpeakerAngles : Android.Media.ChannelIn * Android.Media.Audiofx.VirtualizationMode * int[] -&gt; bool&#xA;override this.GetSpeakerAngles : Android.Media.ChannelIn * Android.Media.Audiofx.VirtualizationMode * int[] -&gt; bool" Usage="virtualizer.GetSpeakerAngles (inputChannelMask, virtualizationMode, angles)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSpeakerAngles", "(II[I)Z", "GetGetSpeakerAngles_IIarrayIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSpeakerAngles", "(II[I)Z", "GetGetSpeakerAngles_IIarrayIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputChannelMask" Type="Android.Media.ChannelIn">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="virtualizationMode" Type="Android.Media.Audiofx.VirtualizationMode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="angles" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="inputChannelMask">the channel mask of the content to virtualize.</param>
        <param name="virtualizationMode">the mode for which virtualization processing is to be performed,
               one of <c>#VIRTUALIZATION_MODE_BINAURAL</c>, <c>#VIRTUALIZATION_MODE_TRANSAURAL</c>.</param>
        <param name="angles">a non-null array whose length is 3 times the number of channels in the channel
               mask.
               If the method indicates the configuration is supported, the array will contain upon return
               triplets of values: for each channel <c>i</c> among the channels of the mask:
               &lt;ul&gt;
                 &lt;li&gt;the element at index <c>3*i</c> in the array contains the speaker
                     identification (e.g. <c>AudioFormat#CHANNEL_OUT_FRONT_LEFT</c>),&lt;/li&gt;
                 &lt;li&gt;the element at index <c>3*i+1</c> contains its corresponding azimuth angle
                     expressed in degrees, where 0 is the direction the listener faces, 180 is behind
                     the listener, and -90 is to her/his left,&lt;/li&gt;
                 &lt;li&gt;the element at index <c>3*i+2</c> contains its corresponding elevation angle
                     where +90 is directly above the listener, 0 is the horizontal plane, and -90 is
                     directly below the listener.&lt;/li&gt;</param>
        <summary>Queries the virtual speaker angles (azimuth and elevation) for a combination of a channel
            mask and virtualization mode.</summary>
        <returns>true if the combination of channel mask and virtualization mode is supported, false
               otherwise.</returns>
        <remarks>
          <para>Queries the virtual speaker angles (azimuth and elevation) for a combination of a channel
            mask and virtualization mode.
            If the virtualization configuration (mask and mode) is supported (see
            <c>#canVirtualize(int, int)</c>, the array angles will contain upon return the
            definition of each virtual speaker and its azimuth and elevation angles relative to the
            listener.
            &lt;br&gt;Note that in some virtualizer implementations, the angles may be strength-dependent.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/audiofx/Virtualizer#getSpeakerAngles(int,%20int,%20int[])" title="Reference documentation">Java documentation for <code>android.media.audiofx.Virtualizer.getSpeakerAngles(int, int, int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
        <exception cref="T:Java.Lang.IllegalStateException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Audiofx.Virtualizer.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Media.Audiofx.Virtualizer.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.Media.Audiofx.Virtualizer.ParameterChangeEventArgs&gt; Parameter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.Media.Audiofx.Virtualizer/ParameterChangeEventArgs&gt; Parameter" />
      <MemberSignature Language="DocId" Value="E:Android.Media.Audiofx.Virtualizer.Parameter" />
      <MemberSignature Language="F#" Value="member this.Parameter : EventHandler&lt;Android.Media.Audiofx.Virtualizer.ParameterChangeEventArgs&gt; " Usage="member this.Parameter : System.EventHandler&lt;Android.Media.Audiofx.Virtualizer.ParameterChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.Media.Audiofx.Virtualizer+ParameterChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParamStrength">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VirtualizerParam ParamStrength = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VirtualizerParam ParamStrength = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.Audiofx.Virtualizer.ParamStrength" />
      <MemberSignature Language="F#" Value="val mutable ParamStrength : Android.Media.Audiofx.VirtualizerParam" Usage="Android.Media.Audiofx.Virtualizer.ParamStrength" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PARAM_STRENGTH")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PARAM_STRENGTH")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VirtualizerParam enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VirtualizerParam enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VirtualizerParam</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Virtualizer effect strength.</summary>
        <remarks>
          <para>Virtualizer effect strength. Parameter ID for
            <c>android.media.audiofx.Virtualizer.OnParameterChangeListener</c></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/audiofx/Virtualizer#PARAM_STRENGTH" title="Reference documentation">Java documentation for <code>android.media.audiofx.Virtualizer.PARAM_STRENGTH</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ParamStrengthSupported">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VirtualizerParam ParamStrengthSupported = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VirtualizerParam ParamStrengthSupported = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Media.Audiofx.Virtualizer.ParamStrengthSupported" />
      <MemberSignature Language="F#" Value="val mutable ParamStrengthSupported : Android.Media.Audiofx.VirtualizerParam" Usage="Android.Media.Audiofx.Virtualizer.ParamStrengthSupported" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("PARAM_STRENGTH_SUPPORTED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("PARAM_STRENGTH_SUPPORTED")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VirtualizerParam enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VirtualizerParam enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VirtualizerParam</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Is strength parameter supported by virtualizer engine.</summary>
        <remarks>
          <para>Is strength parameter supported by virtualizer engine. Parameter ID for getParameter().</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/audiofx/Virtualizer#PARAM_STRENGTH_SUPPORTED" title="Reference documentation">Java documentation for <code>android.media.audiofx.Virtualizer.PARAM_STRENGTH_SUPPORTED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Audiofx.Virtualizer.Settings? Properties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Media.Audiofx.Virtualizer/Settings Properties" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Audiofx.Virtualizer.Properties" />
      <MemberSignature Language="F#" Value="member this.Properties : Android.Media.Audiofx.Virtualizer.Settings with get, set" Usage="Android.Media.Audiofx.Virtualizer.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getProperties", "()Landroid/media/audiofx/Virtualizer$Settings;", "GetGetPropertiesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getProperties", "()Landroid/media/audiofx/Virtualizer$Settings;", "GetGetPropertiesHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: Android.Runtime.Register("setProperties", "(Landroid/media/audiofx/Virtualizer$Settings;)V", "GetSetProperties_Landroid_media_audiofx_Virtualizer_Settings_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;set: Android.Runtime.Register("setProperties", "(Landroid/media/audiofx/Virtualizer$Settings;)V", "GetSetProperties_Landroid_media_audiofx_Virtualizer_Settings_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.Virtualizer+Settings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the virtualizer properties.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
        <exception cref="T:Java.Lang.IllegalStateException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="RoundedStrength">
      <MemberSignature Language="C#" Value="public virtual short RoundedStrength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 RoundedStrength" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Audiofx.Virtualizer.RoundedStrength" />
      <MemberSignature Language="F#" Value="member this.RoundedStrength : int16" Usage="Android.Media.Audiofx.Virtualizer.RoundedStrength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getRoundedStrength", "()S", "GetGetRoundedStrengthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getRoundedStrength", "()S", "GetGetRoundedStrengthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current strength of the effect.</summary>
        <value>the strength of the effect. The valid range for strength is [0, 1000], where 0 per
            mille designates the mildest effect and 1000 per mille the strongest</value>
        <remarks>
          <para>Gets the current strength of the effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/audiofx/Virtualizer#getRoundedStrength()" title="Reference documentation">Java documentation for <code>android.media.audiofx.Virtualizer.getRoundedStrength()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
        <exception cref="T:Java.Lang.IllegalStateException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="SetParameterListener">
      <MemberSignature Language="C#" Value="public virtual void SetParameterListener (Android.Media.Audiofx.Virtualizer.IOnParameterChangeListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetParameterListener(class Android.Media.Audiofx.Virtualizer/IOnParameterChangeListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Audiofx.Virtualizer.SetParameterListener(Android.Media.Audiofx.Virtualizer.IOnParameterChangeListener)" />
      <MemberSignature Language="F#" Value="abstract member SetParameterListener : Android.Media.Audiofx.Virtualizer.IOnParameterChangeListener -&gt; unit&#xA;override this.SetParameterListener : Android.Media.Audiofx.Virtualizer.IOnParameterChangeListener -&gt; unit" Usage="virtualizer.SetParameterListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setParameterListener", "(Landroid/media/audiofx/Virtualizer$OnParameterChangeListener;)V", "GetSetParameterListener_Landroid_media_audiofx_Virtualizer_OnParameterChangeListener_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setParameterListener", "(Landroid/media/audiofx/Virtualizer$OnParameterChangeListener;)V", "GetSetParameterListener_Landroid_media_audiofx_Virtualizer_OnParameterChangeListener_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.Audiofx.Virtualizer+IOnParameterChangeListener" />
      </Parameters>
      <Docs>
        <param name="listener">OnParameterChangeListener interface registered</param>
        <summary>Registers an OnParameterChangeListener interface.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/audiofx/Virtualizer#setParameterListener(android.media.audiofx.OnParameterChangeListener)" title="Reference documentation">Java documentation for <code>android.media.audiofx.Virtualizer.setParameterListener(android.media.audiofx.OnParameterChangeListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetStrength">
      <MemberSignature Language="C#" Value="public virtual void SetStrength (short strength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStrength(int16 strength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Audiofx.Virtualizer.SetStrength(System.Int16)" />
      <MemberSignature Language="F#" Value="abstract member SetStrength : int16 -&gt; unit&#xA;override this.SetStrength : int16 -&gt; unit" Usage="virtualizer.SetStrength strength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStrength", "(S)V", "GetSetStrength_SHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStrength", "(S)V", "GetSetStrength_SHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strength" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="strength">strength of the effect. The valid range for strength strength is [0, 1000],
            where 0 per mille designates the mildest effect and 1000 per mille designates the strongest.</param>
        <summary>Sets the strength of the virtualizer effect.</summary>
        <remarks>
          <para>Sets the strength of the virtualizer effect. If the implementation does not support per mille
            accuracy for setting the strength, it is allowed to round the given strength to the nearest
            supported value. You can use the <c>#getRoundedStrength()</c> method to query the
            (possibly rounded) value that was actually set.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/audiofx/Virtualizer#setStrength(short)" title="Reference documentation">Java documentation for <code>android.media.audiofx.Virtualizer.setStrength(short)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
        <exception cref="T:Java.Lang.IllegalStateException" />
        <exception cref="T:Java.Lang.IllegalArgumentException" />
      </Docs>
    </Member>
    <Member MemberName="StrengthSupported">
      <MemberSignature Language="C#" Value="public virtual bool StrengthSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StrengthSupported" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Audiofx.Virtualizer.StrengthSupported" />
      <MemberSignature Language="F#" Value="member this.StrengthSupported : bool" Usage="Android.Media.Audiofx.Virtualizer.StrengthSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStrengthSupported", "()Z", "GetGetStrengthSupportedHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStrengthSupported", "()Z", "GetGetStrengthSupportedHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indicates whether setting strength is supported.</summary>
        <value>true is strength parameter is supported, false otherwise</value>
        <remarks>
          <para>Indicates whether setting strength is supported. If this method returns false, only one
            strength is supported and the setStrength() method always rounds to that value.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/audiofx/Virtualizer#getStrengthSupported()" title="Reference documentation">Java documentation for <code>android.media.audiofx.Virtualizer.getStrengthSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Audiofx.Virtualizer.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Media.Audiofx.Virtualizer.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Audiofx.Virtualizer.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Media.Audiofx.Virtualizer.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualizationMode">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Audiofx.VirtualizationMode VirtualizationMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Audiofx.VirtualizationMode VirtualizationMode" />
      <MemberSignature Language="DocId" Value="P:Android.Media.Audiofx.Virtualizer.VirtualizationMode" />
      <MemberSignature Language="F#" Value="member this.VirtualizationMode : Android.Media.Audiofx.VirtualizationMode" Usage="Android.Media.Audiofx.Virtualizer.VirtualizationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getVirtualizationMode", "()I", "GetGetVirtualizationModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getVirtualizationMode", "()I", "GetGetVirtualizationModeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VirtualizationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the virtualization mode being used, if any.</summary>
        <value>the virtualization mode being used.
                If virtualization is not active, the virtualization mode will be
                <c>#VIRTUALIZATION_MODE_OFF</c>. Otherwise the value will be
                <c>#VIRTUALIZATION_MODE_BINAURAL</c> or <c>#VIRTUALIZATION_MODE_TRANSAURAL</c>.
                Virtualization may not be active either because the effect is not enabled or
                because the current output device is not compatible with this virtualization
                implementation.</value>
        <remarks>
          <para>Return the virtualization mode being used, if any.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/audiofx/Virtualizer#getVirtualizationMode()" title="Reference documentation">Java documentation for <code>android.media.audiofx.Virtualizer.getVirtualizationMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
      <since version="Added in API level 21" />
    </Member>
  </Members>
</Type>
