<Type Name="Visualizer" FullName="Android.Media.Audiofx.Visualizer">
  <TypeSignature Language="C#" Value="public class Visualizer : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Visualizer extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/media/audiofx/Visualizer", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="9">
    <summary>The Visualizer class enables application to retrieve part of the currently playing audio for
 visualization purpose.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The Visualizer class enables application to retrieve part of the currently playing audio for
 visualization purpose. It is not an audio recording interface and only returns partial and low
 quality audio content. However, to protect privacy of certain audio data (e.g voice mail) the use
 of the visualizer requires the permission android.permission.RECORD_AUDIO.
 </para>
      <para tool="javadoc-to-mdoc">The audio session ID passed to the constructor indicates which audio content should be
 visualized:<format type="text/html"><br /></format><list type="bullet"><item><term>If the session is 0, the audio output mix is visualized</term></item><item><term>If the session is not 0, the audio from a particular <c><see cref="T:Android.Media.MediaPlayer" /></c> or
   <c><see cref="T:Android.Media.AudioTrack" /></c>
   using this audio session is visualized </term></item></list></para>
      <para tool="javadoc-to-mdoc">Two types of representation of audio content can be captured: <format type="text/html"><br /></format><list type="bullet"><item><term>Waveform data: consecutive 8-bit (unsigned) mono samples by using the
   <c><see cref="M:Android.Media.Audiofx.Visualizer.GetWaveForm(System.Byte[])" /></c> method</term></item><item><term>Frequency data: 8-bit magnitude FFT by using the <c><see cref="M:Android.Media.Audiofx.Visualizer.GetFft(System.Byte[])" /></c> method</term></item></list></para>
      <para tool="javadoc-to-mdoc">The length of the capture can be retrieved or specified by calling respectively
 <c><see cref="P:Android.Media.Audiofx.Visualizer.CaptureSize" /></c> and <c><see cref="M:Android.Media.Audiofx.Visualizer.SetCaptureSize(System.Int32)" /></c> methods. The capture size must be a
 power of 2 in the range returned by <c><see cref="M:Android.Media.Audiofx.Visualizer.GetCaptureSizeRange" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">In addition to the polling capture mode described above with <c><see cref="M:Android.Media.Audiofx.Visualizer.GetWaveForm(System.Byte[])" /></c> and
  <c><see cref="M:Android.Media.Audiofx.Visualizer.GetFft(System.Byte[])" /></c> methods, a callback mode is also available by installing a listener by
  use of the <c><see cref="M:Android.Media.Audiofx.Visualizer.SetDataCaptureListener(.IOnDataCaptureListener,System.Int32,System.Int32,System.Int32)" /></c> method.
  The rate at which the listener capture method is called as well as the type of data returned is
  specified.
 </para>
      <para tool="javadoc-to-mdoc">Before capturing data, the Visualizer must be enabled by calling the
 <c><see cref="M:Android.Media.Audiofx.Visualizer.SetEnabled(System.Boolean)" /></c> method.
 When data capture is not needed any more, the Visualizer should be disabled.
 </para>
      <para tool="javadoc-to-mdoc">It is good practice to call the <c><see cref="M:Android.Media.Audiofx.Visualizer.Release" /></c> method when the Visualizer is not used
 anymore to free up native resources associated to the Visualizer instance.
 </para>
      <para tool="javadoc-to-mdoc">Creating a Visualizer on the output mix (audio session 0) requires permission
 <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#MODIFY_AUDIO_SETTINGS" /></c></para>
      <para tool="javadoc-to-mdoc">The Visualizer class can also be used to perform measurements on the audio being played back.
 The measurements to perform are defined by setting a mask of the requested measurement modes with
 <c><see cref="M:Android.Media.Audiofx.Visualizer.SetMeasurementMode(Android.Media.Audiofx.VisualizerMeasurementMode)" /></c>. Supported values are <c><see cref="F:Android.Media.Audiofx.Visualizer.MeasurementModeNone" /></c> to cancel
 any measurement, and <c><see cref="F:Android.Media.Audiofx.Visualizer.MeasurementModePeakRms" /></c> for peak and RMS monitoring.
 Measurements can be retrieved through <c><see cref="M:Android.Media.Audiofx.Visualizer.GetMeasurementPeakRms(.MeasurementPeakRms)" /></c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 9" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Visualizer (int audioSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 audioSession) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="audioSession" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="audioSession">To be added.</param>
        <summary>Class constructor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Class constructor.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#Visualizer(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
        <exception cref="T:Java.Lang.RuntimeException" />
        <exception cref="T:Java.Lang.UnsupportedOperationException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Visualizer (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlreadyExists">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerStatus AlreadyExists = -2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerStatus AlreadyExists = (-2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ALREADY_EXISTS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerStatus enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-2</MemberValue>
      <Docs>
        <summary>Internal operation status.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Internal operation status. Not returned by any method.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#ALREADY_EXISTS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="CaptureSize">
      <MemberSignature Language="C#" Value="public virtual int CaptureSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CaptureSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getCaptureSize", "()I", "GetGetCaptureSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns current capture size.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns current capture size.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#getCaptureSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEnabled", "()Z", "GetGetEnabledHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get current activation state of the visualizer.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get current activation state of the visualizer.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#getEnabled()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerStatus Error = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerStatus Error = (-1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ERROR")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerStatus enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>Unspecified error.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Unspecified error.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#ERROR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ErrorBadValue">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerStatus ErrorBadValue = -4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerStatus ErrorBadValue = (-4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ERROR_BAD_VALUE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerStatus enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-4</MemberValue>
      <Docs>
        <summary>Operation failed due to bad parameter value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Operation failed due to bad parameter value.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#ERROR_BAD_VALUE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ErrorDeadObject">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerStatus ErrorDeadObject = -7;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerStatus ErrorDeadObject = (-7)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ERROR_DEAD_OBJECT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerStatus enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-7</MemberValue>
      <Docs>
        <summary>Operation failed due to dead remote object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Operation failed due to dead remote object.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#ERROR_DEAD_OBJECT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ErrorInvalidOperation">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerStatus ErrorInvalidOperation = -5;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerStatus ErrorInvalidOperation = (-5)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ERROR_INVALID_OPERATION")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerStatus enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-5</MemberValue>
      <Docs>
        <summary>Operation failed because it was requested in wrong state.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Operation failed because it was requested in wrong state.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#ERROR_INVALID_OPERATION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ErrorNoInit">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerStatus ErrorNoInit = -3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerStatus ErrorNoInit = (-3)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ERROR_NO_INIT")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerStatus enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-3</MemberValue>
      <Docs>
        <summary>Operation failed due to bad object initialization.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Operation failed due to bad object initialization.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#ERROR_NO_INIT" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ErrorNoMemory">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerStatus ErrorNoMemory = -6;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerStatus ErrorNoMemory = (-6)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ERROR_NO_MEMORY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerStatus enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerStatus</ReturnType>
      </ReturnValue>
      <MemberValue>-6</MemberValue>
      <Docs>
        <summary>Operation failed due to lack of memory.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Operation failed due to lack of memory.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#ERROR_NO_MEMORY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetCaptureSizeRange">
      <MemberSignature Language="C#" Value="public static int[] GetCaptureSizeRange ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32[] GetCaptureSizeRange() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getCaptureSizeRange", "()[I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the capture size range.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the capture size range.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#getCaptureSizeRange()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetFft">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Audiofx.VisualizerStatus GetFft (byte[] fft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.Audiofx.VisualizerStatus GetFft(unsigned int8[] fft) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFft", "([B)I", "GetGetFft_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fft" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="fft">array of bytes where the FFT should be returned</param>
        <summary>Returns a frequency capture of currently playing audio content.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a frequency capture of currently playing audio content.
 </para>
          <para tool="javadoc-to-mdoc">This method must be called when the Visualizer is enabled.
 </para>
          <para tool="javadoc-to-mdoc">The capture is an 8-bit magnitude FFT, the frequency range covered being 0 (DC) to half of
 the sampling rate returned by <c><see cref="P:Android.Media.Audiofx.Visualizer.SamplingRate" /></c>. The capture returns the real and
 imaginary parts of a number of frequency points equal to half of the capture size plus one.
 </para>
          <para tool="javadoc-to-mdoc">Note: only the real part is returned for the first point (DC) and the last point
 (sampling frequency / 2).
 </para>
          <para tool="javadoc-to-mdoc">The layout in the returned byte array is as follows:
 <list type="bullet"><item><term> n is the capture size returned by getCaptureSize()</term></item><item><term> Rfk, Ifk are respectively  the real and imaginary parts of the kth frequency
   component</term></item><item><term> If Fs is the sampling frequency retuned by getSamplingRate() the kth frequency is:
   (k*Fs)/(n/2) </term></item></list><format type="text/html"><table border="0" cellspacing="0" cellpadding="0"><tr><td>Index </td><td>0 </td><td>1 </td><td>2 </td><td>3 </td><td>4 </td><td>5 </td><td>... </td><td>n - 2 </td><td>n - 1 </td></tr><tr><td>Data </td><td>Rf0 </td><td>Rf(n/2) </td><td>Rf1 </td><td>If1 </td><td>Rf2 </td><td>If2 </td><td>... </td><td>Rf(n-1)/2 </td><td>If(n-1)/2 </td></tr></table></format></para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#getFft(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="GetMeasurementPeakRms">
      <MemberSignature Language="C#" Value="public virtual int GetMeasurementPeakRms (Android.Media.Audiofx.Visualizer.MeasurementPeakRms measurement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetMeasurementPeakRms(class Android.Media.Audiofx.Visualizer/MeasurementPeakRms measurement) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMeasurementPeakRms", "(Landroid/media/audiofx/Visualizer$MeasurementPeakRms;)I", "GetGetMeasurementPeakRms_Landroid_media_audiofx_Visualizer_MeasurementPeakRms_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="measurement" Type="Android.Media.Audiofx.Visualizer+MeasurementPeakRms" />
      </Parameters>
      <Docs>
        <param name="measurement">a non-null <c><see cref="!:NoType:android/media/audiofx/Visualizer$MeasurementPeakRms;Href=../../../../reference/android/media/audiofx/Visualizer.MeasurementPeakRms.html" /></c> instance to store
    the measurement values.</param>
        <summary>Retrieves the latest peak and RMS measurement.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieves the latest peak and RMS measurement.
 Sets the peak and RMS fields of the supplied <c><see cref="!:NoType:android/media/audiofx/Visualizer$MeasurementPeakRms;Href=../../../../reference/android/media/audiofx/Visualizer.MeasurementPeakRms.html" /></c> to the
 latest measured values.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#getMeasurementPeakRms(android.media.audiofx.Visualizer.MeasurementPeakRms)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWaveForm">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Audiofx.VisualizerStatus GetWaveForm (byte[] waveform);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.Audiofx.VisualizerStatus GetWaveForm(unsigned int8[] waveform) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getWaveForm", "([B)I", "GetGetWaveForm_arrayBHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="waveform" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="waveform">array of bytes where the waveform should be returned</param>
        <summary>Returns a waveform capture of currently playing audio content.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a waveform capture of currently playing audio content. The capture consists in
 a number of consecutive 8-bit (unsigned) mono PCM samples equal to the capture size returned
 by <c><see cref="P:Android.Media.Audiofx.Visualizer.CaptureSize" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">This method must be called when the Visualizer is enabled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#getWaveForm(byte[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="MaxCaptureRate">
      <MemberSignature Language="C#" Value="public static int MaxCaptureRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 MaxCaptureRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMaxCaptureRate", "()I", "GetGetMaxCaptureRateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the maximum capture rate for the callback capture method.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the maximum capture rate for the callback capture method. This is the maximum value
 for the rate parameter of the
 <c><see cref="M:Android.Media.Audiofx.Visualizer.SetDataCaptureListener(.IOnDataCaptureListener,System.Int32,System.Int32,System.Int32)" /></c> method.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#getMaxCaptureRate()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="MeasurementMode">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Audiofx.VisualizerMeasurementMode MeasurementMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Audiofx.VisualizerMeasurementMode MeasurementMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getMeasurementMode", "()I", "GetGetMeasurementModeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerMeasurementMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current measurement modes performed by this audio effect</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current measurement modes performed by this audio effect</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#getMeasurementMode()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="MeasurementModeNone">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerMeasurementMode MeasurementModeNone = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerMeasurementMode MeasurementModeNone = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEASUREMENT_MODE_NONE")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerMeasurementMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerMeasurementMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Defines a measurement mode in which no measurements are performed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Defines a measurement mode in which no measurements are performed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#MEASUREMENT_MODE_NONE" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasurementModePeakRms">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerMeasurementMode MeasurementModePeakRms = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerMeasurementMode MeasurementModePeakRms = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEASUREMENT_MODE_PEAK_RMS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerMeasurementMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerMeasurementMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Defines a measurement mode which computes the peak and RMS value in mB, where 0mB is the
 maximum sample value, and -9600mB is the minimum value.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Defines a measurement mode which computes the peak and RMS value in mB, where 0mB is the
 maximum sample value, and -9600mB is the minimum value.
 Values for peak and RMS can be retrieved with
 <c><see cref="M:Android.Media.Audiofx.Visualizer.GetMeasurementPeakRms(.MeasurementPeakRms)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#MEASUREMENT_MODE_PEAK_RMS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("release", "()V", "GetReleaseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the native Visualizer resources.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Releases the native Visualizer resources. It is a good practice to release the
 visualization engine when not in use.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#release()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SamplingRate">
      <MemberSignature Language="C#" Value="public virtual int SamplingRate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SamplingRate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSamplingRate", "()I", "GetGetSamplingRateHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the sampling rate of the captured audio.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the sampling rate of the captured audio.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#getSamplingRate()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="ScalingMode">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Audiofx.VisualizerScalingMode ScalingMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Media.Audiofx.VisualizerScalingMode ScalingMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getScalingMode", "()I", "GetGetScalingModeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerScalingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current scaling mode on the captured visualization data.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current scaling mode on the captured visualization data.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#getScalingMode()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="ScalingModeAsPlayed">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerScalingMode ScalingModeAsPlayed = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerScalingMode ScalingModeAsPlayed = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCALING_MODE_AS_PLAYED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerScalingMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerScalingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Defines a capture mode where the playback volume will affect (scale) the range of the
 captured data.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Defines a capture mode where the playback volume will affect (scale) the range of the
 captured data. A low playback volume will lead to low sample and fft values, and vice-versa.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#SCALING_MODE_AS_PLAYED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="ScalingModeNormalized">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerScalingMode ScalingModeNormalized = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerScalingMode ScalingModeNormalized = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SCALING_MODE_NORMALIZED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerScalingMode enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerScalingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Defines a capture mode where amplification is applied based on the content of the captured
 data.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Defines a capture mode where amplification is applied based on the content of the captured
 data. This is the default Visualizer mode, and is suitable for music visualization.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#SCALING_MODE_NORMALIZED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 16" />
      </Docs>
    </Member>
    <Member MemberName="SetCaptureSize">
      <MemberSignature Language="C#" Value="public virtual int SetCaptureSize (int size);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SetCaptureSize(int32 size) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setCaptureSize", "(I)I", "GetSetCaptureSize_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="size" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="size">requested capture size</param>
        <summary tool="true">Sets the capture size, i.e. the number of bytes returned by <c><see cref="M:Android.Media.Audiofx.Visualizer.GetWaveForm(System.Byte[])" /></c> and
 <c><see cref="M:Android.Media.Audiofx.Visualizer.GetFft(System.Byte[])" /></c> methods.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the capture size, i.e. the number of bytes returned by <c><see cref="M:Android.Media.Audiofx.Visualizer.GetWaveForm(System.Byte[])" /></c> and
 <c><see cref="M:Android.Media.Audiofx.Visualizer.GetFft(System.Byte[])" /></c> methods. The capture size must be a power of 2 in the range returned
 by <c><see cref="M:Android.Media.Audiofx.Visualizer.GetCaptureSizeRange" /></c>.
 This method must not be called when the Visualizer is enabled.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#setCaptureSize(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="SetDataCaptureListener">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Audiofx.VisualizerStatus SetDataCaptureListener (Android.Media.Audiofx.Visualizer.IOnDataCaptureListener listener, int rate, bool waveform, bool fft);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.Audiofx.VisualizerStatus SetDataCaptureListener(class Android.Media.Audiofx.Visualizer/IOnDataCaptureListener listener, int32 rate, bool waveform, bool fft) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setDataCaptureListener", "(Landroid/media/audiofx/Visualizer$OnDataCaptureListener;IZZ)I", "GetSetDataCaptureListener_Landroid_media_audiofx_Visualizer_OnDataCaptureListener_IZZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.Media.Audiofx.Visualizer+IOnDataCaptureListener" />
        <Parameter Name="rate" Type="System.Int32" />
        <Parameter Name="waveform" Type="System.Boolean" />
        <Parameter Name="fft" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="listener">OnDataCaptureListener registered</param>
        <param name="rate">rate in milliHertz at which the capture should be updated</param>
        <param name="waveform">true if a waveform capture is requested: the onWaveFormDataCapture()
 method will be called on the OnDataCaptureListener interface.</param>
        <param name="fft">true if a frequency capture is requested: the onFftDataCapture() method will be
 called on the OnDataCaptureListener interface.</param>
        <summary>Registers an OnDataCaptureListener interface and specifies the rate at which the capture
 should be updated as well as the type of capture requested.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Registers an OnDataCaptureListener interface and specifies the rate at which the capture
 should be updated as well as the type of capture requested.
 </para>
          <para tool="javadoc-to-mdoc">Call this method with a null listener to stop receiving the capture updates.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#setDataCaptureListener(android.media.audiofx.Visualizer.OnDataCaptureListener, int, boolean, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="SetEnabled">
      <MemberSignature Language="C#" Value="public virtual Android.Media.Audiofx.VisualizerStatus SetEnabled (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Media.Audiofx.VisualizerStatus SetEnabled(bool enabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setEnabled", "(Z)I", "GetSetEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerStatus</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">requested enable state</param>
        <summary>Enable or disable the visualization engine.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Enable or disable the visualization engine.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#setEnabled(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="SetMeasurementMode">
      <MemberSignature Language="C#" Value="public virtual int SetMeasurementMode (Android.Media.Audiofx.VisualizerMeasurementMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SetMeasurementMode(valuetype Android.Media.Audiofx.VisualizerMeasurementMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setMeasurementMode", "(I)I", "GetSetMeasurementMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Media.Audiofx.VisualizerMeasurementMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">a mask of the measurements to perform. The valid values are
     <c><see cref="F:Android.Media.Audiofx.Visualizer.MeasurementModeNone" /></c> (to cancel any measurement)
     or <c><see cref="F:Android.Media.Audiofx.Visualizer.MeasurementModePeakRms" /></c>.</param>
        <summary>Sets the combination of measurement modes to be performed by this audio effect.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the combination of measurement modes to be performed by this audio effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#setMeasurementMode(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="SetScalingMode">
      <MemberSignature Language="C#" Value="public virtual int SetScalingMode (Android.Media.Audiofx.VisualizerScalingMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SetScalingMode(valuetype Android.Media.Audiofx.VisualizerScalingMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setScalingMode", "(I)I", "GetSetScalingMode_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="Android.Media.Audiofx.VisualizerScalingMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="mode">see <c><see cref="F:Android.Media.Audiofx.Visualizer.ScalingModeNormalized" /></c>
     and <c><see cref="F:Android.Media.Audiofx.Visualizer.ScalingModeAsPlayed" /></c></param>
        <summary>Set the type of scaling applied on the captured visualization data.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the type of scaling applied on the captured visualization data.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#setScalingMode(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalStateException" />
      </Docs>
    </Member>
    <Member MemberName="StateEnabled">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerState StateEnabled = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerState StateEnabled = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATE_ENABLED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerState</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>State of a Visualizer object that is active.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">State of a Visualizer object that is active.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#STATE_ENABLED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="StateInitialized">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerState StateInitialized = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerState StateInitialized = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATE_INITIALIZED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerState</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>State of a Visualizer object that is ready to be used.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">State of a Visualizer object that is ready to be used.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#STATE_INITIALIZED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="StateUninitialized">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerState StateUninitialized = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerState StateUninitialized = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STATE_UNINITIALIZED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerState enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerState</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>State of a Visualizer object that was not successfully initialized upon creation
</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">State of a Visualizer object that was not successfully initialized upon creation
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#STATE_UNINITIALIZED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="Success">
      <MemberSignature Language="C#" Value="public const Android.Media.Audiofx.VisualizerStatus Success = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Media.Audiofx.VisualizerStatus Success = (0)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SUCCESS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.Media.Audiofx.VisualizerStatus enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Media.Audiofx.VisualizerStatus</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Successful operation.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Successful operation.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/media/audiofx/Visualizer.html#SUCCESS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
