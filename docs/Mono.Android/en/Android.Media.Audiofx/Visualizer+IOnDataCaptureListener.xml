<Type Name="Visualizer+IOnDataCaptureListener" FullName="Android.Media.Audiofx.Visualizer+IOnDataCaptureListener">
  <TypeSignature Language="C#" Value="public interface Visualizer.IOnDataCaptureListener : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class nested public interface auto ansi abstract beforefieldinit Visualizer/IOnDataCaptureListener implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Media.Audiofx.Visualizer.IOnDataCaptureListener" />
  <TypeSignature Language="F#" Value="type Visualizer.IOnDataCaptureListener = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/media/audiofx/Visualizer$OnDataCaptureListener", "", "Android.Media.Audiofx.Visualizer/IOnDataCaptureListenerInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/media/audiofx/Visualizer$OnDataCaptureListener", "", "Android.Media.Audiofx.Visualizer/IOnDataCaptureListenerInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The OnDataCaptureListener interface defines methods called by the Visualizer to periodically
            update the audio visualization capture.</summary>
    <remarks>
      <para>The OnDataCaptureListener interface defines methods called by the Visualizer to periodically
            update the audio visualization capture.
            The client application can implement this interface and register the listener with the
            <c>#setDataCaptureListener(OnDataCaptureListener, int, boolean, boolean)</c> method.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/media/audiofx/Visualizer.OnDataCaptureListener" title="Reference documentation">Java documentation for <code>android.media.audiofx.Visualizer.OnDataCaptureListener</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 9" />
  </Docs>
  <Members>
    <Member MemberName="OnFftDataCapture">
      <MemberSignature Language="C#" Value="public void OnFftDataCapture (Android.Media.Audiofx.Visualizer? visualizer, byte[]? fft, int samplingRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnFftDataCapture(class Android.Media.Audiofx.Visualizer visualizer, unsigned int8[] fft, int32 samplingRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Audiofx.Visualizer.IOnDataCaptureListener.OnFftDataCapture(Android.Media.Audiofx.Visualizer,System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnFftDataCapture : Android.Media.Audiofx.Visualizer * byte[] * int -&gt; unit" Usage="iOnDataCaptureListener.OnFftDataCapture (visualizer, fft, samplingRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onFftDataCapture", "(Landroid/media/audiofx/Visualizer;[BI)V", "GetOnFftDataCapture_Landroid_media_audiofx_Visualizer_arrayBIHandler:Android.Media.Audiofx.Visualizer/IOnDataCaptureListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onFftDataCapture", "(Landroid/media/audiofx/Visualizer;[BI)V", "GetOnFftDataCapture_Landroid_media_audiofx_Visualizer_arrayBIHandler:Android.Media.Audiofx.Visualizer/IOnDataCaptureListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualizer" Type="Android.Media.Audiofx.Visualizer" />
        <Parameter Name="fft" Type="System.Byte[]" />
        <Parameter Name="samplingRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="visualizer">Visualizer object on which the listener is registered.</param>
        <param name="fft">array of bytes containing the frequency representation.</param>
        <param name="samplingRate">sampling rate of the visualized audio.</param>
        <summary>Method called when a new frequency capture is available.</summary>
        <remarks>
          <para>Method called when a new frequency capture is available.</para>
          <para>Data in the fft buffer is valid only within the scope of the callback.
            Applications which need access to the fft data after returning from the callback
            should make a copy of the data instead of holding a reference.</para>
          <para>For the explanation of the fft data array layout, and the example
            code for processing it, please see the documentation for <c>#getFft(byte[])</c> method.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/audiofx/Visualizer.OnDataCaptureListener#onFftDataCapture(android.media.audiofx.Visualizer,%20byte[],%20int)" title="Reference documentation">Java documentation for <code>android.media.audiofx.Visualizer.OnDataCaptureListener.onFftDataCapture(android.media.audiofx.Visualizer, byte[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnWaveFormDataCapture">
      <MemberSignature Language="C#" Value="public void OnWaveFormDataCapture (Android.Media.Audiofx.Visualizer? visualizer, byte[]? waveform, int samplingRate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWaveFormDataCapture(class Android.Media.Audiofx.Visualizer visualizer, unsigned int8[] waveform, int32 samplingRate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Media.Audiofx.Visualizer.IOnDataCaptureListener.OnWaveFormDataCapture(Android.Media.Audiofx.Visualizer,System.Byte[],System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnWaveFormDataCapture : Android.Media.Audiofx.Visualizer * byte[] * int -&gt; unit" Usage="iOnDataCaptureListener.OnWaveFormDataCapture (visualizer, waveform, samplingRate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWaveFormDataCapture", "(Landroid/media/audiofx/Visualizer;[BI)V", "GetOnWaveFormDataCapture_Landroid_media_audiofx_Visualizer_arrayBIHandler:Android.Media.Audiofx.Visualizer/IOnDataCaptureListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWaveFormDataCapture", "(Landroid/media/audiofx/Visualizer;[BI)V", "GetOnWaveFormDataCapture_Landroid_media_audiofx_Visualizer_arrayBIHandler:Android.Media.Audiofx.Visualizer/IOnDataCaptureListenerInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualizer" Type="Android.Media.Audiofx.Visualizer" />
        <Parameter Name="waveform" Type="System.Byte[]" />
        <Parameter Name="samplingRate" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="visualizer">Visualizer object on which the listener is registered.</param>
        <param name="waveform">array of bytes containing the waveform representation.</param>
        <param name="samplingRate">sampling rate of the visualized audio.</param>
        <summary>Method called when a new waveform capture is available.</summary>
        <remarks>
          <para>Method called when a new waveform capture is available.</para>
          <para>Data in the waveform buffer is valid only within the scope of the callback.
            Applications which need access to the waveform data after returning from the callback
            should make a copy of the data instead of holding a reference.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/media/audiofx/Visualizer.OnDataCaptureListener#onWaveFormDataCapture(android.media.audiofx.Visualizer,%20byte[],%20int)" title="Reference documentation">Java documentation for <code>android.media.audiofx.Visualizer.OnDataCaptureListener.onWaveFormDataCapture(android.media.audiofx.Visualizer, byte[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
  </Members>
</Type>
