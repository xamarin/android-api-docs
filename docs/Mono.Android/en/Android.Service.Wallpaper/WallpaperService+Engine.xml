<Type Name="WallpaperService+Engine" FullName="Android.Service.Wallpaper.WallpaperService+Engine">
  <TypeSignature Language="C#" Value="public class WallpaperService.Engine : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit WallpaperService/Engine extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Service.Wallpaper.WallpaperService.Engine" />
  <TypeSignature Language="VB.NET" Value="Public Class WallpaperService.Engine&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public: ref class WallpaperService::Engine : Java::Lang::Object" />
  <TypeSignature Language="F#" Value="type WallpaperService.Engine = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/service/wallpaper/WallpaperService$Engine", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/service/wallpaper/WallpaperService$Engine", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The actual implementation of a wallpaper.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 7" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Engine (Android.Service.Wallpaper.WallpaperService? __self);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Service.Wallpaper.WallpaperService __self) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.#ctor(Android.Service.Wallpaper.WallpaperService)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (__self As WallpaperService)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Engine(Android::Service::Wallpaper::WallpaperService ^ __self);" />
      <MemberSignature Language="F#" Value="new Android.Service.Wallpaper.WallpaperService.Engine : Android.Service.Wallpaper.WallpaperService -&gt; Android.Service.Wallpaper.WallpaperService.Engine" Usage="new Android.Service.Wallpaper.WallpaperService.Engine __self" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Landroid/service/wallpaper/WallpaperService;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Landroid/service/wallpaper/WallpaperService;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="__self" Type="Android.Service.Wallpaper.WallpaperService" />
      </Parameters>
      <Docs>
        <param name="__self">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Engine (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Engine(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="F#" Value="new Android.Service.Wallpaper.WallpaperService.Engine : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Service.Wallpaper.WallpaperService.Engine" Usage="new Android.Service.Wallpaper.WallpaperService.Engine (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredMinimumHeight">
      <MemberSignature Language="C#" Value="public virtual int DesiredMinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DesiredMinimumHeight" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Wallpaper.WallpaperService.Engine.DesiredMinimumHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DesiredMinimumHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DesiredMinimumHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredMinimumHeight : int" Usage="Android.Service.Wallpaper.WallpaperService.Engine.DesiredMinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDesiredMinimumHeight", "()I", "GetGetDesiredMinimumHeightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDesiredMinimumHeight", "()I", "GetGetDesiredMinimumHeightHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Convenience for <c>WallpaperManager#getDesiredMinimumHeight()
            WallpaperManager.getDesiredMinimumHeight()</c>, returning the height
            that the system would like this wallpaper to run in.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#getDesiredMinimumHeight()" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.getDesiredMinimumHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="DesiredMinimumWidth">
      <MemberSignature Language="C#" Value="public virtual int DesiredMinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DesiredMinimumWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Wallpaper.WallpaperService.Engine.DesiredMinimumWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DesiredMinimumWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DesiredMinimumWidth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DesiredMinimumWidth : int" Usage="Android.Service.Wallpaper.WallpaperService.Engine.DesiredMinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDesiredMinimumWidth", "()I", "GetGetDesiredMinimumWidthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDesiredMinimumWidth", "()I", "GetGetDesiredMinimumWidthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Convenience for <c>WallpaperManager#getDesiredMinimumWidth()
            WallpaperManager.getDesiredMinimumWidth()</c>, returning the width
            that the system would like this wallpaper to run in.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#getDesiredMinimumWidth()" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.getDesiredMinimumWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="DisplayContext">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Context? DisplayContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.Context DisplayContext" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Wallpaper.WallpaperService.Engine.DisplayContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayContext As Context" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Content::Context ^ DisplayContext { Android::Content::Context ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayContext : Android.Content.Context" Usage="Android.Service.Wallpaper.WallpaperService.Engine.DisplayContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDisplayContext", "()Landroid/content/Context;", "GetGetDisplayContextHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDisplayContext", "()Landroid/content/Context;", "GetGetDisplayContextHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Context</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The <c>Context</c> with resources that match the current display the wallpaper is on.</summary>
        <value>A <c>Context</c> for current display.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#getDisplayContext()" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.getDisplayContext()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dump">
      <MemberSignature Language="C#" Value="protected virtual void Dump (string? prefix, Java.IO.FileDescriptor? fd, Java.IO.PrintWriter? out, string[]? args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dump(string prefix, class Java.IO.FileDescriptor fd, class Java.IO.PrintWriter out, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.Dump(System.String,Java.IO.FileDescriptor,Java.IO.PrintWriter,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dump (prefix As String, fd As FileDescriptor, out As PrintWriter, args As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dump(System::String ^ prefix, Java::IO::FileDescriptor ^ fd, Java::IO::PrintWriter ^ out, cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member Dump : string * Java.IO.FileDescriptor * Java.IO.PrintWriter * string[] -&gt; unit&#xA;override this.Dump : string * Java.IO.FileDescriptor * Java.IO.PrintWriter * string[] -&gt; unit" Usage="engine.Dump (prefix, fd, out, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dump", "(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_lang_String_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dump", "(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_lang_String_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="out" Type="Java.IO.PrintWriter" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <param name="fd">To be added.</param>
        <param name="out">To be added.</param>
        <param name="args">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="IsPreview">
      <MemberSignature Language="C#" Value="public virtual bool IsPreview { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPreview" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Wallpaper.WallpaperService.Engine.IsPreview" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPreview As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPreview { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPreview : bool" Usage="Android.Service.Wallpaper.WallpaperService.Engine.IsPreview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPreview", "()Z", "GetIsPreviewHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPreview", "()Z", "GetIsPreviewHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this engine is running in preview mode -- that is,
            it is being shown to the user before they select it as the actual
            wallpaper.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#isPreview()" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.isPreview()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public virtual bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Wallpaper.WallpaperService.Engine.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="Android.Service.Wallpaper.WallpaperService.Engine.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isVisible", "()Z", "GetIsVisibleHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isVisible", "()Z", "GetIsVisibleHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether the wallpaper is currently visible to the user,
            this is the last value supplied to
            <c>#onVisibilityChanged(boolean)</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#isVisible()" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.isVisible()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Wallpaper.WallpaperService.Engine.JniPeerMembers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Service.Wallpaper.WallpaperService.Engine.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyColorsChanged">
      <MemberSignature Language="C#" Value="public virtual void NotifyColorsChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NotifyColorsChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.NotifyColorsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub NotifyColorsChanged ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void NotifyColorsChanged();" />
      <MemberSignature Language="F#" Value="abstract member NotifyColorsChanged : unit -&gt; unit&#xA;override this.NotifyColorsChanged : unit -&gt; unit" Usage="engine.NotifyColorsChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("notifyColorsChanged", "()V", "GetNotifyColorsChangedHandler", ApiSince=27)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("notifyColorsChanged", "()V", "GetNotifyColorsChangedHandler", ApiSince=27)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android27.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android27.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Notifies the engine that wallpaper colors changed significantly.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#notifyColorsChanged()" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.notifyColorsChanged()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyWindowInsets">
      <MemberSignature Language="C#" Value="public virtual void OnApplyWindowInsets (Android.Views.WindowInsets? insets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnApplyWindowInsets(class Android.Views.WindowInsets insets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnApplyWindowInsets(Android.Views.WindowInsets)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnApplyWindowInsets (insets As WindowInsets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnApplyWindowInsets(Android::Views::WindowInsets ^ insets);" />
      <MemberSignature Language="F#" Value="abstract member OnApplyWindowInsets : Android.Views.WindowInsets -&gt; unit&#xA;override this.OnApplyWindowInsets : Android.Views.WindowInsets -&gt; unit" Usage="engine.OnApplyWindowInsets insets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onApplyWindowInsets", "(Landroid/view/WindowInsets;)V", "GetOnApplyWindowInsets_Landroid_view_WindowInsets_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onApplyWindowInsets", "(Landroid/view/WindowInsets;)V", "GetOnApplyWindowInsets_Landroid_view_WindowInsets_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insets" Type="Android.Views.WindowInsets" />
      </Parameters>
      <Docs>
        <param name="insets">Insets to apply.</param>
        <summary>Called with the current insets that are in effect for the wallpaper.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onApplyWindowInsets(android.view.WindowInsets)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onApplyWindowInsets(android.view.WindowInsets)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle? OnCommand (string? action, int x, int y, int z, Android.OS.Bundle? extras, bool resultRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle OnCommand(string action, int32 x, int32 y, int32 z, class Android.OS.Bundle extras, bool resultRequested) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnCommand(System.String,System.Int32,System.Int32,System.Int32,Android.OS.Bundle,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnCommand (action As String, x As Integer, y As Integer, z As Integer, extras As Bundle, resultRequested As Boolean) As Bundle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::OS::Bundle ^ OnCommand(System::String ^ action, int x, int y, int z, Android::OS::Bundle ^ extras, bool resultRequested);" />
      <MemberSignature Language="F#" Value="abstract member OnCommand : string * int * int * int * Android.OS.Bundle * bool -&gt; Android.OS.Bundle&#xA;override this.OnCommand : string * int * int * int * Android.OS.Bundle * bool -&gt; Android.OS.Bundle" Usage="engine.OnCommand (action, x, y, z, extras, resultRequested)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCommand", "(Ljava/lang/String;IIILandroid/os/Bundle;Z)Landroid/os/Bundle;", "GetOnCommand_Ljava_lang_String_IIILandroid_os_Bundle_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCommand", "(Ljava/lang/String;IIILandroid/os/Bundle;Z)Landroid/os/Bundle;", "GetOnCommand_Ljava_lang_String_IIILandroid_os_Bundle_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="z" Type="System.Int32" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
        <Parameter Name="resultRequested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="action">The name of the command to perform.  This tells you
            what to do and how to interpret the rest of the arguments.</param>
        <param name="x">Generic integer parameter.</param>
        <param name="y">Generic integer parameter.</param>
        <param name="z">Generic integer parameter.</param>
        <param name="extras">Any additional parameters.</param>
        <param name="resultRequested">If true, the caller is requesting that
            a result, appropriate for the command, be returned back.</param>
        <summary>Process a command that was sent to the wallpaper with
            <c>WallpaperManager#sendWallpaperCommand</c>.</summary>
        <returns>If returning a result, create a Bundle and place the
            result data in to it.  Otherwise return null.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onCommand(java.lang.String,%20int,%20int,%20int,%20android.os.Bundle,%20boolean)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onCommand(java.lang.String, int, int, int, android.os.Bundle, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnComputeColors">
      <MemberSignature Language="C#" Value="public virtual Android.App.WallpaperColors? OnComputeColors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.App.WallpaperColors OnComputeColors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnComputeColors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnComputeColors () As WallpaperColors" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::App::WallpaperColors ^ OnComputeColors();" />
      <MemberSignature Language="F#" Value="abstract member OnComputeColors : unit -&gt; Android.App.WallpaperColors&#xA;override this.OnComputeColors : unit -&gt; Android.App.WallpaperColors" Usage="engine.OnComputeColors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onComputeColors", "()Landroid/app/WallpaperColors;", "GetOnComputeColorsHandler", ApiSince=27)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onComputeColors", "()Landroid/app/WallpaperColors;", "GetOnComputeColorsHandler", ApiSince=27)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android27.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android27.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.WallpaperColors</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called by the system when it needs to know what colors the wallpaper is using.</summary>
        <returns>Wallpaper colors.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onComputeColors()" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onComputeColors()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreate">
      <MemberSignature Language="C#" Value="public virtual void OnCreate (Android.Views.ISurfaceHolder? surfaceHolder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreate(class Android.Views.ISurfaceHolder surfaceHolder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnCreate(Android.Views.ISurfaceHolder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnCreate (surfaceHolder As ISurfaceHolder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnCreate(Android::Views::ISurfaceHolder ^ surfaceHolder);" />
      <MemberSignature Language="F#" Value="abstract member OnCreate : Android.Views.ISurfaceHolder -&gt; unit&#xA;override this.OnCreate : Android.Views.ISurfaceHolder -&gt; unit" Usage="engine.OnCreate surfaceHolder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCreate", "(Landroid/view/SurfaceHolder;)V", "GetOnCreate_Landroid_view_SurfaceHolder_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCreate", "(Landroid/view/SurfaceHolder;)V", "GetOnCreate_Landroid_view_SurfaceHolder_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surfaceHolder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="surfaceHolder">To be added.</param>
        <summary>Called once to initialize the engine.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onCreate(android.view.SurfaceHolder)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onCreate(android.view.SurfaceHolder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnDesiredSizeChanged">
      <MemberSignature Language="C#" Value="public virtual void OnDesiredSizeChanged (int desiredWidth, int desiredHeight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDesiredSizeChanged(int32 desiredWidth, int32 desiredHeight) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnDesiredSizeChanged(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDesiredSizeChanged (desiredWidth As Integer, desiredHeight As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDesiredSizeChanged(int desiredWidth, int desiredHeight);" />
      <MemberSignature Language="F#" Value="abstract member OnDesiredSizeChanged : int * int -&gt; unit&#xA;override this.OnDesiredSizeChanged : int * int -&gt; unit" Usage="engine.OnDesiredSizeChanged (desiredWidth, desiredHeight)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDesiredSizeChanged", "(II)V", "GetOnDesiredSizeChanged_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDesiredSizeChanged", "(II)V", "GetOnDesiredSizeChanged_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredWidth" Type="System.Int32" />
        <Parameter Name="desiredHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="desiredWidth">To be added.</param>
        <param name="desiredHeight">To be added.</param>
        <summary>Called when an application has changed the desired virtual size of
            the wallpaper.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onDesiredSizeChanged(int,%20int)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onDesiredSizeChanged(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnDestroy">
      <MemberSignature Language="C#" Value="public virtual void OnDestroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDestroy() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnDestroy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnDestroy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDestroy();" />
      <MemberSignature Language="F#" Value="abstract member OnDestroy : unit -&gt; unit&#xA;override this.OnDestroy : unit -&gt; unit" Usage="engine.OnDestroy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onDestroy", "()V", "GetOnDestroyHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onDestroy", "()V", "GetOnDestroyHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called right before the engine is going away.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onDestroy()" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onDestroy()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnOffsetsChanged">
      <MemberSignature Language="C#" Value="public virtual void OnOffsetsChanged (float xOffset, float yOffset, float xOffsetStep, float yOffsetStep, int xPixelOffset, int yPixelOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnOffsetsChanged(float32 xOffset, float32 yOffset, float32 xOffsetStep, float32 yOffsetStep, int32 xPixelOffset, int32 yPixelOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnOffsetsChanged(System.Single,System.Single,System.Single,System.Single,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnOffsetsChanged (xOffset As Single, yOffset As Single, xOffsetStep As Single, yOffsetStep As Single, xPixelOffset As Integer, yPixelOffset As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnOffsetsChanged(float xOffset, float yOffset, float xOffsetStep, float yOffsetStep, int xPixelOffset, int yPixelOffset);" />
      <MemberSignature Language="F#" Value="abstract member OnOffsetsChanged : single * single * single * single * int * int -&gt; unit&#xA;override this.OnOffsetsChanged : single * single * single * single * int * int -&gt; unit" Usage="engine.OnOffsetsChanged (xOffset, yOffset, xOffsetStep, yOffsetStep, xPixelOffset, yPixelOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onOffsetsChanged", "(FFFFII)V", "GetOnOffsetsChanged_FFFFIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onOffsetsChanged", "(FFFFII)V", "GetOnOffsetsChanged_FFFFIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xOffset" Type="System.Single" />
        <Parameter Name="yOffset" Type="System.Single" />
        <Parameter Name="xOffsetStep" Type="System.Single" />
        <Parameter Name="yOffsetStep" Type="System.Single" />
        <Parameter Name="xPixelOffset" Type="System.Int32" />
        <Parameter Name="yPixelOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xOffset">To be added.</param>
        <param name="yOffset">To be added.</param>
        <param name="xOffsetStep">To be added.</param>
        <param name="yOffsetStep">To be added.</param>
        <param name="xPixelOffset">To be added.</param>
        <param name="yPixelOffset">To be added.</param>
        <summary>Called to inform you of the wallpaper's offsets changing
            within its contain, corresponding to the container's
            call to <c>WallpaperManager#setWallpaperOffsets(IBinder, float, float)
            WallpaperManager.setWallpaperOffsets()</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onOffsetsChanged(float,%20float,%20float,%20float,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onOffsetsChanged(float, float, float, float, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnSurfaceChanged">
      <MemberSignature Language="C#" Value="public virtual void OnSurfaceChanged (Android.Views.ISurfaceHolder? holder, Android.Graphics.Format format, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSurfaceChanged(class Android.Views.ISurfaceHolder holder, valuetype Android.Graphics.Format format, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnSurfaceChanged(Android.Views.ISurfaceHolder,Android.Graphics.Format,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnSurfaceChanged (holder As ISurfaceHolder, format As Format, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnSurfaceChanged(Android::Views::ISurfaceHolder ^ holder, Android::Graphics::Format format, int width, int height);" />
      <MemberSignature Language="F#" Value="abstract member OnSurfaceChanged : Android.Views.ISurfaceHolder * Android.Graphics.Format * int * int -&gt; unit&#xA;override this.OnSurfaceChanged : Android.Views.ISurfaceHolder * Android.Graphics.Format * int * int -&gt; unit" Usage="engine.OnSurfaceChanged (holder, format, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSurfaceChanged", "(Landroid/view/SurfaceHolder;III)V", "GetOnSurfaceChanged_Landroid_view_SurfaceHolder_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSurfaceChanged", "(Landroid/view/SurfaceHolder;III)V", "GetOnSurfaceChanged_Landroid_view_SurfaceHolder_IIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
        <Parameter Name="format" Type="Android.Graphics.Format">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="holder">To be added.</param>
        <param name="format">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>Convenience for <c>SurfaceHolder.Callback#surfaceChanged
            SurfaceHolder.Callback.surfaceChanged()</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onSurfaceChanged(android.view.SurfaceHolder,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onSurfaceChanged(android.view.SurfaceHolder, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnSurfaceCreated">
      <MemberSignature Language="C#" Value="public virtual void OnSurfaceCreated (Android.Views.ISurfaceHolder? holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSurfaceCreated(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnSurfaceCreated(Android.Views.ISurfaceHolder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnSurfaceCreated (holder As ISurfaceHolder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnSurfaceCreated(Android::Views::ISurfaceHolder ^ holder);" />
      <MemberSignature Language="F#" Value="abstract member OnSurfaceCreated : Android.Views.ISurfaceHolder -&gt; unit&#xA;override this.OnSurfaceCreated : Android.Views.ISurfaceHolder -&gt; unit" Usage="engine.OnSurfaceCreated holder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSurfaceCreated", "(Landroid/view/SurfaceHolder;)V", "GetOnSurfaceCreated_Landroid_view_SurfaceHolder_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSurfaceCreated", "(Landroid/view/SurfaceHolder;)V", "GetOnSurfaceCreated_Landroid_view_SurfaceHolder_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">To be added.</param>
        <summary>Convenience for <c>SurfaceHolder.Callback#surfaceCreated
            SurfaceHolder.Callback.surfaceCreated()</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onSurfaceCreated(android.view.SurfaceHolder)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onSurfaceCreated(android.view.SurfaceHolder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnSurfaceDestroyed">
      <MemberSignature Language="C#" Value="public virtual void OnSurfaceDestroyed (Android.Views.ISurfaceHolder? holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSurfaceDestroyed(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnSurfaceDestroyed(Android.Views.ISurfaceHolder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnSurfaceDestroyed (holder As ISurfaceHolder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnSurfaceDestroyed(Android::Views::ISurfaceHolder ^ holder);" />
      <MemberSignature Language="F#" Value="abstract member OnSurfaceDestroyed : Android.Views.ISurfaceHolder -&gt; unit&#xA;override this.OnSurfaceDestroyed : Android.Views.ISurfaceHolder -&gt; unit" Usage="engine.OnSurfaceDestroyed holder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSurfaceDestroyed", "(Landroid/view/SurfaceHolder;)V", "GetOnSurfaceDestroyed_Landroid_view_SurfaceHolder_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSurfaceDestroyed", "(Landroid/view/SurfaceHolder;)V", "GetOnSurfaceDestroyed_Landroid_view_SurfaceHolder_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">To be added.</param>
        <summary>Convenience for <c>SurfaceHolder.Callback#surfaceDestroyed
            SurfaceHolder.Callback.surfaceDestroyed()</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onSurfaceDestroyed(android.view.SurfaceHolder)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onSurfaceDestroyed(android.view.SurfaceHolder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnSurfaceRedrawNeeded">
      <MemberSignature Language="C#" Value="public virtual void OnSurfaceRedrawNeeded (Android.Views.ISurfaceHolder? holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSurfaceRedrawNeeded(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnSurfaceRedrawNeeded(Android.Views.ISurfaceHolder)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnSurfaceRedrawNeeded (holder As ISurfaceHolder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnSurfaceRedrawNeeded(Android::Views::ISurfaceHolder ^ holder);" />
      <MemberSignature Language="F#" Value="abstract member OnSurfaceRedrawNeeded : Android.Views.ISurfaceHolder -&gt; unit&#xA;override this.OnSurfaceRedrawNeeded : Android.Views.ISurfaceHolder -&gt; unit" Usage="engine.OnSurfaceRedrawNeeded holder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onSurfaceRedrawNeeded", "(Landroid/view/SurfaceHolder;)V", "GetOnSurfaceRedrawNeeded_Landroid_view_SurfaceHolder_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onSurfaceRedrawNeeded", "(Landroid/view/SurfaceHolder;)V", "GetOnSurfaceRedrawNeeded_Landroid_view_SurfaceHolder_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">To be added.</param>
        <summary>Convenience for <c>SurfaceHolder.Callback2#surfaceRedrawNeeded
            SurfaceHolder.Callback.surfaceRedrawNeeded()</c>.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onSurfaceRedrawNeeded(android.view.SurfaceHolder)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onSurfaceRedrawNeeded(android.view.SurfaceHolder)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchEvent">
      <MemberSignature Language="C#" Value="public virtual void OnTouchEvent (Android.Views.MotionEvent? e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTouchEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnTouchEvent(Android.Views.MotionEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnTouchEvent (e As MotionEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnTouchEvent(Android::Views::MotionEvent ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEvent : Android.Views.MotionEvent -&gt; unit&#xA;override this.OnTouchEvent : Android.Views.MotionEvent -&gt; unit" Usage="engine.OnTouchEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTouchEvent", "(Landroid/view/MotionEvent;)V", "GetOnTouchEvent_Landroid_view_MotionEvent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTouchEvent", "(Landroid/view/MotionEvent;)V", "GetOnTouchEvent_Landroid_view_MotionEvent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Called as the user performs touch-screen interaction with the
            window that is currently showing this wallpaper.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onTouchEvent(android.view.MotionEvent)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onTouchEvent(android.view.MotionEvent)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibilityChanged">
      <MemberSignature Language="C#" Value="public virtual void OnVisibilityChanged (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnVisibilityChanged(bool visible) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnVisibilityChanged(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnVisibilityChanged (visible As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnVisibilityChanged(bool visible);" />
      <MemberSignature Language="F#" Value="abstract member OnVisibilityChanged : bool -&gt; unit&#xA;override this.OnVisibilityChanged : bool -&gt; unit" Usage="engine.OnVisibilityChanged visible" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onVisibilityChanged", "(Z)V", "GetOnVisibilityChanged_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onVisibilityChanged", "(Z)V", "GetOnVisibilityChanged_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">To be added.</param>
        <summary>Called to inform you of the wallpaper becoming visible or
            hidden.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onVisibilityChanged(boolean)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onVisibilityChanged(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnWallpaperFlagsChanged">
      <MemberSignature Language="C#" Value="public virtual void OnWallpaperFlagsChanged (Android.App.WallpaperManagerFlags which);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnWallpaperFlagsChanged(valuetype Android.App.WallpaperManagerFlags which) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnWallpaperFlagsChanged(Android.App.WallpaperManagerFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnWallpaperFlagsChanged (which As WallpaperManagerFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnWallpaperFlagsChanged(Android::App::WallpaperManagerFlags which);" />
      <MemberSignature Language="F#" Value="abstract member OnWallpaperFlagsChanged : Android.App.WallpaperManagerFlags -&gt; unit&#xA;override this.OnWallpaperFlagsChanged : Android.App.WallpaperManagerFlags -&gt; unit" Usage="engine.OnWallpaperFlagsChanged which" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onWallpaperFlagsChanged", "(I)V", "GetOnWallpaperFlagsChanged_IHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onWallpaperFlagsChanged", "(I)V", "GetOnWallpaperFlagsChanged_IHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="which" Type="Android.App.WallpaperManagerFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="which">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnZoomChanged">
      <MemberSignature Language="C#" Value="public virtual void OnZoomChanged (float zoom);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnZoomChanged(float32 zoom) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.OnZoomChanged(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnZoomChanged (zoom As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnZoomChanged(float zoom);" />
      <MemberSignature Language="F#" Value="abstract member OnZoomChanged : single -&gt; unit&#xA;override this.OnZoomChanged : single -&gt; unit" Usage="engine.OnZoomChanged zoom" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onZoomChanged", "(F)V", "GetOnZoomChanged_FHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onZoomChanged", "(F)V", "GetOnZoomChanged_FHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="zoom" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="zoom">the zoom level, between 0 indicating fully zoomed in and 1 indicating fully
                        zoomed out.</param>
        <summary>Called when the zoom level of the wallpaper changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#onZoomChanged(float)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.onZoomChanged(float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetOffsetNotificationsEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetOffsetNotificationsEnabled (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOffsetNotificationsEnabled(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.SetOffsetNotificationsEnabled(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetOffsetNotificationsEnabled (enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetOffsetNotificationsEnabled(bool enabled);" />
      <MemberSignature Language="F#" Value="abstract member SetOffsetNotificationsEnabled : bool -&gt; unit&#xA;override this.SetOffsetNotificationsEnabled : bool -&gt; unit" Usage="engine.SetOffsetNotificationsEnabled enabled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setOffsetNotificationsEnabled", "(Z)V", "GetSetOffsetNotificationsEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setOffsetNotificationsEnabled", "(Z)V", "GetSetOffsetNotificationsEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">whether the wallpaper wants to receive offset notifications</param>
        <summary>Control whether this wallpaper will receive notifications when the wallpaper
            has been scrolled.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#setOffsetNotificationsEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.setOffsetNotificationsEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 15" />
      </Docs>
    </Member>
    <Member MemberName="SetTouchEventsEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetTouchEventsEnabled (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTouchEventsEnabled(bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Wallpaper.WallpaperService.Engine.SetTouchEventsEnabled(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetTouchEventsEnabled (enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetTouchEventsEnabled(bool enabled);" />
      <MemberSignature Language="F#" Value="abstract member SetTouchEventsEnabled : bool -&gt; unit&#xA;override this.SetTouchEventsEnabled : bool -&gt; unit" Usage="engine.SetTouchEventsEnabled enabled" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setTouchEventsEnabled", "(Z)V", "GetSetTouchEventsEnabled_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setTouchEventsEnabled", "(Z)V", "GetSetTouchEventsEnabled_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">To be added.</param>
        <summary>Control whether this wallpaper will receive raw touch events
            from the window manager as the user interacts with the window
            that is currently displaying the wallpaper.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#setTouchEventsEnabled(boolean)" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.setTouchEventsEnabled(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceHolder">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ISurfaceHolder? SurfaceHolder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ISurfaceHolder SurfaceHolder" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Wallpaper.WallpaperService.Engine.SurfaceHolder" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SurfaceHolder As ISurfaceHolder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::Views::ISurfaceHolder ^ SurfaceHolder { Android::Views::ISurfaceHolder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SurfaceHolder : Android.Views.ISurfaceHolder" Usage="Android.Service.Wallpaper.WallpaperService.Engine.SurfaceHolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSurfaceHolder", "()Landroid/view/SurfaceHolder;", "GetGetSurfaceHolderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSurfaceHolder", "()Landroid/view/SurfaceHolder;", "GetGetSurfaceHolderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ISurfaceHolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Provides access to the surface in which this wallpaper is drawn.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine#getSurfaceHolder()" title="Reference documentation">Java documentation for <code>android.service.wallpaper.WallpaperService.Engine.getSurfaceHolder()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Wallpaper.WallpaperService.Engine.ThresholdClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Service.Wallpaper.WallpaperService.Engine.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Wallpaper.WallpaperService.Engine.ThresholdType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Service.Wallpaper.WallpaperService.Engine.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WallpaperFlags">
      <MemberSignature Language="C#" Value="public virtual Android.App.WallpaperManagerFlags WallpaperFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.App.WallpaperManagerFlags WallpaperFlags" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Wallpaper.WallpaperService.Engine.WallpaperFlags" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WallpaperFlags As WallpaperManagerFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Android::App::WallpaperManagerFlags WallpaperFlags { Android::App::WallpaperManagerFlags get(); };" />
      <MemberSignature Language="F#" Value="member this.WallpaperFlags : Android.App.WallpaperManagerFlags" Usage="Android.Service.Wallpaper.WallpaperService.Engine.WallpaperFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWallpaperFlags", "()I", "GetGetWallpaperFlagsHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWallpaperFlags", "()I", "GetGetWallpaperFlagsHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.App.WallpaperManagerFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
