<Type Name="WallpaperService+Engine" FullName="Android.Service.Wallpaper.WallpaperService+Engine">
  <TypeSignature Language="C#" Value="public class WallpaperService.Engine : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit WallpaperService/Engine extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/service/wallpaper/WallpaperService$Engine", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The actual implementation of a wallpaper.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The actual implementation of a wallpaper.  A wallpaper service may
 have multiple instances running (for example as a real wallpaper
 and as a preview), each of which is represented by its own Engine
 instance.  You must implement <c><see cref="M:Android.Service.Wallpaper.WallpaperService.OnCreateEngine" /></c>
 to return your concrete Engine implementation.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 7" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Engine (Android.Service.Wallpaper.WallpaperService __self);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Service.Wallpaper.WallpaperService __self) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/service/wallpaper/WallpaperService;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="__self" Type="Android.Service.Wallpaper.WallpaperService" />
      </Parameters>
      <Docs>
        <param name="__self">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Engine (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T}(System.IntPtr,Android.Runtime.JniHandleOwnership)" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredMinimumHeight">
      <MemberSignature Language="C#" Value="public virtual int DesiredMinimumHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DesiredMinimumHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDesiredMinimumHeight", "()I", "GetGetDesiredMinimumHeightHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Convenience for <c><see cref="P:Android.App.WallpaperManager.DesiredMinimumHeight" /></c>, returning the height
 that the system would like this wallpaper to run in.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience for <c><see cref="P:Android.App.WallpaperManager.DesiredMinimumHeight" /></c>, returning the height
 that the system would like this wallpaper to run in.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#getDesiredMinimumHeight()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="DesiredMinimumWidth">
      <MemberSignature Language="C#" Value="public virtual int DesiredMinimumWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DesiredMinimumWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDesiredMinimumWidth", "()I", "GetGetDesiredMinimumWidthHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Convenience for <c><see cref="P:Android.App.WallpaperManager.DesiredMinimumWidth" /></c>, returning the width
 that the system would like this wallpaper to run in.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience for <c><see cref="P:Android.App.WallpaperManager.DesiredMinimumWidth" /></c>, returning the width
 that the system would like this wallpaper to run in.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#getDesiredMinimumWidth()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="Dump">
      <MemberSignature Language="C#" Value="protected virtual void Dump (string prefix, Java.IO.FileDescriptor fd, Java.IO.PrintWriter out, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dump(string prefix, class Java.IO.FileDescriptor fd, class Java.IO.PrintWriter out, string[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dump", "(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_lang_String_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="out" Type="Java.IO.PrintWriter" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <param name="fd">To be added.</param>
        <param name="out">To be added.</param>
        <param name="args">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#dump(java.lang.String, java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="IsPreview">
      <MemberSignature Language="C#" Value="public virtual bool IsPreview { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPreview" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isPreview", "()Z", "GetIsPreviewHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if this engine is running in preview mode -- that is,
 it is being shown to the user before they select it as the actual
 wallpaper.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if this engine is running in preview mode -- that is,
 it is being shown to the user before they select it as the actual
 wallpaper.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#isPreview()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public virtual bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isVisible", "()Z", "GetIsVisibleHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether the wallpaper is currently visible to the user,
 this is the last value supplied to
 <c><see cref="M:Android.Service.Wallpaper.WallpaperService.Engine.OnVisibilityChanged(System.Boolean)" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return whether the wallpaper is currently visible to the user,
 this is the last value supplied to
 <c><see cref="M:Android.Service.Wallpaper.WallpaperService.Engine.OnVisibilityChanged(System.Boolean)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#isVisible()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyWindowInsets">
      <MemberSignature Language="C#" Value="public virtual void OnApplyWindowInsets (Android.Views.WindowInsets insets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnApplyWindowInsets(class Android.Views.WindowInsets insets) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onApplyWindowInsets", "(Landroid/view/WindowInsets;)V", "GetOnApplyWindowInsets_Landroid_view_WindowInsets_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insets" Type="Android.Views.WindowInsets" />
      </Parameters>
      <Docs>
        <param name="insets">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle OnCommand (string action, int x, int y, int z, Android.OS.Bundle extras, bool resultRequested);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle OnCommand(string action, int32 x, int32 y, int32 z, class Android.OS.Bundle extras, bool resultRequested) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCommand", "(Ljava/lang/String;IIILandroid/os/Bundle;Z)Landroid/os/Bundle;", "GetOnCommand_Ljava_lang_String_IIILandroid_os_Bundle_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.String" />
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="z" Type="System.Int32" />
        <Parameter Name="extras" Type="Android.OS.Bundle" />
        <Parameter Name="resultRequested" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="action">The name of the command to perform.  This tells you
 what to do and how to interpret the rest of the arguments.</param>
        <param name="x">Generic integer parameter.</param>
        <param name="y">Generic integer parameter.</param>
        <param name="z">Generic integer parameter.</param>
        <param name="extras">Any additional parameters.</param>
        <param name="resultRequested">If true, the caller is requesting that
 a result, appropriate for the command, be returned back.</param>
        <summary>Process a command that was sent to the wallpaper with
 <c><see cref="M:Android.App.WallpaperManager.SendWallpaperCommand(Android.OS.IBinder,System.String,System.String,System.String,System.String,System.String)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Process a command that was sent to the wallpaper with
 <c><see cref="M:Android.App.WallpaperManager.SendWallpaperCommand(Android.OS.IBinder,System.String,System.String,System.String,System.String,System.String)" /></c>.
 The default implementation does nothing, and always returns null
 as the result.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#onCommand(java.lang.String, int, int, int, android.os.Bundle, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnCreate">
      <MemberSignature Language="C#" Value="public virtual void OnCreate (Android.Views.ISurfaceHolder surfaceHolder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnCreate(class Android.Views.ISurfaceHolder surfaceHolder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onCreate", "(Landroid/view/SurfaceHolder;)V", "GetOnCreate_Landroid_view_SurfaceHolder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="surfaceHolder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="surfaceHolder">To be added.</param>
        <summary>Called once to initialize the engine.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called once to initialize the engine.  After returning, the
 engine's surface will be created by the framework.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#onCreate(android.view.SurfaceHolder)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnDesiredSizeChanged">
      <MemberSignature Language="C#" Value="public virtual void OnDesiredSizeChanged (int desiredWidth, int desiredHeight);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDesiredSizeChanged(int32 desiredWidth, int32 desiredHeight) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDesiredSizeChanged", "(II)V", "GetOnDesiredSizeChanged_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="desiredWidth" Type="System.Int32" />
        <Parameter Name="desiredHeight" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="desiredWidth">To be added.</param>
        <param name="desiredHeight">To be added.</param>
        <summary>Called when an application has changed the desired virtual size of
 the wallpaper.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called when an application has changed the desired virtual size of
 the wallpaper.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#onDesiredSizeChanged(int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnDestroy">
      <MemberSignature Language="C#" Value="public virtual void OnDestroy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDestroy() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onDestroy", "()V", "GetOnDestroyHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Called right before the engine is going away.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called right before the engine is going away.  After this the
 surface will be destroyed and this Engine object is no longer
 valid.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#onDestroy()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnOffsetsChanged">
      <MemberSignature Language="C#" Value="public virtual void OnOffsetsChanged (float xOffset, float yOffset, float xOffsetStep, float yOffsetStep, int xPixelOffset, int yPixelOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnOffsetsChanged(float32 xOffset, float32 yOffset, float32 xOffsetStep, float32 yOffsetStep, int32 xPixelOffset, int32 yPixelOffset) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onOffsetsChanged", "(FFFFII)V", "GetOnOffsetsChanged_FFFFIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xOffset" Type="System.Single" />
        <Parameter Name="yOffset" Type="System.Single" />
        <Parameter Name="xOffsetStep" Type="System.Single" />
        <Parameter Name="yOffsetStep" Type="System.Single" />
        <Parameter Name="xPixelOffset" Type="System.Int32" />
        <Parameter Name="yPixelOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="xOffset">To be added.</param>
        <param name="yOffset">To be added.</param>
        <param name="xOffsetStep">To be added.</param>
        <param name="yOffsetStep">To be added.</param>
        <param name="xPixelOffset">To be added.</param>
        <param name="yPixelOffset">To be added.</param>
        <summary>Called to inform you of the wallpaper's offsets changing
 within its contain, corresponding to the container's
 call to <c><see cref="M:Android.App.WallpaperManager.SetWallpaperOffsets(Android.OS.IBinder,System.Single,System.Single)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called to inform you of the wallpaper's offsets changing
 within its contain, corresponding to the container's
 call to <c><see cref="M:Android.App.WallpaperManager.SetWallpaperOffsets(Android.OS.IBinder,System.Single,System.Single)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#onOffsetsChanged(float, float, float, float, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnSurfaceChanged">
      <MemberSignature Language="C#" Value="public virtual void OnSurfaceChanged (Android.Views.ISurfaceHolder holder, Android.Graphics.Format format, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSurfaceChanged(class Android.Views.ISurfaceHolder holder, valuetype Android.Graphics.Format format, int32 width, int32 height) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSurfaceChanged", "(Landroid/view/SurfaceHolder;III)V", "GetOnSurfaceChanged_Landroid_view_SurfaceHolder_IIIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
        <Parameter Name="format" Type="Android.Graphics.Format">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="holder">To be added.</param>
        <param name="format">To be added.</param>
        <param name="width">To be added.</param>
        <param name="height">To be added.</param>
        <summary>Convenience for <c><see cref="M:Android.Views.ISurfaceHolderCallback.SurfaceChanged(Android.Views.ISurfaceHolder,Android.Graphics.Format,Android.Graphics.Format,Android.Graphics.Format)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience for <c><see cref="M:Android.Views.ISurfaceHolderCallback.SurfaceChanged(Android.Views.ISurfaceHolder,Android.Graphics.Format,Android.Graphics.Format,Android.Graphics.Format)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#onSurfaceChanged(android.view.SurfaceHolder, int, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnSurfaceCreated">
      <MemberSignature Language="C#" Value="public virtual void OnSurfaceCreated (Android.Views.ISurfaceHolder holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSurfaceCreated(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSurfaceCreated", "(Landroid/view/SurfaceHolder;)V", "GetOnSurfaceCreated_Landroid_view_SurfaceHolder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">To be added.</param>
        <summary>Convenience for <c><see cref="M:Android.Views.ISurfaceHolderCallback.SurfaceCreated(Android.Views.ISurfaceHolder)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience for <c><see cref="M:Android.Views.ISurfaceHolderCallback.SurfaceCreated(Android.Views.ISurfaceHolder)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#onSurfaceCreated(android.view.SurfaceHolder)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnSurfaceDestroyed">
      <MemberSignature Language="C#" Value="public virtual void OnSurfaceDestroyed (Android.Views.ISurfaceHolder holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSurfaceDestroyed(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSurfaceDestroyed", "(Landroid/view/SurfaceHolder;)V", "GetOnSurfaceDestroyed_Landroid_view_SurfaceHolder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">To be added.</param>
        <summary>Convenience for <c><see cref="M:Android.Views.ISurfaceHolderCallback.SurfaceDestroyed(Android.Views.ISurfaceHolder)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience for <c><see cref="M:Android.Views.ISurfaceHolderCallback.SurfaceDestroyed(Android.Views.ISurfaceHolder)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#onSurfaceDestroyed(android.view.SurfaceHolder)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnSurfaceRedrawNeeded">
      <MemberSignature Language="C#" Value="public virtual void OnSurfaceRedrawNeeded (Android.Views.ISurfaceHolder holder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSurfaceRedrawNeeded(class Android.Views.ISurfaceHolder holder) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSurfaceRedrawNeeded", "(Landroid/view/SurfaceHolder;)V", "GetOnSurfaceRedrawNeeded_Landroid_view_SurfaceHolder_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holder" Type="Android.Views.ISurfaceHolder" />
      </Parameters>
      <Docs>
        <param name="holder">To be added.</param>
        <summary>Convenience for <c><see cref="M:Android.Views.ISurfaceHolderCallback2.SurfaceRedrawNeeded(Android.Views.ISurfaceHolder)" /></c>.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Convenience for <c><see cref="M:Android.Views.ISurfaceHolderCallback2.SurfaceRedrawNeeded(Android.Views.ISurfaceHolder)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#onSurfaceRedrawNeeded(android.view.SurfaceHolder)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchEvent">
      <MemberSignature Language="C#" Value="public virtual void OnTouchEvent (Android.Views.MotionEvent e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTouchEvent(class Android.Views.MotionEvent e) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onTouchEvent", "(Landroid/view/MotionEvent;)V", "GetOnTouchEvent_Landroid_view_MotionEvent_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.Views.MotionEvent" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>Called as the user performs touch-screen interaction with the
 window that is currently showing this wallpaper.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called as the user performs touch-screen interaction with the
 window that is currently showing this wallpaper.  Note that the
 events you receive here are driven by the actual application the
 user is interacting with, so if it is slow you will get fewer
 move events.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#onTouchEvent(android.view.MotionEvent)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibilityChanged">
      <MemberSignature Language="C#" Value="public virtual void OnVisibilityChanged (bool visible);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnVisibilityChanged(bool visible) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onVisibilityChanged", "(Z)V", "GetOnVisibilityChanged_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visible" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="visible">To be added.</param>
        <summary>Called to inform you of the wallpaper becoming visible or
 hidden.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Called to inform you of the wallpaper becoming visible or
 hidden.  <i>It is very important that a wallpaper only use
 CPU while it is visible.</i>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#onVisibilityChanged(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="SetOffsetNotificationsEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetOffsetNotificationsEnabled (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetOffsetNotificationsEnabled(bool enabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setOffsetNotificationsEnabled", "(Z)V", "GetSetOffsetNotificationsEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">whether the wallpaper wants to receive offset notifications
</param>
        <summary>Control whether this wallpaper will receive notifications when the wallpaper
 has been scrolled.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Control whether this wallpaper will receive notifications when the wallpaper
 has been scrolled. By default, wallpapers will receive notifications, although
 the default static image wallpapers do not. It is a performance optimization to
 set this to false.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#setOffsetNotificationsEnabled(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 15" />
      </Docs>
    </Member>
    <Member MemberName="SetTouchEventsEnabled">
      <MemberSignature Language="C#" Value="public virtual void SetTouchEventsEnabled (bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetTouchEventsEnabled(bool enabled) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setTouchEventsEnabled", "(Z)V", "GetSetTouchEventsEnabled_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enabled">To be added.</param>
        <summary>Control whether this wallpaper will receive raw touch events
 from the window manager as the user interacts with the window
 that is currently displaying the wallpaper.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Control whether this wallpaper will receive raw touch events
 from the window manager as the user interacts with the window
 that is currently displaying the wallpaper.  By default they
 are turned off.  If enabled, the events will be received in
 <c><see cref="M:Android.Service.Wallpaper.WallpaperService.Engine.OnTouchEvent(Android.Views.MotionEvent)" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#setTouchEventsEnabled(boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="SurfaceHolder">
      <MemberSignature Language="C#" Value="public virtual Android.Views.ISurfaceHolder SurfaceHolder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Views.ISurfaceHolder SurfaceHolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSurfaceHolder", "()Landroid/view/SurfaceHolder;", "GetGetSurfaceHolderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Views.ISurfaceHolder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Provides access to the surface in which this wallpaper is drawn.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Provides access to the surface in which this wallpaper is drawn.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/service/wallpaper/WallpaperService.Engine.html#getSurfaceHolder()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
