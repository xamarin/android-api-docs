<Type Name="CredentialManager" FullName="Android.Credentials.CredentialManager">
  <TypeSignature Language="C#" Value="public sealed class CredentialManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CredentialManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Credentials.CredentialManager" />
  <TypeSignature Language="F#" Value="type CredentialManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/credentials/CredentialManager", ApiSince=34, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/credentials/CredentialManager", ApiSince=34, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Manages user authentication flows.</summary>
    <remarks>
      <para>Manages user authentication flows.</para>
      <para>Note that an application should call the Jetpack CredentialManager apis instead of directly
            calling these framework apis.</para>
      <para>The CredentialManager apis launch framework UI flows for a user to register a new credential
            or to consent to a saved credential from supported credential providers, which can then be used
            to authenticate to the app.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/credentials/CredentialManager" title="Reference documentation">Java documentation for <code>android.credentials.CredentialManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ClearCredentialState">
      <MemberSignature Language="C#" Value="public void ClearCredentialState (Android.Credentials.ClearCredentialStateRequest request, Android.OS.CancellationSignal? cancellationSignal, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearCredentialState(class Android.Credentials.ClearCredentialStateRequest request, class Android.OS.CancellationSignal cancellationSignal, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Credentials.CredentialManager.ClearCredentialState(Android.Credentials.ClearCredentialStateRequest,Android.OS.CancellationSignal,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="member this.ClearCredentialState : Android.Credentials.ClearCredentialStateRequest * Android.OS.CancellationSignal * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="credentialManager.ClearCredentialState (request, cancellationSignal, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearCredentialState", "(Landroid/credentials/ClearCredentialStateRequest;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearCredentialState", "(Landroid/credentials/ClearCredentialStateRequest;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Credentials.ClearCredentialStateRequest" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="request">the request data</param>
        <param name="cancellationSignal">an optional signal that allows for cancelling this call</param>
        <param name="executor">the callback will take place on this <c>Executor</c></param>
        <param name="callback">the callback invoked when the request succeeds or fails</param>
        <summary>Clears the current user credential state from all credential providers.</summary>
        <remarks>
          <para>Clears the current user credential state from all credential providers.</para>
          <para>You should invoked this api after your user signs out of your app to notify all credential
            providers that any stored credential session for the given app should be cleared.</para>
          <para>A credential provider may have stored an active credential session and use it to limit
            sign-in options for future get-credential calls. For example, it may prioritize the active
            credential over any other available credential. When your user explicitly signs out of your
            app and in order to get the holistic sign-in options the next time, you should call this API
            to let the provider clear any stored credential session.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/credentials/CredentialManager#clearCredentialState(android.credentials.ClearCredentialStateRequest,%20android.os.CancellationSignal,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Cjava.lang.Void,%20android.credentials.ClearCredentialStateException%3E)" title="Reference documentation">Java documentation for <code>android.credentials.CredentialManager.clearCredentialState(android.credentials.ClearCredentialStateRequest, android.os.CancellationSignal, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;java.lang.Void, android.credentials.ClearCredentialStateException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCredential">
      <MemberSignature Language="C#" Value="public void CreateCredential (Android.Content.Context context, Android.Credentials.CreateCredentialRequest request, Android.OS.CancellationSignal? cancellationSignal, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateCredential(class Android.Content.Context context, class Android.Credentials.CreateCredentialRequest request, class Android.OS.CancellationSignal cancellationSignal, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Credentials.CredentialManager.CreateCredential(Android.Content.Context,Android.Credentials.CreateCredentialRequest,Android.OS.CancellationSignal,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="member this.CreateCredential : Android.Content.Context * Android.Credentials.CreateCredentialRequest * Android.OS.CancellationSignal * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="credentialManager.CreateCredential (context, request, cancellationSignal, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("createCredential", "(Landroid/content/Context;Landroid/credentials/CreateCredentialRequest;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("createCredential", "(Landroid/content/Context;Landroid/credentials/CreateCredentialRequest;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="request" Type="Android.Credentials.CreateCredentialRequest" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="context">the context used to launch any UI needed; use an activity context to make sure
                           the UI will be launched within the same task stack</param>
        <param name="request">the request specifying type(s) of credentials to get from the user</param>
        <param name="cancellationSignal">an optional signal that allows for cancelling this call</param>
        <param name="executor">the callback will take place on this <c>Executor</c></param>
        <param name="callback">the callback invoked when the request succeeds or fails</param>
        <summary>Launches the necessary flows to register an app credential for the user.</summary>
        <remarks>
          <para>Launches the necessary flows to register an app credential for the user.</para>
          <para>The execution can potentially launch UI flows to collect user consent to creating or
            storing the new credential, etc.
            Callers (e.g. browsers) may optionally set origin in <c>CreateCredentialRequest</c> for an
            app different from their own, to be able to get credentials on behalf of that app. They would
            need additional permission <c>CREDENTIAL_MANAGER_SET_ORIGIN</c>
            to use this functionality</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/credentials/CredentialManager#createCredential(android.content.Context,%20android.credentials.CreateCredentialRequest,%20android.os.CancellationSignal,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Candroid.credentials.CreateCredentialResponse,%20android.credentials.CreateCredentialException%3E)" title="Reference documentation">Java documentation for <code>android.credentials.CredentialManager.createCredential(android.content.Context, android.credentials.CreateCredentialRequest, android.os.CancellationSignal, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;android.credentials.CreateCredentialResponse, android.credentials.CreateCredentialException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public void GetCredential (Android.Content.Context context, Android.Credentials.GetCredentialRequest request, Android.OS.CancellationSignal? cancellationSignal, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCredential(class Android.Content.Context context, class Android.Credentials.GetCredentialRequest request, class Android.OS.CancellationSignal cancellationSignal, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Credentials.CredentialManager.GetCredential(Android.Content.Context,Android.Credentials.GetCredentialRequest,Android.OS.CancellationSignal,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="member this.GetCredential : Android.Content.Context * Android.Credentials.GetCredentialRequest * Android.OS.CancellationSignal * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="credentialManager.GetCredential (context, request, cancellationSignal, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCredential", "(Landroid/content/Context;Landroid/credentials/GetCredentialRequest;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCredential", "(Landroid/content/Context;Landroid/credentials/GetCredentialRequest;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="request" Type="Android.Credentials.GetCredentialRequest" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="context">the context used to launch any UI needed; use an activity context to make sure
                           the UI will be launched within the same task stack</param>
        <param name="request">the request specifying type(s) of credentials to get from the user</param>
        <param name="cancellationSignal">an optional signal that allows for cancelling this call</param>
        <param name="executor">the callback will take place on this <c>Executor</c></param>
        <param name="callback">the callback invoked when the request succeeds or fails</param>
        <summary>Launches the necessary flows to retrieve an app credential from the user.</summary>
        <remarks>
          <para>Launches the necessary flows to retrieve an app credential from the user.</para>
          <para>The execution can potentially launch UI flows to collect user consent to using a
            credential, display a picker when multiple credentials exist, etc.
            Callers (e.g. browsers) may optionally set origin in <c>GetCredentialRequest</c> for an
            app different from their own, to be able to get credentials on behalf of that app. They would
            need additional permission <c>CREDENTIAL_MANAGER_SET_ORIGIN</c>
            to use this functionality</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/credentials/CredentialManager#getCredential(android.content.Context,%20android.credentials.GetCredentialRequest,%20android.os.CancellationSignal,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Candroid.credentials.GetCredentialResponse,%20android.credentials.GetCredentialException%3E)" title="Reference documentation">Java documentation for <code>android.credentials.CredentialManager.getCredential(android.content.Context, android.credentials.GetCredentialRequest, android.os.CancellationSignal, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;android.credentials.GetCredentialResponse, android.credentials.GetCredentialException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCredential">
      <MemberSignature Language="C#" Value="public void GetCredential (Android.Content.Context context, Android.Credentials.PrepareGetCredentialResponse.PendingGetCredentialHandle pendingGetCredentialHandle, Android.OS.CancellationSignal? cancellationSignal, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCredential(class Android.Content.Context context, class Android.Credentials.PrepareGetCredentialResponse/PendingGetCredentialHandle pendingGetCredentialHandle, class Android.OS.CancellationSignal cancellationSignal, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Credentials.CredentialManager.GetCredential(Android.Content.Context,Android.Credentials.PrepareGetCredentialResponse.PendingGetCredentialHandle,Android.OS.CancellationSignal,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="member this.GetCredential : Android.Content.Context * Android.Credentials.PrepareGetCredentialResponse.PendingGetCredentialHandle * Android.OS.CancellationSignal * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="credentialManager.GetCredential (context, pendingGetCredentialHandle, cancellationSignal, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCredential", "(Landroid/content/Context;Landroid/credentials/PrepareGetCredentialResponse$PendingGetCredentialHandle;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCredential", "(Landroid/content/Context;Landroid/credentials/PrepareGetCredentialResponse$PendingGetCredentialHandle;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
        <Parameter Name="pendingGetCredentialHandle" Type="Android.Credentials.PrepareGetCredentialResponse+PendingGetCredentialHandle" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <param name="pendingGetCredentialHandle">To be added.</param>
        <param name="cancellationSignal">To be added.</param>
        <param name="executor">To be added.</param>
        <param name="callback">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCredentialProviderService">
      <MemberSignature Language="C#" Value="public bool IsEnabledCredentialProviderService (Android.Content.ComponentName componentName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEnabledCredentialProviderService(class Android.Content.ComponentName componentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Credentials.CredentialManager.IsEnabledCredentialProviderService(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCredentialProviderService : Android.Content.ComponentName -&gt; bool" Usage="credentialManager.IsEnabledCredentialProviderService componentName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isEnabledCredentialProviderService", "(Landroid/content/ComponentName;)Z", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isEnabledCredentialProviderService", "(Landroid/content/ComponentName;)Z", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="componentName">the component name to check is enabled</param>
        <summary>Returns <c>true</c> if the calling application provides a CredentialProviderService that is
            enabled for the current user, or <c>false</c> otherwise.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns <c>true</c> if the calling application provides a CredentialProviderService that is
            enabled for the current user, or <c>false</c> otherwise. CredentialProviderServices are
            enabled on a per-service basis so the individual component name of the service should be
            passed in here.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/credentials/CredentialManager#isEnabledCredentialProviderService(android.content.ComponentName)" title="Reference documentation">Java documentation for <code>android.credentials.CredentialManager.isEnabledCredentialProviderService(android.content.ComponentName)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Credentials.CredentialManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Credentials.CredentialManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrepareGetCredential">
      <MemberSignature Language="C#" Value="public void PrepareGetCredential (Android.Credentials.GetCredentialRequest request, Android.OS.CancellationSignal? cancellationSignal, Java.Util.Concurrent.IExecutor executor, Android.OS.IOutcomeReceiver callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrepareGetCredential(class Android.Credentials.GetCredentialRequest request, class Android.OS.CancellationSignal cancellationSignal, class Java.Util.Concurrent.IExecutor executor, class Android.OS.IOutcomeReceiver callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Credentials.CredentialManager.PrepareGetCredential(Android.Credentials.GetCredentialRequest,Android.OS.CancellationSignal,Java.Util.Concurrent.IExecutor,Android.OS.IOutcomeReceiver)" />
      <MemberSignature Language="F#" Value="member this.PrepareGetCredential : Android.Credentials.GetCredentialRequest * Android.OS.CancellationSignal * Java.Util.Concurrent.IExecutor * Android.OS.IOutcomeReceiver -&gt; unit" Usage="credentialManager.PrepareGetCredential (request, cancellationSignal, executor, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("prepareGetCredential", "(Landroid/credentials/GetCredentialRequest;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("prepareGetCredential", "(Landroid/credentials/GetCredentialRequest;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroid/os/OutcomeReceiver;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Credentials.GetCredentialRequest" />
        <Parameter Name="cancellationSignal" Type="Android.OS.CancellationSignal" />
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="callback" Type="Android.OS.IOutcomeReceiver" />
      </Parameters>
      <Docs>
        <param name="request">the request specifying type(s) of credentials to get from the user</param>
        <param name="cancellationSignal">an optional signal that allows for cancelling this call</param>
        <param name="executor">the callback will take place on this <c>Executor</c></param>
        <param name="callback">the callback invoked when the request succeeds or fails</param>
        <summary>Prepare for a get-credential operation.</summary>
        <remarks>
          <para>Prepare for a get-credential operation. Returns a <c>PrepareGetCredentialResponse</c> that
            can launch the credential retrieval UI flow to request a user credential for your app.</para>
          <para>This API doesn't invoke any UI. It only performs the preparation work so that you can
            later launch the remaining get-credential operation (involves UIs) through the <c>#getCredential(PrepareGetCredentialResponse.PendingGetCredentialHandle, Context,
            CancellationSignal, Executor, OutcomeReceiver)</c> API which incurs less latency compared to
            the <c>#getCredential(GetCredentialRequest, Context, CancellationSignal, Executor,
            OutcomeReceiver)</c> API that executes the whole operation in one call.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/credentials/CredentialManager#prepareGetCredential(android.credentials.GetCredentialRequest,%20android.os.CancellationSignal,%20java.util.concurrent.Executor,%20android.os.OutcomeReceiver%3Candroid.credentials.PrepareGetCredentialResponse,%20android.credentials.GetCredentialException%3E)" title="Reference documentation">Java documentation for <code>android.credentials.CredentialManager.prepareGetCredential(android.credentials.GetCredentialRequest, android.os.CancellationSignal, java.util.concurrent.Executor, android.os.OutcomeReceiver&lt;android.credentials.PrepareGetCredentialResponse, android.credentials.GetCredentialException&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterCredentialDescription">
      <MemberSignature Language="C#" Value="public void RegisterCredentialDescription (Android.Credentials.RegisterCredentialDescriptionRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterCredentialDescription(class Android.Credentials.RegisterCredentialDescriptionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Credentials.CredentialManager.RegisterCredentialDescription(Android.Credentials.RegisterCredentialDescriptionRequest)" />
      <MemberSignature Language="F#" Value="member this.RegisterCredentialDescription : Android.Credentials.RegisterCredentialDescriptionRequest -&gt; unit" Usage="credentialManager.RegisterCredentialDescription request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("registerCredentialDescription", "(Landroid/credentials/RegisterCredentialDescriptionRequest;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("registerCredentialDescription", "(Landroid/credentials/RegisterCredentialDescriptionRequest;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Credentials.RegisterCredentialDescriptionRequest" />
      </Parameters>
      <Docs>
        <param name="request">the request data</param>
        <summary>Registers a <c>CredentialDescription</c> for an actively provisioned <c>Credential</c> a
            CredentialProvider has.</summary>
        <remarks>
          <para>Registers a <c>CredentialDescription</c> for an actively provisioned <c>Credential</c> a
            CredentialProvider has. This registry will then be used to determine where to fetch the
            requested <c>Credential</c> from. Not all credential types will be supported. The
            distinction will be made by the JetPack layer. For the types that are supported, JetPack will
            add a new key-value pair into <c>GetCredentialRequest</c>. These will not be persistent on
            the device. The Credential Providers will need to call this API again upon device reboot.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/credentials/CredentialManager#registerCredentialDescription(android.credentials.RegisterCredentialDescriptionRequest)" title="Reference documentation">Java documentation for <code>android.credentials.CredentialManager.registerCredentialDescription(android.credentials.RegisterCredentialDescriptionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Credentials.CredentialManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Credentials.CredentialManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Credentials.CredentialManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Credentials.CredentialManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterCredentialDescription">
      <MemberSignature Language="C#" Value="public void UnregisterCredentialDescription (Android.Credentials.UnregisterCredentialDescriptionRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterCredentialDescription(class Android.Credentials.UnregisterCredentialDescriptionRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Credentials.CredentialManager.UnregisterCredentialDescription(Android.Credentials.UnregisterCredentialDescriptionRequest)" />
      <MemberSignature Language="F#" Value="member this.UnregisterCredentialDescription : Android.Credentials.UnregisterCredentialDescriptionRequest -&gt; unit" Usage="credentialManager.UnregisterCredentialDescription request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unregisterCredentialDescription", "(Landroid/credentials/UnregisterCredentialDescriptionRequest;)V", "", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unregisterCredentialDescription", "(Landroid/credentials/UnregisterCredentialDescriptionRequest;)V", "", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="Android.Credentials.UnregisterCredentialDescriptionRequest" />
      </Parameters>
      <Docs>
        <param name="request">the request data</param>
        <summary>Unregisters a <c>CredentialDescription</c> for an actively provisioned <c>Credential</c>
            that has been registered previously.</summary>
        <remarks>
          <para>Unregisters a <c>CredentialDescription</c> for an actively provisioned <c>Credential</c>
            that has been registered previously.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/credentials/CredentialManager#unregisterCredentialDescription(android.credentials.UnregisterCredentialDescriptionRequest)" title="Reference documentation">Java documentation for <code>android.credentials.CredentialManager.unregisterCredentialDescription(android.credentials.UnregisterCredentialDescriptionRequest)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
