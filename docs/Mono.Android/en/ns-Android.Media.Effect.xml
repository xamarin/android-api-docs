<Namespace Name="Android.Media.Effect">
  <Docs>
    <summary>Provides classes that allow you to apply a variety of visual effects to images and
videos.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Provides classes that allow you to apply a variety of visual effects to images and
videos. For example, you can easily fix red-eye, convert an image to grayscale,
adjust brightness, adjust saturation, rotate an image, apply a fisheye effect, and much more. The
system performs all effects processing on the GPU to obtain maximum performance.</para>
      <para tool="javadoc-to-mdoc">For maximum performance, effects are applied directly to OpenGL textures, so your application
must have a valid OpenGL context before it can use the effects APIs. The textures to which you apply
effects may be from bitmaps, videos or even the camera. However, there are certain restrictions that
textures must meet:<list type="number"><item><term>They must be bound to a <c><see cref="F:Android.Opengl.GLES20.GlTexture2d" /></c> texture image</term></item><item><term>They must contain at least one mipmap level</term></item></list></para>
      <para tool="javadoc-to-mdoc">An <c><see cref="T:Android.Media.Effect.Effect" /></c> object defines a single media effect that you can apply to
an image frame. The basic workflow to create an <c><see cref="T:Android.Media.Effect.Effect" /></c> is:</para>
      <list type="number">
        <item>
          <term>Call <c><see cref="M:Android.Media.Effect.EffectContext.CreateWithCurrentGlContext" /></c> from your OpenGL ES 2.0 context.</term>
        </item>
        <item>
          <term>Use the returned <c><see cref="T:Android.Media.Effect.EffectContext" /></c> to call <c><see cref="P:Android.Media.Effect.EffectContext.Factory" /></c>, which returns an instance
of <c><see cref="T:Android.Media.Effect.EffectFactory" /></c>.</term>
        </item>
        <item>
          <term>Call <c><see cref="M:Android.Media.Effect.EffectFactory.CreateEffect(System.String)" /></c>, passing it an
effect name from @link android.media.effect.EffectFactory}, such as <c><see cref="F:Android.Media.Effect.EffectFactory.EffectFisheye" /></c> or <c><see cref="F:Android.Media.Effect.EffectFactory.EffectVignette" /></c>.</term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">You can adjust an effectâ€™s parameters by calling <c><see cref="M:Android.Media.Effect.Effect.SetParameter(System.String,Java.Lang.Object)" /></c> and passing a parameter name and parameter value. Each type of effect accepts
different parameters, which are documented with the effect name. For example, <c><see cref="F:Android.Media.Effect.EffectFactory.EffectFisheye" /></c> has one parameter for the <c>scale</c> of the
distortion.</para>
      <para tool="javadoc-to-mdoc">To apply an effect on a texture, call <c><see cref="M:Android.Media.Effect.Effect.Apply(System.Int32,System.Int32,System.Int32,System.Int32)" /></c> on the
<c><see cref="T:Android.Media.Effect.Effect" /></c> and pass in the input texture, its width and height, and the output
texture. The input texture  must be bound to a <c><see cref="F:Android.Opengl.GLES20.GlTexture2d" /></c> texture
image (usually done by calling the <c><see cref="M:Android.Opengl.GLES20.GlTexImage2D(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" /></c>
function). You may provide multiple mipmap levels. If the output texture has not been bound to a
texture image, it will be automatically bound by the effect as a <c><see cref="F:Android.Opengl.GLES20.GlTexture2d" /></c> and with one mipmap level (0), which will have the same
size as the input.</para>
      <para tool="javadoc-to-mdoc">
        <i>Note:</i> All effects listed in <c><see cref="T:Android.Media.Effect.EffectFactory" /></c> are guaranteed to be supported. However, some additional effects
available from external libraries are not supported by all devices, so you must first check if the
desired effect from the external library is supported by calling <c><see cref="M:Android.Media.Effect.EffectFactory.IsEffectSupported(System.String)" /></c>.</para>
    </remarks>
  </Docs>
</Namespace>
