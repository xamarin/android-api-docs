<Type Name="BoringLayout" FullName="Android.Text.BoringLayout">
  <TypeSignature Language="C#" Value="public class BoringLayout : Android.Text.Layout, Android.Text.TextUtils.IEllipsizeCallback, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoringLayout extends Android.Text.Layout implements class Android.Runtime.IJavaObject, class Android.Text.TextUtils/IEllipsizeCallback, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Text.BoringLayout" />
  <TypeSignature Language="F#" Value="type BoringLayout = class&#xA;    inherit Layout&#xA;    interface TextUtils.IEllipsizeCallback&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Text.Layout</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Text.TextUtils+IEllipsizeCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/text/BoringLayout", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A BoringLayout is a very simple Layout implementation for text that
            fits on a single line and is all left-to-right characters.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/BoringLayout" title="Reference documentation">Java documentation for <code>android.text.BoringLayout</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BoringLayout (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Text.BoringLayout : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Text.BoringLayout" Usage="new Android.Text.BoringLayout (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoringLayout (Java.Lang.ICharSequence source, Android.Text.TextPaint paint, int outerwidth, Android.Text.Layout.Alignment align, float spacingMult, float spacingAdd, Android.Text.BoringLayout.Metrics metrics, bool includePad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence source, class Android.Text.TextPaint paint, int32 outerwidth, class Android.Text.Layout/Alignment align, float32 spacingMult, float32 spacingAdd, class Android.Text.BoringLayout/Metrics metrics, bool includePad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.#ctor(Java.Lang.ICharSequence,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,Android.Text.BoringLayout.Metrics,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Android.Text.BoringLayout : Java.Lang.ICharSequence * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool -&gt; Android.Text.BoringLayout" Usage="new Android.Text.BoringLayout (source, paint, outerwidth, align, spacingmult, spacingadd, metrics, includepad)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">the text to render</param>
        <param name="paint">the default paint for the layout</param>
        <param name="outerwidth">the wrapping width for the text</param>
        <param name="align">whether to left, right, or center the text</param>
        <param name="spacingMult">this value is no longer used by BoringLayout</param>
        <param name="spacingAdd">this value is no longer used by BoringLayout</param>
        <param name="metrics">
          <c>#Metrics</c> instance that contains information about FontMetrics and
                           line width</param>
        <param name="includePad">set whether to include extra space beyond font ascent and descent which is
                              needed to avoid clipping in some scripts</param>
        <summary>
        </summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#BoringLayout(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float,%20android.text.Metrics,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.BoringLayout(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float, android.text.Metrics, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoringLayout (string source, Android.Text.TextPaint paint, int outerwidth, Android.Text.Layout.Alignment align, float spacingMult, float spacingAdd, Android.Text.BoringLayout.Metrics metrics, bool includePad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source, class Android.Text.TextPaint paint, int32 outerwidth, class Android.Text.Layout/Alignment align, float32 spacingMult, float32 spacingAdd, class Android.Text.BoringLayout/Metrics metrics, bool includePad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.#ctor(System.String,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,Android.Text.BoringLayout.Metrics,System.Boolean)" />
      <MemberSignature Language="F#" Value="new Android.Text.BoringLayout : string * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool -&gt; Android.Text.BoringLayout" Usage="new Android.Text.BoringLayout (source, paint, outerwidth, align, spacingmult, spacingadd, metrics, includepad)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;Z)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="outerwidth">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingMult">To be added.</param>
        <param name="spacingAdd">To be added.</param>
        <param name="metrics">To be added.</param>
        <param name="includePad">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoringLayout (Java.Lang.ICharSequence source, Android.Text.TextPaint paint, int outerWidth, Android.Text.Layout.Alignment align, float spacingMult, float spacingAdd, Android.Text.BoringLayout.Metrics metrics, bool includePad, Android.Text.TextUtils.TruncateAt ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence source, class Android.Text.TextPaint paint, int32 outerWidth, class Android.Text.Layout/Alignment align, float32 spacingMult, float32 spacingAdd, class Android.Text.BoringLayout/Metrics metrics, bool includePad, class Android.Text.TextUtils/TruncateAt ellipsize, int32 ellipsizedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.#ctor(Java.Lang.ICharSequence,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,Android.Text.BoringLayout.Metrics,System.Boolean,Android.Text.TextUtils.TruncateAt,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Text.BoringLayout : Java.Lang.ICharSequence * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool * Android.Text.TextUtils.TruncateAt * int -&gt; Android.Text.BoringLayout" Usage="new Android.Text.BoringLayout (source, paint, outerwidth, align, spacingmult, spacingadd, metrics, includepad, ellipsize, ellipsizedWidth)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;ZLandroid/text/TextUtils$TruncateAt;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
        <Parameter Name="includepad" Type="System.Boolean" />
        <Parameter Name="ellipsize" Type="Android.Text.TextUtils+TruncateAt" />
        <Parameter Name="ellipsizedWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">the text to render</param>
        <param name="paint">the default paint for the layout</param>
        <param name="outerWidth">To be added.</param>
        <param name="align">whether to left, right, or center the text</param>
        <param name="spacingMult">this value is no longer used by BoringLayout</param>
        <param name="spacingAdd">this value is no longer used by BoringLayout</param>
        <param name="metrics">
          <c>#Metrics</c> instance that contains information about FontMetrics and
                           line width</param>
        <param name="includePad">set whether to include extra space beyond font ascent and descent which is
                              needed to avoid clipping in some scripts</param>
        <param name="ellipsize">To be added.</param>
        <param name="ellipsizedWidth">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#BoringLayout(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float,%20android.text.Metrics,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.BoringLayout(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float, android.text.Metrics, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoringLayout (string source, Android.Text.TextPaint paint, int outerWidth, Android.Text.Layout.Alignment align, float spacingMult, float spacingAdd, Android.Text.BoringLayout.Metrics metrics, bool includePad, Android.Text.TextUtils.TruncateAt ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source, class Android.Text.TextPaint paint, int32 outerWidth, class Android.Text.Layout/Alignment align, float32 spacingMult, float32 spacingAdd, class Android.Text.BoringLayout/Metrics metrics, bool includePad, class Android.Text.TextUtils/TruncateAt ellipsize, int32 ellipsizedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.#ctor(System.String,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,Android.Text.BoringLayout.Metrics,System.Boolean,Android.Text.TextUtils.TruncateAt,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Text.BoringLayout : string * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool * Android.Text.TextUtils.TruncateAt * int -&gt; Android.Text.BoringLayout" Usage="new Android.Text.BoringLayout (source, paint, outerwidth, align, spacingmult, spacingadd, metrics, includepad, ellipsize, ellipsizedWidth)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;ZLandroid/text/TextUtils$TruncateAt;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
        <Parameter Name="includepad" Type="System.Boolean" />
        <Parameter Name="ellipsize" Type="Android.Text.TextUtils+TruncateAt" />
        <Parameter Name="ellipsizedWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="outerWidth">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingMult">To be added.</param>
        <param name="spacingAdd">To be added.</param>
        <param name="metrics">To be added.</param>
        <param name="includePad">To be added.</param>
        <param name="ellipsize">To be added.</param>
        <param name="ellipsizedWidth">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BottomPadding">
      <MemberSignature Language="C#" Value="public override int BottomPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BottomPadding" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BoringLayout.BottomPadding" />
      <MemberSignature Language="F#" Value="member this.BottomPadding : int" Usage="Android.Text.BoringLayout.BottomPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBottomPadding", "()I", "GetGetBottomPaddingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of extra pixels of descent padding in the
 bottom line of the Layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Ellipsized">
      <MemberSignature Language="C#" Value="public virtual void Ellipsized (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Ellipsized(int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.Ellipsized(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Ellipsized : int * int -&gt; unit&#xA;override this.Ellipsized : int * int -&gt; unit" Usage="boringLayout.Ellipsized (start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ellipsized", "(II)V", "GetEllipsized_IIHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>Callback for the ellipsizer to report what region it ellipsized.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#ellipsized(int,%20int)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.ellipsized(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
      <Implements>
        <InterfaceMember>M:Android.Text.TextUtils.IEllipsizeCallback.Ellipsized(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
    </Member>
    <Member MemberName="GetEllipsisCount">
      <MemberSignature Language="C#" Value="public override int GetEllipsisCount (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEllipsisCount(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.GetEllipsisCount(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetEllipsisCount : int -&gt; int" Usage="boringLayout.GetEllipsisCount line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getEllipsisCount", "(I)I", "GetGetEllipsisCount_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns the number of characters to be ellipsized away, or 0 if
 no ellipsis is to take place.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEllipsisStart">
      <MemberSignature Language="C#" Value="public override int GetEllipsisStart (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEllipsisStart(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.GetEllipsisStart(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetEllipsisStart : int -&gt; int" Usage="boringLayout.GetEllipsisStart line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getEllipsisStart", "(I)I", "GetGetEllipsisStart_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the offset of the first character to be ellipsized away,
 relative to the start of the line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineContainsTab">
      <MemberSignature Language="C#" Value="public override bool GetLineContainsTab (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetLineContainsTab(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.GetLineContainsTab(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetLineContainsTab : int -&gt; bool" Usage="boringLayout.GetLineContainsTab line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLineContainsTab", "(I)Z", "GetGetLineContainsTab_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns whether the specified line contains one or more
 characters that need to be handled specially, like tabs
 or emoji.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineDescent">
      <MemberSignature Language="C#" Value="public override int GetLineDescent (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineDescent(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.GetLineDescent(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetLineDescent : int -&gt; int" Usage="boringLayout.GetLineDescent line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLineDescent", "(I)I", "GetGetLineDescent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the descent of the specified line(0&amp;hellip;getLineCount() - 1).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineDirections">
      <MemberSignature Language="C#" Value="public override sealed Android.Text.Layout.Directions GetLineDirections (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Text.Layout/Directions GetLineDirections(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.GetLineDirections(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetLineDirections : int -&gt; Android.Text.Layout.Directions" Usage="boringLayout.GetLineDirections line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLineDirections", "(I)Landroid/text/Layout$Directions;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Layout+Directions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns the directional run information for the specified line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineStart">
      <MemberSignature Language="C#" Value="public override int GetLineStart (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineStart(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.GetLineStart(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetLineStart : int -&gt; int" Usage="boringLayout.GetLineStart line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLineStart", "(I)I", "GetGetLineStart_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the text offset of the beginning of the specified line (
 0&amp;hellip;getLineCount()).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineTop">
      <MemberSignature Language="C#" Value="public override int GetLineTop (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineTop(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.GetLineTop(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetLineTop : int -&gt; int" Usage="boringLayout.GetLineTop line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLineTop", "(I)I", "GetGetLineTop_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the vertical position of the top of the specified line
 (0&amp;hellip;getLineCount()).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetParagraphDirection">
      <MemberSignature Language="C#" Value="public override Android.Text.TextLayoutDirection GetParagraphDirection (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Text.TextLayoutDirection GetParagraphDirection(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.GetParagraphDirection(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetParagraphDirection : int -&gt; Android.Text.TextLayoutDirection" Usage="boringLayout.GetParagraphDirection line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getParagraphDirection", "(I)I", "GetGetParagraphDirection_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.TextLayoutDirection</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInLongSummaries">To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsBoring">
      <MemberSignature Language="C#" Value="public static Android.Text.BoringLayout.Metrics IsBoring (Java.Lang.ICharSequence text, Android.Text.TextPaint paint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.BoringLayout/Metrics IsBoring(class Java.Lang.ICharSequence text, class Android.Text.TextPaint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.IsBoring(Java.Lang.ICharSequence,Android.Text.TextPaint)" />
      <MemberSignature Language="F#" Value="static member IsBoring : Java.Lang.ICharSequence * Android.Text.TextPaint -&gt; Android.Text.BoringLayout.Metrics" Usage="Android.Text.BoringLayout.IsBoring (text, paint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isBoring", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;)Landroid/text/BoringLayout$Metrics;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.BoringLayout+Metrics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
      </Parameters>
      <Docs>
        <param name="text">a text</param>
        <param name="paint">a paint</param>
        <summary>Determine and compute metrics if given text can be handled by BoringLayout.</summary>
        <returns>layout metric for the given text. null if given text is unable to be handled by
                    BoringLayout.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#isBoring(java.lang.CharSequence,%20android.text.TextPaint)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.isBoring(java.lang.CharSequence, android.text.TextPaint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsBoring">
      <MemberSignature Language="C#" Value="public static Android.Text.BoringLayout.Metrics IsBoring (string text, Android.Text.TextPaint paint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.BoringLayout/Metrics IsBoring(string text, class Android.Text.TextPaint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.IsBoring(System.String,Android.Text.TextPaint)" />
      <MemberSignature Language="F#" Value="static member IsBoring : string * Android.Text.TextPaint -&gt; Android.Text.BoringLayout.Metrics" Usage="Android.Text.BoringLayout.IsBoring (text, paint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Text.BoringLayout+Metrics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
      </Parameters>
      <Docs>
        <param name="text">a text</param>
        <param name="paint">a paint</param>
        <summary>Determine and compute metrics if given text can be handled by BoringLayout.</summary>
        <returns>layout metric for the given text. null if given text is unable to be handled by
                    BoringLayout.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#isBoring(java.lang.CharSequence,%20android.text.TextPaint)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.isBoring(java.lang.CharSequence, android.text.TextPaint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBoring">
      <MemberSignature Language="C#" Value="public static Android.Text.BoringLayout.Metrics IsBoring (Java.Lang.ICharSequence text, Android.Text.TextPaint paint, Android.Text.BoringLayout.Metrics metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.BoringLayout/Metrics IsBoring(class Java.Lang.ICharSequence text, class Android.Text.TextPaint paint, class Android.Text.BoringLayout/Metrics metrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.IsBoring(Java.Lang.ICharSequence,Android.Text.TextPaint,Android.Text.BoringLayout.Metrics)" />
      <MemberSignature Language="F#" Value="static member IsBoring : Java.Lang.ICharSequence * Android.Text.TextPaint * Android.Text.BoringLayout.Metrics -&gt; Android.Text.BoringLayout.Metrics" Usage="Android.Text.BoringLayout.IsBoring (text, paint, metrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isBoring", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;Landroid/text/BoringLayout$Metrics;)Landroid/text/BoringLayout$Metrics;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.BoringLayout+Metrics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
      </Parameters>
      <Docs>
        <param name="text">a text</param>
        <param name="paint">a paint</param>
        <param name="metrics">To be added.</param>
        <summary>Determine and compute metrics if given text can be handled by BoringLayout.</summary>
        <returns>layout metric for the given text. null if given text is unable to be handled by
                    BoringLayout.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#isBoring(java.lang.CharSequence,%20android.text.TextPaint)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.isBoring(java.lang.CharSequence, android.text.TextPaint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsBoring">
      <MemberSignature Language="C#" Value="public static Android.Text.BoringLayout.Metrics IsBoring (string text, Android.Text.TextPaint paint, Android.Text.BoringLayout.Metrics metrics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.BoringLayout/Metrics IsBoring(string text, class Android.Text.TextPaint paint, class Android.Text.BoringLayout/Metrics metrics) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.IsBoring(System.String,Android.Text.TextPaint,Android.Text.BoringLayout.Metrics)" />
      <MemberSignature Language="F#" Value="static member IsBoring : string * Android.Text.TextPaint * Android.Text.BoringLayout.Metrics -&gt; Android.Text.BoringLayout.Metrics" Usage="Android.Text.BoringLayout.IsBoring (text, paint, metrics)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Text.BoringLayout+Metrics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
      </Parameters>
      <Docs>
        <param name="text">a text</param>
        <param name="paint">a paint</param>
        <param name="metrics">To be added.</param>
        <summary>Determine and compute metrics if given text can be handled by BoringLayout.</summary>
        <returns>layout metric for the given text. null if given text is unable to be handled by
                    BoringLayout.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#isBoring(java.lang.CharSequence,%20android.text.TextPaint)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.isBoring(java.lang.CharSequence, android.text.TextPaint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BoringLayout.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Text.BoringLayout.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="C#" Value="public override int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BoringLayout.LineCount" />
      <MemberSignature Language="F#" Value="member this.LineCount : int" Usage="Android.Text.BoringLayout.LineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLineCount", "()I", "GetGetLineCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of lines of text in this layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Make">
      <MemberSignature Language="C#" Value="public static Android.Text.BoringLayout Make (Java.Lang.ICharSequence source, Android.Text.TextPaint paint, int outerWidth, Android.Text.Layout.Alignment align, float spacingMult, float spacingAdd, Android.Text.BoringLayout.Metrics metrics, bool includePad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.BoringLayout Make(class Java.Lang.ICharSequence source, class Android.Text.TextPaint paint, int32 outerWidth, class Android.Text.Layout/Alignment align, float32 spacingMult, float32 spacingAdd, class Android.Text.BoringLayout/Metrics metrics, bool includePad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.Make(Java.Lang.ICharSequence,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,Android.Text.BoringLayout.Metrics,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member Make : Java.Lang.ICharSequence * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool -&gt; Android.Text.BoringLayout" Usage="Android.Text.BoringLayout.Make (source, paint, outerwidth, align, spacingmult, spacingadd, metrics, includepad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("make", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;Z)Landroid/text/BoringLayout;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.BoringLayout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">the text to render</param>
        <param name="paint">the default paint for the layout</param>
        <param name="outerWidth">the wrapping width for the text</param>
        <param name="align">whether to left, right, or center the text</param>
        <param name="spacingMult">this value is no longer used by BoringLayout</param>
        <param name="spacingAdd">this value is no longer used by BoringLayout</param>
        <param name="metrics">
          <c>#Metrics</c> instance that contains information about FontMetrics and
                           line width</param>
        <param name="includePad">set whether to include extra space beyond font ascent and descent which is
                              needed to avoid clipping in some scripts</param>
        <summary>Utility function to construct a BoringLayout instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#make(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float,%20android.text.Metrics,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.make(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float, android.text.Metrics, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Make">
      <MemberSignature Language="C#" Value="public static Android.Text.BoringLayout Make (string source, Android.Text.TextPaint paint, int outerWidth, Android.Text.Layout.Alignment align, float spacingMult, float spacingAdd, Android.Text.BoringLayout.Metrics metrics, bool includePad);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.BoringLayout Make(string source, class Android.Text.TextPaint paint, int32 outerWidth, class Android.Text.Layout/Alignment align, float32 spacingMult, float32 spacingAdd, class Android.Text.BoringLayout/Metrics metrics, bool includePad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.Make(System.String,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,Android.Text.BoringLayout.Metrics,System.Boolean)" />
      <MemberSignature Language="F#" Value="static member Make : string * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool -&gt; Android.Text.BoringLayout" Usage="Android.Text.BoringLayout.Make (source, paint, outerwidth, align, spacingmult, spacingadd, metrics, includepad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Text.BoringLayout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">the text to render</param>
        <param name="paint">the default paint for the layout</param>
        <param name="outerWidth">the wrapping width for the text</param>
        <param name="align">whether to left, right, or center the text</param>
        <param name="spacingMult">this value is no longer used by BoringLayout</param>
        <param name="spacingAdd">this value is no longer used by BoringLayout</param>
        <param name="metrics">
          <c>#Metrics</c> instance that contains information about FontMetrics and
                           line width</param>
        <param name="includePad">set whether to include extra space beyond font ascent and descent which is
                              needed to avoid clipping in some scripts</param>
        <summary>Utility function to construct a BoringLayout instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#make(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float,%20android.text.Metrics,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.make(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float, android.text.Metrics, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Make">
      <MemberSignature Language="C#" Value="public static Android.Text.BoringLayout Make (Java.Lang.ICharSequence source, Android.Text.TextPaint paint, int outerWidth, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, Android.Text.BoringLayout.Metrics metrics, bool includePad, Android.Text.TextUtils.TruncateAt ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.BoringLayout Make(class Java.Lang.ICharSequence source, class Android.Text.TextPaint paint, int32 outerWidth, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, class Android.Text.BoringLayout/Metrics metrics, bool includePad, class Android.Text.TextUtils/TruncateAt ellipsize, int32 ellipsizedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.Make(Java.Lang.ICharSequence,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,Android.Text.BoringLayout.Metrics,System.Boolean,Android.Text.TextUtils.TruncateAt,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Make : Java.Lang.ICharSequence * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool * Android.Text.TextUtils.TruncateAt * int -&gt; Android.Text.BoringLayout" Usage="Android.Text.BoringLayout.Make (source, paint, outerwidth, align, spacingmult, spacingadd, metrics, includepad, ellipsize, ellipsizedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("make", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;ZLandroid/text/TextUtils$TruncateAt;I)Landroid/text/BoringLayout;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.BoringLayout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
        <Parameter Name="includepad" Type="System.Boolean" />
        <Parameter Name="ellipsize" Type="Android.Text.TextUtils+TruncateAt" />
        <Parameter Name="ellipsizedWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">the text to render</param>
        <param name="paint">the default paint for the layout</param>
        <param name="outerWidth">the wrapping width for the text</param>
        <param name="align">whether to left, right, or center the text</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="metrics">
          <c>#Metrics</c> instance that contains information about FontMetrics and
                           line width</param>
        <param name="includePad">set whether to include extra space beyond font ascent and descent which is
                              needed to avoid clipping in some scripts</param>
        <param name="ellipsize">To be added.</param>
        <param name="ellipsizedWidth">To be added.</param>
        <summary>Utility function to construct a BoringLayout instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#make(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float,%20android.text.Metrics,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.make(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float, android.text.Metrics, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Make">
      <MemberSignature Language="C#" Value="public static Android.Text.BoringLayout Make (string source, Android.Text.TextPaint paint, int outerWidth, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, Android.Text.BoringLayout.Metrics metrics, bool includePad, Android.Text.TextUtils.TruncateAt ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.BoringLayout Make(string source, class Android.Text.TextPaint paint, int32 outerWidth, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, class Android.Text.BoringLayout/Metrics metrics, bool includePad, class Android.Text.TextUtils/TruncateAt ellipsize, int32 ellipsizedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.Make(System.String,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,Android.Text.BoringLayout.Metrics,System.Boolean,Android.Text.TextUtils.TruncateAt,System.Int32)" />
      <MemberSignature Language="F#" Value="static member Make : string * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool * Android.Text.TextUtils.TruncateAt * int -&gt; Android.Text.BoringLayout" Usage="Android.Text.BoringLayout.Make (source, paint, outerwidth, align, spacingmult, spacingadd, metrics, includepad, ellipsize, ellipsizedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Text.BoringLayout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
        <Parameter Name="includepad" Type="System.Boolean" />
        <Parameter Name="ellipsize" Type="Android.Text.TextUtils+TruncateAt" />
        <Parameter Name="ellipsizedWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">the text to render</param>
        <param name="paint">the default paint for the layout</param>
        <param name="outerWidth">the wrapping width for the text</param>
        <param name="align">whether to left, right, or center the text</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="metrics">
          <c>#Metrics</c> instance that contains information about FontMetrics and
                           line width</param>
        <param name="includePad">set whether to include extra space beyond font ascent and descent which is
                              needed to avoid clipping in some scripts</param>
        <param name="ellipsize">To be added.</param>
        <param name="ellipsizedWidth">To be added.</param>
        <summary>Utility function to construct a BoringLayout instance.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#make(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float,%20android.text.Metrics,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.make(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float, android.text.Metrics, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceOrMake">
      <MemberSignature Language="C#" Value="public virtual Android.Text.BoringLayout ReplaceOrMake (Java.Lang.ICharSequence source, Android.Text.TextPaint paint, int outerwidth, Android.Text.Layout.Alignment align, float spacingMult, float spacingAdd, Android.Text.BoringLayout.Metrics metrics, bool includePad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.BoringLayout ReplaceOrMake(class Java.Lang.ICharSequence source, class Android.Text.TextPaint paint, int32 outerwidth, class Android.Text.Layout/Alignment align, float32 spacingMult, float32 spacingAdd, class Android.Text.BoringLayout/Metrics metrics, bool includePad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.ReplaceOrMake(Java.Lang.ICharSequence,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,Android.Text.BoringLayout.Metrics,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceOrMake : Java.Lang.ICharSequence * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool -&gt; Android.Text.BoringLayout&#xA;override this.ReplaceOrMake : Java.Lang.ICharSequence * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool -&gt; Android.Text.BoringLayout" Usage="boringLayout.ReplaceOrMake (source, paint, outerwidth, align, spacingmult, spacingadd, metrics, includepad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("replaceOrMake", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;Z)Landroid/text/BoringLayout;", "GetReplaceOrMake_Ljava_lang_CharSequence_Landroid_text_TextPaint_ILandroid_text_Layout_Alignment_FFLandroid_text_BoringLayout_Metrics_ZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.BoringLayout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">the text to render</param>
        <param name="paint">the default paint for the layout</param>
        <param name="outerwidth">the wrapping width for the text</param>
        <param name="align">whether to left, right, or center the text</param>
        <param name="spacingMult">this value is no longer used by BoringLayout</param>
        <param name="spacingAdd">this value is no longer used by BoringLayout</param>
        <param name="metrics">
          <c>#Metrics</c> instance that contains information about FontMetrics and
                           line width</param>
        <param name="includePad">set whether to include extra space beyond font ascent and descent which is
                              needed to avoid clipping in some scripts</param>
        <summary>Returns a BoringLayout for the specified text, potentially reusing
            this one if it is already suitable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#replaceOrMake(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float,%20android.text.Metrics,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.replaceOrMake(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float, android.text.Metrics, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReplaceOrMake">
      <MemberSignature Language="C#" Value="public Android.Text.BoringLayout ReplaceOrMake (string source, Android.Text.TextPaint paint, int outerwidth, Android.Text.Layout.Alignment align, float spacingMult, float spacingAdd, Android.Text.BoringLayout.Metrics metrics, bool includePad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Text.BoringLayout ReplaceOrMake(string source, class Android.Text.TextPaint paint, int32 outerwidth, class Android.Text.Layout/Alignment align, float32 spacingMult, float32 spacingAdd, class Android.Text.BoringLayout/Metrics metrics, bool includePad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.ReplaceOrMake(System.String,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,Android.Text.BoringLayout.Metrics,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.ReplaceOrMake : string * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool -&gt; Android.Text.BoringLayout" Usage="boringLayout.ReplaceOrMake (source, paint, outerwidth, align, spacingmult, spacingadd, metrics, includepad)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Text.BoringLayout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">the text to render</param>
        <param name="paint">the default paint for the layout</param>
        <param name="outerwidth">the wrapping width for the text</param>
        <param name="align">whether to left, right, or center the text</param>
        <param name="spacingMult">this value is no longer used by BoringLayout</param>
        <param name="spacingAdd">this value is no longer used by BoringLayout</param>
        <param name="metrics">
          <c>#Metrics</c> instance that contains information about FontMetrics and
                           line width</param>
        <param name="includePad">set whether to include extra space beyond font ascent and descent which is
                              needed to avoid clipping in some scripts</param>
        <summary>Returns a BoringLayout for the specified text, potentially reusing
            this one if it is already suitable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#replaceOrMake(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float,%20android.text.Metrics,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.replaceOrMake(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float, android.text.Metrics, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplaceOrMake">
      <MemberSignature Language="C#" Value="public virtual Android.Text.BoringLayout ReplaceOrMake (Java.Lang.ICharSequence source, Android.Text.TextPaint paint, int outerWidth, Android.Text.Layout.Alignment align, float spacingMult, float spacingAdd, Android.Text.BoringLayout.Metrics metrics, bool includePad, Android.Text.TextUtils.TruncateAt ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.BoringLayout ReplaceOrMake(class Java.Lang.ICharSequence source, class Android.Text.TextPaint paint, int32 outerWidth, class Android.Text.Layout/Alignment align, float32 spacingMult, float32 spacingAdd, class Android.Text.BoringLayout/Metrics metrics, bool includePad, class Android.Text.TextUtils/TruncateAt ellipsize, int32 ellipsizedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.ReplaceOrMake(Java.Lang.ICharSequence,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,Android.Text.BoringLayout.Metrics,System.Boolean,Android.Text.TextUtils.TruncateAt,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member ReplaceOrMake : Java.Lang.ICharSequence * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool * Android.Text.TextUtils.TruncateAt * int -&gt; Android.Text.BoringLayout&#xA;override this.ReplaceOrMake : Java.Lang.ICharSequence * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool * Android.Text.TextUtils.TruncateAt * int -&gt; Android.Text.BoringLayout" Usage="boringLayout.ReplaceOrMake (source, paint, outerwidth, align, spacingmult, spacingadd, metrics, includepad, ellipsize, ellipsizedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("replaceOrMake", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFLandroid/text/BoringLayout$Metrics;ZLandroid/text/TextUtils$TruncateAt;I)Landroid/text/BoringLayout;", "GetReplaceOrMake_Ljava_lang_CharSequence_Landroid_text_TextPaint_ILandroid_text_Layout_Alignment_FFLandroid_text_BoringLayout_Metrics_ZLandroid_text_TextUtils_TruncateAt_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.BoringLayout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
        <Parameter Name="includepad" Type="System.Boolean" />
        <Parameter Name="ellipsize" Type="Android.Text.TextUtils+TruncateAt" />
        <Parameter Name="ellipsizedWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">the text to render</param>
        <param name="paint">the default paint for the layout</param>
        <param name="outerWidth">To be added.</param>
        <param name="align">whether to left, right, or center the text</param>
        <param name="spacingMult">this value is no longer used by BoringLayout</param>
        <param name="spacingAdd">this value is no longer used by BoringLayout</param>
        <param name="metrics">
          <c>#Metrics</c> instance that contains information about FontMetrics and
                           line width</param>
        <param name="includePad">set whether to include extra space beyond font ascent and descent which is
                              needed to avoid clipping in some scripts</param>
        <param name="ellipsize">To be added.</param>
        <param name="ellipsizedWidth">To be added.</param>
        <summary>Returns a BoringLayout for the specified text, potentially reusing
            this one if it is already suitable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#replaceOrMake(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float,%20android.text.Metrics,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.replaceOrMake(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float, android.text.Metrics, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ReplaceOrMake">
      <MemberSignature Language="C#" Value="public Android.Text.BoringLayout ReplaceOrMake (string source, Android.Text.TextPaint paint, int outerWidth, Android.Text.Layout.Alignment align, float spacingMult, float spacingAdd, Android.Text.BoringLayout.Metrics metrics, bool includePad, Android.Text.TextUtils.TruncateAt ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Text.BoringLayout ReplaceOrMake(string source, class Android.Text.TextPaint paint, int32 outerWidth, class Android.Text.Layout/Alignment align, float32 spacingMult, float32 spacingAdd, class Android.Text.BoringLayout/Metrics metrics, bool includePad, class Android.Text.TextUtils/TruncateAt ellipsize, int32 ellipsizedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BoringLayout.ReplaceOrMake(System.String,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,Android.Text.BoringLayout.Metrics,System.Boolean,Android.Text.TextUtils.TruncateAt,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.ReplaceOrMake : string * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * Android.Text.BoringLayout.Metrics * bool * Android.Text.TextUtils.TruncateAt * int -&gt; Android.Text.BoringLayout" Usage="boringLayout.ReplaceOrMake (source, paint, outerwidth, align, spacingmult, spacingadd, metrics, includepad, ellipsize, ellipsizedWidth)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Text.BoringLayout</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="metrics" Type="Android.Text.BoringLayout+Metrics" />
        <Parameter Name="includepad" Type="System.Boolean" />
        <Parameter Name="ellipsize" Type="Android.Text.TextUtils+TruncateAt" />
        <Parameter Name="ellipsizedWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">the text to render</param>
        <param name="paint">the default paint for the layout</param>
        <param name="outerWidth">To be added.</param>
        <param name="align">whether to left, right, or center the text</param>
        <param name="spacingMult">this value is no longer used by BoringLayout</param>
        <param name="spacingAdd">this value is no longer used by BoringLayout</param>
        <param name="metrics">
          <c>#Metrics</c> instance that contains information about FontMetrics and
                           line width</param>
        <param name="includePad">set whether to include extra space beyond font ascent and descent which is
                              needed to avoid clipping in some scripts</param>
        <param name="ellipsize">To be added.</param>
        <param name="ellipsizedWidth">To be added.</param>
        <summary>Returns a BoringLayout for the specified text, potentially reusing
            this one if it is already suitable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BoringLayout#replaceOrMake(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float,%20android.text.Metrics,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BoringLayout.replaceOrMake(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float, android.text.Metrics, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BoringLayout.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Text.BoringLayout.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BoringLayout.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Text.BoringLayout.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopPadding">
      <MemberSignature Language="C#" Value="public override int TopPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TopPadding" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BoringLayout.TopPadding" />
      <MemberSignature Language="F#" Value="member this.TopPadding : int" Usage="Android.Text.BoringLayout.TopPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTopPadding", "()I", "GetGetTopPaddingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the (negative) number of extra pixels of ascent padding in the
 top line of the Layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
