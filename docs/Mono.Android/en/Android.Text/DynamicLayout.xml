<Type Name="DynamicLayout" FullName="Android.Text.DynamicLayout">
  <TypeSignature Language="C#" Value="public class DynamicLayout : Android.Text.Layout" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicLayout extends Android.Text.Layout" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Text.Layout</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/text/DynamicLayout", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>DynamicLayout is a text layout that updates itself as the text is edited.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">DynamicLayout is a text layout that updates itself as the text is edited.
 </para>
      <para tool="javadoc-to-mdoc">This is used by widgets to control text layout. You should not need
 to use this class directly unless you are implementing your own widget
 or custom display object, or need to call
 <c><see cref="M:Android.Graphics.Canvas.DrawText(Java.Lang.ICharSequence,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)" /></c> directly.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/text/DynamicLayout.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DynamicLayout (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicLayout (Java.Lang.ICharSequence base, Android.Text.TextPaint paint, int width, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence base, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <summary>Make a layout for the specified text that will be updated as
 the text is changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Make a layout for the specified text that will be updated as
 the text is changed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#DynamicLayout(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout.Alignment, float, float, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicLayout (string base, Android.Text.TextPaint paint, int width, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string base, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <summary>Make a layout for the specified text that will be updated as
 the text is changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Make a layout for the specified text that will be updated as
 the text is changed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#DynamicLayout(java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout.Alignment, float, float, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicLayout (Java.Lang.ICharSequence base, Java.Lang.ICharSequence display, Android.Text.TextPaint paint, int width, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence base, class Java.Lang.ICharSequence display, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="Java.Lang.ICharSequence" />
        <Parameter Name="display" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <param name="display">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <summary>Make a layout for the transformed text (password transformation
 being the primary example of a transformation)
 that will be updated as the base text is changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Make a layout for the transformed text (password transformation
 being the primary example of a transformation)
 that will be updated as the base text is changed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#DynamicLayout(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout.Alignment, float, float, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicLayout (string base, string display, Android.Text.TextPaint paint, int width, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string base, string display, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="System.String" />
        <Parameter Name="display" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <param name="display">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <summary>Make a layout for the transformed text (password transformation
 being the primary example of a transformation)
 that will be updated as the base text is changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Make a layout for the transformed text (password transformation
 being the primary example of a transformation)
 that will be updated as the base text is changed.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#DynamicLayout(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout.Alignment, float, float, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicLayout (Java.Lang.ICharSequence base, Java.Lang.ICharSequence display, Android.Text.TextPaint paint, int width, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, bool includepad, Android.Text.TextUtils.TruncateAt ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence base, class Java.Lang.ICharSequence display, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad, class Android.Text.TextUtils/TruncateAt ellipsize, int32 ellipsizedWidth) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZLandroid/text/TextUtils$TruncateAt;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="Java.Lang.ICharSequence" />
        <Parameter Name="display" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
        <Parameter Name="ellipsize" Type="Android.Text.TextUtils+TruncateAt" />
        <Parameter Name="ellipsizedWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <param name="display">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <param name="ellipsize">To be added.</param>
        <param name="ellipsizedWidth">To be added.</param>
        <summary>Make a layout for the transformed text (password transformation
 being the primary example of a transformation)
 that will be updated as the base text is changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Make a layout for the transformed text (password transformation
 being the primary example of a transformation)
 that will be updated as the base text is changed.
 If ellipsize is non-null, the Layout will ellipsize the text
 down to ellipsizedWidth.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#DynamicLayout(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout.Alignment, float, float, boolean, android.text.TextUtils.TruncateAt, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicLayout (string base, string display, Android.Text.TextPaint paint, int width, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, bool includepad, Android.Text.TextUtils.TruncateAt ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string base, string display, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad, class Android.Text.TextUtils/TruncateAt ellipsize, int32 ellipsizedWidth) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZLandroid/text/TextUtils$TruncateAt;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="System.String" />
        <Parameter Name="display" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
        <Parameter Name="ellipsize" Type="Android.Text.TextUtils+TruncateAt" />
        <Parameter Name="ellipsizedWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <param name="display">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <param name="ellipsize">To be added.</param>
        <param name="ellipsizedWidth">To be added.</param>
        <summary>Make a layout for the transformed text (password transformation
 being the primary example of a transformation)
 that will be updated as the base text is changed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Make a layout for the transformed text (password transformation
 being the primary example of a transformation)
 that will be updated as the base text is changed.
 If ellipsize is non-null, the Layout will ellipsize the text
 down to ellipsizedWidth.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#DynamicLayout(java.lang.CharSequence, java.lang.CharSequence, android.text.TextPaint, int, android.text.Layout.Alignment, float, float, boolean, android.text.TextUtils.TruncateAt, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BottomPadding">
      <MemberSignature Language="C#" Value="public override int BottomPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BottomPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBottomPadding", "()I", "GetGetBottomPaddingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of extra pixels of descent padding in the
 bottom line of the Layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of extra pixels of descent padding in the
 bottom line of the Layout.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#getBottomPadding()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEllipsisCount">
      <MemberSignature Language="C#" Value="public override int GetEllipsisCount (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEllipsisCount(int32 line) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getEllipsisCount", "(I)I", "GetGetEllipsisCount_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns the number of characters to be ellipsized away, or 0 if
 no ellipsis is to take place.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of characters to be ellipsized away, or 0 if
 no ellipsis is to take place.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#getEllipsisCount(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEllipsisStart">
      <MemberSignature Language="C#" Value="public override int GetEllipsisStart (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEllipsisStart(int32 line) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getEllipsisStart", "(I)I", "GetGetEllipsisStart_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the offset of the first character to be ellipsized away,
 relative to the start of the line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the offset of the first character to be ellipsized away,
 relative to the start of the line.  (So 0 if the beginning of the
 line is ellipsized, not getLineStart().)
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#getEllipsisStart(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineContainsTab">
      <MemberSignature Language="C#" Value="public override bool GetLineContainsTab (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetLineContainsTab(int32 line) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLineContainsTab", "(I)Z", "GetGetLineContainsTab_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns whether the specified line contains one or more
 characters that need to be handled specially, like tabs
 or emoji.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns whether the specified line contains one or more
 characters that need to be handled specially, like tabs
 or emoji.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#getLineContainsTab(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineDescent">
      <MemberSignature Language="C#" Value="public override int GetLineDescent (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineDescent(int32 line) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLineDescent", "(I)I", "GetGetLineDescent_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the descent of the specified line(0&amp;hellip;getLineCount() - 1).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the descent of the specified line(0&amp;hellip;getLineCount() - 1).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#getLineDescent(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineDirections">
      <MemberSignature Language="C#" Value="public override sealed Android.Text.Layout.Directions GetLineDirections (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Text.Layout/Directions GetLineDirections(int32 line) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLineDirections", "(I)Landroid/text/Layout$Directions;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Layout+Directions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns the directional run information for the specified line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the directional run information for the specified line.
 The array alternates counts of characters in left-to-right
 and right-to-left segments of the line.

 </para>
          <para tool="javadoc-to-mdoc">NOTE: this is inadequate to support bidirectional text, and will change.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#getLineDirections(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineStart">
      <MemberSignature Language="C#" Value="public override int GetLineStart (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineStart(int32 line) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLineStart", "(I)I", "GetGetLineStart_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the text offset of the beginning of the specified line (
 0&amp;hellip;getLineCount()).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the text offset of the beginning of the specified line (
 0&amp;hellip;getLineCount()). If the specified line is equal to the line
 count, returns the length of the text.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#getLineStart(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineTop">
      <MemberSignature Language="C#" Value="public override int GetLineTop (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineTop(int32 line) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getLineTop", "(I)I", "GetGetLineTop_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the vertical position of the top of the specified line
 (0&amp;hellip;getLineCount()).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the vertical position of the top of the specified line
 (0&amp;hellip;getLineCount()).
 If the specified line is equal to the line count, returns the
 bottom of the last line.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#getLineTop(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetParagraphDirection">
      <MemberSignature Language="C#" Value="public override Android.Text.TextLayoutDirection GetParagraphDirection (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Text.TextLayoutDirection GetParagraphDirection(int32 line) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getParagraphDirection", "(I)I", "GetGetParagraphDirection_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.TextLayoutDirection</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns the primary directionality of the paragraph containing the
 specified line, either 1 for left-to-right lines, or -1 for right-to-left
 lines (see <c><see cref="!:Android.Text.Layout.DIR_LEFT_TO_RIGHT" /></c>, <c><see cref="!:Android.Text.Layout.DIR_RIGHT_TO_LEFT" /></c>).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the primary directionality of the paragraph containing the
 specified line, either 1 for left-to-right lines, or -1 for right-to-left
 lines (see <c><see cref="!:Android.Text.Layout.DIR_LEFT_TO_RIGHT" /></c>, <c><see cref="!:Android.Text.Layout.DIR_RIGHT_TO_LEFT" /></c>).
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#getParagraphDirection(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="C#" Value="public override int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLineCount", "()I", "GetGetLineCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of lines of text in this layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the number of lines of text in this layout.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#getLineCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopPadding">
      <MemberSignature Language="C#" Value="public override int TopPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TopPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTopPadding", "()I", "GetGetTopPaddingHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the (negative) number of extra pixels of ascent padding in the
 top line of the Layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the (negative) number of extra pixels of ascent padding in the
 top line of the Layout.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/text/DynamicLayout.html#getTopPadding()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
