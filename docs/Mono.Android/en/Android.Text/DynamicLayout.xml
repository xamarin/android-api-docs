<Type Name="DynamicLayout" FullName="Android.Text.DynamicLayout">
  <TypeSignature Language="C#" Value="public class DynamicLayout : Android.Text.Layout" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicLayout extends Android.Text.Layout" />
  <TypeSignature Language="DocId" Value="T:Android.Text.DynamicLayout" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicLayout&#xA;Inherits Layout" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicLayout : Android::Text::Layout" />
  <TypeSignature Language="F#" Value="type DynamicLayout = class&#xA;    inherit Layout" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Text.Layout</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/text/DynamicLayout", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/text/DynamicLayout", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>DynamicLayout is a text layout that updates itself as the text is edited.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/DynamicLayout" title="Reference documentation">Java documentation for <code>android.text.DynamicLayout</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DynamicLayout (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DynamicLayout(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="F#" Value="new Android.Text.DynamicLayout : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Text.DynamicLayout" Usage="new Android.Text.DynamicLayout (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicLayout (Java.Lang.ICharSequence base, Android.Text.TextPaint paint, int width, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence base, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.#ctor(Java.Lang.ICharSequence,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (base As ICharSequence, paint As TextPaint, width As Integer, align As Layout.Alignment, spacingmult As Single, spacingadd As Single, includepad As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicLayout(Java::Lang::ICharSequence ^ base, Android::Text::TextPaint ^ paint, int width, Android::Text::Layout::Alignment ^ align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="F#" Value="new Android.Text.DynamicLayout : Java.Lang.ICharSequence * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * bool -&gt; Android.Text.DynamicLayout" Usage="new Android.Text.DynamicLayout (base, paint, width, align, spacingmult, spacingadd, includepad)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <summary>Make a layout for the specified text that will be updated as
 the text is changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/DynamicLayout#DynamicLayout(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.DynamicLayout.DynamicLayout(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicLayout (string base, Android.Text.TextPaint paint, int width, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string base, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.#ctor(System.String,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (base As String, paint As TextPaint, width As Integer, align As Layout.Alignment, spacingmult As Single, spacingadd As Single, includepad As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicLayout(System::String ^ base, Android::Text::TextPaint ^ paint, int width, Android::Text::Layout::Alignment ^ align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="F#" Value="new Android.Text.DynamicLayout : string * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * bool -&gt; Android.Text.DynamicLayout" Usage="new Android.Text.DynamicLayout (base, paint, width, align, spacingmult, spacingadd, includepad)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <summary>Make a layout for the specified text that will be updated as
 the text is changed.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicLayout (Java.Lang.ICharSequence base, Java.Lang.ICharSequence display, Android.Text.TextPaint paint, int width, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence base, class Java.Lang.ICharSequence display, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.#ctor(Java.Lang.ICharSequence,Java.Lang.ICharSequence,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (base As ICharSequence, display As ICharSequence, paint As TextPaint, width As Integer, align As Layout.Alignment, spacingmult As Single, spacingadd As Single, includepad As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicLayout(Java::Lang::ICharSequence ^ base, Java::Lang::ICharSequence ^ display, Android::Text::TextPaint ^ paint, int width, Android::Text::Layout::Alignment ^ align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="F#" Value="new Android.Text.DynamicLayout : Java.Lang.ICharSequence * Java.Lang.ICharSequence * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * bool -&gt; Android.Text.DynamicLayout" Usage="new Android.Text.DynamicLayout (base, display, paint, width, align, spacingmult, spacingadd, includepad)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="Java.Lang.ICharSequence" />
        <Parameter Name="display" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <param name="display">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <summary>Make a layout for the transformed text (password transformation
 being the primary example of a transformation)
 that will be updated as the base text is changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/DynamicLayout#DynamicLayout(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.DynamicLayout.DynamicLayout(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicLayout (string base, string display, Android.Text.TextPaint paint, int width, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string base, string display, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.#ctor(System.String,System.String,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (base As String, display As String, paint As TextPaint, width As Integer, align As Layout.Alignment, spacingmult As Single, spacingadd As Single, includepad As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicLayout(System::String ^ base, System::String ^ display, Android::Text::TextPaint ^ paint, int width, Android::Text::Layout::Alignment ^ align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="F#" Value="new Android.Text.DynamicLayout : string * string * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * bool -&gt; Android.Text.DynamicLayout" Usage="new Android.Text.DynamicLayout (base, display, paint, width, align, spacingmult, spacingadd, includepad)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="System.String" />
        <Parameter Name="display" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <param name="display">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <summary>Make a layout for the transformed text (password transformation
 being the primary example of a transformation)
 that will be updated as the base text is changed.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicLayout (Java.Lang.ICharSequence base, Java.Lang.ICharSequence display, Android.Text.TextPaint paint, int width, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, bool includepad, Android.Text.TextUtils.TruncateAt? ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence base, class Java.Lang.ICharSequence display, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad, class Android.Text.TextUtils/TruncateAt ellipsize, int32 ellipsizedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.#ctor(Java.Lang.ICharSequence,Java.Lang.ICharSequence,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,System.Boolean,Android.Text.TextUtils.TruncateAt,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (base As ICharSequence, display As ICharSequence, paint As TextPaint, width As Integer, align As Layout.Alignment, spacingmult As Single, spacingadd As Single, includepad As Boolean, ellipsize As TextUtils.TruncateAt, ellipsizedWidth As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicLayout(Java::Lang::ICharSequence ^ base, Java::Lang::ICharSequence ^ display, Android::Text::TextPaint ^ paint, int width, Android::Text::Layout::Alignment ^ align, float spacingmult, float spacingadd, bool includepad, Android::Text::TextUtils::TruncateAt ^ ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="F#" Value="new Android.Text.DynamicLayout : Java.Lang.ICharSequence * Java.Lang.ICharSequence * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * bool * Android.Text.TextUtils.TruncateAt * int -&gt; Android.Text.DynamicLayout" Usage="new Android.Text.DynamicLayout (base, display, paint, width, align, spacingmult, spacingadd, includepad, ellipsize, ellipsizedWidth)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZLandroid/text/TextUtils$TruncateAt;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZLandroid/text/TextUtils$TruncateAt;I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="Java.Lang.ICharSequence" />
        <Parameter Name="display" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
        <Parameter Name="ellipsize" Type="Android.Text.TextUtils+TruncateAt" />
        <Parameter Name="ellipsizedWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <param name="display">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <param name="ellipsize">To be added.</param>
        <param name="ellipsizedWidth">To be added.</param>
        <summary>Make a layout for the transformed text (password transformation
 being the primary example of a transformation)
 that will be updated as the base text is changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/DynamicLayout#DynamicLayout(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.DynamicLayout.DynamicLayout(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicLayout (string base, string display, Android.Text.TextPaint paint, int width, Android.Text.Layout.Alignment align, float spacingmult, float spacingadd, bool includepad, Android.Text.TextUtils.TruncateAt? ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string base, string display, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad, class Android.Text.TextUtils/TruncateAt ellipsize, int32 ellipsizedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.#ctor(System.String,System.String,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,System.Boolean,Android.Text.TextUtils.TruncateAt,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (base As String, display As String, paint As TextPaint, width As Integer, align As Layout.Alignment, spacingmult As Single, spacingadd As Single, includepad As Boolean, ellipsize As TextUtils.TruncateAt, ellipsizedWidth As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicLayout(System::String ^ base, System::String ^ display, Android::Text::TextPaint ^ paint, int width, Android::Text::Layout::Alignment ^ align, float spacingmult, float spacingadd, bool includepad, Android::Text::TextUtils::TruncateAt ^ ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="F#" Value="new Android.Text.DynamicLayout : string * string * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * bool * Android.Text.TextUtils.TruncateAt * int -&gt; Android.Text.DynamicLayout" Usage="new Android.Text.DynamicLayout (base, display, paint, width, align, spacingmult, spacingadd, includepad, ellipsize, ellipsizedWidth)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZLandroid/text/TextUtils$TruncateAt;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZLandroid/text/TextUtils$TruncateAt;I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="base" Type="System.String" />
        <Parameter Name="display" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
        <Parameter Name="ellipsize" Type="Android.Text.TextUtils+TruncateAt" />
        <Parameter Name="ellipsizedWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="base">To be added.</param>
        <param name="display">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <param name="ellipsize">To be added.</param>
        <param name="ellipsizedWidth">To be added.</param>
        <summary>Make a layout for the transformed text (password transformation
 being the primary example of a transformation)
 that will be updated as the base text is changed.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BottomPadding">
      <MemberSignature Language="C#" Value="public override int BottomPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BottomPadding" />
      <MemberSignature Language="DocId" Value="P:Android.Text.DynamicLayout.BottomPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property BottomPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int BottomPadding { int get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomPadding : int" Usage="Android.Text.DynamicLayout.BottomPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBottomPadding", "()I", "GetGetBottomPaddingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBottomPadding", "()I", "GetGetBottomPaddingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of extra pixels of descent padding in the
 bottom line of the Layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEllipsisCount">
      <MemberSignature Language="C#" Value="public override int GetEllipsisCount (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEllipsisCount(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.GetEllipsisCount(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEllipsisCount (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEllipsisCount(int line);" />
      <MemberSignature Language="F#" Value="override this.GetEllipsisCount : int -&gt; int" Usage="dynamicLayout.GetEllipsisCount line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEllipsisCount", "(I)I", "GetGetEllipsisCount_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getEllipsisCount", "(I)I", "GetGetEllipsisCount_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns the number of characters to be ellipsized away, or 0 if
 no ellipsis is to take place.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEllipsisStart">
      <MemberSignature Language="C#" Value="public override int GetEllipsisStart (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEllipsisStart(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.GetEllipsisStart(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetEllipsisStart (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetEllipsisStart(int line);" />
      <MemberSignature Language="F#" Value="override this.GetEllipsisStart : int -&gt; int" Usage="dynamicLayout.GetEllipsisStart line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEllipsisStart", "(I)I", "GetGetEllipsisStart_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getEllipsisStart", "(I)I", "GetGetEllipsisStart_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the offset of the first character to be ellipsized away,
 relative to the start of the line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineContainsTab">
      <MemberSignature Language="C#" Value="public override bool GetLineContainsTab (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetLineContainsTab(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.GetLineContainsTab(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLineContainsTab (line As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetLineContainsTab(int line);" />
      <MemberSignature Language="F#" Value="override this.GetLineContainsTab : int -&gt; bool" Usage="dynamicLayout.GetLineContainsTab line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineContainsTab", "(I)Z", "GetGetLineContainsTab_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineContainsTab", "(I)Z", "GetGetLineContainsTab_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns whether the specified line contains one or more
 characters that need to be handled specially, like tabs
 or emoji.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineDescent">
      <MemberSignature Language="C#" Value="public override int GetLineDescent (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineDescent(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.GetLineDescent(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLineDescent (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLineDescent(int line);" />
      <MemberSignature Language="F#" Value="override this.GetLineDescent : int -&gt; int" Usage="dynamicLayout.GetLineDescent line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineDescent", "(I)I", "GetGetLineDescent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineDescent", "(I)I", "GetGetLineDescent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the descent of the specified line(0&amp;hellip;getLineCount() - 1).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineDirections">
      <MemberSignature Language="C#" Value="public override sealed Android.Text.Layout.Directions? GetLineDirections (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Text.Layout/Directions GetLineDirections(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.GetLineDirections(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function GetLineDirections (line As Integer) As Layout.Directions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Android::Text::Layout::Directions ^ GetLineDirections(int line);" />
      <MemberSignature Language="F#" Value="override this.GetLineDirections : int -&gt; Android.Text.Layout.Directions" Usage="dynamicLayout.GetLineDirections line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineDirections", "(I)Landroid/text/Layout$Directions;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineDirections", "(I)Landroid/text/Layout$Directions;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Layout+Directions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns the directional run information for the specified line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineStart">
      <MemberSignature Language="C#" Value="public override int GetLineStart (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineStart(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.GetLineStart(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLineStart (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLineStart(int line);" />
      <MemberSignature Language="F#" Value="override this.GetLineStart : int -&gt; int" Usage="dynamicLayout.GetLineStart line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineStart", "(I)I", "GetGetLineStart_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineStart", "(I)I", "GetGetLineStart_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the text offset of the beginning of the specified line (
 0&amp;hellip;getLineCount()).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineTop">
      <MemberSignature Language="C#" Value="public override int GetLineTop (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineTop(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.GetLineTop(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLineTop (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetLineTop(int line);" />
      <MemberSignature Language="F#" Value="override this.GetLineTop : int -&gt; int" Usage="dynamicLayout.GetLineTop line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineTop", "(I)I", "GetGetLineTop_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineTop", "(I)I", "GetGetLineTop_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the vertical position of the top of the specified line
 (0&amp;hellip;getLineCount()).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetParagraphDirection">
      <MemberSignature Language="C#" Value="public override Android.Text.TextLayoutDirection GetParagraphDirection (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Text.TextLayoutDirection GetParagraphDirection(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.DynamicLayout.GetParagraphDirection(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetParagraphDirection (line As Integer) As TextLayoutDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Android::Text::TextLayoutDirection GetParagraphDirection(int line);" />
      <MemberSignature Language="F#" Value="override this.GetParagraphDirection : int -&gt; Android.Text.TextLayoutDirection" Usage="dynamicLayout.GetParagraphDirection line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getParagraphDirection", "(I)I", "GetGetParagraphDirection_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getParagraphDirection", "(I)I", "GetGetParagraphDirection_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.TextLayoutDirection</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInLongSummaries">To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Text.DynamicLayout.JniPeerMembers" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Text.DynamicLayout.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="C#" Value="public override int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberSignature Language="DocId" Value="P:Android.Text.DynamicLayout.LineCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LineCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineCount : int" Usage="Android.Text.DynamicLayout.LineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLineCount", "()I", "GetGetLineCountHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLineCount", "()I", "GetGetLineCountHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of lines of text in this layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Text.DynamicLayout.ThresholdClass" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Text.DynamicLayout.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Text.DynamicLayout.ThresholdType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Text.DynamicLayout.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopPadding">
      <MemberSignature Language="C#" Value="public override int TopPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TopPadding" />
      <MemberSignature Language="DocId" Value="P:Android.Text.DynamicLayout.TopPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TopPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TopPadding { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TopPadding : int" Usage="Android.Text.DynamicLayout.TopPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTopPadding", "()I", "GetGetTopPaddingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTopPadding", "()I", "GetGetTopPaddingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the (negative) number of extra pixels of ascent padding in the
 top line of the Layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
