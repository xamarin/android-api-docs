<Type Name="ISpanWatcher" FullName="Android.Text.ISpanWatcher">
  <TypeSignature Language="C#" Value="public interface ISpanWatcher : Android.Text.INoCopySpan, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISpanWatcher implements class Android.Runtime.IJavaObject, class Android.Text.INoCopySpan, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Text.ISpanWatcher" />
  <TypeSignature Language="F#" Value="type ISpanWatcher = interface&#xA;    interface INoCopySpan&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Text.INoCopySpan</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/text/SpanWatcher", "", "Android.Text.ISpanWatcherInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>When an object of this type is attached to a Spannable, its methods
            will be called to notify it that other markup objects have been
            added, changed, or removed.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/SpanWatcher" title="Reference documentation">Java documentation for <code>android.text.SpanWatcher</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="OnSpanAdded">
      <MemberSignature Language="C#" Value="public void OnSpanAdded (Android.Text.ISpannable text, Java.Lang.Object what, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSpanAdded(class Android.Text.ISpannable text, class Java.Lang.Object what, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.ISpanWatcher.OnSpanAdded(Android.Text.ISpannable,Java.Lang.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnSpanAdded : Android.Text.ISpannable * Java.Lang.Object * int * int -&gt; unit" Usage="iSpanWatcher.OnSpanAdded (text, what, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSpanAdded", "(Landroid/text/Spannable;Ljava/lang/Object;II)V", "GetOnSpanAdded_Landroid_text_Spannable_Ljava_lang_Object_IIHandler:Android.Text.ISpanWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Text.ISpannable" />
        <Parameter Name="what" Type="Java.Lang.Object" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="what">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>This method is called to notify you that the specified object
            has been attached to the specified range of the text.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpanWatcher#onSpanAdded(android.text.Spannable,%20java.lang.Object,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpanWatcher.onSpanAdded(android.text.Spannable, java.lang.Object, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnSpanChanged">
      <MemberSignature Language="C#" Value="public void OnSpanChanged (Android.Text.ISpannable text, Java.Lang.Object what, int ostart, int oend, int nstart, int nend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSpanChanged(class Android.Text.ISpannable text, class Java.Lang.Object what, int32 ostart, int32 oend, int32 nstart, int32 nend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.ISpanWatcher.OnSpanChanged(Android.Text.ISpannable,Java.Lang.Object,System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnSpanChanged : Android.Text.ISpannable * Java.Lang.Object * int * int * int * int -&gt; unit" Usage="iSpanWatcher.OnSpanChanged (text, what, ostart, oend, nstart, nend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSpanChanged", "(Landroid/text/Spannable;Ljava/lang/Object;IIII)V", "GetOnSpanChanged_Landroid_text_Spannable_Ljava_lang_Object_IIIIHandler:Android.Text.ISpanWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Text.ISpannable" />
        <Parameter Name="what" Type="Java.Lang.Object" />
        <Parameter Name="ostart" Type="System.Int32" />
        <Parameter Name="oend" Type="System.Int32" />
        <Parameter Name="nstart" Type="System.Int32" />
        <Parameter Name="nend" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="what">To be added.</param>
        <param name="ostart">To be added.</param>
        <param name="oend">To be added.</param>
        <param name="nstart">To be added.</param>
        <param name="nend">To be added.</param>
        <summary>This method is called to notify you that the specified object
            has been relocated from the range &lt;code&gt;ostart&amp;hellip;oend&lt;/code&gt;
            to the new range &lt;code&gt;nstart&amp;hellip;nend&lt;/code&gt; of the text.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpanWatcher#onSpanChanged(android.text.Spannable,%20java.lang.Object,%20int,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpanWatcher.onSpanChanged(android.text.Spannable, java.lang.Object, int, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnSpanRemoved">
      <MemberSignature Language="C#" Value="public void OnSpanRemoved (Android.Text.ISpannable text, Java.Lang.Object what, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnSpanRemoved(class Android.Text.ISpannable text, class Java.Lang.Object what, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.ISpanWatcher.OnSpanRemoved(Android.Text.ISpannable,Java.Lang.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnSpanRemoved : Android.Text.ISpannable * Java.Lang.Object * int * int -&gt; unit" Usage="iSpanWatcher.OnSpanRemoved (text, what, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("onSpanRemoved", "(Landroid/text/Spannable;Ljava/lang/Object;II)V", "GetOnSpanRemoved_Landroid_text_Spannable_Ljava_lang_Object_IIHandler:Android.Text.ISpanWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Android.Text.ISpannable" />
        <Parameter Name="what" Type="Java.Lang.Object" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="what">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>This method is called to notify you that the specified object
            has been detached from the specified range of the text.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpanWatcher#onSpanRemoved(android.text.Spannable,%20java.lang.Object,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpanWatcher.onSpanRemoved(android.text.Spannable, java.lang.Object, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
