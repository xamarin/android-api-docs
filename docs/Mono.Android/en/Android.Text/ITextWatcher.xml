<Type Name="ITextWatcher" FullName="Android.Text.ITextWatcher">
  <TypeSignature Language="VB.NET" Value="Public Interface ITextWatcher&#xA;Implements IDisposable, IJavaPeerable, INoCopySpan" />
  <TypeSignature Language="C++ CLI" Value="public interface class ITextWatcher : Android::Text::INoCopySpan, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public interface ITextWatcher : Android.Text.INoCopySpan, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit ITextWatcher implements class Android.Runtime.IJavaObject, class Android.Text.INoCopySpan, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Text.ITextWatcher" />
  <TypeSignature Language="F#" Value="type ITextWatcher = interface&#xA;    interface INoCopySpan&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.INoCopySpan</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/text/TextWatcher", "", "Android.Text.ITextWatcherInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/text/TextWatcher", "", "Android.Text.ITextWatcherInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>When an object of this type is attached to an Editable, its methods will
            be called when the text is changed.</summary>
    <remarks>
      <para>When an object of this type is attached to an Editable, its methods will
            be called when the text is changed.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/TextWatcher" title="Reference documentation">Java documentation for <code>android.text.TextWatcher</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="AfterTextChanged">
      <MemberSignature Language="VB.NET" Value="Public Sub AfterTextChanged (s As IEditable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AfterTextChanged(Android::Text::IEditable ^ s);" />
      <MemberSignature Language="C#" Value="public void AfterTextChanged (Android.Text.IEditable? s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AfterTextChanged(class Android.Text.IEditable s) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.ITextWatcher.AfterTextChanged(Android.Text.IEditable)" />
      <MemberSignature Language="F#" Value="abstract member AfterTextChanged : Android.Text.IEditable -&gt; unit" Usage="iTextWatcher.AfterTextChanged s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("afterTextChanged", "(Landroid/text/Editable;)V", "GetAfterTextChanged_Landroid_text_Editable_Handler:Android.Text.ITextWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("afterTextChanged", "(Landroid/text/Editable;)V", "GetAfterTextChanged_Landroid_text_Editable_Handler:Android.Text.ITextWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Android.Text.IEditable" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <summary>This method is called to notify you that, somewhere within
            <c>s</c>, the text has been changed.</summary>
        <remarks>
          <para>This method is called to notify you that, somewhere within
            <c>s</c>, the text has been changed.
            It is legitimate to make further changes to <c>s</c> from
            this callback, but be careful not to get yourself into an infinite
            loop, because any changes you make will cause this method to be
            called again recursively.
            (You are not told where the change took place because other
            afterTextChanged() methods may already have made other changes
            and invalidated the offsets.  But if you need to know here,
            you can use <c>Spannable#setSpan</c> in <c>#onTextChanged</c>
            to mark your place and then look up from here where the span
            ended up.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/TextWatcher#afterTextChanged(android.text.Editable)" title="Reference documentation">Java documentation for <code>android.text.TextWatcher.afterTextChanged(android.text.Editable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BeforeTextChanged">
      <MemberSignature Language="VB.NET" Value="Public Sub BeforeTextChanged (s As ICharSequence, start As Integer, count As Integer, after As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeforeTextChanged(Java::Lang::ICharSequence ^ s, int start, int count, int after);" />
      <MemberSignature Language="C#" Value="public void BeforeTextChanged (Java.Lang.ICharSequence? s, int start, int count, int after);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeforeTextChanged(class Java.Lang.ICharSequence s, int32 start, int32 count, int32 after) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.ITextWatcher.BeforeTextChanged(Java.Lang.ICharSequence,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member BeforeTextChanged : Java.Lang.ICharSequence * int * int * int -&gt; unit" Usage="iTextWatcher.BeforeTextChanged (s, start, count, after)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("beforeTextChanged", "(Ljava/lang/CharSequence;III)V", "GetBeforeTextChanged_Ljava_lang_CharSequence_IIIHandler:Android.Text.ITextWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("beforeTextChanged", "(Ljava/lang/CharSequence;III)V", "GetBeforeTextChanged_Ljava_lang_CharSequence_IIIHandler:Android.Text.ITextWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="after" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="start">To be added.</param>
        <param name="count">To be added.</param>
        <param name="after">To be added.</param>
        <summary>This method is called to notify you that, within <c>s</c>,
            the <c>count</c> characters beginning at <c>start</c>
            are about to be replaced by new text with length <c>after</c>.</summary>
        <remarks>
          <para>This method is called to notify you that, within <c>s</c>,
            the <c>count</c> characters beginning at <c>start</c>
            are about to be replaced by new text with length <c>after</c>.
            It is an error to attempt to make changes to <c>s</c> from
            this callback.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/TextWatcher#beforeTextChanged(java.lang.CharSequence,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.text.TextWatcher.beforeTextChanged(java.lang.CharSequence, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="VB.NET" Value="Public Sub OnTextChanged (s As ICharSequence, start As Integer, before As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnTextChanged(Java::Lang::ICharSequence ^ s, int start, int before, int count);" />
      <MemberSignature Language="C#" Value="public void OnTextChanged (Java.Lang.ICharSequence? s, int start, int before, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnTextChanged(class Java.Lang.ICharSequence s, int32 start, int32 before, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.ITextWatcher.OnTextChanged(Java.Lang.ICharSequence,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : Java.Lang.ICharSequence * int * int * int -&gt; unit" Usage="iTextWatcher.OnTextChanged (s, start, before, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTextChanged", "(Ljava/lang/CharSequence;III)V", "GetOnTextChanged_Ljava_lang_CharSequence_IIIHandler:Android.Text.ITextWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTextChanged", "(Ljava/lang/CharSequence;III)V", "GetOnTextChanged_Ljava_lang_CharSequence_IIIHandler:Android.Text.ITextWatcherInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="before" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="start">To be added.</param>
        <param name="before">To be added.</param>
        <param name="count">To be added.</param>
        <summary>This method is called to notify you that, within <c>s</c>,
            the <c>count</c> characters beginning at <c>start</c>
            have just replaced old text that had length <c>before</c>.</summary>
        <remarks>
          <para>This method is called to notify you that, within <c>s</c>,
            the <c>count</c> characters beginning at <c>start</c>
            have just replaced old text that had length <c>before</c>.
            It is an error to attempt to make changes to <c>s</c> from
            this callback.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/TextWatcher#onTextChanged(java.lang.CharSequence,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.text.TextWatcher.onTextChanged(java.lang.CharSequence, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
