<Type Name="BidiFormatter" FullName="Android.Text.BidiFormatter">
  <TypeSignature Language="F#" Value="type BidiFormatter = class&#xA;    inherit Object" />
  <TypeSignature Language="C#" Value="public sealed class BidiFormatter : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BidiFormatter extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Text.BidiFormatter" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/text/BidiFormatter", DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="18">
    <summary>Utility class for formatting text for display in a potentially opposite-directionality context
            without garbling.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/BidiFormatter" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 18" />
  </Docs>
  <Members>
    <Member MemberName="GetInstance">
      <MemberSignature Language="F#" Value="static member GetInstance : Java.Util.Locale -&gt; Android.Text.BidiFormatter" Usage="Android.Text.BidiFormatter.GetInstance locale" />
      <MemberSignature Language="C#" Value="public static Android.Text.BidiFormatter? GetInstance (Java.Util.Locale? locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.BidiFormatter GetInstance(class Java.Util.Locale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.GetInstance(Java.Util.Locale)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/util/Locale;)Landroid/text/BidiFormatter;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.BidiFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">The context locale.
</param>
        <summary>Factory for creating an instance of BidiFormatter for the default locale directionality.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#getInstance()" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.getInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="F#" Value="static member GetInstance : bool -&gt; Android.Text.BidiFormatter" Usage="Android.Text.BidiFormatter.GetInstance rtlContext" />
      <MemberSignature Language="C#" Value="public static Android.Text.BidiFormatter? GetInstance (bool rtlContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.BidiFormatter GetInstance(bool rtlContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.GetInstance(System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Z)Landroid/text/BidiFormatter;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.BidiFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rtlContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rtlContext">Whether the context directionality is RTL.
</param>
        <summary>Factory for creating an instance of BidiFormatter for the default locale directionality.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#getInstance()" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.getInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="F#" Value="member this.Instance : Android.Text.BidiFormatter" Usage="Android.Text.BidiFormatter.Instance" />
      <MemberSignature Language="C#" Value="public static Android.Text.BidiFormatter? Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.BidiFormatter Instance" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BidiFormatter.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInstance", "()Landroid/text/BidiFormatter;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.BidiFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Factory for creating an instance of BidiFormatter for the default locale directionality.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#getInstance()" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.getInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="IsRtl">
      <MemberSignature Language="F#" Value="member this.IsRtl : Java.Lang.ICharSequence -&gt; bool" Usage="bidiFormatter.IsRtl str" />
      <MemberSignature Language="C#" Value="public bool IsRtl (Java.Lang.ICharSequence? str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRtl(class Java.Lang.ICharSequence str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.IsRtl(Java.Lang.ICharSequence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isRtl", "(Ljava/lang/CharSequence;)Z", "", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="str">CharSequence whose directionality is to be estimated.</param>
        <summary>Operates like <c>#isRtl(String)</c>, but takes a CharSequence instead of a string</summary>
        <returns>true if <c>str</c>'s estimated overall directionality is RTL. Otherwise returns
                     false.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#isRtl(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.isRtl(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRtl">
      <MemberSignature Language="F#" Value="member this.IsRtl : string -&gt; bool" Usage="bidiFormatter.IsRtl str" />
      <MemberSignature Language="C#" Value="public bool IsRtl (string? str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRtl(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.IsRtl(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isRtl", "(Ljava/lang/String;)Z", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">CharSequence whose directionality is to be estimated.</param>
        <summary>Operates like <c>#isRtl(String)</c>, but takes a CharSequence instead of a string</summary>
        <returns>true if <c>str</c>'s estimated overall directionality is RTL. Otherwise returns
                     false.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#isRtl(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.isRtl(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="IsRtlContext">
      <MemberSignature Language="F#" Value="member this.IsRtlContext : bool" Usage="Android.Text.BidiFormatter.IsRtlContext" />
      <MemberSignature Language="C#" Value="public bool IsRtlContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRtlContext" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BidiFormatter.IsRtlContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRtlContext", "()Z", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>Whether the context directionality is RTL</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#isRtlContext()" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.isRtlContext()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Text.BidiFormatter.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BidiFormatter.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StereoReset">
      <MemberSignature Language="F#" Value="member this.StereoReset : bool" Usage="Android.Text.BidiFormatter.StereoReset" />
      <MemberSignature Language="C#" Value="public bool StereoReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StereoReset" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BidiFormatter.StereoReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStereoReset", "()Z", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>Whether directionality "reset" should also be done before a string being
            bidi-wrapped, not just after it.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#getStereoReset()" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.getStereoReset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Text.BidiFormatter.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BidiFormatter.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Text.BidiFormatter.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BidiFormatter.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrap">
      <MemberSignature Language="F#" Value="member this.UnicodeWrap : string -&gt; string" Usage="bidiFormatter.UnicodeWrap str" />
      <MemberSignature Language="C#" Value="public string? UnicodeWrap (string? str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnicodeWrap(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrap(System.String)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The input CharSequence.</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm and assumes <c>isolate</c> is true.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrap">
      <MemberSignature Language="F#" Value="member this.UnicodeWrap : string * Android.Text.ITextDirectionHeuristic -&gt; string" Usage="bidiFormatter.UnicodeWrap (str, heuristic)" />
      <MemberSignature Language="C#" Value="public string? UnicodeWrap (string? str, Android.Text.ITextDirectionHeuristic? heuristic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnicodeWrap(string str, class Android.Text.ITextDirectionHeuristic heuristic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrap(System.String,Android.Text.ITextDirectionHeuristic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="heuristic" Type="Android.Text.ITextDirectionHeuristic" />
      </Parameters>
      <Docs>
        <param name="heuristic">The algorithm to be used to estimate the string's overall direction.
        See <see cref="T:Android.Text.TextDirectionHeuristics" /> for pre-defined heuristics.</param>
        <param name="str">The input CharSequence.</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm and assumes <c>isolate</c> is true.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrap">
      <MemberSignature Language="F#" Value="member this.UnicodeWrap : string * bool -&gt; string" Usage="bidiFormatter.UnicodeWrap (str, isolate)" />
      <MemberSignature Language="C#" Value="public string? UnicodeWrap (string? str, bool isolate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnicodeWrap(string str, bool isolate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrap(System.String,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="isolate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isolate">Whether to directionally isolate the string to prevent it from garbling the
     content around it</param>
        <param name="str">The input CharSequence.</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm and assumes <c>isolate</c> is true.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrap">
      <MemberSignature Language="F#" Value="member this.UnicodeWrap : string * Android.Text.ITextDirectionHeuristic * bool -&gt; string" Usage="bidiFormatter.UnicodeWrap (str, heuristic, isolate)" />
      <MemberSignature Language="C#" Value="public string? UnicodeWrap (string? str, Android.Text.ITextDirectionHeuristic? heuristic, bool isolate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnicodeWrap(string str, class Android.Text.ITextDirectionHeuristic heuristic, bool isolate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrap(System.String,Android.Text.ITextDirectionHeuristic,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="heuristic" Type="Android.Text.ITextDirectionHeuristic" />
        <Parameter Name="isolate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="heuristic">The algorithm to be used to estimate the string's overall direction.
        See <see cref="T:Android.Text.TextDirectionHeuristics" /> for pre-defined heuristics.</param>
        <param name="isolate">Whether to directionally isolate the string to prevent it from garbling the
     content around it</param>
        <param name="str">The input CharSequence.</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm and assumes <c>isolate</c> is true.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrapFormatted">
      <MemberSignature Language="F#" Value="member this.UnicodeWrapFormatted : Java.Lang.ICharSequence -&gt; Java.Lang.ICharSequence" Usage="bidiFormatter.UnicodeWrapFormatted str" />
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? UnicodeWrapFormatted (Java.Lang.ICharSequence? str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.ICharSequence UnicodeWrapFormatted(class Java.Lang.ICharSequence str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrapFormatted(Java.Lang.ICharSequence)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unicodeWrap", "(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;", "", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="str">The input CharSequence.</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm and assumes <c>isolate</c> is true.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrapFormatted">
      <MemberSignature Language="F#" Value="member this.UnicodeWrapFormatted : Java.Lang.ICharSequence * Android.Text.ITextDirectionHeuristic -&gt; Java.Lang.ICharSequence" Usage="bidiFormatter.UnicodeWrapFormatted (str, heuristic)" />
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? UnicodeWrapFormatted (Java.Lang.ICharSequence? str, Android.Text.ITextDirectionHeuristic? heuristic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.ICharSequence UnicodeWrapFormatted(class Java.Lang.ICharSequence str, class Android.Text.ITextDirectionHeuristic heuristic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrapFormatted(Java.Lang.ICharSequence,Android.Text.ITextDirectionHeuristic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unicodeWrap", "(Ljava/lang/CharSequence;Landroid/text/TextDirectionHeuristic;)Ljava/lang/CharSequence;", "", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="Java.Lang.ICharSequence" />
        <Parameter Name="heuristic" Type="Android.Text.ITextDirectionHeuristic" />
      </Parameters>
      <Docs>
        <param name="heuristic">To be added.</param>
        <param name="str">The input CharSequence.</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm and assumes <c>isolate</c> is true.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrapFormatted">
      <MemberSignature Language="F#" Value="member this.UnicodeWrapFormatted : Java.Lang.ICharSequence * bool -&gt; Java.Lang.ICharSequence" Usage="bidiFormatter.UnicodeWrapFormatted (str, isolate)" />
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? UnicodeWrapFormatted (Java.Lang.ICharSequence? str, bool isolate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.ICharSequence UnicodeWrapFormatted(class Java.Lang.ICharSequence str, bool isolate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrapFormatted(Java.Lang.ICharSequence,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unicodeWrap", "(Ljava/lang/CharSequence;Z)Ljava/lang/CharSequence;", "", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="Java.Lang.ICharSequence" />
        <Parameter Name="isolate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isolate">To be added.</param>
        <param name="str">The input CharSequence.</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm and assumes <c>isolate</c> is true.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrapFormatted">
      <MemberSignature Language="F#" Value="member this.UnicodeWrapFormatted : Java.Lang.ICharSequence * Android.Text.ITextDirectionHeuristic * bool -&gt; Java.Lang.ICharSequence" Usage="bidiFormatter.UnicodeWrapFormatted (str, heuristic, isolate)" />
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? UnicodeWrapFormatted (Java.Lang.ICharSequence? str, Android.Text.ITextDirectionHeuristic? heuristic, bool isolate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.ICharSequence UnicodeWrapFormatted(class Java.Lang.ICharSequence str, class Android.Text.ITextDirectionHeuristic heuristic, bool isolate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrapFormatted(Java.Lang.ICharSequence,Android.Text.ITextDirectionHeuristic,System.Boolean)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unicodeWrap", "(Ljava/lang/CharSequence;Landroid/text/TextDirectionHeuristic;Z)Ljava/lang/CharSequence;", "", ApiSince=26)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="Java.Lang.ICharSequence" />
        <Parameter Name="heuristic" Type="Android.Text.ITextDirectionHeuristic" />
        <Parameter Name="isolate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="heuristic">To be added.</param>
        <param name="isolate">To be added.</param>
        <param name="str">The input CharSequence.</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm and assumes <c>isolate</c> is true.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
