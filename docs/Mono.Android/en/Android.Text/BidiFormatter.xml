<Type Name="BidiFormatter" FullName="Android.Text.BidiFormatter">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BidiFormatter&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class BidiFormatter sealed : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public sealed class BidiFormatter : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BidiFormatter extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Text.BidiFormatter" />
  <TypeSignature Language="F#" Value="type BidiFormatter = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/text/BidiFormatter", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/text/BidiFormatter", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="18">
    <summary>Utility class for formatting text for display in a potentially opposite-directionality context
            without garbling.</summary>
    <remarks>
      <para>Utility class for formatting text for display in a potentially opposite-directionality context
            without garbling. The directionality of the context is set at formatter creation and the
            directionality of the text can be either estimated or passed in when known.</para>
      <para>To support versions lower than <c>android.os.Build.VERSION_CODES#JELLY_BEAN_MR2</c>,
            you can use the support library's <c>androidx.core.text.BidiFormatter</c> class.</para>
      <para>These APIs provides the following functionality:</para>
      <para>1. Bidi Wrapping
            When text in one language is mixed into a document in another, opposite-directionality language,
            e.g. when an English business name is embedded in some Hebrew text, both the inserted string
            and the text surrounding it may be displayed incorrectly unless the inserted string is explicitly
            separated from the surrounding text in a "wrapper" that:</para>
      <para>- Declares its directionality so that the string is displayed correctly. This can be done in
              Unicode bidi formatting codes by <c>#unicodeWrap</c> and similar methods.</para>
      <para>- Isolates the string's directionality, so it does not unduly affect the surrounding content.
              Currently, this can only be done using invisible Unicode characters of the same direction as
              the context (LRM or RLM) in addition to the directionality declaration above, thus "resetting"
              the directionality to that of the context. The "reset" may need to be done at both ends of the
              string. Without "reset" after the string, the string will "stick" to a number or logically
              separate opposite-direction text that happens to follow it in-line (even if separated by
              neutral content like spaces and punctuation). Without "reset" before the string, the same can
              happen there, but only with more opposite-direction text, not a number. One approach is to
              "reset" the direction only after each string, on the theory that if the preceding opposite-
              direction text is itself bidi-wrapped, the "reset" after it will prevent the sticking. (Doing
              the "reset" only before each string definitely does not work because we do not want to require
              bidi-wrapping numbers, and a bidi-wrapped opposite-direction string could be followed by a
              number.) Still, the safest policy is to do the "reset" on both ends of each string, since RTL
              message translations often contain untranslated Latin-script brand names and technical terms,
              and one of these can be followed by a bidi-wrapped inserted value. On the other hand, when one
              has such a message, it is best to do the "reset" manually in the message translation itself,
              since the message's opposite-direction text could be followed by an inserted number, which we
              would not bidi-wrap anyway. Thus, "reset" only after the string is the current default. In an
              alternative to "reset", recent additions to the HTML, CSS, and Unicode standards allow the
              isolation to be part of the directionality declaration. This form of isolation is better than
              "reset" because it takes less space, does not require knowing the context directionality, has a
              gentler effect than "reset", and protects both ends of the string. However, we do not yet allow
              using it because required platforms do not yet support it.</para>
      <para>Providing these wrapping services is the basic purpose of the bidi formatter.</para>
      <para>2. Directionality estimation
            How does one know whether a string about to be inserted into surrounding text has the same
            directionality? Well, in many cases, one knows that this must be the case when writing the code
            doing the insertion, e.g. when a localized message is inserted into a localized page. In such
            cases there is no need to involve the bidi formatter at all. In some other cases, it need not be
            the same as the context, but is either constant (e.g. urls are always LTR) or otherwise known.
            In the remaining cases, e.g. when the string is user-entered or comes from a database, the
            language of the string (and thus its directionality) is not known a priori, and must be
            estimated at run-time. The bidi formatter can do this automatically using the default
            first-strong estimation algorithm. It can also be configured to use a custom directionality
            estimation object.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/BidiFormatter" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 18" />
  </Docs>
  <Members>
    <Member MemberName="GetInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (locale As Locale) As BidiFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Text::BidiFormatter ^ GetInstance(Java::Util::Locale ^ locale);" />
      <MemberSignature Language="C#" Value="public static Android.Text.BidiFormatter? GetInstance (Java.Util.Locale? locale);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.BidiFormatter GetInstance(class Java.Util.Locale locale) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.GetInstance(Java.Util.Locale)" />
      <MemberSignature Language="F#" Value="static member GetInstance : Java.Util.Locale -&gt; Android.Text.BidiFormatter" Usage="Android.Text.BidiFormatter.GetInstance locale" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Ljava/util/Locale;)Landroid/text/BidiFormatter;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Ljava/util/Locale;)Landroid/text/BidiFormatter;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.BidiFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="locale" Type="Java.Util.Locale" />
      </Parameters>
      <Docs>
        <param name="locale">The context locale.</param>
        <summary>Factory for creating an instance of BidiFormatter given the context locale.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Factory for creating an instance of BidiFormatter given the context locale.</para>
          <para>This does not create any new objects, and returns already existing static instances.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#getInstance(java.util.Locale)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.getInstance(java.util.Locale)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="GetInstance">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInstance (rtlContext As Boolean) As BidiFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Android::Text::BidiFormatter ^ GetInstance(bool rtlContext);" />
      <MemberSignature Language="C#" Value="public static Android.Text.BidiFormatter? GetInstance (bool rtlContext);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.BidiFormatter GetInstance(bool rtlContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.GetInstance(System.Boolean)" />
      <MemberSignature Language="F#" Value="static member GetInstance : bool -&gt; Android.Text.BidiFormatter" Usage="Android.Text.BidiFormatter.GetInstance rtlContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstance", "(Z)Landroid/text/BidiFormatter;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstance", "(Z)Landroid/text/BidiFormatter;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.BidiFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rtlContext" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="rtlContext">Whether the context directionality is RTL.</param>
        <summary>Factory for creating an instance of BidiFormatter given the context directionality.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Factory for creating an instance of BidiFormatter given the context directionality.</para>
          <para>This does not create any new objects, and returns already existing static instances.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#getInstance(boolean)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.getInstance(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Instance As BidiFormatter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Text::BidiFormatter ^ Instance { Android::Text::BidiFormatter ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Android.Text.BidiFormatter? Instance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.BidiFormatter Instance" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BidiFormatter.Instance" />
      <MemberSignature Language="F#" Value="member this.Instance : Android.Text.BidiFormatter" Usage="Android.Text.BidiFormatter.Instance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInstance", "()Landroid/text/BidiFormatter;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInstance", "()Landroid/text/BidiFormatter;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.BidiFormatter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Factory for creating an instance of BidiFormatter for the default locale directionality.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Factory for creating an instance of BidiFormatter for the default locale directionality.</para>
          <para>This does not create any new objects, and returns already existing static instances.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#getInstance()" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.getInstance()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="IsRtl">
      <MemberSignature Language="VB.NET" Value="Public Function IsRtl (str As ICharSequence) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRtl(Java::Lang::ICharSequence ^ str);" />
      <MemberSignature Language="C#" Value="public bool IsRtl (Java.Lang.ICharSequence? str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRtl(class Java.Lang.ICharSequence str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.IsRtl(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="member this.IsRtl : Java.Lang.ICharSequence -&gt; bool" Usage="bidiFormatter.IsRtl str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isRtl", "(Ljava/lang/CharSequence;)Z", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isRtl", "(Ljava/lang/CharSequence;)Z", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="str">CharSequence whose directionality is to be estimated.</param>
        <summary>Operates like <c>#isRtl(String)</c>, but takes a CharSequence instead of a string</summary>
        <returns>true if <c>str</c>'s estimated overall directionality is RTL. Otherwise returns
                     false.</returns>
        <remarks>
          <para>Operates like <c>#isRtl(String)</c>, but takes a CharSequence instead of a string</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#isRtl(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.isRtl(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRtl">
      <MemberSignature Language="VB.NET" Value="Public Function IsRtl (str As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsRtl(System::String ^ str);" />
      <MemberSignature Language="C#" Value="public bool IsRtl (string? str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsRtl(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.IsRtl(System.String)" />
      <MemberSignature Language="F#" Value="member this.IsRtl : string -&gt; bool" Usage="bidiFormatter.IsRtl str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isRtl", "(Ljava/lang/String;)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isRtl", "(Ljava/lang/String;)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">String whose directionality is to be estimated.</param>
        <summary>Estimates the directionality of a string using the default text direction heuristic.</summary>
        <returns>true if <c>str</c>'s estimated overall directionality is RTL. Otherwise returns
                     false.</returns>
        <remarks>
          <para>Estimates the directionality of a string using the default text direction heuristic.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#isRtl(java.lang.String)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.isRtl(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="IsRtlContext">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRtlContext As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRtlContext { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsRtlContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRtlContext" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BidiFormatter.IsRtlContext" />
      <MemberSignature Language="F#" Value="member this.IsRtlContext : bool" Usage="Android.Text.BidiFormatter.IsRtlContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRtlContext", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRtlContext", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>Whether the context directionality is RTL</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#isRtlContext()" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.isRtlContext()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BidiFormatter.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Text.BidiFormatter.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StereoReset">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StereoReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StereoReset { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool StereoReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StereoReset" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BidiFormatter.StereoReset" />
      <MemberSignature Language="F#" Value="member this.StereoReset : bool" Usage="Android.Text.BidiFormatter.StereoReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getStereoReset", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getStereoReset", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>Whether directionality "reset" should also be done before a string being
            bidi-wrapped, not just after it.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#getStereoReset()" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.getStereoReset()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BidiFormatter.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Text.BidiFormatter.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Text.BidiFormatter.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Text.BidiFormatter.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrap">
      <MemberSignature Language="VB.NET" Value="Public Function UnicodeWrap (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnicodeWrap(System::String ^ str);" />
      <MemberSignature Language="C#" Value="public string? UnicodeWrap (string? str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnicodeWrap(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrap(System.String)" />
      <MemberSignature Language="F#" Value="member this.UnicodeWrap : string -&gt; string" Usage="bidiFormatter.UnicodeWrap str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">The input CharSequence.</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm and assumes <c>isolate</c> is true.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm and assumes <c>isolate</c> is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrap">
      <MemberSignature Language="VB.NET" Value="Public Function UnicodeWrap (str As String, heuristic As ITextDirectionHeuristic) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnicodeWrap(System::String ^ str, Android::Text::ITextDirectionHeuristic ^ heuristic);" />
      <MemberSignature Language="C#" Value="public string? UnicodeWrap (string? str, Android.Text.ITextDirectionHeuristic? heuristic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnicodeWrap(string str, class Android.Text.ITextDirectionHeuristic heuristic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrap(System.String,Android.Text.ITextDirectionHeuristic)" />
      <MemberSignature Language="F#" Value="member this.UnicodeWrap : string * Android.Text.ITextDirectionHeuristic -&gt; string" Usage="bidiFormatter.UnicodeWrap (str, heuristic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="heuristic" Type="Android.Text.ITextDirectionHeuristic" />
      </Parameters>
      <Docs>
        <param name="str">The input CharSequence.</param>
        <param name="heuristic">The algorithm to be used to estimate the CharSequence's overall direction.
                   See <c>TextDirectionHeuristics</c> for pre-defined heuristics.</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but
            assumes <c>isolate</c> is true.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but
            assumes <c>isolate</c> is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence,%20android.text.TextDirectionHeuristic)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence, android.text.TextDirectionHeuristic)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrap">
      <MemberSignature Language="VB.NET" Value="Public Function UnicodeWrap (str As String, isolate As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnicodeWrap(System::String ^ str, bool isolate);" />
      <MemberSignature Language="C#" Value="public string? UnicodeWrap (string? str, bool isolate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnicodeWrap(string str, bool isolate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrap(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.UnicodeWrap : string * bool -&gt; string" Usage="bidiFormatter.UnicodeWrap (str, isolate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="isolate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="str">The input CharSequence.</param>
        <param name="isolate">Whether to directionally isolate the CharSequence to prevent it from garbling
                the content around it</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrap">
      <MemberSignature Language="VB.NET" Value="Public Function UnicodeWrap (str As String, heuristic As ITextDirectionHeuristic, isolate As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ UnicodeWrap(System::String ^ str, Android::Text::ITextDirectionHeuristic ^ heuristic, bool isolate);" />
      <MemberSignature Language="C#" Value="public string? UnicodeWrap (string? str, Android.Text.ITextDirectionHeuristic? heuristic, bool isolate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string UnicodeWrap(string str, class Android.Text.ITextDirectionHeuristic heuristic, bool isolate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrap(System.String,Android.Text.ITextDirectionHeuristic,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.UnicodeWrap : string * Android.Text.ITextDirectionHeuristic * bool -&gt; string" Usage="bidiFormatter.UnicodeWrap (str, heuristic, isolate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
        <Parameter Name="heuristic" Type="Android.Text.ITextDirectionHeuristic" />
        <Parameter Name="isolate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="str">The input CharSequence.</param>
        <param name="heuristic">The algorithm to be used to estimate the CharSequence's overall direction.
                   See <c>TextDirectionHeuristics</c> for pre-defined heuristics.</param>
        <param name="isolate">Whether to directionally isolate the CharSequence to prevent it from garbling
                the content around it</param>
        <summary>Operates like <c>#unicodeWrap(String, TextDirectionHeuristic, boolean)</c>, but takes a
            CharSequence instead of a string</summary>
        <returns>Input CharSequence after applying the above processing. <c>null</c> if <c>str</c>
                is <c>null</c>.</returns>
        <remarks>
          <para>Operates like <c>#unicodeWrap(String, TextDirectionHeuristic, boolean)</c>, but takes a
            CharSequence instead of a string</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence,%20android.text.TextDirectionHeuristic,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence, android.text.TextDirectionHeuristic, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrapFormatted">
      <MemberSignature Language="VB.NET" Value="Public Function UnicodeWrapFormatted (str As ICharSequence) As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::ICharSequence ^ UnicodeWrapFormatted(Java::Lang::ICharSequence ^ str);" />
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? UnicodeWrapFormatted (Java.Lang.ICharSequence? str);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.ICharSequence UnicodeWrapFormatted(class Java.Lang.ICharSequence str) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrapFormatted(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="member this.UnicodeWrapFormatted : Java.Lang.ICharSequence -&gt; Java.Lang.ICharSequence" Usage="bidiFormatter.UnicodeWrapFormatted str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unicodeWrap", "(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unicodeWrap", "(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="str">The input CharSequence.</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm and assumes <c>isolate</c> is true.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm and assumes <c>isolate</c> is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrapFormatted">
      <MemberSignature Language="VB.NET" Value="Public Function UnicodeWrapFormatted (str As ICharSequence, heuristic As ITextDirectionHeuristic) As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::ICharSequence ^ UnicodeWrapFormatted(Java::Lang::ICharSequence ^ str, Android::Text::ITextDirectionHeuristic ^ heuristic);" />
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? UnicodeWrapFormatted (Java.Lang.ICharSequence? str, Android.Text.ITextDirectionHeuristic? heuristic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.ICharSequence UnicodeWrapFormatted(class Java.Lang.ICharSequence str, class Android.Text.ITextDirectionHeuristic heuristic) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrapFormatted(Java.Lang.ICharSequence,Android.Text.ITextDirectionHeuristic)" />
      <MemberSignature Language="F#" Value="member this.UnicodeWrapFormatted : Java.Lang.ICharSequence * Android.Text.ITextDirectionHeuristic -&gt; Java.Lang.ICharSequence" Usage="bidiFormatter.UnicodeWrapFormatted (str, heuristic)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unicodeWrap", "(Ljava/lang/CharSequence;Landroid/text/TextDirectionHeuristic;)Ljava/lang/CharSequence;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unicodeWrap", "(Ljava/lang/CharSequence;Landroid/text/TextDirectionHeuristic;)Ljava/lang/CharSequence;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="Java.Lang.ICharSequence" />
        <Parameter Name="heuristic" Type="Android.Text.ITextDirectionHeuristic" />
      </Parameters>
      <Docs>
        <param name="str">The input CharSequence.</param>
        <param name="heuristic">The algorithm to be used to estimate the CharSequence's overall direction.
                   See <c>TextDirectionHeuristics</c> for pre-defined heuristics.</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but
            assumes <c>isolate</c> is true.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but
            assumes <c>isolate</c> is true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence,%20android.text.TextDirectionHeuristic)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence, android.text.TextDirectionHeuristic)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrapFormatted">
      <MemberSignature Language="VB.NET" Value="Public Function UnicodeWrapFormatted (str As ICharSequence, isolate As Boolean) As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::ICharSequence ^ UnicodeWrapFormatted(Java::Lang::ICharSequence ^ str, bool isolate);" />
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? UnicodeWrapFormatted (Java.Lang.ICharSequence? str, bool isolate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.ICharSequence UnicodeWrapFormatted(class Java.Lang.ICharSequence str, bool isolate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrapFormatted(Java.Lang.ICharSequence,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.UnicodeWrapFormatted : Java.Lang.ICharSequence * bool -&gt; Java.Lang.ICharSequence" Usage="bidiFormatter.UnicodeWrapFormatted (str, isolate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unicodeWrap", "(Ljava/lang/CharSequence;Z)Ljava/lang/CharSequence;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unicodeWrap", "(Ljava/lang/CharSequence;Z)Ljava/lang/CharSequence;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="Java.Lang.ICharSequence" />
        <Parameter Name="isolate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="str">The input CharSequence.</param>
        <param name="isolate">Whether to directionally isolate the CharSequence to prevent it from garbling
                the content around it</param>
        <summary>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm.</summary>
        <returns>Input CharSequence after applying the above processing.</returns>
        <remarks>
          <para>Operates like <c>#unicodeWrap(CharSequence, TextDirectionHeuristic, boolean)</c>, but uses
            the formatter's default direction estimation algorithm.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnicodeWrapFormatted">
      <MemberSignature Language="VB.NET" Value="Public Function UnicodeWrapFormatted (str As ICharSequence, heuristic As ITextDirectionHeuristic, isolate As Boolean) As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::ICharSequence ^ UnicodeWrapFormatted(Java::Lang::ICharSequence ^ str, Android::Text::ITextDirectionHeuristic ^ heuristic, bool isolate);" />
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? UnicodeWrapFormatted (Java.Lang.ICharSequence? str, Android.Text.ITextDirectionHeuristic? heuristic, bool isolate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.ICharSequence UnicodeWrapFormatted(class Java.Lang.ICharSequence str, class Android.Text.ITextDirectionHeuristic heuristic, bool isolate) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.BidiFormatter.UnicodeWrapFormatted(Java.Lang.ICharSequence,Android.Text.ITextDirectionHeuristic,System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.UnicodeWrapFormatted : Java.Lang.ICharSequence * Android.Text.ITextDirectionHeuristic * bool -&gt; Java.Lang.ICharSequence" Usage="bidiFormatter.UnicodeWrapFormatted (str, heuristic, isolate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unicodeWrap", "(Ljava/lang/CharSequence;Landroid/text/TextDirectionHeuristic;Z)Ljava/lang/CharSequence;", "", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unicodeWrap", "(Ljava/lang/CharSequence;Landroid/text/TextDirectionHeuristic;Z)Ljava/lang/CharSequence;", "", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="Java.Lang.ICharSequence" />
        <Parameter Name="heuristic" Type="Android.Text.ITextDirectionHeuristic" />
        <Parameter Name="isolate" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="str">The input CharSequence.</param>
        <param name="heuristic">The algorithm to be used to estimate the CharSequence's overall direction.
                   See <c>TextDirectionHeuristics</c> for pre-defined heuristics.</param>
        <param name="isolate">Whether to directionally isolate the CharSequence to prevent it from garbling
                the content around it</param>
        <summary>Operates like <c>#unicodeWrap(String, TextDirectionHeuristic, boolean)</c>, but takes a
            CharSequence instead of a string</summary>
        <returns>Input CharSequence after applying the above processing. <c>null</c> if <c>str</c>
                is <c>null</c>.</returns>
        <remarks>
          <para>Operates like <c>#unicodeWrap(String, TextDirectionHeuristic, boolean)</c>, but takes a
            CharSequence instead of a string</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/BidiFormatter#unicodeWrap(java.lang.CharSequence,%20android.text.TextDirectionHeuristic,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.BidiFormatter.unicodeWrap(java.lang.CharSequence, android.text.TextDirectionHeuristic, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
