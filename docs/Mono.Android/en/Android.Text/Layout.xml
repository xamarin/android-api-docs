<Type Name="Layout" FullName="Android.Text.Layout">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Layout&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class Layout abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class Layout : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Layout extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Text.Layout" />
  <TypeSignature Language="F#" Value="type Layout = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/text/Layout", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/text/Layout", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A base class that manages text layout in visual elements on
            the screen.</summary>
    <remarks>
      <para>A base class that manages text layout in visual elements on
            the screen.</para>
      <para>For text that will be edited, use a <c>DynamicLayout</c>,
            which will be updated as the text changes.
            For text that will not change, use a <c>StaticLayout</c>.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/Layout" title="Reference documentation">Java documentation for <code>android.text.Layout</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Layout(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected Layout (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Text.Layout : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Text.Layout" Usage="new Android.Text.Layout (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (text As ICharSequence, paint As TextPaint, width As Integer, align As Layout.Alignment, spacingMult As Single, spacingAdd As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Layout(Java::Lang::ICharSequence ^ text, Android::Text::TextPaint ^ paint, int width, Android::Text::Layout::Alignment ^ align, float spacingMult, float spacingAdd);" />
      <MemberSignature Language="C#" Value="protected Layout (Java.Lang.ICharSequence? text, Android.Text.TextPaint? paint, int width, Android.Text.Layout.Alignment? align, float spacingMult, float spacingAdd);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence text, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingMult, float32 spacingAdd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.#ctor(Java.Lang.ICharSequence,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="new Android.Text.Layout : Java.Lang.ICharSequence * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single -&gt; Android.Text.Layout" Usage="new Android.Text.Layout (text, paint, width, align, spacingMult, spacingAdd)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FF)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FF)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingMult" Type="System.Single" />
        <Parameter Name="spacingAdd" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="text">the text to render</param>
        <param name="paint">the default paint for the layout.  Styles can override
            various attributes of the paint.</param>
        <param name="width">the wrapping width for the text.</param>
        <param name="align">whether to left, right, or center the text.  Styles can
            override the alignment.</param>
        <param name="spacingMult">factor by which to scale the font size to get the
            default line spacing</param>
        <param name="spacingAdd">amount to add to the default line spacing</param>
        <summary>Subclasses of Layout use this constructor to set the display text,
            width, and other standard properties.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#Layout(java.lang.CharSequence,%20android.text.TextPaint,%20int,%20android.text.Alignment,%20float,%20float)" title="Reference documentation">Java documentation for <code>android.text.Layout.Layout(java.lang.CharSequence, android.text.TextPaint, int, android.text.Alignment, float, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (text As String, paint As TextPaint, width As Integer, align As Layout.Alignment, spacingMult As Single, spacingAdd As Single)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Layout(System::String ^ text, Android::Text::TextPaint ^ paint, int width, Android::Text::Layout::Alignment ^ align, float spacingMult, float spacingAdd);" />
      <MemberSignature Language="C#" Value="protected Layout (string? text, Android.Text.TextPaint? paint, int width, Android.Text.Layout.Alignment? align, float spacingMult, float spacingAdd);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string text, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingMult, float32 spacingAdd) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.#ctor(System.String,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single)" />
      <MemberSignature Language="F#" Value="new Android.Text.Layout : string * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single -&gt; Android.Text.Layout" Usage="new Android.Text.Layout (text, paint, width, align, spacingMult, spacingAdd)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FF)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FF)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingMult" Type="System.Single" />
        <Parameter Name="spacingAdd" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingMult">To be added.</param>
        <param name="spacingAdd">To be added.</param>
        <summary>Subclasses of Layout use this constructor to set the display text,
 width, and other standard properties.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BottomPadding">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property BottomPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int BottomPadding { int get(); };" />
      <MemberSignature Language="C#" Value="public abstract int BottomPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BottomPadding" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.BottomPadding" />
      <MemberSignature Language="F#" Value="member this.BottomPadding : int" Usage="Android.Text.Layout.BottomPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBottomPadding", "()I", "GetGetBottomPaddingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getBottomPadding", "()I", "GetGetBottomPaddingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of extra pixels of descent padding in the
 bottom line of the Layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DefaultLinespacingAddition">
      <MemberSignature Language="VB.NET" Value="Public Const DefaultLinespacingAddition As Single  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: float DefaultLinespacingAddition = 0;" />
      <MemberSignature Language="C#" Value="public const float DefaultLinespacingAddition = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 DefaultLinespacingAddition = (0)" />
      <MemberSignature Language="DocId" Value="F:Android.Text.Layout.DefaultLinespacingAddition" />
      <MemberSignature Language="F#" Value="val mutable DefaultLinespacingAddition : single" Usage="Android.Text.Layout.DefaultLinespacingAddition" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DEFAULT_LINESPACING_ADDITION", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DEFAULT_LINESPACING_ADDITION", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultLinespacingMultiplier">
      <MemberSignature Language="VB.NET" Value="Public Const DefaultLinespacingMultiplier As Single  = 1" />
      <MemberSignature Language="C++ CLI" Value="public: float DefaultLinespacingMultiplier = 1;" />
      <MemberSignature Language="C#" Value="public const float DefaultLinespacingMultiplier = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal float32 DefaultLinespacingMultiplier = (1)" />
      <MemberSignature Language="DocId" Value="F:Android.Text.Layout.DefaultLinespacingMultiplier" />
      <MemberSignature Language="F#" Value="val mutable DefaultLinespacingMultiplier : single" Usage="Android.Text.Layout.DefaultLinespacingMultiplier" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("DEFAULT_LINESPACING_MULTIPLIER", ApiSince=28)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("DEFAULT_LINESPACING_MULTIPLIER", ApiSince=28)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android28.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android28.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Draw (c As Canvas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Draw(Android::Graphics::Canvas ^ c);" />
      <MemberSignature Language="C#" Value="public virtual void Draw (Android.Graphics.Canvas? c);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas c) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.Draw(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="abstract member Draw : Android.Graphics.Canvas -&gt; unit&#xA;override this.Draw : Android.Graphics.Canvas -&gt; unit" Usage="layout.Draw c" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="c" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="c">To be added.</param>
        <summary>Draw this Layout on the specified Canvas.</summary>
        <remarks>
          <para>Draw this Layout on the specified Canvas.</para>
          <para>This API draws background first, then draws text on top of it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#draw(android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.text.Layout.draw(android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Draw (canvas As Canvas, selectionHighlight As Path, selectionHighlightPaint As Paint, cursorOffsetVertical As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Draw(Android::Graphics::Canvas ^ canvas, Android::Graphics::Path ^ selectionHighlight, Android::Graphics::Paint ^ selectionHighlightPaint, int cursorOffsetVertical);" />
      <MemberSignature Language="C#" Value="public virtual void Draw (Android.Graphics.Canvas? canvas, Android.Graphics.Path? selectionHighlight, Android.Graphics.Paint? selectionHighlightPaint, int cursorOffsetVertical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas, class Android.Graphics.Path selectionHighlight, class Android.Graphics.Paint selectionHighlightPaint, int32 cursorOffsetVertical) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.Draw(Android.Graphics.Canvas,Android.Graphics.Path,Android.Graphics.Paint,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Draw : Android.Graphics.Canvas * Android.Graphics.Path * Android.Graphics.Paint * int -&gt; unit&#xA;override this.Draw : Android.Graphics.Canvas * Android.Graphics.Path * Android.Graphics.Paint * int -&gt; unit" Usage="layout.Draw (canvas, selectionHighlight, selectionHighlightPaint, cursorOffsetVertical)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Path;Landroid/graphics/Paint;I)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Path_Landroid_graphics_Paint_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;Landroid/graphics/Path;Landroid/graphics/Paint;I)V", "GetDraw_Landroid_graphics_Canvas_Landroid_graphics_Path_Landroid_graphics_Paint_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
        <Parameter Name="selectionHighlight" Type="Android.Graphics.Path" />
        <Parameter Name="selectionHighlightPaint" Type="Android.Graphics.Paint" />
        <Parameter Name="cursorOffsetVertical" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="canvas">the canvas</param>
        <param name="selectionHighlight">the path of the selection highlight or cursor; can be null</param>
        <param name="selectionHighlightPaint">the paint for the selection highlight</param>
        <param name="cursorOffsetVertical">the amount to temporarily translate the
                   canvas while rendering the highlight</param>
        <summary>Draw this Layout on the specified canvas, with the highlight path drawn
            between the background and the text.</summary>
        <remarks>
          <para>Draw this Layout on the specified canvas, with the highlight path drawn
            between the background and the text.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#draw(android.graphics.Canvas,%20android.graphics.Path,%20android.graphics.Paint,%20int)" title="Reference documentation">Java documentation for <code>android.text.Layout.draw(android.graphics.Canvas, android.graphics.Path, android.graphics.Paint, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Draw (canvas As Canvas, highlightPaths As IList(Of Path), highlightPaints As IList(Of Paint), selectionPath As Path, selectionPaint As Paint, cursorOffsetVertical As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Draw(Android::Graphics::Canvas ^ canvas, System::Collections::Generic::IList&lt;Android::Graphics::Path ^&gt; ^ highlightPaths, System::Collections::Generic::IList&lt;Android::Graphics::Paint ^&gt; ^ highlightPaints, Android::Graphics::Path ^ selectionPath, Android::Graphics::Paint ^ selectionPaint, int cursorOffsetVertical);" />
      <MemberSignature Language="C#" Value="public virtual void Draw (Android.Graphics.Canvas canvas, System.Collections.Generic.IList&lt;Android.Graphics.Path&gt;? highlightPaths, System.Collections.Generic.IList&lt;Android.Graphics.Paint&gt;? highlightPaints, Android.Graphics.Path? selectionPath, Android.Graphics.Paint? selectionPaint, int cursorOffsetVertical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Draw(class Android.Graphics.Canvas canvas, class System.Collections.Generic.IList`1&lt;class Android.Graphics.Path&gt; highlightPaths, class System.Collections.Generic.IList`1&lt;class Android.Graphics.Paint&gt; highlightPaints, class Android.Graphics.Path selectionPath, class Android.Graphics.Paint selectionPaint, int32 cursorOffsetVertical) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.Draw(Android.Graphics.Canvas,System.Collections.Generic.IList{Android.Graphics.Path},System.Collections.Generic.IList{Android.Graphics.Paint},Android.Graphics.Path,Android.Graphics.Paint,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Draw : Android.Graphics.Canvas * System.Collections.Generic.IList&lt;Android.Graphics.Path&gt; * System.Collections.Generic.IList&lt;Android.Graphics.Paint&gt; * Android.Graphics.Path * Android.Graphics.Paint * int -&gt; unit&#xA;override this.Draw : Android.Graphics.Canvas * System.Collections.Generic.IList&lt;Android.Graphics.Path&gt; * System.Collections.Generic.IList&lt;Android.Graphics.Paint&gt; * Android.Graphics.Path * Android.Graphics.Paint * int -&gt; unit" Usage="layout.Draw (canvas, highlightPaths, highlightPaints, selectionPath, selectionPaint, cursorOffsetVertical)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;Ljava/util/List;Ljava/util/List;Landroid/graphics/Path;Landroid/graphics/Paint;I)V", "GetDraw_Landroid_graphics_Canvas_Ljava_util_List_Ljava_util_List_Landroid_graphics_Path_Landroid_graphics_Paint_IHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("draw", "(Landroid/graphics/Canvas;Ljava/util/List;Ljava/util/List;Landroid/graphics/Path;Landroid/graphics/Paint;I)V", "GetDraw_Landroid_graphics_Canvas_Ljava_util_List_Ljava_util_List_Landroid_graphics_Path_Landroid_graphics_Paint_IHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="highlightPaths" Type="System.Collections.Generic.IList&lt;Android.Graphics.Path&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="highlightPaints" Type="System.Collections.Generic.IList&lt;Android.Graphics.Paint&gt;">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="selectionPath" Type="Android.Graphics.Path" />
        <Parameter Name="selectionPaint" Type="Android.Graphics.Paint" />
        <Parameter Name="cursorOffsetVertical" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="canvas">the canvas</param>
        <param name="highlightPaths">the path of the highlights. The highlightPaths and highlightPaints must
                                 have the same length and aligned in the same order. For example, the
                                 paint of the n-th of the highlightPaths should be stored at the n-th of
                                 highlightPaints.</param>
        <param name="highlightPaints">the paints for the highlights. The highlightPaths and highlightPaints
                                   must have the same length and aligned in the same order. For example,
                                   the paint of the n-th of the highlightPaths should be stored at the
                                   n-th of highlightPaints.</param>
        <param name="selectionPath">the selection or cursor path</param>
        <param name="selectionPaint">the paint for the selection or cursor.</param>
        <param name="cursorOffsetVertical">the amount to temporarily translate the canvas while rendering
                                       the highlight</param>
        <summary>Draw this layout on the specified canvas.</summary>
        <remarks>
          <para>Draw this layout on the specified canvas.</para>
          <para>This API draws background first, then draws highlight paths on top of it, then draws
            selection or cursor, then finally draws text on top of it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#draw(android.graphics.Canvas,%20java.util.List%3Candroid.graphics.Path%3E,%20java.util.List%3Candroid.graphics.Paint%3E,%20android.graphics.Path,%20android.graphics.Paint,%20int)" title="Reference documentation">Java documentation for <code>android.text.Layout.draw(android.graphics.Canvas, java.util.List&lt;android.graphics.Path&gt;, java.util.List&lt;android.graphics.Paint&gt;, android.graphics.Path, android.graphics.Paint, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawBackground">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawBackground (canvas As Canvas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawBackground(Android::Graphics::Canvas ^ canvas);" />
      <MemberSignature Language="C#" Value="public virtual void DrawBackground (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawBackground(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.DrawBackground(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="abstract member DrawBackground : Android.Graphics.Canvas -&gt; unit&#xA;override this.DrawBackground : Android.Graphics.Canvas -&gt; unit" Usage="layout.DrawBackground canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("drawBackground", "(Landroid/graphics/Canvas;)V", "GetDrawBackground_Landroid_graphics_Canvas_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("drawBackground", "(Landroid/graphics/Canvas;)V", "GetDrawBackground_Landroid_graphics_Canvas_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">the canvas</param>
        <summary>Draw background of this layout.</summary>
        <remarks>
          <para>Draw background of this layout.
            
            Different from <c>#draw(Canvas, List, List, Path, Paint, int)</c> API, this API only draws
            background, not drawing text, highlights or selections. The background here is drawn by
            <c>LineBackgroundSpan</c> attached to the text.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#drawBackground(android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.text.Layout.drawBackground(android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DrawText (canvas As Canvas)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DrawText(Android::Graphics::Canvas ^ canvas);" />
      <MemberSignature Language="C#" Value="public virtual void DrawText (Android.Graphics.Canvas canvas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DrawText(class Android.Graphics.Canvas canvas) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.DrawText(Android.Graphics.Canvas)" />
      <MemberSignature Language="F#" Value="abstract member DrawText : Android.Graphics.Canvas -&gt; unit&#xA;override this.DrawText : Android.Graphics.Canvas -&gt; unit" Usage="layout.DrawText canvas" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("drawText", "(Landroid/graphics/Canvas;)V", "GetDrawText_Landroid_graphics_Canvas_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("drawText", "(Landroid/graphics/Canvas;)V", "GetDrawText_Landroid_graphics_Canvas_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="canvas" Type="Android.Graphics.Canvas" />
      </Parameters>
      <Docs>
        <param name="canvas">the canvas</param>
        <summary>Draw text part of this layout.</summary>
        <remarks>
          <para>Draw text part of this layout.
            
            Different from <c>#draw(Canvas, List, List, Path, Paint, int)</c> API, this API only draws
            text part, not drawing highlights, selections, or backgrounds.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#drawText(android.graphics.Canvas)" title="Reference documentation">Java documentation for <code>android.text.Layout.drawText(android.graphics.Canvas)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EllipsizedWidth">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EllipsizedWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EllipsizedWidth { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int EllipsizedWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EllipsizedWidth" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.EllipsizedWidth" />
      <MemberSignature Language="F#" Value="member this.EllipsizedWidth : int" Usage="Android.Text.Layout.EllipsizedWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEllipsizedWidth", "()I", "GetGetEllipsizedWidthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEllipsizedWidth", "()I", "GetGetEllipsizedWidthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the width to which this Layout is ellipsizing, or
            <c>#getWidth</c> if it is not doing anything special.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the width to which this Layout is ellipsizing, or
            <c>#getWidth</c> if it is not doing anything special.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getEllipsizedWidth()" title="Reference documentation">Java documentation for <code>android.text.Layout.getEllipsizedWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FillCharacterBounds">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub FillCharacterBounds (start As Integer, end As Integer, bounds As Single(), boundsStart As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void FillCharacterBounds(int start, int end, cli::array &lt;float&gt; ^ bounds, int boundsStart);" />
      <MemberSignature Language="C#" Value="public virtual void FillCharacterBounds (int start, int end, float[] bounds, int boundsStart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void FillCharacterBounds(int32 start, int32 end, float32[] bounds, int32 boundsStart) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.FillCharacterBounds(System.Int32,System.Int32,System.Single[],System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member FillCharacterBounds : int * int * single[] * int -&gt; unit&#xA;override this.FillCharacterBounds : int * int * single[] * int -&gt; unit" Usage="layout.FillCharacterBounds (start, end, bounds, boundsStart)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("fillCharacterBounds", "(II[FI)V", "GetFillCharacterBounds_IIarrayFIHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("fillCharacterBounds", "(II[FI)V", "GetFillCharacterBounds_IIarrayFIHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="bounds" Type="System.Single[]" />
        <Parameter Name="boundsStart" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the start index to compute the character bounds, inclusive.</param>
        <param name="end">the end index to compute the character bounds, exclusive.</param>
        <param name="bounds">the array to fill in the character bounds. The array is divided into segments
                          of four where each index in that segment represents left, top, right and
                          bottom of the character.</param>
        <param name="boundsStart">the inclusive start index in the array to start filling in the values
                               from.</param>
        <summary>Return the characters' bounds in the given range.</summary>
        <remarks>
          <para>Return the characters' bounds in the given range. The <c>bounds</c> array will be filled
            starting from <c>boundsStart</c> (inclusive). The coordinates are in local text layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#fillCharacterBounds(int,%20int,%20float[],%20int)" title="Reference documentation">Java documentation for <code>android.text.Layout.fillCharacterBounds(int, int, float[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAlignment">
      <MemberSignature Language="VB.NET" Value="Public Function GetAlignment () As Layout.Alignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Text::Layout::Alignment ^ GetAlignment();" />
      <MemberSignature Language="C#" Value="public Android.Text.Layout.Alignment? GetAlignment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Text.Layout/Alignment GetAlignment() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetAlignment" />
      <MemberSignature Language="F#" Value="member this.GetAlignment : unit -&gt; Android.Text.Layout.Alignment" Usage="layout.GetAlignment " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAlignment", "()Landroid/text/Layout$Alignment;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAlignment", "()Landroid/text/Layout$Alignment;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Layout+Alignment</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the base alignment of this layout.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getAlignment()" title="Reference documentation">Java documentation for <code>android.text.Layout.getAlignment()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetCursorPath">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetCursorPath (point As Integer, dest As Path, editingBuffer As ICharSequence)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetCursorPath(int point, Android::Graphics::Path ^ dest, Java::Lang::ICharSequence ^ editingBuffer);" />
      <MemberSignature Language="C#" Value="public virtual void GetCursorPath (int point, Android.Graphics.Path? dest, Java.Lang.ICharSequence? editingBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetCursorPath(int32 point, class Android.Graphics.Path dest, class Java.Lang.ICharSequence editingBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetCursorPath(System.Int32,Android.Graphics.Path,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member GetCursorPath : int * Android.Graphics.Path * Java.Lang.ICharSequence -&gt; unit&#xA;override this.GetCursorPath : int * Android.Graphics.Path * Java.Lang.ICharSequence -&gt; unit" Usage="layout.GetCursorPath (point, dest, editingBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getCursorPath", "(ILandroid/graphics/Path;Ljava/lang/CharSequence;)V", "GetGetCursorPath_ILandroid_graphics_Path_Ljava_lang_CharSequence_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getCursorPath", "(ILandroid/graphics/Path;Ljava/lang/CharSequence;)V", "GetGetCursorPath_ILandroid_graphics_Path_Ljava_lang_CharSequence_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Int32" />
        <Parameter Name="dest" Type="Android.Graphics.Path" />
        <Parameter Name="editingBuffer" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="dest">To be added.</param>
        <param name="editingBuffer">To be added.</param>
        <summary>Fills in the specified Path with a representation of a cursor
            at the specified offset.</summary>
        <remarks>
          <para>Fills in the specified Path with a representation of a cursor
            at the specified offset.  This will often be a vertical line
            but can be multiple discontinuous lines in text with multiple
            directionalities.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getCursorPath(int,%20android.graphics.Path,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.Layout.getCursorPath(int, android.graphics.Path, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetCursorPath">
      <MemberSignature Language="VB.NET" Value="Public Sub GetCursorPath (point As Integer, dest As Path, editingBuffer As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCursorPath(int point, Android::Graphics::Path ^ dest, System::String ^ editingBuffer);" />
      <MemberSignature Language="C#" Value="public void GetCursorPath (int point, Android.Graphics.Path? dest, string? editingBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCursorPath(int32 point, class Android.Graphics.Path dest, string editingBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetCursorPath(System.Int32,Android.Graphics.Path,System.String)" />
      <MemberSignature Language="F#" Value="member this.GetCursorPath : int * Android.Graphics.Path * string -&gt; unit" Usage="layout.GetCursorPath (point, dest, editingBuffer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Int32" />
        <Parameter Name="dest" Type="Android.Graphics.Path" />
        <Parameter Name="editingBuffer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="point">To be added.</param>
        <param name="dest">To be added.</param>
        <param name="editingBuffer">To be added.</param>
        <summary>Fills in the specified Path with a representation of a cursor
            at the specified offset.</summary>
        <remarks>
          <para>Fills in the specified Path with a representation of a cursor
            at the specified offset.  This will often be a vertical line
            but can be multiple discontinuous lines in text with multiple
            directionalities.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getCursorPath(int,%20android.graphics.Path,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.Layout.getCursorPath(int, android.graphics.Path, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesiredWidth">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDesiredWidth (source As ICharSequence, paint As TextPaint) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float GetDesiredWidth(Java::Lang::ICharSequence ^ source, Android::Text::TextPaint ^ paint);" />
      <MemberSignature Language="C#" Value="public static float GetDesiredWidth (Java.Lang.ICharSequence? source, Android.Text.TextPaint? paint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetDesiredWidth(class Java.Lang.ICharSequence source, class Android.Text.TextPaint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetDesiredWidth(Java.Lang.ICharSequence,Android.Text.TextPaint)" />
      <MemberSignature Language="F#" Value="static member GetDesiredWidth : Java.Lang.ICharSequence * Android.Text.TextPaint -&gt; single" Usage="Android.Text.Layout.GetDesiredWidth (source, paint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDesiredWidth", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;)F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDesiredWidth", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;)F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="paint">To be added.</param>
        <summary>Return how wide a layout must be in order to display the specified text with one line per
            paragraph.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return how wide a layout must be in order to display the specified text with one line per
            paragraph.</para>
          <para>As of O, Uses
            <c>TextDirectionHeuristics#FIRSTSTRONG_LTR</c> as the default text direction heuristics. In
            the earlier versions uses <c>TextDirectionHeuristics#LTR</c> as the default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getDesiredWidth(java.lang.CharSequence,%20android.text.TextPaint)" title="Reference documentation">Java documentation for <code>android.text.Layout.getDesiredWidth(java.lang.CharSequence, android.text.TextPaint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDesiredWidth">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDesiredWidth (source As String, paint As TextPaint) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float GetDesiredWidth(System::String ^ source, Android::Text::TextPaint ^ paint);" />
      <MemberSignature Language="C#" Value="public static float GetDesiredWidth (string? source, Android.Text.TextPaint? paint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetDesiredWidth(string source, class Android.Text.TextPaint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetDesiredWidth(System.String,Android.Text.TextPaint)" />
      <MemberSignature Language="F#" Value="static member GetDesiredWidth : string * Android.Text.TextPaint -&gt; single" Usage="Android.Text.Layout.GetDesiredWidth (source, paint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="paint">To be added.</param>
        <summary>Return how wide a layout must be in order to display the specified text with one line per
            paragraph.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return how wide a layout must be in order to display the specified text with one line per
            paragraph.</para>
          <para>As of O, Uses
            <c>TextDirectionHeuristics#FIRSTSTRONG_LTR</c> as the default text direction heuristics. In
            the earlier versions uses <c>TextDirectionHeuristics#LTR</c> as the default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getDesiredWidth(java.lang.CharSequence,%20android.text.TextPaint)" title="Reference documentation">Java documentation for <code>android.text.Layout.getDesiredWidth(java.lang.CharSequence, android.text.TextPaint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDesiredWidth">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDesiredWidth (source As ICharSequence, start As Integer, end As Integer, paint As TextPaint) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float GetDesiredWidth(Java::Lang::ICharSequence ^ source, int start, int end, Android::Text::TextPaint ^ paint);" />
      <MemberSignature Language="C#" Value="public static float GetDesiredWidth (Java.Lang.ICharSequence? source, int start, int end, Android.Text.TextPaint? paint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetDesiredWidth(class Java.Lang.ICharSequence source, int32 start, int32 end, class Android.Text.TextPaint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetDesiredWidth(Java.Lang.ICharSequence,System.Int32,System.Int32,Android.Text.TextPaint)" />
      <MemberSignature Language="F#" Value="static member GetDesiredWidth : Java.Lang.ICharSequence * int * int * Android.Text.TextPaint -&gt; single" Usage="Android.Text.Layout.GetDesiredWidth (source, start, end, paint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDesiredWidth", "(Ljava/lang/CharSequence;IILandroid/text/TextPaint;)F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDesiredWidth", "(Ljava/lang/CharSequence;IILandroid/text/TextPaint;)F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="paint">To be added.</param>
        <summary>Return how wide a layout must be in order to display the specified text slice with one
            line per paragraph.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return how wide a layout must be in order to display the specified text slice with one
            line per paragraph.</para>
          <para>As of O, Uses
            <c>TextDirectionHeuristics#FIRSTSTRONG_LTR</c> as the default text direction heuristics. In
            the earlier versions uses <c>TextDirectionHeuristics#LTR</c> as the default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getDesiredWidth(java.lang.CharSequence,%20int,%20int,%20android.text.TextPaint)" title="Reference documentation">Java documentation for <code>android.text.Layout.getDesiredWidth(java.lang.CharSequence, int, int, android.text.TextPaint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDesiredWidth">
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDesiredWidth (source As String, start As Integer, end As Integer, paint As TextPaint) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static float GetDesiredWidth(System::String ^ source, int start, int end, Android::Text::TextPaint ^ paint);" />
      <MemberSignature Language="C#" Value="public static float GetDesiredWidth (string? source, int start, int end, Android.Text.TextPaint? paint);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float32 GetDesiredWidth(string source, int32 start, int32 end, class Android.Text.TextPaint paint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetDesiredWidth(System.String,System.Int32,System.Int32,Android.Text.TextPaint)" />
      <MemberSignature Language="F#" Value="static member GetDesiredWidth : string * int * int * Android.Text.TextPaint -&gt; single" Usage="Android.Text.Layout.GetDesiredWidth (source, start, end, paint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="paint">To be added.</param>
        <summary>Return how wide a layout must be in order to display the specified text slice with one
            line per paragraph.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return how wide a layout must be in order to display the specified text slice with one
            line per paragraph.</para>
          <para>As of O, Uses
            <c>TextDirectionHeuristics#FIRSTSTRONG_LTR</c> as the default text direction heuristics. In
            the earlier versions uses <c>TextDirectionHeuristics#LTR</c> as the default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getDesiredWidth(java.lang.CharSequence,%20int,%20int,%20android.text.TextPaint)" title="Reference documentation">Java documentation for <code>android.text.Layout.getDesiredWidth(java.lang.CharSequence, int, int, android.text.TextPaint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEllipsisCount">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEllipsisCount (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetEllipsisCount(int line);" />
      <MemberSignature Language="C#" Value="public abstract int GetEllipsisCount (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetEllipsisCount(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetEllipsisCount(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetEllipsisCount : int -&gt; int" Usage="layout.GetEllipsisCount line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEllipsisCount", "(I)I", "GetGetEllipsisCount_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getEllipsisCount", "(I)I", "GetGetEllipsisCount_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns the number of characters to be ellipsized away, or 0 if
            no ellipsis is to take place.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the number of characters to be ellipsized away, or 0 if
            no ellipsis is to take place.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getEllipsisCount(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getEllipsisCount(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEllipsisStart">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetEllipsisStart (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetEllipsisStart(int line);" />
      <MemberSignature Language="C#" Value="public abstract int GetEllipsisStart (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetEllipsisStart(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetEllipsisStart(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetEllipsisStart : int -&gt; int" Usage="layout.GetEllipsisStart line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEllipsisStart", "(I)I", "GetGetEllipsisStart_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getEllipsisStart", "(I)I", "GetGetEllipsisStart_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the offset of the first character to be ellipsized away,
            relative to the start of the line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the offset of the first character to be ellipsized away,
            relative to the start of the line.  (So 0 if the beginning of the
            line is ellipsized, not getLineStart().)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getEllipsisStart(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getEllipsisStart(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineAscent">
      <MemberSignature Language="VB.NET" Value="Public Function GetLineAscent (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineAscent(int line);" />
      <MemberSignature Language="C#" Value="public int GetLineAscent (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineAscent(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineAscent(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetLineAscent : int -&gt; int" Usage="layout.GetLineAscent line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineAscent", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineAscent", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Get the ascent of the text on the specified line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Get the ascent of the text on the specified line.
            The return value is negative to match the Paint.ascent() convention.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineAscent(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineAscent(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineBaseline">
      <MemberSignature Language="VB.NET" Value="Public Function GetLineBaseline (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineBaseline(int line);" />
      <MemberSignature Language="C#" Value="public int GetLineBaseline (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineBaseline(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineBaseline(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetLineBaseline : int -&gt; int" Usage="layout.GetLineBaseline line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineBaseline", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineBaseline", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the vertical position of the baseline of the specified line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the vertical position of the baseline of the specified line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineBaseline(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineBaseline(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineBottom">
      <MemberSignature Language="VB.NET" Value="Public Function GetLineBottom (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineBottom(int line);" />
      <MemberSignature Language="C#" Value="public int GetLineBottom (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineBottom(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineBottom(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetLineBottom : int -&gt; int" Usage="layout.GetLineBottom line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineBottom", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineBottom", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the vertical position of the bottom of the specified line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the vertical position of the bottom of the specified line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineBottom(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineBottom(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineBottom">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineBottom (line As Integer, includeLineSpacing As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineBottom(int line, bool includeLineSpacing);" />
      <MemberSignature Language="C#" Value="public virtual int GetLineBottom (int line, bool includeLineSpacing);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineBottom(int32 line, bool includeLineSpacing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineBottom(System.Int32,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member GetLineBottom : int * bool -&gt; int&#xA;override this.GetLineBottom : int * bool -&gt; int" Usage="layout.GetLineBottom (line, includeLineSpacing)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineBottom", "(IZ)I", "GetGetLineBottom_IZHandler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineBottom", "(IZ)I", "GetGetLineBottom_IZHandler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="includeLineSpacing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="line">index of the line</param>
        <param name="includeLineSpacing">whether to include the line spacing</param>
        <summary>Return the vertical position of the bottom of the specified line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the vertical position of the bottom of the specified line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineBottom(int,%20boolean)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineBottom(int, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineBounds">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineBounds (line As Integer, bounds As Rect) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineBounds(int line, Android::Graphics::Rect ^ bounds);" />
      <MemberSignature Language="C#" Value="public virtual int GetLineBounds (int line, Android.Graphics.Rect? bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineBounds(int32 line, class Android.Graphics.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineBounds(System.Int32,Android.Graphics.Rect)" />
      <MemberSignature Language="F#" Value="abstract member GetLineBounds : int * Android.Graphics.Rect -&gt; int&#xA;override this.GetLineBounds : int * Android.Graphics.Rect -&gt; int" Usage="layout.GetLineBounds (line, bounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineBounds", "(ILandroid/graphics/Rect;)I", "GetGetLineBounds_ILandroid_graphics_Rect_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineBounds", "(ILandroid/graphics/Rect;)I", "GetGetLineBounds_ILandroid_graphics_Rect_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="bounds" Type="Android.Graphics.Rect" />
      </Parameters>
      <Docs>
        <param name="line">which line to examine (0..getLineCount() - 1)</param>
        <param name="bounds">Optional. If not null, it returns the extent of the line</param>
        <summary>Return the baseline for the specified line (0&amp;hellip;getLineCount() - 1)
            If bounds is not null, return the top, left, right, bottom extents
            of the specified line in it.</summary>
        <returns>the Y-coordinate of the baseline</returns>
        <remarks>
          <para>Return the baseline for the specified line (0&amp;hellip;getLineCount() - 1)
            If bounds is not null, return the top, left, right, bottom extents
            of the specified line in it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineBounds(int,%20android.graphics.Rect)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineBounds(int, android.graphics.Rect)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineContainsTab">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetLineContainsTab (line As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool GetLineContainsTab(int line);" />
      <MemberSignature Language="C#" Value="public abstract bool GetLineContainsTab (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetLineContainsTab(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineContainsTab(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetLineContainsTab : int -&gt; bool" Usage="layout.GetLineContainsTab line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineContainsTab", "(I)Z", "GetGetLineContainsTab_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineContainsTab", "(I)Z", "GetGetLineContainsTab_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns whether the specified line contains one or more
            characters that need to be handled specially, like tabs.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns whether the specified line contains one or more
            characters that need to be handled specially, like tabs.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineContainsTab(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineContainsTab(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineDescent">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetLineDescent (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetLineDescent(int line);" />
      <MemberSignature Language="C#" Value="public abstract int GetLineDescent (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineDescent(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineDescent(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetLineDescent : int -&gt; int" Usage="layout.GetLineDescent line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineDescent", "(I)I", "GetGetLineDescent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineDescent", "(I)I", "GetGetLineDescent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the descent of the specified line(0&amp;hellip;getLineCount() - 1).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the descent of the specified line(0&amp;hellip;getLineCount() - 1).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineDescent(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineDescent(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineDirections">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetLineDirections (line As Integer) As Layout.Directions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Android::Text::Layout::Directions ^ GetLineDirections(int line);" />
      <MemberSignature Language="C#" Value="public abstract Android.Text.Layout.Directions? GetLineDirections (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.Layout/Directions GetLineDirections(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineDirections(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetLineDirections : int -&gt; Android.Text.Layout.Directions" Usage="layout.GetLineDirections line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineDirections", "(I)Landroid/text/Layout$Directions;", "GetGetLineDirections_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineDirections", "(I)Landroid/text/Layout$Directions;", "GetGetLineDirections_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Layout+Directions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns the directional run information for the specified line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineDirections(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineDirections(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineEnd">
      <MemberSignature Language="VB.NET" Value="Public Function GetLineEnd (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineEnd(int line);" />
      <MemberSignature Language="C#" Value="public int GetLineEnd (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineEnd(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineEnd(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetLineEnd : int -&gt; int" Usage="layout.GetLineEnd line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineEnd", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineEnd", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the text offset after the last character on the specified line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the text offset after the last character on the specified line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineEnd(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineEnd(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineForOffset">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineForOffset (offset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineForOffset(int offset);" />
      <MemberSignature Language="C#" Value="public virtual int GetLineForOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineForOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineForOffset(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetLineForOffset : int -&gt; int&#xA;override this.GetLineForOffset : int -&gt; int" Usage="layout.GetLineForOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineForOffset", "(I)I", "GetGetLineForOffset_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineForOffset", "(I)I", "GetGetLineForOffset_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <summary>Get the line number on which the specified text offset appears.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Get the line number on which the specified text offset appears.
            If you ask for a position before 0, you get 0; if you ask for a position
            beyond the end of the text, you get the last line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineForOffset(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineForOffset(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineForVertical">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineForVertical (vertical As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineForVertical(int vertical);" />
      <MemberSignature Language="C#" Value="public virtual int GetLineForVertical (int vertical);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineForVertical(int32 vertical) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineForVertical(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetLineForVertical : int -&gt; int&#xA;override this.GetLineForVertical : int -&gt; int" Usage="layout.GetLineForVertical vertical" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineForVertical", "(I)I", "GetGetLineForVertical_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineForVertical", "(I)I", "GetGetLineForVertical_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vertical" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="vertical">To be added.</param>
        <summary>Get the line number corresponding to the specified vertical position.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Get the line number corresponding to the specified vertical position.
            If you ask for a position above 0, you get 0; if you ask for a position
            below the bottom of the text, you get the last line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineForVertical(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineForVertical(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineLeft">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineLeft (line As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float GetLineLeft(int line);" />
      <MemberSignature Language="C#" Value="public virtual float GetLineLeft (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetLineLeft(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineLeft(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetLineLeft : int -&gt; single&#xA;override this.GetLineLeft : int -&gt; single" Usage="layout.GetLineLeft line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineLeft", "(I)F", "GetGetLineLeft_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineLeft", "(I)F", "GetGetLineLeft_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Get the leftmost position that should be exposed for horizontal
            scrolling on the specified line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Get the leftmost position that should be exposed for horizontal
            scrolling on the specified line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineLeft(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineLeft(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineMax">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineMax (line As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float GetLineMax(int line);" />
      <MemberSignature Language="C#" Value="public virtual float GetLineMax (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetLineMax(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineMax(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetLineMax : int -&gt; single&#xA;override this.GetLineMax : int -&gt; single" Usage="layout.GetLineMax line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineMax", "(I)F", "GetGetLineMax_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineMax", "(I)F", "GetGetLineMax_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Gets the unsigned horizontal extent of the specified line, including
            leading margin indent, but excluding trailing whitespace.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Gets the unsigned horizontal extent of the specified line, including
            leading margin indent, but excluding trailing whitespace.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineMax(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineMax(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineRight">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineRight (line As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float GetLineRight(int line);" />
      <MemberSignature Language="C#" Value="public virtual float GetLineRight (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetLineRight(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineRight(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetLineRight : int -&gt; single&#xA;override this.GetLineRight : int -&gt; single" Usage="layout.GetLineRight line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineRight", "(I)F", "GetGetLineRight_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineRight", "(I)F", "GetGetLineRight_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Get the rightmost position that should be exposed for horizontal
            scrolling on the specified line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Get the rightmost position that should be exposed for horizontal
            scrolling on the specified line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineRight(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineRight(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineStart">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetLineStart (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetLineStart(int line);" />
      <MemberSignature Language="C#" Value="public abstract int GetLineStart (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineStart(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineStart(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetLineStart : int -&gt; int" Usage="layout.GetLineStart line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineStart", "(I)I", "GetGetLineStart_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineStart", "(I)I", "GetGetLineStart_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the text offset of the beginning of the specified line (
            0&amp;hellip;getLineCount()).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the text offset of the beginning of the specified line (
            0&amp;hellip;getLineCount()). If the specified line is equal to the line
            count, returns the length of the text.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineStart(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineStart(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineTop">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetLineTop (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract int GetLineTop(int line);" />
      <MemberSignature Language="C#" Value="public abstract int GetLineTop (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineTop(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineTop(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetLineTop : int -&gt; int" Usage="layout.GetLineTop line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineTop", "(I)I", "GetGetLineTop_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineTop", "(I)I", "GetGetLineTop_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the vertical position of the top of the specified line
            (0&amp;hellip;getLineCount()).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the vertical position of the top of the specified line
            (0&amp;hellip;getLineCount()).
            If the specified line is equal to the line count, returns the
            bottom of the last line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineTop(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineTop(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineVisibleEnd">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineVisibleEnd (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetLineVisibleEnd(int line);" />
      <MemberSignature Language="C#" Value="public virtual int GetLineVisibleEnd (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetLineVisibleEnd(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineVisibleEnd(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetLineVisibleEnd : int -&gt; int&#xA;override this.GetLineVisibleEnd : int -&gt; int" Usage="layout.GetLineVisibleEnd line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineVisibleEnd", "(I)I", "GetGetLineVisibleEnd_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineVisibleEnd", "(I)I", "GetGetLineVisibleEnd_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the text offset after the last visible character (so whitespace
            is not counted) on the specified line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Return the text offset after the last visible character (so whitespace
            is not counted) on the specified line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineVisibleEnd(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineVisibleEnd(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineWidth">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLineWidth (line As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float GetLineWidth(int line);" />
      <MemberSignature Language="C#" Value="public virtual float GetLineWidth (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetLineWidth(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetLineWidth(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetLineWidth : int -&gt; single&#xA;override this.GetLineWidth : int -&gt; single" Usage="layout.GetLineWidth line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineWidth", "(I)F", "GetGetLineWidth_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLineWidth", "(I)F", "GetGetLineWidth_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Gets the unsigned horizontal extent of the specified line, including
            leading margin indent and trailing whitespace.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Gets the unsigned horizontal extent of the specified line, including
            leading margin indent and trailing whitespace.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getLineWidth(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getLineWidth(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetForHorizontal">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOffsetForHorizontal (line As Integer, horiz As Single) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetOffsetForHorizontal(int line, float horiz);" />
      <MemberSignature Language="C#" Value="public virtual int GetOffsetForHorizontal (int line, float horiz);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOffsetForHorizontal(int32 line, float32 horiz) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetOffsetForHorizontal(System.Int32,System.Single)" />
      <MemberSignature Language="F#" Value="abstract member GetOffsetForHorizontal : int * single -&gt; int&#xA;override this.GetOffsetForHorizontal : int * single -&gt; int" Usage="layout.GetOffsetForHorizontal (line, horiz)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOffsetForHorizontal", "(IF)I", "GetGetOffsetForHorizontal_IFHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOffsetForHorizontal", "(IF)I", "GetGetOffsetForHorizontal_IFHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
        <Parameter Name="horiz" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <param name="horiz">To be added.</param>
        <summary>Get the character offset on the specified line whose position is
            closest to the specified horizontal position.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Get the character offset on the specified line whose position is
            closest to the specified horizontal position.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getOffsetForHorizontal(int,%20float)" title="Reference documentation">Java documentation for <code>android.text.Layout.getOffsetForHorizontal(int, float)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToLeftOf">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOffsetToLeftOf (offset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetOffsetToLeftOf(int offset);" />
      <MemberSignature Language="C#" Value="public virtual int GetOffsetToLeftOf (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOffsetToLeftOf(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetOffsetToLeftOf(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetOffsetToLeftOf : int -&gt; int&#xA;override this.GetOffsetToLeftOf : int -&gt; int" Usage="layout.GetOffsetToLeftOf offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOffsetToLeftOf", "(I)I", "GetGetOffsetToLeftOf_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOffsetToLeftOf", "(I)I", "GetGetOffsetToLeftOf_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToRightOf">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOffsetToRightOf (offset As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int GetOffsetToRightOf(int offset);" />
      <MemberSignature Language="C#" Value="public virtual int GetOffsetToRightOf (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetOffsetToRightOf(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetOffsetToRightOf(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetOffsetToRightOf : int -&gt; int&#xA;override this.GetOffsetToRightOf : int -&gt; int" Usage="layout.GetOffsetToRightOf offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getOffsetToRightOf", "(I)I", "GetGetOffsetToRightOf_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getOffsetToRightOf", "(I)I", "GetGetOffsetToRightOf_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetParagraphAlignment">
      <MemberSignature Language="VB.NET" Value="Public Function GetParagraphAlignment (line As Integer) As Layout.Alignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Text::Layout::Alignment ^ GetParagraphAlignment(int line);" />
      <MemberSignature Language="C#" Value="public Android.Text.Layout.Alignment? GetParagraphAlignment (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Text.Layout/Alignment GetParagraphAlignment(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetParagraphAlignment(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetParagraphAlignment : int -&gt; Android.Text.Layout.Alignment" Usage="layout.GetParagraphAlignment line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getParagraphAlignment", "(I)Landroid/text/Layout$Alignment;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getParagraphAlignment", "(I)Landroid/text/Layout$Alignment;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Layout+Alignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Get the alignment of the specified paragraph, taking into account
            markup attached to it.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getParagraphAlignment(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getParagraphAlignment(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetParagraphDirection">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetParagraphDirection (line As Integer) As TextLayoutDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Android::Text::TextLayoutDirection GetParagraphDirection(int line);" />
      <MemberSignature Language="C#" Value="public abstract Android.Text.TextLayoutDirection GetParagraphDirection (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Text.TextLayoutDirection GetParagraphDirection(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetParagraphDirection(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetParagraphDirection : int -&gt; Android.Text.TextLayoutDirection" Usage="layout.GetParagraphDirection line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getParagraphDirection", "(I)I", "GetGetParagraphDirection_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getParagraphDirection", "(I)I", "GetGetParagraphDirection_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.TextLayoutDirection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns the primary directionality of the paragraph containing the
            specified line, either 1 for left-to-right lines, or -1 for right-to-left
            lines (see <c>#DIR_LEFT_TO_RIGHT</c>, <c>#DIR_RIGHT_TO_LEFT</c>).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the primary directionality of the paragraph containing the
            specified line, either 1 for left-to-right lines, or -1 for right-to-left
            lines (see <c>#DIR_LEFT_TO_RIGHT</c>, <c>#DIR_RIGHT_TO_LEFT</c>).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getParagraphDirection(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getParagraphDirection(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetParagraphLeft">
      <MemberSignature Language="VB.NET" Value="Public Function GetParagraphLeft (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetParagraphLeft(int line);" />
      <MemberSignature Language="C#" Value="public int GetParagraphLeft (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetParagraphLeft(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetParagraphLeft(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetParagraphLeft : int -&gt; int" Usage="layout.GetParagraphLeft line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getParagraphLeft", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getParagraphLeft", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Get the left edge of the specified paragraph, inset by left margins.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Get the left edge of the specified paragraph, inset by left margins.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getParagraphLeft(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getParagraphLeft(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetParagraphRight">
      <MemberSignature Language="VB.NET" Value="Public Function GetParagraphRight (line As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetParagraphRight(int line);" />
      <MemberSignature Language="C#" Value="public int GetParagraphRight (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetParagraphRight(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetParagraphRight(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.GetParagraphRight : int -&gt; int" Usage="layout.GetParagraphRight line" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getParagraphRight", "(I)I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getParagraphRight", "(I)I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Get the right edge of the specified paragraph, inset by right margins.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Get the right edge of the specified paragraph, inset by right margins.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getParagraphRight(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getParagraphRight(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPrimaryHorizontal">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPrimaryHorizontal (offset As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float GetPrimaryHorizontal(int offset);" />
      <MemberSignature Language="C#" Value="public virtual float GetPrimaryHorizontal (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetPrimaryHorizontal(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetPrimaryHorizontal(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetPrimaryHorizontal : int -&gt; single&#xA;override this.GetPrimaryHorizontal : int -&gt; single" Usage="layout.GetPrimaryHorizontal offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPrimaryHorizontal", "(I)F", "GetGetPrimaryHorizontal_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPrimaryHorizontal", "(I)F", "GetGetPrimaryHorizontal_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <summary>Get the primary horizontal position for the specified text offset.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Get the primary horizontal position for the specified text offset.
            This is the location where a new character would be inserted in
            the paragraph's primary direction.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getPrimaryHorizontal(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getPrimaryHorizontal(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetRangeForRect">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRangeForRect (area As RectF, segmentFinder As SegmentFinder, inclusionStrategy As Layout.ITextInclusionStrategy) As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;int&gt; ^ GetRangeForRect(Android::Graphics::RectF ^ area, Android::Text::SegmentFinder ^ segmentFinder, Android::Text::Layout::ITextInclusionStrategy ^ inclusionStrategy);" />
      <MemberSignature Language="C#" Value="public virtual int[]? GetRangeForRect (Android.Graphics.RectF area, Android.Text.SegmentFinder segmentFinder, Android.Text.Layout.ITextInclusionStrategy inclusionStrategy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetRangeForRect(class Android.Graphics.RectF area, class Android.Text.SegmentFinder segmentFinder, class Android.Text.Layout/ITextInclusionStrategy inclusionStrategy) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetRangeForRect(Android.Graphics.RectF,Android.Text.SegmentFinder,Android.Text.Layout.ITextInclusionStrategy)" />
      <MemberSignature Language="F#" Value="abstract member GetRangeForRect : Android.Graphics.RectF * Android.Text.SegmentFinder * Android.Text.Layout.ITextInclusionStrategy -&gt; int[]&#xA;override this.GetRangeForRect : Android.Graphics.RectF * Android.Text.SegmentFinder * Android.Text.Layout.ITextInclusionStrategy -&gt; int[]" Usage="layout.GetRangeForRect (area, segmentFinder, inclusionStrategy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getRangeForRect", "(Landroid/graphics/RectF;Landroid/text/SegmentFinder;Landroid/text/Layout$TextInclusionStrategy;)[I", "GetGetRangeForRect_Landroid_graphics_RectF_Landroid_text_SegmentFinder_Landroid_text_Layout_TextInclusionStrategy_Handler", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getRangeForRect", "(Landroid/graphics/RectF;Landroid/text/SegmentFinder;Landroid/text/Layout$TextInclusionStrategy;)[I", "GetGetRangeForRect_Landroid_graphics_RectF_Landroid_text_SegmentFinder_Landroid_text_Layout_TextInclusionStrategy_Handler", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="area" Type="Android.Graphics.RectF" />
        <Parameter Name="segmentFinder" Type="Android.Text.SegmentFinder" />
        <Parameter Name="inclusionStrategy" Type="Android.Text.Layout+ITextInclusionStrategy" />
      </Parameters>
      <Docs>
        <param name="area">To be added.</param>
        <param name="segmentFinder">To be added.</param>
        <param name="inclusionStrategy">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSecondaryHorizontal">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecondaryHorizontal (offset As Integer) As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual float GetSecondaryHorizontal(int offset);" />
      <MemberSignature Language="C#" Value="public virtual float GetSecondaryHorizontal (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetSecondaryHorizontal(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetSecondaryHorizontal(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetSecondaryHorizontal : int -&gt; single&#xA;override this.GetSecondaryHorizontal : int -&gt; single" Usage="layout.GetSecondaryHorizontal offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSecondaryHorizontal", "(I)F", "GetGetSecondaryHorizontal_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSecondaryHorizontal", "(I)F", "GetGetSecondaryHorizontal_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">To be added.</param>
        <summary>Get the secondary horizontal position for the specified text offset.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Get the secondary horizontal position for the specified text offset.
            This is the location where a new character would be inserted in
            the direction other than the paragraph's primary direction.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getSecondaryHorizontal(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.getSecondaryHorizontal(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetSelectionPath">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetSelectionPath (start As Integer, end As Integer, dest As Path)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetSelectionPath(int start, int end, Android::Graphics::Path ^ dest);" />
      <MemberSignature Language="C#" Value="public virtual void GetSelectionPath (int start, int end, Android.Graphics.Path? dest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetSelectionPath(int32 start, int32 end, class Android.Graphics.Path dest) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.GetSelectionPath(System.Int32,System.Int32,Android.Graphics.Path)" />
      <MemberSignature Language="F#" Value="abstract member GetSelectionPath : int * int * Android.Graphics.Path -&gt; unit&#xA;override this.GetSelectionPath : int * int * Android.Graphics.Path -&gt; unit" Usage="layout.GetSelectionPath (start, end, dest)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSelectionPath", "(IILandroid/graphics/Path;)V", "GetGetSelectionPath_IILandroid_graphics_Path_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSelectionPath", "(IILandroid/graphics/Path;)V", "GetGetSelectionPath_IILandroid_graphics_Path_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="dest" Type="Android.Graphics.Path" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="dest">To be added.</param>
        <summary>Fills in the specified Path with a representation of a highlight
            between the specified offsets.</summary>
        <remarks>
          <para>Fills in the specified Path with a representation of a highlight
            between the specified offsets.  This will often be a rectangle
            or a potentially discontinuous set of rectangles.  If the start
            and end are the same, the returned path is empty.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getSelectionPath(int,%20int,%20android.graphics.Path)" title="Reference documentation">Java documentation for <code>android.text.Layout.getSelectionPath(int, int, android.graphics.Path)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Height { int get(); };" />
      <MemberSignature Language="C#" Value="public virtual int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.Height" />
      <MemberSignature Language="F#" Value="member this.Height : int" Usage="Android.Text.Layout.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getHeight", "()I", "GetGetHeightHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getHeight", "()I", "GetGetHeightHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the total height of this layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the total height of this layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getHeight()" title="Reference documentation">Java documentation for <code>android.text.Layout.getHeight()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HyphenationFrequencyFullFast">
      <MemberSignature Language="VB.NET" Value="Public Const HyphenationFrequencyFullFast As HyphenationFrequency  = 4" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Text::HyphenationFrequency HyphenationFrequencyFullFast = 4;" />
      <MemberSignature Language="C#" Value="public const Android.Text.HyphenationFrequency HyphenationFrequencyFullFast = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Text.HyphenationFrequency HyphenationFrequencyFullFast = (4)" />
      <MemberSignature Language="DocId" Value="F:Android.Text.Layout.HyphenationFrequencyFullFast" />
      <MemberSignature Language="F#" Value="val mutable HyphenationFrequencyFullFast : Android.Text.HyphenationFrequency" Usage="Android.Text.Layout.HyphenationFrequencyFullFast" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("HYPHENATION_FREQUENCY_FULL_FAST", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("HYPHENATION_FREQUENCY_FULL_FAST", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Text.HyphenationFrequency enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Text.HyphenationFrequency enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.HyphenationFrequency</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>Value for hyphenation frequency indicating the full amount of automatic hyphenation with
            using faster algorithm.</summary>
        <remarks>
          <para>Value for hyphenation frequency indicating the full amount of automatic hyphenation with
            using faster algorithm.</para>
          <para>This option is useful for running text and where it's important to put the maximum amount of
            text in a screen with limited space. To make text rendering faster with hyphenation, this
            algorithm ignores some hyphen character related typographic features, e.g. kerning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#HYPHENATION_FREQUENCY_FULL_FAST" title="Reference documentation">Java documentation for <code>android.text.Layout.HYPHENATION_FREQUENCY_FULL_FAST</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HyphenationFrequencyNormalFast">
      <MemberSignature Language="VB.NET" Value="Public Const HyphenationFrequencyNormalFast As HyphenationFrequency  = 3" />
      <MemberSignature Language="C++ CLI" Value="public: Android::Text::HyphenationFrequency HyphenationFrequencyNormalFast = 3;" />
      <MemberSignature Language="C#" Value="public const Android.Text.HyphenationFrequency HyphenationFrequencyNormalFast = 3;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.Text.HyphenationFrequency HyphenationFrequencyNormalFast = (3)" />
      <MemberSignature Language="DocId" Value="F:Android.Text.Layout.HyphenationFrequencyNormalFast" />
      <MemberSignature Language="F#" Value="val mutable HyphenationFrequencyNormalFast : Android.Text.HyphenationFrequency" Usage="Android.Text.Layout.HyphenationFrequencyNormalFast" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("HYPHENATION_FREQUENCY_NORMAL_FAST", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("HYPHENATION_FREQUENCY_NORMAL_FAST", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This constant will be removed in the future version. Use Android.Text.HyphenationFrequency enum directly instead of this field.", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This constant will be removed in the future version. Use Android.Text.HyphenationFrequency enum directly instead of this field.", true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.HyphenationFrequency</ReturnType>
      </ReturnValue>
      <MemberValue>3</MemberValue>
      <Docs>
        <summary>Value for hyphenation frequency indicating a light amount of automatic hyphenation with
            using faster algorithm.</summary>
        <remarks>
          <para>Value for hyphenation frequency indicating a light amount of automatic hyphenation with
            using faster algorithm.</para>
          <para>This option is useful for informal cases, such as short sentences or chat messages. To make
            text rendering faster with hyphenation, this algorithm ignores some hyphen character related
            typographic features, e.g. kerning.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#HYPHENATION_FREQUENCY_NORMAL_FAST" title="Reference documentation">Java documentation for <code>android.text.Layout.HYPHENATION_FREQUENCY_NORMAL_FAST</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InclusionStrategyAnyOverlap">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InclusionStrategyAnyOverlap As Layout.ITextInclusionStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Text::Layout::ITextInclusionStrategy ^ InclusionStrategyAnyOverlap { Android::Text::Layout::ITextInclusionStrategy ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Android.Text.Layout.ITextInclusionStrategy InclusionStrategyAnyOverlap { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.Layout/ITextInclusionStrategy InclusionStrategyAnyOverlap" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.InclusionStrategyAnyOverlap" />
      <MemberSignature Language="F#" Value="member this.InclusionStrategyAnyOverlap : Android.Text.Layout.ITextInclusionStrategy" Usage="Android.Text.Layout.InclusionStrategyAnyOverlap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INCLUSION_STRATEGY_ANY_OVERLAP", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INCLUSION_STRATEGY_ANY_OVERLAP", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Layout+ITextInclusionStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InclusionStrategyContainsAll">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InclusionStrategyContainsAll As Layout.ITextInclusionStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Text::Layout::ITextInclusionStrategy ^ InclusionStrategyContainsAll { Android::Text::Layout::ITextInclusionStrategy ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Android.Text.Layout.ITextInclusionStrategy InclusionStrategyContainsAll { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.Layout/ITextInclusionStrategy InclusionStrategyContainsAll" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.InclusionStrategyContainsAll" />
      <MemberSignature Language="F#" Value="member this.InclusionStrategyContainsAll : Android.Text.Layout.ITextInclusionStrategy" Usage="Android.Text.Layout.InclusionStrategyContainsAll" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INCLUSION_STRATEGY_CONTAINS_ALL", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INCLUSION_STRATEGY_CONTAINS_ALL", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Layout+ITextInclusionStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InclusionStrategyContainsCenter">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property InclusionStrategyContainsCenter As Layout.ITextInclusionStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::Text::Layout::ITextInclusionStrategy ^ InclusionStrategyContainsCenter { Android::Text::Layout::ITextInclusionStrategy ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Android.Text.Layout.ITextInclusionStrategy InclusionStrategyContainsCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.Text.Layout/ITextInclusionStrategy InclusionStrategyContainsCenter" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.InclusionStrategyContainsCenter" />
      <MemberSignature Language="F#" Value="member this.InclusionStrategyContainsCenter : Android.Text.Layout.ITextInclusionStrategy" Usage="Android.Text.Layout.InclusionStrategyContainsCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("INCLUSION_STRATEGY_CONTAINS_CENTER", ApiSince=34)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("INCLUSION_STRATEGY_CONTAINS_CENTER", ApiSince=34)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android34.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android34.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Layout+ITextInclusionStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseWidthTo">
      <MemberSignature Language="VB.NET" Value="Public Sub IncreaseWidthTo (wid As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IncreaseWidthTo(int wid);" />
      <MemberSignature Language="C#" Value="public void IncreaseWidthTo (int wid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void IncreaseWidthTo(int32 wid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.IncreaseWidthTo(System.Int32)" />
      <MemberSignature Language="F#" Value="member this.IncreaseWidthTo : int -&gt; unit" Usage="layout.IncreaseWidthTo wid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("increaseWidthTo", "(I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("increaseWidthTo", "(I)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="wid">To be added.</param>
        <summary>Increase the width of this layout to the specified width.</summary>
        <remarks>
          <para>Increase the width of this layout to the specified width.
            Be careful to use this only when you know it is appropriate&amp;mdash;
            it does not cause the text to reflow to use the full new width.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#increaseWidthTo(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.increaseWidthTo(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsFallbackLineSpacingEnabled">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsFallbackLineSpacingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFallbackLineSpacingEnabled { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsFallbackLineSpacingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFallbackLineSpacingEnabled" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.IsFallbackLineSpacingEnabled" />
      <MemberSignature Language="F#" Value="member this.IsFallbackLineSpacingEnabled : bool" Usage="Android.Text.Layout.IsFallbackLineSpacingEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isFallbackLineSpacingEnabled", "()Z", "GetIsFallbackLineSpacingEnabledHandler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isFallbackLineSpacingEnabled", "()Z", "GetIsFallbackLineSpacingEnabledHandler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return true if the fallback line space is enabled in this Layout.</summary>
        <value>true if the fallback line space is enabled. Otherwise returns false.</value>
        <remarks>
          <para>Return true if the fallback line space is enabled in this Layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#isFallbackLineSpacingEnabled()" title="Reference documentation">Java documentation for <code>android.text.Layout.isFallbackLineSpacingEnabled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRtlCharAt">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsRtlCharAt (offset As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsRtlCharAt(int offset);" />
      <MemberSignature Language="C#" Value="public virtual bool IsRtlCharAt (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsRtlCharAt(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.Layout.IsRtlCharAt(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IsRtlCharAt : int -&gt; bool&#xA;override this.IsRtlCharAt : int -&gt; bool" Usage="layout.IsRtlCharAt offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isRtlCharAt", "(I)Z", "GetIsRtlCharAt_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isRtlCharAt", "(I)Z", "GetIsRtlCharAt_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">the offset</param>
        <summary>Returns true if the character at offset is right to left (RTL).</summary>
        <returns>true if the character is RTL, false if it is LTR</returns>
        <remarks>
          <para>Returns true if the character at offset is right to left (RTL).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#isRtlCharAt(int)" title="Reference documentation">Java documentation for <code>android.text.Layout.isRtlCharAt(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="IsSpanned">
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsSpanned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsSpanned { bool get(); };" />
      <MemberSignature Language="C#" Value="protected bool IsSpanned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpanned" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.IsSpanned" />
      <MemberSignature Language="F#" Value="member this.IsSpanned : bool" Usage="Android.Text.Layout.IsSpanned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSpanned", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSpanned", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Text.Layout.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property LineCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int LineCount { int get(); };" />
      <MemberSignature Language="C#" Value="public abstract int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.LineCount" />
      <MemberSignature Language="F#" Value="member this.LineCount : int" Usage="Android.Text.Layout.LineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLineCount", "()I", "GetGetLineCountHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLineCount", "()I", "GetGetLineCountHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of lines of text in this layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Paint">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paint As TextPaint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Android::Text::TextPaint ^ Paint { Android::Text::TextPaint ^ get(); };" />
      <MemberSignature Language="C#" Value="public Android.Text.TextPaint? Paint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Text.TextPaint Paint" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.Paint" />
      <MemberSignature Language="F#" Value="member this.Paint : Android.Text.TextPaint" Usage="Android.Text.Layout.Paint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPaint", "()Landroid/text/TextPaint;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPaint", "()Landroid/text/TextPaint;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.TextPaint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the base Paint properties for this layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the base Paint properties for this layout.
            Do NOT change the paint, which may result in funny
            drawing for this layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getPaint()" title="Reference documentation">Java documentation for <code>android.text.Layout.getPaint()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SpacingAdd">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpacingAdd As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float SpacingAdd { float get(); };" />
      <MemberSignature Language="C#" Value="public float SpacingAdd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 SpacingAdd" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.SpacingAdd" />
      <MemberSignature Language="F#" Value="member this.SpacingAdd : single" Usage="Android.Text.Layout.SpacingAdd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSpacingAdd", "()F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSpacingAdd", "()F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of units of leading that are added to each line.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the number of units of leading that are added to each line.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getSpacingAdd()" title="Reference documentation">Java documentation for <code>android.text.Layout.getSpacingAdd()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SpacingMultiplier">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpacingMultiplier As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float SpacingMultiplier { float get(); };" />
      <MemberSignature Language="C#" Value="public float SpacingMultiplier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 SpacingMultiplier" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.SpacingMultiplier" />
      <MemberSignature Language="F#" Value="member this.SpacingMultiplier : single" Usage="Android.Text.Layout.SpacingMultiplier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getSpacingMultiplier", "()F", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getSpacingMultiplier", "()F", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return what the text height is multiplied by to get the line height.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return what the text height is multiplied by to get the line height.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getSpacingMultiplier()" title="Reference documentation">Java documentation for <code>android.text.Layout.getSpacingMultiplier()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.Text" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="Android.Text.Layout.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextFormatted">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TextFormatted As ICharSequence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Java::Lang::ICharSequence ^ TextFormatted { Java::Lang::ICharSequence ^ get(); };" />
      <MemberSignature Language="C#" Value="public Java.Lang.ICharSequence? TextFormatted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.ICharSequence TextFormatted" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.TextFormatted" />
      <MemberSignature Language="F#" Value="member this.TextFormatted : Java.Lang.ICharSequence" Usage="Android.Text.Layout.TextFormatted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getText", "()Ljava/lang/CharSequence;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getText", "()Ljava/lang/CharSequence;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the text that is displayed by this Layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the text that is displayed by this Layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getText()" title="Reference documentation">Java documentation for <code>android.text.Layout.getText()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Text.Layout.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Text.Layout.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopPadding">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TopPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property int TopPadding { int get(); };" />
      <MemberSignature Language="C#" Value="public abstract int TopPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TopPadding" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.TopPadding" />
      <MemberSignature Language="F#" Value="member this.TopPadding : int" Usage="Android.Text.Layout.TopPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTopPadding", "()I", "GetGetTopPaddingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTopPadding", "()I", "GetGetTopPaddingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the (negative) number of extra pixels of ascent padding in the
 top line of the Layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); };" />
      <MemberSignature Language="C#" Value="public int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:Android.Text.Layout.Width" />
      <MemberSignature Language="F#" Value="member this.Width : int" Usage="Android.Text.Layout.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getWidth", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getWidth", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the width of this layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the width of this layout.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Layout#getWidth()" title="Reference documentation">Java documentation for <code>android.text.Layout.getWidth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
