<Type Name="StaticLayout" FullName="Android.Text.StaticLayout">
  <TypeSignature Language="F#" Value="type StaticLayout = class&#xA;    inherit Layout" />
  <TypeSignature Language="C#" Value="public class StaticLayout : Android.Text.Layout" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StaticLayout extends Android.Text.Layout" />
  <TypeSignature Language="DocId" Value="T:Android.Text.StaticLayout" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Text.Layout</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/text/StaticLayout", DoNotGenerateAcw=true)]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>StaticLayout is a Layout for text that will not be edited after it
            is laid out.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/StaticLayout" title="Reference documentation">Java documentation for <code>android.text.StaticLayout</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Text.StaticLayout : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Text.StaticLayout" Usage="new Android.Text.StaticLayout (javaReference, transfer)" />
      <MemberSignature Language="C#" Value="protected StaticLayout (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Text.StaticLayout : Java.Lang.ICharSequence * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * bool -&gt; Android.Text.StaticLayout" Usage="new Android.Text.StaticLayout (source, paint, width, align, spacingmult, spacingadd, includepad)" />
      <MemberSignature Language="C#" Value="public StaticLayout (Java.Lang.ICharSequence? source, Android.Text.TextPaint? paint, int width, Android.Text.Layout.Alignment? align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence source, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.#ctor(Java.Lang.ICharSequence,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <summary>Used by DynamicLayout.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/StaticLayout#StaticLayout(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.StaticLayout.StaticLayout(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Text.StaticLayout : string * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * bool -&gt; Android.Text.StaticLayout" Usage="new Android.Text.StaticLayout (source, paint, width, align, spacingmult, spacingadd, includepad)" />
      <MemberSignature Language="C#" Value="public StaticLayout (string? source, Android.Text.TextPaint? paint, int width, Android.Text.Layout.Alignment? align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source, class Android.Text.TextPaint paint, int32 width, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.#ctor(System.String,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="width">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Text.StaticLayout : Java.Lang.ICharSequence * int * int * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * bool -&gt; Android.Text.StaticLayout" Usage="new Android.Text.StaticLayout (source, bufstart, bufend, paint, outerwidth, align, spacingmult, spacingadd, includepad)" />
      <MemberSignature Language="C#" Value="public StaticLayout (Java.Lang.ICharSequence? source, int bufstart, int bufend, Android.Text.TextPaint? paint, int outerwidth, Android.Text.Layout.Alignment? align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence source, int32 bufstart, int32 bufend, class Android.Text.TextPaint paint, int32 outerwidth, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.#ctor(Java.Lang.ICharSequence,System.Int32,System.Int32,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;IILandroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="bufstart" Type="System.Int32" />
        <Parameter Name="bufend" Type="System.Int32" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="bufstart">To be added.</param>
        <param name="bufend">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="outerwidth">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <summary>Used by DynamicLayout.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/StaticLayout#StaticLayout(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.StaticLayout.StaticLayout(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Text.StaticLayout : string * int * int * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * bool -&gt; Android.Text.StaticLayout" Usage="new Android.Text.StaticLayout (source, bufstart, bufend, paint, outerwidth, align, spacingmult, spacingadd, includepad)" />
      <MemberSignature Language="C#" Value="public StaticLayout (string? source, int bufstart, int bufend, Android.Text.TextPaint? paint, int outerwidth, Android.Text.Layout.Alignment? align, float spacingmult, float spacingadd, bool includepad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source, int32 bufstart, int32 bufend, class Android.Text.TextPaint paint, int32 outerwidth, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.#ctor(System.String,System.Int32,System.Int32,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,System.Boolean)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;IILandroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="bufstart" Type="System.Int32" />
        <Parameter Name="bufend" Type="System.Int32" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="bufstart">To be added.</param>
        <param name="bufend">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="outerwidth">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Text.StaticLayout : Java.Lang.ICharSequence * int * int * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * bool * Android.Text.TextUtils.TruncateAt * int -&gt; Android.Text.StaticLayout" Usage="new Android.Text.StaticLayout (source, bufstart, bufend, paint, outerwidth, align, spacingmult, spacingadd, includepad, ellipsize, ellipsizedWidth)" />
      <MemberSignature Language="C#" Value="public StaticLayout (Java.Lang.ICharSequence? source, int bufstart, int bufend, Android.Text.TextPaint? paint, int outerwidth, Android.Text.Layout.Alignment? align, float spacingmult, float spacingadd, bool includepad, Android.Text.TextUtils.TruncateAt? ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence source, int32 bufstart, int32 bufend, class Android.Text.TextPaint paint, int32 outerwidth, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad, class Android.Text.TextUtils/TruncateAt ellipsize, int32 ellipsizedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.#ctor(Java.Lang.ICharSequence,System.Int32,System.Int32,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,System.Boolean,Android.Text.TextUtils.TruncateAt,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;IILandroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZLandroid/text/TextUtils$TruncateAt;I)V", "")]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="bufstart" Type="System.Int32" />
        <Parameter Name="bufend" Type="System.Int32" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
        <Parameter Name="ellipsize" Type="Android.Text.TextUtils+TruncateAt" />
        <Parameter Name="ellipsizedWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="bufstart">To be added.</param>
        <param name="bufend">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="outerwidth">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <param name="ellipsize">To be added.</param>
        <param name="ellipsizedWidth">To be added.</param>
        <summary>Used by DynamicLayout.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/StaticLayout#StaticLayout(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.StaticLayout.StaticLayout(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="F#" Value="new Android.Text.StaticLayout : string * int * int * Android.Text.TextPaint * int * Android.Text.Layout.Alignment * single * single * bool * Android.Text.TextUtils.TruncateAt * int -&gt; Android.Text.StaticLayout" Usage="new Android.Text.StaticLayout (source, bufstart, bufend, paint, outerwidth, align, spacingmult, spacingadd, includepad, ellipsize, ellipsizedWidth)" />
      <MemberSignature Language="C#" Value="public StaticLayout (string? source, int bufstart, int bufend, Android.Text.TextPaint? paint, int outerwidth, Android.Text.Layout.Alignment? align, float spacingmult, float spacingadd, bool includepad, Android.Text.TextUtils.TruncateAt? ellipsize, int ellipsizedWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string source, int32 bufstart, int32 bufend, class Android.Text.TextPaint paint, int32 outerwidth, class Android.Text.Layout/Alignment align, float32 spacingmult, float32 spacingadd, bool includepad, class Android.Text.TextUtils/TruncateAt ellipsize, int32 ellipsizedWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.#ctor(System.String,System.Int32,System.Int32,Android.Text.TextPaint,System.Int32,Android.Text.Layout.Alignment,System.Single,System.Single,System.Boolean,Android.Text.TextUtils.TruncateAt,System.Int32)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;IILandroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZLandroid/text/TextUtils$TruncateAt;I)V", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="bufstart" Type="System.Int32" />
        <Parameter Name="bufend" Type="System.Int32" />
        <Parameter Name="paint" Type="Android.Text.TextPaint" />
        <Parameter Name="outerwidth" Type="System.Int32" />
        <Parameter Name="align" Type="Android.Text.Layout+Alignment" />
        <Parameter Name="spacingmult" Type="System.Single" />
        <Parameter Name="spacingadd" Type="System.Single" />
        <Parameter Name="includepad" Type="System.Boolean" />
        <Parameter Name="ellipsize" Type="Android.Text.TextUtils+TruncateAt" />
        <Parameter Name="ellipsizedWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <param name="bufstart">To be added.</param>
        <param name="bufend">To be added.</param>
        <param name="paint">To be added.</param>
        <param name="outerwidth">To be added.</param>
        <param name="align">To be added.</param>
        <param name="spacingmult">To be added.</param>
        <param name="spacingadd">To be added.</param>
        <param name="includepad">To be added.</param>
        <param name="ellipsize">To be added.</param>
        <param name="ellipsizedWidth">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BottomPadding">
      <MemberSignature Language="F#" Value="member this.BottomPadding : int" Usage="Android.Text.StaticLayout.BottomPadding" />
      <MemberSignature Language="C#" Value="public override int BottomPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BottomPadding" />
      <MemberSignature Language="DocId" Value="P:Android.Text.StaticLayout.BottomPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getBottomPadding", "()I", "GetGetBottomPaddingHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of extra pixels of descent padding in the
 bottom line of the Layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEllipsisCount">
      <MemberSignature Language="F#" Value="override this.GetEllipsisCount : int -&gt; int" Usage="staticLayout.GetEllipsisCount line" />
      <MemberSignature Language="C#" Value="public override int GetEllipsisCount (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEllipsisCount(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.GetEllipsisCount(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEllipsisCount", "(I)I", "GetGetEllipsisCount_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns the number of characters to be ellipsized away, or 0 if
 no ellipsis is to take place.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEllipsisStart">
      <MemberSignature Language="F#" Value="override this.GetEllipsisStart : int -&gt; int" Usage="staticLayout.GetEllipsisStart line" />
      <MemberSignature Language="C#" Value="public override int GetEllipsisStart (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetEllipsisStart(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.GetEllipsisStart(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getEllipsisStart", "(I)I", "GetGetEllipsisStart_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the offset of the first character to be ellipsized away,
 relative to the start of the line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineContainsTab">
      <MemberSignature Language="F#" Value="override this.GetLineContainsTab : int -&gt; bool" Usage="staticLayout.GetLineContainsTab line" />
      <MemberSignature Language="C#" Value="public override bool GetLineContainsTab (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetLineContainsTab(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.GetLineContainsTab(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineContainsTab", "(I)Z", "GetGetLineContainsTab_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns whether the specified line contains one or more
 characters that need to be handled specially, like tabs
 or emoji.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineDescent">
      <MemberSignature Language="F#" Value="override this.GetLineDescent : int -&gt; int" Usage="staticLayout.GetLineDescent line" />
      <MemberSignature Language="C#" Value="public override int GetLineDescent (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineDescent(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.GetLineDescent(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineDescent", "(I)I", "GetGetLineDescent_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the descent of the specified line(0&amp;hellip;getLineCount() - 1).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineDirections">
      <MemberSignature Language="F#" Value="override this.GetLineDirections : int -&gt; Android.Text.Layout.Directions" Usage="staticLayout.GetLineDirections line" />
      <MemberSignature Language="C#" Value="public override sealed Android.Text.Layout.Directions? GetLineDirections (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Text.Layout/Directions GetLineDirections(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.GetLineDirections(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineDirections", "(I)Landroid/text/Layout$Directions;", "")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.Layout+Directions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Returns the directional run information for the specified line.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineStart">
      <MemberSignature Language="F#" Value="override this.GetLineStart : int -&gt; int" Usage="staticLayout.GetLineStart line" />
      <MemberSignature Language="C#" Value="public override int GetLineStart (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineStart(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.GetLineStart(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineStart", "(I)I", "GetGetLineStart_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the text offset of the beginning of the specified line (
 0&amp;hellip;getLineCount()).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetLineTop">
      <MemberSignature Language="F#" Value="override this.GetLineTop : int -&gt; int" Usage="staticLayout.GetLineTop line" />
      <MemberSignature Language="C#" Value="public override int GetLineTop (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetLineTop(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.GetLineTop(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLineTop", "(I)I", "GetGetLineTop_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary>Return the vertical position of the top of the specified line
 (0&amp;hellip;getLineCount()).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetParagraphDirection">
      <MemberSignature Language="F#" Value="override this.GetParagraphDirection : int -&gt; Android.Text.TextLayoutDirection" Usage="staticLayout.GetParagraphDirection line" />
      <MemberSignature Language="C#" Value="public override Android.Text.TextLayoutDirection GetParagraphDirection (int line);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Text.TextLayoutDirection GetParagraphDirection(int32 line) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.StaticLayout.GetParagraphDirection(System.Int32)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getParagraphDirection", "(I)I", "GetGetParagraphDirection_IHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.TextLayoutDirection</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="line" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="line">To be added.</param>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInLongSummaries">To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Text.StaticLayout.JniPeerMembers" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Text.StaticLayout.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineCount">
      <MemberSignature Language="F#" Value="member this.LineCount : int" Usage="Android.Text.StaticLayout.LineCount" />
      <MemberSignature Language="C#" Value="public override int LineCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineCount" />
      <MemberSignature Language="DocId" Value="P:Android.Text.StaticLayout.LineCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLineCount", "()I", "GetGetLineCountHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the number of lines of text in this layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Text.StaticLayout.ThresholdClass" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Text.StaticLayout.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Text.StaticLayout.ThresholdType" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Text.StaticLayout.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TopPadding">
      <MemberSignature Language="F#" Value="member this.TopPadding : int" Usage="Android.Text.StaticLayout.TopPadding" />
      <MemberSignature Language="C#" Value="public override int TopPadding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TopPadding" />
      <MemberSignature Language="DocId" Value="P:Android.Text.StaticLayout.TopPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTopPadding", "()I", "GetGetTopPaddingHandler")]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the (negative) number of extra pixels of ascent padding in the
 top line of the Layout.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
