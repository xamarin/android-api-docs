<Type Name="SpannableStringBuilder" FullName="Android.Text.SpannableStringBuilder">
  <TypeSignature Language="C#" Value="public class SpannableStringBuilder : Java.Lang.Object, Android.Text.IEditable, IDisposable, Java.Interop.IJavaPeerable, System.Collections.Generic.IEnumerable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SpannableStringBuilder extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Android.Text.IEditable, class Android.Text.IGetChars, class Android.Text.ISpannable, class Android.Text.ISpanned, class Java.Interop.IJavaPeerable, class Java.Lang.IAppendable, class Java.Lang.ICharSequence, class System.Collections.Generic.IEnumerable`1&lt;char&gt;, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Text.SpannableStringBuilder" />
  <TypeSignature Language="F#" Value="type SpannableStringBuilder = class&#xA;    inherit Object&#xA;    interface IEditable&#xA;    interface IGetChars&#xA;    interface ICharSequence&#xA;    interface seq&lt;char&gt;&#xA;    interface IEnumerable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface ISpannable&#xA;    interface ISpanned&#xA;    interface IAppendable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.IEditable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.IGetChars</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.ISpannable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.ISpanned</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IAppendable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.ICharSequence</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/text/SpannableStringBuilder", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/text/SpannableStringBuilder", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This is the class for text whose content and markup can both be changed.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpannableStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Create a new SpannableStringBuilder with empty contents</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#SpannableStringBuilder()" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.SpannableStringBuilder()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpannableStringBuilder (Java.Lang.ICharSequence? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.#ctor(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="new Android.Text.SpannableStringBuilder : Java.Lang.ICharSequence -&gt; Android.Text.SpannableStringBuilder" Usage="new Android.Text.SpannableStringBuilder text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>Create a new SpannableStringBuilder containing a copy of the
            specified text, including its spans if any.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#SpannableStringBuilder(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.SpannableStringBuilder(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpannableStringBuilder (string? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Android.Text.SpannableStringBuilder : string -&gt; Android.Text.SpannableStringBuilder" Usage="new Android.Text.SpannableStringBuilder text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <summary>Create a new SpannableStringBuilder containing a copy of the
 specified text, including its spans if any.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SpannableStringBuilder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Text.SpannableStringBuilder : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Text.SpannableStringBuilder" Usage="new Android.Text.SpannableStringBuilder (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpannableStringBuilder (Java.Lang.ICharSequence? text, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Lang.ICharSequence text, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.#ctor(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Text.SpannableStringBuilder : Java.Lang.ICharSequence * int * int -&gt; Android.Text.SpannableStringBuilder" Usage="new Android.Text.SpannableStringBuilder (text, start, end)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>Create a new SpannableStringBuilder containing a copy of the
            specified slice of the specified text, including its spans if any.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#SpannableStringBuilder(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.SpannableStringBuilder(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SpannableStringBuilder (string? text, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="new Android.Text.SpannableStringBuilder : string * int * int -&gt; Android.Text.SpannableStringBuilder" Usage="new Android.Text.SpannableStringBuilder (text, start, end)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;II)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/CharSequence;II)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>Create a new SpannableStringBuilder containing a copy of the
 specified slice of the specified text, including its spans if any.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.IAppendable? Append (Java.Lang.ICharSequence? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.IAppendable Append(class Java.Lang.ICharSequence text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Append(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member Append : Java.Lang.ICharSequence -&gt; Java.Lang.IAppendable&#xA;override this.Append : Java.Lang.ICharSequence -&gt; Java.Lang.IAppendable" Usage="spannableStringBuilder.Append text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.IEditable.Append(Java.Lang.ICharSequence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("append", "(Ljava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;", "GetAppend_Ljava_lang_CharSequence_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("append", "(Ljava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;", "GetAppend_Ljava_lang_CharSequence_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="text">the character sequence to append.</param>
        <summary>Appends the character sequence <c>text</c> and spans <c>what</c> over the appended part.</summary>
        <returns>this <c>SpannableStringBuilder</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#append(java.lang.CharSequence,%20java.lang.Object,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.append(java.lang.CharSequence, java.lang.Object, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 21" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.IAppendable? Append (char text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.IAppendable Append(char text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Append(System.Char)" />
      <MemberSignature Language="F#" Value="abstract member Append : char -&gt; Java.Lang.IAppendable&#xA;override this.Append : char -&gt; Java.Lang.IAppendable" Usage="spannableStringBuilder.Append text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.IEditable.Append(System.Char)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("append", "(C)Landroid/text/SpannableStringBuilder;", "GetAppend_CHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("append", "(C)Landroid/text/SpannableStringBuilder;", "GetAppend_CHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="text">the character sequence to append.</param>
        <summary>Appends the character sequence <c>text</c> and spans <c>what</c> over the appended part.</summary>
        <returns>this <c>SpannableStringBuilder</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#append(java.lang.CharSequence,%20java.lang.Object,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.append(java.lang.CharSequence, java.lang.Object, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public Java.Lang.IAppendable? Append (string? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.IAppendable Append(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Append(System.String)" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; Java.Lang.IAppendable" Usage="spannableStringBuilder.Append text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">the character sequence to append.</param>
        <summary>Appends the character sequence <c>text</c> and spans <c>what</c> over the appended part.</summary>
        <returns>this <c>SpannableStringBuilder</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#append(java.lang.CharSequence,%20java.lang.Object,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.append(java.lang.CharSequence, java.lang.Object, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.IAppendable? Append (Java.Lang.ICharSequence? text, Java.Lang.Object? what, Android.Text.SpanTypes flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.IAppendable Append(class Java.Lang.ICharSequence text, class Java.Lang.Object what, valuetype Android.Text.SpanTypes flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Append(Java.Lang.ICharSequence,Java.Lang.Object,Android.Text.SpanTypes)" />
      <MemberSignature Language="F#" Value="abstract member Append : Java.Lang.ICharSequence * Java.Lang.Object * Android.Text.SpanTypes -&gt; Java.Lang.IAppendable&#xA;override this.Append : Java.Lang.ICharSequence * Java.Lang.Object * Android.Text.SpanTypes -&gt; Java.Lang.IAppendable" Usage="spannableStringBuilder.Append (text, what, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("append", "(Ljava/lang/CharSequence;Ljava/lang/Object;I)Landroid/text/SpannableStringBuilder;", "GetAppend_Ljava_lang_CharSequence_Ljava_lang_Object_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("append", "(Ljava/lang/CharSequence;Ljava/lang/Object;I)Landroid/text/SpannableStringBuilder;", "GetAppend_Ljava_lang_CharSequence_Ljava_lang_Object_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="what" Type="Java.Lang.Object" />
        <Parameter Name="flags" Type="Android.Text.SpanTypes">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="text">the character sequence to append.</param>
        <param name="what">the object to be spanned over the appended text.</param>
        <param name="flags">see <c>Spanned</c>.</param>
        <summary>Appends the character sequence <c>text</c> and spans <c>what</c> over the appended part.</summary>
        <returns>this <c>SpannableStringBuilder</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#append(java.lang.CharSequence,%20java.lang.Object,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.append(java.lang.CharSequence, java.lang.Object, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.IAppendable? Append (Java.Lang.ICharSequence? text, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.IAppendable Append(class Java.Lang.ICharSequence text, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Append(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Append : Java.Lang.ICharSequence * int * int -&gt; Java.Lang.IAppendable&#xA;override this.Append : Java.Lang.ICharSequence * int * int -&gt; Java.Lang.IAppendable" Usage="spannableStringBuilder.Append (text, start, end)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.IEditable.Append(Java.Lang.ICharSequence,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("append", "(Ljava/lang/CharSequence;II)Landroid/text/SpannableStringBuilder;", "GetAppend_Ljava_lang_CharSequence_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("append", "(Ljava/lang/CharSequence;II)Landroid/text/SpannableStringBuilder;", "GetAppend_Ljava_lang_CharSequence_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the character sequence to append.</param>
        <param name="start">the first index of the subsequence of <c>csq</c> that is
            appended.</param>
        <param name="end">the last index of the subsequence of <c>csq</c> that is
            appended.</param>
        <summary>Appends the character sequence <c>text</c> and spans <c>what</c> over the appended part.</summary>
        <returns>this <c>SpannableStringBuilder</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#append(java.lang.CharSequence,%20java.lang.Object,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.append(java.lang.CharSequence, java.lang.Object, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public Java.Lang.IAppendable? Append (string? text, Java.Lang.Object? what, Android.Text.SpanTypes flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.IAppendable Append(string text, class Java.Lang.Object what, valuetype Android.Text.SpanTypes flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Append(System.String,Java.Lang.Object,Android.Text.SpanTypes)" />
      <MemberSignature Language="F#" Value="member this.Append : string * Java.Lang.Object * Android.Text.SpanTypes -&gt; Java.Lang.IAppendable" Usage="spannableStringBuilder.Append (text, what, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="what" Type="Java.Lang.Object" />
        <Parameter Name="flags" Type="Android.Text.SpanTypes">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="text">the character sequence to append.</param>
        <param name="what">the object to be spanned over the appended text.</param>
        <param name="flags">see <c>Spanned</c>.</param>
        <summary>Appends the character sequence <c>text</c> and spans <c>what</c> over the appended part.</summary>
        <returns>this <c>SpannableStringBuilder</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#append(java.lang.CharSequence,%20java.lang.Object,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.append(java.lang.CharSequence, java.lang.Object, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public Java.Lang.IAppendable? Append (string? text, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.IAppendable Append(string text, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; Java.Lang.IAppendable" Usage="spannableStringBuilder.Append (text, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the character sequence to append.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>Appends the character sequence <c>text</c> and spans <c>what</c> over the appended part.</summary>
        <returns>this <c>SpannableStringBuilder</c>.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#append(java.lang.CharSequence,%20java.lang.Object,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.append(java.lang.CharSequence, java.lang.Object, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CharAt">
      <MemberSignature Language="C#" Value="public virtual char CharAt (int where);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char CharAt(int32 where) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.CharAt(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member CharAt : int -&gt; char&#xA;override this.CharAt : int -&gt; char" Usage="spannableStringBuilder.CharAt where" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.ICharSequence.CharAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("charAt", "(I)C", "GetCharAt_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("charAt", "(I)C", "GetCharAt_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="where" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="where">the index of the character to return.</param>
        <summary>Return the char at the specified offset within the buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#charAt(int)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.charAt(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Clear" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="spannableStringBuilder.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.IEditable.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clear", "()V", "GetClearHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clear", "()V", "GetClearHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Convenience for replace(0, length(), "", 0, 0)</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearSpans">
      <MemberSignature Language="C#" Value="public virtual void ClearSpans ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearSpans() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.ClearSpans" />
      <MemberSignature Language="F#" Value="abstract member ClearSpans : unit -&gt; unit&#xA;override this.ClearSpans : unit -&gt; unit" Usage="spannableStringBuilder.ClearSpans " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.IEditable.ClearSpans</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearSpans", "()V", "GetClearSpansHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearSpans", "()V", "GetClearSpansHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all spans from the Editable, as if by calling
 <see cref="M:Android.Text.ISpannable.RemoveSpan(Java.Lang.Object)" /> on each of them.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual Android.Text.IEditable? Delete (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.IEditable Delete(int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Delete(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Delete : int * int -&gt; Android.Text.IEditable&#xA;override this.Delete : int * int -&gt; Android.Text.IEditable" Usage="spannableStringBuilder.Delete (start, end)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.IEditable.Delete(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("delete", "(II)Landroid/text/SpannableStringBuilder;", "GetDelete_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("delete", "(II)Landroid/text/SpannableStringBuilder;", "GetDelete_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>Convenience for replace(st, en, "", 0, 0)</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetChars">
      <MemberSignature Language="C#" Value="public virtual void GetChars (int start, int end, char[]? dest, int destoff);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetChars(int32 start, int32 end, char[] dest, int32 destoff) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.GetChars(System.Int32,System.Int32,System.Char[],System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetChars : int * int * char[] * int -&gt; unit&#xA;override this.GetChars : int * int * char[] * int -&gt; unit" Usage="spannableStringBuilder.GetChars (start, end, dest, destoff)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.IGetChars.GetChars(System.Int32,System.Int32,System.Char[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getChars", "(II[CI)V", "GetGetChars_IIarrayCIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getChars", "(II[CI)V", "GetGetChars_IIarrayCIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="dest" Type="System.Char[]" />
        <Parameter Name="destoff" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="dest">To be added.</param>
        <param name="destoff">To be added.</param>
        <summary>Copy the specified range of chars from this buffer into the
            specified array, beginning at the specified offset.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#getChars(int,%20int,%20char[],%20int)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.getChars(int, int, char[], int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;char&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;char&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;char&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;char&gt;" Usage="spannableStringBuilder.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.IteratorStateMachine(typeof(Android.Text.SpannableStringBuilder+&lt;GetEnumerator&gt;d__131))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.IteratorStateMachine(typeof(Android.Text.SpannableStringBuilder+&lt;GetEnumerator&gt;d__131))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFilters">
      <MemberSignature Language="C#" Value="public virtual Android.Text.IInputFilter[]? GetFilters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.IInputFilter[] GetFilters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.GetFilters" />
      <MemberSignature Language="F#" Value="abstract member GetFilters : unit -&gt; Android.Text.IInputFilter[]&#xA;override this.GetFilters : unit -&gt; Android.Text.IInputFilter[]" Usage="spannableStringBuilder.GetFilters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.IEditable.GetFilters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFilters", "()[Landroid/text/InputFilter;", "GetGetFiltersHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFilters", "()[Landroid/text/InputFilter;", "GetGetFiltersHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IInputFilter[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the array of input filters that are currently applied
 to changes to this Editable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetSpanEnd">
      <MemberSignature Language="C#" Value="public virtual int GetSpanEnd (Java.Lang.Object? what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSpanEnd(class Java.Lang.Object what) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.GetSpanEnd(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member GetSpanEnd : Java.Lang.Object -&gt; int&#xA;override this.GetSpanEnd : Java.Lang.Object -&gt; int" Usage="spannableStringBuilder.GetSpanEnd what" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.ISpanned.GetSpanEnd(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSpanEnd", "(Ljava/lang/Object;)I", "GetGetSpanEnd_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSpanEnd", "(Ljava/lang/Object;)I", "GetGetSpanEnd_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <summary>Return the buffer offset of the end of the specified
            markup object, or -1 if it is not attached to this buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#getSpanEnd(java.lang.Object)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.getSpanEnd(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetSpanFlags">
      <MemberSignature Language="C#" Value="public virtual Android.Text.SpanTypes GetSpanFlags (Java.Lang.Object? what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Android.Text.SpanTypes GetSpanFlags(class Java.Lang.Object what) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.GetSpanFlags(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member GetSpanFlags : Java.Lang.Object -&gt; Android.Text.SpanTypes&#xA;override this.GetSpanFlags : Java.Lang.Object -&gt; Android.Text.SpanTypes" Usage="spannableStringBuilder.GetSpanFlags what" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.ISpanned.GetSpanFlags(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSpanFlags", "(Ljava/lang/Object;)I", "GetGetSpanFlags_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSpanFlags", "(Ljava/lang/Object;)I", "GetGetSpanFlags_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.SpanTypes</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <summary>Return the flags of the end of the specified
            markup object, or 0 if it is not attached to this buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#getSpanFlags(java.lang.Object)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.getSpanFlags(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetSpans">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.Object[]? GetSpans (int queryStart, int queryEnd, Java.Lang.Class? kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object[] GetSpans(int32 queryStart, int32 queryEnd, class Java.Lang.Class kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.GetSpans(System.Int32,System.Int32,Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="abstract member GetSpans : int * int * Java.Lang.Class -&gt; Java.Lang.Object[]&#xA;override this.GetSpans : int * int * Java.Lang.Class -&gt; Java.Lang.Object[]" Usage="spannableStringBuilder.GetSpans (queryStart, queryEnd, kind)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.ISpanned.GetSpans(System.Int32,System.Int32,Java.Lang.Class)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSpans", "(IILjava/lang/Class;)[Ljava/lang/Object;", "GetGetSpans_IILjava_lang_Class_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSpans", "(IILjava/lang/Class;)[Ljava/lang/Object;", "GetGetSpans_IILjava_lang_Class_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="queryStart" Type="System.Int32" />
        <Parameter Name="queryEnd" Type="System.Int32" />
        <Parameter Name="kind" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="queryStart">To be added.</param>
        <param name="queryEnd">To be added.</param>
        <param name="kind">To be added.</param>
        <summary>Return an array of the spans of the specified type that overlap
            the specified range of the buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#getSpans(int,%20int,%20java.lang.Class%3CT%3E)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.getSpans(int, int, java.lang.Class&lt;T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSpanStart">
      <MemberSignature Language="C#" Value="public virtual int GetSpanStart (Java.Lang.Object? what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetSpanStart(class Java.Lang.Object what) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.GetSpanStart(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member GetSpanStart : Java.Lang.Object -&gt; int&#xA;override this.GetSpanStart : Java.Lang.Object -&gt; int" Usage="spannableStringBuilder.GetSpanStart what" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.ISpanned.GetSpanStart(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSpanStart", "(Ljava/lang/Object;)I", "GetGetSpanStart_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSpanStart", "(Ljava/lang/Object;)I", "GetGetSpanStart_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <summary>Return the buffer offset of the beginning of the specified
            markup object, or -1 if it is not attached to this buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#getSpanStart(java.lang.Object)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.getSpanStart(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunCursor">
      <MemberSignature Language="C#" Value="public virtual int GetTextRunCursor (int contextStart, int contextEnd, int dir, int offset, int cursorOpt, Android.Graphics.Paint? p);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetTextRunCursor(int32 contextStart, int32 contextEnd, int32 dir, int32 offset, int32 cursorOpt, class Android.Graphics.Paint p) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.GetTextRunCursor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Android.Graphics.Paint)" />
      <MemberSignature Language="F#" Value="abstract member GetTextRunCursor : int * int * int * int * int * Android.Graphics.Paint -&gt; int&#xA;override this.GetTextRunCursor : int * int * int * int * int * Android.Graphics.Paint -&gt; int" Usage="spannableStringBuilder.GetTextRunCursor (contextStart, contextEnd, dir, offset, cursorOpt, p)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextRunCursor", "(IIIIILandroid/graphics/Paint;)I", "GetGetTextRunCursor_IIIIILandroid_graphics_Paint_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextRunCursor", "(IIIIILandroid/graphics/Paint;)I", "GetGetTextRunCursor_IIIIILandroid_graphics_Paint_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contextStart" Type="System.Int32" />
        <Parameter Name="contextEnd" Type="System.Int32" />
        <Parameter Name="dir" Type="System.Int32" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="cursorOpt" Type="System.Int32" />
        <Parameter Name="p" Type="Android.Graphics.Paint" />
      </Parameters>
      <Docs>
        <param name="contextStart">the start index of the context</param>
        <param name="contextEnd">the (non-inclusive) end index of the context</param>
        <param name="dir">1 if the run is RTL, otherwise 0</param>
        <param name="offset">the cursor position to move from</param>
        <param name="cursorOpt">how to move the cursor, one of CURSOR_AFTER,
            CURSOR_AT_OR_AFTER, CURSOR_BEFORE,
            CURSOR_AT_OR_BEFORE, or CURSOR_AT</param>
        <param name="p">the Paint object that is requesting this information</param>
        <summary>Returns the next cursor position in the run.</summary>
        <returns>the offset of the next position, or -1</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#getTextRunCursor(int,%20int,%20int,%20int,%20int,%20android.graphics.Paint)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.getTextRunCursor(int, int, int, int, int, android.graphics.Paint)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual Android.Text.IEditable? Insert (int where, Java.Lang.ICharSequence? tb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.IEditable Insert(int32 where, class Java.Lang.ICharSequence tb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Insert(System.Int32,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * Java.Lang.ICharSequence -&gt; Android.Text.IEditable&#xA;override this.Insert : int * Java.Lang.ICharSequence -&gt; Android.Text.IEditable" Usage="spannableStringBuilder.Insert (where, tb)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.IEditable.Insert(System.Int32,Java.Lang.ICharSequence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("insert", "(ILjava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;", "GetInsert_ILjava_lang_CharSequence_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("insert", "(ILjava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;", "GetInsert_ILjava_lang_CharSequence_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="where" Type="System.Int32" />
        <Parameter Name="tb" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="where">To be added.</param>
        <param name="tb">To be added.</param>
        <summary tool="true">Convenience for replace(where, where, text, 0, text.length());</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public Android.Text.IEditable? Insert (int where, string? tb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Text.IEditable Insert(int32 where, string tb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Insert(System.Int32,System.String)" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; Android.Text.IEditable" Usage="spannableStringBuilder.Insert (where, tb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="where" Type="System.Int32" />
        <Parameter Name="tb" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="where">To be added.</param>
        <param name="tb">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual Android.Text.IEditable? Insert (int where, Java.Lang.ICharSequence? tb, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.IEditable Insert(int32 where, class Java.Lang.ICharSequence tb, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Insert(System.Int32,Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * Java.Lang.ICharSequence * int * int -&gt; Android.Text.IEditable&#xA;override this.Insert : int * Java.Lang.ICharSequence * int * int -&gt; Android.Text.IEditable" Usage="spannableStringBuilder.Insert (where, tb, start, end)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.IEditable.Insert(System.Int32,Java.Lang.ICharSequence,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("insert", "(ILjava/lang/CharSequence;II)Landroid/text/SpannableStringBuilder;", "GetInsert_ILjava_lang_CharSequence_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("insert", "(ILjava/lang/CharSequence;II)Landroid/text/SpannableStringBuilder;", "GetInsert_ILjava_lang_CharSequence_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="where" Type="System.Int32" />
        <Parameter Name="tb" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="where">To be added.</param>
        <param name="tb">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>Convenience for replace(where, where, text, start, end)</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public Android.Text.IEditable? Insert (int where, string? tb, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Text.IEditable Insert(int32 where, string tb, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Insert(System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string * int * int -&gt; Android.Text.IEditable" Usage="spannableStringBuilder.Insert (where, tb, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="where" Type="System.Int32" />
        <Parameter Name="tb" Type="System.String" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="where">To be added.</param>
        <param name="tb">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Text.SpannableStringBuilder.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Text.SpannableStringBuilder.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public virtual int Length ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Length() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Length" />
      <MemberSignature Language="F#" Value="abstract member Length : unit -&gt; int&#xA;override this.Length : unit -&gt; int" Usage="spannableStringBuilder.Length " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.ICharSequence.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("length", "()I", "GetLengthHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("length", "()I", "GetLengthHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the number of chars in the buffer.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#length()" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.length()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NextSpanTransition">
      <MemberSignature Language="C#" Value="public virtual int NextSpanTransition (int start, int limit, Java.Lang.Class? kind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 NextSpanTransition(int32 start, int32 limit, class Java.Lang.Class kind) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.NextSpanTransition(System.Int32,System.Int32,Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="abstract member NextSpanTransition : int * int * Java.Lang.Class -&gt; int&#xA;override this.NextSpanTransition : int * int * Java.Lang.Class -&gt; int" Usage="spannableStringBuilder.NextSpanTransition (start, limit, kind)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.ISpanned.NextSpanTransition(System.Int32,System.Int32,Java.Lang.Class)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nextSpanTransition", "(IILjava/lang/Class;)I", "GetNextSpanTransition_IILjava_lang_Class_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nextSpanTransition", "(IILjava/lang/Class;)I", "GetNextSpanTransition_IILjava_lang_Class_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="limit" Type="System.Int32" />
        <Parameter Name="kind" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="limit">To be added.</param>
        <param name="kind">To be added.</param>
        <summary>Return the next offset after &lt;code&gt;start&lt;/code&gt; but less than or
            equal to &lt;code&gt;limit&lt;/code&gt; where a span of the specified type
            begins or ends.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#nextSpanTransition(int,%20int,%20java.lang.Class)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.nextSpanTransition(int, int, java.lang.Class)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSpan">
      <MemberSignature Language="C#" Value="public virtual void RemoveSpan (Java.Lang.Object? what);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSpan(class Java.Lang.Object what) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.RemoveSpan(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member RemoveSpan : Java.Lang.Object -&gt; unit&#xA;override this.RemoveSpan : Java.Lang.Object -&gt; unit" Usage="spannableStringBuilder.RemoveSpan what" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.ISpannable.RemoveSpan(Java.Lang.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeSpan", "(Ljava/lang/Object;)V", "GetRemoveSpan_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeSpan", "(Ljava/lang/Object;)V", "GetRemoveSpan_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <summary>Remove the specified markup object from the buffer.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#removeSpan(java.lang.Object)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.removeSpan(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public virtual Android.Text.IEditable? Replace (int start, int end, Java.Lang.ICharSequence? tb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.IEditable Replace(int32 start, int32 end, class Java.Lang.ICharSequence tb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Replace(System.Int32,System.Int32,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member Replace : int * int * Java.Lang.ICharSequence -&gt; Android.Text.IEditable&#xA;override this.Replace : int * int * Java.Lang.ICharSequence -&gt; Android.Text.IEditable" Usage="spannableStringBuilder.Replace (start, end, tb)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.IEditable.Replace(System.Int32,System.Int32,Java.Lang.ICharSequence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replace", "(IILjava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;", "GetReplace_IILjava_lang_CharSequence_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replace", "(IILjava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;", "GetReplace_IILjava_lang_CharSequence_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="tb" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="tb">To be added.</param>
        <summary>Convenience for replace(st, en, text, 0, text.length())</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public Android.Text.IEditable? Replace (int start, int end, string? tb);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Text.IEditable Replace(int32 start, int32 end, string tb) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Replace(System.Int32,System.Int32,System.String)" />
      <MemberSignature Language="F#" Value="member this.Replace : int * int * string -&gt; Android.Text.IEditable" Usage="spannableStringBuilder.Replace (start, end, tb)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="tb" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="tb">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public virtual Android.Text.IEditable? Replace (int start, int end, Java.Lang.ICharSequence? tb, int tbstart, int tbend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.IEditable Replace(int32 start, int32 end, class Java.Lang.ICharSequence tb, int32 tbstart, int32 tbend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Replace(System.Int32,System.Int32,Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Replace : int * int * Java.Lang.ICharSequence * int * int -&gt; Android.Text.IEditable&#xA;override this.Replace : int * int * Java.Lang.ICharSequence * int * int -&gt; Android.Text.IEditable" Usage="spannableStringBuilder.Replace (start, end, tb, tbstart, tbend)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.IEditable.Replace(System.Int32,System.Int32,Java.Lang.ICharSequence,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replace", "(IILjava/lang/CharSequence;II)Landroid/text/SpannableStringBuilder;", "GetReplace_IILjava_lang_CharSequence_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replace", "(IILjava/lang/CharSequence;II)Landroid/text/SpannableStringBuilder;", "GetReplace_IILjava_lang_CharSequence_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="tb" Type="Java.Lang.ICharSequence" />
        <Parameter Name="tbstart" Type="System.Int32" />
        <Parameter Name="tbend" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="tb">To be added.</param>
        <param name="tbstart">To be added.</param>
        <param name="tbend">To be added.</param>
        <summary>Replaces the specified range (<c>st&amp;hellip;en</c>) of text in this
 Editable with a copy of the slice <c>start&amp;hellip;end</c> from
 <c>source</c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public Android.Text.IEditable? Replace (int start, int end, string? tb, int tbstart, int tbend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.Text.IEditable Replace(int32 start, int32 end, string tb, int32 tbstart, int32 tbend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.Replace(System.Int32,System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.Replace : int * int * string * int * int -&gt; Android.Text.IEditable" Usage="spannableStringBuilder.Replace (start, end, tb, tbstart, tbend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="tb" Type="System.String" />
        <Parameter Name="tbstart" Type="System.Int32" />
        <Parameter Name="tbend" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="tb">To be added.</param>
        <param name="tbstart">To be added.</param>
        <param name="tbend">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFilters">
      <MemberSignature Language="C#" Value="public virtual void SetFilters (Android.Text.IInputFilter[]? filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFilters(class Android.Text.IInputFilter[] filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.SetFilters(Android.Text.IInputFilter[])" />
      <MemberSignature Language="F#" Value="abstract member SetFilters : Android.Text.IInputFilter[] -&gt; unit&#xA;override this.SetFilters : Android.Text.IInputFilter[] -&gt; unit" Usage="spannableStringBuilder.SetFilters filters" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.IEditable.SetFilters(Android.Text.IInputFilter[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFilters", "([Landroid/text/InputFilter;)V", "GetSetFilters_arrayLandroid_text_InputFilter_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFilters", "([Landroid/text/InputFilter;)V", "GetSetFilters_arrayLandroid_text_InputFilter_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="Android.Text.IInputFilter[]" />
      </Parameters>
      <Docs>
        <param name="filters">To be added.</param>
        <summary>Sets the series of filters that will be called in succession
 whenever the text of this Editable is changed, each of which has
 the opportunity to limit or transform the text that is being inserted.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetSpan">
      <MemberSignature Language="C#" Value="public virtual void SetSpan (Java.Lang.Object? what, int start, int end, Android.Text.SpanTypes flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSpan(class Java.Lang.Object what, int32 start, int32 end, valuetype Android.Text.SpanTypes flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.SetSpan(Java.Lang.Object,System.Int32,System.Int32,Android.Text.SpanTypes)" />
      <MemberSignature Language="F#" Value="abstract member SetSpan : Java.Lang.Object * int * int * Android.Text.SpanTypes -&gt; unit&#xA;override this.SetSpan : Java.Lang.Object * int * int * Android.Text.SpanTypes -&gt; unit" Usage="spannableStringBuilder.SetSpan (what, start, end, flags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.Text.ISpannable.SetSpan(Java.Lang.Object,System.Int32,System.Int32,Android.Text.SpanTypes)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setSpan", "(Ljava/lang/Object;III)V", "GetSetSpan_Ljava_lang_Object_IIIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setSpan", "(Ljava/lang/Object;III)V", "GetSetSpan_Ljava_lang_Object_IIIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="what" Type="Java.Lang.Object" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Text.SpanTypes">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="what">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>Mark the specified range of text with the specified object.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#setSpan(java.lang.Object,%20int,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.setSpan(java.lang.Object, int, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SubSequence">
      <MemberSignature Language="C#" Value="public string? SubSequence (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string SubSequence(int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.SubSequence(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="member this.SubSequence : int * int -&gt; string" Usage="spannableStringBuilder.SubSequence (start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>Return a new CharSequence containing a copy of the specified
            range of this buffer, including the overlapping spans.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#subSequence(int,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.subSequence(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SubSequenceFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence? SubSequenceFormatted (int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence SubSequenceFormatted(int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.SubSequenceFormatted(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SubSequenceFormatted : int * int -&gt; Java.Lang.ICharSequence&#xA;override this.SubSequenceFormatted : int * int -&gt; Java.Lang.ICharSequence" Usage="spannableStringBuilder.SubSequenceFormatted (start, end)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.ICharSequence.SubSequenceFormatted(System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("subSequence", "(II)Ljava/lang/CharSequence;", "GetSubSequence_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("subSequence", "(II)Ljava/lang/CharSequence;", "GetSubSequence_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">the start offset of the sub-sequence. It is inclusive, that
            is, the index of the first character that is included in the
            sub-sequence.</param>
        <param name="end">the end offset of the sub-sequence. It is exclusive, that is,
            the index of the first character after those that are included
            in the sub-sequence</param>
        <summary>Return a new CharSequence containing a copy of the specified
            range of this buffer, including the overlapping spans.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#subSequence(int,%20int)" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.subSequence(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator" ExplicitInterfaceMemberName="global::System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator global::System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.global::System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="F#" Value="abstract member global::System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.global::System.Collections.IEnumerable.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="spannableStringBuilder.global::System.Collections.IEnumerable.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWatcherDepth">
      <MemberSignature Language="C#" Value="public virtual int TextWatcherDepth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextWatcherDepth" />
      <MemberSignature Language="DocId" Value="P:Android.Text.SpannableStringBuilder.TextWatcherDepth" />
      <MemberSignature Language="F#" Value="member this.TextWatcherDepth : int" Usage="Android.Text.SpannableStringBuilder.TextWatcherDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getTextWatcherDepth", "()I", "GetGetTextWatcherDepthHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getTextWatcherDepth", "()I", "GetGetTextWatcherDepthHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the depth of TextWatcher callbacks.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/SpannableStringBuilder#getTextWatcherDepth()" title="Reference documentation">Java documentation for <code>android.text.SpannableStringBuilder.getTextWatcherDepth()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Text.SpannableStringBuilder.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Text.SpannableStringBuilder.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Text.SpannableStringBuilder.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Text.SpannableStringBuilder.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Android.Text.SpannableStringBuilder? ValueOf (Java.Lang.ICharSequence? source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.SpannableStringBuilder ValueOf(class Java.Lang.ICharSequence source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.ValueOf(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="static member ValueOf : Java.Lang.ICharSequence -&gt; Android.Text.SpannableStringBuilder" Usage="Android.Text.SpannableStringBuilder.ValueOf source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("valueOf", "(Ljava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("valueOf", "(Ljava/lang/CharSequence;)Landroid/text/SpannableStringBuilder;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.SpannableStringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ValueOf">
      <MemberSignature Language="C#" Value="public static Android.Text.SpannableStringBuilder? ValueOf (string? source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.Text.SpannableStringBuilder ValueOf(string source) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.SpannableStringBuilder.ValueOf(System.String)" />
      <MemberSignature Language="F#" Value="static member ValueOf : string -&gt; Android.Text.SpannableStringBuilder" Usage="Android.Text.SpannableStringBuilder.ValueOf source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.Text.SpannableStringBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
