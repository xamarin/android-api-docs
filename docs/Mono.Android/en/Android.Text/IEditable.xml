<Type Name="IEditable" FullName="Android.Text.IEditable">
  <TypeSignature Language="VB.NET" Value="Public Interface IEditable&#xA;Implements IAppendable, IDisposable, IEnumerable(Of Char), IGetChars, IJavaPeerable, ISpannable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IEditable : Android::Text::IGetChars, Android::Text::ISpannable, IDisposable, Java::Interop::IJavaPeerable, Java::Lang::IAppendable, System::Collections::Generic::IEnumerable&lt;char&gt;" />
  <TypeSignature Language="C#" Value="public interface IEditable : Android.Text.IGetChars, Android.Text.ISpannable, IDisposable, Java.Interop.IJavaPeerable, Java.Lang.IAppendable, System.Collections.Generic.IEnumerable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IEditable implements class Android.Runtime.IJavaObject, class Android.Text.IGetChars, class Android.Text.ISpannable, class Android.Text.ISpanned, class Java.Interop.IJavaPeerable, class Java.Lang.IAppendable, class Java.Lang.ICharSequence, class System.Collections.Generic.IEnumerable`1&lt;char&gt;, class System.Collections.IEnumerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Text.IEditable" />
  <TypeSignature Language="F#" Value="type IEditable = interface&#xA;    interface IGetChars&#xA;    interface ICharSequence&#xA;    interface seq&lt;char&gt;&#xA;    interface IEnumerable&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface ISpannable&#xA;    interface ISpanned&#xA;    interface IAppendable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.IGetChars</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.ISpannable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Text.ISpanned</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.IAppendable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.ICharSequence</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/text/Editable", "", "Android.Text.IEditableInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/text/Editable", "", "Android.Text.IEditableInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This is the interface for text whose content and markup
            can be changed (as opposed
            to immutable text like Strings).</summary>
    <remarks>
      <para>This is the interface for text whose content and markup
            can be changed (as opposed
            to immutable text like Strings).  If you make a <c>DynamicLayout</c>
            of an Editable, the layout will be reflowed as the text is changed.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/text/Editable" title="Reference documentation">Java documentation for <code>android.text.Editable</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Append">
      <MemberSignature Language="VB.NET" Value="Public Function Append (text As ICharSequence) As IAppendable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::IAppendable ^ Append(Java::Lang::ICharSequence ^ text);" />
      <MemberSignature Language="C#" Value="public Java.Lang.IAppendable? Append (Java.Lang.ICharSequence? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.IAppendable Append(class Java.Lang.ICharSequence text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.IEditable.Append(Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member Append : Java.Lang.ICharSequence -&gt; Java.Lang.IAppendable" Usage="iEditable.Append text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IAppendable.Append(Java.Lang.ICharSequence)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("append", "(Ljava/lang/CharSequence;)Landroid/text/Editable;", "GetAppend_Ljava_lang_CharSequence_Handler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("append", "(Ljava/lang/CharSequence;)Landroid/text/Editable;", "GetAppend_Ljava_lang_CharSequence_Handler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="text">the character sequence to append.</param>
        <summary>Convenience for replace(length(), length(), text, 0, text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Convenience for replace(length(), length(), text, 0, text.length())</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Editable#append(java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.Editable.append(java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Text.IEditable.Replace(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="VB.NET" Value="Public Function Append (text As Char) As IAppendable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::IAppendable ^ Append(char text);" />
      <MemberSignature Language="C#" Value="public Java.Lang.IAppendable? Append (char text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.IAppendable Append(char text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.IEditable.Append(System.Char)" />
      <MemberSignature Language="F#" Value="abstract member Append : char -&gt; Java.Lang.IAppendable" Usage="iEditable.Append text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IAppendable.Append(System.Char)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("append", "(C)Landroid/text/Editable;", "GetAppend_CHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("append", "(C)Landroid/text/Editable;", "GetAppend_CHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="text">the character to append.</param>
        <summary>Convenience for append(String.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Convenience for append(String.valueOf(text)).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Editable#append(char)" title="Reference documentation">Java documentation for <code>android.text.Editable.append(char)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Text.IEditable.Replace(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="VB.NET" Value="Public Function Append (text As ICharSequence, start As Integer, end As Integer) As IAppendable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::IAppendable ^ Append(Java::Lang::ICharSequence ^ text, int start, int end);" />
      <MemberSignature Language="C#" Value="public Java.Lang.IAppendable? Append (Java.Lang.ICharSequence? text, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.IAppendable Append(class Java.Lang.ICharSequence text, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.IEditable.Append(Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Append : Java.Lang.ICharSequence * int * int -&gt; Java.Lang.IAppendable" Usage="iEditable.Append (text, start, end)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.IAppendable.Append(Java.Lang.ICharSequence,System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("append", "(Ljava/lang/CharSequence;II)Landroid/text/Editable;", "GetAppend_Ljava_lang_CharSequence_IIHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("append", "(Ljava/lang/CharSequence;II)Landroid/text/Editable;", "GetAppend_Ljava_lang_CharSequence_IIHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.IAppendable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="text">the character sequence to append.</param>
        <param name="start">the first index of the subsequence of <c>csq</c> that is
            appended.</param>
        <param name="end">the last index of the subsequence of <c>csq</c> that is
            appended.</param>
        <summary>Convenience for replace(length(), length(), text, start, end)</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Convenience for replace(length(), length(), text, start, end)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Editable#append(java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.text.Editable.append(java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Text.IEditable.Replace(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.IEditable.Clear" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit" Usage="iEditable.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clear", "()V", "GetClearHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clear", "()V", "GetClearHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Convenience for replace(0, length(), "", 0, 0).</summary>
        <remarks>
          <para>Convenience for replace(0, length(), "", 0, 0).
            Note that this clears the text, not the spans;
            use <c>#clearSpans</c> if you need that.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Editable#clear()" title="Reference documentation">Java documentation for <code>android.text.Editable.clear()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Text.IEditable.Replace(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ClearSpans">
      <MemberSignature Language="VB.NET" Value="Public Sub ClearSpans ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearSpans();" />
      <MemberSignature Language="C#" Value="public void ClearSpans ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearSpans() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.IEditable.ClearSpans" />
      <MemberSignature Language="F#" Value="abstract member ClearSpans : unit -&gt; unit" Usage="iEditable.ClearSpans " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearSpans", "()V", "GetClearSpansHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearSpans", "()V", "GetClearSpansHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes all spans from the Editable, as if by calling
            <c>#removeSpan</c> on each of them.</summary>
        <remarks>
          <para>Removes all spans from the Editable, as if by calling
            <c>#removeSpan</c> on each of them.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Editable#clearSpans()" title="Reference documentation">Java documentation for <code>android.text.Editable.clearSpans()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="VB.NET" Value="Public Function Delete (st As Integer, en As Integer) As IEditable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Text::IEditable ^ Delete(int st, int en);" />
      <MemberSignature Language="C#" Value="public Android.Text.IEditable? Delete (int st, int en);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.IEditable Delete(int32 st, int32 en) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.IEditable.Delete(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Delete : int * int -&gt; Android.Text.IEditable" Usage="iEditable.Delete (st, en)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("delete", "(II)Landroid/text/Editable;", "GetDelete_IIHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("delete", "(II)Landroid/text/Editable;", "GetDelete_IIHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="st" Type="System.Int32" />
        <Parameter Name="en" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="st">To be added.</param>
        <param name="en">To be added.</param>
        <summary>Convenience for replace(st, en, "", 0, 0)</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Convenience for replace(st, en, "", 0, 0)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Editable#delete(int,%20int)" title="Reference documentation">Java documentation for <code>android.text.Editable.delete(int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Text.IEditable.Replace(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFilters">
      <MemberSignature Language="VB.NET" Value="Public Function GetFilters () As IInputFilter()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Android::Text::IInputFilter ^&gt; ^ GetFilters();" />
      <MemberSignature Language="C#" Value="public Android.Text.IInputFilter[]? GetFilters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.IInputFilter[] GetFilters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.IEditable.GetFilters" />
      <MemberSignature Language="F#" Value="abstract member GetFilters : unit -&gt; Android.Text.IInputFilter[]" Usage="iEditable.GetFilters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFilters", "()[Landroid/text/InputFilter;", "GetGetFiltersHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFilters", "()[Landroid/text/InputFilter;", "GetGetFiltersHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IInputFilter[]</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the array of input filters that are currently applied
            to changes to this Editable.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the array of input filters that are currently applied
            to changes to this Editable.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Editable#getFilters()" title="Reference documentation">Java documentation for <code>android.text.Editable.getFilters()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="VB.NET" Value="Public Function Insert (where As Integer, text As ICharSequence) As IEditable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Text::IEditable ^ Insert(int where, Java::Lang::ICharSequence ^ text);" />
      <MemberSignature Language="C#" Value="public Android.Text.IEditable? Insert (int where, Java.Lang.ICharSequence? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.IEditable Insert(int32 where, class Java.Lang.ICharSequence text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.IEditable.Insert(System.Int32,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * Java.Lang.ICharSequence -&gt; Android.Text.IEditable" Usage="iEditable.Insert (where, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("insert", "(ILjava/lang/CharSequence;)Landroid/text/Editable;", "GetInsert_ILjava_lang_CharSequence_Handler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("insert", "(ILjava/lang/CharSequence;)Landroid/text/Editable;", "GetInsert_ILjava_lang_CharSequence_Handler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="where" Type="System.Int32" />
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="where">To be added.</param>
        <param name="text">To be added.</param>
        <summary>Convenience for replace(where, where, text, 0, text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Convenience for replace(where, where, text, 0, text.length());</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Editable#insert(int,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.Editable.insert(int, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Text.IEditable.Replace(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="VB.NET" Value="Public Function Insert (where As Integer, text As ICharSequence, start As Integer, end As Integer) As IEditable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Text::IEditable ^ Insert(int where, Java::Lang::ICharSequence ^ text, int start, int end);" />
      <MemberSignature Language="C#" Value="public Android.Text.IEditable? Insert (int where, Java.Lang.ICharSequence? text, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.IEditable Insert(int32 where, class Java.Lang.ICharSequence text, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.IEditable.Insert(System.Int32,Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * Java.Lang.ICharSequence * int * int -&gt; Android.Text.IEditable" Usage="iEditable.Insert (where, text, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("insert", "(ILjava/lang/CharSequence;II)Landroid/text/Editable;", "GetInsert_ILjava_lang_CharSequence_IIHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("insert", "(ILjava/lang/CharSequence;II)Landroid/text/Editable;", "GetInsert_ILjava_lang_CharSequence_IIHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="where" Type="System.Int32" />
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="where">To be added.</param>
        <param name="text">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>Convenience for replace(where, where, text, start, end)</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Convenience for replace(where, where, text, start, end)</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Editable#insert(int,%20java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.text.Editable.insert(int, java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Text.IEditable.Replace(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="VB.NET" Value="Public Function Replace (st As Integer, en As Integer, text As ICharSequence) As IEditable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Text::IEditable ^ Replace(int st, int en, Java::Lang::ICharSequence ^ text);" />
      <MemberSignature Language="C#" Value="public Android.Text.IEditable? Replace (int st, int en, Java.Lang.ICharSequence? text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.IEditable Replace(int32 st, int32 en, class Java.Lang.ICharSequence text) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.IEditable.Replace(System.Int32,System.Int32,Java.Lang.ICharSequence)" />
      <MemberSignature Language="F#" Value="abstract member Replace : int * int * Java.Lang.ICharSequence -&gt; Android.Text.IEditable" Usage="iEditable.Replace (st, en, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replace", "(IILjava/lang/CharSequence;)Landroid/text/Editable;", "GetReplace_IILjava_lang_CharSequence_Handler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replace", "(IILjava/lang/CharSequence;)Landroid/text/Editable;", "GetReplace_IILjava_lang_CharSequence_Handler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="st" Type="System.Int32" />
        <Parameter Name="en" Type="System.Int32" />
        <Parameter Name="text" Type="Java.Lang.ICharSequence" />
      </Parameters>
      <Docs>
        <param name="st">To be added.</param>
        <param name="en">To be added.</param>
        <param name="text">To be added.</param>
        <summary>Convenience for replace(st, en, text, 0, text.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Convenience for replace(st, en, text, 0, text.length())</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Editable#replace(int,%20int,%20java.lang.CharSequence)" title="Reference documentation">Java documentation for <code>android.text.Editable.replace(int, int, java.lang.CharSequence)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.Text.IEditable.Replace(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="VB.NET" Value="Public Function Replace (st As Integer, en As Integer, source As ICharSequence, start As Integer, end As Integer) As IEditable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::Text::IEditable ^ Replace(int st, int en, Java::Lang::ICharSequence ^ source, int start, int end);" />
      <MemberSignature Language="C#" Value="public Android.Text.IEditable? Replace (int st, int en, Java.Lang.ICharSequence? source, int start, int end);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Text.IEditable Replace(int32 st, int32 en, class Java.Lang.ICharSequence source, int32 start, int32 end) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.IEditable.Replace(System.Int32,System.Int32,Java.Lang.ICharSequence,System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member Replace : int * int * Java.Lang.ICharSequence * int * int -&gt; Android.Text.IEditable" Usage="iEditable.Replace (st, en, source, start, end)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("replace", "(IILjava/lang/CharSequence;II)Landroid/text/Editable;", "GetReplace_IILjava_lang_CharSequence_IIHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("replace", "(IILjava/lang/CharSequence;II)Landroid/text/Editable;", "GetReplace_IILjava_lang_CharSequence_IIHandler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Text.IEditable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="st" Type="System.Int32" />
        <Parameter Name="en" Type="System.Int32" />
        <Parameter Name="source" Type="Java.Lang.ICharSequence" />
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="end" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="st">To be added.</param>
        <param name="en">To be added.</param>
        <param name="source">To be added.</param>
        <param name="start">To be added.</param>
        <param name="end">To be added.</param>
        <summary>Replaces the specified range (<c>st&amp;hellip;en</c>) of text in this
            Editable with a copy of the slice <c>start&amp;hellip;end</c> from
            <c>source</c>.</summary>
        <returns>a reference to this object.</returns>
        <remarks>
          <para>Replaces the specified range (<c>st&amp;hellip;en</c>) of text in this
            Editable with a copy of the slice <c>start&amp;hellip;end</c> from
            <c>source</c>.  The destination slice may be empty, in which case
            the operation is an insertion, or the source slice may be empty,
            in which case the operation is a deletion.</para>
          <para>Before the change is committed, each filter that was set with
            <c>#setFilters</c> is given the opportunity to modify the
            <c>source</c> text.</para>
          <para>If <c>source</c>
            is Spanned, the spans from it are preserved into the Editable.
            Existing spans within the Editable that entirely cover the replaced
            range are retained, but any that were strictly within the range
            that was replaced are removed. If the <c>source</c> contains a span
            with <c>Spanned#SPAN_PARAGRAPH</c> flag, and it does not satisfy the
            paragraph boundary constraint, it is not retained. As a special case, the
            cursor position is preserved even when the entire range where it is located
            is replaced.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Editable#replace(int,%20int,%20java.lang.CharSequence,%20int,%20int)" title="Reference documentation">Java documentation for <code>android.text.Editable.replace(int, int, java.lang.CharSequence, int, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetFilters">
      <MemberSignature Language="VB.NET" Value="Public Sub SetFilters (filters As IInputFilter())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFilters(cli::array &lt;Android::Text::IInputFilter ^&gt; ^ filters);" />
      <MemberSignature Language="C#" Value="public void SetFilters (Android.Text.IInputFilter[]? filters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFilters(class Android.Text.IInputFilter[] filters) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Text.IEditable.SetFilters(Android.Text.IInputFilter[])" />
      <MemberSignature Language="F#" Value="abstract member SetFilters : Android.Text.IInputFilter[] -&gt; unit" Usage="iEditable.SetFilters filters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFilters", "([Landroid/text/InputFilter;)V", "GetSetFilters_arrayLandroid_text_InputFilter_Handler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFilters", "([Landroid/text/InputFilter;)V", "GetSetFilters_arrayLandroid_text_InputFilter_Handler:Android.Text.IEditableInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filters" Type="Android.Text.IInputFilter[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="filters">To be added.</param>
        <summary>Sets the series of filters that will be called in succession
            whenever the text of this Editable is changed, each of which has
            the opportunity to limit or transform the text that is being inserted.</summary>
        <remarks>
          <para>Sets the series of filters that will be called in succession
            whenever the text of this Editable is changed, each of which has
            the opportunity to limit or transform the text that is being inserted.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/text/Editable#setFilters(android.text.InputFilter[])" title="Reference documentation">Java documentation for <code>android.text.Editable.setFilters(android.text.InputFilter[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
