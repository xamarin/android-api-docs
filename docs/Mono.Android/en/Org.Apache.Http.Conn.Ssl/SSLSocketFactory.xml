<Type Name="SSLSocketFactory" FullName="Org.Apache.Http.Conn.Ssl.SSLSocketFactory">
  <TypeSignature Language="C#" Value="public class SSLSocketFactory : Java.Lang.Object, IDisposable, Org.Apache.Http.Conn.Schemes.ILayeredSocketFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SSLSocketFactory extends Java.Lang.Object implements class Android.Runtime.IJavaObject, class Org.Apache.Http.Conn.Schemes.ILayeredSocketFactory, class Org.Apache.Http.Conn.Schemes.ISocketFactory, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Org.Apache.Http.Conn.Schemes.ILayeredSocketFactory</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/apache/http/conn/ssl/SSLSocketFactory", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Layered socket factory for TLS/SSL connections, based on JSSE.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Layered socket factory for TLS/SSL connections, based on JSSE.
.
 <list type="bullet"><item><term /></item><item><term /></item><item><term /></item><item><term /></item><item><term /></item><item><term /></item></list></para>
      <para tool="javadoc-to-mdoc">
 SSLSocketFactory can be used to validate the identity of the HTTPS 
 server against a list of trusted certificates and to authenticate to
 the HTTPS server using a private key. 
 </para>
      <para tool="javadoc-to-mdoc">
 SSLSocketFactory will enable server authentication when supplied with
 a <c><see cref="T:Java.Security.KeyStore" /></c> file containg one or several trusted
 certificates. The client secure socket will reject the connection during
 the SSL session handshake if the target HTTPS server attempts to
 authenticate itself with a non-trusted certificate.
 </para>
      <para tool="javadoc-to-mdoc">
 Use JDK keytool utility to import a trusted certificate and generate a truststore file:    
    <example><code lang="java">
     keytool -import -alias "my server cert" -file server.crt -keystore my.truststore
    </code></example></para>
      <para tool="javadoc-to-mdoc">
 SSLSocketFactory will enable client authentication when supplied with
 a <c><see cref="T:Java.Security.KeyStore" /></c> file containg a private key/public certificate
 pair. The client secure socket will use the private key to authenticate
 itself to the target HTTPS server during the SSL session handshake if
 requested to do so by the server.
 The target HTTPS server will in its turn verify the certificate presented
 by the client in order to establish client's authenticity
 </para>
      <para tool="javadoc-to-mdoc">
 Use the following sequence of actions to generate a keystore file
 </para>
      <para tool="javadoc-to-mdoc">
      Use JDK keytool utility to generate a new key
      <example><code lang="java">keytool -genkey -v -alias "my client key" -validity 365 -keystore my.keystore</code></example>
      For simplicity use the same password for the key as that of the keystore
      </para>
      <para tool="javadoc-to-mdoc">
      Issue a certificate signing request (CSR)
      <example><code lang="java">keytool -certreq -alias "my client key" -file mycertreq.csr -keystore my.keystore</code></example></para>
      <para tool="javadoc-to-mdoc">
      Send the certificate request to the trusted Certificate Authority for signature. 
      One may choose to act as her own CA and sign the certificate request using a PKI 
      tool, such as OpenSSL.
      </para>
      <para tool="javadoc-to-mdoc">
       Import the trusted CA root certificate
       <example><code lang="java">keytool -import -alias "my trusted ca" -file caroot.crt -keystore my.keystore</code></example></para>
      <para tool="javadoc-to-mdoc">
       Import the PKCS#7 file containg the complete certificate chain
       <example><code lang="java">keytool -import -alias "my client key" -file mycert.p7 -keystore my.keystore</code></example></para>
      <para tool="javadoc-to-mdoc">
       Verify the content the resultant keystore file
       <example><code lang="java">keytool -list -v -keystore my.keystore</code></example></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SSLSocketFactory (Java.Security.KeyStore truststore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Security.KeyStore truststore) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/security/KeyStore;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="truststore" Type="Java.Security.KeyStore" />
      </Parameters>
      <Docs>
        <param name="truststore">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#SSLSocketFactory(java.security.KeyStore)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException" />
        <exception cref="T:Java.Security.KeyManagementException" />
        <exception cref="T:Java.Security.KeyStoreException" />
        <exception cref="T:Java.Security.UnrecoverableKeyException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SSLSocketFactory (Java.Security.KeyStore keystore, string keystorePassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Security.KeyStore keystore, string keystorePassword) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/security/KeyStore;Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keystore" Type="Java.Security.KeyStore" />
        <Parameter Name="keystorePassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keystore">To be added.</param>
        <param name="keystorePassword">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#SSLSocketFactory(java.security.KeyStore, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException" />
        <exception cref="T:Java.Security.KeyManagementException" />
        <exception cref="T:Java.Security.KeyStoreException" />
        <exception cref="T:Java.Security.UnrecoverableKeyException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SSLSocketFactory (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SSLSocketFactory (Java.Security.KeyStore keystore, string keystorePassword, Java.Security.KeyStore truststore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.Security.KeyStore keystore, string keystorePassword, class Java.Security.KeyStore truststore) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keystore" Type="Java.Security.KeyStore" />
        <Parameter Name="keystorePassword" Type="System.String" />
        <Parameter Name="truststore" Type="Java.Security.KeyStore" />
      </Parameters>
      <Docs>
        <param name="keystore">To be added.</param>
        <param name="keystorePassword">To be added.</param>
        <param name="truststore">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#SSLSocketFactory(java.security.KeyStore, java.lang.String, java.security.KeyStore)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException" />
        <exception cref="T:Java.Security.KeyManagementException" />
        <exception cref="T:Java.Security.KeyStoreException" />
        <exception cref="T:Java.Security.UnrecoverableKeyException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SSLSocketFactory (string algorithm, Java.Security.KeyStore keystore, string keystorePassword, Java.Security.KeyStore truststore, Java.Security.SecureRandom random, Org.Apache.Http.Conn.Schemes.IHostNameResolver nameResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string algorithm, class Java.Security.KeyStore keystore, string keystorePassword, class Java.Security.KeyStore truststore, class Java.Security.SecureRandom random, class Org.Apache.Http.Conn.Schemes.IHostNameResolver nameResolver) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Ljava/lang/String;Ljava/security/KeyStore;Ljava/lang/String;Ljava/security/KeyStore;Ljava/security/SecureRandom;Lorg/apache/http/conn/scheme/HostNameResolver;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="algorithm" Type="System.String" />
        <Parameter Name="keystore" Type="Java.Security.KeyStore" />
        <Parameter Name="keystorePassword" Type="System.String" />
        <Parameter Name="truststore" Type="Java.Security.KeyStore" />
        <Parameter Name="random" Type="Java.Security.SecureRandom" />
        <Parameter Name="nameResolver" Type="Org.Apache.Http.Conn.Schemes.IHostNameResolver" />
      </Parameters>
      <Docs>
        <param name="algorithm">To be added.</param>
        <param name="keystore">To be added.</param>
        <param name="keystorePassword">To be added.</param>
        <param name="truststore">To be added.</param>
        <param name="random">To be added.</param>
        <param name="nameResolver">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#SSLSocketFactory(java.lang.String, java.security.KeyStore, java.lang.String, java.security.KeyStore, java.security.SecureRandom, org.apache.http.conn.scheme.HostNameResolver)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Security.NoSuchAlgorithmException" />
        <exception cref="T:Java.Security.KeyManagementException" />
        <exception cref="T:Java.Security.KeyStoreException" />
        <exception cref="T:Java.Security.UnrecoverableKeyException" />
      </Docs>
    </Member>
    <Member MemberName="AllowAllHostnameVerifier">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.Conn.Ssl.IX509HostnameVerifier AllowAllHostnameVerifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Org.Apache.Http.Conn.Ssl.IX509HostnameVerifier AllowAllHostnameVerifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ALLOW_ALL_HOSTNAME_VERIFIER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Conn.Ssl.IX509HostnameVerifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#ALLOW_ALL_HOSTNAME_VERIFIER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BrowserCompatibleHostnameVerifier">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.Conn.Ssl.IX509HostnameVerifier BrowserCompatibleHostnameVerifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Org.Apache.Http.Conn.Ssl.IX509HostnameVerifier BrowserCompatibleHostnameVerifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("BROWSER_COMPATIBLE_HOSTNAME_VERIFIER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Conn.Ssl.IX509HostnameVerifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#BROWSER_COMPATIBLE_HOSTNAME_VERIFIER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ConnectSocket">
      <MemberSignature Language="C#" Value="public virtual Java.Net.Socket ConnectSocket (Java.Net.Socket sock, string host, int port, Java.Net.InetAddress localAddress, int localPort, Org.Apache.Http.Params.IHttpParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.Socket ConnectSocket(class Java.Net.Socket sock, string host, int32 port, class Java.Net.InetAddress localAddress, int32 localPort, class Org.Apache.Http.Params.IHttpParams params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connectSocket", "(Ljava/net/Socket;Ljava/lang/String;ILjava/net/InetAddress;ILorg/apache/http/params/HttpParams;)Ljava/net/Socket;", "GetConnectSocket_Ljava_net_Socket_Ljava_lang_String_ILjava_net_InetAddress_ILorg_apache_http_params_HttpParams_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sock" Type="Java.Net.Socket" />
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="localAddress" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
        <Parameter Name="params" Type="Org.Apache.Http.Params.IHttpParams" />
      </Parameters>
      <Docs>
        <param name="sock">the socket to connect, as obtained from
                  <c><see cref="M:Org.Apache.Http.Conn.Ssl.SSLSocketFactory.CreateSocket" /></c>.
                  <c>null</c> indicates that a new socket
                  should be created and connected.</param>
        <param name="host">the host to connect to</param>
        <param name="port">the port to connect to on the host</param>
        <param name="localAddress">the local address to bind the socket to, or
                  <c>null</c> for any</param>
        <param name="localPort">the port on the local machine,
                  0 or a negative number for any</param>
        <param name="params">additional <c><see cref="T:Org.Apache.Http.Params.IHttpParams" /></c> for connecting</param>
        <summary>Connects a socket to the given host.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Connects a socket to the given host.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#connectSocket(java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.apache.http.params.HttpParams)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="ConnectSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.Net.Socket&gt; ConnectSocketAsync (Java.Net.Socket sock, string host, int port, Java.Net.InetAddress localAddress, int localPort, Org.Apache.Http.Params.IHttpParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Net.Socket&gt; ConnectSocketAsync(class Java.Net.Socket sock, string host, int32 port, class Java.Net.InetAddress localAddress, int32 localPort, class Org.Apache.Http.Params.IHttpParams params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Net.Socket&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sock" Type="Java.Net.Socket" />
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="localAddress" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
        <Parameter Name="params" Type="Org.Apache.Http.Params.IHttpParams" />
      </Parameters>
      <Docs>
        <param name="sock">To be added.</param>
        <param name="host">To be added.</param>
        <param name="port">To be added.</param>
        <param name="localAddress">To be added.</param>
        <param name="localPort">To be added.</param>
        <param name="params">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public virtual Java.Net.Socket CreateSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.Socket CreateSocket() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSocket", "()Ljava/net/Socket;", "GetCreateSocketHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Creates a new, unconnected socket.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new, unconnected socket.
 The socket should subsequently be passed to
 <c><see cref="M:Org.Apache.Http.Conn.Schemes.ISocketFactory.ConnectSocket(Java.Net.Socket,System.String,System.String,System.String,System.String,System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#createSocket()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public virtual Java.Net.Socket CreateSocket (Java.Net.Socket socket, string host, int port, bool autoClose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.Socket CreateSocket(class Java.Net.Socket socket, string host, int32 port, bool autoClose) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSocket", "(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;", "GetCreateSocket_Ljava_net_Socket_Ljava_lang_String_IZHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="autoClose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket">the existing socket</param>
        <param name="host">the host name/IP</param>
        <param name="port">the port on the host</param>
        <param name="autoClose">a flag for closing the underling socket when the created
 socket is closed</param>
        <summary>Returns a socket connected to the given host that is layered over an
 existing socket.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a socket connected to the given host that is layered over an
 existing socket.  Used primarily for creating secure sockets through
 proxies.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#createSocket(java.net.Socket, java.lang.String, int, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException" />
        <exception cref="T:Java.Net.UnknownHostException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.Net.Socket&gt; CreateSocketAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Net.Socket&gt; CreateSocketAsync() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Net.Socket&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.Net.Socket&gt; CreateSocketAsync (Java.Net.Socket socket, string host, int port, bool autoClose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Net.Socket&gt; CreateSocketAsync(class Java.Net.Socket socket, string host, int32 port, bool autoClose) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Net.Socket&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="autoClose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="socket">To be added.</param>
        <param name="host">To be added.</param>
        <param name="port">To be added.</param>
        <param name="autoClose">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostnameVerifier">
      <MemberSignature Language="C#" Value="public virtual Org.Apache.Http.Conn.Ssl.IX509HostnameVerifier HostnameVerifier { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Org.Apache.Http.Conn.Ssl.IX509HostnameVerifier HostnameVerifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getHostnameVerifier", "()Lorg/apache/http/conn/ssl/X509HostnameVerifier;", "GetGetHostnameVerifierHandler")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: Android.Runtime.Register("setHostnameVerifier", "(Lorg/apache/http/conn/ssl/X509HostnameVerifier;)V", "GetSetHostnameVerifier_Lorg_apache_http_conn_ssl_X509HostnameVerifier_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Conn.Ssl.IX509HostnameVerifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc: Get method documentation">
            <format type="text/html">
              <b>Get method documentation</b>
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#getHostnameVerifier()" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
          <para tool="javadoc-to-mdoc: Set method documentation">
            <format type="text/html">
              <b>Set method documentation</b>
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#setHostnameVerifier(org.apache.http.conn.ssl.X509HostnameVerifier)" target="_blank">[Android Documentation]</a>
              <br />
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsSecure">
      <MemberSignature Language="C#" Value="public virtual bool IsSecure (Java.Net.Socket sock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSecure(class Java.Net.Socket sock) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSecure", "(Ljava/net/Socket;)Z", "GetIsSecure_Ljava_net_Socket_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sock" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="sock">the connected socket</param>
        <summary>Checks whether a socket connection is secure.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks whether a socket connection is secure.
 This factory creates TLS/SSL socket connections
 which, by default, are considered secure.
 <format type="text/html"><br /></format>
 Derived classes may override this method to perform
 runtime checks, for example based on the cypher suite.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#isSecure(java.net.Socket)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the argument is invalid
</exception>
      </Docs>
    </Member>
    <Member MemberName="SocketFactory">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.Conn.Ssl.SSLSocketFactory SocketFactory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Org.Apache.Http.Conn.Ssl.SSLSocketFactory SocketFactory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSocketFactory", "()Lorg/apache/http/conn/ssl/SSLSocketFactory;", "GetGetSocketFactoryHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Conn.Ssl.SSLSocketFactory</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets an singleton instance of the SSLProtocolSocketFactory.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets an singleton instance of the SSLProtocolSocketFactory.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#getSocketFactory()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Ssl">
      <MemberSignature Language="C#" Value="public const string Ssl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Ssl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SSL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#SSL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sslv2">
      <MemberSignature Language="C#" Value="public const string Sslv2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Sslv2" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SSLV2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#SSLV2" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StrictHostnameVerifier">
      <MemberSignature Language="C#" Value="public static Org.Apache.Http.Conn.Ssl.IX509HostnameVerifier StrictHostnameVerifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Org.Apache.Http.Conn.Ssl.IX509HostnameVerifier StrictHostnameVerifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("STRICT_HOSTNAME_VERIFIER")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.Apache.Http.Conn.Ssl.IX509HostnameVerifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#STRICT_HOSTNAME_VERIFIER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tls">
      <MemberSignature Language="C#" Value="public const string Tls;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string Tls" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TLS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/ssl/SSLSocketFactory.html#TLS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
