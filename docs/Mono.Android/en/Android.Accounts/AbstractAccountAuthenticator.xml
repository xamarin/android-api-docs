<Type Name="AbstractAccountAuthenticator" FullName="Android.Accounts.AbstractAccountAuthenticator">
  <TypeSignature Language="C#" Value="public abstract class AbstractAccountAuthenticator : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AbstractAccountAuthenticator extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/accounts/AbstractAccountAuthenticator", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="5">
    <summary>Abstract base class for creating AccountAuthenticators.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Abstract base class for creating AccountAuthenticators.
 In order to be an authenticator one must extend this class, provider implementations for the
 abstract methods and write a service that returns the result of <c><see cref="P:Android.Accounts.AbstractAccountAuthenticator.IBinder" /></c>
 in the service's <c><see cref="M:Android.App.Service.OnBind(Android.Content.Intent)" /></c> when invoked
 with an intent with action <c><see cref="F:Android.Accounts.AccountManager.ActionAuthenticatorIntent" /></c>. This service
 must specify the following intent filter and metadata tags in its AndroidManifest.xml file
 <example><code lang="xml">
   &lt;intent-filter&gt;
     &lt;action android:name="android.accounts.AccountAuthenticator" /&gt;
   &lt;/intent-filter&gt;
   &lt;meta-data android:name="android.accounts.AccountAuthenticator"
             android:resource="@xml/authenticator" /&gt;
 </code></example>
 The <c>android:resource</c> attribute must point to a resource that looks like:
 <example><code lang="xml">
 &lt;account-authenticator xmlns:android="http://schemas.android.com/apk/res/android"
    android:accountType="typeOfAuthenticator"
    android:icon="@drawable/icon"
    android:smallIcon="@drawable/miniIcon"
    android:label="@string/label"
    android:accountPreferences="@xml/account_preferences"
 /&gt;
 </code></example>
 Replace the icons and labels with your own resources. The <c>android:accountType</c>
 attribute must be a string that uniquely identifies your authenticator and will be the same
 string that user will use when making calls on the <c><see cref="T:Android.Accounts.AccountManager" /></c> and it also
 corresponds to <c><see cref="P:Android.Accounts.Account.Type" /></c> for your accounts. One user of the android:icon is the
 "Account &amp; Sync" settings page and one user of the android:smallIcon is the Contact Application's
 tab panels.
 </para>
      <para tool="javadoc-to-mdoc">
 The preferences attribute points to a PreferenceScreen xml hierarchy that contains
 a list of PreferenceScreens that can be invoked to manage the authenticator. An example is:
 <example><code lang="xml">
 &lt;PreferenceScreen xmlns:android="http://schemas.android.com/apk/res/android"&gt;
    &lt;PreferenceCategory android:title="@string/title_fmt" /&gt;
    &lt;PreferenceScreen
         android:key="key1"
         android:title="@string/key1_action"
         android:summary="@string/key1_summary"&gt;
         &lt;intent
             android:action="key1.ACTION"
             android:targetPackage="key1.package"
             android:targetClass="key1.class" /&gt;
     &lt;/PreferenceScreen&gt;
 &lt;/PreferenceScreen&gt;
 </code></example></para>
      <para tool="javadoc-to-mdoc">
 The standard pattern for implementing any of the abstract methods is the following:
 <list type="bullet"><item><term> If the supplied arguments are enough for the authenticator to fully satisfy the request
 then it will do so and return a <c><see cref="T:Android.OS.Bundle" /></c> that contains the results.
 </term></item><item><term> If the authenticator needs information from the user to satisfy the request then it
 will create an <c><see cref="T:Android.Content.Intent" /></c> to an activity that will prompt the user for the information
 and then carry out the request. This intent must be returned in a Bundle as key
 <c><see cref="F:Android.Accounts.AccountManager.KeyIntent" /></c>.
 
 The activity needs to return the final result when it is complete so the Intent should contain
 the <c><see cref="T:Android.Accounts.AccountAuthenticatorResponse" /></c> as <c><see cref="F:Android.Accounts.AccountManager.KeyAccountManagerResponse" /></c>.
 The activity must then call <c><see cref="M:Android.Accounts.AccountAuthenticatorResponse.OnResult(Android.OS.Bundle)" /></c> or
 <c><see cref="M:Android.Accounts.AccountAuthenticatorResponse.OnError(Android.Accounts.ErrorCode,System.String)" /></c> when it is complete.
 </term></item><item><term> If the authenticator cannot synchronously process the request and return a result then it
 may choose to return null and then use the AccountManagerResponse to send the result
 when it has completed the request.
 </term></item></list></para>
      <para tool="javadoc-to-mdoc" />
      <para tool="javadoc-to-mdoc">
 The following descriptions of each of the abstract authenticator methods will not describe the
 possible asynchronous nature of the request handling and will instead just describe the input
 parameters and the expected result.
 </para>
      <para tool="javadoc-to-mdoc">
 When writing an activity to satisfy these requests one must pass in the AccountManagerResponse
 and return the result via that response when the activity finishes (or whenever else  the
 activity author deems it is the correct time to respond).
 The <c><see cref="T:Android.Accounts.AccountAuthenticatorActivity" /></c> handles this, so one may wish to extend that when
 writing activities to handle these requests.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 5" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AbstractAccountAuthenticator (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.Content.Context context) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/content/Context;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#AbstractAccountAuthenticator(android.content.Context)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AbstractAccountAuthenticator (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAccount">
      <MemberSignature Language="C#" Value="public abstract Android.OS.Bundle AddAccount (Android.Accounts.AccountAuthenticatorResponse response, string accountType, string authTokenType, string[] requiredFeatures, Android.OS.Bundle options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle AddAccount(class Android.Accounts.AccountAuthenticatorResponse response, string accountType, string authTokenType, string[] requiredFeatures, class Android.OS.Bundle options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addAccount", "(Landroid/accounts/AccountAuthenticatorResponse;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;", "GetAddAccount_Landroid_accounts_AccountAuthenticatorResponse_Ljava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Android.Accounts.AccountAuthenticatorResponse" />
        <Parameter Name="accountType" Type="System.String" />
        <Parameter Name="authTokenType" Type="System.String" />
        <Parameter Name="requiredFeatures" Type="System.String[]" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="response">to send the result back to the AccountManager, will never be null</param>
        <param name="accountType">the type of account to add, will never be null</param>
        <param name="authTokenType">the type of auth token to retrieve after adding the account, may be null</param>
        <param name="requiredFeatures">a String array of authenticator-specific features that the added
 account must support, may be null</param>
        <param name="options">a Bundle of authenticator-specific options, may be null</param>
        <summary>Adds an account of the specified accountType.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Adds an account of the specified accountType.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#addAccount(android.accounts.AccountAuthenticatorResponse, java.lang.String, java.lang.String, java.lang.String[], android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Android.Accounts.NetworkErrorException">if the authenticator could not honor the request due to a
 network error
</exception>
      </Docs>
    </Member>
    <Member MemberName="AddAccountFromCredentials">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle AddAccountFromCredentials (Android.Accounts.AccountAuthenticatorResponse response, Android.Accounts.Account account, Android.OS.Bundle accountCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle AddAccountFromCredentials(class Android.Accounts.AccountAuthenticatorResponse response, class Android.Accounts.Account account, class Android.OS.Bundle accountCredentials) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("addAccountFromCredentials", "(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;Landroid/os/Bundle;)Landroid/os/Bundle;", "GetAddAccountFromCredentials_Landroid_accounts_AccountAuthenticatorResponse_Landroid_accounts_Account_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Android.Accounts.AccountAuthenticatorResponse" />
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="accountCredentials" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="response">to send the result back to the AccountManager, will never be null</param>
        <param name="account">the account to clone, will never be null</param>
        <param name="accountCredentials">the Bundle containing the required credentials to create the
 account. Contents of the Bundle are only meaningful to the authenticator. This Bundle is
 provided by <c><see cref="M:Android.Accounts.AbstractAccountAuthenticator.GetAccountCredentialsForCloning(Android.Accounts.AccountAuthenticatorResponse,Android.Accounts.Account)" /></c>.</param>
        <summary>Creates an account based on credentials provided by the authenticator instance of another
 user on the device, who has chosen to share the account with this user.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates an account based on credentials provided by the authenticator instance of another
 user on the device, who has chosen to share the account with this user.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#addAccountFromCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <exception cref="!:NoType:NetworkErrorException" />
        <exception cref="T:Android.Accounts.NetworkErrorException" />
      </Docs>
    </Member>
    <Member MemberName="ConfirmCredentials">
      <MemberSignature Language="C#" Value="public abstract Android.OS.Bundle ConfirmCredentials (Android.Accounts.AccountAuthenticatorResponse response, Android.Accounts.Account account, Android.OS.Bundle options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle ConfirmCredentials(class Android.Accounts.AccountAuthenticatorResponse response, class Android.Accounts.Account account, class Android.OS.Bundle options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("confirmCredentials", "(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;Landroid/os/Bundle;)Landroid/os/Bundle;", "GetConfirmCredentials_Landroid_accounts_AccountAuthenticatorResponse_Landroid_accounts_Account_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Android.Accounts.AccountAuthenticatorResponse" />
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="response">to send the result back to the AccountManager, will never be null</param>
        <param name="account">the account whose credentials are to be checked, will never be null</param>
        <param name="options">a Bundle of authenticator-specific options, may be null</param>
        <summary>Checks that the user knows the credentials of an account.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks that the user knows the credentials of an account.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#confirmCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Android.Accounts.NetworkErrorException">if the authenticator could not honor the request due to a
 network error
</exception>
      </Docs>
    </Member>
    <Member MemberName="EditProperties">
      <MemberSignature Language="C#" Value="public abstract Android.OS.Bundle EditProperties (Android.Accounts.AccountAuthenticatorResponse response, string accountType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle EditProperties(class Android.Accounts.AccountAuthenticatorResponse response, string accountType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("editProperties", "(Landroid/accounts/AccountAuthenticatorResponse;Ljava/lang/String;)Landroid/os/Bundle;", "GetEditProperties_Landroid_accounts_AccountAuthenticatorResponse_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Android.Accounts.AccountAuthenticatorResponse" />
        <Parameter Name="accountType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="response">used to set the result for the request. If the Constants.INTENT_KEY
   is set in the bundle then this response field is to be used for sending future
   results if and when the Intent is started.</param>
        <param name="accountType">the AccountType whose properties are to be edited.</param>
        <summary>Returns a Bundle that contains the Intent of the activity that can be used to edit the
 properties.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a Bundle that contains the Intent of the activity that can be used to edit the
 properties. In order to indicate success the activity should call response.setResult()
 with a non-null Bundle.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#editProperties(android.accounts.AccountAuthenticatorResponse, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetAccountCredentialsForCloning">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle GetAccountCredentialsForCloning (Android.Accounts.AccountAuthenticatorResponse response, Android.Accounts.Account account);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle GetAccountCredentialsForCloning(class Android.Accounts.AccountAuthenticatorResponse response, class Android.Accounts.Account account) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAccountCredentialsForCloning", "(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;)Landroid/os/Bundle;", "GetGetAccountCredentialsForCloning_Landroid_accounts_AccountAuthenticatorResponse_Landroid_accounts_Account_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Android.Accounts.AccountAuthenticatorResponse" />
        <Parameter Name="account" Type="Android.Accounts.Account" />
      </Parameters>
      <Docs>
        <param name="response">to send the result back to the AccountManager, will never be null</param>
        <param name="account">the account to clone, will never be null</param>
        <summary>Returns a Bundle that contains whatever is required to clone the account on a different
 user.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a Bundle that contains whatever is required to clone the account on a different
 user. The Bundle is passed to the authenticator instance in the target user via
 <c><see cref="M:Android.Accounts.AbstractAccountAuthenticator.AddAccountFromCredentials(Android.Accounts.AccountAuthenticatorResponse,Android.Accounts.Account,Android.Accounts.Account)" /></c>.
 The default implementation returns null, indicating that cloning is not supported.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#getAccountCredentialsForCloning(android.accounts.AccountAuthenticatorResponse, android.accounts.Account)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 18" />
        <exception cref="!:NoType:NetworkErrorException" />
        <exception cref="T:Android.Accounts.NetworkErrorException" />
      </Docs>
    </Member>
    <Member MemberName="GetAccountRemovalAllowed">
      <MemberSignature Language="C#" Value="public virtual Android.OS.Bundle GetAccountRemovalAllowed (Android.Accounts.AccountAuthenticatorResponse response, Android.Accounts.Account account);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle GetAccountRemovalAllowed(class Android.Accounts.AccountAuthenticatorResponse response, class Android.Accounts.Account account) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAccountRemovalAllowed", "(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;)Landroid/os/Bundle;", "GetGetAccountRemovalAllowed_Landroid_accounts_AccountAuthenticatorResponse_Landroid_accounts_Account_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Android.Accounts.AccountAuthenticatorResponse" />
        <Parameter Name="account" Type="Android.Accounts.Account" />
      </Parameters>
      <Docs>
        <param name="response">to send the result back to the AccountManager, will never be null</param>
        <param name="account">the account to check, will never be null</param>
        <summary>Checks if the removal of this account is allowed.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks if the removal of this account is allowed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#getAccountRemovalAllowed(android.accounts.AccountAuthenticatorResponse, android.accounts.Account)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Android.Accounts.NetworkErrorException">if the authenticator could not honor the request due to a
 network error
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAuthToken">
      <MemberSignature Language="C#" Value="public abstract Android.OS.Bundle GetAuthToken (Android.Accounts.AccountAuthenticatorResponse response, Android.Accounts.Account account, string authTokenType, Android.OS.Bundle options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle GetAuthToken(class Android.Accounts.AccountAuthenticatorResponse response, class Android.Accounts.Account account, string authTokenType, class Android.OS.Bundle options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAuthToken", "(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;", "GetGetAuthToken_Landroid_accounts_AccountAuthenticatorResponse_Landroid_accounts_Account_Ljava_lang_String_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Android.Accounts.AccountAuthenticatorResponse" />
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authTokenType" Type="System.String" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="response">to send the result back to the AccountManager, will never be null</param>
        <param name="account">the account whose credentials are to be retrieved, will never be null</param>
        <param name="authTokenType">the type of auth token to retrieve, will never be null</param>
        <param name="options">a Bundle of authenticator-specific options, may be null</param>
        <summary>Gets an authtoken for an account.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Gets an authtoken for an account.

 If not <c>null</c>, the resultant <c><see cref="T:Android.OS.Bundle" /></c> will contain different sets of keys
 depending on whether a token was successfully issued and, if not, whether one
 could be issued via some <c><see cref="T:Android.App.Activity" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 If a token cannot be provided without some additional activity, the Bundle should contain
 <c><see cref="F:Android.Accounts.AccountManager.KeyIntent" /></c> with an associated <c><see cref="T:Android.Content.Intent" /></c>. On the other hand, if
 there is no such activity, then a Bundle containing
 <c><see cref="F:Android.Accounts.AccountManager.KeyErrorCode" /></c> and <c><see cref="F:Android.Accounts.AccountManager.KeyErrorMessage" /></c> should be
 returned.
 </para>
          <para tool="javadoc-to-mdoc">
 If a token can be successfully issued, the implementation should return the
 <c><see cref="F:Android.Accounts.AccountManager.KeyAccountName" /></c> and <c><see cref="F:Android.Accounts.AccountManager.KeyAccountType" /></c> of the
 account associated with the token as well as the <c><see cref="F:Android.Accounts.AccountManager.KeyAuthtoken" /></c>. In
 addition <c><see cref="T:Android.Accounts.AbstractAccountAuthenticator" /></c> implementations that declare themselves
 <c>android:customTokens=true</c> may also provide a non-negative <c><see cref="F:Android.Accounts.AbstractAccountAuthenticator.KeyCustomTokenExpiry" /></c> long value containing the expiration timestamp of the expiration
 time (in millis since the unix epoch).
 </para>
          <para tool="javadoc-to-mdoc">
 Implementers should assume that tokens will be cached on the basis of account and
 authTokenType. The system may ignore the contents of the supplied options Bundle when
 determining to re-use a cached token. Furthermore, implementers should assume a supplied
 expiration time will be treated as non-binding advice.
 </para>
          <para tool="javadoc-to-mdoc">
 Finally, note that for android:customTokens=false authenticators, tokens are cached
 indefinitely until some client calls <c><see cref="M:Android.Accounts.AccountManager.InvalidateAuthToken(System.String,System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#getAuthToken(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Android.Accounts.NetworkErrorException">if the authenticator could not honor the request due to a
 network error
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAuthTokenLabel">
      <MemberSignature Language="C#" Value="public abstract string GetAuthTokenLabel (string authTokenType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAuthTokenLabel(string authTokenType) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAuthTokenLabel", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetAuthTokenLabel_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authTokenType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authTokenType">the authTokenType whose label is to be returned, will never be null</param>
        <summary>Ask the authenticator for a localized label for the given authTokenType.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Ask the authenticator for a localized label for the given authTokenType.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#getAuthTokenLabel(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="HasFeatures">
      <MemberSignature Language="C#" Value="public abstract Android.OS.Bundle HasFeatures (Android.Accounts.AccountAuthenticatorResponse response, Android.Accounts.Account account, string[] features);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle HasFeatures(class Android.Accounts.AccountAuthenticatorResponse response, class Android.Accounts.Account account, string[] features) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("hasFeatures", "(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;[Ljava/lang/String;)Landroid/os/Bundle;", "GetHasFeatures_Landroid_accounts_AccountAuthenticatorResponse_Landroid_accounts_Account_arrayLjava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Android.Accounts.AccountAuthenticatorResponse" />
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="features" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="response">to send the result back to the AccountManager, will never be null</param>
        <param name="account">the account to check, will never be null</param>
        <param name="features">an array of features to check, will never be null</param>
        <summary>Checks if the account supports all the specified authenticator specific features.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks if the account supports all the specified authenticator specific features.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#hasFeatures(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Android.Accounts.NetworkErrorException">if the authenticator could not honor the request due to a
 network error
</exception>
      </Docs>
    </Member>
    <Member MemberName="IBinder">
      <MemberSignature Language="C#" Value="public Android.OS.IBinder IBinder { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.IBinder IBinder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getIBinder", "()Landroid/os/IBinder;", "GetGetIBinderHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IBinder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#getIBinder()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCredentials">
      <MemberSignature Language="C#" Value="public abstract Android.OS.Bundle UpdateCredentials (Android.Accounts.AccountAuthenticatorResponse response, Android.Accounts.Account account, string authTokenType, Android.OS.Bundle options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Bundle UpdateCredentials(class Android.Accounts.AccountAuthenticatorResponse response, class Android.Accounts.Account account, string authTokenType, class Android.OS.Bundle options) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("updateCredentials", "(Landroid/accounts/AccountAuthenticatorResponse;Landroid/accounts/Account;Ljava/lang/String;Landroid/os/Bundle;)Landroid/os/Bundle;", "GetUpdateCredentials_Landroid_accounts_AccountAuthenticatorResponse_Landroid_accounts_Account_Ljava_lang_String_Landroid_os_Bundle_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Bundle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="response" Type="Android.Accounts.AccountAuthenticatorResponse" />
        <Parameter Name="account" Type="Android.Accounts.Account" />
        <Parameter Name="authTokenType" Type="System.String" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="response">to send the result back to the AccountManager, will never be null</param>
        <param name="account">the account whose credentials are to be updated, will never be null</param>
        <param name="authTokenType">the type of auth token to retrieve after updating the credentials,
 may be null</param>
        <param name="options">a Bundle of authenticator-specific options, may be null</param>
        <summary>Update the locally stored credentials for an account.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Update the locally stored credentials for an account.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/accounts/AbstractAccountAuthenticator.html#updateCredentials(android.accounts.AccountAuthenticatorResponse, android.accounts.Account, java.lang.String, android.os.Bundle)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Android.Accounts.NetworkErrorException">if the authenticator could not honor the request due to a
 network error
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
