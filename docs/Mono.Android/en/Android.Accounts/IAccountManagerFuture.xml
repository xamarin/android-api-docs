<Type Name="IAccountManagerFuture" FullName="Android.Accounts.IAccountManagerFuture">
  <TypeSignature Language="C#" Value="public interface IAccountManagerFuture : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IAccountManagerFuture implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.Accounts.IAccountManagerFuture" />
  <TypeSignature Language="F#" Value="type IAccountManagerFuture = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/accounts/AccountManagerFuture", "", "Android.Accounts.IAccountManagerFutureInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/accounts/AccountManagerFuture", "", "Android.Accounts.IAccountManagerFutureInvoker")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "V" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "V" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="5">
    <summary>A <c>AccountManagerFuture</c> represents the result of an asynchronous
            <c>AccountManager</c> call.</summary>
    <remarks>
      <para>A <c>AccountManagerFuture</c> represents the result of an asynchronous
            <c>AccountManager</c> call.  Methods are provided to check if the computation is
            complete, to wait for its completion, and to retrieve the result of
            the computation.  The result can only be retrieved using method
            <c>get</c> when the computation has completed, blocking if
            necessary until it is ready.  Cancellation is performed by the
            <c>cancel</c> method.  Additional methods are provided to
            determine if the task completed normally or was cancelled. Once a
            computation has completed, the computation cannot be cancelled.
            If you would like to use a <c>Future</c> for the sake
            of cancellability but not provide a usable result, you can
            declare types of the form <c>Future&amp;lt;?&amp;gt;</c> and
            return <c>null</c> as a result of the underlying task.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/accounts/AccountManagerFuture" title="Reference documentation">Java documentation for <code>android.accounts.AccountManagerFuture</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 5" />
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel (bool mayInterruptIfRunning);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Cancel(bool mayInterruptIfRunning) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Accounts.IAccountManagerFuture.Cancel(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Cancel : bool -&gt; bool" Usage="iAccountManagerFuture.Cancel mayInterruptIfRunning" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancel", "(Z)Z", "GetCancel_ZHandler:Android.Accounts.IAccountManagerFutureInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cancel", "(Z)Z", "GetCancel_ZHandler:Android.Accounts.IAccountManagerFutureInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mayInterruptIfRunning" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mayInterruptIfRunning">
          <c>true</c> if the thread executing this
            task should be interrupted; otherwise, in-progress tasks are allowed
            to complete</param>
        <summary>Attempts to cancel execution of this task.</summary>
        <returns>
          <c>false</c> if the task could not be cancelled,
            typically because it has already completed normally;
            <c>true</c> otherwise</returns>
        <remarks>
          <para>Attempts to cancel execution of this task.  This attempt will
            fail if the task has already completed, has already been cancelled,
            or could not be cancelled for some other reason. If successful,
            and this task has not started when <c>cancel</c> is called,
            this task should never run.  If the task has already started,
            then the <c>mayInterruptIfRunning</c> parameter determines
            whether the thread executing this task should be interrupted in
            an attempt to stop the task.</para>
          <para>After this method returns, subsequent calls to <c>#isDone</c> will
            always return <c>true</c>.  Subsequent calls to <c>#isCancelled</c>
            will always return <c>true</c> if this method returned <c>true</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accounts/AccountManagerFuture#cancel(boolean)" title="Reference documentation">Java documentation for <code>android.accounts.AccountManagerFuture.cancel(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetResult">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetResult (long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetResult(int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Accounts.IAccountManagerFuture.GetResult(System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="abstract member GetResult : int64 * Java.Util.Concurrent.TimeUnit -&gt; Java.Lang.Object" Usage="iAccountManagerFuture.GetResult (timeout, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getResult", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetGetResult_JLjava_util_concurrent_TimeUnit_Handler:Android.Accounts.IAccountManagerFutureInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getResult", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetGetResult_JLjava_util_concurrent_TimeUnit_Handler:Android.Accounts.IAccountManagerFutureInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">the maximum time to wait</param>
        <param name="unit">the time unit of the timeout argument. This must not be null.</param>
        <summary>Accessor for the future result the <c>AccountManagerFuture</c> represents.</summary>
        <returns>the actual result</returns>
        <remarks>
          <para>Accessor for the future result the <c>AccountManagerFuture</c> represents. This
            call will block until the result is available. In order to check if the result is
            available without blocking, one may call <c>#isDone()</c> and  <c>#isCancelled()</c>.
            If the request that generated this result fails or is canceled then an exception
            will be thrown rather than the call returning normally. If a timeout is specified then
            the request will automatically be canceled if it does not complete in that amount of time.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/accounts/AccountManagerFuture#getResult(long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>android.accounts.AccountManagerFuture.getResult(long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Android.Accounts.OperationCanceledException">if the request was canceled for any
 reason</exception>
        <exception cref="T:Android.Accounts.AuthenticatorException">if there was an error communicating with
 the authenticator or if the authenticator returned an invalid response</exception>
        <exception cref="T:Java.IO.IOException">if the authenticator returned an error response that indicates
 that it encountered an IOException while communicating with the authentication server
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsCancelled">
      <MemberSignature Language="C#" Value="public bool IsCancelled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancelled" />
      <MemberSignature Language="DocId" Value="P:Android.Accounts.IAccountManagerFuture.IsCancelled" />
      <MemberSignature Language="F#" Value="member this.IsCancelled : bool" Usage="Android.Accounts.IAccountManagerFuture.IsCancelled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isCancelled", "()Z", "GetIsCancelledHandler:Android.Accounts.IAccountManagerFutureInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isCancelled", "()Z", "GetIsCancelledHandler:Android.Accounts.IAccountManagerFutureInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if this task was cancelled before it completed
 normally.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="IsDone">
      <MemberSignature Language="C#" Value="public bool IsDone { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDone" />
      <MemberSignature Language="DocId" Value="P:Android.Accounts.IAccountManagerFuture.IsDone" />
      <MemberSignature Language="F#" Value="member this.IsDone : bool" Usage="Android.Accounts.IAccountManagerFuture.IsDone" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDone", "()Z", "GetIsDoneHandler:Android.Accounts.IAccountManagerFutureInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDone", "()Z", "GetIsDoneHandler:Android.Accounts.IAccountManagerFutureInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if this task completed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Object Result" />
      <MemberSignature Language="DocId" Value="P:Android.Accounts.IAccountManagerFuture.Result" />
      <MemberSignature Language="F#" Value="member this.Result : Java.Lang.Object" Usage="Android.Accounts.IAccountManagerFuture.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getResult", "()Ljava/lang/Object;", "GetGetResultHandler:Android.Accounts.IAccountManagerFutureInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getResult", "()Ljava/lang/Object;", "GetGetResultHandler:Android.Accounts.IAccountManagerFutureInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Accessor for the future result the <see cref="T:Android.Accounts.IAccountManagerFuture" /> represents.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
        <exception cref="T:Android.Accounts.OperationCanceledException">if the request was canceled for any
 reason (including if it is forbidden
 by policy to modify an account (of that type))</exception>
        <exception cref="T:Android.Accounts.AuthenticatorException">if there was an error communicating with
 the authenticator or if the authenticator returned an invalid response</exception>
        <exception cref="T:Java.IO.IOException">if the authenticator returned an error response that indicates
 that it encountered an IOException while communicating with the authentication server
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
