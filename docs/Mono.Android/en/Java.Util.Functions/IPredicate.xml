<Type Name="IPredicate" FullName="Java.Util.Functions.IPredicate">
  <TypeSignature Language="VB.NET" Value="Public Interface IPredicate&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPredicate : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public interface IPredicate : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IPredicate implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Util.Functions.IPredicate" />
  <TypeSignature Language="F#" Value="type IPredicate = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/util/function/Predicate", "", "Java.Util.Functions.IPredicateInvoker", ApiSince=24)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/util/function/Predicate", "", "Java.Util.Functions.IPredicateInvoker", ApiSince=24)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <param name="&lt;T&gt;&lt;T&gt;">the type of the input to the predicate</param>
    <summary>Represents a predicate (boolean-valued function) of one argument.</summary>
    <remarks>
      <para>Represents a predicate (boolean-valued function) of one argument.</para>
      <para>This is a functional interface
            whose functional method is <c>#test(Object)</c>.</para>
      <para>Added in 1.8.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/util/function/Predicate" title="Reference documentation">Java documentation for <code>java.util.function.Predicate</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="And">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function And (other As IPredicate) As IPredicate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Util::Functions::IPredicate ^ And(Java::Util::Functions::IPredicate ^ other);" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Functions.IPredicate? And (Java.Util.Functions.IPredicate? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Functions.IPredicate And(class Java.Util.Functions.IPredicate other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Functions.IPredicate.And(Java.Util.Functions.IPredicate)" />
      <MemberSignature Language="F#" Value="abstract member And : Java.Util.Functions.IPredicate -&gt; Java.Util.Functions.IPredicate&#xA;override this.And : Java.Util.Functions.IPredicate -&gt; Java.Util.Functions.IPredicate" Usage="iPredicate.And other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("and", "(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;", "GetAnd_Ljava_util_function_Predicate_Handler:Java.Util.Functions.IPredicate, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("and", "(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;", "GetAnd_Ljava_util_function_Predicate_Handler:Java.Util.Functions.IPredicate, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Functions.IPredicate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Functions.IPredicate" />
      </Parameters>
      <Docs>
        <param name="other">a predicate that will be logically-ANDed with this
                         predicate</param>
        <summary>Returns a composed predicate that represents a short-circuiting logical
            AND of this predicate and another.</summary>
        <returns>a composed predicate that represents the short-circuiting logical
            AND of this predicate and the <c>other</c> predicate</returns>
        <remarks>
          <para>Returns a composed predicate that represents a short-circuiting logical
            AND of this predicate and another.  When evaluating the composed
            predicate, if this predicate is <c>false</c>, then the <c>other</c>
            predicate is not evaluated.</para>
          <para>Any exceptions thrown during evaluation of either predicate are relayed
            to the caller; if evaluation of this predicate throws an exception, the
            <c>other</c> predicate will not be evaluated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/function/Predicate#and(java.util.function.Predicate%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.function.Predicate.and(java.util.function.Predicate&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsEqual (targetRef As Object) As IPredicate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::Functions::IPredicate ^ IsEqual(Java::Lang::Object ^ targetRef);" />
      <MemberSignature Language="C#" Value="public static Java.Util.Functions.IPredicate? IsEqual (Java.Lang.Object? targetRef);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Functions.IPredicate IsEqual(class Java.Lang.Object targetRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Functions.IPredicate.IsEqual(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="static member IsEqual : Java.Lang.Object -&gt; Java.Util.Functions.IPredicate" Usage="Java.Util.Functions.IPredicate.IsEqual targetRef" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isEqual", "(Ljava/lang/Object;)Ljava/util/function/Predicate;", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isEqual", "(Ljava/lang/Object;)Ljava/util/function/Predicate;", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Functions.IPredicate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetRef" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the type of arguments to the predicate</param>
        <param name="targetRef">the object reference with which to compare for equality,
                          which may be <c>null</c></param>
        <summary>Returns a predicate that tests if two arguments are equal according
            to <c>Objects#equals(Object, Object)</c>.</summary>
        <returns>a predicate that tests if two arguments are equal according
            to <c>Objects#equals(Object, Object)</c></returns>
        <remarks>
          <para>Returns a predicate that tests if two arguments are equal according
            to <c>Objects#equals(Object, Object)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/function/Predicate#isEqual(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.util.function.Predicate.isEqual(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Negate">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Negate () As IPredicate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Util::Functions::IPredicate ^ Negate();" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Functions.IPredicate? Negate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Functions.IPredicate Negate() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Functions.IPredicate.Negate" />
      <MemberSignature Language="F#" Value="abstract member Negate : unit -&gt; Java.Util.Functions.IPredicate&#xA;override this.Negate : unit -&gt; Java.Util.Functions.IPredicate" Usage="iPredicate.Negate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("negate", "()Ljava/util/function/Predicate;", "GetNegateHandler:Java.Util.Functions.IPredicate, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("negate", "()Ljava/util/function/Predicate;", "GetNegateHandler:Java.Util.Functions.IPredicate, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Functions.IPredicate</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a predicate that represents the logical negation of this
            predicate.</summary>
        <returns>a predicate that represents the logical negation of this
            predicate</returns>
        <remarks>
          <para>Returns a predicate that represents the logical negation of this
            predicate.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/function/Predicate#negate()" title="Reference documentation">Java documentation for <code>java.util.function.Predicate.negate()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Not">
      <MemberSignature Language="VB.NET" Value="Public Shared Function Not (target As IPredicate) As IPredicate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Util::Functions::IPredicate ^ Not(Java::Util::Functions::IPredicate ^ target);" />
      <MemberSignature Language="C#" Value="public static Java.Util.Functions.IPredicate? Not (Java.Util.Functions.IPredicate? target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Util.Functions.IPredicate Not(class Java.Util.Functions.IPredicate target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Functions.IPredicate.Not(Java.Util.Functions.IPredicate)" />
      <MemberSignature Language="F#" Value="static member Not : Java.Util.Functions.IPredicate -&gt; Java.Util.Functions.IPredicate" Usage="Java.Util.Functions.IPredicate.Not target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("not", "(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("not", "(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Functions.IPredicate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="Java.Util.Functions.IPredicate" />
      </Parameters>
      <Docs>
        <param name="&lt;T&gt;&lt;T&gt;">the type of arguments to the specified predicate</param>
        <param name="target">predicate to negate</param>
        <summary>Returns a predicate that is the negation of the supplied predicate.</summary>
        <returns>a predicate that negates the results of the supplied
                    predicate</returns>
        <remarks>
          <para>Returns a predicate that is the negation of the supplied predicate.
            This is accomplished by returning result of the calling
            <c>target.negate()</c>.</para>
          <para>Added in 11.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/function/Predicate#not(java.util.function.Predicate%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.function.Predicate.not(java.util.function.Predicate&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Or">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Or (other As IPredicate) As IPredicate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Java::Util::Functions::IPredicate ^ Or(Java::Util::Functions::IPredicate ^ other);" />
      <MemberSignature Language="C#" Value="public virtual Java.Util.Functions.IPredicate? Or (Java.Util.Functions.IPredicate? other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Util.Functions.IPredicate Or(class Java.Util.Functions.IPredicate other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Functions.IPredicate.Or(Java.Util.Functions.IPredicate)" />
      <MemberSignature Language="F#" Value="abstract member Or : Java.Util.Functions.IPredicate -&gt; Java.Util.Functions.IPredicate&#xA;override this.Or : Java.Util.Functions.IPredicate -&gt; Java.Util.Functions.IPredicate" Usage="iPredicate.Or other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("or", "(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;", "GetOr_Ljava_util_function_Predicate_Handler:Java.Util.Functions.IPredicate, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("or", "(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;", "GetOr_Ljava_util_function_Predicate_Handler:Java.Util.Functions.IPredicate, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Functions.IPredicate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Java.Util.Functions.IPredicate" />
      </Parameters>
      <Docs>
        <param name="other">a predicate that will be logically-ORed with this
                         predicate</param>
        <summary>Returns a composed predicate that represents a short-circuiting logical
            OR of this predicate and another.</summary>
        <returns>a composed predicate that represents the short-circuiting logical
            OR of this predicate and the <c>other</c> predicate</returns>
        <remarks>
          <para>Returns a composed predicate that represents a short-circuiting logical
            OR of this predicate and another.  When evaluating the composed
            predicate, if this predicate is <c>true</c>, then the <c>other</c>
            predicate is not evaluated.</para>
          <para>Any exceptions thrown during evaluation of either predicate are relayed
            to the caller; if evaluation of this predicate throws an exception, the
            <c>other</c> predicate will not be evaluated.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/function/Predicate#or(java.util.function.Predicate%3C?%20super%20T%3E)" title="Reference documentation">Java documentation for <code>java.util.function.Predicate.or(java.util.function.Predicate&lt;? super T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Test">
      <MemberSignature Language="VB.NET" Value="Public Function Test (t As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Test(Java::Lang::Object ^ t);" />
      <MemberSignature Language="C#" Value="public bool Test (Java.Lang.Object? t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Test(class Java.Lang.Object t) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Util.Functions.IPredicate.Test(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member Test : Java.Lang.Object -&gt; bool" Usage="iPredicate.Test t" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("test", "(Ljava/lang/Object;)Z", "GetTest_Ljava_lang_Object_Handler:Java.Util.Functions.IPredicateInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("test", "(Ljava/lang/Object;)Z", "GetTest_Ljava_lang_Object_Handler:Java.Util.Functions.IPredicateInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="t">the input argument</param>
        <summary>Evaluates this predicate on the given argument.</summary>
        <returns>
          <c>true</c> if the input argument matches the predicate,
            otherwise <c>false</c></returns>
        <remarks>
          <para>Evaluates this predicate on the given argument.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/util/function/Predicate#test(T)" title="Reference documentation">Java documentation for <code>java.util.function.Predicate.test(T)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
