<Type Name="ISocketFactory" FullName="Org.Apache.Http.Conn.Schemes.ISocketFactory">
  <TypeSignature Language="C#" Value="public interface ISocketFactory : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISocketFactory implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/apache/http/conn/scheme/SocketFactory", "", "Org.Apache.Http.Conn.Schemes.ISocketFactoryInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A factory for creating and connecting sockets.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">A factory for creating and connecting sockets.
 The factory encapsulates the logic for establishing a socket connection.
 <format type="text/html"><br /></format>
 Both <c><see cref="M:Java.Lang.Object.Equals(Java.Lang.Object)" /></c>
 and <c><see cref="M:Java.Lang.Object.GetHashCode" /></c>
 must be overridden for the correct operation of some connection managers.</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/apache/http/conn/scheme/SocketFactory.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="ConnectSocket">
      <MemberSignature Language="C#" Value="public Java.Net.Socket ConnectSocket (Java.Net.Socket sock, string host, int port, Java.Net.InetAddress localAddress, int localPort, Org.Apache.Http.Params.IHttpParams params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.Socket ConnectSocket(class Java.Net.Socket sock, string host, int32 port, class Java.Net.InetAddress localAddress, int32 localPort, class Org.Apache.Http.Params.IHttpParams params) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("connectSocket", "(Ljava/net/Socket;Ljava/lang/String;ILjava/net/InetAddress;ILorg/apache/http/params/HttpParams;)Ljava/net/Socket;", "GetConnectSocket_Ljava_net_Socket_Ljava_lang_String_ILjava_net_InetAddress_ILorg_apache_http_params_HttpParams_Handler:Org.Apache.Http.Conn.Schemes.ISocketFactoryInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sock" Type="Java.Net.Socket" />
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="localAddress" Type="Java.Net.InetAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
        <Parameter Name="params" Type="Org.Apache.Http.Params.IHttpParams" />
      </Parameters>
      <Docs>
        <param name="sock">the socket to connect, as obtained from
                  <c><see cref="M:Org.Apache.Http.Conn.Schemes.ISocketFactory.CreateSocket" /></c>.
                  <c>null</c> indicates that a new socket
                  should be created and connected.</param>
        <param name="host">the host to connect to</param>
        <param name="port">the port to connect to on the host</param>
        <param name="localAddress">the local address to bind the socket to, or
                  <c>null</c> for any</param>
        <param name="localPort">the port on the local machine,
                  0 or a negative number for any</param>
        <param name="params">additional <c><see cref="T:Org.Apache.Http.Params.IHttpParams" /></c> for connecting</param>
        <summary>Connects a socket to the given host.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Connects a socket to the given host.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/scheme/SocketFactory.html#connectSocket(java.net.Socket, java.lang.String, int, java.net.InetAddress, int, org.apache.http.params.HttpParams)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs</exception>
        <exception cref="T:Java.Net.UnknownHostException">if the IP address of the target host
          can not be determined</exception>
        <exception cref="T:Org.Apache.Http.Conn.ConnectTimeoutException">if the socket cannot be connected
          within the time limit defined in the <c>params</c></exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSocket">
      <MemberSignature Language="C#" Value="public Java.Net.Socket CreateSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Net.Socket CreateSocket() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSocket", "()Ljava/net/Socket;", "GetCreateSocketHandler:Org.Apache.Http.Conn.Schemes.ISocketFactoryInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Net.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates a new, unconnected socket.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Creates a new, unconnected socket.
 The socket should subsequently be passed to
 <c><see cref="M:Org.Apache.Http.Conn.Schemes.ISocketFactory.ConnectSocket(Java.Net.Socket,System.String,System.String,System.String,System.String,System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/scheme/SocketFactory.html#createSocket()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">if an I/O error occurs while creating the socket
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecure">
      <MemberSignature Language="C#" Value="public bool IsSecure (Java.Net.Socket sock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSecure(class Java.Net.Socket sock) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isSecure", "(Ljava/net/Socket;)Z", "GetIsSecure_Ljava_net_Socket_Handler:Org.Apache.Http.Conn.Schemes.ISocketFactoryInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sock" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="sock">the connected socket to check</param>
        <summary>Checks whether a socket provides a secure connection.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks whether a socket provides a secure connection.
 The socket must be <c><see cref="M:Org.Apache.Http.Conn.Schemes.ISocketFactory.ConnectSocket(Java.Net.Socket,System.String,System.String,System.String,System.String,System.String)" /></c>
 by this factory.
 The factory will <format type="text/html"><i>not</i></format> perform I/O operations
 in this method.
 <format type="text/html"><br /></format>
 As a rule of thumb, plain sockets are not secure and
 TLS/SSL sockets are secure. However, there may be
 application specific deviations. For example, a plain
 socket to a host in the same intranet ("trusted zone")
 could be considered secure. On the other hand, a
 TLS/SSL socket could be considered insecure based on
 the cypher suite chosen for the connection.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/apache/http/conn/scheme/SocketFactory.html#isSecure(java.net.Socket)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if the argument is invalid, for example because it is
  not a connected socket or was created by a different
  socket factory.
  Note that socket factories are <format type="text/html"><i>not</i></format> required to
  check these conditions, they may simply return a default
  value when called with an invalid socket argument.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
