<Type Name="INClob" FullName="Java.Sql.INClob">
  <TypeSignature Language="C#" Value="public interface INClob : IDisposable, Java.Interop.IJavaPeerable, Java.Sql.IClob" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit INClob implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Sql.IClob, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Sql.INClob" />
  <TypeSignature Language="F#" Value="type INClob = interface&#xA;    interface IClob&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Sql.IClob</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/sql/NClob", "", "Java.Sql.INClobInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/sql/NClob", "", "Java.Sql.INClobInvoker")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="9">
    <summary>The mapping in the Java&lt;sup&gt;&lt;font size=-2&gt;TM&lt;/font&gt;&lt;/sup&gt; programming language
            for the SQL <c>NCLOB</c> type.</summary>
    <remarks>
      <para>The mapping in the Java&lt;sup&gt;&lt;font size=-2&gt;TM&lt;/font&gt;&lt;/sup&gt; programming language
            for the SQL <c>NCLOB</c> type.
            An SQL <c>NCLOB</c> is a built-in type
            that stores a Character Large Object using the National Character Set
             as a column value in a row of  a database table.</para>
      <para>The <c>NClob</c> interface extends the <c>Clob</c> interface
            which provides provides methods for getting the
            length of an SQL <c>NCLOB</c> value,
            for materializing a <c>NCLOB</c> value on the client, and for
            searching for a substring or <c>NCLOB</c> object within a
            <c>NCLOB</c> value. A <c>NClob</c> object, just like a <c>Clob</c> object, is valid for the duration
            of the transaction in which it was created.
            Methods in the interfaces <c>ResultSet</c>,
            <c>CallableStatement</c>, and <c>PreparedStatement</c>, such as
            <c>getNClob</c> and <c>setNClob</c> allow a programmer to
            access an SQL <c>NCLOB</c> value.  In addition, this interface
            has methods for updating a <c>NCLOB</c> value.</para>
      <para>All methods on the <c>NClob</c> interface must be fully implemented if the
            JDBC driver supports the data type.</para>
      <para>Added in 1.6.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/sql/NClob" title="Reference documentation">Java documentation for <code>java.sql.NClob</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members />
</Type>
