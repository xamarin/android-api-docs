<Type Name="Constructor" FullName="Java.Lang.Reflect.Constructor">
  <TypeSignature Language="C#" Value="public sealed class Constructor : Java.Lang.Reflect.Executable, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Constructor extends Java.Lang.Reflect.Executable implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class Java.Lang.Reflect.IAnnotatedElement, class Java.Lang.Reflect.IGenericDeclaration, class Java.Lang.Reflect.IMember, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Java.Lang.Reflect.Constructor" />
  <TypeSignature Language="F#" Value="type Constructor = class&#xA;    inherit Executable&#xA;    interface IGenericDeclaration&#xA;    interface IAnnotatedElement&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable&#xA;    interface IMember" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Reflect.Executable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.Reflect.IAnnotatedElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.Reflect.IGenericDeclaration</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Lang.Reflect.IMember</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("java/lang/reflect/Constructor", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("java/lang/reflect/Constructor", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "T" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "T" })&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <param name="&lt;T&gt;&lt;T&gt;">the class in which the constructor is declared</param>
    <summary>
      <c>Constructor</c> provides information about, and access to, a single
            constructor for a class.</summary>
    <remarks>
      <para>
        <c>Constructor</c> provides information about, and access to, a single
            constructor for a class.</para>
      <para>
        <c>Constructor</c> permits widening conversions to occur when matching the
            actual parameters to newInstance() with the underlying
            constructor's formal parameters, but throws an
            <c>IllegalArgumentException</c> if a narrowing conversion would occur.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/java/lang/reflect/Constructor" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="DeclaringClass">
      <MemberSignature Language="C#" Value="public override Java.Lang.Class DeclaringClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Lang.Class DeclaringClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Reflect.Constructor.DeclaringClass" />
      <MemberSignature Language="F#" Value="member this.DeclaringClass : Java.Lang.Class" Usage="Java.Lang.Reflect.Constructor.DeclaringClass" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Lang.Reflect.IMember.DeclaringClass</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDeclaringClass", "()Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDeclaringClass", "()Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <value>To be added.</value>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#getDeclaringClass()" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.getDeclaringClass()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotation">
      <MemberSignature Language="C#" Value="public override Java.Lang.Object? GetAnnotation (Java.Lang.Class? annotationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Object GetAnnotation(class Java.Lang.Class annotationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Reflect.Constructor.GetAnnotation(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="override this.GetAnnotation : Java.Lang.Class -&gt; Java.Lang.Object" Usage="constructor.GetAnnotation annotationType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Reflect.IAnnotatedElement.GetAnnotation(Java.Lang.Class)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAnnotation", "(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "A extends java.lang.annotation.Annotation" })]</AttributeName>
          <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "A extends java.lang.annotation.Annotation" })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationType" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="annotationType">To be added.</param>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#getAnnotation(java.lang.Class%3CT%3E)" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.getAnnotation(java.lang.Class&lt;T&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExceptionTypes">
      <MemberSignature Language="C#" Value="public override Java.Lang.Class[]? GetExceptionTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Class[] GetExceptionTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Reflect.Constructor.GetExceptionTypes" />
      <MemberSignature Language="F#" Value="override this.GetExceptionTypes : unit -&gt; Java.Lang.Class[]" Usage="constructor.GetExceptionTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getExceptionTypes", "()[Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getExceptionTypes", "()[Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#getExceptionTypes()" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.getExceptionTypes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetGenericExceptionTypes">
      <MemberSignature Language="C#" Value="public override Java.Lang.Reflect.IType[]? GetGenericExceptionTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Reflect.IType[] GetGenericExceptionTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Reflect.Constructor.GetGenericExceptionTypes" />
      <MemberSignature Language="F#" Value="override this.GetGenericExceptionTypes : unit -&gt; Java.Lang.Reflect.IType[]" Usage="constructor.GetGenericExceptionTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getGenericExceptionTypes", "()[Ljava/lang/reflect/Type;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getGenericExceptionTypes", "()[Ljava/lang/reflect/Type;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.IType[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#getGenericExceptionTypes()" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.getGenericExceptionTypes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.Reflect.GenericSignatureFormatError">if the generic constructor signature is invalid</exception>
        <exception cref="T:Java.Lang.TypeNotPresentException">if any exception type points to a missing type</exception>
        <exception cref="T:Java.Lang.Reflect.MalformedParameterizedTypeException">if any exception type points to a type that cannot be
             instantiated for some reason
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetGenericParameterTypes">
      <MemberSignature Language="C#" Value="public override Java.Lang.Reflect.IType[]? GetGenericParameterTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Reflect.IType[] GetGenericParameterTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Reflect.Constructor.GetGenericParameterTypes" />
      <MemberSignature Language="F#" Value="override this.GetGenericParameterTypes : unit -&gt; Java.Lang.Reflect.IType[]" Usage="constructor.GetGenericParameterTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getGenericParameterTypes", "()[Ljava/lang/reflect/Type;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getGenericParameterTypes", "()[Ljava/lang/reflect/Type;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.IType[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#getGenericParameterTypes()" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.getGenericParameterTypes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.Reflect.GenericSignatureFormatError">if the generic constructor signature is invalid</exception>
        <exception cref="T:Java.Lang.TypeNotPresentException">if any parameter type points to a missing type</exception>
        <exception cref="T:Java.Lang.Reflect.MalformedParameterizedTypeException">if any parameter type points to a type that cannot be
             instantiated for some reason
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetParameterAnnotations">
      <MemberSignature Language="C#" Value="public override Java.Lang.Annotation.IAnnotation[][]? GetParameterAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Annotation.IAnnotation[][] GetParameterAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Reflect.Constructor.GetParameterAnnotations" />
      <MemberSignature Language="F#" Value="override this.GetParameterAnnotations : unit -&gt; Java.Lang.Annotation.IAnnotation[][]" Usage="constructor.GetParameterAnnotations " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getParameterAnnotations", "()[[Ljava/lang/annotation/Annotation;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getParameterAnnotations", "()[[Ljava/lang/annotation/Annotation;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Annotation.IAnnotation[][]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#getParameterAnnotations()" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.getParameterAnnotations()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetParameterTypes">
      <MemberSignature Language="C#" Value="public override Java.Lang.Class[] GetParameterTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Class[] GetParameterTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Reflect.Constructor.GetParameterTypes" />
      <MemberSignature Language="F#" Value="override this.GetParameterTypes : unit -&gt; Java.Lang.Class[]" Usage="constructor.GetParameterTypes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getParameterTypes", "()[Ljava/lang/Class;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getParameterTypes", "()[Ljava/lang/Class;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Class[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#getParameterTypes()" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.getParameterTypes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTypeParameters">
      <MemberSignature Language="C#" Value="public override Java.Lang.Reflect.ITypeVariable[]? GetTypeParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.Reflect.ITypeVariable[] GetTypeParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Reflect.Constructor.GetTypeParameters" />
      <MemberSignature Language="F#" Value="override this.GetTypeParameters : unit -&gt; Java.Lang.Reflect.ITypeVariable[]" Usage="constructor.GetTypeParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Reflect.IGenericDeclaration.GetTypeParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTypeParameters", "()[Ljava/lang/reflect/TypeVariable;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTypeParameters", "()[Ljava/lang/reflect/TypeVariable;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Reflect.ITypeVariable[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>To be added</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#getTypeParameters()" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.getTypeParameters()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsAnnotationPresent">
      <MemberSignature Language="C#" Value="public override bool IsAnnotationPresent (Java.Lang.Class? annotationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsAnnotationPresent(class Java.Lang.Class annotationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Reflect.Constructor.IsAnnotationPresent(Java.Lang.Class)" />
      <MemberSignature Language="F#" Value="override this.IsAnnotationPresent : Java.Lang.Class -&gt; bool" Usage="constructor.IsAnnotationPresent annotationType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Java.Lang.Reflect.IAnnotatedElement.IsAnnotationPresent(Java.Lang.Class)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isAnnotationPresent", "(Ljava/lang/Class;)Z", "", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isAnnotationPresent", "(Ljava/lang/Class;)Z", "", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationType" Type="Java.Lang.Class" />
      </Parameters>
      <Docs>
        <param name="annotationType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSynthetic">
      <MemberSignature Language="C#" Value="public override bool IsSynthetic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynthetic" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Reflect.Constructor.IsSynthetic" />
      <MemberSignature Language="F#" Value="member this.IsSynthetic : bool" Usage="Java.Lang.Reflect.Constructor.IsSynthetic" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Lang.Reflect.IMember.IsSynthetic</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSynthetic", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSynthetic", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <value>To be added.</value>
        <remarks>
          <para>To be added</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#isSynthetic()" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.isSynthetic()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsVarArgs">
      <MemberSignature Language="C#" Value="public override bool IsVarArgs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVarArgs" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Reflect.Constructor.IsVarArgs" />
      <MemberSignature Language="F#" Value="member this.IsVarArgs : bool" Usage="Java.Lang.Reflect.Constructor.IsVarArgs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isVarArgs", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isVarArgs", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <value>To be added.</value>
        <remarks>
          <para>To be added</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#isVarArgs()" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.isVarArgs()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Reflect.Constructor.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Java.Lang.Reflect.Constructor.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public override int Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Modifiers" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Reflect.Constructor.Modifiers" />
      <MemberSignature Language="F#" Value="member this.Modifiers : int" Usage="Java.Lang.Reflect.Constructor.Modifiers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Lang.Reflect.IMember.Modifiers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getModifiers", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getModifiers", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added</summary>
        <value>To be added.</value>
        <remarks>
          <para>To be added</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#getModifiers()" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.getModifiers()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Reflect.Constructor.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Java.Lang.Reflect.Constructor.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Lang.Reflect.IMember.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the name of this constructor, as a string.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Returns the name of this constructor, as a string.  This is
            the binary name of the constructor's declaring class.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#getName()" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.getName()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NewInstance">
      <MemberSignature Language="C#" Value="public Java.Lang.Object NewInstance (params Java.Lang.Object[]? initargs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object NewInstance(class Java.Lang.Object[] initargs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Reflect.Constructor.NewInstance(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="member this.NewInstance : Java.Lang.Object[] -&gt; Java.Lang.Object" Usage="constructor.NewInstance initargs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newInstance", "([Ljava/lang/Object;)Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newInstance", "([Ljava/lang/Object;)Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initargs" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="initargs">array of objects to be passed as arguments to
            the constructor call; values of primitive types are wrapped in
            a wrapper object of the appropriate type (e.g. a <c>float</c>
            in a <c>java.lang.Float Float</c>)</param>
        <summary>Uses the constructor represented by this <c>Constructor</c> object to
            create and initialize a new instance of the constructor's
            declaring class, with the specified initialization parameters.</summary>
        <returns>a new object created by calling the constructor
            this object represents</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#newInstance(java.lang.Object)" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.newInstance(java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Reflect.Constructor.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Java.Lang.Reflect.Constructor.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Java.Lang.Reflect.Constructor.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Java.Lang.Reflect.Constructor.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGenericString">
      <MemberSignature Language="C#" Value="public override string ToGenericString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToGenericString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Java.Lang.Reflect.Constructor.ToGenericString" />
      <MemberSignature Language="F#" Value="override this.ToGenericString : unit -&gt; string" Usage="constructor.ToGenericString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("toGenericString", "()Ljava/lang/String;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("toGenericString", "()Ljava/lang/String;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a string describing this <c>Constructor</c>,
            including type parameters.</summary>
        <returns>a string describing this <c>Constructor</c>,
            include type parameters</returns>
        <remarks>
          <para>Returns a string describing this <c>Constructor</c>,
            including type parameters.  The string is formatted as the
            constructor access modifiers, if any, followed by an
            angle-bracketed comma separated list of the constructor's type
            parameters, if any, followed by the fully-qualified name of the
            declaring class, followed by a parenthesized, comma-separated
            list of the constructor's generic formal parameter types.
            
            If this constructor was declared to take a variable number of
            arguments, instead of denoting the last parameter as
            "<c><i>Type</i>[]</c>", it is denoted as
            "<c><i>Type</i>...</c>".
            
            A space is used to separate access modifiers from one another
            and from the type parameters or return type.  If there are no
            type parameters, the type parameter list is elided; if the type
            parameter list is present, a space separates the list from the
            class name.  If the constructor is declared to throw
            exceptions, the parameter list is followed by a space, followed
            by the word "<c>throws</c>" followed by a
            comma-separated list of the thrown exception types.</para>
          <para>The only possible modifiers for constructors are the access
            modifiers <c>public</c>, <c>protected</c> or
            <c>private</c>.  Only one of these may appear, or none if the
            constructor has default (package) access.</para>
          <para>Added in 1.5.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/java/lang/reflect/Constructor#toGenericString()" title="Reference documentation">Java documentation for <code>java.lang.reflect.Constructor.toGenericString()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
