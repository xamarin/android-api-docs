<Type Name="SystemClock" FullName="Android.OS.SystemClock">
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SystemClock&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class SystemClock sealed : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public sealed class SystemClock : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SystemClock extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.OS.SystemClock" />
  <TypeSignature Language="F#" Value="type SystemClock = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/os/SystemClock", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/os/SystemClock", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Core timekeeping facilities.</summary>
    <remarks>
      <para>Core timekeeping facilities.</para>
      <para>Three different clocks are available, and they should not be confused:
            
            &lt;ul&gt;
                &lt;li&gt;</para>
      <para>
        <c>System#currentTimeMillis System.currentTimeMillis()</c>
                is the standard "wall" clock (time and date) expressing milliseconds
                since the epoch.  The wall clock can be set by the user or the phone
                network (see <c>#setCurrentTimeMillis</c>), so the time may jump
                backwards or forwards unpredictably.  This clock should only be used
                when correspondence with real-world dates and times is important, such
                as in a calendar or alarm clock application.  Interval or elapsed
                time measurements should use a different clock.  If you are using
                System.currentTimeMillis(), consider listening to the
                <c>android.content.Intent#ACTION_TIME_TICK ACTION_TIME_TICK</c>,
                <c>android.content.Intent#ACTION_TIME_CHANGED ACTION_TIME_CHANGED</c>
                and <c>android.content.Intent#ACTION_TIMEZONE_CHANGED
                ACTION_TIMEZONE_CHANGED</c><c>android.content.Intent Intent</c>
                broadcasts to find out when the time changes.
            
                &lt;li&gt;</para>
      <para>
        <c>#uptimeMillis</c> is counted in milliseconds since the
                system was booted.  This clock stops when the system enters deep
                sleep (CPU off, display dark, device waiting for external input),
                but is not affected by clock scaling, idle, or other power saving
                mechanisms.  This is the basis for most interval timing
                such as <c>Thread#sleep(long) Thread.sleep(millls)</c>,
                <c>Object#wait(long) Object.wait(millis)</c>, and
                <c>System#nanoTime System.nanoTime()</c>.  This clock is guaranteed
                to be monotonic, and is suitable for interval timing when the
                interval does not span device sleep.  Most methods that accept a
                timestamp value currently expect the <c>#uptimeMillis</c> clock.
            
                &lt;li&gt;</para>
      <para>
        <c>#elapsedRealtime</c> and <c>#elapsedRealtimeNanos</c>
                return the time since the system was booted, and include deep sleep.
                This clock is guaranteed to be monotonic, and continues to tick even
                when the CPU is in power saving modes, so is the recommend basis
                for general purpose interval timing.
            
            &lt;/ul&gt;
            
            There are several mechanisms for controlling the timing of events:
            
            &lt;ul&gt;
                &lt;li&gt;</para>
      <para>Standard functions like <c>Thread#sleep(long)
                Thread.sleep(millis)</c> and <c>Object#wait(long) Object.wait(millis)</c>
                are always available.  These functions use the <c>#uptimeMillis</c>
                clock; if the device enters sleep, the remainder of the time will be
                postponed until the device wakes up.  These synchronous functions may
                be interrupted with <c>Thread#interrupt Thread.interrupt()</c>, and
                you must handle <c>InterruptedException</c>.
            
                &lt;li&gt;</para>
      <para>
        <c>#sleep SystemClock.sleep(millis)</c> is a utility function
                very similar to <c>Thread#sleep(long) Thread.sleep(millis)</c>, but it
                ignores <c>InterruptedException</c>.  Use this function for delays if
                you do not use <c>Thread#interrupt Thread.interrupt()</c>, as it will
                preserve the interrupted state of the thread.
            
                &lt;li&gt;</para>
      <para>The <c>android.os.Handler</c> class can schedule asynchronous
                callbacks at an absolute or relative time.  Handler objects also use the
                <c>#uptimeMillis</c> clock, and require an <c>android.os.Looper
                event loop</c> (normally present in any GUI application).
            
                &lt;li&gt;</para>
      <para>The <c>android.app.AlarmManager</c> can trigger one-time or
                recurring events which occur even when the device is in deep sleep
                or your application is not running.  Events may be scheduled with your
                choice of <c>java.lang.System#currentTimeMillis</c> (RTC) or
                <c>#elapsedRealtime</c> (ELAPSED_REALTIME), and cause an
                <c>android.content.Intent</c> broadcast when they occur.
            &lt;/ul&gt;</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/os/SystemClock" title="Reference documentation">Java documentation for <code>android.os.SystemClock</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="CurrentGnssTimeClock">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CurrentGnssTimeClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Time::Clock ^ CurrentGnssTimeClock();" />
      <MemberSignature Language="C#" Value="public static Java.Time.Clock CurrentGnssTimeClock ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Time.Clock CurrentGnssTimeClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.SystemClock.CurrentGnssTimeClock" />
      <MemberSignature Language="F#" Value="static member CurrentGnssTimeClock : unit -&gt; Java.Time.Clock" Usage="Android.OS.SystemClock.CurrentGnssTimeClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("currentGnssTimeClock", "()Ljava/time/Clock;", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("currentGnssTimeClock", "()Ljava/time/Clock;", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>Clock</c> that starts at January 1, 1970 00:00:00.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a <c>Clock</c> that starts at January 1, 1970 00:00:00.0 UTC,
            synchronized using the device's location provider.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/SystemClock#currentGnssTimeClock()" title="Reference documentation">Java documentation for <code>android.os.SystemClock.currentGnssTimeClock()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentNetworkTimeClock">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CurrentNetworkTimeClock () As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Java::Time::Clock ^ CurrentNetworkTimeClock();" />
      <MemberSignature Language="C#" Value="public static Java.Time.Clock CurrentNetworkTimeClock ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.Time.Clock CurrentNetworkTimeClock() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.SystemClock.CurrentNetworkTimeClock" />
      <MemberSignature Language="F#" Value="static member CurrentNetworkTimeClock : unit -&gt; Java.Time.Clock" Usage="Android.OS.SystemClock.CurrentNetworkTimeClock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("currentNetworkTimeClock", "()Ljava/time/Clock;", "", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("currentNetworkTimeClock", "()Ljava/time/Clock;", "", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Time.Clock</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns a <c>Clock</c> that starts at January 1, 1970 00:00:00.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns a <c>Clock</c> that starts at January 1, 1970 00:00:00.0 UTC,
            synchronized using a remote network source outside the device.</para>
          <para>While the time returned by <c>System#currentTimeMillis()</c> can be
            adjusted by the user, the time returned by this method cannot be adjusted
            by the user.</para>
          <para>This performs no blocking network operations and returns values based on
            a recent successful synchronization event; it will either return a valid
            time or throw.</para>
          <para>Note that synchronization may occur using an insecure network protocol,
            so the returned time should not be used for security purposes.
            The device may resynchronize with the same or different network source
            at any time. Due to network delays, variations between servers, or local
            (client side) clock drift, the accuracy of the returned times cannot be
            guaranteed. In extreme cases, consecutive calls to <c>Clock#millis()</c> on the returned <c>Clock</c>could return times that are
            out of order.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/SystemClock#currentNetworkTimeClock()" title="Reference documentation">Java documentation for <code>android.os.SystemClock.currentNetworkTimeClock()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentThreadTimeMillis">
      <MemberSignature Language="VB.NET" Value="Public Shared Function CurrentThreadTimeMillis () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long CurrentThreadTimeMillis();" />
      <MemberSignature Language="C#" Value="public static long CurrentThreadTimeMillis ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 CurrentThreadTimeMillis() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.SystemClock.CurrentThreadTimeMillis" />
      <MemberSignature Language="F#" Value="static member CurrentThreadTimeMillis : unit -&gt; int64" Usage="Android.OS.SystemClock.CurrentThreadTimeMillis " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("currentThreadTimeMillis", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("currentThreadTimeMillis", "()J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns milliseconds running in the current thread.</summary>
        <returns>elapsed milliseconds in the thread</returns>
        <remarks>
          <para>Returns milliseconds running in the current thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/SystemClock#currentThreadTimeMillis()" title="Reference documentation">Java documentation for <code>android.os.SystemClock.currentThreadTimeMillis()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedRealtime">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ElapsedRealtime () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ElapsedRealtime();" />
      <MemberSignature Language="C#" Value="public static long ElapsedRealtime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ElapsedRealtime() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.SystemClock.ElapsedRealtime" />
      <MemberSignature Language="F#" Value="static member ElapsedRealtime : unit -&gt; int64" Usage="Android.OS.SystemClock.ElapsedRealtime " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("elapsedRealtime", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("elapsedRealtime", "()J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns milliseconds since boot, including time spent in sleep.</summary>
        <returns>elapsed milliseconds since boot.</returns>
        <remarks>
          <para>Returns milliseconds since boot, including time spent in sleep.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/SystemClock#elapsedRealtime()" title="Reference documentation">Java documentation for <code>android.os.SystemClock.elapsedRealtime()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ElapsedRealtimeNanos">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ElapsedRealtimeNanos () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ElapsedRealtimeNanos();" />
      <MemberSignature Language="C#" Value="public static long ElapsedRealtimeNanos ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ElapsedRealtimeNanos() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.SystemClock.ElapsedRealtimeNanos" />
      <MemberSignature Language="F#" Value="static member ElapsedRealtimeNanos : unit -&gt; int64" Usage="Android.OS.SystemClock.ElapsedRealtimeNanos " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("elapsedRealtimeNanos", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("elapsedRealtimeNanos", "()J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns nanoseconds since boot, including time spent in sleep.</summary>
        <returns>elapsed nanoseconds since boot.</returns>
        <remarks>
          <para>Returns nanoseconds since boot, including time spent in sleep.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/SystemClock#elapsedRealtimeNanos()" title="Reference documentation">Java documentation for <code>android.os.SystemClock.elapsedRealtimeNanos()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.OS.SystemClock.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.OS.SystemClock.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCurrentTimeMillis">
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetCurrentTimeMillis (millis As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetCurrentTimeMillis(long millis);" />
      <MemberSignature Language="C#" Value="public static bool SetCurrentTimeMillis (long millis);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetCurrentTimeMillis(int64 millis) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.SystemClock.SetCurrentTimeMillis(System.Int64)" />
      <MemberSignature Language="F#" Value="static member SetCurrentTimeMillis : int64 -&gt; bool" Usage="Android.OS.SystemClock.SetCurrentTimeMillis millis" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCurrentTimeMillis", "(J)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCurrentTimeMillis", "(J)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="millis" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="millis">To be added.</param>
        <summary>Sets the current wall time, in milliseconds.</summary>
        <returns>if the clock was successfully set to the specified time.</returns>
        <remarks>
          <para>Sets the current wall time, in milliseconds.  Requires the calling
            process to have appropriate permissions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/SystemClock#setCurrentTimeMillis(long)" title="Reference documentation">Java documentation for <code>android.os.SystemClock.setCurrentTimeMillis(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Sleep">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sleep (ms As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sleep(long ms);" />
      <MemberSignature Language="C#" Value="public static void Sleep (long ms);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sleep(int64 ms) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.SystemClock.Sleep(System.Int64)" />
      <MemberSignature Language="F#" Value="static member Sleep : int64 -&gt; unit" Usage="Android.OS.SystemClock.Sleep ms" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("sleep", "(J)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("sleep", "(J)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ms" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="ms">to sleep before returning, in milliseconds of uptime.</param>
        <summary>Waits a given number of milliseconds (of uptimeMillis) before returning.</summary>
        <remarks>
          <para>Waits a given number of milliseconds (of uptimeMillis) before returning.
            Similar to <c>java.lang.Thread#sleep(long)</c>, but does not throw
            <c>InterruptedException</c>; <c>Thread#interrupt()</c> events are
            deferred until the next interruptible operation.  Does not return until
            at least the specified number of milliseconds has elapsed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/SystemClock#sleep(long)" title="Reference documentation">Java documentation for <code>android.os.SystemClock.sleep(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.OS.SystemClock.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.OS.SystemClock.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.OS.SystemClock.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.OS.SystemClock.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UptimeMillis">
      <MemberSignature Language="VB.NET" Value="Public Shared Function UptimeMillis () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long UptimeMillis();" />
      <MemberSignature Language="C#" Value="public static long UptimeMillis ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 UptimeMillis() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.SystemClock.UptimeMillis" />
      <MemberSignature Language="F#" Value="static member UptimeMillis : unit -&gt; int64" Usage="Android.OS.SystemClock.UptimeMillis " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("uptimeMillis", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("uptimeMillis", "()J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns milliseconds since boot, not counting time spent in deep sleep.</summary>
        <returns>milliseconds of non-sleep uptime since boot.</returns>
        <remarks>
          <para>Returns milliseconds since boot, not counting time spent in deep sleep.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/SystemClock#uptimeMillis()" title="Reference documentation">Java documentation for <code>android.os.SystemClock.uptimeMillis()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
