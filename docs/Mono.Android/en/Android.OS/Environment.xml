<Type Name="Environment" FullName="Android.OS.Environment">
  <TypeSignature Language="C#" Value="public class Environment : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Environment extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.OS.Environment" />
  <TypeSignature Language="F#" Value="type Environment = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/os/Environment", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Provides access to environment variables.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/os/Environment" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Environment ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Environment (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.OS.Environment : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.OS.Environment" Usage="new Android.OS.Environment (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataDirectory">
      <MemberSignature Language="C#" Value="public static Java.IO.File DataDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.IO.File DataDirectory" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DataDirectory" />
      <MemberSignature Language="F#" Value="member this.DataDirectory : Java.IO.File" Usage="Android.OS.Environment.DataDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDataDirectory", "()Ljava/io/File;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the user data directory.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryAlarms">
      <MemberSignature Language="C#" Value="public static string DirectoryAlarms { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryAlarms" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryAlarms" />
      <MemberSignature Language="F#" Value="member this.DirectoryAlarms : string with get, set" Usage="Android.OS.Environment.DirectoryAlarms" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_ALARMS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place any audio files that should be
            in the list of alarms that the user can select (not as regular
            music).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryAudiobooks">
      <MemberSignature Language="C#" Value="public static string DirectoryAudiobooks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryAudiobooks" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryAudiobooks" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_AUDIOBOOKS", ApiSince=29)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place any audio files that should be
            in the list of audiobooks that the user can select (not as regular
            music).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryDcim">
      <MemberSignature Language="C#" Value="public static string DirectoryDcim { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryDcim" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryDcim" />
      <MemberSignature Language="F#" Value="member this.DirectoryDcim : string with get, set" Usage="Android.OS.Environment.DirectoryDcim" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_DCIM")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The traditional location for pictures and videos when mounting the
            device as a camera.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryDocuments">
      <MemberSignature Language="C#" Value="public static string DirectoryDocuments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryDocuments" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryDocuments" />
      <MemberSignature Language="F#" Value="member this.DirectoryDocuments : string with get, set" Usage="Android.OS.Environment.DirectoryDocuments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_DOCUMENTS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place documents that have been created by
            the user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryDownloads">
      <MemberSignature Language="C#" Value="public static string DirectoryDownloads { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryDownloads" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryDownloads" />
      <MemberSignature Language="F#" Value="member this.DirectoryDownloads : string with get, set" Usage="Android.OS.Environment.DirectoryDownloads" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_DOWNLOADS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place files that have been downloaded by
            the user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryMovies">
      <MemberSignature Language="C#" Value="public static string DirectoryMovies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryMovies" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryMovies" />
      <MemberSignature Language="F#" Value="member this.DirectoryMovies : string with get, set" Usage="Android.OS.Environment.DirectoryMovies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_MOVIES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place movies that are available to
            the user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryMusic">
      <MemberSignature Language="C#" Value="public static string DirectoryMusic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryMusic" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryMusic" />
      <MemberSignature Language="F#" Value="member this.DirectoryMusic : string with get, set" Usage="Android.OS.Environment.DirectoryMusic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_MUSIC")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place any audio files that should be
            in the regular list of music for the user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryNotifications">
      <MemberSignature Language="C#" Value="public static string DirectoryNotifications { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryNotifications" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryNotifications" />
      <MemberSignature Language="F#" Value="member this.DirectoryNotifications : string with get, set" Usage="Android.OS.Environment.DirectoryNotifications" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_NOTIFICATIONS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place any audio files that should be
            in the list of notifications that the user can select (not as regular
            music).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryPictures">
      <MemberSignature Language="C#" Value="public static string DirectoryPictures { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryPictures" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryPictures" />
      <MemberSignature Language="F#" Value="member this.DirectoryPictures : string with get, set" Usage="Android.OS.Environment.DirectoryPictures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_PICTURES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place pictures that are available to
            the user.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryPodcasts">
      <MemberSignature Language="C#" Value="public static string DirectoryPodcasts { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryPodcasts" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryPodcasts" />
      <MemberSignature Language="F#" Value="member this.DirectoryPodcasts : string with get, set" Usage="Android.OS.Environment.DirectoryPodcasts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_PODCASTS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place any audio files that should be
            in the list of podcasts that the user can select (not as regular
            music).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryRecordings">
      <MemberSignature Language="C#" Value="public static string DirectoryRecordings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryRecordings" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryRecordings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_RECORDINGS", ApiSince=31)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place any audio files that should be
            in the list of voice recordings recorded by voice recorder apps that
            the user can select (not as regular music).</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryRingtones">
      <MemberSignature Language="C#" Value="public static string DirectoryRingtones { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryRingtones" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryRingtones" />
      <MemberSignature Language="F#" Value="member this.DirectoryRingtones : string with get, set" Usage="Android.OS.Environment.DirectoryRingtones" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_RINGTONES")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place any audio files that should be
            in the list of ringtones that the user can select (not as regular
            music).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DirectoryScreenshots">
      <MemberSignature Language="C#" Value="public static string DirectoryScreenshots { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DirectoryScreenshots" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DirectoryScreenshots" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DIRECTORY_SCREENSHOTS", ApiSince=29)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Standard directory in which to place screenshots that have been taken by
            the user.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DownloadCacheDirectory">
      <MemberSignature Language="C#" Value="public static Java.IO.File DownloadCacheDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.IO.File DownloadCacheDirectory" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.DownloadCacheDirectory" />
      <MemberSignature Language="F#" Value="member this.DownloadCacheDirectory : Java.IO.File" Usage="Android.OS.Environment.DownloadCacheDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDownloadCacheDirectory", "()Ljava/io/File;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the download/cache content directory.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExternalStorageDirectory">
      <MemberSignature Language="C#" Value="public static Java.IO.File ExternalStorageDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.IO.File ExternalStorageDirectory" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.ExternalStorageDirectory" />
      <MemberSignature Language="F#" Value="member this.ExternalStorageDirectory : Java.IO.File" Usage="Android.OS.Environment.ExternalStorageDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getExternalStorageDirectory", "()Ljava/io/File;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the primary external storage directory.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.OS.Environment.ExternalStorageState" />
        <altmember cref="P:Android.OS.Environment.IsExternalStorageRemovable" />
      </Docs>
    </Member>
    <Member MemberName="ExternalStorageState">
      <MemberSignature Language="C#" Value="public static string ExternalStorageState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string ExternalStorageState" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.ExternalStorageState" />
      <MemberSignature Language="F#" Value="member this.ExternalStorageState : string" Usage="Android.OS.Environment.ExternalStorageState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getExternalStorageState", "()Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current state of the primary shared/external storage media.</summary>
        <value>one of <c>#MEDIA_UNKNOWN</c>, <c>#MEDIA_REMOVED</c>,
                    <c>#MEDIA_UNMOUNTED</c>, <c>#MEDIA_CHECKING</c>,
                    <c>#MEDIA_NOFS</c>, <c>#MEDIA_MOUNTED</c>,
                    <c>#MEDIA_MOUNTED_READ_ONLY</c>, <c>#MEDIA_SHARED</c>,
                    <c>#MEDIA_BAD_REMOVAL</c>, or <c>#MEDIA_UNMOUNTABLE</c>.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.OS.Environment.ExternalStorageDirectory" />
      </Docs>
    </Member>
    <Member MemberName="GetExternalStoragePublicDirectory">
      <MemberSignature Language="C#" Value="public static Java.IO.File GetExternalStoragePublicDirectory (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Java.IO.File GetExternalStoragePublicDirectory(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.GetExternalStoragePublicDirectory(System.String)" />
      <MemberSignature Language="F#" Value="static member GetExternalStoragePublicDirectory : string -&gt; Java.IO.File" Usage="Android.OS.Environment.GetExternalStoragePublicDirectory type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getExternalStoragePublicDirectory", "(Ljava/lang/String;)Ljava/io/File;", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">The type of storage directory to return.  Should be one of
 <see cref="P:Android.OS.Environment.DirectoryMusic" />, <see cref="P:Android.OS.Environment.DirectoryPodcasts" />,
 <see cref="P:Android.OS.Environment.DirectoryRingtones" />, <see cref="P:Android.OS.Environment.DirectoryAlarms" />,
 <see cref="P:Android.OS.Environment.DirectoryNotifications" />, <see cref="P:Android.OS.Environment.DirectoryPictures" />,
 <see cref="P:Android.OS.Environment.DirectoryMovies" />, <see cref="P:Android.OS.Environment.DirectoryDownloads" />, or
 <see cref="P:Android.OS.Environment.DirectoryDcim" />.  May not be null.</param>
        <summary>Get a top-level public external storage directory for placing files of
 a particular type.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GetExternalStorageState">
      <MemberSignature Language="C#" Value="public static string GetExternalStorageState (Java.IO.File path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetExternalStorageState(class Java.IO.File path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      <MemberSignature Language="F#" Value="static member GetExternalStorageState : Java.IO.File -&gt; string" Usage="Android.OS.Environment.GetExternalStorageState path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getExternalStorageState", "(Ljava/io/File;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Returns the current state of the primary shared/external storage media.</summary>
        <returns>one of <c>#MEDIA_UNKNOWN</c>, <c>#MEDIA_REMOVED</c>,
                    <c>#MEDIA_UNMOUNTED</c>, <c>#MEDIA_CHECKING</c>,
                    <c>#MEDIA_NOFS</c>, <c>#MEDIA_MOUNTED</c>,
                    <c>#MEDIA_MOUNTED_READ_ONLY</c>, <c>#MEDIA_SHARED</c>,
                    <c>#MEDIA_BAD_REMOVAL</c>, or <c>#MEDIA_UNMOUNTABLE</c>.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStorageState">
      <MemberSignature Language="C#" Value="public static string GetStorageState (Java.IO.File path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetStorageState(class Java.IO.File path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.GetStorageState(Java.IO.File)" />
      <MemberSignature Language="F#" Value="static member GetStorageState : Java.IO.File -&gt; string" Usage="Android.OS.Environment.GetStorageState path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getStorageState", "(Ljava/io/File;)Ljava/lang/String;", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>
        </summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeIsExternalStorageEmulated">
      <MemberSignature Language="C#" Value="public static bool InvokeIsExternalStorageEmulated (Java.IO.File path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InvokeIsExternalStorageEmulated(class Java.IO.File path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.InvokeIsExternalStorageEmulated(Java.IO.File)" />
      <MemberSignature Language="F#" Value="static member InvokeIsExternalStorageEmulated : Java.IO.File -&gt; bool" Usage="Android.OS.Environment.InvokeIsExternalStorageEmulated path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isExternalStorageEmulated", "(Ljava/io/File;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Returns whether the primary shared/external storage media is emulated.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the path is not a valid storage
             device.
</exception>
      </Docs>
    </Member>
    <Member MemberName="InvokeIsExternalStorageLegacy">
      <MemberSignature Language="C#" Value="public static bool InvokeIsExternalStorageLegacy (Java.IO.File path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InvokeIsExternalStorageLegacy(class Java.IO.File path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.InvokeIsExternalStorageLegacy(Java.IO.File)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isExternalStorageLegacy", "(Ljava/io/File;)Z", "", ApiSince=29)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Returns whether the shared/external storage media is a
            legacy view that includes files not owned by the app.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeIsExternalStorageManager">
      <MemberSignature Language="C#" Value="public static bool InvokeIsExternalStorageManager (Java.IO.File path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InvokeIsExternalStorageManager(class Java.IO.File path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.InvokeIsExternalStorageManager(Java.IO.File)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isExternalStorageManager", "(Ljava/io/File;)Z", "", ApiSince=30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Returns whether the calling app has All Files Access on the primary shared/external storage
            media.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeIsExternalStorageRemovable">
      <MemberSignature Language="C#" Value="public static bool InvokeIsExternalStorageRemovable (Java.IO.File path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool InvokeIsExternalStorageRemovable(class Java.IO.File path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Environment.InvokeIsExternalStorageRemovable(Java.IO.File)" />
      <MemberSignature Language="F#" Value="static member InvokeIsExternalStorageRemovable : Java.IO.File -&gt; bool" Usage="Android.OS.Environment.InvokeIsExternalStorageRemovable path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isExternalStorageRemovable", "(Ljava/io/File;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Returns whether the primary shared/external storage media is physically
            removable.</summary>
        <returns>true if the storage device can be removed (such as an SD card),
                    or false if the storage device is built in and cannot be
                    physically removed.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the path is not a valid storage
             device.
</exception>
      </Docs>
    </Member>
    <Member MemberName="IsExternalStorageEmulated">
      <MemberSignature Language="C#" Value="public static bool IsExternalStorageEmulated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsExternalStorageEmulated" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.IsExternalStorageEmulated" />
      <MemberSignature Language="F#" Value="member this.IsExternalStorageEmulated : bool" Usage="Android.OS.Environment.IsExternalStorageEmulated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isExternalStorageEmulated", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the primary shared/external storage media is emulated.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
        <altmember cref="M:Android.App.Admin.DevicePolicyManager.SetStorageEncryption(Android.Content.ComponentName, System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="IsExternalStorageLegacy">
      <MemberSignature Language="C#" Value="public static bool IsExternalStorageLegacy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsExternalStorageLegacy" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.IsExternalStorageLegacy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isExternalStorageLegacy", "()Z", "", ApiSince=29)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the shared/external storage media is a
            legacy view that includes files not owned by the app.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExternalStorageManager">
      <MemberSignature Language="C#" Value="public static bool IsExternalStorageManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsExternalStorageManager" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.IsExternalStorageManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isExternalStorageManager", "()Z", "", ApiSince=30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the calling app has All Files Access on the primary shared/external storage
            media.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExternalStorageRemovable">
      <MemberSignature Language="C#" Value="public static bool IsExternalStorageRemovable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsExternalStorageRemovable" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.IsExternalStorageRemovable" />
      <MemberSignature Language="F#" Value="member this.IsExternalStorageRemovable : bool" Usage="Android.OS.Environment.IsExternalStorageRemovable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isExternalStorageRemovable", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the primary shared/external storage media is physically
            removable.</summary>
        <value>true if the storage device can be removed (such as an SD card),
                    or false if the storage device is built in and cannot be
                    physically removed.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.OS.Environment.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaBadRemoval">
      <MemberSignature Language="C#" Value="public const string MediaBadRemoval;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaBadRemoval" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaBadRemoval" />
      <MemberSignature Language="F#" Value="val mutable MediaBadRemoval : string" Usage="Android.OS.Environment.MediaBadRemoval" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_BAD_REMOVAL")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media was removed before it was unmounted.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaChecking">
      <MemberSignature Language="C#" Value="public const string MediaChecking;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaChecking" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaChecking" />
      <MemberSignature Language="F#" Value="val mutable MediaChecking : string" Usage="Android.OS.Environment.MediaChecking" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_CHECKING")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present and being disk-checked.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaEjecting">
      <MemberSignature Language="C#" Value="public const string MediaEjecting;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaEjecting" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaEjecting" />
      <MemberSignature Language="F#" Value="val mutable MediaEjecting : string" Usage="Android.OS.Environment.MediaEjecting" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_EJECTING", ApiSince=23)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is in the process of being ejected.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaMounted">
      <MemberSignature Language="C#" Value="public const string MediaMounted;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaMounted" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaMounted" />
      <MemberSignature Language="F#" Value="val mutable MediaMounted : string" Usage="Android.OS.Environment.MediaMounted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_MOUNTED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present and mounted at its mount point with
            read/write access.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaMountedReadOnly">
      <MemberSignature Language="C#" Value="public const string MediaMountedReadOnly;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaMountedReadOnly" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaMountedReadOnly" />
      <MemberSignature Language="F#" Value="val mutable MediaMountedReadOnly : string" Usage="Android.OS.Environment.MediaMountedReadOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_MOUNTED_READ_ONLY")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present and mounted at its mount point with
            read-only access.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaNofs">
      <MemberSignature Language="C#" Value="public const string MediaNofs;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaNofs" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaNofs" />
      <MemberSignature Language="F#" Value="val mutable MediaNofs : string" Usage="Android.OS.Environment.MediaNofs" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_NOFS")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present but is blank or is using an
            unsupported filesystem.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaRemoved">
      <MemberSignature Language="C#" Value="public const string MediaRemoved;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaRemoved" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaRemoved" />
      <MemberSignature Language="F#" Value="val mutable MediaRemoved : string" Usage="Android.OS.Environment.MediaRemoved" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_REMOVED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is not present.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaShared">
      <MemberSignature Language="C#" Value="public const string MediaShared;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaShared" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaShared" />
      <MemberSignature Language="F#" Value="val mutable MediaShared : string" Usage="Android.OS.Environment.MediaShared" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_SHARED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present not mounted, and shared via USB
            mass storage.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaUnknown">
      <MemberSignature Language="C#" Value="public const string MediaUnknown;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaUnknown" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaUnknown" />
      <MemberSignature Language="F#" Value="val mutable MediaUnknown : string" Usage="Android.OS.Environment.MediaUnknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_UNKNOWN")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Unknown storage state, such as when a path isn't backed by known storage
            media.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaUnmountable">
      <MemberSignature Language="C#" Value="public const string MediaUnmountable;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaUnmountable" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaUnmountable" />
      <MemberSignature Language="F#" Value="val mutable MediaUnmountable : string" Usage="Android.OS.Environment.MediaUnmountable" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_UNMOUNTABLE")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present but cannot be mounted.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="MediaUnmounted">
      <MemberSignature Language="C#" Value="public const string MediaUnmounted;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string MediaUnmounted" />
      <MemberSignature Language="DocId" Value="F:Android.OS.Environment.MediaUnmounted" />
      <MemberSignature Language="F#" Value="val mutable MediaUnmounted : string" Usage="Android.OS.Environment.MediaUnmounted" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("MEDIA_UNMOUNTED")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Storage state if the media is present but not mounted.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Environment.GetExternalStorageState(Java.IO.File)" />
      </Docs>
    </Member>
    <Member MemberName="RootDirectory">
      <MemberSignature Language="C#" Value="public static Java.IO.File RootDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.IO.File RootDirectory" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.RootDirectory" />
      <MemberSignature Language="F#" Value="member this.RootDirectory : Java.IO.File" Usage="Android.OS.Environment.RootDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getRootDirectory", "()Ljava/io/File;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return root of the "system" partition holding the core Android OS.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StorageDirectory">
      <MemberSignature Language="C#" Value="public static Java.IO.File StorageDirectory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.IO.File StorageDirectory" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.StorageDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStorageDirectory", "()Ljava/io/File;", "", ApiSince=30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.File</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return root directory where all external storage devices will be mounted.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.OS.Environment.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Environment.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.OS.Environment.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
