<Type Name="VibratorManager" FullName="Android.OS.VibratorManager">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class VibratorManager&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class VibratorManager abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class VibratorManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit VibratorManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.OS.VibratorManager" />
  <TypeSignature Language="F#" Value="type VibratorManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/os/VibratorManager", ApiSince=31, DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/os/VibratorManager", ApiSince=31, DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Provides access to all vibrators from the device, as well as the ability to run them
            in a synchronized fashion.</summary>
    <remarks>
      <para>Provides access to all vibrators from the device, as well as the ability to run them
            in a synchronized fashion.</para>
      <para>If your process exits, any vibration you started will stop.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/os/VibratorManager" title="Reference documentation">Java documentation for <code>android.os.VibratorManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; VibratorManager(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected VibratorManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.VibratorManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.OS.VibratorManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.OS.VibratorManager" Usage="new Android.OS.VibratorManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Cancel();" />
      <MemberSignature Language="C#" Value="public abstract void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.VibratorManager.Cancel" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit" Usage="vibratorManager.Cancel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancel", "()V", "GetCancelHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cancel", "()V", "GetCancelHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.VIBRATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.VIBRATE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Turn all the vibrators off.</summary>
        <remarks>
          <para>Turn all the vibrators off.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/VibratorManager#cancel()" title="Reference documentation">Java documentation for <code>android.os.VibratorManager.cancel()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultVibrator">
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultVibrator As Vibrator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Android::OS::Vibrator ^ DefaultVibrator { Android::OS::Vibrator ^ get(); };" />
      <MemberSignature Language="C#" Value="public abstract Android.OS.Vibrator DefaultVibrator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.OS.Vibrator DefaultVibrator" />
      <MemberSignature Language="DocId" Value="P:Android.OS.VibratorManager.DefaultVibrator" />
      <MemberSignature Language="F#" Value="member this.DefaultVibrator : Android.OS.Vibrator" Usage="Android.OS.VibratorManager.DefaultVibrator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDefaultVibrator", "()Landroid/os/Vibrator;", "GetGetDefaultVibratorHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDefaultVibrator", "()Landroid/os/Vibrator;", "GetGetDefaultVibratorHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Vibrator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVibrator">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetVibrator (vibratorId As Integer) As Vibrator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract Android::OS::Vibrator ^ GetVibrator(int vibratorId);" />
      <MemberSignature Language="C#" Value="public abstract Android.OS.Vibrator GetVibrator (int vibratorId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.Vibrator GetVibrator(int32 vibratorId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.VibratorManager.GetVibrator(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetVibrator : int -&gt; Android.OS.Vibrator" Usage="vibratorManager.GetVibrator vibratorId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getVibrator", "(I)Landroid/os/Vibrator;", "GetGetVibrator_IHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getVibrator", "(I)Landroid/os/Vibrator;", "GetGetVibrator_IHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.Vibrator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vibratorId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="vibratorId">The id of the vibrator to be retrieved.</param>
        <summary>Retrieve a single vibrator by id.</summary>
        <returns>The vibrator with given <c>vibratorId</c>, never null.</returns>
        <remarks>
          <para>Retrieve a single vibrator by id.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/VibratorManager#getVibrator(int)" title="Reference documentation">Java documentation for <code>android.os.VibratorManager.getVibrator(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVibratorIds">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetVibratorIds () As Integer()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;int&gt; ^ GetVibratorIds();" />
      <MemberSignature Language="C#" Value="public abstract int[] GetVibratorIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32[] GetVibratorIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.VibratorManager.GetVibratorIds" />
      <MemberSignature Language="F#" Value="abstract member GetVibratorIds : unit -&gt; int[]" Usage="vibratorManager.GetVibratorIds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getVibratorIds", "()[I", "GetGetVibratorIdsHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getVibratorIds", "()[I", "GetGetVibratorIdsHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>List all available vibrator ids, returning a possible empty list.</summary>
        <returns>An array containing the ids of the vibrators available on the device.</returns>
        <remarks>
          <para>List all available vibrator ids, returning a possible empty list.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/VibratorManager#getVibratorIds()" title="Reference documentation">Java documentation for <code>android.os.VibratorManager.getVibratorIds()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.OS.VibratorManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.OS.VibratorManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.OS.VibratorManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.OS.VibratorManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.OS.VibratorManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.OS.VibratorManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Vibrate">
      <MemberSignature Language="VB.NET" Value="Public Sub Vibrate (effect As CombinedVibration)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Vibrate(Android::OS::CombinedVibration ^ effect);" />
      <MemberSignature Language="C#" Value="public void Vibrate (Android.OS.CombinedVibration effect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Vibrate(class Android.OS.CombinedVibration effect) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.VibratorManager.Vibrate(Android.OS.CombinedVibration)" />
      <MemberSignature Language="F#" Value="member this.Vibrate : Android.OS.CombinedVibration -&gt; unit" Usage="vibratorManager.Vibrate effect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("vibrate", "(Landroid/os/CombinedVibration;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("vibrate", "(Landroid/os/CombinedVibration;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.VIBRATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.VIBRATE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effect" Type="Android.OS.CombinedVibration" />
      </Parameters>
      <Docs>
        <param name="effect">a combination of effects to be performed by one or more vibrators.</param>
        <summary>Vibrate with a given combination of effects.</summary>
        <remarks>
          <para>Vibrate with a given combination of effects.</para>
          <para>Pass in a <c>CombinedVibration</c> representing a combination of <c>VibrationEffect VibrationEffects</c> to be played on one or more vibrators.</para>
          <para>The app should be in foreground for the vibration to happen.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/VibratorManager#vibrate(android.os.CombinedVibration)" title="Reference documentation">Java documentation for <code>android.os.VibratorManager.vibrate(android.os.CombinedVibration)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Vibrate">
      <MemberSignature Language="VB.NET" Value="Public Sub Vibrate (effect As CombinedVibration, attributes As VibrationAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Vibrate(Android::OS::CombinedVibration ^ effect, Android::OS::VibrationAttributes ^ attributes);" />
      <MemberSignature Language="C#" Value="public void Vibrate (Android.OS.CombinedVibration effect, Android.OS.VibrationAttributes? attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Vibrate(class Android.OS.CombinedVibration effect, class Android.OS.VibrationAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.VibratorManager.Vibrate(Android.OS.CombinedVibration,Android.OS.VibrationAttributes)" />
      <MemberSignature Language="F#" Value="member this.Vibrate : Android.OS.CombinedVibration * Android.OS.VibrationAttributes -&gt; unit" Usage="vibratorManager.Vibrate (effect, attributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("vibrate", "(Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)V", "", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("vibrate", "(Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)V", "", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.VIBRATE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.VIBRATE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android31.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android31.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="effect" Type="Android.OS.CombinedVibration" />
        <Parameter Name="attributes" Type="Android.OS.VibrationAttributes">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="effect">a combination of effects to be performed by one or more vibrators.</param>
        <param name="attributes">
          <c>VibrationAttributes</c> corresponding to the vibration. For example,
                              specify <c>VibrationAttributes#USAGE_ALARM</c> for alarm vibrations or
                              <c>VibrationAttributes#USAGE_RINGTONE</c> for vibrations associated with
                              incoming calls.</param>
        <summary>Vibrate with a given combination of effects.</summary>
        <remarks>
          <para>Vibrate with a given combination of effects.</para>
          <para>Pass in a <c>CombinedVibration</c> representing a combination of <c>VibrationEffect</c> to be played on one or more vibrators.</para>
          <para>The app should be in foreground for the vibration to happen. Background apps should
            specify a ringtone, notification or alarm usage in order to vibrate.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/VibratorManager#vibrate(android.os.CombinedVibration,%20android.os.VibrationAttributes)" title="Reference documentation">Java documentation for <code>android.os.VibratorManager.vibrate(android.os.CombinedVibration, android.os.VibrationAttributes)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
