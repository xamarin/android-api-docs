<Type Name="Debug" FullName="Android.OS.Debug">
  <TypeSignature Language="C#" Value="public sealed class Debug : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Debug extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/os/Debug", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Provides various debugging methods for Android applications, including
 tracing and allocation counts.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Provides various debugging methods for Android applications, including
 tracing and allocation counts.
 </para>
      <para tool="javadoc-to-mdoc">
        <i>Logging Trace Files</i>
      </para>
      <para tool="javadoc-to-mdoc">Debug can create log files that give details about an application, such as
 a call stack and start/stop times for any running methods. See <format type="text/html"><a href="http://developer.android.com/reference/../guide/developing/tools/traceview.html">Traceview: A Graphical Log Viewer</a></format> for
 information about reading trace files. To start logging trace files, call one
 of the startMethodTracing() methods. To stop tracing, call
 <c><see cref="M:Android.OS.Debug.StopMethodTracing" /></c>.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/os/Debug.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="BinderDeathObjectCount">
      <MemberSignature Language="C#" Value="public static int BinderDeathObjectCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BinderDeathObjectCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBinderDeathObjectCount", "()I", "GetGetBinderDeathObjectCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of death notification links to Binder objects that
 exist in the current process.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of death notification links to Binder objects that
 exist in the current process.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getBinderDeathObjectCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BinderLocalObjectCount">
      <MemberSignature Language="C#" Value="public static int BinderLocalObjectCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BinderLocalObjectCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBinderLocalObjectCount", "()I", "GetGetBinderLocalObjectCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of active local Binder objects that exist in the
 current process.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of active local Binder objects that exist in the
 current process.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getBinderLocalObjectCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BinderProxyObjectCount">
      <MemberSignature Language="C#" Value="public static int BinderProxyObjectCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BinderProxyObjectCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBinderProxyObjectCount", "()I", "GetGetBinderProxyObjectCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of references to remote proxy Binder objects that
 exist in the current process.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of references to remote proxy Binder objects that
 exist in the current process.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getBinderProxyObjectCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BinderReceivedTransactions">
      <MemberSignature Language="C#" Value="public static int BinderReceivedTransactions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BinderReceivedTransactions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBinderReceivedTransactions", "()I", "GetGetBinderReceivedTransactionsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of received transactions from the binder driver.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of received transactions from the binder driver.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getBinderReceivedTransactions()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="BinderSentTransactions">
      <MemberSignature Language="C#" Value="public static int BinderSentTransactions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 BinderSentTransactions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getBinderSentTransactions", "()I", "GetGetBinderSentTransactionsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of sent transactions from this process.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of sent transactions from this process.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getBinderSentTransactions()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ChangeDebugPort">
      <MemberSignature Language="C#" Value="public static void ChangeDebugPort (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ChangeDebugPort(int32 port) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("changeDebugPort", "(I)V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">To be added.</param>
        <summary>Change the JDWP port.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Change the JDWP port.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#changeDebugPort(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DumpHprofData">
      <MemberSignature Language="C#" Value="public static void DumpHprofData (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DumpHprofData(string fileName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dumpHprofData", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Full pathname of output file (e.g. "/sdcard/dump.hprof").</param>
        <summary>Dump "hprof" data to the specified file.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Dump "hprof" data to the specified file.  This may cause a GC.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#dumpHprofData(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the VM was built without
         HPROF support.</exception>
        <exception cref="T:Java.IO.IOException">if an error occurs while opening or writing files.
</exception>
      </Docs>
    </Member>
    <Member MemberName="DumpHprofDataAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task DumpHprofDataAsync (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task DumpHprofDataAsync(string fileName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DumpService">
      <MemberSignature Language="C#" Value="public static bool DumpService (string name, Java.IO.FileDescriptor fd, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DumpService(string name, class Java.IO.FileDescriptor fd, string[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dumpService", "(Ljava/lang/String;Ljava/io/FileDescriptor;[Ljava/lang/String;)Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">of the service to dump</param>
        <param name="fd">to write dump output to (usually an output log file)</param>
        <param name="args">to pass to the service's dump method, may be null</param>
        <summary>Get a debugging dump of a system service by name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get a debugging dump of a system service by name.

 </para>
          <para tool="javadoc-to-mdoc">Most services require the caller to hold android.permission.DUMP.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#dumpService(java.lang.String, java.io.FileDescriptor, java.lang.String[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DumpServiceAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;bool&gt; DumpServiceAsync (string name, Java.IO.FileDescriptor fd, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;bool&gt; DumpServiceAsync(string name, class Java.IO.FileDescriptor fd, string[] args) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="fd">To be added.</param>
        <param name="args">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableEmulatorTraceOutput">
      <MemberSignature Language="C#" Value="public static void EnableEmulatorTraceOutput ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableEmulatorTraceOutput() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("enableEmulatorTraceOutput", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enable "emulator traces", in which information about the current
 method is made available to the "emulator -trace" feature.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Enable "emulator traces", in which information about the current
 method is made available to the "emulator -trace" feature.  There
 is no corresponding "disable" call -- this is intended for use by
 the framework when tracing should be turned on and left that way, so
 that traces captured with F9/F10 will include the necessary data.

 This puts the VM into "profile" mode, which has performance
 consequences.

 To temporarily enable tracing, use <c><see cref="M:Android.OS.Debug.StartNativeTracing" /></c>.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#enableEmulatorTraceOutput()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetMemoryInfo">
      <MemberSignature Language="C#" Value="public static void GetMemoryInfo (Android.OS.Debug.MemoryInfo memoryInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetMemoryInfo(class Android.OS.Debug/MemoryInfo memoryInfo) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getMemoryInfo", "(Landroid/os/Debug$MemoryInfo;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="memoryInfo" Type="Android.OS.Debug+MemoryInfo" />
      </Parameters>
      <Docs>
        <param name="memoryInfo">To be added.</param>
        <summary>Retrieves information about this processes memory usages.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieves information about this processes memory usages. This information is broken down by
 how much is in use by dalivk, the native heap, and everything else.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getMemoryInfo(android.os.Debug.MemoryInfo)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GlobalAllocCount">
      <MemberSignature Language="C#" Value="public static int GlobalAllocCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 GlobalAllocCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGlobalAllocCount", "()I", "GetGetGlobalAllocCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the global count of objects allocated by the runtime between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the global count of objects allocated by the runtime between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getGlobalAllocCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GlobalAllocSize">
      <MemberSignature Language="C#" Value="public static int GlobalAllocSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 GlobalAllocSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGlobalAllocSize", "()I", "GetGetGlobalAllocSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the global size, in bytes, of objects allocated by the runtime between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the global size, in bytes, of objects allocated by the runtime between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getGlobalAllocSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GlobalClassInitCount">
      <MemberSignature Language="C#" Value="public static int GlobalClassInitCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 GlobalClassInitCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGlobalClassInitCount", "()I", "GetGetGlobalClassInitCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of classes successfully initialized (ie those that executed without
 throwing an exception) between a <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and
 <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of classes successfully initialized (ie those that executed without
 throwing an exception) between a <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and
 <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getGlobalClassInitCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GlobalClassInitTime">
      <MemberSignature Language="C#" Value="public static int GlobalClassInitTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 GlobalClassInitTime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGlobalClassInitTime", "()I", "GetGetGlobalClassInitTimeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the time spent successfully initializing classes between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the time spent successfully initializing classes between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getGlobalClassInitTime()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="GlobalExternalAllocCount">
      <MemberSignature Language="C#" Value="public static int GlobalExternalAllocCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 GlobalExternalAllocCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGlobalExternalAllocCount", "()I", "GetGetGlobalExternalAllocCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This method exists for compatibility and always returns 0.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This method exists for compatibility and always returns 0.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getGlobalExternalAllocCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GlobalExternalAllocSize">
      <MemberSignature Language="C#" Value="public static int GlobalExternalAllocSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 GlobalExternalAllocSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGlobalExternalAllocSize", "()I", "GetGetGlobalExternalAllocSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This method exists for compatibility and always returns 0.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This method exists for compatibility and always returns 0.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getGlobalExternalAllocSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GlobalExternalFreedCount">
      <MemberSignature Language="C#" Value="public static int GlobalExternalFreedCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 GlobalExternalFreedCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGlobalExternalFreedCount", "()I", "GetGetGlobalExternalFreedCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This method exists for compatibility and always returns 0.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This method exists for compatibility and always returns 0.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getGlobalExternalFreedCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GlobalExternalFreedSize">
      <MemberSignature Language="C#" Value="public static int GlobalExternalFreedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 GlobalExternalFreedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGlobalExternalFreedSize", "()I", "GetGetGlobalExternalFreedSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This method exists for compatibility and has no effect.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This method exists for compatibility and has no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getGlobalExternalFreedSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GlobalFreedCount">
      <MemberSignature Language="C#" Value="public static int GlobalFreedCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 GlobalFreedCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGlobalFreedCount", "()I", "GetGetGlobalFreedCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the global count of objects freed by the runtime between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the global count of objects freed by the runtime between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getGlobalFreedCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GlobalFreedSize">
      <MemberSignature Language="C#" Value="public static int GlobalFreedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 GlobalFreedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGlobalFreedSize", "()I", "GetGetGlobalFreedSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the global size, in bytes, of objects freed by the runtime between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the global size, in bytes, of objects freed by the runtime between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getGlobalFreedSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GlobalGcInvocationCount">
      <MemberSignature Language="C#" Value="public static int GlobalGcInvocationCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 GlobalGcInvocationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getGlobalGcInvocationCount", "()I", "GetGetGlobalGcInvocationCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of non-concurrent GC invocations between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of non-concurrent GC invocations between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getGlobalGcInvocationCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsDebuggerConnected">
      <MemberSignature Language="C#" Value="public static bool IsDebuggerConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsDebuggerConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isDebuggerConnected", "()Z", "GetIsDebuggerConnectedHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Determine if a debugger is currently attached.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Determine if a debugger is currently attached.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#isDebuggerConnected()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LoadedClassCount">
      <MemberSignature Language="C#" Value="public static int LoadedClassCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 LoadedClassCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLoadedClassCount", "()I", "GetGetLoadedClassCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the number of loaded classes.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Get the number of loaded classes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getLoadedClassCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NativeHeapAllocatedSize">
      <MemberSignature Language="C#" Value="public static long NativeHeapAllocatedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 NativeHeapAllocatedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNativeHeapAllocatedSize", "()J", "GetGetNativeHeapAllocatedSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the amount of allocated memory in the native heap.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the amount of allocated memory in the native heap.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getNativeHeapAllocatedSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NativeHeapFreeSize">
      <MemberSignature Language="C#" Value="public static long NativeHeapFreeSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 NativeHeapFreeSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNativeHeapFreeSize", "()J", "GetGetNativeHeapFreeSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the amount of free memory in the native heap.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the amount of free memory in the native heap.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getNativeHeapFreeSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="NativeHeapSize">
      <MemberSignature Language="C#" Value="public static long NativeHeapSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 NativeHeapSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNativeHeapSize", "()J", "GetGetNativeHeapSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the size of the native heap.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the size of the native heap.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getNativeHeapSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="PrintLoadedClasses">
      <MemberSignature Language="C#" Value="public static void PrintLoadedClasses (Android.OS.DebugShow flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PrintLoadedClasses(valuetype Android.OS.DebugShow flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("printLoadedClasses", "(I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.OS.DebugShow">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">See constants above.
</param>
        <summary>Dump a list of all currently loaded class to the log file.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Dump a list of all currently loaded class to the log file.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#printLoadedClasses(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Pss">
      <MemberSignature Language="C#" Value="public static long Pss { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int64 Pss" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPss", "()J", "GetGetPssHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieves the PSS memory used by the process as given by the
 smaps.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieves the PSS memory used by the process as given by the
 smaps.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getPss()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="ResetAllCounts">
      <MemberSignature Language="C#" Value="public static void ResetAllCounts ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetAllCounts() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetAllCounts", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears all the global and thread-local memory allocation counters.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears all the global and thread-local memory allocation counters.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetAllCounts()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Debug.StartAllocCounting" />
      </Docs>
    </Member>
    <Member MemberName="ResetGlobalAllocCount">
      <MemberSignature Language="C#" Value="public static void ResetGlobalAllocCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetGlobalAllocCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetGlobalAllocCount", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the global count of objects allocated.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the global count of objects allocated.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetGlobalAllocCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.OS.Debug.GlobalAllocCount" />
      </Docs>
    </Member>
    <Member MemberName="ResetGlobalAllocSize">
      <MemberSignature Language="C#" Value="public static void ResetGlobalAllocSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetGlobalAllocSize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetGlobalAllocSize", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the global size of objects allocated.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the global size of objects allocated.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetGlobalAllocSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.OS.Debug.GlobalAllocSize" />
      </Docs>
    </Member>
    <Member MemberName="ResetGlobalClassInitCount">
      <MemberSignature Language="C#" Value="public static void ResetGlobalClassInitCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetGlobalClassInitCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetGlobalClassInitCount", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the count of classes initialized.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the count of classes initialized.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetGlobalClassInitCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Android.OS.Debug.GlobalClassInitCount" />
      </Docs>
    </Member>
    <Member MemberName="ResetGlobalClassInitTime">
      <MemberSignature Language="C#" Value="public static void ResetGlobalClassInitTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetGlobalClassInitTime() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetGlobalClassInitTime", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the count of time spent initializing classes.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the count of time spent initializing classes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetGlobalClassInitTime()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 8" />
        <altmember cref="P:Android.OS.Debug.GlobalClassInitTime" />
      </Docs>
    </Member>
    <Member MemberName="ResetGlobalExternalAllocCount">
      <MemberSignature Language="C#" Value="public static void ResetGlobalExternalAllocCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetGlobalExternalAllocCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetGlobalExternalAllocCount", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method exists for compatibility and has no effect.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method exists for compatibility and has no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetGlobalExternalAllocCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResetGlobalExternalAllocSize">
      <MemberSignature Language="C#" Value="public static void ResetGlobalExternalAllocSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetGlobalExternalAllocSize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetGlobalExternalAllocSize", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method exists for compatibility and has no effect.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method exists for compatibility and has no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetGlobalExternalAllocSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResetGlobalExternalFreedCount">
      <MemberSignature Language="C#" Value="public static void ResetGlobalExternalFreedCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetGlobalExternalFreedCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetGlobalExternalFreedCount", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method exists for compatibility and has no effect.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method exists for compatibility and has no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetGlobalExternalFreedCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResetGlobalExternalFreedSize">
      <MemberSignature Language="C#" Value="public static void ResetGlobalExternalFreedSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetGlobalExternalFreedSize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetGlobalExternalFreedSize", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method exists for compatibility and has no effect.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method exists for compatibility and has no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetGlobalExternalFreedSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResetGlobalFreedCount">
      <MemberSignature Language="C#" Value="public static void ResetGlobalFreedCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetGlobalFreedCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetGlobalFreedCount", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the global count of objects freed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the global count of objects freed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetGlobalFreedCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.OS.Debug.GlobalFreedCount" />
      </Docs>
    </Member>
    <Member MemberName="ResetGlobalFreedSize">
      <MemberSignature Language="C#" Value="public static void ResetGlobalFreedSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetGlobalFreedSize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetGlobalFreedSize", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the global size of objects freed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the global size of objects freed.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetGlobalFreedSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.OS.Debug.GlobalFreedSize" />
      </Docs>
    </Member>
    <Member MemberName="ResetGlobalGcInvocationCount">
      <MemberSignature Language="C#" Value="public static void ResetGlobalGcInvocationCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetGlobalGcInvocationCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetGlobalGcInvocationCount", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the count of non-concurrent GC invocations.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the count of non-concurrent GC invocations.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetGlobalGcInvocationCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.OS.Debug.GlobalGcInvocationCount" />
      </Docs>
    </Member>
    <Member MemberName="ResetThreadAllocCount">
      <MemberSignature Language="C#" Value="public static void ResetThreadAllocCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetThreadAllocCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetThreadAllocCount", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the thread-local count of objects allocated.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the thread-local count of objects allocated.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetThreadAllocCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.OS.Debug.ThreadAllocCount" />
      </Docs>
    </Member>
    <Member MemberName="ResetThreadAllocSize">
      <MemberSignature Language="C#" Value="public static void ResetThreadAllocSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetThreadAllocSize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetThreadAllocSize", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the thread-local count of objects allocated.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the thread-local count of objects allocated.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetThreadAllocSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.OS.Debug.ThreadAllocSize" />
      </Docs>
    </Member>
    <Member MemberName="ResetThreadExternalAllocCount">
      <MemberSignature Language="C#" Value="public static void ResetThreadExternalAllocCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetThreadExternalAllocCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetThreadExternalAllocCount", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method exists for compatibility and has no effect.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method exists for compatibility and has no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetThreadExternalAllocCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResetThreadExternalAllocSize">
      <MemberSignature Language="C#" Value="public static void ResetThreadExternalAllocSize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetThreadExternalAllocSize() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetThreadExternalAllocSize", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method exists for compatibility and has no effect.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This method exists for compatibility and has no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetThreadExternalAllocSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResetThreadGcInvocationCount">
      <MemberSignature Language="C#" Value="public static void ResetThreadGcInvocationCount ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ResetThreadGcInvocationCount() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("resetThreadGcInvocationCount", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the thread-local count of non-concurrent GC invocations.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Clears the thread-local count of non-concurrent GC invocations.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#resetThreadGcInvocationCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.OS.Debug.ThreadGcInvocationCount" />
      </Docs>
    </Member>
    <Member MemberName="SetAllocationLimit">
      <MemberSignature Language="C#" Value="public static int SetAllocationLimit (int limit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SetAllocationLimit(int32 limit) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setAllocationLimit", "(I)I", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="limit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="limit">To be added.</param>
        <summary>Establish an object allocation limit in the current thread.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Establish an object allocation limit in the current thread.
 This feature was never enabled in release builds.  The
 allocation limits feature was removed in Honeycomb.  This
 method exists for compatibility and always returns -1 and has
 no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#setAllocationLimit(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetGlobalAllocationLimit">
      <MemberSignature Language="C#" Value="public static int SetGlobalAllocationLimit (int limit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 SetGlobalAllocationLimit(int32 limit) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setGlobalAllocationLimit", "(I)I", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="limit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="limit">To be added.</param>
        <summary>Establish a global object allocation limit.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Establish a global object allocation limit.  This feature was
 never enabled in release builds.  The allocation limits feature
 was removed in Honeycomb.  This method exists for compatibility
 and always returns -1 and has no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#setGlobalAllocationLimit(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShowClassloader">
      <MemberSignature Language="C#" Value="public const Android.OS.DebugShow ShowClassloader = 2;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.OS.DebugShow ShowClassloader = (2)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SHOW_CLASSLOADER")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.OS.DebugShow enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.DebugShow</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#SHOW_CLASSLOADER" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShowFullDetail">
      <MemberSignature Language="C#" Value="public const Android.OS.DebugShow ShowFullDetail = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.OS.DebugShow ShowFullDetail = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SHOW_FULL_DETAIL")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.OS.DebugShow enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.DebugShow</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flags for printLoadedClasses().</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flags for printLoadedClasses().  Default behavior is to only show
 the class name.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#SHOW_FULL_DETAIL" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ShowInitialized">
      <MemberSignature Language="C#" Value="public const Android.OS.DebugShow ShowInitialized = 4;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.OS.DebugShow ShowInitialized = (4)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("SHOW_INITIALIZED")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.OS.DebugShow enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.DebugShow</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#SHOW_INITIALIZED" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartAllocCounting">
      <MemberSignature Language="C#" Value="public static void StartAllocCounting ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartAllocCounting() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startAllocCounting", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Start counting the number and aggregate size of memory allocations.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Start counting the number and aggregate size of memory allocations.

 </para>
          <para tool="javadoc-to-mdoc">The <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> method resets the counts and enables counting.
 The <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c> method disables the counting so that the analysis
 code doesn't cause additional allocations.  The various <c>get</c> methods return
 the specified value. And the various <c>reset</c> methods reset the specified
 count.</para>
          <para tool="javadoc-to-mdoc">Counts are kept for the system as a whole (global) and for each thread.
 The per-thread counts for threads other than the current thread
 are not cleared by the "reset" or "start" calls.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#startAllocCounting()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartMethodTracing">
      <MemberSignature Language="C#" Value="public static void StartMethodTracing ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartMethodTracing() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startMethodTracing", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Start method tracing with default log name and buffer size.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Start method tracing with default log name and buffer size. See <format type="text/html"><a href="http://developer.android.com/reference/../guide/developing/tools/traceview.html">Traceview: A Graphical Log Viewer</a></format> for
 information about reading these files. Call stopMethodTracing() to stop
 tracing.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#startMethodTracing()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartMethodTracing">
      <MemberSignature Language="C#" Value="public static void StartMethodTracing (string traceName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartMethodTracing(string traceName) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startMethodTracing", "(Ljava/lang/String;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="traceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="traceName">Name for the trace log file to create.
 If <c>traceName</c> is null, this value defaults to "/sdcard/dmtrace.trace".
 If the files already exist, they will be truncated.
 If the trace file given does not end in ".trace", it will be appended for you.
</param>
        <summary>Start method tracing, specifying the trace log file name.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Start method tracing, specifying the trace log file name.  The trace
 file will be put under "/sdcard" unless an absolute path is given.
 See <format type="text/html"><a href="http://developer.android.com/reference/../guide/developing/tools/traceview.html">Traceview: A Graphical Log Viewer</a></format> for
 information about reading trace files.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#startMethodTracing(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartMethodTracing">
      <MemberSignature Language="C#" Value="public static void StartMethodTracing (string traceName, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartMethodTracing(string traceName, int32 bufferSize) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startMethodTracing", "(Ljava/lang/String;I)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="traceName" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="traceName">Name for the trace log file to create.
 If <c>traceName</c> is null, this value defaults to "/sdcard/dmtrace.trace".
 If the files already exist, they will be truncated.
 If the trace file given does not end in ".trace", it will be appended for you.</param>
        <param name="bufferSize">The maximum amount of trace data we gather. If not given, it defaults to 8MB.
</param>
        <summary>Start method tracing, specifying the trace log file name and the
 buffer size.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Start method tracing, specifying the trace log file name and the
 buffer size. The trace files will be put under "/sdcard" unless an
 absolute path is given. See <format type="text/html"><a href="http://developer.android.com/reference/../guide/developing/tools/traceview.html">Traceview: A Graphical Log Viewer</a></format> for
 information about reading trace files.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#startMethodTracing(java.lang.String, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartMethodTracing">
      <MemberSignature Language="C#" Value="public static void StartMethodTracing (string traceName, int bufferSize, Android.OS.DebugTraceOptions flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartMethodTracing(string traceName, int32 bufferSize, valuetype Android.OS.DebugTraceOptions flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startMethodTracing", "(Ljava/lang/String;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="traceName" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.OS.DebugTraceOptions">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="traceName">Name for the trace log file to create.
 If <c>traceName</c> is null, this value defaults to "/sdcard/dmtrace.trace".
 If the files already exist, they will be truncated.
 If the trace file given does not end in ".trace", it will be appended for you.</param>
        <param name="bufferSize">The maximum amount of trace data we gather. If not given, it defaults to 8MB.</param>
        <param name="flags">Flags to control method tracing. The only one that is currently defined is <c><see cref="F:Android.OS.Debug.TraceCountAllocs" /></c>.
</param>
        <summary>Start method tracing, specifying the trace log file name and the
 buffer size.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Start method tracing, specifying the trace log file name and the
 buffer size. The trace files will be put under "/sdcard" unless an
 absolute path is given. See <format type="text/html"><a href="http://developer.android.com/reference/../guide/developing/tools/traceview.html">Traceview: A Graphical Log Viewer</a></format> for
 information about reading trace files.

 </para>
          <para tool="javadoc-to-mdoc">
 When method tracing is enabled, the VM will run more slowly than
 usual, so the timings from the trace files should only be considered
 in relative terms (e.g. was run #1 faster than run #2).  The times
 for native methods will not change, so don't try to use this to
 compare the performance of interpreted and native implementations of the
 same method.  As an alternative, consider using sampling-based method
 tracing via <c><see cref="M:Android.OS.Debug.StartMethodTracingSampling(System.String,System.Int32,System.Int32)" /></c> or
 "native" tracing in the emulator via <c><see cref="M:Android.OS.Debug.StartNativeTracing" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#startMethodTracing(java.lang.String, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartMethodTracingSampling">
      <MemberSignature Language="C#" Value="public static void StartMethodTracingSampling (string traceName, int bufferSize, int intervalUs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartMethodTracingSampling(string traceName, int32 bufferSize, int32 intervalUs) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startMethodTracingSampling", "(Ljava/lang/String;II)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="traceName" Type="System.String" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="intervalUs" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="traceName">Name for the trace log file to create.
 If <c>traceName</c> is null, this value defaults to "/sdcard/dmtrace.trace".
 If the files already exist, they will be truncated.
 If the trace file given does not end in ".trace", it will be appended for you.</param>
        <param name="bufferSize">The maximum amount of trace data we gather. If not given, it defaults to 8MB.</param>
        <param name="intervalUs">The amount of time between each sample in microseconds.
</param>
        <summary>Start sampling-based method tracing, specifying the trace log file name,
 the buffer size, and the sampling interval.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Start sampling-based method tracing, specifying the trace log file name,
 the buffer size, and the sampling interval. The trace files will be put
 under "/sdcard" unless an absolute path is given. See <format type="text/html"><a href="http://developer.android.com/reference/../guide/developing/tools/traceview.html">Traceview: A Graphical Log Viewer</a></format>
 for information about reading trace files.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#startMethodTracingSampling(java.lang.String, int, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNativeTracing">
      <MemberSignature Language="C#" Value="public static void StartNativeTracing ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StartNativeTracing() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startNativeTracing", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enable qemu tracing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Enable qemu tracing. For this to work requires running everything inside
 the qemu emulator; otherwise, this method will have no effect. The trace
 file is specified on the command line when the emulator is started. For
 example, the following command line <format type="text/html"><br /></format><c>emulator -trace foo</c><format type="text/html"><br /></format>
 will start running the emulator and create a trace file named "foo". This
 method simply enables writing the trace records to the trace file.

 </para>
          <para tool="javadoc-to-mdoc">
 The main differences between this and <c><see cref="M:Android.OS.Debug.StartMethodTracing" /></c> are
 that tracing in the qemu emulator traces every cpu instruction of every
 process, including kernel code, so we have more complete information,
 including all context switches. We can also get more detailed information
 such as cache misses. The sequence of calls is determined by
 post-processing the instruction trace. The qemu tracing is also done
 without modifying the application or perturbing the timing of calls
 because no instrumentation is added to the application being traced.
 </para>
          <para tool="javadoc-to-mdoc">
 One limitation of using this method compared to using
 <c><see cref="M:Android.OS.Debug.StartMethodTracing" /></c> on the real device is that the emulator
 does not model all of the real hardware effects such as memory and
 bus contention.  The emulator also has a simple cache model and cannot
 capture all the complexities of a real cache.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#startNativeTracing()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StopAllocCounting">
      <MemberSignature Language="C#" Value="public static void StopAllocCounting ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StopAllocCounting() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopAllocCounting", "()V", "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop counting the number and aggregate size of memory allocations.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Stop counting the number and aggregate size of memory allocations.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#stopAllocCounting()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StopMethodTracing">
      <MemberSignature Language="C#" Value="public static void StopMethodTracing ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StopMethodTracing() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopMethodTracing", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop method tracing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Stop method tracing.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#stopMethodTracing()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StopNativeTracing">
      <MemberSignature Language="C#" Value="public static void StopNativeTracing ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void StopNativeTracing() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopNativeTracing", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop qemu tracing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Stop qemu tracing.  See <c><see cref="M:Android.OS.Debug.StartNativeTracing" /></c> to start tracing.

 </para>
          <para tool="javadoc-to-mdoc">Tracing can be started and stopped as many times as desired.  When
 the qemu emulator itself is stopped then the buffered trace records
 are flushed and written to the trace file.  In fact, it is not necessary
 to call this method at all; simply killing qemu is sufficient.  But
 starting and stopping a trace is useful for examining a specific
 region of code.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#stopNativeTracing()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThreadAllocCount">
      <MemberSignature Language="C#" Value="public static int ThreadAllocCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ThreadAllocCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getThreadAllocCount", "()I", "GetGetThreadAllocCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the thread-local count of objects allocated by the runtime between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the thread-local count of objects allocated by the runtime between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getThreadAllocCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThreadAllocSize">
      <MemberSignature Language="C#" Value="public static int ThreadAllocSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ThreadAllocSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getThreadAllocSize", "()I", "GetGetThreadAllocSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the thread-local size of objects allocated by the runtime between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the thread-local size of objects allocated by the runtime between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getThreadAllocSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThreadCpuTimeNanos">
      <MemberSignature Language="C#" Value="public static long ThreadCpuTimeNanos ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ThreadCpuTimeNanos() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("threadCpuTimeNanos", "()J", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get an indication of thread CPU usage.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get an indication of thread CPU usage.  The value returned
 indicates the amount of time that the current thread has spent
 executing code or waiting for certain types of I/O.

 The time is expressed in nanoseconds, and is only meaningful
 when compared to the result from an earlier call.  Note that
 nanosecond resolution does not imply nanosecond accuracy.

 On system which don't support this operation, the call returns -1.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#threadCpuTimeNanos()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThreadExternalAllocCount">
      <MemberSignature Language="C#" Value="public static int ThreadExternalAllocCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ThreadExternalAllocCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getThreadExternalAllocCount", "()I", "GetGetThreadExternalAllocCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This method exists for compatibility and has no effect.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This method exists for compatibility and has no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getThreadExternalAllocCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThreadExternalAllocSize">
      <MemberSignature Language="C#" Value="public static int ThreadExternalAllocSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ThreadExternalAllocSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("deprecated")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getThreadExternalAllocSize", "()I", "GetGetThreadExternalAllocSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This method exists for compatibility and has no effect.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This method exists for compatibility and has no effect.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getThreadExternalAllocSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThreadGcInvocationCount">
      <MemberSignature Language="C#" Value="public static int ThreadGcInvocationCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 ThreadGcInvocationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getThreadGcInvocationCount", "()I", "GetGetThreadGcInvocationCountHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of thread-local non-concurrent GC invocations between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of thread-local non-concurrent GC invocations between a
 <c><see cref="M:Android.OS.Debug.StartAllocCounting" /></c> and <c><see cref="M:Android.OS.Debug.StopAllocCounting" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#getThreadGcInvocationCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceCountAllocs">
      <MemberSignature Language="C#" Value="public const Android.OS.DebugTraceOptions TraceCountAllocs = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.OS.DebugTraceOptions TraceCountAllocs = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TRACE_COUNT_ALLOCS")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.OS.DebugTraceOptions enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.DebugTraceOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flags for startMethodTracing().</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flags for startMethodTracing().  These can be ORed together.

 TRACE_COUNT_ALLOCS adds the results from startAllocCounting to the
 trace key file.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#TRACE_COUNT_ALLOCS" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WaitForDebugger">
      <MemberSignature Language="C#" Value="public static void WaitForDebugger ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void WaitForDebugger() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("waitForDebugger", "()V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wait until a debugger attaches.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Wait until a debugger attaches.  As soon as the debugger attaches,
 this returns, so you will need to place a breakpoint after the
 waitForDebugger() call if you want to start tracing immediately.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#waitForDebugger()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="WaitingForDebugger">
      <MemberSignature Language="C#" Value="public static bool WaitingForDebugger ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool WaitingForDebugger() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("waitingForDebugger", "()Z", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns "true" if one or more threads is waiting for a debugger
 to attach.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns "true" if one or more threads is waiting for a debugger
 to attach.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/Debug.html#waitingForDebugger()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
