<Type Name="PowerManager" FullName="Android.OS.PowerManager">
  <TypeSignature Language="C#" Value="public class PowerManager : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PowerManager extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.OS.PowerManager" />
  <TypeSignature Language="F#" Value="type PowerManager = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/os/PowerManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/os/PowerManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>This class gives you control of the power state of the device.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/os/PowerManager" title="Reference documentation">Java documentation for <code>android.os.PowerManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PowerManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.OS.PowerManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.OS.PowerManager" Usage="new Android.OS.PowerManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionDeviceIdleModeChanged">
      <MemberSignature Language="C#" Value="public const string ActionDeviceIdleModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionDeviceIdleModeChanged" />
      <MemberSignature Language="DocId" Value="F:Android.OS.PowerManager.ActionDeviceIdleModeChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionDeviceIdleModeChanged : string" Usage="Android.OS.PowerManager.ActionDeviceIdleModeChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_DEVICE_IDLE_MODE_CHANGED", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_DEVICE_IDLE_MODE_CHANGED", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Intent that is broadcast when the state of <c>#isDeviceIdleMode()</c> changes.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#ACTION_DEVICE_IDLE_MODE_CHANGED" title="Reference documentation">Java documentation for <code>android.os.PowerManager.ACTION_DEVICE_IDLE_MODE_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionPowerSaveModeChanged">
      <MemberSignature Language="C#" Value="public const string ActionPowerSaveModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionPowerSaveModeChanged" />
      <MemberSignature Language="DocId" Value="F:Android.OS.PowerManager.ActionPowerSaveModeChanged" />
      <MemberSignature Language="F#" Value="val mutable ActionPowerSaveModeChanged : string" Usage="Android.OS.PowerManager.ActionPowerSaveModeChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("ACTION_POWER_SAVE_MODE_CHANGED")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("ACTION_POWER_SAVE_MODE_CHANGED")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Intent that is broadcast when the state of <c>#isPowerSaveMode()</c> changes.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#ACTION_POWER_SAVE_MODE_CHANGED" title="Reference documentation">Java documentation for <code>android.os.PowerManager.ACTION_POWER_SAVE_MODE_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddThermalStatusListener">
      <MemberSignature Language="C#" Value="public virtual void AddThermalStatusListener (Android.OS.PowerManager.IOnThermalStatusChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddThermalStatusListener(class Android.OS.PowerManager/IOnThermalStatusChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.AddThermalStatusListener(Android.OS.PowerManager.IOnThermalStatusChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member AddThermalStatusListener : Android.OS.PowerManager.IOnThermalStatusChangedListener -&gt; unit&#xA;override this.AddThermalStatusListener : Android.OS.PowerManager.IOnThermalStatusChangedListener -&gt; unit" Usage="powerManager.AddThermalStatusListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addThermalStatusListener", "(Landroid/os/PowerManager$OnThermalStatusChangedListener;)V", "GetAddThermalStatusListener_Landroid_os_PowerManager_OnThermalStatusChangedListener_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addThermalStatusListener", "(Landroid/os/PowerManager$OnThermalStatusChangedListener;)V", "GetAddThermalStatusListener_Landroid_os_PowerManager_OnThermalStatusChangedListener_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.OS.PowerManager+IOnThermalStatusChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">listener to be added,</param>
        <summary>This function adds a listener for thermal status change, listen call back will be
            enqueued tasks on the main thread</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#addThermalStatusListener(android.os.OnThermalStatusChangedListener)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.addThermalStatusListener(android.os.OnThermalStatusChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddThermalStatusListener">
      <MemberSignature Language="C#" Value="public virtual void AddThermalStatusListener (Java.Util.Concurrent.IExecutor executor, Android.OS.PowerManager.IOnThermalStatusChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddThermalStatusListener(class Java.Util.Concurrent.IExecutor executor, class Android.OS.PowerManager/IOnThermalStatusChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.AddThermalStatusListener(Java.Util.Concurrent.IExecutor,Android.OS.PowerManager.IOnThermalStatusChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member AddThermalStatusListener : Java.Util.Concurrent.IExecutor * Android.OS.PowerManager.IOnThermalStatusChangedListener -&gt; unit&#xA;override this.AddThermalStatusListener : Java.Util.Concurrent.IExecutor * Android.OS.PowerManager.IOnThermalStatusChangedListener -&gt; unit" Usage="powerManager.AddThermalStatusListener (executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addThermalStatusListener", "(Ljava/util/concurrent/Executor;Landroid/os/PowerManager$OnThermalStatusChangedListener;)V", "GetAddThermalStatusListener_Ljava_util_concurrent_Executor_Landroid_os_PowerManager_OnThermalStatusChangedListener_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addThermalStatusListener", "(Ljava/util/concurrent/Executor;Landroid/os/PowerManager$OnThermalStatusChangedListener;)V", "GetAddThermalStatusListener_Ljava_util_concurrent_Executor_Landroid_os_PowerManager_OnThermalStatusChangedListener_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.OS.PowerManager+IOnThermalStatusChangedListener" />
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="listener">listener to be added,</param>
        <summary>This function adds a listener for thermal status change, listen call back will be
            enqueued tasks on the main thread</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#addThermalStatusListener(android.os.OnThermalStatusChangedListener)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.addThermalStatusListener(android.os.OnThermalStatusChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentThermalStatus">
      <MemberSignature Language="C#" Value="public virtual Android.OS.ThermalStatus CurrentThermalStatus { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.OS.ThermalStatus CurrentThermalStatus" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.CurrentThermalStatus" />
      <MemberSignature Language="F#" Value="member this.CurrentThermalStatus : Android.OS.ThermalStatus" Usage="Android.OS.PowerManager.CurrentThermalStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCurrentThermalStatus", "()I", "GetGetCurrentThermalStatusHandler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCurrentThermalStatus", "()I", "GetGetCurrentThermalStatusHandler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ThermalStatus</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This function returns the current thermal status of the device.</summary>
        <value>thermal status as int, <c>#THERMAL_STATUS_NONE</c> if device in not under
            thermal throttling.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#getCurrentThermalStatus()" title="Reference documentation">Java documentation for <code>android.os.PowerManager.getCurrentThermalStatus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FromContext">
      <MemberSignature Language="C#" Value="public static Android.OS.PowerManager? FromContext (Android.Content.Context context);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.PowerManager FromContext(class Android.Content.Context context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.FromContext(Android.Content.Context)" />
      <MemberSignature Language="F#" Value="static member FromContext : Android.Content.Context -&gt; Android.OS.PowerManager" Usage="Android.OS.PowerManager.FromContext context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Android.OS.PowerManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Android.Content.Context" />
      </Parameters>
      <Docs>
        <param name="context">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetThermalHeadroom">
      <MemberSignature Language="C#" Value="public virtual float GetThermalHeadroom (int forecastSeconds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance float32 GetThermalHeadroom(int32 forecastSeconds) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.GetThermalHeadroom(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetThermalHeadroom : int -&gt; single&#xA;override this.GetThermalHeadroom : int -&gt; single" Usage="powerManager.GetThermalHeadroom forecastSeconds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getThermalHeadroom", "(I)F", "GetGetThermalHeadroom_IHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getThermalHeadroom", "(I)F", "GetGetThermalHeadroom_IHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forecastSeconds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="forecastSeconds">how many seconds in the future to forecast. Given that device
                                   conditions may change at any time, forecasts from further in the
                                   future will likely be less accurate than forecasts in the near future.</param>
        <summary>Provides an estimate of how much thermal headroom the device currently has before hitting
            severe throttling.</summary>
        <returns>a value greater than or equal to 0.0 where 1.0 indicates the SEVERE throttling
                    threshold, as described above. Returns NaN if the device does not support this
                    functionality or if this function is called significantly faster than once per
                    second.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#getThermalHeadroom(int)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.getThermalHeadroom(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GoToSleep">
      <MemberSignature Language="C#" Value="public virtual void GoToSleep (long time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GoToSleep(int64 time) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.GoToSleep(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member GoToSleep : int64 -&gt; unit&#xA;override this.GoToSleep : int64 -&gt; unit" Usage="powerManager.GoToSleep time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("goToSleep", "(J)V", "GetGoToSleep_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("goToSleep", "(J)V", "GetGoToSleep_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="time">The time when the request to go to sleep was issued, in the
            <c>SystemClock#uptimeMillis()</c> time base.  This timestamp is used to correctly
            order the go to sleep request with other power management functions.  It should be set
            to the timestamp of the input event that caused the request to go to sleep.</param>
        <summary>Forces the <c>com.android.server.display.DisplayGroup#DEFAULT default display group</c>
            to turn off.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#goToSleep(long)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.goToSleep(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.PowerManager.UserActivity(System.Int64, System.Boolean)" />
        <altmember cref="M:Android.OS.PowerManager.WakeUp(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="IsBatteryDischargePredictionPersonalized">
      <MemberSignature Language="C#" Value="public virtual bool IsBatteryDischargePredictionPersonalized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBatteryDischargePredictionPersonalized" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.IsBatteryDischargePredictionPersonalized" />
      <MemberSignature Language="F#" Value="member this.IsBatteryDischargePredictionPersonalized : bool" Usage="Android.OS.PowerManager.IsBatteryDischargePredictionPersonalized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBatteryDischargePredictionPersonalized", "()Z", "GetIsBatteryDischargePredictionPersonalizedHandler", ApiSince=31)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isBatteryDischargePredictionPersonalized", "()Z", "GetIsBatteryDischargePredictionPersonalizedHandler", ApiSince=31)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns whether the current battery life remaining estimate is personalized based on device
            usage history or not.</summary>
        <value>A boolean indicating if the current discharge estimate is personalized based on
            historical device usage or not.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#isBatteryDischargePredictionPersonalized()" title="Reference documentation">Java documentation for <code>android.os.PowerManager.isBatteryDischargePredictionPersonalized()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDeviceIdleMode">
      <MemberSignature Language="C#" Value="public virtual bool IsDeviceIdleMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDeviceIdleMode" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.IsDeviceIdleMode" />
      <MemberSignature Language="F#" Value="member this.IsDeviceIdleMode : bool" Usage="Android.OS.PowerManager.IsDeviceIdleMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isDeviceIdleMode", "()Z", "GetIsDeviceIdleModeHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isDeviceIdleMode", "()Z", "GetIsDeviceIdleModeHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the device is currently in idle mode.</summary>
        <value>Returns true if currently in active device idle mode, else false.  This is
            when idle mode restrictions are being actively applied; it will return false if the
            device is in a long-term idle mode but currently running a maintenance window where
            restrictions have been lifted.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#isDeviceIdleMode()" title="Reference documentation">Java documentation for <code>android.os.PowerManager.isDeviceIdleMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsIgnoringBatteryOptimizations">
      <MemberSignature Language="C#" Value="public virtual bool IsIgnoringBatteryOptimizations (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsIgnoringBatteryOptimizations(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.IsIgnoringBatteryOptimizations(System.String)" />
      <MemberSignature Language="F#" Value="abstract member IsIgnoringBatteryOptimizations : string -&gt; bool&#xA;override this.IsIgnoringBatteryOptimizations : string -&gt; bool" Usage="powerManager.IsIgnoringBatteryOptimizations packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isIgnoringBatteryOptimizations", "(Ljava/lang/String;)Z", "GetIsIgnoringBatteryOptimizations_Ljava_lang_String_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isIgnoringBatteryOptimizations", "(Ljava/lang/String;)Z", "GetIsIgnoringBatteryOptimizations_Ljava_lang_String_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <summary>Return whether the given application package name is on the device's power allowlist.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#isIgnoringBatteryOptimizations(java.lang.String)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.isIgnoringBatteryOptimizations(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInteractive">
      <MemberSignature Language="C#" Value="public virtual bool IsInteractive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInteractive" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.IsInteractive" />
      <MemberSignature Language="F#" Value="member this.IsInteractive : bool" Usage="Android.OS.PowerManager.IsInteractive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInteractive", "()Z", "GetIsInteractiveHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInteractive", "()Z", "GetIsInteractiveHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the device is in an interactive state.</summary>
        <value>True if the device is in an interactive state.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#isInteractive()" title="Reference documentation">Java documentation for <code>android.os.PowerManager.isInteractive()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <altmember cref="F:Android.Content.Intent.ActionScreenOn" />
        <altmember cref="F:Android.Content.Intent.ActionScreenOff" />
      </Docs>
      <since version="Added in API level 20" />
    </Member>
    <Member MemberName="IsPowerSaveMode">
      <MemberSignature Language="C#" Value="public virtual bool IsPowerSaveMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPowerSaveMode" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.IsPowerSaveMode" />
      <MemberSignature Language="F#" Value="member this.IsPowerSaveMode : bool" Usage="Android.OS.PowerManager.IsPowerSaveMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isPowerSaveMode", "()Z", "GetIsPowerSaveModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isPowerSaveMode", "()Z", "GetIsPowerSaveModeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the device is currently in power save mode.</summary>
        <value>Returns true if currently in low power mode, else false.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#isPowerSaveMode()" title="Reference documentation">Java documentation for <code>android.os.PowerManager.isPowerSaveMode()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRebootingUserspaceSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsRebootingUserspaceSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRebootingUserspaceSupported" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.IsRebootingUserspaceSupported" />
      <MemberSignature Language="F#" Value="member this.IsRebootingUserspaceSupported : bool" Usage="Android.OS.PowerManager.IsRebootingUserspaceSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isRebootingUserspaceSupported", "()Z", "GetIsRebootingUserspaceSupportedHandler", ApiSince=30)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isRebootingUserspaceSupported", "()Z", "GetIsRebootingUserspaceSupportedHandler", ApiSince=30)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if this device supports rebooting userspace.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#isRebootingUserspaceSupported()" title="Reference documentation">Java documentation for <code>android.os.PowerManager.isRebootingUserspaceSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsScreenOn">
      <MemberSignature Language="C#" Value="public virtual bool IsScreenOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsScreenOn" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.IsScreenOn" />
      <MemberSignature Language="F#" Value="member this.IsScreenOn : bool" Usage="Android.OS.PowerManager.IsScreenOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isScreenOn", "()Z", "GetIsScreenOnHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isScreenOn", "()Z", "GetIsScreenOnHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the device is in an interactive state.</summary>
        <value>True if the device is in an interactive state.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#isScreenOn()" title="Reference documentation">Java documentation for <code>android.os.PowerManager.isScreenOn()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 7" />
      </Docs>
    </Member>
    <Member MemberName="IsSustainedPerformanceModeSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsSustainedPerformanceModeSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSustainedPerformanceModeSupported" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.IsSustainedPerformanceModeSupported" />
      <MemberSignature Language="F#" Value="member this.IsSustainedPerformanceModeSupported : bool" Usage="Android.OS.PowerManager.IsSustainedPerformanceModeSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSustainedPerformanceModeSupported", "()Z", "GetIsSustainedPerformanceModeSupportedHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSustainedPerformanceModeSupported", "()Z", "GetIsSustainedPerformanceModeSupportedHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This function checks if the device has implemented Sustained Performance
            Mode.</summary>
        <value>Returns True if the device supports it, false otherwise.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#isSustainedPerformanceModeSupported()" title="Reference documentation">Java documentation for <code>android.os.PowerManager.isSustainedPerformanceModeSupported()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWakeLockLevelSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsWakeLockLevelSupported (int level);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsWakeLockLevelSupported(int32 level) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.IsWakeLockLevelSupported(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IsWakeLockLevelSupported : int -&gt; bool&#xA;override this.IsWakeLockLevelSupported : int -&gt; bool" Usage="powerManager.IsWakeLockLevelSupported level" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isWakeLockLevelSupported", "(I)Z", "GetIsWakeLockLevelSupported_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isWakeLockLevelSupported", "(I)Z", "GetIsWakeLockLevelSupported_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="level" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="level">The wake lock level to check.</param>
        <summary>Returns true if the specified wake lock level is supported.</summary>
        <returns>True if the specified wake lock level is supported.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#isWakeLockLevelSupported(int)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.isWakeLockLevelSupported(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.OS.PowerManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWakeLock">
      <MemberSignature Language="C#" Value="public virtual Android.OS.PowerManager.WakeLock? NewWakeLock (Android.OS.WakeLockFlags levelAndFlags, string? tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.PowerManager/WakeLock NewWakeLock(valuetype Android.OS.WakeLockFlags levelAndFlags, string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.NewWakeLock(Android.OS.WakeLockFlags,System.String)" />
      <MemberSignature Language="F#" Value="abstract member NewWakeLock : Android.OS.WakeLockFlags * string -&gt; Android.OS.PowerManager.WakeLock&#xA;override this.NewWakeLock : Android.OS.WakeLockFlags * string -&gt; Android.OS.PowerManager.WakeLock" Usage="powerManager.NewWakeLock (levelAndFlags, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("newWakeLock", "(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;", "GetNewWakeLock_ILjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("newWakeLock", "(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;", "GetNewWakeLock_ILjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.PowerManager+WakeLock</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="levelAndFlags" Type="Android.OS.WakeLockFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="levelAndFlags">Combination of wake lock level and flag values defining
 the requested behavior of the WakeLock.</param>
        <param name="tag">Your class name (or other tag) for debugging purposes.</param>
        <summary>Creates a new wake lock with the specified level and flags.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Reboot">
      <MemberSignature Language="C#" Value="public virtual void Reboot (string? reason);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reboot(string reason) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.Reboot(System.String)" />
      <MemberSignature Language="F#" Value="abstract member Reboot : string -&gt; unit&#xA;override this.Reboot : string -&gt; unit" Usage="powerManager.Reboot reason" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("reboot", "(Ljava/lang/String;)V", "GetReboot_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("reboot", "(Ljava/lang/String;)V", "GetReboot_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.RequiresPermission("android.permission.REBOOT")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.RequiresPermission("android.permission.REBOOT")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reason" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="reason">code to pass to the kernel (e.g., "recovery") to
                          request special boot modes, or null.</param>
        <summary>Reboot the device.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#reboot(java.lang.String)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.reboot(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="RemoveThermalStatusListener">
      <MemberSignature Language="C#" Value="public virtual void RemoveThermalStatusListener (Android.OS.PowerManager.IOnThermalStatusChangedListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveThermalStatusListener(class Android.OS.PowerManager/IOnThermalStatusChangedListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.RemoveThermalStatusListener(Android.OS.PowerManager.IOnThermalStatusChangedListener)" />
      <MemberSignature Language="F#" Value="abstract member RemoveThermalStatusListener : Android.OS.PowerManager.IOnThermalStatusChangedListener -&gt; unit&#xA;override this.RemoveThermalStatusListener : Android.OS.PowerManager.IOnThermalStatusChangedListener -&gt; unit" Usage="powerManager.RemoveThermalStatusListener listener" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removeThermalStatusListener", "(Landroid/os/PowerManager$OnThermalStatusChangedListener;)V", "GetRemoveThermalStatusListener_Landroid_os_PowerManager_OnThermalStatusChangedListener_Handler", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removeThermalStatusListener", "(Landroid/os/PowerManager$OnThermalStatusChangedListener;)V", "GetRemoveThermalStatusListener_Landroid_os_PowerManager_OnThermalStatusChangedListener_Handler", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listener" Type="Android.OS.PowerManager+IOnThermalStatusChangedListener" />
      </Parameters>
      <Docs>
        <param name="listener">listener to be removed</param>
        <summary>This function removes a listener for thermal status change</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#removeThermalStatusListener(android.os.OnThermalStatusChangedListener)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.removeThermalStatusListener(android.os.OnThermalStatusChangedListener)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThermalStatus">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;Android.OS.PowerManager.ThermalStatusChangedEventArgs&gt; ThermalStatus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class Android.OS.PowerManager/ThermalStatusChangedEventArgs&gt; ThermalStatus" />
      <MemberSignature Language="DocId" Value="E:Android.OS.PowerManager.ThermalStatus" />
      <MemberSignature Language="F#" Value="member this.ThermalStatus : EventHandler&lt;Android.OS.PowerManager.ThermalStatusChangedEventArgs&gt; " Usage="member this.ThermalStatus : System.EventHandler&lt;Android.OS.PowerManager.ThermalStatusChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;Android.OS.PowerManager+ThermalStatusChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.OS.PowerManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.OS.PowerManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserActivity">
      <MemberSignature Language="C#" Value="public virtual void UserActivity (long when, bool noChangeLights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UserActivity(int64 when, bool noChangeLights) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.UserActivity(System.Int64,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member UserActivity : int64 * bool -&gt; unit&#xA;override this.UserActivity : int64 * bool -&gt; unit" Usage="powerManager.UserActivity (when, noChangeLights)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("userActivity", "(JZ)V", "GetUserActivity_JZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("userActivity", "(JZ)V", "GetUserActivity_JZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="when" Type="System.Int64" />
        <Parameter Name="noChangeLights" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="when">The time of the user activity, in the <c>SystemClock#uptimeMillis()</c>
            time base.  This timestamp is used to correctly order the user activity request with
            other power management functions.  It should be set
            to the timestamp of the input event that caused the user activity.</param>
        <param name="noChangeLights">If true, does not cause the keyboard backlight to turn on
            because of this event.  This is set when the power key is pressed.
            We want the device to stay on while the button is down, but we're about
            to turn off the screen so we don't want the keyboard backlight to turn on again.
            Otherwise the lights flash on and then off and it looks weird.</param>
        <summary>Notifies the power manager that user activity happened.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#userActivity(long,%20boolean)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.userActivity(long, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.PowerManager.WakeUp(System.Int64)" />
        <altmember cref="M:Android.OS.PowerManager.GoToSleep(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="WakeUp">
      <MemberSignature Language="C#" Value="public virtual void WakeUp (long time);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WakeUp(int64 time) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.WakeUp(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member WakeUp : int64 -&gt; unit&#xA;override this.WakeUp : int64 -&gt; unit" Usage="powerManager.WakeUp time" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("wakeUp", "(J)V", "GetWakeUp_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("wakeUp", "(J)V", "GetWakeUp_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="time" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="time">The time when the request to wake up was issued, in the
            <c>SystemClock#uptimeMillis()</c> time base.  This timestamp is used to correctly
            order the wake up request with other power management functions.  It should be set
            to the timestamp of the input event that caused the request to wake up.</param>
        <summary>Forces the <c>com.android.server.display.DisplayGroup#DEFAULT default display group</c>
            to turn on.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager#wakeUp(long)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.wakeUp(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
        <altmember cref="M:Android.OS.PowerManager.UserActivity(System.Int64, System.Boolean)" />
        <altmember cref="M:Android.OS.PowerManager.GoToSleep(System.Int64)" />
      </Docs>
    </Member>
  </Members>
</Type>
