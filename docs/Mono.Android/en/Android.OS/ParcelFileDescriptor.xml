<Type Name="ParcelFileDescriptor" FullName="Android.OS.ParcelFileDescriptor">
  <TypeSignature Language="C#" Value="public class ParcelFileDescriptor : Java.Lang.Object, Android.OS.IParcelable, IDisposable, Java.IO.ICloseable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ParcelFileDescriptor extends Java.Lang.Object implements class Android.OS.IParcelable, class Android.Runtime.IJavaObject, class Java.IO.ICloseable, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IParcelable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.IO.ICloseable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/os/ParcelFileDescriptor", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>The FileDescriptor returned by <c><see cref="M:Android.OS.Parcel.ReadFileDescriptor" /></c>, allowing
 you to close it when done with it.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">The FileDescriptor returned by <c><see cref="M:Android.OS.Parcel.ReadFileDescriptor" /></c>, allowing
 you to close it when done with it.
</para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ParcelFileDescriptor (Android.OS.ParcelFileDescriptor wrapped);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Android.OS.ParcelFileDescriptor wrapped) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register(".ctor", "(Landroid/os/ParcelFileDescriptor;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="descriptor" Type="Android.OS.ParcelFileDescriptor" />
      </Parameters>
      <Docs>
        <param name="wrapped">To be added.</param>
        <summary>Create a new ParcelFileDescriptor wrapped around another descriptor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new ParcelFileDescriptor wrapped around another descriptor. By
 default all method calls are delegated to the wrapped descriptor.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#ParcelFileDescriptor(android.os.ParcelFileDescriptor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ParcelFileDescriptor (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">This constructor is invoked by the runtime infrastructure (<see cref="M:Java.Lang.Object.GetObject{T,U}(System.IntPtr,Android.Runtime.JniHandleOwnership)" tool="ReplaceLinkValue" />) to create a new managed representation for a Java Native Interface object.</para>
          <para tool="javadoc-to-mdoc">The constructor will initializes the <see cref="P:Android.Runtime.IJavaObject.Handle" /> property of the new instance using <paramref name="javaReference" /> and <paramref name="transfer" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdoptFd">
      <MemberSignature Language="C#" Value="public static Android.OS.ParcelFileDescriptor AdoptFd (int fd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.ParcelFileDescriptor AdoptFd(int32 fd) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("adoptFd", "(I)Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fd">The native fd that the ParcelFileDescriptor should adopt.</param>
        <summary>Take ownership of a raw native fd in to a new ParcelFileDescriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Take ownership of a raw native fd in to a new ParcelFileDescriptor.
 The returned ParcelFileDescriptor now owns the given fd, and will be
 responsible for closing it.  You must not close the fd yourself.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#adoptFd(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 13" />
      </Docs>
    </Member>
    <Member MemberName="CanDetectErrors">
      <MemberSignature Language="C#" Value="public virtual bool CanDetectErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanDetectErrors() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canDetectErrors", "()Z", "GetCanDetectErrorsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indicates if this ParcelFileDescriptor can communicate and detect remote
 errors/crashes.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Indicates if this ParcelFileDescriptor can communicate and detect remote
 errors/crashes.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#canDetectErrors()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <altmember cref="M:Android.OS.ParcelFileDescriptor.CheckError" />
      </Docs>
      <since version="Added in API level 19" />
    </Member>
    <Member MemberName="CheckError">
      <MemberSignature Language="C#" Value="public virtual void CheckError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CheckError() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("checkError", "()V", "GetCheckErrorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Detect and throw if the other end of a pipe or socket pair encountered an
 error or crashed.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Detect and throw if the other end of a pipe or socket pair encountered an
 error or crashed. This allows a reader to distinguish between a valid EOF
 and an error/crash.
 </para>
          <para tool="javadoc-to-mdoc">
 If this ParcelFileDescriptor is unable to detect remote errors, it will
 return silently.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#checkError()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.IO.IOException">for normal errors.</exception>
        <exception cref="!:NoType:android/os/ParcelFileDescriptor$FileDescriptorDetachedException;Href=../../../reference/android/os/ParcelFileDescriptor.FileDescriptorDetachedException.html">if the remote side called <c><see cref="M:Android.OS.ParcelFileDescriptor.DetachFd" /></c>. Once detached, the remote
            side is unable to communicate any errors through
            <c><see cref="M:Android.OS.ParcelFileDescriptor.CloseWithError(System.String)" /></c>.</exception>
        <altmember cref="M:Android.OS.ParcelFileDescriptor.CanDetectErrors" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("close", "()V", "GetCloseHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Close the ParcelFileDescriptor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Close the ParcelFileDescriptor. This implementation closes the underlying
 OS resources allocated to represent this stream.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#close()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.IOException">If an error occurs attempting to close this ParcelFileDescriptor.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CloseWithError">
      <MemberSignature Language="C#" Value="public virtual void CloseWithError (string msg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseWithError(string msg) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("closeWithError", "(Ljava/lang/String;)V", "GetCloseWithError_Ljava_lang_String_Handler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="msg">describing the error; must not be null.
</param>
        <summary>Close the ParcelFileDescriptor, informing any peer that an error occurred
 while processing.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Close the ParcelFileDescriptor, informing any peer that an error occurred
 while processing. If the creator of this descriptor is not observing
 errors, it will close normally.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#closeWithError(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreatePipe">
      <MemberSignature Language="C#" Value="public static Android.OS.ParcelFileDescriptor[] CreatePipe ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.ParcelFileDescriptor[] CreatePipe() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createPipe", "()[Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create two ParcelFileDescriptors structured as a data pipe.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create two ParcelFileDescriptors structured as a data pipe.  The first
 ParcelFileDescriptor in the returned array is the read side; the second
 is the write side.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#createPipe()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateReliablePipe">
      <MemberSignature Language="C#" Value="public static Android.OS.ParcelFileDescriptor[] CreateReliablePipe ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.ParcelFileDescriptor[] CreateReliablePipe() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createReliablePipe", "()[Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create two ParcelFileDescriptors structured as a data pipe.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create two ParcelFileDescriptors structured as a data pipe. The first
 ParcelFileDescriptor in the returned array is the read side; the second
 is the write side.
 </para>
          <para tool="javadoc-to-mdoc">
 The write end has the ability to deliver an error message through
 <c><see cref="M:Android.OS.ParcelFileDescriptor.CloseWithError(System.String)" /></c> which can be handled by the read end
 calling <c><see cref="M:Android.OS.ParcelFileDescriptor.CheckError" /></c>, usually after detecting an EOF.
 This can also be used to detect remote crashes.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#createReliablePipe()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateReliableSocketPair">
      <MemberSignature Language="C#" Value="public static Android.OS.ParcelFileDescriptor[] CreateReliableSocketPair ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.ParcelFileDescriptor[] CreateReliableSocketPair() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createReliableSocketPair", "()[Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create two ParcelFileDescriptors structured as a pair of sockets
 connected to each other.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create two ParcelFileDescriptors structured as a pair of sockets
 connected to each other. The two sockets are indistinguishable.
 </para>
          <para tool="javadoc-to-mdoc">
 Both ends have the ability to deliver an error message through
 <c><see cref="M:Android.OS.ParcelFileDescriptor.CloseWithError(System.String)" /></c> which can be detected by the other end
 calling <c><see cref="M:Android.OS.ParcelFileDescriptor.CheckError" /></c>, usually after detecting an EOF.
 This can also be used to detect remote crashes.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#createReliableSocketPair()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="CreateSocketPair">
      <MemberSignature Language="C#" Value="public static Android.OS.ParcelFileDescriptor[] CreateSocketPair ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.ParcelFileDescriptor[] CreateSocketPair() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createSocketPair", "()[Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Create two ParcelFileDescriptors structured as a pair of sockets
 connected to each other.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create two ParcelFileDescriptors structured as a pair of sockets
 connected to each other. The two sockets are indistinguishable.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#createSocketPair()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Creator">
      <MemberSignature Language="C#" Value="public static Android.OS.IParcelableCreator Creator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.IParcelableCreator Creator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("CREATOR")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IParcelableCreator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
        </summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#CREATOR" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DescribeContents">
      <MemberSignature Language="C#" Value="public virtual int DescribeContents ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DescribeContents() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("describeContents", "()I", "GetDescribeContentsHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Describe the kinds of special objects contained in this Parcelable's
 marshalled representation.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#describeContents()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DetachFd">
      <MemberSignature Language="C#" Value="public virtual int DetachFd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 DetachFd() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("detachFd", "()I", "GetDetachFdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Return the native fd int for this ParcelFileDescriptor and detach it from
 the object here.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the native fd int for this ParcelFileDescriptor and detach it from
 the object here. You are now responsible for closing the fd in native
 code.
 </para>
          <para tool="javadoc-to-mdoc">
 You should not detach when the original creator of the descriptor is
 expecting a reliable signal through <c><see cref="M:Android.OS.ParcelFileDescriptor.Close" /></c> or
 <c><see cref="M:Android.OS.ParcelFileDescriptor.CloseWithError(System.String)" /></c>.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#detachFd()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
        <altmember cref="M:Android.OS.ParcelFileDescriptor.CanDetectErrors" />
      </Docs>
    </Member>
    <Member MemberName="Dup">
      <MemberSignature Language="C#" Value="public virtual Android.OS.ParcelFileDescriptor Dup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.ParcelFileDescriptor Dup() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dup", "()Landroid/os/ParcelFileDescriptor;", "GetDupHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary tool="true">Create a new ParcelFileDescriptor that is a dup of the existing
 FileDescriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new ParcelFileDescriptor that is a dup of the existing
 FileDescriptor.  This obeys standard POSIX semantics, where the
 new file descriptor shared state such as file position with the
 original file descriptor.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#dup()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Dup">
      <MemberSignature Language="C#" Value="public static Android.OS.ParcelFileDescriptor Dup (Java.IO.FileDescriptor orig);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.ParcelFileDescriptor Dup(class Java.IO.FileDescriptor orig) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dup", "(Ljava/io/FileDescriptor;)Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="orig" Type="Java.IO.FileDescriptor" />
      </Parameters>
      <Docs>
        <param name="orig">To be added.</param>
        <summary>Create a new ParcelFileDescriptor that is a dup of an existing
 FileDescriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new ParcelFileDescriptor that is a dup of an existing
 FileDescriptor.  This obeys standard POSIX semantics, where the
 new file descriptor shared state such as file position with the
 original file descriptor.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#dup(java.io.FileDescriptor)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 13" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="Fd">
      <MemberSignature Language="C#" Value="public virtual int Fd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Fd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFd", "()I", "GetGetFdHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the native fd int for this ParcelFileDescriptor.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the native fd int for this ParcelFileDescriptor.  The
 ParcelFileDescriptor still owns the fd, and it still must be closed
 through this API.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#getFd()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 12" />
      </Docs>
    </Member>
    <Member MemberName="FileDescriptor">
      <MemberSignature Language="C#" Value="public virtual Java.IO.FileDescriptor FileDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.IO.FileDescriptor FileDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getFileDescriptor", "()Ljava/io/FileDescriptor;", "GetGetFileDescriptorHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.IO.FileDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retrieve the actual FileDescriptor associated with this object.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Retrieve the actual FileDescriptor associated with this object.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#getFileDescriptor()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FromDatagramSocket">
      <MemberSignature Language="C#" Value="public static Android.OS.ParcelFileDescriptor FromDatagramSocket (Java.Net.DatagramSocket datagramSocket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.ParcelFileDescriptor FromDatagramSocket(class Java.Net.DatagramSocket datagramSocket) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("fromDatagramSocket", "(Ljava/net/DatagramSocket;)Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagramSocket" Type="Java.Net.DatagramSocket" />
      </Parameters>
      <Docs>
        <param name="datagramSocket">The DatagramSocket whose FileDescriptor is used
               to create a new ParcelFileDescriptor.</param>
        <summary>Create a new ParcelFileDescriptor from the specified DatagramSocket.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new ParcelFileDescriptor from the specified DatagramSocket.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#fromDatagramSocket(java.net.DatagramSocket)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
    <Member MemberName="FromFd">
      <MemberSignature Language="C#" Value="public static Android.OS.ParcelFileDescriptor FromFd (int fd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.ParcelFileDescriptor FromFd(int32 fd) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("fromFd", "(I)Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="fd">The native fd that the ParcelFileDescriptor should dup.</param>
        <summary>Create a new ParcelFileDescriptor from a raw native fd.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new ParcelFileDescriptor from a raw native fd.  The new
 ParcelFileDescriptor holds a dup of the original fd passed in here,
 so you must still close that fd as well as the new ParcelFileDescriptor.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#fromFd(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 13" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="FromSocket">
      <MemberSignature Language="C#" Value="public static Android.OS.ParcelFileDescriptor FromSocket (Java.Net.Socket socket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.ParcelFileDescriptor FromSocket(class Java.Net.Socket socket) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("fromSocket", "(Ljava/net/Socket;)Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="socket" Type="Java.Net.Socket" />
      </Parameters>
      <Docs>
        <param name="socket">The Socket whose FileDescriptor is used to create
               a new ParcelFileDescriptor.</param>
        <summary>Create a new ParcelFileDescriptor from the specified Socket.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new ParcelFileDescriptor from the specified Socket.  The new
 ParcelFileDescriptor holds a dup of the original FileDescriptor in
 the Socket, so you must still close the Socket as well as the new
 ParcelFileDescriptor.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#fromSocket(java.net.Socket)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static Android.OS.ParcelFileDescriptor Open (Java.IO.File file, Android.OS.ParcelFileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.ParcelFileDescriptor Open(class Java.IO.File file, valuetype Android.OS.ParcelFileMode mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("open", "(Ljava/io/File;I)Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="mode" Type="Android.OS.ParcelFileMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="file">The file to be opened.</param>
        <param name="mode">The desired access mode, must be one of
            <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_READ_ONLY" /></c>, <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_WRITE_ONLY" /></c>, or
            <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_READ_WRITE" /></c>; may also be any combination of
            <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_CREATE" /></c>, <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_TRUNCATE" /></c>,
            <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_WORLD_READABLE" /></c>, and
            <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_WORLD_WRITEABLE" /></c>.</param>
        <summary>Create a new ParcelFileDescriptor accessing a given file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new ParcelFileDescriptor accessing a given file.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#open(java.io.File, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.IO.FileNotFoundException">if the given file does not exist or can not
             be opened with the requested mode.</exception>
        <altmember cref="M:Android.OS.ParcelFileDescriptor.ParseMode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Open">
      <MemberSignature Language="C#" Value="public static Android.OS.ParcelFileDescriptor Open (Java.IO.File file, Android.OS.ParcelFileMode mode, Android.OS.Handler handler, Android.OS.ParcelFileDescriptor.IOnCloseListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Android.OS.ParcelFileDescriptor Open(class Java.IO.File file, valuetype Android.OS.ParcelFileMode mode, class Android.OS.Handler handler, class Android.OS.ParcelFileDescriptor/IOnCloseListener listener) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("open", "(Ljava/io/File;ILandroid/os/Handler;Landroid/os/ParcelFileDescriptor$OnCloseListener;)Landroid/os/ParcelFileDescriptor;", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileDescriptor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="mode" Type="Android.OS.ParcelFileMode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="handler" Type="Android.OS.Handler" />
        <Parameter Name="listener" Type="Android.OS.ParcelFileDescriptor+IOnCloseListener" />
      </Parameters>
      <Docs>
        <param name="file">The file to be opened.</param>
        <param name="mode">The desired access mode, must be one of
            <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_READ_ONLY" /></c>, <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_WRITE_ONLY" /></c>, or
            <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_READ_WRITE" /></c>; may also be any combination of
            <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_CREATE" /></c>, <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_TRUNCATE" /></c>,
            <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_WORLD_READABLE" /></c>, and
            <c><see cref="!:Android.OS.ParcelFileDescriptor.MODE_WORLD_WRITEABLE" /></c>.</param>
        <param name="handler">to call listener from; must not be null.</param>
        <param name="listener">to be invoked when the returned descriptor has been
            closed; must not be null.</param>
        <summary>Create a new ParcelFileDescriptor accessing a given file.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Create a new ParcelFileDescriptor accessing a given file.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#open(java.io.File, int, android.os.Handler, android.os.ParcelFileDescriptor.OnCloseListener)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.IO.FileNotFoundException">if the given file does not exist or can not
             be opened with the requested mode.</exception>
        <exception cref="T:Java.IO.IOException" />
        <altmember cref="M:Android.OS.ParcelFileDescriptor.ParseMode(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ParseMode">
      <MemberSignature Language="C#" Value="public static Android.OS.ParcelFileMode ParseMode (string mode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype Android.OS.ParcelFileMode ParseMode(string mode) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("parseMode", "(Ljava/lang/String;)I", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.ParcelFileMode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mode" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mode">The string representation of the file mode.</param>
        <summary>Converts a string representing a file mode, such as "rw", into a bitmask suitable for use
 with <c><see cref="M:Android.OS.ParcelFileDescriptor.Open(Java.IO.File,Android.OS.ParcelFileMode)" /></c>.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Converts a string representing a file mode, such as "rw", into a bitmask suitable for use
 with <c><see cref="M:Android.OS.ParcelFileDescriptor.Open(Java.IO.File,Android.OS.ParcelFileMode)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#parseMode(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <exception cref="T:Java.Lang.IllegalArgumentException">if the given string does not match a known file mode.
</exception>
      </Docs>
    </Member>
    <Member MemberName="StatSize">
      <MemberSignature Language="C#" Value="public virtual long StatSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 StatSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getStatSize", "()J", "GetGetStatSizeHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the total size of the file representing this fd, as determined by
 <c>stat()</c>.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Return the total size of the file representing this fd, as determined by
 <c>stat()</c>. Returns -1 if the fd is not a file.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#getStatSize()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteToParcel">
      <MemberSignature Language="C#" Value="public virtual void WriteToParcel (Android.OS.Parcel out, Android.OS.ParcelableWriteFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteToParcel(class Android.OS.Parcel out, valuetype Android.OS.ParcelableWriteFlags flags) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="out" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.ParcelableWriteFlags" />
      </Parameters>
      <Docs>
        <param name="out">The Parcel in which the object should be written.</param>
        <param name="flags">Additional flags about how the object should be written.
 May be 0 or <c><see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" /></c>.
</param>
        <summary>Flatten this object in to a Parcel.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flatten this object in to a Parcel.
 If <c><see cref="F:Android.OS.Parcelable.ParcelableWriteReturnValue" /></c> is set in flags,
 the file descriptor will be closed after a copy is written to the Parcel.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/ParcelFileDescriptor.html#writeToParcel(android.os.Parcel, int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
