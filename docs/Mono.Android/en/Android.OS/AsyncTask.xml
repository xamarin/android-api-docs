<Type Name="AsyncTask" FullName="Android.OS.AsyncTask">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsyncTask&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncTask abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class AsyncTask : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsyncTask extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.OS.AsyncTask" />
  <TypeSignature Language="F#" Value="type AsyncTask = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/os/AsyncTask", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/os/AsyncTask", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[Java.Interop.JavaTypeParameters(new System.String[] { "Params", "Progress", "Result" })]</AttributeName>
      <AttributeName Language="F#">[&lt;Java.Interop.JavaTypeParameters(new System.String[] { "Params", "Progress", "Result" })&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This class is obsoleted in this android platform")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0", "This class is obsoleted in this android platform")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="3">
    <summary>AsyncTask was intended to enable proper and easy use of the UI thread.</summary>
    <remarks>
      <para>AsyncTask was intended to enable proper and easy use of the UI thread. However, the most
            common use case was for integrating into UI, and that would cause Context leaks, missed
            callbacks, or crashes on configuration changes. It also has inconsistent behavior on different
            versions of the platform, swallows exceptions from <c>doInBackground</c>, and does not provide
            much utility over using <c>Executor</c>s directly.</para>
      <para>AsyncTask is designed to be a helper class around <c>Thread</c> and <c>Handler</c>
            and does not constitute a generic threading framework. AsyncTasks should ideally be
            used for short operations (a few seconds at the most.) If you need to keep threads
            running for long periods of time, it is highly recommended you use the various APIs
            provided by the <c>java.util.concurrent</c> package such as <c>Executor</c>,
            <c>ThreadPoolExecutor</c> and <c>FutureTask</c>.</para>
      <para>An asynchronous task is defined by a computation that runs on a background thread and
            whose result is published on the UI thread. An asynchronous task is defined by 3 generic
            types, called <c>Params</c>, <c>Progress</c> and <c>Result</c>,
            and 4 steps, called <c>onPreExecute</c>, <c>doInBackground</c>,
            <c>onProgressUpdate</c> and <c>onPostExecute</c>.</para>
      <para>&lt;div class="special reference"&gt;
            &lt;h3&gt;Developer Guides&lt;/h3&gt;</para>
      <para>For more information about using tasks and threads, read the
            <see href="https://developer.android.com/guide/components/processes-and-threads.html">Processes and
            Threads</see> developer guide.</para>
      <para>&lt;/div&gt;
            
            &lt;h2&gt;Usage&lt;/h2&gt;</para>
      <para>AsyncTask must be subclassed to be used. The subclass will override at least
            one method (<c>#doInBackground</c>), and most often will override a
            second one (<c>#onPostExecute</c>.)</para>
      <para>Here is an example of subclassing:</para>
      <code lang="text/java">private class DownloadFilesTask extends AsyncTask&amp;lt;URL, Integer, Long&amp;gt; {
                protected Long doInBackground(URL... urls) {
                    int count = urls.length;
                    long totalSize = 0;
                    for (int i = 0; i &amp;lt; count; i++) {
                        totalSize += Downloader.downloadFile(urls[i]);
                        publishProgress((int) ((i / (float) count) * 100));
                        // Escape early if cancel() is called
                        if (isCancelled()) break;
                    }
                    return totalSize;
                }
            
                protected void onProgressUpdate(Integer... progress) {
                    setProgressPercent(progress[0]);
                }
            
                protected void onPostExecute(Long result) {
                    showDialog("Downloaded " + result + " bytes");
                }
            }
            </code>
      <para>Once created, a task is executed very simply:</para>
      <code lang="text/java">new DownloadFilesTask().execute(url1, url2, url3);
            </code>
      <para>&lt;h2&gt;AsyncTask's generic types&lt;/h2&gt;</para>
      <para>The three types used by an asynchronous task are the following:</para>
      <para>&lt;ol&gt;
                &lt;li&gt;<c>Params</c>, the type of the parameters sent to the task upon
                execution.&lt;/li&gt;
                &lt;li&gt;<c>Progress</c>, the type of the progress units published during
                the background computation.&lt;/li&gt;
                &lt;li&gt;<c>Result</c>, the type of the result of the background
                computation.&lt;/li&gt;
            &lt;/ol&gt;</para>
      <para>Not all types are always used by an asynchronous task. To mark a type as unused,
            simply use the type <c>Void</c>:</para>
      <code lang="text/java">private class MyTask extends AsyncTask&amp;lt;Void, Void, Void&amp;gt; { ... }
            </code>
      <para>&lt;h2&gt;The 4 steps&lt;/h2&gt;</para>
      <para>When an asynchronous task is executed, the task goes through 4 steps:</para>
      <para>&lt;ol&gt;
                &lt;li&gt;<c>#onPreExecute()</c>, invoked on the UI thread before the task
                is executed. This step is normally used to setup the task, for instance by
                showing a progress bar in the user interface.&lt;/li&gt;
                &lt;li&gt;<c>#doInBackground</c>, invoked on the background thread
                immediately after <c>#onPreExecute()</c> finishes executing. This step is used
                to perform background computation that can take a long time. The parameters
                of the asynchronous task are passed to this step. The result of the computation must
                be returned by this step and will be passed back to the last step. This step
                can also use <c>#publishProgress</c> to publish one or more units
                of progress. These values are published on the UI thread, in the
                <c>#onProgressUpdate</c> step.&lt;/li&gt;
                &lt;li&gt;<c>#onProgressUpdate</c>, invoked on the UI thread after a
                call to <c>#publishProgress</c>. The timing of the execution is
                undefined. This method is used to display any form of progress in the user
                interface while the background computation is still executing. For instance,
                it can be used to animate a progress bar or show logs in a text field.&lt;/li&gt;
                &lt;li&gt;<c>#onPostExecute</c>, invoked on the UI thread after the background
                computation finishes. The result of the background computation is passed to
                this step as a parameter.&lt;/li&gt;
            &lt;/ol&gt;
            
            &lt;h2&gt;Cancelling a task&lt;/h2&gt;</para>
      <para>A task can be cancelled at any time by invoking <c>#cancel(boolean)</c>. Invoking
            this method will cause subsequent calls to <c>#isCancelled()</c> to return true.
            After invoking this method, <c>#onCancelled(Object)</c>, instead of
            <c>#onPostExecute(Object)</c> will be invoked after <c>#doInBackground(Object[])</c>
            returns. To ensure that a task is cancelled as quickly as possible, you should always
            check the return value of <c>#isCancelled()</c> periodically from
            <c>#doInBackground(Object[])</c>, if possible (inside a loop for instance.)</para>
      <para>&lt;h2&gt;Threading rules&lt;/h2&gt;</para>
      <para>There are a few threading rules that must be followed for this class to
            work properly:</para>
      <para>&lt;ul&gt;
                &lt;li&gt;The AsyncTask class must be loaded on the UI thread. This is done
                automatically as of <c>android.os.Build.VERSION_CODES#JELLY_BEAN</c>.&lt;/li&gt;
                &lt;li&gt;The task instance must be created on the UI thread.&lt;/li&gt;
                &lt;li&gt;<c>#execute</c> must be invoked on the UI thread.&lt;/li&gt;
                &lt;li&gt;Do not call <c>#onPreExecute()</c>, <c>#onPostExecute</c>,
                <c>#doInBackground</c>, <c>#onProgressUpdate</c> manually.&lt;/li&gt;
                &lt;li&gt;The task can be executed only once (an exception will be thrown if
                a second execution is attempted.)&lt;/li&gt;
            &lt;/ul&gt;
            
            &lt;h2&gt;Memory observability&lt;/h2&gt;</para>
      <para>AsyncTask guarantees that all callback calls are synchronized to ensure the following
            without explicit synchronizations.</para>
      <para>&lt;ul&gt;
                &lt;li&gt;The memory effects of <c>#onPreExecute</c>, and anything else
                executed before the call to <c>#execute</c>, including the construction
                of the AsyncTask object, are visible to <c>#doInBackground</c>.
                &lt;li&gt;The memory effects of <c>#doInBackground</c> are visible to
                <c>#onPostExecute</c>.
                &lt;li&gt;Any memory effects of <c>#doInBackground</c> preceding a call
                to <c>#publishProgress</c> are visible to the corresponding
                <c>#onProgressUpdate</c> call. (But <c>#doInBackground</c> continues to
                run, and care needs to be taken that later updates in <c>#doInBackground</c>
                do not interfere with an in-progress <c>#onProgressUpdate</c> call.)
                &lt;li&gt;Any memory effects preceding a call to <c>#cancel</c> are visible
                after a call to <c>#isCancelled</c> that returns true as a result, or
                during and after a resulting call to <c>#onCancelled</c>.
            &lt;/ul&gt;
            
            &lt;h2&gt;Order of execution&lt;/h2&gt;</para>
      <para>When first introduced, AsyncTasks were executed serially on a single background
            thread. Starting with <c>android.os.Build.VERSION_CODES#DONUT</c>, this was changed
            to a pool of threads allowing multiple tasks to operate in parallel. Starting with
            <c>android.os.Build.VERSION_CODES#HONEYCOMB</c>, tasks are executed on a single
            thread to avoid common application errors caused by parallel execution.</para>
      <para>If you truly want parallel execution, you can invoke
            <c>#executeOnExecutor(java.util.concurrent.Executor, Object[])</c> with
            <c>#THREAD_POOL_EXECUTOR</c>.</para>
      <para>This member is deprecated. Use the standard <c>java.util.concurrent</c> or
              <see href="https://developer.android.com/topic/libraries/architecture/coroutines">
              Kotlin concurrency utilities</see> instead.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/os/AsyncTask" title="Reference documentation">Java documentation for <code>android.os.AsyncTask</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 3" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsyncTask();" />
      <MemberSignature Language="C#" Value="public AsyncTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Creates a new asynchronous task.</summary>
        <remarks>
          <para>Creates a new asynchronous task. This constructor must be invoked on the UI thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#AsyncTask()" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.AsyncTask()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncTask(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected AsyncTask (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.OS.AsyncTask : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.OS.AsyncTask" Usage="new Android.OS.AsyncTask (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="VB.NET" Value="Public Function Cancel (mayInterruptIfRunning As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cancel(bool mayInterruptIfRunning);" />
      <MemberSignature Language="C#" Value="public bool Cancel (bool mayInterruptIfRunning);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Cancel(bool mayInterruptIfRunning) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.Cancel(System.Boolean)" />
      <MemberSignature Language="F#" Value="member this.Cancel : bool -&gt; bool" Usage="asyncTask.Cancel mayInterruptIfRunning" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("cancel", "(Z)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("cancel", "(Z)Z", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mayInterruptIfRunning" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="mayInterruptIfRunning">
          <c>true</c> if the thread executing this
                   task should be interrupted; otherwise, in-progress tasks are allowed
                   to complete.</param>
        <summary>Attempts to cancel execution of this task.</summary>
        <returns>
          <c>false</c> if the task could not be cancelled,
                    typically because it has already completed normally;
                    <c>true</c> otherwise</returns>
        <remarks>
          <para>Attempts to cancel execution of this task.  This attempt will
            fail if the task has already completed, already been cancelled,
            or could not be cancelled for some other reason. If successful,
            and this task has not started when <c>cancel</c> is called,
            this task should never run. If the task has already started,
            then the <c>mayInterruptIfRunning</c> parameter determines
            whether the thread executing this task should be interrupted in
            an attempt to stop the task.</para>
          <para>Calling this method will result in <c>#onCancelled(Object)</c> being
            invoked on the UI thread after <c>#doInBackground(Object[])</c> returns.
            Calling this method guarantees that onPostExecute(Object) is never
            subsequently invoked, even if <c>cancel</c> returns false, but
            <c>#onPostExecute</c> has not yet run.  To finish the
            task as early as possible, check <c>#isCancelled()</c> periodically from
            <c>#doInBackground(Object[])</c>.</para>
          <para>This only requests cancellation. It never waits for a running
            background task to terminate, even if <c>mayInterruptIfRunning</c> is
            true.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#cancel(boolean)" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.cancel(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="DoInBackground">
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function DoInBackground (ParamArray params As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract Java::Lang::Object ^ DoInBackground(... cli::array &lt;Java::Lang::Object ^&gt; ^ params);" />
      <MemberSignature Language="C#" Value="protected abstract Java.Lang.Object? DoInBackground (params Java.Lang.Object[]? params);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class Java.Lang.Object DoInBackground(class Java.Lang.Object[] params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.DoInBackground(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="abstract member DoInBackground : Java.Lang.Object[] -&gt; Java.Lang.Object" Usage="asyncTask.DoInBackground params" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("doInBackground", "([Ljava/lang/Object;)Ljava/lang/Object;", "GetDoInBackground_arrayLjava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("doInBackground", "([Ljava/lang/Object;)Ljava/lang/Object;", "GetDoInBackground_arrayLjava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="params">The parameters of the task.</param>
        <summary>Override this method to perform a computation on a background thread.</summary>
        <returns>A result, defined by the subclass of this task.</returns>
        <remarks>
          <para>Override this method to perform a computation on a background thread. The
            specified parameters are the parameters passed to <c>#execute</c>
            by the caller of this task.
            
            This will normally run on a background thread. But to better
            support testing frameworks, it is recommended that this also tolerates
            direct execution on the foreground thread, as part of the <c>#execute</c> call.
            
            This method can call <c>#publishProgress</c> to publish updates
            on the UI thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#doInBackground(Params...)" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.doInBackground(Params...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Execute (runnable As IRunnable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Execute(Java::Lang::IRunnable ^ runnable);" />
      <MemberSignature Language="C#" Value="public static void Execute (Java.Lang.IRunnable? runnable);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Execute(class Java.Lang.IRunnable runnable) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.Execute(Java.Lang.IRunnable)" />
      <MemberSignature Language="F#" Value="static member Execute : Java.Lang.IRunnable -&gt; unit" Usage="Android.OS.AsyncTask.Execute runnable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("execute", "(Ljava/lang/Runnable;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("execute", "(Ljava/lang/Runnable;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="runnable" Type="Java.Lang.IRunnable" />
      </Parameters>
      <Docs>
        <param name="runnable">To be added.</param>
        <summary>Convenience version of <c>#execute(Object...)</c> for use with
            a simple Runnable object.</summary>
        <returns>This instance of AsyncTask.</returns>
        <remarks>
          <para>Convenience version of <c>#execute(Object...)</c> for use with
            a simple Runnable object. See <c>#execute(Object[])</c> for more
            information on the order of execution.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#execute(java.lang.Runnable)" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.execute(java.lang.Runnable)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="VB.NET" Value="Public Function Execute (ParamArray params As Object()) As AsyncTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::OS::AsyncTask ^ Execute(... cli::array &lt;Java::Lang::Object ^&gt; ^ params);" />
      <MemberSignature Language="C#" Value="public Android.OS.AsyncTask? Execute (params Java.Lang.Object[]? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.OS.AsyncTask Execute(class Java.Lang.Object[] params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.Execute(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="member this.Execute : Java.Lang.Object[] -&gt; Android.OS.AsyncTask" Usage="asyncTask.Execute params" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("execute", "([Ljava/lang/Object;)Landroid/os/AsyncTask;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("execute", "([Ljava/lang/Object;)Landroid/os/AsyncTask;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.AsyncTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="params" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="params">The parameters of the task.</param>
        <summary>Executes the task with the specified parameters.</summary>
        <returns>This instance of AsyncTask.</returns>
        <remarks>
          <para>Executes the task with the specified parameters. The task returns
            itself (this) so that the caller can keep a reference to it.</para>
          <para>Note: this function schedules the task on a queue for a single background
            thread or pool of threads depending on the platform version.  When first
            introduced, AsyncTasks were executed serially on a single background thread.
            Starting with <c>android.os.Build.VERSION_CODES#DONUT</c>, this was changed
            to a pool of threads allowing multiple tasks to operate in parallel. Starting
            <c>android.os.Build.VERSION_CODES#HONEYCOMB</c>, tasks are back to being
            executed on a single thread to avoid common application errors caused
            by parallel execution.  If you truly want parallel execution, you can use
            the <c>#executeOnExecutor</c> version of this method
            with <c>#THREAD_POOL_EXECUTOR</c>; however, see commentary there for warnings
            on its use.</para>
          <para>This method must be invoked on the UI thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#execute(Params...)" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.execute(Params...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteOnExecutor">
      <MemberSignature Language="VB.NET" Value="Public Function ExecuteOnExecutor (exec As IExecutor, ParamArray params As Object()) As AsyncTask" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::OS::AsyncTask ^ ExecuteOnExecutor(Java::Util::Concurrent::IExecutor ^ exec, ... cli::array &lt;Java::Lang::Object ^&gt; ^ params);" />
      <MemberSignature Language="C#" Value="public Android.OS.AsyncTask? ExecuteOnExecutor (Java.Util.Concurrent.IExecutor? exec, params Java.Lang.Object[]? params);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.OS.AsyncTask ExecuteOnExecutor(class Java.Util.Concurrent.IExecutor exec, class Java.Lang.Object[] params) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.ExecuteOnExecutor(Java.Util.Concurrent.IExecutor,Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="member this.ExecuteOnExecutor : Java.Util.Concurrent.IExecutor * Java.Lang.Object[] -&gt; Android.OS.AsyncTask" Usage="asyncTask.ExecuteOnExecutor (exec, params)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("executeOnExecutor", "(Ljava/util/concurrent/Executor;[Ljava/lang/Object;)Landroid/os/AsyncTask;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("executeOnExecutor", "(Ljava/util/concurrent/Executor;[Ljava/lang/Object;)Landroid/os/AsyncTask;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.AsyncTask</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exec" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="params" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="exec">The executor to use.  <c>#THREAD_POOL_EXECUTOR</c> is available as a
                         convenient process-wide thread pool for tasks that are loosely coupled.</param>
        <param name="params">The parameters of the task.</param>
        <summary>Executes the task with the specified parameters.</summary>
        <returns>This instance of AsyncTask.</returns>
        <remarks>
          <para>Executes the task with the specified parameters. The task returns
            itself (this) so that the caller can keep a reference to it.</para>
          <para>This method is typically used with <c>#THREAD_POOL_EXECUTOR</c> to
            allow multiple tasks to run in parallel on a pool of threads managed by
            AsyncTask, however you can also use your own <c>Executor</c> for custom
            behavior.</para>
          <para>&lt;em&gt;Warning:&lt;/em&gt; Allowing multiple tasks to run in parallel from
            a thread pool is generally &lt;em&gt;not&lt;/em&gt; what one wants, because the order
            of their operation is not defined.  For example, if these tasks are used
            to modify any state in common (such as writing a file due to a button click),
            there are no guarantees on the order of the modifications.
            Without careful work it is possible in rare cases for the newer version
            of the data to be over-written by an older one, leading to obscure data
            loss and stability issues.  Such changes are best
            executed in serial; to guarantee such work is serialized regardless of
            platform version you can use this function with <c>#SERIAL_EXECUTOR</c>.</para>
          <para>This method must be invoked on the UI thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#executeOnExecutor(java.util.concurrent.Executor,%20Params...)" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.executeOnExecutor(java.util.concurrent.Executor, Params...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="VB.NET" Value="Public Function Get () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::Object ^ Get();" />
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Get ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object Get() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.Get" />
      <MemberSignature Language="F#" Value="member this.Get : unit -&gt; Java.Lang.Object" Usage="asyncTask.Get " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "()Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "()Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Waits if necessary for the computation to complete, and then
            retrieves its result.</summary>
        <returns>The computed result.</returns>
        <remarks>
          <para>Waits if necessary for the computation to complete, and then
            retrieves its result.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#get()" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.get()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Util.Concurrent.CancellationException">If the computation was cancelled.</exception>
        <exception cref="T:Java.Util.Concurrent.ExecutionException">If the computation threw an exception.</exception>
        <exception cref="T:Java.Lang.InterruptedException">If the current thread was interrupted
         while waiting.
</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="VB.NET" Value="Public Function Get (timeout As Long, unit As TimeUnit) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::Object ^ Get(long timeout, Java::Util::Concurrent::TimeUnit ^ unit);" />
      <MemberSignature Language="C#" Value="public Java.Lang.Object? Get (long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Java.Lang.Object Get(int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.Get(System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="member this.Get : int64 * Java.Util.Concurrent.TimeUnit -&gt; Java.Lang.Object" Usage="asyncTask.Get (timeout, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("get", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("get", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">Time to wait before cancelling the operation.</param>
        <param name="unit">The time unit for the timeout.</param>
        <summary>Waits if necessary for at most the given time for the computation
            to complete, and then retrieves its result.</summary>
        <returns>The computed result.</returns>
        <remarks>
          <para>Waits if necessary for at most the given time for the computation
            to complete, and then retrieves its result.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#get(long,%20java.util.concurrent.TimeUnit)" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.get(long, java.util.concurrent.TimeUnit)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Java.Util.Concurrent.CancellationException">If the computation was cancelled.</exception>
        <exception cref="T:Java.Util.Concurrent.ExecutionException">If the computation threw an exception.</exception>
        <exception cref="T:Java.Lang.InterruptedException">If the current thread was interrupted
         while waiting.</exception>
        <exception cref="T:Java.Util.Concurrent.TimeoutException">If the wait timed out.
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync () As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;Java::Lang::Object ^&gt; ^ GetAsync();" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.Lang.Object?&gt; GetAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Lang.Object&gt; GetAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.GetAsync" />
      <MemberSignature Language="F#" Value="member this.GetAsync : unit -&gt; System.Threading.Tasks.Task&lt;Java.Lang.Object&gt;" Usage="asyncTask.GetAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Lang.Object&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAsync">
      <MemberSignature Language="VB.NET" Value="Public Function GetAsync (timeout As Long, unit As TimeUnit) As Task(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;Java::Lang::Object ^&gt; ^ GetAsync(long timeout, Java::Util::Concurrent::TimeUnit ^ unit);" />
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Java.Lang.Object?&gt; GetAsync (long timeout, Java.Util.Concurrent.TimeUnit? unit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class Java.Lang.Object&gt; GetAsync(int64 timeout, class Java.Util.Concurrent.TimeUnit unit) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.GetAsync(System.Int64,Java.Util.Concurrent.TimeUnit)" />
      <MemberSignature Language="F#" Value="member this.GetAsync : int64 * Java.Util.Concurrent.TimeUnit -&gt; System.Threading.Tasks.Task&lt;Java.Lang.Object&gt;" Usage="asyncTask.GetAsync (timeout, unit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Java.Lang.Object&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 1, 2 })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int64" />
        <Parameter Name="unit" Type="Java.Util.Concurrent.TimeUnit" />
      </Parameters>
      <Docs>
        <param name="timeout">To be added.</param>
        <param name="unit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStatus">
      <MemberSignature Language="VB.NET" Value="Public Function GetStatus () As AsyncTask.Status" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Android::OS::AsyncTask::Status ^ GetStatus();" />
      <MemberSignature Language="C#" Value="public Android.OS.AsyncTask.Status? GetStatus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Android.OS.AsyncTask/Status GetStatus() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.GetStatus" />
      <MemberSignature Language="F#" Value="member this.GetStatus : unit -&gt; Android.OS.AsyncTask.Status" Usage="asyncTask.GetStatus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getStatus", "()Landroid/os/AsyncTask$Status;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getStatus", "()Landroid/os/AsyncTask$Status;", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.AsyncTask+Status</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the current status of this task.</summary>
        <returns>The current status.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#getStatus()" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.getStatus()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="IsCancelled">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCancelled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancelled { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsCancelled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancelled" />
      <MemberSignature Language="DocId" Value="P:Android.OS.AsyncTask.IsCancelled" />
      <MemberSignature Language="F#" Value="member this.IsCancelled : bool" Usage="Android.OS.AsyncTask.IsCancelled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isCancelled", "()Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isCancelled", "()Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns <c>true</c> if this task was cancelled before it completed
            normally.</summary>
        <value>
          <c>true</c> if task was cancelled before it completed</value>
        <remarks>
          <para>Returns <c>true</c> if this task was cancelled before it completed
            normally. If you are calling <c>#cancel(boolean)</c> on the task,
            the value returned by this method should be checked periodically from
            <c>#doInBackground(Object[])</c> to end the task as soon as possible.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#isCancelled()" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.isCancelled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.OS.AsyncTask.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.OS.AsyncTask.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCancelled">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelled ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelled();" />
      <MemberSignature Language="C#" Value="protected virtual void OnCancelled ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelled() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.OnCancelled" />
      <MemberSignature Language="F#" Value="abstract member OnCancelled : unit -&gt; unit&#xA;override this.OnCancelled : unit -&gt; unit" Usage="asyncTask.OnCancelled " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCancelled", "()V", "GetOnCancelledHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCancelled", "()V", "GetOnCancelledHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Applications should preferably override <c>#onCancelled(Object)</c>.</summary>
        <remarks>
          <para>Applications should preferably override <c>#onCancelled(Object)</c>.
            This method is invoked by the default implementation of
            <c>#onCancelled(Object)</c>.
            The default version does nothing.</para>
          <para>Runs on the UI thread after <c>#cancel(boolean)</c> is invoked and
            <c>#doInBackground(Object[])</c> has finished.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#onCancelled()" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.onCancelled()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelled">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelled (result As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelled(Java::Lang::Object ^ result);" />
      <MemberSignature Language="C#" Value="protected virtual void OnCancelled (Java.Lang.Object? result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelled(class Java.Lang.Object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.OnCancelled(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member OnCancelled : Java.Lang.Object -&gt; unit&#xA;override this.OnCancelled : Java.Lang.Object -&gt; unit" Usage="asyncTask.OnCancelled result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onCancelled", "(Ljava/lang/Object;)V", "GetOnCancelled_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onCancelled", "(Ljava/lang/Object;)V", "GetOnCancelled_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="result">The result, if any, computed in
                          <c>#doInBackground(Object[])</c>, can be null</param>
        <summary>Runs on the UI thread after <c>#cancel(boolean)</c> is invoked and
            <c>#doInBackground(Object[])</c> has finished.</summary>
        <remarks>
          <para>Runs on the UI thread after <c>#cancel(boolean)</c> is invoked and
            <c>#doInBackground(Object[])</c> has finished.</para>
          <para>The default implementation simply invokes <c>#onCancelled()</c> and
            ignores the result. If you write your own implementation, do not call
            <c>super.onCancelled(result)</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#onCancelled(Result)" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.onCancelled(Result)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostExecute">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostExecute (result As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostExecute(Java::Lang::Object ^ result);" />
      <MemberSignature Language="C#" Value="protected virtual void OnPostExecute (Java.Lang.Object? result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostExecute(class Java.Lang.Object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.OnPostExecute(Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member OnPostExecute : Java.Lang.Object -&gt; unit&#xA;override this.OnPostExecute : Java.Lang.Object -&gt; unit" Usage="asyncTask.OnPostExecute result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPostExecute", "(Ljava/lang/Object;)V", "GetOnPostExecute_Ljava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPostExecute", "(Ljava/lang/Object;)V", "GetOnPostExecute_Ljava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="result">The result of the operation computed by <c>#doInBackground</c>.</param>
        <summary>Runs on the UI thread after <c>#doInBackground</c>.</summary>
        <remarks>
          <para>Runs on the UI thread after <c>#doInBackground</c>. The
            specified result is the value returned by <c>#doInBackground</c>.
            To better support testing frameworks, it is recommended that this be
            written to tolerate direct execution as part of the execute() call.
            The default version does nothing.</para>
          <para>This method won't be invoked if the task was cancelled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#onPostExecute(Result)" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.onPostExecute(Result)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreExecute">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreExecute ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreExecute();" />
      <MemberSignature Language="C#" Value="protected virtual void OnPreExecute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreExecute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.OnPreExecute" />
      <MemberSignature Language="F#" Value="abstract member OnPreExecute : unit -&gt; unit&#xA;override this.OnPreExecute : unit -&gt; unit" Usage="asyncTask.OnPreExecute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onPreExecute", "()V", "GetOnPreExecuteHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onPreExecute", "()V", "GetOnPreExecuteHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Runs on the UI thread before <c>#doInBackground</c>.</summary>
        <remarks>
          <para>Runs on the UI thread before <c>#doInBackground</c>.
            Invoked directly by <c>#execute</c> or <c>#executeOnExecutor</c>.
            The default version does nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#onPreExecute()" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.onPreExecute()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="OnProgressUpdate">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnProgressUpdate (ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnProgressUpdate(... cli::array &lt;Java::Lang::Object ^&gt; ^ values);" />
      <MemberSignature Language="C#" Value="protected virtual void OnProgressUpdate (params Java.Lang.Object[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnProgressUpdate(class Java.Lang.Object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.OnProgressUpdate(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="abstract member OnProgressUpdate : Java.Lang.Object[] -&gt; unit&#xA;override this.OnProgressUpdate : Java.Lang.Object[] -&gt; unit" Usage="asyncTask.OnProgressUpdate values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onProgressUpdate", "([Ljava/lang/Object;)V", "GetOnProgressUpdate_arrayLjava_lang_Object_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onProgressUpdate", "([Ljava/lang/Object;)V", "GetOnProgressUpdate_arrayLjava_lang_Object_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">The values indicating progress.</param>
        <summary>Runs on the UI thread after <c>#publishProgress</c> is invoked.</summary>
        <remarks>
          <para>Runs on the UI thread after <c>#publishProgress</c> is invoked.
            The specified values are the values passed to <c>#publishProgress</c>.
            The default version does nothing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#onProgressUpdate(Progress...)" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.onProgressUpdate(Progress...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PublishProgress">
      <MemberSignature Language="VB.NET" Value="Protected Sub PublishProgress (ParamArray values As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PublishProgress(... cli::array &lt;Java::Lang::Object ^&gt; ^ values);" />
      <MemberSignature Language="C#" Value="protected void PublishProgress (params Java.Lang.Object[]? values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PublishProgress(class Java.Lang.Object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.AsyncTask.PublishProgress(Java.Lang.Object[])" />
      <MemberSignature Language="F#" Value="member this.PublishProgress : Java.Lang.Object[] -&gt; unit" Usage="asyncTask.PublishProgress values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("publishProgress", "([Ljava/lang/Object;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("publishProgress", "([Ljava/lang/Object;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="Java.Lang.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">The progress values to update the UI with.</param>
        <summary>This method can be invoked from <c>#doInBackground</c> to
            publish updates on the UI thread while the background computation is
            still running.</summary>
        <remarks>
          <para>This method can be invoked from <c>#doInBackground</c> to
            publish updates on the UI thread while the background computation is
            still running. Each call to this method will trigger the execution of
            <c>#onProgressUpdate</c> on the UI thread.
            
            <c>#onProgressUpdate</c> will not be called if the task has been
            canceled.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#publishProgress(Progress...)" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.publishProgress(Progress...)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerialExecutor">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SerialExecutor As IExecutor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Java::Util::Concurrent::IExecutor ^ SerialExecutor { Java::Util::Concurrent::IExecutor ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.IExecutor? SerialExecutor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Util.Concurrent.IExecutor SerialExecutor" />
      <MemberSignature Language="DocId" Value="P:Android.OS.AsyncTask.SerialExecutor" />
      <MemberSignature Language="F#" Value="member this.SerialExecutor : Java.Util.Concurrent.IExecutor" Usage="Android.OS.AsyncTask.SerialExecutor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("SERIAL_EXECUTOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("SERIAL_EXECUTOR")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.IExecutor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An <c>Executor</c> that executes tasks one at a time in serial
            order.</summary>
        <value>To be added.</value>
        <remarks>
          <para>An <c>Executor</c> that executes tasks one at a time in serial
            order.  This serialization is global to a particular process.</para>
          <para>This member is deprecated. Globally serializing tasks results in excessive queuing for unrelated operations.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#SERIAL_EXECUTOR" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.SERIAL_EXECUTOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThreadPoolExecutor">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ThreadPoolExecutor As IExecutor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Java::Util::Concurrent::IExecutor ^ ThreadPoolExecutor { Java::Util::Concurrent::IExecutor ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Java.Util.Concurrent.IExecutor? ThreadPoolExecutor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Java.Util.Concurrent.IExecutor ThreadPoolExecutor" />
      <MemberSignature Language="DocId" Value="P:Android.OS.AsyncTask.ThreadPoolExecutor" />
      <MemberSignature Language="F#" Value="member this.ThreadPoolExecutor : Java.Util.Concurrent.IExecutor" Usage="Android.OS.AsyncTask.ThreadPoolExecutor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("THREAD_POOL_EXECUTOR")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("THREAD_POOL_EXECUTOR")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android30.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Util.Concurrent.IExecutor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>An <c>Executor</c> that can be used to execute tasks in parallel.</summary>
        <value>To be added.</value>
        <remarks>
          <para>An <c>Executor</c> that can be used to execute tasks in parallel.</para>
          <para>This member is deprecated. Using a single thread pool for a general purpose results in suboptimal behavior
              for different tasks. Small, CPU-bound tasks benefit from a bounded pool and queueing, and
              long-running blocking tasks, such as network operations, benefit from many threads. Use or
              create an <c>Executor</c> configured for your use case.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/AsyncTask#THREAD_POOL_EXECUTOR" title="Reference documentation">Java documentation for <code>android.os.AsyncTask.THREAD_POOL_EXECUTOR</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.OS.AsyncTask.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.OS.AsyncTask.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.OS.AsyncTask.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.OS.AsyncTask.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
