<Type Name="Binder" FullName="Android.OS.Binder">
  <TypeSignature Language="VB.NET" Value="Public Class Binder&#xA;Inherits Object&#xA;Implements IBinder, IDisposable, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binder : Java::Lang::Object, Android::OS::IBinder, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public class Binder : Java.Lang.Object, Android.OS.IBinder, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binder extends Java.Lang.Object implements class Android.OS.IBinder, class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.OS.Binder" />
  <TypeSignature Language="F#" Value="type Binder = class&#xA;    inherit Object&#xA;    interface IBinder&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.OS.IBinder</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/os/Binder", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/os/Binder", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Base class for a remotable object, the core part of a lightweight
            remote procedure call mechanism defined by <c>IBinder</c>.</summary>
    <remarks>
      <para>Base class for a remotable object, the core part of a lightweight
            remote procedure call mechanism defined by <c>IBinder</c>.
            This class is an implementation of IBinder that provides
            standard local implementation of such an object.</para>
      <para>Most developers will not implement this class directly, instead using the
            <see href="https://developer.android.com/guide/components/aidl.html">aidl</see> tool to describe the desired
            interface, having it generate the appropriate Binder subclass. You can,
            however, derive directly from Binder to implement your own custom RPC
            protocol or simply instantiate a raw Binder object directly to use as a
            token that can be shared across processes.</para>
      <para>This class is just a basic IPC primitive; it has no impact on an application's
            lifecycle, and is valid only as long as the process that created it continues to run.
            To use this correctly, you must be doing so within the context of a top-level
            application component (a <c>android.app.Service</c>, <c>android.app.Activity</c>,
            or <c>android.content.ContentProvider</c>) that lets the system know your process
            should remain running.</para>
      <para>You must keep in mind the situations in which your process
            could go away, and thus require that you later re-create a new Binder and re-attach
            it when the process starts again. For example, if you are using this within an
            <c>android.app.Activity</c>, your activity's process may be killed any time the
            activity is not started; if the activity is later re-created you will need to
            create a new Binder and hand it back to the correct place again; you need to be
            aware that your process may be started for another reason (for example to receive
            a broadcast) that will not involve re-creating the activity and thus run its code
            to create a new Binder.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/os/Binder" title="Reference documentation">Java documentation for <code>android.os.Binder</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binder();" />
      <MemberSignature Language="C#" Value="public Binder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Default constructor just initializes the object.</summary>
        <remarks>
          <para>Default constructor just initializes the object.</para>
          <para>If you're creating a Binder token (a Binder object without an attached interface),
            you should use <c>#Binder(String)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#Binder()" title="Reference documentation">Java documentation for <code>android.os.Binder.Binder()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (descriptor As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binder(System::String ^ descriptor);" />
      <MemberSignature Language="C#" Value="public Binder (string? descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Android.OS.Binder : string -&gt; Android.OS.Binder" Usage="new Android.OS.Binder descriptor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="descriptor" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="descriptor">Used to identify the creator of this token, for example the class name.
            Instead of creating multiple tokens with the same descriptor, consider adding a suffix to
            help identify them.</param>
        <summary>Constructor for creating a raw Binder object (token) along with a descriptor.</summary>
        <remarks>
          <para>Constructor for creating a raw Binder object (token) along with a descriptor.</para>
          <para>The descriptor of binder objects usually specifies the interface they are implementing.
            In case of binder tokens, no interface is implemented, and the descriptor can be used
            as a sort of tag to help identify the binder token. This will help identify remote
            references to these objects more easily when debugging.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#Binder(java.lang.String)" title="Reference documentation">Java documentation for <code>android.os.Binder.Binder(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Binder(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected Binder (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.OS.Binder : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.OS.Binder" Usage="new Android.OS.Binder (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttachInterface">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AttachInterface (owner As IInterface, descriptor As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AttachInterface(Android::OS::IInterface ^ owner, System::String ^ descriptor);" />
      <MemberSignature Language="C#" Value="public virtual void AttachInterface (Android.OS.IInterface? owner, string? descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AttachInterface(class Android.OS.IInterface owner, string descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.AttachInterface(Android.OS.IInterface,System.String)" />
      <MemberSignature Language="F#" Value="abstract member AttachInterface : Android.OS.IInterface * string -&gt; unit&#xA;override this.AttachInterface : Android.OS.IInterface * string -&gt; unit" Usage="binder.AttachInterface (owner, descriptor)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("attachInterface", "(Landroid/os/IInterface;Ljava/lang/String;)V", "GetAttachInterface_Landroid_os_IInterface_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("attachInterface", "(Landroid/os/IInterface;Ljava/lang/String;)V", "GetAttachInterface_Landroid_os_IInterface_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="Android.OS.IInterface" />
        <Parameter Name="descriptor" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">To be added.</param>
        <param name="descriptor">To be added.</param>
        <summary>Convenience method for associating a specific interface with the Binder.</summary>
        <remarks>
          <para>Convenience method for associating a specific interface with the Binder.
            After calling, <c>#queryLocalInterface(String) queryLocalInterface()</c>
            will be implemented for you to return the given owner IInterface when
            the corresponding descriptor is requested.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#attachInterface(android.os.IInterface,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.os.Binder.attachInterface(android.os.IInterface, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallingPid">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CallingPid As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CallingPid { int get(); };" />
      <MemberSignature Language="C#" Value="public static int CallingPid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CallingPid" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Binder.CallingPid" />
      <MemberSignature Language="F#" Value="member this.CallingPid : int" Usage="Android.OS.Binder.CallingPid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCallingPid", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCallingPid", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the ID of the process that sent you the current transaction
            that is being processed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the ID of the process that sent you the current transaction
            that is being processed. This PID can be used with higher-level
            system services to determine its identity and check permissions.
            If the current thread is not currently executing an incoming transaction,
            then its own PID is returned.</para>
          <para>Warning: oneway transactions do not receive PID.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#getCallingPid()" title="Reference documentation">Java documentation for <code>android.os.Binder.getCallingPid()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallingUid">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CallingUid As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CallingUid { int get(); };" />
      <MemberSignature Language="C#" Value="public static int CallingUid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CallingUid" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Binder.CallingUid" />
      <MemberSignature Language="F#" Value="member this.CallingUid : int" Usage="Android.OS.Binder.CallingUid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCallingUid", "()I", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCallingUid", "()I", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the Linux UID assigned to the process that sent you the
            current transaction that is being processed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the Linux UID assigned to the process that sent you the
            current transaction that is being processed. This UID can be used with
            higher-level system services to determine its identity and check
            permissions. If the current thread is not currently executing an
            incoming transaction, then its own UID is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#getCallingUid()" title="Reference documentation">Java documentation for <code>android.os.Binder.getCallingUid()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CallingUidOrThrow">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CallingUidOrThrow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CallingUidOrThrow { int get(); };" />
      <MemberSignature Language="C#" Value="public static int CallingUidOrThrow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CallingUidOrThrow" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Binder.CallingUidOrThrow" />
      <MemberSignature Language="F#" Value="member this.CallingUidOrThrow : int" Usage="Android.OS.Binder.CallingUidOrThrow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCallingUidOrThrow", "()I", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCallingUidOrThrow", "()I", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the Linux UID assigned to the process that sent the transaction
            currently being processed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the Linux UID assigned to the process that sent the transaction
            currently being processed.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#getCallingUidOrThrow()" title="Reference documentation">Java documentation for <code>android.os.Binder.getCallingUidOrThrow()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallingUserHandle">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CallingUserHandle As UserHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Android::OS::UserHandle ^ CallingUserHandle { Android::OS::UserHandle ^ get(); };" />
      <MemberSignature Language="C#" Value="public static Android.OS.UserHandle CallingUserHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Android.OS.UserHandle CallingUserHandle" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Binder.CallingUserHandle" />
      <MemberSignature Language="F#" Value="member this.CallingUserHandle : Android.OS.UserHandle" Usage="Android.OS.Binder.CallingUserHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCallingUserHandle", "()Landroid/os/UserHandle;", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCallingUserHandle", "()Landroid/os/UserHandle;", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.UserHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the UserHandle assigned to the process that sent you the
            current transaction that is being processed.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Return the UserHandle assigned to the process that sent you the
            current transaction that is being processed. This is the user
            of the caller. It is distinct from <c>#getCallingUid()</c> in that a
            particular user will have multiple distinct apps running under it each
            with their own UID. If the current thread is not currently executing an
            incoming transaction, then its own UserHandle is returned.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#getCallingUserHandle()" title="Reference documentation">Java documentation for <code>android.os.Binder.getCallingUserHandle()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="CallingWorkSourceUid">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CallingWorkSourceUid As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property int CallingWorkSourceUid { int get(); };" />
      <MemberSignature Language="C#" Value="public static int CallingWorkSourceUid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CallingWorkSourceUid" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Binder.CallingWorkSourceUid" />
      <MemberSignature Language="F#" Value="member this.CallingWorkSourceUid : int" Usage="Android.OS.Binder.CallingWorkSourceUid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getCallingWorkSourceUid", "()I", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getCallingWorkSourceUid", "()I", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the work source set by the caller.</summary>
        <value>The original UID responsible for the binder transaction.</value>
        <remarks>
          <para>Returns the work source set by the caller.</para>
          <para>Unlike <c>#getCallingUid()</c>, this result of this method cannot be trusted. The
            caller can set the value to whatever they want. Only use this value if you trust the calling
            UID.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#getCallingWorkSourceUid()" title="Reference documentation">Java documentation for <code>android.os.Binder.getCallingWorkSourceUid()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearCallingIdentity">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClearCallingIdentity () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ClearCallingIdentity();" />
      <MemberSignature Language="C#" Value="public static long ClearCallingIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ClearCallingIdentity() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.ClearCallingIdentity" />
      <MemberSignature Language="F#" Value="static member ClearCallingIdentity : unit -&gt; int64" Usage="Android.OS.Binder.ClearCallingIdentity " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearCallingIdentity", "()J", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearCallingIdentity", "()J", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reset the identity of the incoming IPC on the current thread.</summary>
        <returns>Returns an opaque token that can be used to restore the
            original calling identity by passing it to
            <c>#restoreCallingIdentity(long)</c>.</returns>
        <remarks>
          <para>Reset the identity of the incoming IPC on the current thread. This can
            be useful if, while handling an incoming call, you will be calling
            on interfaces of other objects that may be local to your process and
            need to do permission checks on the calls coming into them (so they
            will check the permission of your own local process, and not whatever
            process originally called you).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#clearCallingIdentity()" title="Reference documentation">Java documentation for <code>android.os.Binder.clearCallingIdentity()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="P:Android.OS.Binder.CallingPid" />
        <altmember cref="P:Android.OS.Binder.CallingUid" />
        <altmember cref="M:Android.OS.Binder.RestoreCallingIdentity(System.Int64)" />
      </Docs>
    </Member>
    <Member MemberName="ClearCallingWorkSource">
      <MemberSignature Language="VB.NET" Value="Public Shared Function ClearCallingWorkSource () As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long ClearCallingWorkSource();" />
      <MemberSignature Language="C#" Value="public static long ClearCallingWorkSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 ClearCallingWorkSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.ClearCallingWorkSource" />
      <MemberSignature Language="F#" Value="static member ClearCallingWorkSource : unit -&gt; int64" Usage="Android.OS.Binder.ClearCallingWorkSource " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearCallingWorkSource", "()J", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearCallingWorkSource", "()J", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Clears the work source on this thread.</summary>
        <returns>token to restore original work source.</returns>
        <remarks>
          <para>Clears the work source on this thread.</para>
          <para>The work source will be propagated for future outgoing binder transactions
            executed on this thread.</para>
          <para>
            <c>#restoreCallingWorkSource(long)</c> must always be called after clearing the
            worksource.</para>
          <para>A typical use case would be</para>
          <code lang="text/java">long token = Binder.clearCallingWorkSource();
            try {
              // Call an API.
            } finally {
              Binder.restoreCallingWorkSource(token);
            }
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#clearCallingWorkSource()" title="Reference documentation">Java documentation for <code>android.os.Binder.clearCallingWorkSource()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dump">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Dump (fd As FileDescriptor, args As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dump(Java::IO::FileDescriptor ^ fd, cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="C#" Value="public virtual void Dump (Java.IO.FileDescriptor fd, string[]? args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dump(class Java.IO.FileDescriptor fd, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.Dump(Java.IO.FileDescriptor,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member Dump : Java.IO.FileDescriptor * string[] -&gt; unit&#xA;override this.Dump : Java.IO.FileDescriptor * string[] -&gt; unit" Usage="binder.Dump (fd, args)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IBinder.Dump(Java.IO.FileDescriptor,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dump", "(Ljava/io/FileDescriptor;[Ljava/lang/String;)V", "GetDump_Ljava_io_FileDescriptor_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dump", "(Ljava/io/FileDescriptor;[Ljava/lang/String;)V", "GetDump_Ljava_io_FileDescriptor_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="args" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fd">The raw file descriptor that the dump is being sent to.</param>
        <param name="args">additional arguments to the dump request.</param>
        <summary>Implemented to call the more convenient version
            <c>#dump(FileDescriptor, PrintWriter, String[])</c>.</summary>
        <remarks>
          <para>Implemented to call the more convenient version
            <c>#dump(FileDescriptor, PrintWriter, String[])</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#dump(java.io.FileDescriptor,%20java.lang.String[])" title="Reference documentation">Java documentation for <code>android.os.Binder.dump(java.io.FileDescriptor, java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="Dump">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dump (fd As FileDescriptor, fout As PrintWriter, args As String())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dump(Java::IO::FileDescriptor ^ fd, Java::IO::PrintWriter ^ fout, cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="C#" Value="protected virtual void Dump (Java.IO.FileDescriptor fd, Java.IO.PrintWriter fout, string[]? args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dump(class Java.IO.FileDescriptor fd, class Java.IO.PrintWriter fout, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.Dump(Java.IO.FileDescriptor,Java.IO.PrintWriter,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member Dump : Java.IO.FileDescriptor * Java.IO.PrintWriter * string[] -&gt; unit&#xA;override this.Dump : Java.IO.FileDescriptor * Java.IO.PrintWriter * string[] -&gt; unit" Usage="binder.Dump (fd, fout, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dump", "(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dump", "(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="fout" Type="Java.IO.PrintWriter" />
        <Parameter Name="args" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fd">The raw file descriptor that the dump is being sent to.</param>
        <param name="fout">The file to which you should dump your state. This will be
            closed for you after you return.</param>
        <param name="args">additional arguments to the dump request.</param>
        <summary>Print the object's state into the given stream.</summary>
        <remarks>
          <para>Print the object's state into the given stream.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#dump(java.io.FileDescriptor,%20java.io.PrintWriter,%20java.lang.String[])" title="Reference documentation">Java documentation for <code>android.os.Binder.dump(java.io.FileDescriptor, java.io.PrintWriter, java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DumpAsync">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DumpAsync (fd As FileDescriptor, args As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DumpAsync(Java::IO::FileDescriptor ^ fd, cli::array &lt;System::String ^&gt; ^ args);" />
      <MemberSignature Language="C#" Value="public virtual void DumpAsync (Java.IO.FileDescriptor fd, string[]? args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DumpAsync(class Java.IO.FileDescriptor fd, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.DumpAsync(Java.IO.FileDescriptor,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member DumpAsync : Java.IO.FileDescriptor * string[] -&gt; unit&#xA;override this.DumpAsync : Java.IO.FileDescriptor * string[] -&gt; unit" Usage="binder.DumpAsync (fd, args)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IBinder.DumpAsync(Java.IO.FileDescriptor,System.String[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("dumpAsync", "(Ljava/io/FileDescriptor;[Ljava/lang/String;)V", "GetDumpAsync_Ljava_io_FileDescriptor_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("dumpAsync", "(Ljava/io/FileDescriptor;[Ljava/lang/String;)V", "GetDumpAsync_Ljava_io_FileDescriptor_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="args" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="fd">The raw file descriptor that the dump is being sent to.</param>
        <param name="args">additional arguments to the dump request.
</param>
        <summary>Like <c>#dump(FileDescriptor, String[])</c>, but ensures the target
            executes asynchronously.</summary>
        <remarks>
          <para>Like <c>#dump(FileDescriptor, String[])</c>, but ensures the target
            executes asynchronously.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#dumpAsync(java.io.FileDescriptor,%20java.lang.String[])" title="Reference documentation">Java documentation for <code>android.os.Binder.dumpAsync(java.io.FileDescriptor, java.lang.String[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 13" />
      </Docs>
    </Member>
    <Member MemberName="FlushPendingCommands">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FlushPendingCommands ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FlushPendingCommands();" />
      <MemberSignature Language="C#" Value="public static void FlushPendingCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FlushPendingCommands() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.FlushPendingCommands" />
      <MemberSignature Language="F#" Value="static member FlushPendingCommands : unit -&gt; unit" Usage="Android.OS.Binder.FlushPendingCommands " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("flushPendingCommands", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("flushPendingCommands", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Flush any Binder commands pending in the current thread to the kernel
            driver.</summary>
        <remarks>
          <para>Flush any Binder commands pending in the current thread to the kernel
            driver. This can be
            useful to call before performing an operation that may block for a long
            time, to ensure that any pending object references have been released
            in order to prevent the process from holding on to objects longer than
            it needs to.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#flushPendingCommands()" title="Reference documentation">Java documentation for <code>android.os.Binder.flushPendingCommands()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceDescriptor">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property InterfaceDescriptor As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InterfaceDescriptor { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public virtual string? InterfaceDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InterfaceDescriptor" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Binder.InterfaceDescriptor" />
      <MemberSignature Language="F#" Value="member this.InterfaceDescriptor : string" Usage="Android.OS.Binder.InterfaceDescriptor" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Android.OS.IBinder.InterfaceDescriptor</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInterfaceDescriptor", "()Ljava/lang/String;", "GetGetInterfaceDescriptorHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInterfaceDescriptor", "()Ljava/lang/String;", "GetGetInterfaceDescriptorHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Default implementation returns an empty interface name.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Default implementation returns an empty interface name.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#getInterfaceDescriptor()" title="Reference documentation">Java documentation for <code>android.os.Binder.getInterfaceDescriptor()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsBinderAlive">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsBinderAlive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsBinderAlive { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsBinderAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinderAlive" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Binder.IsBinderAlive" />
      <MemberSignature Language="F#" Value="member this.IsBinderAlive : bool" Usage="Android.OS.Binder.IsBinderAlive" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Android.OS.IBinder.IsBinderAlive</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isBinderAlive", "()Z", "GetIsBinderAliveHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isBinderAlive", "()Z", "GetIsBinderAliveHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added
            
            Note that if you're calling on a local binder, this always returns true
            because your process is alive if you're calling it.</summary>
        <value>To be added.</value>
        <remarks>
          <para>To be added
            
            Note that if you're calling on a local binder, this always returns true
            because your process is alive if you're calling it.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#isBinderAlive()" title="Reference documentation">Java documentation for <code>android.os.Binder.isBinderAlive()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Binder.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.OS.Binder.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Java.Interop.IJavaPeerable.JniPeerMembers</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JoinThreadPool">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub JoinThreadPool ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void JoinThreadPool();" />
      <MemberSignature Language="C#" Value="public static void JoinThreadPool ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void JoinThreadPool() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.JoinThreadPool" />
      <MemberSignature Language="F#" Value="static member JoinThreadPool : unit -&gt; unit" Usage="Android.OS.Binder.JoinThreadPool " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("joinThreadPool", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("joinThreadPool", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Add the calling thread to the IPC thread pool.</summary>
        <remarks>
          <para>Add the calling thread to the IPC thread pool. This function does
            not return until the current process is exiting.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#joinThreadPool()" title="Reference documentation">Java documentation for <code>android.os.Binder.joinThreadPool()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LinkToDeath">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub LinkToDeath (recipient As IBinderDeathRecipient, flags As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void LinkToDeath(Android::OS::IBinderDeathRecipient ^ recipient, int flags);" />
      <MemberSignature Language="C#" Value="public virtual void LinkToDeath (Android.OS.IBinderDeathRecipient recipient, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LinkToDeath(class Android.OS.IBinderDeathRecipient recipient, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.LinkToDeath(Android.OS.IBinderDeathRecipient,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member LinkToDeath : Android.OS.IBinderDeathRecipient * int -&gt; unit&#xA;override this.LinkToDeath : Android.OS.IBinderDeathRecipient * int -&gt; unit" Usage="binder.LinkToDeath (recipient, flags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IBinder.LinkToDeath(Android.OS.IBinderDeathRecipient,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("linkToDeath", "(Landroid/os/IBinder$DeathRecipient;I)V", "GetLinkToDeath_Landroid_os_IBinder_DeathRecipient_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("linkToDeath", "(Landroid/os/IBinder$DeathRecipient;I)V", "GetLinkToDeath_Landroid_os_IBinder_DeathRecipient_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipient" Type="Android.OS.IBinderDeathRecipient" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="recipient">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>Local implementation is a no-op.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#linkToDeath(android.os.DeathRecipient,%20int)" title="Reference documentation">Java documentation for <code>android.os.Binder.linkToDeath(android.os.DeathRecipient, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="OnTransact">
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTransact (code As Integer, data As Parcel, reply As Parcel, flags As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTransact(int code, Android::OS::Parcel ^ data, Android::OS::Parcel ^ reply, int flags);" />
      <MemberSignature Language="C#" Value="protected virtual bool OnTransact (int code, Android.OS.Parcel data, Android.OS.Parcel? reply, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTransact(int32 code, class Android.OS.Parcel data, class Android.OS.Parcel reply, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.OnTransact(System.Int32,Android.OS.Parcel,Android.OS.Parcel,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member OnTransact : int * Android.OS.Parcel * Android.OS.Parcel * int -&gt; bool&#xA;override this.OnTransact : int * Android.OS.Parcel * Android.OS.Parcel * int -&gt; bool" Usage="binder.OnTransact (code, data, reply, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onTransact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onTransact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Int32" />
        <Parameter Name="data" Type="Android.OS.Parcel" />
        <Parameter Name="reply" Type="Android.OS.Parcel">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="code">The action to perform. This should be a number between
            <c>#FIRST_CALL_TRANSACTION</c> and <c>#LAST_CALL_TRANSACTION</c>.</param>
        <param name="data">Marshalled data being received from the caller.</param>
        <param name="reply">If the caller is expecting a result back, it should be marshalled
            in to here.</param>
        <param name="flags">Additional operation flags. Either 0 for a normal
            RPC, or <c>#FLAG_ONEWAY</c> for a one-way RPC.</param>
        <summary>Default implementation is a stub that returns false.</summary>
        <returns>Return true on a successful call; returning false is generally used to
            indicate that you did not understand the transaction code.</returns>
        <remarks>
          <para>Default implementation is a stub that returns false. You will want
            to override this to do the appropriate unmarshalling of transactions.</para>
          <para>If you want to call this, call transact().</para>
          <para>Implementations that are returning a result should generally use
            <c>Parcel#writeNoException() Parcel.writeNoException</c> and
            <c>Parcel#writeException(Exception) Parcel.writeException</c> to propagate
            exceptions back to the caller.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#onTransact(int,%20android.os.Parcel,%20android.os.Parcel,%20int)" title="Reference documentation">Java documentation for <code>android.os.Binder.onTransact(int, android.os.Parcel, android.os.Parcel, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.OS.RemoteException" />
      </Docs>
    </Member>
    <Member MemberName="PingBinder">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PingBinder () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool PingBinder();" />
      <MemberSignature Language="C#" Value="public virtual bool PingBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PingBinder() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.PingBinder" />
      <MemberSignature Language="F#" Value="abstract member PingBinder : unit -&gt; bool&#xA;override this.PingBinder : unit -&gt; bool" Usage="binder.PingBinder " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IBinder.PingBinder</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("pingBinder", "()Z", "GetPingBinderHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("pingBinder", "()Z", "GetPingBinderHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Default implementation always returns true -- if you got here,
            the object is alive.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Default implementation always returns true -- if you got here,
            the object is alive.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#pingBinder()" title="Reference documentation">Java documentation for <code>android.os.Binder.pingBinder()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryLocalInterface">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function QueryLocalInterface (descriptor As String) As IInterface" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Android::OS::IInterface ^ QueryLocalInterface(System::String ^ descriptor);" />
      <MemberSignature Language="C#" Value="public virtual Android.OS.IInterface? QueryLocalInterface (string descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.IInterface QueryLocalInterface(string descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.QueryLocalInterface(System.String)" />
      <MemberSignature Language="F#" Value="abstract member QueryLocalInterface : string -&gt; Android.OS.IInterface&#xA;override this.QueryLocalInterface : string -&gt; Android.OS.IInterface" Usage="binder.QueryLocalInterface descriptor" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IBinder.QueryLocalInterface(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queryLocalInterface", "(Ljava/lang/String;)Landroid/os/IInterface;", "GetQueryLocalInterface_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queryLocalInterface", "(Ljava/lang/String;)Landroid/os/IInterface;", "GetQueryLocalInterface_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IInterface</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="descriptor">To be added.</param>
        <summary>Use information supplied to <c>#attachInterface attachInterface()</c>
            to return the associated <c>IInterface</c> if it matches the requested
            descriptor.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Use information supplied to <c>#attachInterface attachInterface()</c>
            to return the associated <c>IInterface</c> if it matches the requested
            descriptor.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#queryLocalInterface(java.lang.String)" title="Reference documentation">Java documentation for <code>android.os.Binder.queryLocalInterface(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RestoreCallingIdentity">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RestoreCallingIdentity (token As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RestoreCallingIdentity(long token);" />
      <MemberSignature Language="C#" Value="public static void RestoreCallingIdentity (long token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreCallingIdentity(int64 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.RestoreCallingIdentity(System.Int64)" />
      <MemberSignature Language="F#" Value="static member RestoreCallingIdentity : int64 -&gt; unit" Usage="Android.OS.Binder.RestoreCallingIdentity token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("restoreCallingIdentity", "(J)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("restoreCallingIdentity", "(J)V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="token">The opaque token that was previously returned by
            <c>#clearCallingIdentity</c>.</param>
        <summary>Restore the identity of the incoming IPC on the current thread
            back to a previously identity that was returned by <c>#clearCallingIdentity</c>.</summary>
        <remarks>
          <para>Restore the identity of the incoming IPC on the current thread
            back to a previously identity that was returned by <c>#clearCallingIdentity</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#restoreCallingIdentity(long)" title="Reference documentation">Java documentation for <code>android.os.Binder.restoreCallingIdentity(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <altmember cref="M:Android.OS.Binder.ClearCallingIdentity" />
      </Docs>
    </Member>
    <Member MemberName="RestoreCallingWorkSource">
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RestoreCallingWorkSource (token As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RestoreCallingWorkSource(long token);" />
      <MemberSignature Language="C#" Value="public static void RestoreCallingWorkSource (long token);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RestoreCallingWorkSource(int64 token) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.RestoreCallingWorkSource(System.Int64)" />
      <MemberSignature Language="F#" Value="static member RestoreCallingWorkSource : int64 -&gt; unit" Usage="Android.OS.Binder.RestoreCallingWorkSource token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("restoreCallingWorkSource", "(J)V", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("restoreCallingWorkSource", "(J)V", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="token">To be added.</param>
        <summary>Restores the work source on this thread using a token returned by
            <c>#setCallingWorkSourceUid(int)</c> or <c>#clearCallingWorkSource()</c>.</summary>
        <remarks>
          <para>Restores the work source on this thread using a token returned by
            <c>#setCallingWorkSourceUid(int)</c> or <c>#clearCallingWorkSource()</c>.</para>
          <para>A typical use case would be</para>
          <code lang="text/java">long token = Binder.setCallingWorkSourceUid(uid);
            try {
              // Call an API.
            } finally {
              Binder.restoreCallingWorkSource(token);
            }
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#restoreCallingWorkSource(long)" title="Reference documentation">Java documentation for <code>android.os.Binder.restoreCallingWorkSource(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCallingWorkSourceUid">
      <MemberSignature Language="VB.NET" Value="Public Shared Function SetCallingWorkSourceUid (workSource As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long SetCallingWorkSourceUid(int workSource);" />
      <MemberSignature Language="C#" Value="public static long SetCallingWorkSourceUid (int workSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 SetCallingWorkSourceUid(int32 workSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.SetCallingWorkSourceUid(System.Int32)" />
      <MemberSignature Language="F#" Value="static member SetCallingWorkSourceUid : int -&gt; int64" Usage="Android.OS.Binder.SetCallingWorkSourceUid workSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setCallingWorkSourceUid", "(I)J", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setCallingWorkSourceUid", "(I)J", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="workSource" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="workSource">The original UID responsible for the binder call.</param>
        <summary>Sets the work source for this thread.</summary>
        <returns>token to restore original work source.</returns>
        <remarks>
          <para>Sets the work source for this thread.</para>
          <para>All the following binder calls on this thread will use the provided work source. If this
            is called during an on-going binder transaction, all the following binder calls will use the
            work source until the end of the transaction.</para>
          <para>The concept of worksource is similar to <c>WorkSource</c>. However, for performance
            reasons, we only support one UID. This UID represents the original user responsible for the
            binder calls.</para>
          <para>
            <c>#restoreCallingWorkSource(long)</c> must always be called after setting the
            worksource.</para>
          <para>A typical use case would be</para>
          <code lang="text/java">long token = Binder.setCallingWorkSourceUid(uid);
            try {
              // Call an API.
            } finally {
              Binder.restoreCallingWorkSource(token);
            }
            </code>
          <para>The work source will be propagated for future outgoing binder transactions
            executed on this thread.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#setCallingWorkSourceUid(int)" title="Reference documentation">Java documentation for <code>android.os.Binder.setCallingWorkSourceUid(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Binder.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.OS.Binder.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.OS.Binder.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.OS.Binder.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transact">
      <MemberSignature Language="VB.NET" Value="Public Function Transact (code As Integer, data As Parcel, reply As Parcel, flags As TransactionFlags) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Transact(int code, Android::OS::Parcel ^ data, Android::OS::Parcel ^ reply, Android::OS::TransactionFlags flags);" />
      <MemberSignature Language="C#" Value="public bool Transact (int code, Android.OS.Parcel data, Android.OS.Parcel? reply, Android.OS.TransactionFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Transact(int32 code, class Android.OS.Parcel data, class Android.OS.Parcel reply, valuetype Android.OS.TransactionFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.Transact(System.Int32,Android.OS.Parcel,Android.OS.Parcel,Android.OS.TransactionFlags)" />
      <MemberSignature Language="F#" Value="abstract member Transact : int * Android.OS.Parcel * Android.OS.Parcel * Android.OS.TransactionFlags -&gt; bool&#xA;override this.Transact : int * Android.OS.Parcel * Android.OS.Parcel * Android.OS.TransactionFlags -&gt; bool" Usage="binder.Transact (code, data, reply, flags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IBinder.Transact(System.Int32,Android.OS.Parcel,Android.OS.Parcel,Android.OS.TransactionFlags)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("transact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("transact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Int32" />
        <Parameter Name="data" Type="Android.OS.Parcel" />
        <Parameter Name="reply" Type="Android.OS.Parcel">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.OS.TransactionFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="code">The action to perform.  This should
 be a number between <see cref="F:Android.OS.BinderConsts.FirstCallTransaction" /> and
 <see cref="F:Android.OS.BinderConsts.LastCallTransaction" />.</param>
        <param name="data">Marshalled data to send to the target.  Must not be null.
 If you are not sending any data, you must create an empty Parcel
 that is given here.</param>
        <param name="reply">Marshalled data to be received from the target.  May be
 null if you are not interested in the return value.</param>
        <param name="flags">Additional operation flags.  Either 0 for a normal
 RPC, or <see cref="F:Android.OS.BinderConsts.FlagOneway" /> for a one-way RPC.
</param>
        <summary>Default implementation rewinds the parcels and calls onTransact.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Default implementation rewinds the parcels and calls onTransact. On
            the remote side, transact calls into the binder to do the IPC.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#transact(int,%20android.os.Parcel,%20android.os.Parcel,%20int)" title="Reference documentation">Java documentation for <code>android.os.Binder.transact(int, android.os.Parcel, android.os.Parcel, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.OS.RemoteException" />
      </Docs>
    </Member>
    <Member MemberName="UnlinkToDeath">
      <MemberSignature Language="VB.NET" Value="Public Overridable Function UnlinkToDeath (recipient As IBinderDeathRecipient, flags As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool UnlinkToDeath(Android::OS::IBinderDeathRecipient ^ recipient, int flags);" />
      <MemberSignature Language="C#" Value="public virtual bool UnlinkToDeath (Android.OS.IBinderDeathRecipient recipient, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool UnlinkToDeath(class Android.OS.IBinderDeathRecipient recipient, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.Binder.UnlinkToDeath(Android.OS.IBinderDeathRecipient,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member UnlinkToDeath : Android.OS.IBinderDeathRecipient * int -&gt; bool&#xA;override this.UnlinkToDeath : Android.OS.IBinderDeathRecipient * int -&gt; bool" Usage="binder.UnlinkToDeath (recipient, flags)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Android.OS.IBinder.UnlinkToDeath(Android.OS.IBinderDeathRecipient,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("unlinkToDeath", "(Landroid/os/IBinder$DeathRecipient;I)Z", "GetUnlinkToDeath_Landroid_os_IBinder_DeathRecipient_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("unlinkToDeath", "(Landroid/os/IBinder$DeathRecipient;I)Z", "GetUnlinkToDeath_Landroid_os_IBinder_DeathRecipient_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipient" Type="Android.OS.IBinderDeathRecipient" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="recipient">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>Local implementation is a no-op.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/Binder#unlinkToDeath(android.os.DeathRecipient,%20int)" title="Reference documentation">Java documentation for <code>android.os.Binder.unlinkToDeath(android.os.DeathRecipient, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
