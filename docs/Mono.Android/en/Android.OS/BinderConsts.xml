<Type Name="BinderConsts" FullName="Android.OS.BinderConsts">
  <TypeSignature Language="C#" Value="public abstract class BinderConsts" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BinderConsts extends System.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/os/IBinder")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Base interface for a remotable object, the core part of a lightweight
 remote procedure call mechanism designed for high performance when
 performing in-process and cross-process calls.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">Base interface for a remotable object, the core part of a lightweight
 remote procedure call mechanism designed for high performance when
 performing in-process and cross-process calls.  This
 interface describes the abstract protocol for interacting with a
 remotable object.  Do not implement this interface directly, instead
 extend from <c><see cref="T:Android.OS.Binder" /></c>.
 
 </para>
      <para tool="javadoc-to-mdoc">The key IBinder API is <c><see cref="!:Android.OS.BinderConsts.transact(int,android.os.Parcel,android.os.Parcel,int)" /></c> matched by
 <c><see cref="M:Android.OS.Binder.OnTransact(System.Int32,Android.OS.Parcel,Android.OS.Parcel,Android.OS.Parcel)" /></c>.  These
 methods allow you to send a call to an IBinder object and receive a
 call coming in to a Binder object, respectively.  This transaction API
 is synchronous, such that a call to <c><see cref="!:Android.OS.BinderConsts.transact(int,android.os.Parcel,android.os.Parcel,int)" /></c> does not
 return until the target has returned from
 <c><see cref="M:Android.OS.Binder.OnTransact(System.Int32,Android.OS.Parcel,Android.OS.Parcel,Android.OS.Parcel)" /></c>; this is the
 expected behavior when calling an object that exists in the local
 process, and the underlying inter-process communication (IPC) mechanism
 ensures that these same semantics apply when going across processes.
 
 </para>
      <para tool="javadoc-to-mdoc">The data sent through transact() is a <c><see cref="T:Android.OS.Parcel" /></c>, a generic buffer
 of data that also maintains some meta-data about its contents.  The meta
 data is used to manage IBinder object references in the buffer, so that those
 references can be maintained as the buffer moves across processes.  This
 mechanism ensures that when an IBinder is written into a Parcel and sent to
 another process, if that other process sends a reference to that same IBinder
 back to the original process, then the original process will receive the
 same IBinder object back.  These semantics allow IBinder/Binder objects to
 be used as a unique identity (to serve as a token or for other purposes)
 that can be managed across processes.
 
 </para>
      <para tool="javadoc-to-mdoc">The system maintains a pool of transaction threads in each process that
 it runs in.  These threads are used to dispatch all
 IPCs coming in from other processes.  For example, when an IPC is made from
 process A to process B, the calling thread in A blocks in transact() as
 it sends the transaction to process B.  The next available pool thread in
 B receives the incoming transaction, calls Binder.onTransact() on the target
 object, and replies with the result Parcel.  Upon receiving its result, the
 thread in process A returns to allow its execution to continue.  In effect,
 other processes appear to use as additional threads that you did not create
 executing in your own process.
 
 </para>
      <para tool="javadoc-to-mdoc">The Binder system also supports recursion across processes.  For example
 if process A performs a transaction to process B, and process B while
 handling that transaction calls transact() on an IBinder that is implemented
 in A, then the thread in A that is currently waiting for the original
 transaction to finish will take care of calling Binder.onTransact() on the
 object being called by B.  This ensures that the recursion semantics when
 calling remote binder object are the same as when calling local objects.
 
 </para>
      <para tool="javadoc-to-mdoc">When working with remote objects, you often want to find out when they
 are no longer valid.  There are three ways this can be determined:
 <list type="bullet"><item><term> The <c><see cref="!:Android.OS.BinderConsts.transact(int,android.os.Parcel,android.os.Parcel,int)" /></c> method will throw a
 <c><see cref="T:Android.OS.RemoteException" /></c> exception if you try to call it on an IBinder
 whose process no longer exists.
 </term></item><item><term> The <c><see cref="!:Android.OS.BinderConsts.pingBinder()" /></c> method can be called, and will return false
 if the remote process no longer exists.
 </term></item><item><term> The <c><see cref="!:Android.OS.BinderConsts.linkToDeath(android.os.IBinder.DeathRecipient,int)" /></c> method can be used to register
 a <c><see cref="T:Android.OS.IBinderDeathRecipient" /></c> with the IBinder, which will be called when its
 containing process goes away.
 </term></item></list></para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Android.OS.Binder" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/os/IBinder.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="DumpTransaction">
      <MemberSignature Language="C#" Value="public const int DumpTransaction = 1598311760;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 DumpTransaction = (1598311760)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("DUMP_TRANSACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1598311760</MemberValue>
      <Docs>
        <summary>IBinder protocol transaction code: dump internal state.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">IBinder protocol transaction code: dump internal state.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/IBinder.html#DUMP_TRANSACTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FirstCallTransaction">
      <MemberSignature Language="C#" Value="public const int FirstCallTransaction = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 FirstCallTransaction = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FIRST_CALL_TRANSACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>The first transaction code available for user commands.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The first transaction code available for user commands.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/IBinder.html#FIRST_CALL_TRANSACTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="FlagOneway">
      <MemberSignature Language="C#" Value="public const Android.OS.TransactionFlags FlagOneway = 1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Android.OS.TransactionFlags FlagOneway = (1)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("FLAG_ONEWAY")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constant will be removed in the future version. Use Android.OS.TransactionFlags enum directly instead of this field.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.TransactionFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Flag to <c><see cref="!:Android.OS.BinderConsts.transact(int,android.os.Parcel,android.os.Parcel,int)" /></c>: this is a one-way call, meaning that the
 caller returns immediately, without waiting for a result from the
 callee.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Flag to <c><see cref="!:Android.OS.BinderConsts.transact(int,android.os.Parcel,android.os.Parcel,int)" /></c>: this is a one-way call, meaning that the
 caller returns immediately, without waiting for a result from the
 callee. Applies only if the caller and callee are in different
 processes.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/IBinder.html#FLAG_ONEWAY" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceTransaction">
      <MemberSignature Language="C#" Value="public const int InterfaceTransaction = 1598968902;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 InterfaceTransaction = (1598968902)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("INTERFACE_TRANSACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1598968902</MemberValue>
      <Docs>
        <summary>IBinder protocol transaction code: interrogate the recipient side
 of the transaction for its canonical interface descriptor.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">IBinder protocol transaction code: interrogate the recipient side
 of the transaction for its canonical interface descriptor.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/IBinder.html#INTERFACE_TRANSACTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LastCallTransaction">
      <MemberSignature Language="C#" Value="public const int LastCallTransaction = 16777215;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 LastCallTransaction = (16777215)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LAST_CALL_TRANSACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>16777215</MemberValue>
      <Docs>
        <summary>The last transaction code available for user commands.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">The last transaction code available for user commands.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/IBinder.html#LAST_CALL_TRANSACTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LikeTransaction">
      <MemberSignature Language="C#" Value="public const int LikeTransaction = 1598835019;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 LikeTransaction = (1598835019)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("LIKE_TRANSACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1598835019</MemberValue>
      <Docs>
        <summary>IBinder protocol transaction code: tell an app asynchronously that the
 caller likes it.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">IBinder protocol transaction code: tell an app asynchronously that the
 caller likes it.  The app is responsible for incrementing and maintaining
 its own like counter, and may display this value to the user to indicate the
 quality of the app.  This is an optional command that applications do not
 need to handle, so the default implementation is to do nothing.
 
 </para>
          <para tool="javadoc-to-mdoc">There is no response returned and nothing about the
 system will be functionally affected by it, but it will improve the
 app's self-esteem.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/IBinder.html#LIKE_TRANSACTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 15" />
      </Docs>
    </Member>
    <Member MemberName="PingTransaction">
      <MemberSignature Language="C#" Value="public const int PingTransaction = 1599098439;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 PingTransaction = (1599098439)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("PING_TRANSACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1599098439</MemberValue>
      <Docs>
        <summary>IBinder protocol transaction code: pingBinder().</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">IBinder protocol transaction code: pingBinder().
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/IBinder.html#PING_TRANSACTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="TweetTransaction">
      <MemberSignature Language="C#" Value="public const int TweetTransaction = 1599362900;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 TweetTransaction = (1599362900)" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("TWEET_TRANSACTION")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>1599362900</MemberValue>
      <Docs>
        <summary>IBinder protocol transaction code: send a tweet to the target
 object.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">IBinder protocol transaction code: send a tweet to the target
 object.  The data in the parcel is intended to be delivered to
 a shared messaging service associated with the object; it can be
 anything, as long as it is not more than 130 UTF-8 characters to
 conservatively fit within common messaging services.  As part of
 <c><see cref="F:Android.OS.Build+VERSION_CODES.Honeycomb" tool="ReplaceLinkValue" /></c>, all Binder objects are
 expected to support this protocol for fully integrated tweeting
 across the platform.  To support older code, the default implementation
 logs the tweet to the main log as a simple emulation of broadcasting
 it publicly over the Internet.
 
 </para>
          <para tool="javadoc-to-mdoc">Also, upon completing the dispatch, the object must make a cup
 of tea, return it to the caller, and exclaim "jolly good message
 old boy!".
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/os/IBinder.html#TWEET_TRANSACTION" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 13" />
      </Docs>
    </Member>
  </Members>
</Type>
