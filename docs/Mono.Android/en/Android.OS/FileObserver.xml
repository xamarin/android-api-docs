<Type Name="FileObserver" FullName="Android.OS.FileObserver">
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FileObserver&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileObserver abstract : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public abstract class FileObserver : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FileObserver extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.OS.FileObserver" />
  <TypeSignature Language="F#" Value="type FileObserver = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/os/FileObserver", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/os/FileObserver", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(1)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Monitors files (using <see href="http://en.wikipedia.org/wiki/Inotify">inotify</see>)
            to fire an event after files are accessed or changed by any process on
            the device (including this one).</summary>
    <remarks>
      <para>Monitors files (using <see href="http://en.wikipedia.org/wiki/Inotify">inotify</see>)
            to fire an event after files are accessed or changed by any process on
            the device (including this one).  FileObserver is an abstract class;
            subclasses must implement the event handler <c>#onEvent(int, String)</c>.</para>
      <para>Each FileObserver instance can monitor multiple files or directories.
            If a directory is monitored, events will be triggered for all files and
            subdirectories inside the monitored directory.</para>
      <para>An event mask is used to specify which changes or actions to report.
            Event type constants are used to describe the possible changes in the
            event mask as well as what actually happened in event callbacks.</para>
      <para>&lt;p class="caution"&gt;&lt;b&gt;Warning&lt;/b&gt;: If a FileObserver is garbage collected, it
            will stop sending events.  To ensure you keep receiving events, you must
            keep a reference to the FileObserver instance from some other live object.&lt;/p&gt;</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/os/FileObserver" title="Reference documentation">Java documentation for <code>android.os.FileObserver</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (file As File)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileObserver(Java::IO::File ^ file);" />
      <MemberSignature Language="C#" Value="public FileObserver (Java.IO.File file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.File file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.FileObserver.#ctor(Java.IO.File)" />
      <MemberSignature Language="F#" Value="new Android.OS.FileObserver : Java.IO.File -&gt; Android.OS.FileObserver" Usage="new Android.OS.FileObserver file" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/File;)V", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/File;)V", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
      </Parameters>
      <Docs>
        <param name="file">To be added.</param>
        <summary>Equivalent to FileObserver(file, FileObserver.</summary>
        <remarks>
          <para>Equivalent to FileObserver(file, FileObserver.ALL_EVENTS).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/FileObserver#FileObserver(java.io.File)" title="Reference documentation">Java documentation for <code>android.os.FileObserver.FileObserver(java.io.File)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (files As IList(Of File))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileObserver(System::Collections::Generic::IList&lt;Java::IO::File ^&gt; ^ files);" />
      <MemberSignature Language="C#" Value="public FileObserver (System.Collections.Generic.IList&lt;Java.IO.File&gt; files);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;class Java.IO.File&gt; files) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.FileObserver.#ctor(System.Collections.Generic.IList{Java.IO.File})" />
      <MemberSignature Language="F#" Value="new Android.OS.FileObserver : System.Collections.Generic.IList&lt;Java.IO.File&gt; -&gt; Android.OS.FileObserver" Usage="new Android.OS.FileObserver files" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/util/List;)V", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/util/List;)V", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="files" Type="System.Collections.Generic.IList&lt;Java.IO.File&gt;" />
      </Parameters>
      <Docs>
        <param name="files">The files or directories to monitor</param>
        <summary>Equivalent to FileObserver(paths, FileObserver.</summary>
        <remarks>
          <para>Equivalent to FileObserver(paths, FileObserver.ALL_EVENTS).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/FileObserver#FileObserver(java.util.List%3Cjava.io.File%3E)" title="Reference documentation">Java documentation for <code>android.os.FileObserver.FileObserver(java.util.List&lt;java.io.File&gt;)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileObserver(System::String ^ path);" />
      <MemberSignature Language="C#" Value="public FileObserver (string? path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.FileObserver.#ctor(System.String)" />
      <MemberSignature Language="F#" Value="new Android.OS.FileObserver : string -&gt; Android.OS.FileObserver" Usage="new Android.OS.FileObserver path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">To be added.</param>
        <summary>Equivalent to FileObserver(path, FileObserver.</summary>
        <remarks>
          <para>Equivalent to FileObserver(path, FileObserver.ALL_EVENTS).</para>
          <para>This member is deprecated. use <c>#FileObserver(File)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/FileObserver#FileObserver(java.lang.String)" title="Reference documentation">Java documentation for <code>android.os.FileObserver.FileObserver(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (file As File, mask As FileObserverEvents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileObserver(Java::IO::File ^ file, Android::OS::FileObserverEvents mask);" />
      <MemberSignature Language="C#" Value="public FileObserver (Java.IO.File file, Android.OS.FileObserverEvents mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Java.IO.File file, valuetype Android.OS.FileObserverEvents mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.FileObserver.#ctor(Java.IO.File,Android.OS.FileObserverEvents)" />
      <MemberSignature Language="F#" Value="new Android.OS.FileObserver : Java.IO.File * Android.OS.FileObserverEvents -&gt; Android.OS.FileObserver" Usage="new Android.OS.FileObserver (file, mask)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/io/File;I)V", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/io/File;I)V", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="file" Type="Java.IO.File" />
        <Parameter Name="mask" Type="Android.OS.FileObserverEvents">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="file">The file or directory to monitor</param>
        <param name="mask">The event or events (added together) to watch for</param>
        <summary>Create a new file observer for a certain file or directory.</summary>
        <remarks>
          <para>Create a new file observer for a certain file or directory.
            Monitoring does not start on creation!  You must call
            <c>#startWatching()</c> before you will receive events.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/FileObserver#FileObserver(java.io.File,%20int)" title="Reference documentation">Java documentation for <code>android.os.FileObserver.FileObserver(java.io.File, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (files As IList(Of File), mask As FileObserverEvents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileObserver(System::Collections::Generic::IList&lt;Java::IO::File ^&gt; ^ files, Android::OS::FileObserverEvents mask);" />
      <MemberSignature Language="C#" Value="public FileObserver (System.Collections.Generic.IList&lt;Java.IO.File&gt; files, Android.OS.FileObserverEvents mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;class Java.IO.File&gt; files, valuetype Android.OS.FileObserverEvents mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.FileObserver.#ctor(System.Collections.Generic.IList{Java.IO.File},Android.OS.FileObserverEvents)" />
      <MemberSignature Language="F#" Value="new Android.OS.FileObserver : System.Collections.Generic.IList&lt;Java.IO.File&gt; * Android.OS.FileObserverEvents -&gt; Android.OS.FileObserver" Usage="new Android.OS.FileObserver (files, mask)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/util/List;I)V", "", ApiSince=29)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/util/List;I)V", "", ApiSince=29)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="files" Type="System.Collections.Generic.IList&lt;Java.IO.File&gt;" />
        <Parameter Name="mask" Type="Android.OS.FileObserverEvents">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="files">The files or directories to monitor</param>
        <param name="mask">The event or events (added together) to watch for</param>
        <summary>Version of <c>#FileObserver(File, int)</c> that allows callers to monitor
            multiple files or directories.</summary>
        <remarks>
          <para>Version of <c>#FileObserver(File, int)</c> that allows callers to monitor
            multiple files or directories.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/FileObserver#FileObserver(java.util.List%3Cjava.io.File%3E,%20int)" title="Reference documentation">Java documentation for <code>android.os.FileObserver.FileObserver(java.util.List&lt;java.io.File&gt;, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FileObserver(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected FileObserver (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.FileObserver.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.OS.FileObserver : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.OS.FileObserver" Usage="new Android.OS.FileObserver (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, mask As FileObserverEvents)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileObserver(System::String ^ path, Android::OS::FileObserverEvents mask);" />
      <MemberSignature Language="C#" Value="public FileObserver (string? path, Android.OS.FileObserverEvents mask);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, valuetype Android.OS.FileObserverEvents mask) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.FileObserver.#ctor(System.String,Android.OS.FileObserverEvents)" />
      <MemberSignature Language="F#" Value="new Android.OS.FileObserver : string * Android.OS.FileObserverEvents -&gt; Android.OS.FileObserver" Usage="new Android.OS.FileObserver (path, mask)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "(Ljava/lang/String;I)V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "(Ljava/lang/String;I)V", "")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android29.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mask" Type="Android.OS.FileObserverEvents">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">The file or directory to monitor</param>
        <param name="mask">The event or events (added together) to watch for</param>
        <summary>Create a new file observer for a certain file or directory.</summary>
        <remarks>
          <para>Create a new file observer for a certain file or directory.
            Monitoring does not start on creation!  You must call
            <c>#startWatching()</c> before you will receive events.</para>
          <para>This member is deprecated. use <c>#FileObserver(File, int)</c> instead.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/FileObserver#FileObserver(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.os.FileObserver.FileObserver(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.OS.FileObserver.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.OS.FileObserver.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEvent">
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub OnEvent (e As FileObserverEvents, path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void OnEvent(Android::OS::FileObserverEvents e, System::String ^ path);" />
      <MemberSignature Language="C#" Value="public abstract void OnEvent (Android.OS.FileObserverEvents e, string? path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnEvent(valuetype Android.OS.FileObserverEvents e, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.FileObserver.OnEvent(Android.OS.FileObserverEvents,System.String)" />
      <MemberSignature Language="F#" Value="abstract member OnEvent : Android.OS.FileObserverEvents * string -&gt; unit" Usage="fileObserver.OnEvent (e, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("onEvent", "(ILjava/lang/String;)V", "GetOnEvent_ILjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("onEvent", "(ILjava/lang/String;)V", "GetOnEvent_ILjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="Android.OS.FileObserverEvents">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="e">The type of event which happened</param>
        <param name="event">The type of event which happened</param>
        <param name="path">The path, relative to the main monitored file or directory,
                of the file or directory which triggered the event.  This value can
                be <c>null</c> for certain events, such as <c>#MOVE_SELF</c>.</param>
        <summary>The event handler, which must be implemented by subclasses.</summary>
        <remarks>
          <para>The event handler, which must be implemented by subclasses.
            
            &lt;p class="note"&gt;This method is invoked on a special FileObserver thread.
            It runs independently of any threads, so take care to use appropriate
            synchronization!  Consider using <c>Handler#post(Runnable)</c> to shift
            event handling work to the main thread to avoid concurrency problems.&lt;/p&gt;</para>
          <para>Event handlers must not throw exceptions.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/FileObserver#onEvent(int,%20java.lang.String)" title="Reference documentation">Java documentation for <code>android.os.FileObserver.onEvent(int, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StartWatching">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StartWatching ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartWatching();" />
      <MemberSignature Language="C#" Value="public virtual void StartWatching ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartWatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.FileObserver.StartWatching" />
      <MemberSignature Language="F#" Value="abstract member StartWatching : unit -&gt; unit&#xA;override this.StartWatching : unit -&gt; unit" Usage="fileObserver.StartWatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("startWatching", "()V", "GetStartWatchingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("startWatching", "()V", "GetStartWatchingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Start watching for events.</summary>
        <remarks>
          <para>Start watching for events.  The monitored file or directory must exist at
            this time, or else no events will be reported (even if it appears later).
            If monitoring is already started, this call has no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/FileObserver#startWatching()" title="Reference documentation">Java documentation for <code>android.os.FileObserver.startWatching()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="StopWatching">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub StopWatching ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopWatching();" />
      <MemberSignature Language="C#" Value="public virtual void StopWatching ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopWatching() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.FileObserver.StopWatching" />
      <MemberSignature Language="F#" Value="abstract member StopWatching : unit -&gt; unit&#xA;override this.StopWatching : unit -&gt; unit" Usage="fileObserver.StopWatching " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("stopWatching", "()V", "GetStopWatchingHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("stopWatching", "()V", "GetStopWatchingHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stop watching for events.</summary>
        <remarks>
          <para>Stop watching for events.  Some events may be in process, so events
            may continue to be reported even after this method completes.  If
            monitoring is already stopped, this call has no effect.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/FileObserver#stopWatching()" title="Reference documentation">Java documentation for <code>android.os.FileObserver.stopWatching()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.OS.FileObserver.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.OS.FileObserver.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.OS.FileObserver.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.OS.FileObserver.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
