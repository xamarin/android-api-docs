<Type Name="PowerManager+WakeLock" FullName="Android.OS.PowerManager+WakeLock">
  <TypeSignature Language="VB.NET" Value="Public Class PowerManager.WakeLock&#xA;Inherits Object" />
  <TypeSignature Language="C++ CLI" Value="public: ref class PowerManager::WakeLock : Java::Lang::Object" />
  <TypeSignature Language="C#" Value="public class PowerManager.WakeLock : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit PowerManager/WakeLock extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.OS.PowerManager.WakeLock" />
  <TypeSignature Language="F#" Value="type PowerManager.WakeLock = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/os/PowerManager$WakeLock", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/os/PowerManager$WakeLock", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(0)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(0)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A wake lock is a mechanism to indicate that your application needs
            to have the device stay on.</summary>
    <remarks>
      <para>A wake lock is a mechanism to indicate that your application needs
            to have the device stay on.</para>
      <para>Any application using a WakeLock must request the <c>android.permission.WAKE_LOCK</c>
            permission in an <c>&lt;uses-permission&gt;</c> element of the application's manifest.
            Obtain a wake lock by calling <c>PowerManager#newWakeLock(int, String)</c>.</para>
      <para>Call <c>#acquire()</c> to acquire the wake lock and force the device to stay
            on at the level that was requested when the wake lock was created.</para>
      <para>Call <c>#release()</c> when you are done and don't need the lock anymore.
            It is very important to do this as soon as possible to avoid running down the
            device's battery excessively.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/os/PowerManager.WakeLock" title="Reference documentation">Java documentation for <code>android.os.PowerManager.WakeLock</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="VB.NET" Value="Protected Sub New (javaReference As IntPtr, transfer As JniHandleOwnership)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WakeLock(IntPtr javaReference, Android::Runtime::JniHandleOwnership transfer);" />
      <MemberSignature Language="C#" Value="protected WakeLock (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.WakeLock.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.OS.PowerManager.WakeLock : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.OS.PowerManager.WakeLock" Usage="new Android.OS.PowerManager.WakeLock (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Acquire">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Acquire ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Acquire();" />
      <MemberSignature Language="C#" Value="public virtual void Acquire ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Acquire() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.WakeLock.Acquire" />
      <MemberSignature Language="F#" Value="abstract member Acquire : unit -&gt; unit&#xA;override this.Acquire : unit -&gt; unit" Usage="wakeLock.Acquire " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acquire", "()V", "GetAcquireHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acquire", "()V", "GetAcquireHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Acquires the wake lock.</summary>
        <remarks>
          <para>Acquires the wake lock.</para>
          <para>Ensures that the device is on at the level requested when
            the wake lock was created.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager.WakeLock#acquire()" title="Reference documentation">Java documentation for <code>android.os.PowerManager.WakeLock.acquire()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Acquire">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Acquire (timeout As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Acquire(long timeout);" />
      <MemberSignature Language="C#" Value="public virtual void Acquire (long timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Acquire(int64 timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.WakeLock.Acquire(System.Int64)" />
      <MemberSignature Language="F#" Value="abstract member Acquire : int64 -&gt; unit&#xA;override this.Acquire : int64 -&gt; unit" Usage="wakeLock.Acquire timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("acquire", "(J)V", "GetAcquire_JHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("acquire", "(J)V", "GetAcquire_JHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="timeout">The timeout after which to release the wake lock, in milliseconds.</param>
        <summary>Acquires the wake lock with a timeout.</summary>
        <remarks>
          <para>Acquires the wake lock with a timeout.</para>
          <para>Ensures that the device is on at the level requested when
            the wake lock was created.  The lock will be released after the given timeout
            expires.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager.WakeLock#acquire(long)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.WakeLock.acquire(long)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsHeld">
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsHeld As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsHeld { bool get(); };" />
      <MemberSignature Language="C#" Value="public virtual bool IsHeld { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHeld" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.WakeLock.IsHeld" />
      <MemberSignature Language="F#" Value="member this.IsHeld : bool" Usage="Android.OS.PowerManager.WakeLock.IsHeld" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isHeld", "()Z", "GetIsHeldHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isHeld", "()Z", "GetIsHeldHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the wake lock has been acquired but not yet released.</summary>
        <value>True if the wake lock is held.</value>
        <remarks>
          <para>Returns true if the wake lock has been acquired but not yet released.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager.WakeLock#isHeld()" title="Reference documentation">Java documentation for <code>android.os.PowerManager.WakeLock.isHeld()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property JniPeerMembers As JniPeerMembers" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Java::Interop::JniPeerMembers ^ JniPeerMembers { Java::Interop::JniPeerMembers ^ get(); };" />
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.WakeLock.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.OS.PowerManager.WakeLock.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Release ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Release();" />
      <MemberSignature Language="C#" Value="public virtual void Release ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.WakeLock.Release" />
      <MemberSignature Language="F#" Value="abstract member Release : unit -&gt; unit&#xA;override this.Release : unit -&gt; unit" Usage="wakeLock.Release " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "()V", "GetReleaseHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "()V", "GetReleaseHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Releases the wake lock.</summary>
        <remarks>
          <para>Releases the wake lock.</para>
          <para>This method releases your claim to the CPU or screen being on.
            The screen may turn off shortly after you release the wake lock, or it may
            not if there are other wake locks still held.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager.WakeLock#release()" title="Reference documentation">Java documentation for <code>android.os.PowerManager.WakeLock.release()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Release">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Release (flags As WakeLockFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Release(Android::OS::WakeLockFlags flags);" />
      <MemberSignature Language="C#" Value="public virtual void Release (Android.OS.WakeLockFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Release(valuetype Android.OS.WakeLockFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.WakeLock.Release(Android.OS.WakeLockFlags)" />
      <MemberSignature Language="F#" Value="abstract member Release : Android.OS.WakeLockFlags -&gt; unit&#xA;override this.Release : Android.OS.WakeLockFlags -&gt; unit" Usage="wakeLock.Release flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("release", "(I)V", "GetRelease_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("release", "(I)V", "GetRelease_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.OS.WakeLockFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Combination of flag values to modify the release behavior.
            Currently only <c>#RELEASE_FLAG_WAIT_FOR_NO_PROXIMITY</c> is supported.
            Passing 0 is equivalent to calling <c>#release()</c>.</param>
        <summary>Releases the wake lock with flags to modify the release behavior.</summary>
        <remarks>
          <para>Releases the wake lock with flags to modify the release behavior.</para>
          <para>This method releases your claim to the CPU or screen being on.
            The screen may turn off shortly after you release the wake lock, or it may
            not if there are other wake locks still held.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager.WakeLock#release(int)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.WakeLock.release(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetReferenceCounted">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetReferenceCounted (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetReferenceCounted(bool value);" />
      <MemberSignature Language="C#" Value="public virtual void SetReferenceCounted (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetReferenceCounted(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.WakeLock.SetReferenceCounted(System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetReferenceCounted : bool -&gt; unit&#xA;override this.SetReferenceCounted : bool -&gt; unit" Usage="wakeLock.SetReferenceCounted value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setReferenceCounted", "(Z)V", "GetSetReferenceCounted_ZHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setReferenceCounted", "(Z)V", "GetSetReferenceCounted_ZHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">True to make the wake lock reference counted, false to
            make the wake lock non-reference counted.</param>
        <summary>Sets whether this WakeLock is reference counted.</summary>
        <remarks>
          <para>Sets whether this WakeLock is reference counted.</para>
          <para>Wake locks are reference counted by default.  If a wake lock is
            reference counted, then each call to <c>#acquire()</c> must be
            balanced by an equal number of calls to <c>#release()</c>.  If a wake
            lock is not reference counted, then one call to <c>#release()</c> is
            sufficient to undo the effect of all previous calls to <c>#acquire()</c>.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager.WakeLock#setReferenceCounted(boolean)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.WakeLock.setReferenceCounted(boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetStateListener">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetStateListener (executor As IExecutor, listener As PowerManager.IWakeLockStateListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetStateListener(Java::Util::Concurrent::IExecutor ^ executor, Android::OS::PowerManager::IWakeLockStateListener ^ listener);" />
      <MemberSignature Language="C#" Value="public virtual void SetStateListener (Java.Util.Concurrent.IExecutor executor, Android.OS.PowerManager.IWakeLockStateListener? listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetStateListener(class Java.Util.Concurrent.IExecutor executor, class Android.OS.PowerManager/IWakeLockStateListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.WakeLock.SetStateListener(Java.Util.Concurrent.IExecutor,Android.OS.PowerManager.IWakeLockStateListener)" />
      <MemberSignature Language="F#" Value="abstract member SetStateListener : Java.Util.Concurrent.IExecutor * Android.OS.PowerManager.IWakeLockStateListener -&gt; unit&#xA;override this.SetStateListener : Java.Util.Concurrent.IExecutor * Android.OS.PowerManager.IWakeLockStateListener -&gt; unit" Usage="wakeLock.SetStateListener (executor, listener)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setStateListener", "(Ljava/util/concurrent/Executor;Landroid/os/PowerManager$WakeLockStateListener;)V", "GetSetStateListener_Ljava_util_concurrent_Executor_Landroid_os_PowerManager_WakeLockStateListener_Handler", ApiSince=33)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setStateListener", "(Ljava/util/concurrent/Executor;Landroid/os/PowerManager$WakeLockStateListener;)V", "GetSetStateListener_Ljava_util_concurrent_Executor_Landroid_os_PowerManager_WakeLockStateListener_Handler", ApiSince=33)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android33.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android33.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="executor" Type="Java.Util.Concurrent.IExecutor" />
        <Parameter Name="listener" Type="Android.OS.PowerManager+IWakeLockStateListener">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(2)]</AttributeName>
              <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(2)&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="executor">To be added.</param>
        <param name="listener">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetWorkSource">
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetWorkSource (ws As WorkSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetWorkSource(Android::OS::WorkSource ^ ws);" />
      <MemberSignature Language="C#" Value="public virtual void SetWorkSource (Android.OS.WorkSource? ws);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetWorkSource(class Android.OS.WorkSource ws) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.PowerManager.WakeLock.SetWorkSource(Android.OS.WorkSource)" />
      <MemberSignature Language="F#" Value="abstract member SetWorkSource : Android.OS.WorkSource -&gt; unit&#xA;override this.SetWorkSource : Android.OS.WorkSource -&gt; unit" Usage="wakeLock.SetWorkSource ws" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setWorkSource", "(Landroid/os/WorkSource;)V", "GetSetWorkSource_Landroid_os_WorkSource_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setWorkSource", "(Landroid/os/WorkSource;)V", "GetSetWorkSource_Landroid_os_WorkSource_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ws" Type="Android.OS.WorkSource" />
      </Parameters>
      <Docs>
        <param name="ws">The work source, or null if none.</param>
        <summary>Sets the work source associated with the wake lock.</summary>
        <remarks>
          <para>Sets the work source associated with the wake lock.</para>
          <para>The work source is used to determine on behalf of which application
            the wake lock is being held.  This is useful in the case where a
            service is performing work on behalf of an application so that the
            cost of that work can be accounted to the application.</para>
          <para>Make sure to follow the tag naming convention when using WorkSource
            to make it easier for app developers to understand wake locks
            attributed to them. See <c>PowerManager#newWakeLock(int, String)</c>
            documentation.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/os/PowerManager.WakeLock#setWorkSource(android.os.WorkSource)" title="Reference documentation">Java documentation for <code>android.os.PowerManager.WakeLock.setWorkSource(android.os.WorkSource)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdClass As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property IntPtr ThresholdClass { IntPtr get(); };" />
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.WakeLock.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.OS.PowerManager.WakeLock.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ThresholdType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ ThresholdType { Type ^ get(); };" />
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.OS.PowerManager.WakeLock.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.OS.PowerManager.WakeLock.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
