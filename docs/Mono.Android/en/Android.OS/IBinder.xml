<Type Name="IBinder" FullName="Android.OS.IBinder">
  <TypeSignature Language="C#" Value="public interface IBinder : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBinder implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Android.OS.IBinder" />
  <TypeSignature Language="F#" Value="type IBinder = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/os/IBinder", "", "Android.OS.IBinderInvoker", ApiSince=1)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>Base interface for a remotable object, the core part of a lightweight
 remote procedure call mechanism designed for high performance when
 performing in-process and cross-process calls.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/os/IBinder" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="Dump">
      <MemberSignature Language="C#" Value="public void Dump (Java.IO.FileDescriptor fd, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dump(class Java.IO.FileDescriptor fd, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.IBinder.Dump(Java.IO.FileDescriptor,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member Dump : Java.IO.FileDescriptor * string[] -&gt; unit" Usage="iBinder.Dump (fd, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dump", "(Ljava/io/FileDescriptor;[Ljava/lang/String;)V", "GetDump_Ljava_io_FileDescriptor_arrayLjava_lang_String_Handler:Android.OS.IBinderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="fd">The raw file descriptor that the dump is being sent to.</param>
        <param name="args">additional arguments to the dump request.
</param>
        <summary>Print the object's state into the given stream.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
        <exception cref="T:Android.OS.RemoteException" />
      </Docs>
    </Member>
    <Member MemberName="DumpAsync">
      <MemberSignature Language="C#" Value="public void DumpAsync (Java.IO.FileDescriptor fd, string[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DumpAsync(class Java.IO.FileDescriptor fd, string[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.IBinder.DumpAsync(Java.IO.FileDescriptor,System.String[])" />
      <MemberSignature Language="F#" Value="abstract member DumpAsync : Java.IO.FileDescriptor * string[] -&gt; unit" Usage="iBinder.DumpAsync (fd, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("dumpAsync", "(Ljava/io/FileDescriptor;[Ljava/lang/String;)V", "GetDumpAsync_Ljava_io_FileDescriptor_arrayLjava_lang_String_Handler:Android.OS.IBinderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null", ApiSince=13)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fd" Type="Java.IO.FileDescriptor" />
        <Parameter Name="args" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="fd">The raw file descriptor that the dump is being sent to.</param>
        <param name="args">additional arguments to the dump request.
</param>
        <summary>Like <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android OS BinderConsts dump(java io FileDescriptor,java lang String[])';scope=Xamarin" title="Android.OS.BinderConsts.dump(java.io.FileDescriptor,java.lang.String[])">Android.OS.BinderConsts.dump(java.io.FileDescriptor,java.lang.String[])</a></format> but always executes
 asynchronously.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 13" />
        <exception cref="T:Android.OS.RemoteException" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceDescriptor">
      <MemberSignature Language="C#" Value="public string InterfaceDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InterfaceDescriptor" />
      <MemberSignature Language="DocId" Value="P:Android.OS.IBinder.InterfaceDescriptor" />
      <MemberSignature Language="F#" Value="member this.InterfaceDescriptor : string" Usage="Android.OS.IBinder.InterfaceDescriptor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInterfaceDescriptor", "()Ljava/lang/String;", "GetGetInterfaceDescriptorHandler:Android.OS.IBinderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the canonical name of the interface supported by this binder.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.OS.RemoteException" />
      </Docs>
    </Member>
    <Member MemberName="IsBinderAlive">
      <MemberSignature Language="C#" Value="public bool IsBinderAlive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBinderAlive" />
      <MemberSignature Language="DocId" Value="P:Android.OS.IBinder.IsBinderAlive" />
      <MemberSignature Language="F#" Value="member this.IsBinderAlive : bool" Usage="Android.OS.IBinder.IsBinderAlive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isBinderAlive", "()Z", "GetIsBinderAliveHandler:Android.OS.IBinderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Check to see if the process that the binder is in is still alive.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="LinkToDeath">
      <MemberSignature Language="C#" Value="public void LinkToDeath (Android.OS.IBinderDeathRecipient recipient, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LinkToDeath(class Android.OS.IBinderDeathRecipient recipient, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.IBinder.LinkToDeath(Android.OS.IBinderDeathRecipient,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member LinkToDeath : Android.OS.IBinderDeathRecipient * int -&gt; unit" Usage="iBinder.LinkToDeath (recipient, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("linkToDeath", "(Landroid/os/IBinder$DeathRecipient;I)V", "GetLinkToDeath_Landroid_os_IBinder_DeathRecipient_IHandler:Android.OS.IBinderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipient" Type="Android.OS.IBinderDeathRecipient" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="recipient">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>Register the recipient for a notification if this binder
 goes away.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.OS.RemoteException">if the target IBinder's
 process has already died.</exception>
      </Docs>
    </Member>
    <Member MemberName="PingBinder">
      <MemberSignature Language="C#" Value="public bool PingBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool PingBinder() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.IBinder.PingBinder" />
      <MemberSignature Language="F#" Value="abstract member PingBinder : unit -&gt; bool" Usage="iBinder.PingBinder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("pingBinder", "()Z", "GetPingBinderHandler:Android.OS.IBinderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Check to see if the object still exists.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryLocalInterface">
      <MemberSignature Language="C#" Value="public Android.OS.IInterface QueryLocalInterface (string descriptor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.OS.IInterface QueryLocalInterface(string descriptor) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.IBinder.QueryLocalInterface(System.String)" />
      <MemberSignature Language="F#" Value="abstract member QueryLocalInterface : string -&gt; Android.OS.IInterface" Usage="iBinder.QueryLocalInterface descriptor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("queryLocalInterface", "(Ljava/lang/String;)Landroid/os/IInterface;", "GetQueryLocalInterface_Ljava_lang_String_Handler:Android.OS.IBinderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.OS.IInterface</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="descriptor" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="descriptor">To be added.</param>
        <summary>Attempt to retrieve a local implementation of an interface
 for this Binder object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Transact">
      <MemberSignature Language="C#" Value="public bool Transact (int code, Android.OS.Parcel data, Android.OS.Parcel reply, Android.OS.TransactionFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Transact(int32 code, class Android.OS.Parcel data, class Android.OS.Parcel reply, valuetype Android.OS.TransactionFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.IBinder.Transact(System.Int32,Android.OS.Parcel,Android.OS.Parcel,Android.OS.TransactionFlags)" />
      <MemberSignature Language="F#" Value="abstract member Transact : int * Android.OS.Parcel * Android.OS.Parcel * Android.OS.TransactionFlags -&gt; bool" Usage="iBinder.Transact (code, data, reply, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("transact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler:Android.OS.IBinderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="code" Type="System.Int32" />
        <Parameter Name="data" Type="Android.OS.Parcel" />
        <Parameter Name="reply" Type="Android.OS.Parcel" />
        <Parameter Name="flags" Type="Android.OS.TransactionFlags">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="code">The action to perform.  This should
 be a number between <see cref="F:Android.OS.BinderConsts.FirstCallTransaction" /> and
 <see cref="F:Android.OS.BinderConsts.LastCallTransaction" />.</param>
        <param name="data">Marshalled data to send to the target.  Must not be null.
 If you are not sending any data, you must create an empty Parcel
 that is given here.</param>
        <param name="reply">Marshalled data to be received from the target.  May be
 null if you are not interested in the return value.</param>
        <param name="flags">Additional operation flags.  Either 0 for a normal
 RPC, or <see cref="F:Android.OS.BinderConsts.FlagOneway" /> for a one-way RPC.
</param>
        <summary>Perform a generic operation with the object.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.OS.RemoteException" />
      </Docs>
    </Member>
    <Member MemberName="UnlinkToDeath">
      <MemberSignature Language="C#" Value="public bool UnlinkToDeath (Android.OS.IBinderDeathRecipient recipient, int flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool UnlinkToDeath(class Android.OS.IBinderDeathRecipient recipient, int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.OS.IBinder.UnlinkToDeath(Android.OS.IBinderDeathRecipient,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member UnlinkToDeath : Android.OS.IBinderDeathRecipient * int -&gt; bool" Usage="iBinder.UnlinkToDeath (recipient, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("unlinkToDeath", "(Landroid/os/IBinder$DeathRecipient;I)Z", "GetUnlinkToDeath_Landroid_os_IBinder_DeathRecipient_IHandler:Android.OS.IBinderInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recipient" Type="Android.OS.IBinderDeathRecipient" />
        <Parameter Name="flags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="recipient">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>Remove a previously registered death notification.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Util.NoSuchElementException">if the given
 <format type="text/html"><var>recipient</var></format> has not been registered with the IBinder, and
 the IBinder is still alive.  Note that if the <format type="text/html"><var>recipient</var></format>
 was never registered, but the IBinder has already died, then this
 exception will <i>not</i> be thrown, and you will receive a false
 return value instead.
</exception>
      </Docs>
    </Member>
  </Members>
</Type>
