<Type Name="BluetoothLeAdvertiser" FullName="Android.Bluetooth.LE.BluetoothLeAdvertiser">
  <TypeSignature Language="C#" Value="public sealed class BluetoothLeAdvertiser : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BluetoothLeAdvertiser extends Java.Lang.Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/bluetooth/le/BluetoothLeAdvertiser", DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>This class provides a way to perform Bluetooth LE advertise operations, such as starting and
 stopping advertising.</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">This class provides a way to perform Bluetooth LE advertise operations, such as starting and
 stopping advertising. An advertiser can broadcast up to 31 bytes of advertisement data
 represented by <c><see cref="T:Android.Bluetooth.LE.AdvertiseData" /></c>.
 </para>
      <para tool="javadoc-to-mdoc">
 To get an instance of <c><see cref="T:Android.Bluetooth.LE.BluetoothLeAdvertiser" /></c>, call the
 <c><see cref="P:Android.Bluetooth.BluetoothAdapter.BluetoothLeAdvertiser" /></c> method.
 </para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <b>Note:</b>
        </format> Most of the methods here require <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#BLUETOOTH_ADMIN" /></c>
 permission.</para>
      <format type="text/html">
        <h5 class="jd-tagtitle">See Also</h5>
      </format>
      <list type="bullet">
        <item>
          <term>
            <c>
              <see cref="T:Android.Bluetooth.LE.AdvertiseData" />
            </c>
          </term>
        </item>
      </list>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/android/bluetooth/le/BluetoothLeAdvertiser.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="StartAdvertising">
      <MemberSignature Language="C#" Value="public void StartAdvertising (Android.Bluetooth.LE.AdvertiseSettings settings, Android.Bluetooth.LE.AdvertiseData advertiseData, Android.Bluetooth.LE.AdvertiseCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartAdvertising(class Android.Bluetooth.LE.AdvertiseSettings settings, class Android.Bluetooth.LE.AdvertiseData advertiseData, class Android.Bluetooth.LE.AdvertiseCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startAdvertising", "(Landroid/bluetooth/le/AdvertiseSettings;Landroid/bluetooth/le/AdvertiseData;Landroid/bluetooth/le/AdvertiseCallback;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Android.Bluetooth.LE.AdvertiseSettings" />
        <Parameter Name="advertiseData" Type="Android.Bluetooth.LE.AdvertiseData" />
        <Parameter Name="callback" Type="Android.Bluetooth.LE.AdvertiseCallback" />
      </Parameters>
      <Docs>
        <param name="settings">Settings for Bluetooth LE advertising.</param>
        <param name="advertiseData">Advertisement data to be broadcasted.</param>
        <param name="callback">Callback for advertising status.
</param>
        <summary>Start Bluetooth LE Advertising.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Start Bluetooth LE Advertising. On success, the <c>advertiseData</c> will be broadcasted.
 Returns immediately, the operation status is delivered through <c>callback</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 Requires <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#BLUETOOTH_ADMIN" /></c> permission.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/bluetooth/le/BluetoothLeAdvertiser.html#startAdvertising(android.bluetooth.le.AdvertiseSettings, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertiseCallback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartAdvertising">
      <MemberSignature Language="C#" Value="public void StartAdvertising (Android.Bluetooth.LE.AdvertiseSettings settings, Android.Bluetooth.LE.AdvertiseData advertiseData, Android.Bluetooth.LE.AdvertiseData scanResponse, Android.Bluetooth.LE.AdvertiseCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartAdvertising(class Android.Bluetooth.LE.AdvertiseSettings settings, class Android.Bluetooth.LE.AdvertiseData advertiseData, class Android.Bluetooth.LE.AdvertiseData scanResponse, class Android.Bluetooth.LE.AdvertiseCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startAdvertising", "(Landroid/bluetooth/le/AdvertiseSettings;Landroid/bluetooth/le/AdvertiseData;Landroid/bluetooth/le/AdvertiseData;Landroid/bluetooth/le/AdvertiseCallback;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Android.Bluetooth.LE.AdvertiseSettings" />
        <Parameter Name="advertiseData" Type="Android.Bluetooth.LE.AdvertiseData" />
        <Parameter Name="scanResponse" Type="Android.Bluetooth.LE.AdvertiseData" />
        <Parameter Name="callback" Type="Android.Bluetooth.LE.AdvertiseCallback" />
      </Parameters>
      <Docs>
        <param name="settings">Settings for Bluetooth LE advertising.</param>
        <param name="advertiseData">Advertisement data to be advertised in advertisement packet.</param>
        <param name="scanResponse">Scan response associated with the advertisement data.</param>
        <param name="callback">Callback for advertising status.
</param>
        <summary>Start Bluetooth LE Advertising.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Start Bluetooth LE Advertising. The <c>advertiseData</c> will be broadcasted if the
 operation succeeds. The <c>scanResponse</c> is returned when a scanning device sends an
 active scan request. This method returns immediately, the operation status is delivered
 through <c>callback</c>.
 </para>
          <para tool="javadoc-to-mdoc">
 Requires <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#BLUETOOTH_ADMIN" /></c></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/bluetooth/le/BluetoothLeAdvertiser.html#startAdvertising(android.bluetooth.le.AdvertiseSettings, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertiseData, android.bluetooth.le.AdvertiseCallback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopAdvertising">
      <MemberSignature Language="C#" Value="public void StopAdvertising (Android.Bluetooth.LE.AdvertiseCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopAdvertising(class Android.Bluetooth.LE.AdvertiseCallback callback) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopAdvertising", "(Landroid/bluetooth/le/AdvertiseCallback;)V", "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="Android.Bluetooth.LE.AdvertiseCallback" />
      </Parameters>
      <Docs>
        <param name="callback">
          <c>
            <see cref="T:Android.Bluetooth.LE.AdvertiseCallback" />
          </c> identifies the advertising instance to stop.
</param>
        <summary>Stop Bluetooth LE advertising.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Stop Bluetooth LE advertising. The <c>callback</c> must be the same one use in
 <c><see cref="M:Android.Bluetooth.LE.BluetoothLeAdvertiser.StartAdvertising(Android.Bluetooth.LE.AdvertiseSettings,Android.Bluetooth.LE.AdvertiseData,Android.Bluetooth.LE.AdvertiseData)" /></c>.
 </para>
          <para tool="javadoc-to-mdoc">
 Requires <c><see cref="!:NoType:android/Manifest$permission;Href=../../../../reference/android/Manifest.permission.html#BLUETOOTH_ADMIN" /></c> permission.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/android/bluetooth/le/BluetoothLeAdvertiser.html#stopAdvertising(android.bluetooth.le.AdvertiseCallback)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control which <c>jclass</c> is provided to methods like <see cref="M:Android.Runtime.JNIEnv.CallNonvirtualVoidMethod" tool="ReplaceLinkValue" />.</para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">This property is used to control virtual vs. non virtual method dispatch against the underlying JNI object. When this property is equal to the declaring type, then virtual method invocation against the JNI object is performed; otherwise, we assume that the method was overridden by a derived type, and perform non-virtual methdo invocation.</para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
