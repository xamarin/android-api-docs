<Type Name="MockPackageManager" FullName="Android.Test.Mock.MockPackageManager">
  <TypeSignature Language="C#" Value="public class MockPackageManager : Android.Content.PM.PackageManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MockPackageManager extends Android.Content.PM.PackageManager" />
  <TypeSignature Language="DocId" Value="T:Android.Test.Mock.MockPackageManager" />
  <TypeSignature Language="F#" Value="type MockPackageManager = class&#xA;    inherit PackageManager" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Android.Content.PM.PackageManager</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("android/test/mock/MockPackageManager", DoNotGenerateAcw=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("android/test/mock/MockPackageManager", DoNotGenerateAcw=true)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This class is obsoleted in this android platform")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.Versioning.ObsoletedOSPlatform("android24.0", "This class is obsoleted in this android platform")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>A mock <c>android.content.pm.PackageManager</c> class.</summary>
    <remarks>
      <para>A mock <c>android.content.pm.PackageManager</c> class.  All methods are non-functional and throw
            <c>java.lang.UnsupportedOperationException</c>. Override it to provide the operations that you
            need.</para>
      <para>This member is deprecated. Use a mocking framework like <see href="https://github.com/mockito/mockito">Mockito</see>.
            New tests should be written using the
            <see href="https://developer.android.com/tools/testing-support-library/index.html">Android Testing Support Library</see>.</para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/test/mock/MockPackageManager" title="Reference documentation">Java documentation for <code>android.test.mock.MockPackageManager</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MockPackageManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register(".ctor", "()V", "")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register(".ctor", "()V", "")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MockPackageManager (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Test.Mock.MockPackageManager : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Test.Mock.MockPackageManager" Usage="new Android.Test.Mock.MockPackageManager (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPackageToPreferred">
      <MemberSignature Language="C#" Value="public override void AddPackageToPreferred (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddPackageToPreferred(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.AddPackageToPreferred(System.String)" />
      <MemberSignature Language="F#" Value="override this.AddPackageToPreferred : string -&gt; unit" Usage="mockPackageManager.AddPackageToPreferred packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addPackageToPreferred", "(Ljava/lang/String;)V", "GetAddPackageToPreferred_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addPackageToPreferred", "(Ljava/lang/String;)V", "GetAddPackageToPreferred_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddPermission">
      <MemberSignature Language="C#" Value="public override bool AddPermission (Android.Content.PM.PermissionInfo? info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AddPermission(class Android.Content.PM.PermissionInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.AddPermission(Android.Content.PM.PermissionInfo)" />
      <MemberSignature Language="F#" Value="override this.AddPermission : Android.Content.PM.PermissionInfo -&gt; bool" Usage="mockPackageManager.AddPermission info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addPermission", "(Landroid/content/pm/PermissionInfo;)Z", "GetAddPermission_Landroid_content_pm_PermissionInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addPermission", "(Landroid/content/pm/PermissionInfo;)Z", "GetAddPermission_Landroid_content_pm_PermissionInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.PermissionInfo" />
      </Parameters>
      <Docs>
        <param name="info">Description of the permission to be added.</param>
        <summary>Add a new dynamic permission to the system.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="AddPermissionAsync">
      <MemberSignature Language="C#" Value="public override bool AddPermissionAsync (Android.Content.PM.PermissionInfo? info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool AddPermissionAsync(class Android.Content.PM.PermissionInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.AddPermissionAsync(Android.Content.PM.PermissionInfo)" />
      <MemberSignature Language="F#" Value="override this.AddPermissionAsync : Android.Content.PM.PermissionInfo -&gt; bool" Usage="mockPackageManager.AddPermissionAsync info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addPermissionAsync", "(Landroid/content/pm/PermissionInfo;)Z", "GetAddPermissionAsync_Landroid_content_pm_PermissionInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addPermissionAsync", "(Landroid/content/pm/PermissionInfo;)Z", "GetAddPermissionAsync_Landroid_content_pm_PermissionInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.PermissionInfo" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInLongSummaries">To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="AddPreferredActivity">
      <MemberSignature Language="C#" Value="public override void AddPreferredActivity (Android.Content.IntentFilter? filter, Android.Content.MatchResults match, Android.Content.ComponentName[]? set, Android.Content.ComponentName? activity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddPreferredActivity(class Android.Content.IntentFilter filter, valuetype Android.Content.MatchResults match, class Android.Content.ComponentName[] set, class Android.Content.ComponentName activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.AddPreferredActivity(Android.Content.IntentFilter,Android.Content.MatchResults,Android.Content.ComponentName[],Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="override this.AddPreferredActivity : Android.Content.IntentFilter * Android.Content.MatchResults * Android.Content.ComponentName[] * Android.Content.ComponentName -&gt; unit" Usage="mockPackageManager.AddPreferredActivity (filter, match, set, activity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("addPreferredActivity", "(Landroid/content/IntentFilter;I[Landroid/content/ComponentName;Landroid/content/ComponentName;)V", "GetAddPreferredActivity_Landroid_content_IntentFilter_IarrayLandroid_content_ComponentName_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("addPreferredActivity", "(Landroid/content/IntentFilter;I[Landroid/content/ComponentName;Landroid/content/ComponentName;)V", "GetAddPreferredActivity_Landroid_content_IntentFilter_IarrayLandroid_content_ComponentName_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="Android.Content.IntentFilter" />
        <Parameter Name="match" Type="Android.Content.MatchResults">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="set" Type="Android.Content.ComponentName[]" />
        <Parameter Name="activity" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="filter">The set of intents under which this activity will be
 made preferred.</param>
        <param name="match">The IntentFilter match category that this preference
 applies to.</param>
        <param name="set">The set of activities that the user was picking from when
 this preference was made.</param>
        <param name="activity">The component name of the activity that is to be
 preferred.
</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CanonicalToCurrentPackageNames">
      <MemberSignature Language="C#" Value="public override string[]? CanonicalToCurrentPackageNames (string[]? names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] CanonicalToCurrentPackageNames(string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.CanonicalToCurrentPackageNames(System.String[])" />
      <MemberSignature Language="F#" Value="override this.CanonicalToCurrentPackageNames : string[] -&gt; string[]" Usage="mockPackageManager.CanonicalToCurrentPackageNames names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canonicalToCurrentPackageNames", "([Ljava/lang/String;)[Ljava/lang/String;", "GetCanonicalToCurrentPackageNames_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canonicalToCurrentPackageNames", "([Ljava/lang/String;)[Ljava/lang/String;", "GetCanonicalToCurrentPackageNames_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="names">Array of new names to be mapped.</param>
        <summary>Map from a packages canonical name to the current name in use on the device.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="CanRequestPackageInstalls">
      <MemberSignature Language="C#" Value="public override bool CanRequestPackageInstalls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanRequestPackageInstalls() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.CanRequestPackageInstalls" />
      <MemberSignature Language="F#" Value="override this.CanRequestPackageInstalls : unit -&gt; bool" Usage="mockPackageManager.CanRequestPackageInstalls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("canRequestPackageInstalls", "()Z", "GetCanRequestPackageInstallsHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("canRequestPackageInstalls", "()Z", "GetCanRequestPackageInstallsHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckPermission">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.Permission CheckPermission (string? permName, string? pkgName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Content.PM.Permission CheckPermission(string permName, string pkgName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.CheckPermission(System.String,System.String)" />
      <MemberSignature Language="F#" Value="override this.CheckPermission : string * string -&gt; Android.Content.PM.Permission" Usage="mockPackageManager.CheckPermission (permName, pkgName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkPermission", "(Ljava/lang/String;Ljava/lang/String;)I", "GetCheckPermission_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("checkPermission", "(Ljava/lang/String;Ljava/lang/String;)I", "GetCheckPermission_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.Permission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permName" Type="System.String" />
        <Parameter Name="pkgName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permName">The name of the permission you are checking for.</param>
        <param name="pkgName">The name of the package you are checking against.</param>
        <summary>Check whether a particular package has been granted a particular
 permission.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CheckSignatures">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.SignatureResult CheckSignatures (int uid1, int uid2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Content.PM.SignatureResult CheckSignatures(int32 uid1, int32 uid2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.CheckSignatures(System.Int32,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.CheckSignatures : int * int -&gt; Android.Content.PM.SignatureResult" Usage="mockPackageManager.CheckSignatures (uid1, uid2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkSignatures", "(II)I", "GetCheckSignatures_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("checkSignatures", "(II)I", "GetCheckSignatures_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.SignatureResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid1" Type="System.Int32" />
        <Parameter Name="uid2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="uid1">First UID whose signature will be compared.</param>
        <param name="uid2">Second UID whose signature will be compared.</param>
        <summary tool="true">Like <see cref="M:Android.Content.PM.PackageManager.CheckSignatures(System.String,System.String)" />, but takes UIDs of
 the two packages to be checked.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="CheckSignatures">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.SignatureResult CheckSignatures (string? pkg1, string? pkg2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Content.PM.SignatureResult CheckSignatures(string pkg1, string pkg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.CheckSignatures(System.String,System.String)" />
      <MemberSignature Language="F#" Value="override this.CheckSignatures : string * string -&gt; Android.Content.PM.SignatureResult" Usage="mockPackageManager.CheckSignatures (pkg1, pkg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("checkSignatures", "(Ljava/lang/String;Ljava/lang/String;)I", "GetCheckSignatures_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("checkSignatures", "(Ljava/lang/String;Ljava/lang/String;)I", "GetCheckSignatures_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.SignatureResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pkg1" Type="System.String" />
        <Parameter Name="pkg2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pkg1">First package name whose signature will be compared.</param>
        <param name="pkg2">Second package name whose signature will be compared.</param>
        <summary>Compare the signatures of two packages to determine if the same
 signature appears in both of them.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ClearInstantAppCookie">
      <MemberSignature Language="C#" Value="public override void ClearInstantAppCookie ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ClearInstantAppCookie() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.ClearInstantAppCookie" />
      <MemberSignature Language="F#" Value="override this.ClearInstantAppCookie : unit -&gt; unit" Usage="mockPackageManager.ClearInstantAppCookie " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearInstantAppCookie", "()V", "GetClearInstantAppCookieHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearInstantAppCookie", "()V", "GetClearInstantAppCookieHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/test/mock/MockPackageManager#clearInstantAppCookie()" title="Reference documentation">Java documentation for <code>android.test.mock.MockPackageManager.clearInstantAppCookie()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearPackagePreferredActivities">
      <MemberSignature Language="C#" Value="public override void ClearPackagePreferredActivities (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ClearPackagePreferredActivities(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.ClearPackagePreferredActivities(System.String)" />
      <MemberSignature Language="F#" Value="override this.ClearPackagePreferredActivities : string -&gt; unit" Usage="mockPackageManager.ClearPackagePreferredActivities packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("clearPackagePreferredActivities", "(Ljava/lang/String;)V", "GetClearPackagePreferredActivities_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("clearPackagePreferredActivities", "(Ljava/lang/String;)V", "GetClearPackagePreferredActivities_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package whose preferred activity
 mappings are to be removed.
</param>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInLongSummaries">To be added.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="CurrentToCanonicalPackageNames">
      <MemberSignature Language="C#" Value="public override string[]? CurrentToCanonicalPackageNames (string[]? names);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] CurrentToCanonicalPackageNames(string[] names) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.CurrentToCanonicalPackageNames(System.String[])" />
      <MemberSignature Language="F#" Value="override this.CurrentToCanonicalPackageNames : string[] -&gt; string[]" Usage="mockPackageManager.CurrentToCanonicalPackageNames names" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("currentToCanonicalPackageNames", "([Ljava/lang/String;)[Ljava/lang/String;", "GetCurrentToCanonicalPackageNames_arrayLjava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("currentToCanonicalPackageNames", "([Ljava/lang/String;)[Ljava/lang/String;", "GetCurrentToCanonicalPackageNames_arrayLjava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="names" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="names">Array of current names to be mapped.</param>
        <summary>Map from the current package names in use on the device to whatever
 the current canonical name of that package is.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 8" />
      </Docs>
    </Member>
    <Member MemberName="DefaultActivityIcon">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? DefaultActivityIcon { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Graphics.Drawables.Drawable DefaultActivityIcon" />
      <MemberSignature Language="DocId" Value="P:Android.Test.Mock.MockPackageManager.DefaultActivityIcon" />
      <MemberSignature Language="F#" Value="member this.DefaultActivityIcon : Android.Graphics.Drawables.Drawable" Usage="Android.Test.Mock.MockPackageManager.DefaultActivityIcon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDefaultActivityIcon", "()Landroid/graphics/drawable/Drawable;", "GetGetDefaultActivityIconHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDefaultActivityIcon", "()Landroid/graphics/drawable/Drawable;", "GetGetDefaultActivityIconHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return the generic icon for an activity that is used when no specific
 icon is defined.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ExtendVerificationTimeout">
      <MemberSignature Language="C#" Value="public override void ExtendVerificationTimeout (int id, Android.Content.PM.PackageInstallVerification verificationCodeAtTimeout, long millisecondsToDelay);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtendVerificationTimeout(int32 id, valuetype Android.Content.PM.PackageInstallVerification verificationCodeAtTimeout, int64 millisecondsToDelay) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.ExtendVerificationTimeout(System.Int32,Android.Content.PM.PackageInstallVerification,System.Int64)" />
      <MemberSignature Language="F#" Value="override this.ExtendVerificationTimeout : int * Android.Content.PM.PackageInstallVerification * int64 -&gt; unit" Usage="mockPackageManager.ExtendVerificationTimeout (id, verificationCodeAtTimeout, millisecondsToDelay)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("extendVerificationTimeout", "(IIJ)V", "GetExtendVerificationTimeout_IIJHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("extendVerificationTimeout", "(IIJ)V", "GetExtendVerificationTimeout_IIJHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="verificationCodeAtTimeout" Type="Android.Content.PM.PackageInstallVerification">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="millisecondsToDelay" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="id">pending package identifier as passed via the
            <see cref="F:Android.Content.PM.PackageManager.ExtraVerificationId" /> Intent extra.</param>
        <param name="verificationCodeAtTimeout">either
            <see cref="F:Android.Content.PM.PackageManager.VerificationAllow" /> or
            <see cref="F:Android.Content.PM.PackageManager.VerificationReject" />. If
            <c>verificationCodeAtTimeout</c> is neither
            <see cref="F:Android.Content.PM.PackageManager.VerificationAllow" /> or
            <see cref="F:Android.Content.PM.PackageManager.VerificationReject" />, then
            <c>verificationCodeAtTimeout</c> will default to
            <see cref="F:Android.Content.PM.PackageManager.VerificationReject" />.</param>
        <param name="millisecondsToDelay">the amount of time requested for the timeout.
            Must be positive and less than
            <see cref="F:Android.Content.PM.PackageManager.MaximumVerificationTimeout" />. If
            <c>millisecondsToDelay</c> is out of bounds,
            <c>millisecondsToDelay</c> will be set to the closest in
            bounds value; namely, 0 or
            <see cref="F:Android.Content.PM.PackageManager.MaximumVerificationTimeout" />.</param>
        <summary>Allows a package listening to the
 <see cref="F:Android.Content.Intent.ActionPackageNeedsVerification" /> to extend the default timeout for a response and declare what
 action to perform after the timeout occurs.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 17" />
      </Docs>
    </Member>
    <Member MemberName="GetActivityBanner">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetActivityBanner (Android.Content.ComponentName? activityName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetActivityBanner(class Android.Content.ComponentName activityName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetActivityBanner(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="override this.GetActivityBanner : Android.Content.ComponentName -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetActivityBanner activityName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActivityBanner", "(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;", "GetGetActivityBanner_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getActivityBanner", "(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;", "GetGetActivityBanner_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="activityName">Name of the activity whose banner is to be retrieved.</param>
        <summary tool="true">Retrieve the banner associated with an activity.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
      <since version="Added in API level 20" />
    </Member>
    <Member MemberName="GetActivityBanner">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetActivityBanner (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetActivityBanner(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetActivityBanner(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="override this.GetActivityBanner : Android.Content.Intent -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetActivityBanner intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActivityBanner", "(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;", "GetGetActivityBanner_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getActivityBanner", "(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;", "GetGetActivityBanner_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The intent for which you would like to retrieve a banner.</param>
        <summary>Retrieve the banner associated with an Intent.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetActivityIcon">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetActivityIcon (Android.Content.ComponentName? activityName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetActivityIcon(class Android.Content.ComponentName activityName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetActivityIcon(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="override this.GetActivityIcon : Android.Content.ComponentName -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetActivityIcon activityName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActivityIcon", "(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;", "GetGetActivityIcon_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getActivityIcon", "(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;", "GetGetActivityIcon_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="activityName">Name of the activity whose icon is to be retrieved.</param>
        <summary tool="true">Retrieve the icon associated with an activity.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetActivityIcon">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetActivityIcon (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetActivityIcon(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetActivityIcon(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="override this.GetActivityIcon : Android.Content.Intent -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetActivityIcon intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActivityIcon", "(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;", "GetGetActivityIcon_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getActivityIcon", "(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;", "GetGetActivityIcon_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The intent for which you would like to retrieve an icon.</param>
        <summary>Retrieve the icon associated with an Intent.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetActivityInfo">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.ActivityInfo? GetActivityInfo (Android.Content.ComponentName? className, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.ActivityInfo GetActivityInfo(class Android.Content.ComponentName className, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetActivityInfo(Android.Content.ComponentName,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetActivityInfo : Android.Content.ComponentName * Android.Content.PM.PackageInfoFlags -&gt; Android.Content.PM.ActivityInfo" Usage="mockPackageManager.GetActivityInfo (className, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActivityInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;", "GetGetActivityInfo_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getActivityInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;", "GetGetActivityInfo_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ActivityInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="className">The full component name (i.e.
 com.google.apps.contacts/com.google.apps.contacts.ContactsList) of an Activity
 class.</param>
        <param name="flags">Additional option flags. Use any combination of
 <see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" />, <see cref="F:Android.Content.PM.PackageInfoFlags.SharedLibraryFiles" tool="ReplaceLinkValue" />,
 to modify the data (in ApplicationInfo) returned.</param>
        <summary>Retrieve all of the information we know about a particular activity
 class.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogo">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetActivityLogo (Android.Content.ComponentName? activityName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetActivityLogo(class Android.Content.ComponentName activityName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetActivityLogo(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="override this.GetActivityLogo : Android.Content.ComponentName -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetActivityLogo activityName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActivityLogo", "(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;", "GetGetActivityLogo_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getActivityLogo", "(Landroid/content/ComponentName;)Landroid/graphics/drawable/Drawable;", "GetGetActivityLogo_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="activityName">Name of the activity whose logo is to be retrieved.</param>
        <summary tool="true">Retrieve the logo associated with an activity.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetActivityLogo">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetActivityLogo (Android.Content.Intent? intent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetActivityLogo(class Android.Content.Intent intent) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetActivityLogo(Android.Content.Intent)" />
      <MemberSignature Language="F#" Value="override this.GetActivityLogo : Android.Content.Intent -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetActivityLogo intent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getActivityLogo", "(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;", "GetGetActivityLogo_Landroid_content_Intent_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getActivityLogo", "(Landroid/content/Intent;)Landroid/graphics/drawable/Drawable;", "GetGetActivityLogo_Landroid_content_Intent_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
      </Parameters>
      <Docs>
        <param name="intent">The intent for which you would like to retrieve a logo.</param>
        <summary>Retrieve the logo associated with an Intent.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetAllIntentFilters">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.Content.IntentFilter&gt;? GetAllIntentFilters (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.IntentFilter&gt; GetAllIntentFilters(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetAllIntentFilters(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetAllIntentFilters : string -&gt; System.Collections.Generic.IList&lt;Android.Content.IntentFilter&gt;&#xA;override this.GetAllIntentFilters : string -&gt; System.Collections.Generic.IList&lt;Android.Content.IntentFilter&gt;" Usage="mockPackageManager.GetAllIntentFilters packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAllIntentFilters", "(Ljava/lang/String;)Ljava/util/List;", "GetGetAllIntentFilters_Ljava_lang_String_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAllIntentFilters", "(Ljava/lang/String;)Ljava/util/List;", "GetGetAllIntentFilters_Ljava_lang_String_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.IntentFilter&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllPermissionGroups">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.PermissionGroupInfo&gt;? GetAllPermissionGroups (Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PermissionGroupInfo&gt; GetAllPermissionGroups(valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetAllPermissionGroups(Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetAllPermissionGroups : Android.Content.PM.PackageInfoFlags -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.PermissionGroupInfo&gt;" Usage="mockPackageManager.GetAllPermissionGroups flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAllPermissionGroups", "(I)Ljava/util/List;", "GetGetAllPermissionGroups_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAllPermissionGroups", "(I)Ljava/util/List;", "GetGetAllPermissionGroups_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PermissionGroupInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Additional option flags.  Use <see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /> to
 retrieve any meta-data associated with the permission group.</param>
        <summary>Retrieve all of the known permission groups in the system.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationBanner">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetApplicationBanner (Android.Content.PM.ApplicationInfo? info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetApplicationBanner(class Android.Content.PM.ApplicationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetApplicationBanner(Android.Content.PM.ApplicationInfo)" />
      <MemberSignature Language="F#" Value="override this.GetApplicationBanner : Android.Content.PM.ApplicationInfo -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetApplicationBanner info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getApplicationBanner", "(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationBanner_Landroid_content_pm_ApplicationInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getApplicationBanner", "(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationBanner_Landroid_content_pm_ApplicationInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="info">Information about application being queried.</param>
        <summary>Retrieve the banner associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationBanner">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetApplicationBanner (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetApplicationBanner(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetApplicationBanner(System.String)" />
      <MemberSignature Language="F#" Value="override this.GetApplicationBanner : string -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetApplicationBanner packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getApplicationBanner", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationBanner_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getApplicationBanner", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationBanner_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">Name of the package whose application banner is to be
            retrieved.</param>
        <summary>Retrieve the banner associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationEnabledSetting">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.ComponentEnabledState GetApplicationEnabledSetting (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Content.PM.ComponentEnabledState GetApplicationEnabledSetting(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetApplicationEnabledSetting(System.String)" />
      <MemberSignature Language="F#" Value="override this.GetApplicationEnabledSetting : string -&gt; Android.Content.PM.ComponentEnabledState" Usage="mockPackageManager.GetApplicationEnabledSetting packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getApplicationEnabledSetting", "(Ljava/lang/String;)I", "GetGetApplicationEnabledSetting_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getApplicationEnabledSetting", "(Ljava/lang/String;)I", "GetGetApplicationEnabledSetting_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ComponentEnabledState</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The package name of the application to retrieve.</param>
        <summary>Return the enabled setting for an application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationIcon">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetApplicationIcon (Android.Content.PM.ApplicationInfo? info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetApplicationIcon(class Android.Content.PM.ApplicationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetApplicationIcon(Android.Content.PM.ApplicationInfo)" />
      <MemberSignature Language="F#" Value="override this.GetApplicationIcon : Android.Content.PM.ApplicationInfo -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetApplicationIcon info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getApplicationIcon", "(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationIcon_Landroid_content_pm_ApplicationInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getApplicationIcon", "(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationIcon_Landroid_content_pm_ApplicationInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="info">Information about application being queried.</param>
        <summary>Retrieve the icon associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationIcon">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetApplicationIcon (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetApplicationIcon(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetApplicationIcon(System.String)" />
      <MemberSignature Language="F#" Value="override this.GetApplicationIcon : string -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetApplicationIcon packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getApplicationIcon", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationIcon_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getApplicationIcon", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationIcon_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">Name of the package whose application icon is to be
                    retrieved.</param>
        <summary>Retrieve the icon associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationInfo">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.ApplicationInfo? GetApplicationInfo (string? packageName, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.ApplicationInfo GetApplicationInfo(string packageName, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetApplicationInfo(System.String,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetApplicationInfo : string * Android.Content.PM.PackageInfoFlags -&gt; Android.Content.PM.ApplicationInfo" Usage="mockPackageManager.GetApplicationInfo (packageName, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getApplicationInfo", "(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;", "GetGetApplicationInfo_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getApplicationInfo", "(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;", "GetGetApplicationInfo_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ApplicationInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="packageName">The full name (i.e. com.google.apps.contacts) of an
                    application.</param>
        <param name="flags">Additional option flags. Use any combination of
 <see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" />, <see cref="F:Android.Content.PM.PackageInfoFlags.SharedLibraryFiles" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.UninstalledPackages" tool="ReplaceLinkValue" /> to modify the data returned.</param>
        <summary>Retrieve all of the information we know about a particular
 package/application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationLabel">
      <MemberSignature Language="C#" Value="public string? GetApplicationLabel (Android.Content.PM.ApplicationInfo? info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetApplicationLabel(class Android.Content.PM.ApplicationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetApplicationLabel(Android.Content.PM.ApplicationInfo)" />
      <MemberSignature Language="F#" Value="override this.GetApplicationLabel : Android.Content.PM.ApplicationInfo -&gt; string" Usage="mockPackageManager.GetApplicationLabel info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="info">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetApplicationLabelFormatted">
      <MemberSignature Language="C#" Value="public override Java.Lang.ICharSequence? GetApplicationLabelFormatted (Android.Content.PM.ApplicationInfo? info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.ICharSequence GetApplicationLabelFormatted(class Android.Content.PM.ApplicationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetApplicationLabelFormatted(Android.Content.PM.ApplicationInfo)" />
      <MemberSignature Language="F#" Value="override this.GetApplicationLabelFormatted : Android.Content.PM.ApplicationInfo -&gt; Java.Lang.ICharSequence" Usage="mockPackageManager.GetApplicationLabelFormatted info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getApplicationLabel", "(Landroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;", "GetGetApplicationLabel_Landroid_content_pm_ApplicationInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getApplicationLabel", "(Landroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;", "GetGetApplicationLabel_Landroid_content_pm_ApplicationInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="info">The application to get the label of.
</param>
        <summary>Return the label to use for this application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationLogo">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetApplicationLogo (Android.Content.PM.ApplicationInfo? info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetApplicationLogo(class Android.Content.PM.ApplicationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetApplicationLogo(Android.Content.PM.ApplicationInfo)" />
      <MemberSignature Language="F#" Value="override this.GetApplicationLogo : Android.Content.PM.ApplicationInfo -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetApplicationLogo info" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getApplicationLogo", "(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationLogo_Landroid_content_pm_ApplicationInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getApplicationLogo", "(Landroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationLogo_Landroid_content_pm_ApplicationInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="info">Information about application being queried.</param>
        <summary>Retrieve the logo associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
      </Docs>
    </Member>
    <Member MemberName="GetApplicationLogo">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetApplicationLogo (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetApplicationLogo(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetApplicationLogo(System.String)" />
      <MemberSignature Language="F#" Value="override this.GetApplicationLogo : string -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetApplicationLogo packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getApplicationLogo", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationLogo_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getApplicationLogo", "(Ljava/lang/String;)Landroid/graphics/drawable/Drawable;", "GetGetApplicationLogo_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">Name of the package whose application logo is to be
                    retrieved.</param>
        <summary>Retrieve the logo associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetChangedPackages">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.ChangedPackages? GetChangedPackages (int sequenceNumber);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.ChangedPackages GetChangedPackages(int32 sequenceNumber) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetChangedPackages(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetChangedPackages : int -&gt; Android.Content.PM.ChangedPackages" Usage="mockPackageManager.GetChangedPackages sequenceNumber" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getChangedPackages", "(I)Landroid/content/pm/ChangedPackages;", "GetGetChangedPackages_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getChangedPackages", "(I)Landroid/content/pm/ChangedPackages;", "GetGetChangedPackages_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ChangedPackages</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sequenceNumber" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sequenceNumber">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/test/mock/MockPackageManager#getChangedPackages(int)" title="Reference documentation">Java documentation for <code>android.test.mock.MockPackageManager.getChangedPackages(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetComponentEnabledSetting">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.ComponentEnabledState GetComponentEnabledSetting (Android.Content.ComponentName? componentName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype Android.Content.PM.ComponentEnabledState GetComponentEnabledSetting(class Android.Content.ComponentName componentName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetComponentEnabledSetting(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="override this.GetComponentEnabledSetting : Android.Content.ComponentName -&gt; Android.Content.PM.ComponentEnabledState" Usage="mockPackageManager.GetComponentEnabledSetting componentName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getComponentEnabledSetting", "(Landroid/content/ComponentName;)I", "GetGetComponentEnabledSetting_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getComponentEnabledSetting", "(Landroid/content/ComponentName;)I", "GetGetComponentEnabledSetting_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ComponentEnabledState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="componentName">The component to retrieve.</param>
        <summary>Return the enabled setting for a package component (activity,
 receiver, service, provider).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultBrowserPackageName">
      <MemberSignature Language="C#" Value="public virtual string? GetDefaultBrowserPackageName (int userId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDefaultBrowserPackageName(int32 userId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetDefaultBrowserPackageName(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetDefaultBrowserPackageName : int -&gt; string&#xA;override this.GetDefaultBrowserPackageName : int -&gt; string" Usage="mockPackageManager.GetDefaultBrowserPackageName userId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDefaultBrowserPackageName", "(I)Ljava/lang/String;", "GetGetDefaultBrowserPackageName_IHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDefaultBrowserPackageName", "(I)Ljava/lang/String;", "GetGetDefaultBrowserPackageName_IHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="userId">To be added.</param>
        <summary>{</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>{</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/test/mock/MockPackageManager#getDefaultBrowserPackageName(int)" title="Reference documentation">Java documentation for <code>android.test.mock.MockPackageManager.getDefaultBrowserPackageName(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDrawable">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetDrawable (string? packageName, int resid, Android.Content.PM.ApplicationInfo? appInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetDrawable(string packageName, int32 resid, class Android.Content.PM.ApplicationInfo appInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetDrawable(System.String,System.Int32,Android.Content.PM.ApplicationInfo)" />
      <MemberSignature Language="F#" Value="override this.GetDrawable : string * int * Android.Content.PM.ApplicationInfo -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetDrawable (packageName, resid, appInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getDrawable", "(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "GetGetDrawable_Ljava_lang_String_ILandroid_content_pm_ApplicationInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getDrawable", "(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/graphics/drawable/Drawable;", "GetGetDrawable_Ljava_lang_String_ILandroid_content_pm_ApplicationInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="appInfo" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package that this icon is coming from.
 Cannot be null.</param>
        <param name="resid">The resource identifier of the desired image.  Cannot be 0.</param>
        <param name="appInfo">Overall information about <format type="text/html"><var>packageName</var></format>.  This
 may be null, in which case the application information will be retrieved
 for you if needed; if you already have this information around, it can
 be much more efficient to supply it here.</param>
        <summary>Retrieve an image from a package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledApplications">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.ApplicationInfo&gt;? GetInstalledApplications (Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ApplicationInfo&gt; GetInstalledApplications(valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetInstalledApplications(Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetInstalledApplications : Android.Content.PM.PackageInfoFlags -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.ApplicationInfo&gt;" Usage="mockPackageManager.GetInstalledApplications flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstalledApplications", "(I)Ljava/util/List;", "GetGetInstalledApplications_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstalledApplications", "(I)Ljava/util/List;", "GetGetInstalledApplications_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ApplicationInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Additional option flags. Use any combination of
 <see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" />, <see cref="F:Android.Content.PM.PackageInfoFlags.SharedLibraryFiles" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.UninstalledPackages" tool="ReplaceLinkValue" /> to modify the data returned.</param>
        <summary>Return a List of all application packages that are installed on the
 device.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstalledPackages">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt;? GetInstalledPackages (Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PackageInfo&gt; GetInstalledPackages(valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetInstalledPackages(Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetInstalledPackages : Android.Content.PM.PackageInfoFlags -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt;" Usage="mockPackageManager.GetInstalledPackages flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstalledPackages", "(I)Ljava/util/List;", "GetGetInstalledPackages_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstalledPackages", "(I)Ljava/util/List;", "GetGetInstalledPackages_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Additional option flags. Use any combination of
 <see cref="F:Android.Content.PM.PackageInfoFlags.Activities" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Gids" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Configurations" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Instrumentation" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Permissions" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Providers" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Receivers" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Services" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Signatures" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.UninstalledPackages" tool="ReplaceLinkValue" /> to modify the data returned.</param>
        <summary>Return a List of all packages that are installed
 on the device.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetInstallerPackageName">
      <MemberSignature Language="C#" Value="public override string? GetInstallerPackageName (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetInstallerPackageName(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetInstallerPackageName(System.String)" />
      <MemberSignature Language="F#" Value="override this.GetInstallerPackageName : string -&gt; string" Usage="mockPackageManager.GetInstallerPackageName packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstallerPackageName", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetInstallerPackageName_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstallerPackageName", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetInstallerPackageName_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package to query
</param>
        <summary>Retrieve the package name of the application that installed a package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetInstantAppCookie">
      <MemberSignature Language="C#" Value="public override byte[]? GetInstantAppCookie ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] GetInstantAppCookie() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetInstantAppCookie" />
      <MemberSignature Language="F#" Value="override this.GetInstantAppCookie : unit -&gt; byte[]" Usage="mockPackageManager.GetInstantAppCookie " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstantAppCookie", "()[B", "GetGetInstantAppCookieHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstantAppCookie", "()[B", "GetGetInstantAppCookieHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/test/mock/MockPackageManager#getInstantAppCookie()" title="Reference documentation">Java documentation for <code>android.test.mock.MockPackageManager.getInstantAppCookie()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInstrumentationInfo">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.InstrumentationInfo? GetInstrumentationInfo (Android.Content.ComponentName? className, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.InstrumentationInfo GetInstrumentationInfo(class Android.Content.ComponentName className, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetInstrumentationInfo(Android.Content.ComponentName,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetInstrumentationInfo : Android.Content.ComponentName * Android.Content.PM.PackageInfoFlags -&gt; Android.Content.PM.InstrumentationInfo" Usage="mockPackageManager.GetInstrumentationInfo (className, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getInstrumentationInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/InstrumentationInfo;", "GetGetInstrumentationInfo_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getInstrumentationInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/InstrumentationInfo;", "GetGetInstrumentationInfo_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.InstrumentationInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="className">The full name (i.e.
                  com.google.apps.contacts.InstrumentList) of an
                  Instrumentation class.</param>
        <param name="flags">Additional option flags.  Currently should always be 0.</param>
        <summary>Retrieve all of the information we know about a particular
 instrumentation class.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetLaunchIntentForPackage">
      <MemberSignature Language="C#" Value="public override Android.Content.Intent? GetLaunchIntentForPackage (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Intent GetLaunchIntentForPackage(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetLaunchIntentForPackage(System.String)" />
      <MemberSignature Language="F#" Value="override this.GetLaunchIntentForPackage : string -&gt; Android.Content.Intent" Usage="mockPackageManager.GetLaunchIntentForPackage packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLaunchIntentForPackage", "(Ljava/lang/String;)Landroid/content/Intent;", "GetGetLaunchIntentForPackage_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLaunchIntentForPackage", "(Ljava/lang/String;)Landroid/content/Intent;", "GetGetLaunchIntentForPackage_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package to inspect.</param>
        <summary>Returns a "good" intent to launch a front-door activity in a package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetLeanbackLaunchIntentForPackage">
      <MemberSignature Language="C#" Value="public override Android.Content.Intent? GetLeanbackLaunchIntentForPackage (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Intent GetLeanbackLaunchIntentForPackage(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetLeanbackLaunchIntentForPackage(System.String)" />
      <MemberSignature Language="F#" Value="override this.GetLeanbackLaunchIntentForPackage : string -&gt; Android.Content.Intent" Usage="mockPackageManager.GetLeanbackLaunchIntentForPackage packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getLeanbackLaunchIntentForPackage", "(Ljava/lang/String;)Landroid/content/Intent;", "GetGetLeanbackLaunchIntentForPackage_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getLeanbackLaunchIntentForPackage", "(Ljava/lang/String;)Landroid/content/Intent;", "GetGetLeanbackLaunchIntentForPackage_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package to inspect.</param>
        <summary>Return a "good" intent to launch a front-door Leanback activity in a
 package, for use for example to implement an "open" button when browsing
 through packages.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNameForUid">
      <MemberSignature Language="C#" Value="public override string? GetNameForUid (int uid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetNameForUid(int32 uid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetNameForUid(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetNameForUid : int -&gt; string" Usage="mockPackageManager.GetNameForUid uid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNameForUid", "(I)Ljava/lang/String;", "GetGetNameForUid_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNameForUid", "(I)Ljava/lang/String;", "GetGetNameForUid_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="uid">The user id for which you would like to retrieve a name.</param>
        <summary>Retrieve the official name associated with a user id.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPackageGids">
      <MemberSignature Language="C#" Value="public override int[]? GetPackageGids (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32[] GetPackageGids(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetPackageGids(System.String)" />
      <MemberSignature Language="F#" Value="override this.GetPackageGids : string -&gt; int[]" Usage="mockPackageManager.GetPackageGids packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPackageGids", "(Ljava/lang/String;)[I", "GetGetPackageGids_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPackageGids", "(Ljava/lang/String;)[I", "GetGetPackageGids_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">The full name (i.e. com.google.apps.contacts) of the
            desired package.</param>
        <summary>Return an array of all of the secondary group-ids that have been assigned
 to a package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetPackageGids">
      <MemberSignature Language="C#" Value="public override int[]? GetPackageGids (string? packageName, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32[] GetPackageGids(string packageName, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetPackageGids(System.String,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetPackageGids : string * Android.Content.PM.PackageInfoFlags -&gt; int[]" Usage="mockPackageManager.GetPackageGids (packageName, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPackageGids", "(Ljava/lang/String;I)[I", "GetGetPackageGids_Ljava_lang_String_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPackageGids", "(Ljava/lang/String;I)[I", "GetGetPackageGids_Ljava_lang_String_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackageInfo">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.PackageInfo? GetPackageInfo (Android.Content.PM.VersionedPackage? versionedPackage, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.PackageInfo GetPackageInfo(class Android.Content.PM.VersionedPackage versionedPackage, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetPackageInfo(Android.Content.PM.VersionedPackage,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetPackageInfo : Android.Content.PM.VersionedPackage * Android.Content.PM.PackageInfoFlags -&gt; Android.Content.PM.PackageInfo" Usage="mockPackageManager.GetPackageInfo (versionedPackage, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPackageInfo", "(Landroid/content/pm/VersionedPackage;I)Landroid/content/pm/PackageInfo;", "GetGetPackageInfo_Landroid_content_pm_VersionedPackage_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPackageInfo", "(Landroid/content/pm/VersionedPackage;I)Landroid/content/pm/PackageInfo;", "GetGetPackageInfo_Landroid_content_pm_VersionedPackage_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="versionedPackage" Type="Android.Content.PM.VersionedPackage" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="versionedPackage">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPackageInfo">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.PackageInfo? GetPackageInfo (string? packageName, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.PackageInfo GetPackageInfo(string packageName, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetPackageInfo(System.String,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetPackageInfo : string * Android.Content.PM.PackageInfoFlags -&gt; Android.Content.PM.PackageInfo" Usage="mockPackageManager.GetPackageInfo (packageName, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPackageInfo", "(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;", "GetGetPackageInfo_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPackageInfo", "(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;", "GetGetPackageInfo_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="packageName">The full name (i.e. com.google.apps.contacts) of the
            desired package.</param>
        <param name="flags">Additional option flags. Use any combination of
            <see cref="F:Android.Content.PM.PackageInfoFlags.Activities" tool="ReplaceLinkValue" />, <see cref="F:Android.Content.PM.PackageInfoFlags.Gids" tool="ReplaceLinkValue" />,
            <see cref="F:Android.Content.PM.PackageInfoFlags.Configurations" tool="ReplaceLinkValue" />, <see cref="F:Android.Content.PM.PackageInfoFlags.Instrumentation" tool="ReplaceLinkValue" />,
            <see cref="F:Android.Content.PM.PackageInfoFlags.Permissions" tool="ReplaceLinkValue" />, <see cref="F:Android.Content.PM.PackageInfoFlags.Providers" tool="ReplaceLinkValue" />,
            <see cref="F:Android.Content.PM.PackageInfoFlags.Receivers" tool="ReplaceLinkValue" />, <see cref="F:Android.Content.PM.PackageInfoFlags.Services" tool="ReplaceLinkValue" />,
            <see cref="F:Android.Content.PM.PackageInfoFlags.Signatures" tool="ReplaceLinkValue" />, <see cref="F:Android.Content.PM.PackageInfoFlags.UninstalledPackages" tool="ReplaceLinkValue" /> to
            modify the data returned.</param>
        <summary>Retrieve overall information about an application package that is
 installed on the system.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetPackagesForUid">
      <MemberSignature Language="C#" Value="public override string[]? GetPackagesForUid (int uid);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetPackagesForUid(int32 uid) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetPackagesForUid(System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetPackagesForUid : int -&gt; string[]" Usage="mockPackageManager.GetPackagesForUid uid" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPackagesForUid", "(I)[Ljava/lang/String;", "GetGetPackagesForUid_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPackagesForUid", "(I)[Ljava/lang/String;", "GetGetPackagesForUid_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uid" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="uid">The user id for which you would like to retrieve the
 associated packages.</param>
        <summary>Retrieve the names of all packages that are associated with a particular
 user id.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetPackagesHoldingPermissions">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt;? GetPackagesHoldingPermissions (string[]? permissions, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PackageInfo&gt; GetPackagesHoldingPermissions(string[] permissions, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetPackagesHoldingPermissions(System.String[],Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetPackagesHoldingPermissions : string[] * Android.Content.PM.PackageInfoFlags -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt;" Usage="mockPackageManager.GetPackagesHoldingPermissions (permissions, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPackagesHoldingPermissions", "([Ljava/lang/String;I)Ljava/util/List;", "GetGetPackagesHoldingPermissions_arrayLjava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPackagesHoldingPermissions", "([Ljava/lang/String;I)Ljava/util/List;", "GetGetPackagesHoldingPermissions_arrayLjava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permissions" Type="System.String[]" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="permissions">To be added.</param>
        <param name="flags">Additional option flags. Use any combination of
 <see cref="F:Android.Content.PM.PackageInfoFlags.Activities" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Gids" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Configurations" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Instrumentation" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Permissions" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Providers" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Receivers" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Services" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Signatures" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.UninstalledPackages" tool="ReplaceLinkValue" /> to modify the data returned.</param>
        <summary>Return a List of all installed packages that are currently
 holding any of the given permissions.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 18" />
      </Docs>
    </Member>
    <Member MemberName="GetPackageUid">
      <MemberSignature Language="C#" Value="public override int GetPackageUid (string? packageName, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetPackageUid(string packageName, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetPackageUid(System.String,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetPackageUid : string * Android.Content.PM.PackageInfoFlags -&gt; int" Usage="mockPackageManager.GetPackageUid (packageName, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPackageUid", "(Ljava/lang/String;I)I", "GetGetPackageUid_Ljava_lang_String_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPackageUid", "(Ljava/lang/String;I)I", "GetGetPackageUid_Ljava_lang_String_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPermissionGroupInfo">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.PermissionGroupInfo? GetPermissionGroupInfo (string? name, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.PermissionGroupInfo GetPermissionGroupInfo(string name, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetPermissionGroupInfo(System.String,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetPermissionGroupInfo : string * Android.Content.PM.PackageInfoFlags -&gt; Android.Content.PM.PermissionGroupInfo" Usage="mockPackageManager.GetPermissionGroupInfo (name, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPermissionGroupInfo", "(Ljava/lang/String;I)Landroid/content/pm/PermissionGroupInfo;", "GetGetPermissionGroupInfo_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPermissionGroupInfo", "(Ljava/lang/String;I)Landroid/content/pm/PermissionGroupInfo;", "GetGetPermissionGroupInfo_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PermissionGroupInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The fully qualified name (i.e. com.google.permission_group.APPS)
             of the permission you are interested in.</param>
        <param name="flags">Additional option flags.  Use <see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /> to
 retrieve any meta-data associated with the permission group.</param>
        <summary>Retrieve all of the information we know about a particular group of
 permissions.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetPermissionInfo">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.PermissionInfo? GetPermissionInfo (string? name, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.PermissionInfo GetPermissionInfo(string name, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetPermissionInfo(System.String,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetPermissionInfo : string * Android.Content.PM.PackageInfoFlags -&gt; Android.Content.PM.PermissionInfo" Usage="mockPackageManager.GetPermissionInfo (name, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPermissionInfo", "(Ljava/lang/String;I)Landroid/content/pm/PermissionInfo;", "GetGetPermissionInfo_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPermissionInfo", "(Ljava/lang/String;I)Landroid/content/pm/PermissionInfo;", "GetGetPermissionInfo_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PermissionInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The fully qualified name (i.e. com.google.permission.LOGIN)
             of the permission you are interested in.</param>
        <param name="flags">Additional option flags.  Use <see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /> to
 retrieve any meta-data associated with the permission.</param>
        <summary>Retrieve all of the information we know about a particular permission.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredActivities">
      <MemberSignature Language="C#" Value="public override int GetPreferredActivities (System.Collections.Generic.IList&lt;Android.Content.IntentFilter&gt;? outFilters, System.Collections.Generic.IList&lt;Android.Content.ComponentName&gt;? outActivities, string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetPreferredActivities(class System.Collections.Generic.IList`1&lt;class Android.Content.IntentFilter&gt; outFilters, class System.Collections.Generic.IList`1&lt;class Android.Content.ComponentName&gt; outActivities, string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetPreferredActivities(System.Collections.Generic.IList{Android.Content.IntentFilter},System.Collections.Generic.IList{Android.Content.ComponentName},System.String)" />
      <MemberSignature Language="F#" Value="override this.GetPreferredActivities : System.Collections.Generic.IList&lt;Android.Content.IntentFilter&gt; * System.Collections.Generic.IList&lt;Android.Content.ComponentName&gt; * string -&gt; int" Usage="mockPackageManager.GetPreferredActivities (outFilters, outActivities, packageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPreferredActivities", "(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)I", "GetGetPreferredActivities_Ljava_util_List_Ljava_util_List_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPreferredActivities", "(Ljava/util/List;Ljava/util/List;Ljava/lang/String;)I", "GetGetPreferredActivities_Ljava_util_List_Ljava_util_List_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="outFilters" Type="System.Collections.Generic.IList&lt;Android.Content.IntentFilter&gt;" />
        <Parameter Name="outActivities" Type="System.Collections.Generic.IList&lt;Android.Content.ComponentName&gt;" />
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="outFilters">To be added.</param>
        <param name="outActivities">To be added.</param>
        <param name="packageName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPreferredPackages">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt;? GetPreferredPackages (Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PackageInfo&gt; GetPreferredPackages(valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetPreferredPackages(Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetPreferredPackages : Android.Content.PM.PackageInfoFlags -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt;" Usage="mockPackageManager.GetPreferredPackages flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getPreferredPackages", "(I)Ljava/util/List;", "GetGetPreferredPackages_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getPreferredPackages", "(I)Ljava/util/List;", "GetGetPreferredPackages_IHandler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PackageInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">Additional option flags. Use any combination of
 <see cref="F:Android.Content.PM.PackageInfoFlags.Activities" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Gids" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Configurations" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Instrumentation" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Permissions" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Providers" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Receivers" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Services" tool="ReplaceLinkValue" />,
 <see cref="F:Android.Content.PM.PackageInfoFlags.Signatures" tool="ReplaceLinkValue" />, to modify the data returned.</param>
        <summary>Retrieve the list of all currently configured preferred packages.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetProviderInfo">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.ProviderInfo? GetProviderInfo (Android.Content.ComponentName? className, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.ProviderInfo GetProviderInfo(class Android.Content.ComponentName className, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetProviderInfo(Android.Content.ComponentName,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetProviderInfo : Android.Content.ComponentName * Android.Content.PM.PackageInfoFlags -&gt; Android.Content.PM.ProviderInfo" Usage="mockPackageManager.GetProviderInfo (className, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getProviderInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ProviderInfo;", "GetGetProviderInfo_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getProviderInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ProviderInfo;", "GetGetProviderInfo_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ProviderInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="className">The full component name (i.e.
 com.google.providers.media/com.google.providers.media.MediaProvider) of a
 ContentProvider class.</param>
        <param name="flags">Additional option flags.  Use any combination of
 <see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" />, <see cref="F:Android.Content.PM.PackageInfoFlags.SharedLibraryFiles" tool="ReplaceLinkValue" />,
 to modify the data returned.</param>
        <summary>Retrieve all of the information we know about a particular content
 provider class.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 9" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetReceiverInfo">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.ActivityInfo? GetReceiverInfo (Android.Content.ComponentName? className, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.ActivityInfo GetReceiverInfo(class Android.Content.ComponentName className, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetReceiverInfo(Android.Content.ComponentName,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetReceiverInfo : Android.Content.ComponentName * Android.Content.PM.PackageInfoFlags -&gt; Android.Content.PM.ActivityInfo" Usage="mockPackageManager.GetReceiverInfo (className, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getReceiverInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;", "GetGetReceiverInfo_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getReceiverInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ActivityInfo;", "GetGetReceiverInfo_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ActivityInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="className">The full component name (i.e.
 com.google.apps.calendar/com.google.apps.calendar.CalendarAlarm) of a Receiver
 class.</param>
        <param name="flags">Additional option flags.  Use any combination of
 <see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" />, <see cref="F:Android.Content.PM.PackageInfoFlags.SharedLibraryFiles" tool="ReplaceLinkValue" />,
 to modify the data returned.</param>
        <summary>Retrieve all of the information we know about a particular receiver
 class.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetResourcesForActivity">
      <MemberSignature Language="C#" Value="public override Android.Content.Res.Resources? GetResourcesForActivity (Android.Content.ComponentName? activityName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Res.Resources GetResourcesForActivity(class Android.Content.ComponentName activityName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetResourcesForActivity(Android.Content.ComponentName)" />
      <MemberSignature Language="F#" Value="override this.GetResourcesForActivity : Android.Content.ComponentName -&gt; Android.Content.Res.Resources" Usage="mockPackageManager.GetResourcesForActivity activityName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getResourcesForActivity", "(Landroid/content/ComponentName;)Landroid/content/res/Resources;", "GetGetResourcesForActivity_Landroid_content_ComponentName_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getResourcesForActivity", "(Landroid/content/ComponentName;)Landroid/content/res/Resources;", "GetGetResourcesForActivity_Landroid_content_ComponentName_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityName" Type="Android.Content.ComponentName" />
      </Parameters>
      <Docs>
        <param name="activityName">Name of the activity whose resources are to be
                     retrieved.</param>
        <summary>Retrieve the resources associated with an activity.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetResourcesForApplication">
      <MemberSignature Language="C#" Value="public override Android.Content.Res.Resources? GetResourcesForApplication (Android.Content.PM.ApplicationInfo? app);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Res.Resources GetResourcesForApplication(class Android.Content.PM.ApplicationInfo app) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetResourcesForApplication(Android.Content.PM.ApplicationInfo)" />
      <MemberSignature Language="F#" Value="override this.GetResourcesForApplication : Android.Content.PM.ApplicationInfo -&gt; Android.Content.Res.Resources" Usage="mockPackageManager.GetResourcesForApplication app" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getResourcesForApplication", "(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/Resources;", "GetGetResourcesForApplication_Landroid_content_pm_ApplicationInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getResourcesForApplication", "(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/Resources;", "GetGetResourcesForApplication_Landroid_content_pm_ApplicationInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="app" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="app">Information about the desired application.</param>
        <summary tool="true">Retrieve the resources for an application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetResourcesForApplication">
      <MemberSignature Language="C#" Value="public override Android.Content.Res.Resources? GetResourcesForApplication (string? appPackageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.Res.Resources GetResourcesForApplication(string appPackageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetResourcesForApplication(System.String)" />
      <MemberSignature Language="F#" Value="override this.GetResourcesForApplication : string -&gt; Android.Content.Res.Resources" Usage="mockPackageManager.GetResourcesForApplication appPackageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getResourcesForApplication", "(Ljava/lang/String;)Landroid/content/res/Resources;", "GetGetResourcesForApplication_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getResourcesForApplication", "(Ljava/lang/String;)Landroid/content/res/Resources;", "GetGetResourcesForApplication_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Res.Resources</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appPackageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appPackageName">Package name of the application whose resources
                       are to be retrieved.</param>
        <summary>Retrieve the resources associated with an application.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetServiceInfo">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.ServiceInfo? GetServiceInfo (Android.Content.ComponentName? className, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.ServiceInfo GetServiceInfo(class Android.Content.ComponentName className, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetServiceInfo(Android.Content.ComponentName,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.GetServiceInfo : Android.Content.ComponentName * Android.Content.PM.PackageInfoFlags -&gt; Android.Content.PM.ServiceInfo" Usage="mockPackageManager.GetServiceInfo (className, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getServiceInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ServiceInfo;", "GetGetServiceInfo_Landroid_content_ComponentName_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getServiceInfo", "(Landroid/content/ComponentName;I)Landroid/content/pm/ServiceInfo;", "GetGetServiceInfo_Landroid_content_ComponentName_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ServiceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="className" Type="Android.Content.ComponentName" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="className">The full component name (i.e.
 com.google.apps.media/com.google.apps.media.BackgroundPlayback) of a Service
 class.</param>
        <param name="flags">Additional option flags.  Use any combination of
 <see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" />, <see cref="F:Android.Content.PM.PackageInfoFlags.SharedLibraryFiles" tool="ReplaceLinkValue" />,
 to modify the data returned.</param>
        <summary>Retrieve all of the information we know about a particular service
 class.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="GetSharedLibraries">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.SharedLibraryInfo&gt;? GetSharedLibraries (Android.Content.PM.PackageInstallReason flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.SharedLibraryInfo&gt; GetSharedLibraries(valuetype Android.Content.PM.PackageInstallReason flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetSharedLibraries(Android.Content.PM.PackageInstallReason)" />
      <MemberSignature Language="F#" Value="override this.GetSharedLibraries : Android.Content.PM.PackageInstallReason -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.SharedLibraryInfo&gt;" Usage="mockPackageManager.GetSharedLibraries flags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSharedLibraries", "(I)Ljava/util/List;", "GetGetSharedLibraries_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSharedLibraries", "(I)Ljava/util/List;", "GetGetSharedLibraries_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.SharedLibraryInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flags" Type="Android.Content.PM.PackageInstallReason">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="flags">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSystemAvailableFeatures">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.FeatureInfo[]? GetSystemAvailableFeatures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.FeatureInfo[] GetSystemAvailableFeatures() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetSystemAvailableFeatures" />
      <MemberSignature Language="F#" Value="override this.GetSystemAvailableFeatures : unit -&gt; Android.Content.PM.FeatureInfo[]" Usage="mockPackageManager.GetSystemAvailableFeatures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSystemAvailableFeatures", "()[Landroid/content/pm/FeatureInfo;", "GetGetSystemAvailableFeaturesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSystemAvailableFeatures", "()[Landroid/content/pm/FeatureInfo;", "GetGetSystemAvailableFeaturesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.FeatureInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get a list of features that are available on the
 system.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="GetSystemSharedLibraryNames">
      <MemberSignature Language="C#" Value="public override string[]? GetSystemSharedLibraryNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetSystemSharedLibraryNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetSystemSharedLibraryNames" />
      <MemberSignature Language="F#" Value="override this.GetSystemSharedLibraryNames : unit -&gt; string[]" Usage="mockPackageManager.GetSystemSharedLibraryNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getSystemSharedLibraryNames", "()[Ljava/lang/String;", "GetGetSystemSharedLibraryNamesHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getSystemSharedLibraryNames", "()[Ljava/lang/String;", "GetGetSystemSharedLibraryNamesHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get a list of shared libraries that are available on the
 system.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="GetText">
      <MemberSignature Language="C#" Value="public string? GetText (string? packageName, int resid, Android.Content.PM.ApplicationInfo? appInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetText(string packageName, int32 resid, class Android.Content.PM.ApplicationInfo appInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetText(System.String,System.Int32,Android.Content.PM.ApplicationInfo)" />
      <MemberSignature Language="F#" Value="override this.GetText : string * int * Android.Content.PM.ApplicationInfo -&gt; string" Usage="mockPackageManager.GetText (packageName, resid, appInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="appInfo" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <param name="resid">To be added.</param>
        <param name="appInfo">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTextFormatted">
      <MemberSignature Language="C#" Value="public override Java.Lang.ICharSequence? GetTextFormatted (string? packageName, int resid, Android.Content.PM.ApplicationInfo? appInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.ICharSequence GetTextFormatted(string packageName, int32 resid, class Android.Content.PM.ApplicationInfo appInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetTextFormatted(System.String,System.Int32,Android.Content.PM.ApplicationInfo)" />
      <MemberSignature Language="F#" Value="override this.GetTextFormatted : string * int * Android.Content.PM.ApplicationInfo -&gt; Java.Lang.ICharSequence" Usage="mockPackageManager.GetTextFormatted (packageName, resid, appInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getText", "(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;", "GetGetText_Ljava_lang_String_ILandroid_content_pm_ApplicationInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getText", "(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Ljava/lang/CharSequence;", "GetGetText_Ljava_lang_String_ILandroid_content_pm_ApplicationInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="appInfo" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package that this text is coming from.
 Cannot be null.</param>
        <param name="resid">The resource identifier of the desired text.  Cannot be 0.</param>
        <param name="appInfo">Overall information about <format type="text/html"><var>packageName</var></format>.  This
 may be null, in which case the application information will be retrieved
 for you if needed; if you already have this information around, it can
 be much more efficient to supply it here.</param>
        <summary>Retrieve text from a package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetUserBadgedDrawableForDensity">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetUserBadgedDrawableForDensity (Android.Graphics.Drawables.Drawable? drawable, Android.OS.UserHandle? user, Android.Graphics.Rect? badgeLocation, int badgeDensity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetUserBadgedDrawableForDensity(class Android.Graphics.Drawables.Drawable drawable, class Android.OS.UserHandle user, class Android.Graphics.Rect badgeLocation, int32 badgeDensity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetUserBadgedDrawableForDensity(Android.Graphics.Drawables.Drawable,Android.OS.UserHandle,Android.Graphics.Rect,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.GetUserBadgedDrawableForDensity : Android.Graphics.Drawables.Drawable * Android.OS.UserHandle * Android.Graphics.Rect * int -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetUserBadgedDrawableForDensity (drawable, user, badgeLocation, badgeDensity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getUserBadgedDrawableForDensity", "(Landroid/graphics/drawable/Drawable;Landroid/os/UserHandle;Landroid/graphics/Rect;I)Landroid/graphics/drawable/Drawable;", "GetGetUserBadgedDrawableForDensity_Landroid_graphics_drawable_Drawable_Landroid_os_UserHandle_Landroid_graphics_Rect_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getUserBadgedDrawableForDensity", "(Landroid/graphics/drawable/Drawable;Landroid/os/UserHandle;Landroid/graphics/Rect;I)Landroid/graphics/drawable/Drawable;", "GetGetUserBadgedDrawableForDensity_Landroid_graphics_drawable_Drawable_Landroid_os_UserHandle_Landroid_graphics_Rect_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="drawable" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
        <Parameter Name="badgeLocation" Type="Android.Graphics.Rect" />
        <Parameter Name="badgeDensity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="drawable">The drawable to badge.</param>
        <param name="user">The target user.</param>
        <param name="badgeLocation">Where in the bounds of the badged drawable to place
         the badge. If not provided, the badge is applied on top of the entire
         drawable being badged.</param>
        <param name="badgeDensity">The optional desired density for the badge as per
         <see cref="P:Android.Util.DisplayMetrics.DensityDpi" />. If not provided,
         the density of the display is used.</param>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInLongSummaries">To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserBadgedIcon">
      <MemberSignature Language="C#" Value="public override Android.Graphics.Drawables.Drawable? GetUserBadgedIcon (Android.Graphics.Drawables.Drawable? icon, Android.OS.UserHandle? user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Graphics.Drawables.Drawable GetUserBadgedIcon(class Android.Graphics.Drawables.Drawable icon, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetUserBadgedIcon(Android.Graphics.Drawables.Drawable,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="override this.GetUserBadgedIcon : Android.Graphics.Drawables.Drawable * Android.OS.UserHandle -&gt; Android.Graphics.Drawables.Drawable" Usage="mockPackageManager.GetUserBadgedIcon (icon, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getUserBadgedIcon", "(Landroid/graphics/drawable/Drawable;Landroid/os/UserHandle;)Landroid/graphics/drawable/Drawable;", "GetGetUserBadgedIcon_Landroid_graphics_drawable_Drawable_Landroid_os_UserHandle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getUserBadgedIcon", "(Landroid/graphics/drawable/Drawable;Landroid/os/UserHandle;)Landroid/graphics/drawable/Drawable;", "GetGetUserBadgedIcon_Landroid_graphics_drawable_Drawable_Landroid_os_UserHandle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="icon" Type="Android.Graphics.Drawables.Drawable" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="icon">The icon to badge.</param>
        <param name="user">The target user.</param>
        <summary ToolPath="TrimmedButTooLong" tool="FirstSentenceInLongSummaries">To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserBadgedLabel">
      <MemberSignature Language="C#" Value="public string? GetUserBadgedLabel (string? label, Android.OS.UserHandle? user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetUserBadgedLabel(string label, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetUserBadgedLabel(System.String,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="override this.GetUserBadgedLabel : string * Android.OS.UserHandle -&gt; string" Usage="mockPackageManager.GetUserBadgedLabel (label, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="System.String" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="label">To be added.</param>
        <param name="user">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserBadgedLabelFormatted">
      <MemberSignature Language="C#" Value="public override Java.Lang.ICharSequence? GetUserBadgedLabelFormatted (Java.Lang.ICharSequence? label, Android.OS.UserHandle? user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Java.Lang.ICharSequence GetUserBadgedLabelFormatted(class Java.Lang.ICharSequence label, class Android.OS.UserHandle user) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetUserBadgedLabelFormatted(Java.Lang.ICharSequence,Android.OS.UserHandle)" />
      <MemberSignature Language="F#" Value="override this.GetUserBadgedLabelFormatted : Java.Lang.ICharSequence * Android.OS.UserHandle -&gt; Java.Lang.ICharSequence" Usage="mockPackageManager.GetUserBadgedLabelFormatted (label, user)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getUserBadgedLabel", "(Ljava/lang/CharSequence;Landroid/os/UserHandle;)Ljava/lang/CharSequence;", "GetGetUserBadgedLabel_Ljava_lang_CharSequence_Landroid_os_UserHandle_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getUserBadgedLabel", "(Ljava/lang/CharSequence;Landroid/os/UserHandle;)Ljava/lang/CharSequence;", "GetGetUserBadgedLabel_Ljava_lang_CharSequence_Landroid_os_UserHandle_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="label" Type="Java.Lang.ICharSequence" />
        <Parameter Name="user" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="label">The label to change.</param>
        <param name="user">The target user.</param>
        <summary>If the target user is a managed profile of the calling user or the caller
 is itself a managed profile, then this returns a copy of the label with
 badging for accessibility services like talkback.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public override System.Xml.XmlReader? GetXml (string? packageName, int resid, Android.Content.PM.ApplicationInfo? appInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Xml.XmlReader GetXml(string packageName, int32 resid, class Android.Content.PM.ApplicationInfo appInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.GetXml(System.String,System.Int32,Android.Content.PM.ApplicationInfo)" />
      <MemberSignature Language="F#" Value="override this.GetXml : string * int * Android.Content.PM.ApplicationInfo -&gt; System.Xml.XmlReader" Usage="mockPackageManager.GetXml (packageName, resid, appInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getXml", "(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/content/res/XmlResourceParser;", "GetGetXml_Ljava_lang_String_ILandroid_content_pm_ApplicationInfo_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getXml", "(Ljava/lang/String;ILandroid/content/pm/ApplicationInfo;)Landroid/content/res/XmlResourceParser;", "GetGetXml_Ljava_lang_String_ILandroid_content_pm_ApplicationInfo_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="resid" Type="System.Int32" />
        <Parameter Name="appInfo" Type="Android.Content.PM.ApplicationInfo" />
      </Parameters>
      <Docs>
        <param name="packageName">The name of the package that this xml is coming from.
 Cannot be null.</param>
        <param name="resid">The resource identifier of the desired xml.  Cannot be 0.</param>
        <param name="appInfo">Overall information about <format type="text/html"><var>packageName</var></format>.  This
 may be null, in which case the application information will be retrieved
 for you if needed; if you already have this information around, it can
 be much more efficient to supply it here.</param>
        <summary>Retrieve an XML file from a package.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="HasSystemFeature">
      <MemberSignature Language="C#" Value="public override bool HasSystemFeature (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasSystemFeature(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.HasSystemFeature(System.String)" />
      <MemberSignature Language="F#" Value="override this.HasSystemFeature : string -&gt; bool" Usage="mockPackageManager.HasSystemFeature name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasSystemFeature", "(Ljava/lang/String;)Z", "GetHasSystemFeature_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasSystemFeature", "(Ljava/lang/String;)Z", "GetHasSystemFeature_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <summary>Check whether the given feature name is one of the available
 features as returned by <see cref="M:Android.Content.PM.PackageManager.GetSystemAvailableFeatures" />.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 5" />
      </Docs>
    </Member>
    <Member MemberName="HasSystemFeature">
      <MemberSignature Language="C#" Value="public override bool HasSystemFeature (string? name, int version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasSystemFeature(string name, int32 version) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.HasSystemFeature(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.HasSystemFeature : string * int -&gt; bool" Usage="mockPackageManager.HasSystemFeature (name, version)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("hasSystemFeature", "(Ljava/lang/String;I)Z", "GetHasSystemFeature_Ljava_lang_String_IHandler", ApiSince=24)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("hasSystemFeature", "(Ljava/lang/String;I)Z", "GetHasSystemFeature_Ljava_lang_String_IHandler", ApiSince=24)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android24.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android24.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="version" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="version">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InstantAppCookieMaxBytes">
      <MemberSignature Language="C#" Value="public override int InstantAppCookieMaxBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InstantAppCookieMaxBytes" />
      <MemberSignature Language="DocId" Value="P:Android.Test.Mock.MockPackageManager.InstantAppCookieMaxBytes" />
      <MemberSignature Language="F#" Value="member this.InstantAppCookieMaxBytes : int" Usage="Android.Test.Mock.MockPackageManager.InstantAppCookieMaxBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInstantAppCookieMaxBytes", "()I", "GetGetInstantAppCookieMaxBytesHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInstantAppCookieMaxBytes", "()I", "GetGetInstantAppCookieMaxBytesHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/test/mock/MockPackageManager#getInstantAppCookieMaxBytes()" title="Reference documentation">Java documentation for <code>android.test.mock.MockPackageManager.getInstantAppCookieMaxBytes()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeIsInstantApp">
      <MemberSignature Language="C#" Value="public override bool InvokeIsInstantApp (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool InvokeIsInstantApp(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.InvokeIsInstantApp(System.String)" />
      <MemberSignature Language="F#" Value="override this.InvokeIsInstantApp : string -&gt; bool" Usage="mockPackageManager.InvokeIsInstantApp packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isInstantApp", "(Ljava/lang/String;)Z", "GetInvokeIsInstantApp_Ljava_lang_String_Handler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isInstantApp", "(Ljava/lang/String;)Z", "GetInvokeIsInstantApp_Ljava_lang_String_Handler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/test/mock/MockPackageManager#isInstantApp(java.lang.String)" title="Reference documentation">Java documentation for <code>android.test.mock.MockPackageManager.isInstantApp(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInstantApp">
      <MemberSignature Language="C#" Value="public override bool IsInstantApp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInstantApp" />
      <MemberSignature Language="DocId" Value="P:Android.Test.Mock.MockPackageManager.IsInstantApp" />
      <MemberSignature Language="F#" Value="member this.IsInstantApp : bool" Usage="Android.Test.Mock.MockPackageManager.IsInstantApp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isInstantApp", "()Z", "GetIsInstantAppHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isInstantApp", "()Z", "GetIsInstantAppHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/test/mock/MockPackageManager#isInstantApp()" title="Reference documentation">Java documentation for <code>android.test.mock.MockPackageManager.isInstantApp()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPermissionRevokedByPolicy">
      <MemberSignature Language="C#" Value="public override bool IsPermissionRevokedByPolicy (string? permName, string? pkgName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsPermissionRevokedByPolicy(string permName, string pkgName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.IsPermissionRevokedByPolicy(System.String,System.String)" />
      <MemberSignature Language="F#" Value="override this.IsPermissionRevokedByPolicy : string * string -&gt; bool" Usage="mockPackageManager.IsPermissionRevokedByPolicy (permName, pkgName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isPermissionRevokedByPolicy", "(Ljava/lang/String;Ljava/lang/String;)Z", "GetIsPermissionRevokedByPolicy_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isPermissionRevokedByPolicy", "(Ljava/lang/String;Ljava/lang/String;)Z", "GetIsPermissionRevokedByPolicy_Ljava_lang_String_Ljava_lang_String_Handler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="permName" Type="System.String" />
        <Parameter Name="pkgName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="permName">To be added.</param>
        <param name="pkgName">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSafeMode">
      <MemberSignature Language="C#" Value="public override bool IsSafeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSafeMode" />
      <MemberSignature Language="DocId" Value="P:Android.Test.Mock.MockPackageManager.IsSafeMode" />
      <MemberSignature Language="F#" Value="member this.IsSafeMode : bool" Usage="Android.Test.Mock.MockPackageManager.IsSafeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isSafeMode", "()Z", "GetIsSafeModeHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isSafeMode", "()Z", "GetIsSafeModeHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return whether the device has been booted into safe mode.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 3" />
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Test.Mock.MockPackageManager.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Test.Mock.MockPackageManager.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PackageInstaller">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.PackageInstaller? PackageInstaller { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Android.Content.PM.PackageInstaller PackageInstaller" />
      <MemberSignature Language="DocId" Value="P:Android.Test.Mock.MockPackageManager.PackageInstaller" />
      <MemberSignature Language="F#" Value="member this.PackageInstaller : Android.Content.PM.PackageInstaller" Usage="Android.Test.Mock.MockPackageManager.PackageInstaller" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPackageInstaller", "()Landroid/content/pm/PackageInstaller;", "GetGetPackageInstallerHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPackageInstaller", "()Landroid/content/pm/PackageInstaller;", "GetGetPackageInstallerHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.PackageInstaller</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>{</summary>
        <value>To be added.</value>
        <remarks>
          <para>{</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/test/mock/MockPackageManager#getPackageInstaller()" title="Reference documentation">Java documentation for <code>android.test.mock.MockPackageManager.getPackageInstaller()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryBroadcastReceivers">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;? QueryBroadcastReceivers (Android.Content.Intent? intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ResolveInfo&gt; QueryBroadcastReceivers(class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.QueryBroadcastReceivers(Android.Content.Intent,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.QueryBroadcastReceivers : Android.Content.Intent * Android.Content.PM.PackageInfoFlags -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;" Usage="mockPackageManager.QueryBroadcastReceivers (intent, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queryBroadcastReceivers", "(Landroid/content/Intent;I)Ljava/util/List;", "GetQueryBroadcastReceivers_Landroid_content_Intent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queryBroadcastReceivers", "(Landroid/content/Intent;I)Ljava/util/List;", "GetQueryBroadcastReceivers_Landroid_content_Intent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">The desired intent as per resolveActivity().</param>
        <param name="flags">Additional option flags.</param>
        <summary>Retrieve all receivers that can handle a broadcast of the given intent.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryContentProviders">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.ProviderInfo&gt;? QueryContentProviders (string? processName, int uid, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ProviderInfo&gt; QueryContentProviders(string processName, int32 uid, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.QueryContentProviders(System.String,System.Int32,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.QueryContentProviders : string * int * Android.Content.PM.PackageInfoFlags -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.ProviderInfo&gt;" Usage="mockPackageManager.QueryContentProviders (processName, uid, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queryContentProviders", "(Ljava/lang/String;II)Ljava/util/List;", "GetQueryContentProviders_Ljava_lang_String_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queryContentProviders", "(Ljava/lang/String;II)Ljava/util/List;", "GetQueryContentProviders_Ljava_lang_String_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ProviderInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="processName" Type="System.String" />
        <Parameter Name="uid" Type="System.Int32" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="processName">If non-null, limits the returned providers to only
                    those that are hosted by the given process.  If null,
                    all content providers are returned.</param>
        <param name="uid">If <format type="text/html"><var>processName</var></format> is non-null, this is the required
        uid owning the requested content providers.</param>
        <param name="flags">Additional option flags.  Currently should always be 0.</param>
        <summary>Retrieve content provider information.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryInstrumentation">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.InstrumentationInfo&gt;? QueryInstrumentation (string? targetPackage, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.InstrumentationInfo&gt; QueryInstrumentation(string targetPackage, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.QueryInstrumentation(System.String,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.QueryInstrumentation : string * Android.Content.PM.PackageInfoFlags -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.InstrumentationInfo&gt;" Usage="mockPackageManager.QueryInstrumentation (targetPackage, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queryInstrumentation", "(Ljava/lang/String;I)Ljava/util/List;", "GetQueryInstrumentation_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queryInstrumentation", "(Ljava/lang/String;I)Ljava/util/List;", "GetQueryInstrumentation_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.InstrumentationInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetPackage" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="targetPackage">If null, all instrumentation is returned; only the
                      instrumentation targeting this package name is
                      returned.</param>
        <param name="flags">Additional option flags.  Currently should always be 0.</param>
        <summary>Retrieve information about available instrumentation code.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryIntentActivities">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;? QueryIntentActivities (Android.Content.Intent? intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ResolveInfo&gt; QueryIntentActivities(class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.QueryIntentActivities(Android.Content.Intent,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.QueryIntentActivities : Android.Content.Intent * Android.Content.PM.PackageInfoFlags -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;" Usage="mockPackageManager.QueryIntentActivities (intent, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queryIntentActivities", "(Landroid/content/Intent;I)Ljava/util/List;", "GetQueryIntentActivities_Landroid_content_Intent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queryIntentActivities", "(Landroid/content/Intent;I)Ljava/util/List;", "GetQueryIntentActivities_Landroid_content_Intent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">The desired intent as per resolveActivity().</param>
        <param name="flags">Additional option flags.  The most important is
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content PM PackageManager MATCH_DEFAULT_ONLY';scope=Xamarin" title="Android.Content.PM.PackageManager.MATCH_DEFAULT_ONLY">Android.Content.PM.PackageManager.MATCH_DEFAULT_ONLY</a></format>, to limit the resolution to only
 those activities that support the <see cref="F:Android.Content.Intent.CategoryDefault" />.

 You can also set <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content PM PackageManager MATCH_ALL';scope=Xamarin" title="Android.Content.PM.PackageManager.MATCH_ALL">Android.Content.PM.PackageManager.MATCH_ALL</a></format> for preventing the filtering of the results.</param>
        <summary>Retrieve all activities that can be performed for the given intent.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryIntentActivityOptions">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;? QueryIntentActivityOptions (Android.Content.ComponentName? caller, Android.Content.Intent[]? specifics, Android.Content.Intent? intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ResolveInfo&gt; QueryIntentActivityOptions(class Android.Content.ComponentName caller, class Android.Content.Intent[] specifics, class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.QueryIntentActivityOptions(Android.Content.ComponentName,Android.Content.Intent[],Android.Content.Intent,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.QueryIntentActivityOptions : Android.Content.ComponentName * Android.Content.Intent[] * Android.Content.Intent * Android.Content.PM.PackageInfoFlags -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;" Usage="mockPackageManager.QueryIntentActivityOptions (caller, specifics, intent, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queryIntentActivityOptions", "(Landroid/content/ComponentName;[Landroid/content/Intent;Landroid/content/Intent;I)Ljava/util/List;", "GetQueryIntentActivityOptions_Landroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queryIntentActivityOptions", "(Landroid/content/ComponentName;[Landroid/content/Intent;Landroid/content/Intent;I)Ljava/util/List;", "GetQueryIntentActivityOptions_Landroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caller" Type="Android.Content.ComponentName" />
        <Parameter Name="specifics" Type="Android.Content.Intent[]" />
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="caller">The class name of the activity that is making the
               request.  This activity will never appear in the output
               list.  Can be null.</param>
        <param name="specifics">An array of Intents that should be resolved to the
                  first specific results.  Can be null.</param>
        <param name="intent">The desired intent as per resolveActivity().</param>
        <param name="flags">Additional option flags.  The most important is
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content PM PackageManager MATCH_DEFAULT_ONLY';scope=Xamarin" title="Android.Content.PM.PackageManager.MATCH_DEFAULT_ONLY">Android.Content.PM.PackageManager.MATCH_DEFAULT_ONLY</a></format>, to limit the resolution to only
 those activities that support the <see cref="F:Android.Content.Intent.CategoryDefault" />.</param>
        <summary>Retrieve a set of activities that should be presented to the user as
 similar options.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryIntentContentProviders">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;? QueryIntentContentProviders (Android.Content.Intent? intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ResolveInfo&gt; QueryIntentContentProviders(class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.QueryIntentContentProviders(Android.Content.Intent,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.QueryIntentContentProviders : Android.Content.Intent * Android.Content.PM.PackageInfoFlags -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;" Usage="mockPackageManager.QueryIntentContentProviders (intent, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queryIntentContentProviders", "(Landroid/content/Intent;I)Ljava/util/List;", "GetQueryIntentContentProviders_Landroid_content_Intent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queryIntentContentProviders", "(Landroid/content/Intent;I)Ljava/util/List;", "GetQueryIntentContentProviders_Landroid_content_Intent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">An intent containing all of the desired specification
            (action, data, type, category, and/or component).</param>
        <param name="flags">Additional option flags.</param>
        <summary>Retrieve all providers that can match the given intent.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryIntentServices">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;? QueryIntentServices (Android.Content.Intent? intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.ResolveInfo&gt; QueryIntentServices(class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.QueryIntentServices(Android.Content.Intent,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.QueryIntentServices : Android.Content.Intent * Android.Content.PM.PackageInfoFlags -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;" Usage="mockPackageManager.QueryIntentServices (intent, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queryIntentServices", "(Landroid/content/Intent;I)Ljava/util/List;", "GetQueryIntentServices_Landroid_content_Intent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queryIntentServices", "(Landroid/content/Intent;I)Ljava/util/List;", "GetQueryIntentServices_Landroid_content_Intent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.ResolveInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">The desired intent as per resolveService().</param>
        <param name="flags">Additional option flags.</param>
        <summary>Retrieve all services that can match the given intent.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="QueryPermissionsByGroup">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;Android.Content.PM.PermissionInfo&gt;? QueryPermissionsByGroup (string? group, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class Android.Content.PM.PermissionInfo&gt; QueryPermissionsByGroup(string group, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.QueryPermissionsByGroup(System.String,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.QueryPermissionsByGroup : string * Android.Content.PM.PackageInfoFlags -&gt; System.Collections.Generic.IList&lt;Android.Content.PM.PermissionInfo&gt;" Usage="mockPackageManager.QueryPermissionsByGroup (group, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("queryPermissionsByGroup", "(Ljava/lang/String;I)Ljava/util/List;", "GetQueryPermissionsByGroup_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("queryPermissionsByGroup", "(Ljava/lang/String;I)Ljava/util/List;", "GetQueryPermissionsByGroup_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.Content.PM.PermissionInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="group">The fully qualified name (i.e. com.google.permission.LOGIN)
             of the permission group you are interested in.  Use null to
             find all of the permissions not associated with a group.</param>
        <param name="flags">Additional option flags.  Use <see cref="F:Android.Content.PM.PackageInfoFlags.MetaData" tool="ReplaceLinkValue" /> to
 retrieve any meta-data associated with the permissions.</param>
        <summary>Query for all of the permissions associated with a particular group.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Android.Content.PM.PackageManager.NameNotFoundException" />
      </Docs>
    </Member>
    <Member MemberName="RemovePackageFromPreferred">
      <MemberSignature Language="C#" Value="public override void RemovePackageFromPreferred (string? packageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemovePackageFromPreferred(string packageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.RemovePackageFromPreferred(System.String)" />
      <MemberSignature Language="F#" Value="override this.RemovePackageFromPreferred : string -&gt; unit" Usage="mockPackageManager.RemovePackageFromPreferred packageName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removePackageFromPreferred", "(Ljava/lang/String;)V", "GetRemovePackageFromPreferred_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removePackageFromPreferred", "(Ljava/lang/String;)V", "GetRemovePackageFromPreferred_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("deprecated")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("deprecated")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <summary>
        </summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="RemovePermission">
      <MemberSignature Language="C#" Value="public override void RemovePermission (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemovePermission(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.RemovePermission(System.String)" />
      <MemberSignature Language="F#" Value="override this.RemovePermission : string -&gt; unit" Usage="mockPackageManager.RemovePermission name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("removePermission", "(Ljava/lang/String;)V", "GetRemovePermission_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("removePermission", "(Ljava/lang/String;)V", "GetRemovePermission_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of the permission to remove.</param>
        <summary>Removes a permission that was previously added with
 <see cref="M:Android.Content.PM.PackageManager.AddPermission(Android.Content.PM.PermissionInfo)" />.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResolveActivity">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.ResolveInfo? ResolveActivity (Android.Content.Intent? intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.ResolveInfo ResolveActivity(class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.ResolveActivity(Android.Content.Intent,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.ResolveActivity : Android.Content.Intent * Android.Content.PM.PackageInfoFlags -&gt; Android.Content.PM.ResolveInfo" Usage="mockPackageManager.ResolveActivity (intent, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveActivity", "(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;", "GetResolveActivity_Landroid_content_Intent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveActivity", "(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;", "GetResolveActivity_Landroid_content_Intent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ResolveInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">An intent containing all of the desired specification
               (action, data, type, category, and/or component).</param>
        <param name="flags">Additional option flags.  The most important is
 <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content PM PackageManager MATCH_DEFAULT_ONLY';scope=Xamarin" title="Android.Content.PM.PackageManager.MATCH_DEFAULT_ONLY">Android.Content.PM.PackageManager.MATCH_DEFAULT_ONLY</a></format>, to limit the resolution to only
 those activities that support the <see cref="F:Android.Content.Intent.CategoryDefault" />.</param>
        <summary>Determine the best action to perform for a given Intent.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResolveContentProvider">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.ProviderInfo? ResolveContentProvider (string? name, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.ProviderInfo ResolveContentProvider(string name, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.ResolveContentProvider(System.String,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.ResolveContentProvider : string * Android.Content.PM.PackageInfoFlags -&gt; Android.Content.PM.ProviderInfo" Usage="mockPackageManager.ResolveContentProvider (name, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveContentProvider", "(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;", "GetResolveContentProvider_Ljava_lang_String_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveContentProvider", "(Ljava/lang/String;I)Landroid/content/pm/ProviderInfo;", "GetResolveContentProvider_Ljava_lang_String_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ProviderInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="name">The name of the provider to find.</param>
        <param name="flags">Additional option flags.  Currently should always be 0.</param>
        <summary>Find a single content provider by its base path name.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ResolveService">
      <MemberSignature Language="C#" Value="public override Android.Content.PM.ResolveInfo? ResolveService (Android.Content.Intent? intent, Android.Content.PM.PackageInfoFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class Android.Content.PM.ResolveInfo ResolveService(class Android.Content.Intent intent, valuetype Android.Content.PM.PackageInfoFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.ResolveService(Android.Content.Intent,Android.Content.PM.PackageInfoFlags)" />
      <MemberSignature Language="F#" Value="override this.ResolveService : Android.Content.Intent * Android.Content.PM.PackageInfoFlags -&gt; Android.Content.PM.ResolveInfo" Usage="mockPackageManager.ResolveService (intent, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("resolveService", "(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;", "GetResolveService_Landroid_content_Intent_IHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("resolveService", "(Landroid/content/Intent;I)Landroid/content/pm/ResolveInfo;", "GetResolveService_Landroid_content_Intent_IHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.PM.ResolveInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="flags" Type="Android.Content.PM.PackageInfoFlags">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="intent">An intent containing all of the desired specification
               (action, data, type, category, and/or component).</param>
        <param name="flags">Additional option flags.</param>
        <summary>Determine the best service to handle for a given Intent.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="SetApplicationCategoryHint">
      <MemberSignature Language="C#" Value="public override void SetApplicationCategoryHint (string? packageName, int categoryHint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetApplicationCategoryHint(string packageName, int32 categoryHint) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.SetApplicationCategoryHint(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="override this.SetApplicationCategoryHint : string * int -&gt; unit" Usage="mockPackageManager.SetApplicationCategoryHint (packageName, categoryHint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setApplicationCategoryHint", "(Ljava/lang/String;I)V", "GetSetApplicationCategoryHint_Ljava_lang_String_IHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setApplicationCategoryHint", "(Ljava/lang/String;I)V", "GetSetApplicationCategoryHint_Ljava_lang_String_IHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="categoryHint" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <param name="categoryHint">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/test/mock/MockPackageManager#setApplicationCategoryHint(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.test.mock.MockPackageManager.setApplicationCategoryHint(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetApplicationEnabledSetting">
      <MemberSignature Language="C#" Value="public override void SetApplicationEnabledSetting (string? packageName, Android.Content.PM.ComponentEnabledState newState, Android.Content.PM.ComponentEnableOption flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetApplicationEnabledSetting(string packageName, valuetype Android.Content.PM.ComponentEnabledState newState, valuetype Android.Content.PM.ComponentEnableOption flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.SetApplicationEnabledSetting(System.String,Android.Content.PM.ComponentEnabledState,Android.Content.PM.ComponentEnableOption)" />
      <MemberSignature Language="F#" Value="override this.SetApplicationEnabledSetting : string * Android.Content.PM.ComponentEnabledState * Android.Content.PM.ComponentEnableOption -&gt; unit" Usage="mockPackageManager.SetApplicationEnabledSetting (packageName, newState, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setApplicationEnabledSetting", "(Ljava/lang/String;II)V", "GetSetApplicationEnabledSetting_Ljava_lang_String_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setApplicationEnabledSetting", "(Ljava/lang/String;II)V", "GetSetApplicationEnabledSetting_Ljava_lang_String_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="newState" Type="Android.Content.PM.ComponentEnabledState">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Content.PM.ComponentEnableOption">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="packageName">The package name of the application to enable</param>
        <param name="newState">The new enabled state for the component.  The legal values for this state
                 are:
                   <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content PM PackageManager COMPONENT_ENABLED_STATE_ENABLED';scope=Xamarin" title="Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_ENABLED">Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_ENABLED</a></format>,
                   <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content PM PackageManager COMPONENT_ENABLED_STATE_DISABLED';scope=Xamarin" title="Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_DISABLED">Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_DISABLED</a></format>
                   and
                   <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content PM PackageManager COMPONENT_ENABLED_STATE_DEFAULT';scope=Xamarin" title="Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_DEFAULT">Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_DEFAULT</a></format>
                 The last one removes the setting, thereby restoring the applications's state to
                 whatever was set in its manifest (or enabled, by default).</param>
        <param name="flags">Optional behavior flags: <see cref="F:Android.Content.PM.PackageManager.DontKillApp" /> or 0.
</param>
        <summary>Set the enabled setting for an application
 This setting will override any enabled state which may have been set by the application in
 its manifest.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetComponentEnabledSetting">
      <MemberSignature Language="C#" Value="public override void SetComponentEnabledSetting (Android.Content.ComponentName? componentName, Android.Content.PM.ComponentEnabledState newState, Android.Content.PM.ComponentEnableOption flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetComponentEnabledSetting(class Android.Content.ComponentName componentName, valuetype Android.Content.PM.ComponentEnabledState newState, valuetype Android.Content.PM.ComponentEnableOption flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.SetComponentEnabledSetting(Android.Content.ComponentName,Android.Content.PM.ComponentEnabledState,Android.Content.PM.ComponentEnableOption)" />
      <MemberSignature Language="F#" Value="override this.SetComponentEnabledSetting : Android.Content.ComponentName * Android.Content.PM.ComponentEnabledState * Android.Content.PM.ComponentEnableOption -&gt; unit" Usage="mockPackageManager.SetComponentEnabledSetting (componentName, newState, flags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setComponentEnabledSetting", "(Landroid/content/ComponentName;II)V", "GetSetComponentEnabledSetting_Landroid_content_ComponentName_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setComponentEnabledSetting", "(Landroid/content/ComponentName;II)V", "GetSetComponentEnabledSetting_Landroid_content_ComponentName_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="componentName" Type="Android.Content.ComponentName" />
        <Parameter Name="newState" Type="Android.Content.PM.ComponentEnabledState">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="flags" Type="Android.Content.PM.ComponentEnableOption">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="componentName">The component to enable</param>
        <param name="newState">The new enabled state for the component.  The legal values for this state
                 are:
                   <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content PM PackageManager COMPONENT_ENABLED_STATE_ENABLED';scope=Xamarin" title="Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_ENABLED">Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_ENABLED</a></format>,
                   <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content PM PackageManager COMPONENT_ENABLED_STATE_DISABLED';scope=Xamarin" title="Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_DISABLED">Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_DISABLED</a></format>
                   and
                   <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search='Android Content PM PackageManager COMPONENT_ENABLED_STATE_DEFAULT';scope=Xamarin" title="Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_DEFAULT">Android.Content.PM.PackageManager.COMPONENT_ENABLED_STATE_DEFAULT</a></format>
                 The last one removes the setting, thereby restoring the component's state to
                 whatever was set in it's manifest (or enabled, by default).</param>
        <param name="flags">Optional behavior flags: <see cref="F:Android.Content.PM.PackageManager.DontKillApp" /> or 0.
</param>
        <summary>Set the enabled setting for a package component (activity, receiver, service, provider).</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDefaultBrowserPackageName">
      <MemberSignature Language="C#" Value="public virtual bool SetDefaultBrowserPackageName (string? packageName, int userId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SetDefaultBrowserPackageName(string packageName, int32 userId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.SetDefaultBrowserPackageName(System.String,System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member SetDefaultBrowserPackageName : string * int -&gt; bool&#xA;override this.SetDefaultBrowserPackageName : string * int -&gt; bool" Usage="mockPackageManager.SetDefaultBrowserPackageName (packageName, userId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setDefaultBrowserPackageName", "(Ljava/lang/String;I)Z", "GetSetDefaultBrowserPackageName_Ljava_lang_String_IHandler", ApiSince=23)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setDefaultBrowserPackageName", "(Ljava/lang/String;I)Z", "GetSetDefaultBrowserPackageName_Ljava_lang_String_IHandler", ApiSince=23)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android23.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android23.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="packageName" Type="System.String" />
        <Parameter Name="userId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="packageName">To be added.</param>
        <param name="userId">To be added.</param>
        <summary>{</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>{</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/test/mock/MockPackageManager#setDefaultBrowserPackageName(java.lang.String,%20int)" title="Reference documentation">Java documentation for <code>android.test.mock.MockPackageManager.setDefaultBrowserPackageName(java.lang.String, int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetInstallerPackageName">
      <MemberSignature Language="C#" Value="public override void SetInstallerPackageName (string? targetPackage, string? installerPackageName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void SetInstallerPackageName(string targetPackage, string installerPackageName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.SetInstallerPackageName(System.String,System.String)" />
      <MemberSignature Language="F#" Value="override this.SetInstallerPackageName : string * string -&gt; unit" Usage="mockPackageManager.SetInstallerPackageName (targetPackage, installerPackageName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInstallerPackageName", "(Ljava/lang/String;Ljava/lang/String;)V", "GetSetInstallerPackageName_Ljava_lang_String_Ljava_lang_String_Handler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInstallerPackageName", "(Ljava/lang/String;Ljava/lang/String;)V", "GetSetInstallerPackageName_Ljava_lang_String_Ljava_lang_String_Handler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetPackage" Type="System.String" />
        <Parameter Name="installerPackageName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetPackage">The installed package whose installer will be changed.</param>
        <param name="installerPackageName">The package name of the new installer.  May be
 null to clear the association.
</param>
        <summary>Change the installer associated with a given package.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 11" />
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Test.Mock.MockPackageManager.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Test.Mock.MockPackageManager.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Test.Mock.MockPackageManager.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Test.Mock.MockPackageManager.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateInstantAppCookie">
      <MemberSignature Language="C#" Value="public override void UpdateInstantAppCookie (byte[]? cookie);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateInstantAppCookie(unsigned int8[] cookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.UpdateInstantAppCookie(System.Byte[])" />
      <MemberSignature Language="F#" Value="override this.UpdateInstantAppCookie : byte[] -&gt; unit" Usage="mockPackageManager.UpdateInstantAppCookie cookie" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("updateInstantAppCookie", "([B)V", "GetUpdateInstantAppCookie_arrayBHandler", ApiSince=26)]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("updateInstantAppCookie", "([B)V", "GetUpdateInstantAppCookie_arrayBHandler", ApiSince=26)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.Versioning.SupportedOSPlatform("android26.0")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.Versioning.SupportedOSPlatform("android26.0")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cookie" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cookie">To be added.</param>
        <summary>To be added.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/test/mock/MockPackageManager#updateInstantAppCookie(byte[])" title="Reference documentation">Java documentation for <code>android.test.mock.MockPackageManager.updateInstantAppCookie(byte[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyPendingInstall">
      <MemberSignature Language="C#" Value="public override void VerifyPendingInstall (int id, Android.Content.PM.PackageInstallVerification verificationCode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void VerifyPendingInstall(int32 id, valuetype Android.Content.PM.PackageInstallVerification verificationCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Test.Mock.MockPackageManager.VerifyPendingInstall(System.Int32,Android.Content.PM.PackageInstallVerification)" />
      <MemberSignature Language="F#" Value="override this.VerifyPendingInstall : int * Android.Content.PM.PackageInstallVerification -&gt; unit" Usage="mockPackageManager.VerifyPendingInstall (id, verificationCode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("verifyPendingInstall", "(II)V", "GetVerifyPendingInstall_IIHandler")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("verifyPendingInstall", "(II)V", "GetVerifyPendingInstall_IIHandler")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="verificationCode" Type="Android.Content.PM.PackageInstallVerification">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="id">pending package identifier as passed via the
            <see cref="F:Android.Content.PM.PackageManager.ExtraVerificationId" /> Intent extra.</param>
        <param name="verificationCode">either <see cref="F:Android.Content.PM.PackageManager.VerificationAllow" />
            or <see cref="F:Android.Content.PM.PackageManager.VerificationReject" />.</param>
        <summary>Allows a package listening to the
 <see cref="F:Android.Content.Intent.ActionPackageNeedsVerification" /> to respond to the package manager.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 14" />
      </Docs>
    </Member>
  </Members>
</Type>
