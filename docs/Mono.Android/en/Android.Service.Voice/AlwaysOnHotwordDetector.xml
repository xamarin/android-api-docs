<Type Name="AlwaysOnHotwordDetector" FullName="Android.Service.Voice.AlwaysOnHotwordDetector">
  <TypeSignature Language="C#" Value="public class AlwaysOnHotwordDetector : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AlwaysOnHotwordDetector extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Service.Voice.AlwaysOnHotwordDetector" />
  <TypeSignature Language="F#" Value="type AlwaysOnHotwordDetector = class&#xA;    inherit Object" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/service/voice/AlwaysOnHotwordDetector", ApiSince=21, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="21">
    <summary>A class that lets a VoiceInteractionService implementation interact with
 always-on keyphrase detection APIs.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/service/voice/AlwaysOnHotwordDetector" title="Reference documentation">Android platform documentation</a>
        </format>
      </para>
      <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AlwaysOnHotwordDetector (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Voice.AlwaysOnHotwordDetector.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberSignature Language="F#" Value="new Android.Service.Voice.AlwaysOnHotwordDetector : nativeint * Android.Runtime.JniHandleOwnership -&gt; Android.Service.Voice.AlwaysOnHotwordDetector" Usage="new Android.Service.Voice.AlwaysOnHotwordDetector (javaReference, transfer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">A <see cref="T:System.IntPtr" />containing a Java Native Interface (JNI) object reference.</param>
        <param name="transfer">A <see cref="T:Android.Runtime.JniHandleOwnership" />indicating how to handle <paramref name="javaReference" /></param>
        <summary>A constructor used when creating managed representations of JNI objects; called by the runtime.</summary>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateEnrollIntent">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Intent CreateEnrollIntent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent CreateEnrollIntent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Voice.AlwaysOnHotwordDetector.CreateEnrollIntent" />
      <MemberSignature Language="F#" Value="abstract member CreateEnrollIntent : unit -&gt; Android.Content.Intent&#xA;override this.CreateEnrollIntent : unit -&gt; Android.Content.Intent" Usage="alwaysOnHotwordDetector.CreateEnrollIntent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createEnrollIntent", "()Landroid/content/Intent;", "GetCreateEnrollIntentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an intent to start the enrollment for the associated keyphrase.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 21" />
        <exception cref="T:Java.Lang.UnsupportedOperationException">if managing they keyphrase isn't supported.
         Callers should only call this method after a supported state callback on
         <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=AlwaysOnHotwordDetector Callback onAvailabilityChanged(int);scope=Xamarin" title="AlwaysOnHotwordDetector Callback onAvailabilityChanged(int)">AlwaysOnHotwordDetector Callback onAvailabilityChanged(int)</a></format> to avoid this exception.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the detector is in an invalid state.
         This may happen if another detector has been instantiated or the
         <see cref="T:Android.Service.Voice.VoiceInteractionService" /> hosting this detector has been shut down.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateReEnrollIntent">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Intent CreateReEnrollIntent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent CreateReEnrollIntent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Voice.AlwaysOnHotwordDetector.CreateReEnrollIntent" />
      <MemberSignature Language="F#" Value="abstract member CreateReEnrollIntent : unit -&gt; Android.Content.Intent&#xA;override this.CreateReEnrollIntent : unit -&gt; Android.Content.Intent" Usage="alwaysOnHotwordDetector.CreateReEnrollIntent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createReEnrollIntent", "()Landroid/content/Intent;", "GetCreateReEnrollIntentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an intent to start the re-enrollment for the associated keyphrase.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if managing they keyphrase isn't supported.
         Callers should only call this method after a supported state callback on
         <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=AlwaysOnHotwordDetector Callback onAvailabilityChanged(int);scope=Xamarin" title="AlwaysOnHotwordDetector Callback onAvailabilityChanged(int)">AlwaysOnHotwordDetector Callback onAvailabilityChanged(int)</a></format> to avoid this exception.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the detector is in an invalid state.
         This may happen if another detector has been instantiated or the
         <see cref="T:Android.Service.Voice.VoiceInteractionService" /> hosting this detector has been shut down.
</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUnEnrollIntent">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Intent CreateUnEnrollIntent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent CreateUnEnrollIntent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Voice.AlwaysOnHotwordDetector.CreateUnEnrollIntent" />
      <MemberSignature Language="F#" Value="abstract member CreateUnEnrollIntent : unit -&gt; Android.Content.Intent&#xA;override this.CreateUnEnrollIntent : unit -&gt; Android.Content.Intent" Usage="alwaysOnHotwordDetector.CreateUnEnrollIntent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createUnEnrollIntent", "()Landroid/content/Intent;", "GetCreateUnEnrollIntentHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Creates an intent to start the un-enrollment for the associated keyphrase.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if managing they keyphrase isn't supported.
         Callers should only call this method after a supported state callback on
         <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=AlwaysOnHotwordDetector Callback onAvailabilityChanged(int);scope=Xamarin" title="AlwaysOnHotwordDetector Callback onAvailabilityChanged(int)">AlwaysOnHotwordDetector Callback onAvailabilityChanged(int)</a></format> to avoid this exception.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the detector is in an invalid state.
         This may happen if another detector has been instantiated or the
         <see cref="T:Android.Service.Voice.VoiceInteractionService" /> hosting this detector has been shut down.
</exception>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Voice.AlwaysOnHotwordDetector.JniPeerMembers" />
      <MemberSignature Language="F#" Value="member this.JniPeerMembers : Java.Interop.JniPeerMembers" Usage="Android.Service.Voice.AlwaysOnHotwordDetector.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartRecognition">
      <MemberSignature Language="C#" Value="public virtual bool StartRecognition (Android.Service.Voice.RecognitionFlag recognitionFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StartRecognition(valuetype Android.Service.Voice.RecognitionFlag recognitionFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Voice.AlwaysOnHotwordDetector.StartRecognition(Android.Service.Voice.RecognitionFlag)" />
      <MemberSignature Language="F#" Value="abstract member StartRecognition : Android.Service.Voice.RecognitionFlag -&gt; bool&#xA;override this.StartRecognition : Android.Service.Voice.RecognitionFlag -&gt; bool" Usage="alwaysOnHotwordDetector.StartRecognition recognitionFlags" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startRecognition", "(I)Z", "GetStartRecognition_IHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recognitionFlags" Type="Android.Service.Voice.RecognitionFlag">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="recognitionFlags">The flags to control the recognition properties.</param>
        <summary>Starts recognition for the associated keyphrase.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the recognition isn't supported.
         Callers should only call this method after a supported state callback on
         <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=AlwaysOnHotwordDetector Callback onAvailabilityChanged(int);scope=Xamarin" title="AlwaysOnHotwordDetector Callback onAvailabilityChanged(int)">AlwaysOnHotwordDetector Callback onAvailabilityChanged(int)</a></format> to avoid this exception.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the detector is in an invalid state.
         This may happen if another detector has been instantiated or the
         <see cref="T:Android.Service.Voice.VoiceInteractionService" /> hosting this detector has been shut down.
</exception>
      </Docs>
    </Member>
    <Member MemberName="StopRecognition">
      <MemberSignature Language="C#" Value="public virtual bool StopRecognition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool StopRecognition() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Service.Voice.AlwaysOnHotwordDetector.StopRecognition" />
      <MemberSignature Language="F#" Value="abstract member StopRecognition : unit -&gt; bool&#xA;override this.StopRecognition : unit -&gt; bool" Usage="alwaysOnHotwordDetector.StopRecognition " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("stopRecognition", "()Z", "GetStopRecognitionHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops recognition for the associated keyphrase.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <exception cref="T:Java.Lang.UnsupportedOperationException">if the recognition isn't supported.
         Callers should only call this method after a supported state callback on
         <format type="text/html"><a href="https://docs.microsoft.com/en-us/search/index?search=AlwaysOnHotwordDetector Callback onAvailabilityChanged(int);scope=Xamarin" title="AlwaysOnHotwordDetector Callback onAvailabilityChanged(int)">AlwaysOnHotwordDetector Callback onAvailabilityChanged(int)</a></format> to avoid this exception.</exception>
        <exception cref="T:Java.Lang.IllegalStateException">if the detector is in an invalid state.
         This may happen if another detector has been instantiated or the
         <see cref="T:Android.Service.Voice.VoiceInteractionService" /> hosting this detector has been shut down.
</exception>
      </Docs>
    </Member>
    <Member MemberName="SupportedRecognitionModes">
      <MemberSignature Language="C#" Value="public virtual Android.Service.Voice.RecognitionMode SupportedRecognitionModes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Android.Service.Voice.RecognitionMode SupportedRecognitionModes" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Voice.AlwaysOnHotwordDetector.SupportedRecognitionModes" />
      <MemberSignature Language="F#" Value="member this.SupportedRecognitionModes : Android.Service.Voice.RecognitionMode" Usage="Android.Service.Voice.AlwaysOnHotwordDetector.SupportedRecognitionModes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getSupportedRecognitionModes", "()I", "GetGetSupportedRecognitionModesHandler")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Service.Voice.RecognitionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Voice.AlwaysOnHotwordDetector.ThresholdClass" />
      <MemberSignature Language="F#" Value="member this.ThresholdClass : nativeint" Usage="Android.Service.Voice.AlwaysOnHotwordDetector.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.IntPtr" /> which contains the <c>java.lang.Class</c> JNI value corresponding to this type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Service.Voice.AlwaysOnHotwordDetector.ThresholdType" />
      <MemberSignature Language="F#" Value="member this.ThresholdType : Type" Usage="Android.Service.Voice.AlwaysOnHotwordDetector.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This API supports the Mono for Android infrastructure and is not intended to be used directly from your code.</summary>
        <value>A <see cref="T:System.Type" /> which provides the declaring type.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created and shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format> and used according to terms described in the <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
