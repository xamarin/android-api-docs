<Type Name="IXmlPullParser" FullName="Org.XmlPull.V1.IXmlPullParser">
  <TypeSignature Language="VB.NET" Value="Public Interface IXmlPullParser&#xA;Implements IDisposable, IJavaObject, IJavaPeerable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IXmlPullParser : Android::Runtime::IJavaObject, IDisposable, Java::Interop::IJavaPeerable" />
  <TypeSignature Language="C#" Value="public interface IXmlPullParser : Android.Runtime.IJavaObject, IDisposable, Java.Interop.IJavaPeerable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract beforefieldinit IXmlPullParser implements class Android.Runtime.IJavaObject, class Java.Interop.IJavaPeerable, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Org.XmlPull.V1.IXmlPullParser" />
  <TypeSignature Language="F#" Value="type IXmlPullParser = interface&#xA;    interface IJavaObject&#xA;    interface IDisposable&#xA;    interface IJavaPeerable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Java.Interop.IJavaPeerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[Android.Runtime.Register("org/xmlpull/v1/XmlPullParser", "", "Org.XmlPull.V1.IXmlPullParserInvoker")]</AttributeName>
      <AttributeName Language="F#">[&lt;Android.Runtime.Register("org/xmlpull/v1/XmlPullParser", "", "Org.XmlPull.V1.IXmlPullParserInvoker")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.CompilerServices.NullableContext(2)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.NullableContext(2)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>XML Pull Parser is an interface that defines parsing functionality provided
            in <see href="http://www.xmlpull.org/">XMLPULL V1 API</see> (visit this website to
            learn more about API and its implementations).</summary>
    <remarks>
      <para>XML Pull Parser is an interface that defines parsing functionality provided
            in <see href="http://www.xmlpull.org/">XMLPULL V1 API</see> (visit this website to
            learn more about API and its implementations).</para>
      <para>There are following different
            kinds of parser depending on which features are set:&lt;ul&gt;
            &lt;li&gt;&lt;b&gt;non-validating&lt;/b&gt; parser as defined in XML 1.0 spec when
              FEATURE_PROCESS_DOCDECL is set to true
            &lt;li&gt;&lt;b&gt;validating parser&lt;/b&gt; as defined in XML 1.0 spec when
              FEATURE_VALIDATION is true (and that implies that FEATURE_PROCESS_DOCDECL is true)
            &lt;li&gt;when FEATURE_PROCESS_DOCDECL is false (this is default and
              if different value is required necessary must be changed before parsing is started)
              then parser behaves like XML 1.0 compliant non-validating parser under condition that
             &lt;em&gt;no DOCDECL is present&lt;/em&gt; in XML documents
              (internal entites can still be defined with defineEntityReplacementText()).
              This mode of operation is intended &lt;b&gt;for operation in constrained environments&lt;/b&gt; such as J2ME.
            &lt;/ul&gt;</para>
      <para>There are two key methods: next() and nextToken(). While next() provides
            access to high level parsing events, nextToken() allows access to lower
            level tokens.</para>
      <para>The current event state of the parser
            can be determined by calling the
            getEventType() method.
            Initially, the parser is in the START_DOCUMENT
            state.</para>
      <para>The method next() advances the parser to the
            next event. The int value returned from next determines the current parser
            state and is identical to the value returned from following calls to
            getEventType ().</para>
      <para>Th following event types are seen by next()&lt;dl&gt;
            &lt;dt&gt;START_TAG&lt;dd&gt; An XML start tag was read.
            &lt;dt&gt;TEXT&lt;dd&gt; Text content was read;
            the text content can be retrieved using the getText() method.
             (when in validating mode next() will not report ignorable whitespace, use nextToken() instead)
            &lt;dt&gt;END_TAG&lt;dd&gt; An end tag was read
            &lt;dt&gt;END_DOCUMENT&lt;dd&gt; No more events are available
            &lt;/dl&gt;</para>
      <para>after first next() or nextToken() (or any other next*() method)
            is called user application can obtain
            XML version, standalone and encoding from XML declaration
            in following ways:&lt;ul&gt;
            &lt;li&gt;&lt;b&gt;version&lt;/b&gt;:
             getProperty(&amp;quot;<see href="http://xmlpull.org/v1/doc/properties.html#xmldecl-version">http://xmlpull.org/v1/doc/properties.html#xmldecl-version</see>&amp;quot;)
                  returns String ("1.0") or null if XMLDecl was not read or if property is not supported
            &lt;li&gt;&lt;b&gt;standalone&lt;/b&gt;:
             getProperty(&amp;quot;<see href="http://xmlpull.org/v1/doc/properties.html#xmldecl-standalone">http://xmlpull.org/v1/doc/properties.html#xmldecl-standalone</see>&amp;quot;)
                  returns Boolean: null if there was no standalone declaration
             or if property is not supported
                    otherwise returns Boolean(true) if standalone="yes" and Boolean(false) when standalone="no"
            &lt;li&gt;&lt;b&gt;encoding&lt;/b&gt;: obtained from getInputEncoding()
                  null if stream had unknown encoding (not set in setInputStream)
                      and it was not declared in XMLDecl
            &lt;/ul&gt;
            
            A minimal example for using this API may look as follows:</para>
      <code lang="text/java">import java.io.IOException;
            import java.io.StringReader;
            
            import org.xmlpull.v1.XmlPullParser;
            import org.xmlpull.v1.&lt;a href="XmlPullParserException.html"&gt;XmlPullParserException&lt;/a&gt;;
            import org.xmlpull.v1.&lt;a href="XmlPullParserFactory.html"&gt;XmlPullParserFactory&lt;/a&gt;;
            
            public class SimpleXmlPullApp
            {
            
                public static void main (String args[])
                    throws XmlPullParserException, IOException
                {
                    XmlPullParserFactory factory = XmlPullParserFactory.newInstance();
                    factory.setNamespaceAware(true);
                    XmlPullParser xpp = factory.newPullParser();
            
                    xpp.&lt;a href="#setInput"&gt;setInput&lt;/a&gt;( new StringReader ( "&amp;lt;foo&gt;Hello World!&amp;lt;/foo&gt;" ) );
                    int eventType = xpp.getEventType();
                    while (eventType != XmlPullParser.END_DOCUMENT) {
                     if(eventType == XmlPullParser.START_DOCUMENT) {
                         System.out.println("Start document");
                     } else if(eventType == XmlPullParser.START_TAG) {
                         System.out.println("Start tag "+xpp.&lt;a href="#getName()"&gt;getName()&lt;/a&gt;);
                     } else if(eventType == XmlPullParser.END_TAG) {
                         System.out.println("End tag "+xpp.getName());
                     } else if(eventType == XmlPullParser.TEXT) {
                         System.out.println("Text "+xpp.&lt;a href="#getText()"&gt;getText()&lt;/a&gt;);
                     }
                     eventType = xpp.next();
                    }
                    System.out.println("End document");
                }
            }
            </code>
      <para>The above example will generate the following output:</para>
      <code lang="text/java">Start document
            Start tag foo
            Text Hello World!
            End tag foo
            End document
            </code>
      <para>For more details on API usage, please refer to the
            quick Introduction available at <see href="http://www.xmlpull.org">http://www.xmlpull.org</see></para>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AttributeCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AttributeCount { int get(); };" />
      <MemberSignature Language="C#" Value="public int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.AttributeCount" />
      <MemberSignature Language="F#" Value="member this.AttributeCount : int" Usage="Org.XmlPull.V1.IXmlPullParser.AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getAttributeCount", "()I", "GetGetAttributeCountHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getAttributeCount", "()I", "GetGetAttributeCountHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of attributes of the current start tag, or
 -1 if the current event type is not START_TAG</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ColumnNumber">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnNumber { int get(); };" />
      <MemberSignature Language="C#" Value="public int ColumnNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnNumber" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.ColumnNumber" />
      <MemberSignature Language="F#" Value="member this.ColumnNumber : int" Usage="Org.XmlPull.V1.IXmlPullParser.ColumnNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getColumnNumber", "()I", "GetGetColumnNumberHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getColumnNumber", "()I", "GetGetColumnNumberHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current column number, starting from 0.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DefineEntityReplacementText">
      <MemberSignature Language="VB.NET" Value="Public Sub DefineEntityReplacementText (entityName As String, replacementText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineEntityReplacementText(System::String ^ entityName, System::String ^ replacementText);" />
      <MemberSignature Language="C#" Value="public void DefineEntityReplacementText (string? entityName, string? replacementText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineEntityReplacementText(string entityName, string replacementText) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.DefineEntityReplacementText(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member DefineEntityReplacementText : string * string -&gt; unit" Usage="iXmlPullParser.DefineEntityReplacementText (entityName, replacementText)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("defineEntityReplacementText", "(Ljava/lang/String;Ljava/lang/String;)V", "GetDefineEntityReplacementText_Ljava_lang_String_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("defineEntityReplacementText", "(Ljava/lang/String;Ljava/lang/String;)V", "GetDefineEntityReplacementText_Ljava_lang_String_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityName" Type="System.String" />
        <Parameter Name="replacementText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityName">To be added.</param>
        <param name="replacementText">To be added.</param>
        <summary>Set new value for entity replacement text as defined in
            <see href="http://www.w3.org/TR/REC-xml#intern-replacement">XML 1.0 Section 4.5
            Construction of Internal Entity Replacement Text</see>.</summary>
        <remarks>
          <para>Set new value for entity replacement text as defined in
            <see href="http://www.w3.org/TR/REC-xml#intern-replacement">XML 1.0 Section 4.5
            Construction of Internal Entity Replacement Text</see>.
            If FEATURE_PROCESS_DOCDECL or FEATURE_VALIDATION are set, calling this
            function will result in an exception -- when processing of DOCDECL is
            enabled, there is no need to the entity replacement text manually.</para>
          <para>The motivation for this function is to allow very small
            implementations of XMLPULL that will work in J2ME environments.
            Though these implementations may not be able to process the document type
            declaration, they still can work with known DTDs by using this function.</para>
          <para>&lt;b&gt;Please notes:&lt;/b&gt; The given value is used literally as replacement text
            and it corresponds to declaring entity in DTD that has all special characters
            escaped: left angle bracket is replaced with &amp;amp;lt;, ampersand with &amp;amp;amp;
            and so on.</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; The given value is the literal replacement text and must not
            contain any other entity reference (if it contains any entity reference
            there will be no further replacement).</para>
          <para>&lt;b&gt;Note:&lt;/b&gt; The list of pre-defined entity names will
            always contain standard XML entities such as
            amp (&amp;amp;amp;), lt (&amp;amp;lt;), gt (&amp;amp;gt;), quot (&amp;amp;quot;), and apos (&amp;amp;apos;).
            Those cannot be redefined by this method!</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#defineEntityReplacementText(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.defineEntityReplacementText(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <altmember cref="F:Org.XmlPull.V1.XmlPullParser.FeatureProcessDocdecl" />
        <altmember cref="F:Org.XmlPull.V1.XmlPullParser.FeatureValidation" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.Depth" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="Org.XmlPull.V1.IXmlPullParser.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getDepth", "()I", "GetGetDepthHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getDepth", "()I", "GetGetDepthHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current depth of the element.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventType As XmlPullParserNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Org::XmlPull::V1::XmlPullParserNode EventType { Org::XmlPull::V1::XmlPullParserNode get(); };" />
      <MemberSignature Language="C#" Value="public Org.XmlPull.V1.XmlPullParserNode EventType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Org.XmlPull.V1.XmlPullParserNode EventType" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.EventType" />
      <MemberSignature Language="F#" Value="member this.EventType : Org.XmlPull.V1.XmlPullParserNode" Usage="Org.XmlPull.V1.IXmlPullParser.EventType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getEventType", "()I", "GetGetEventTypeHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getEventType", "()I", "GetGetEventTypeHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.XmlPull.V1.XmlPullParserNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Returns the type of the current event (START_TAG, END_TAG, TEXT, etc.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="FeatureProcessDocdecl">
      <MemberSignature Language="VB.NET" Value="Public Const FeatureProcessDocdecl As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ FeatureProcessDocdecl;" />
      <MemberSignature Language="C#" Value="public const string FeatureProcessDocdecl;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureProcessDocdecl" />
      <MemberSignature Language="DocId" Value="F:Org.XmlPull.V1.IXmlPullParser.FeatureProcessDocdecl" />
      <MemberSignature Language="F#" Value="val mutable FeatureProcessDocdecl : string" Usage="Org.XmlPull.V1.IXmlPullParser.FeatureProcessDocdecl" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FEATURE_PROCESS_DOCDECL")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FEATURE_PROCESS_DOCDECL")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This feature determines whether the document declaration
            is processed.</summary>
        <remarks>
          <para>This feature determines whether the document declaration
            is processed. If set to false,
            the DOCDECL event type is reported by nextToken()
            and ignored by next().</para>
          <para>If this feature is activated, then the document declaration
            must be processed by the parser.</para>
          <para>&lt;strong&gt;Please note:&lt;/strong&gt; If the document type declaration
            was ignored, entity references may cause exceptions
            later in the parsing process.
            The default value of this feature is false. It cannot be changed
            during parsing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#FEATURE_PROCESS_DOCDECL" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.FEATURE_PROCESS_DOCDECL</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureProcessNamespaces">
      <MemberSignature Language="VB.NET" Value="Public Const FeatureProcessNamespaces As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ FeatureProcessNamespaces;" />
      <MemberSignature Language="C#" Value="public const string FeatureProcessNamespaces;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureProcessNamespaces" />
      <MemberSignature Language="DocId" Value="F:Org.XmlPull.V1.IXmlPullParser.FeatureProcessNamespaces" />
      <MemberSignature Language="F#" Value="val mutable FeatureProcessNamespaces : string" Usage="Org.XmlPull.V1.IXmlPullParser.FeatureProcessNamespaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FEATURE_PROCESS_NAMESPACES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FEATURE_PROCESS_NAMESPACES")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This feature determines whether the parser processes
            namespaces.</summary>
        <remarks>
          <para>This feature determines whether the parser processes
            namespaces. As for all features, the default value is false.</para>
          <para>&lt;strong&gt;NOTE:&lt;/strong&gt; The value can not be changed during
            parsing an must be set before parsing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#FEATURE_PROCESS_NAMESPACES" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.FEATURE_PROCESS_NAMESPACES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureReportNamespaceAttributes">
      <MemberSignature Language="VB.NET" Value="Public Const FeatureReportNamespaceAttributes As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ FeatureReportNamespaceAttributes;" />
      <MemberSignature Language="C#" Value="public const string FeatureReportNamespaceAttributes;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureReportNamespaceAttributes" />
      <MemberSignature Language="DocId" Value="F:Org.XmlPull.V1.IXmlPullParser.FeatureReportNamespaceAttributes" />
      <MemberSignature Language="F#" Value="val mutable FeatureReportNamespaceAttributes : string" Usage="Org.XmlPull.V1.IXmlPullParser.FeatureReportNamespaceAttributes" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FEATURE_REPORT_NAMESPACE_ATTRIBUTES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FEATURE_REPORT_NAMESPACE_ATTRIBUTES")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This feature determines whether namespace attributes are
            exposed via the attribute access methods.</summary>
        <remarks>
          <para>This feature determines whether namespace attributes are
            exposed via the attribute access methods. Like all features,
            the default value is false. This feature cannot be changed
            during parsing.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#FEATURE_REPORT_NAMESPACE_ATTRIBUTES" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.FEATURE_REPORT_NAMESPACE_ATTRIBUTES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FeatureValidation">
      <MemberSignature Language="VB.NET" Value="Public Const FeatureValidation As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ FeatureValidation;" />
      <MemberSignature Language="C#" Value="public const string FeatureValidation;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string FeatureValidation" />
      <MemberSignature Language="DocId" Value="F:Org.XmlPull.V1.IXmlPullParser.FeatureValidation" />
      <MemberSignature Language="F#" Value="val mutable FeatureValidation : string" Usage="Org.XmlPull.V1.IXmlPullParser.FeatureValidation" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("FEATURE_VALIDATION")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("FEATURE_VALIDATION")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>If this feature is activated, all validation errors as
            defined in the XML 1.</summary>
        <remarks>
          <para>If this feature is activated, all validation errors as
            defined in the XML 1.0 specification are reported.
            This implies that FEATURE_PROCESS_DOCDECL is true and both, the
            internal and external document type declaration will be processed.</para>
          <para>&lt;strong&gt;Please Note:&lt;/strong&gt; This feature can not be changed
            during parsing. The default value is false.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#FEATURE_VALIDATION" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.FEATURE_VALIDATION</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributeName (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAttributeName(int index);" />
      <MemberSignature Language="C#" Value="public string? GetAttributeName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttributeName(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.GetAttributeName(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeName : int -&gt; string" Usage="iXmlPullParser.GetAttributeName index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAttributeName", "(I)Ljava/lang/String;", "GetGetAttributeName_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAttributeName", "(I)Ljava/lang/String;", "GetGetAttributeName_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">zero-based index of attribute</param>
        <summary>Returns the local name of the specified attribute
            if namespaces are enabled or just attribute name if namespaces are disabled.</summary>
        <returns>attribute name (null is never returned)</returns>
        <remarks>
          <para>Returns the local name of the specified attribute
            if namespaces are enabled or just attribute name if namespaces are disabled.
            Throws an IndexOutOfBoundsException if the index is out of range
            or current event type is not START_TAG.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#getAttributeName(int)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.getAttributeName(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeNamespace">
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributeNamespace (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAttributeNamespace(int index);" />
      <MemberSignature Language="C#" Value="public string? GetAttributeNamespace (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttributeNamespace(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.GetAttributeNamespace(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeNamespace : int -&gt; string" Usage="iXmlPullParser.GetAttributeNamespace index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAttributeNamespace", "(I)Ljava/lang/String;", "GetGetAttributeNamespace_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAttributeNamespace", "(I)Ljava/lang/String;", "GetGetAttributeNamespace_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">zero-based index of attribute</param>
        <summary>Returns the namespace URI of the attribute
            with the given index (starts from 0).</summary>
        <returns>attribute namespace,
              empty string ("") is returned  if namespaces processing is not enabled or
              namespaces processing is enabled but attribute has no namespace (it has no prefix).</returns>
        <remarks>
          <para>Returns the namespace URI of the attribute
            with the given index (starts from 0).
            Returns an empty string ("") if namespaces are not enabled
            or the attribute has no namespace.
            Throws an IndexOutOfBoundsException if the index is out of range
            or the current event type is not START_TAG.</para>
          <para>&lt;strong&gt;NOTE:&lt;/strong&gt; if FEATURE_REPORT_NAMESPACE_ATTRIBUTES is set
            then namespace attributes (xmlns:ns='...') must be reported
            with namespace
            <see href="http://www.w3.org/2000/xmlns/">http://www.w3.org/2000/xmlns/</see>
            (visit this URL for description!).
            The default namespace attribute (xmlns="...") will be reported with empty namespace.</para>
          <para>&lt;strong&gt;NOTE:&lt;/strong&gt;The xml prefix is bound as defined in
            <see href="http://www.w3.org/TR/REC-xml-names/#ns-using">Namespaces in XML</see>
            specification to "http://www.w3.org/XML/1998/namespace".</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#getAttributeNamespace(int)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.getAttributeNamespace(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributePrefix">
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributePrefix (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAttributePrefix(int index);" />
      <MemberSignature Language="C#" Value="public string? GetAttributePrefix (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttributePrefix(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.GetAttributePrefix(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetAttributePrefix : int -&gt; string" Usage="iXmlPullParser.GetAttributePrefix index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAttributePrefix", "(I)Ljava/lang/String;", "GetGetAttributePrefix_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAttributePrefix", "(I)Ljava/lang/String;", "GetGetAttributePrefix_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">zero-based index of attribute</param>
        <summary>Returns the prefix of the specified attribute
            Returns null if the element has no prefix.</summary>
        <returns>attribute prefix or null if namespaces processing is not enabled.</returns>
        <remarks>
          <para>Returns the prefix of the specified attribute
            Returns null if the element has no prefix.
            If namespaces are disabled it will always return null.
            Throws an IndexOutOfBoundsException if the index is out of range
            or current event type is not START_TAG.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#getAttributePrefix(int)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.getAttributePrefix(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeType">
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributeType (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAttributeType(int index);" />
      <MemberSignature Language="C#" Value="public string? GetAttributeType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttributeType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.GetAttributeType(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeType : int -&gt; string" Usage="iXmlPullParser.GetAttributeType index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAttributeType", "(I)Ljava/lang/String;", "GetGetAttributeType_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAttributeType", "(I)Ljava/lang/String;", "GetGetAttributeType_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">zero-based index of attribute</param>
        <summary>Returns the type of the specified attribute
            If parser is non-validating it MUST return CDATA.</summary>
        <returns>attribute type (null is never returned)</returns>
        <remarks>
          <para>Returns the type of the specified attribute
            If parser is non-validating it MUST return CDATA.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#getAttributeType(int)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.getAttributeType(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeValue">
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributeValue (index As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAttributeValue(int index);" />
      <MemberSignature Language="C#" Value="public string? GetAttributeValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttributeValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.GetAttributeValue(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeValue : int -&gt; string" Usage="iXmlPullParser.GetAttributeValue index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAttributeValue", "(I)Ljava/lang/String;", "GetGetAttributeValue_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAttributeValue", "(I)Ljava/lang/String;", "GetGetAttributeValue_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">zero-based index of attribute</param>
        <summary>Returns the given attributes value.</summary>
        <returns>value of attribute (null is never returned)</returns>
        <remarks>
          <para>Returns the given attributes value.
            Throws an IndexOutOfBoundsException if the index is out of range
            or current event type is not START_TAG.</para>
          <para>&lt;strong&gt;NOTE:&lt;/strong&gt; attribute value must be normalized
            (including entity replacement text if PROCESS_DOCDECL is false) as described in
            <see href="http://www.w3.org/TR/REC-xml#AVNormalize">XML 1.0 section
            3.3.3 Attribute-Value Normalization</see></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#getAttributeValue(int)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.getAttributeValue(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeValue">
      <MemberSignature Language="VB.NET" Value="Public Function GetAttributeValue (namespace As String, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAttributeValue(System::String ^ namespace, System::String ^ name);" />
      <MemberSignature Language="C#" Value="public string? GetAttributeValue (string? namespace, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttributeValue(string namespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.GetAttributeValue(System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetAttributeValue : string * string -&gt; string" Usage="iXmlPullParser.GetAttributeValue (namespace, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getAttributeValue", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetGetAttributeValue_Ljava_lang_String_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getAttributeValue", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetGetAttributeValue_Ljava_lang_String_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespace">Namespace of the attribute if namespaces are enabled otherwise must be null</param>
        <param name="name">If namespaces enabled local name of attribute otherwise just attribute name</param>
        <summary>Returns the attributes value identified by namespace URI and namespace localName.</summary>
        <returns>value of attribute or null if attribute with given name does not exist</returns>
        <remarks>
          <para>Returns the attributes value identified by namespace URI and namespace localName.
            If namespaces are disabled namespace must be null.
            If current event type is not START_TAG then IndexOutOfBoundsException will be thrown.</para>
          <para>&lt;strong&gt;NOTE:&lt;/strong&gt; attribute value must be normalized
            (including entity replacement text if PROCESS_DOCDECL is false) as described in
            <see href="http://www.w3.org/TR/REC-xml#AVNormalize">XML 1.0 section
            3.3.3 Attribute-Value Normalization</see></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#getAttributeValue(java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.getAttributeValue(java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFeature">
      <MemberSignature Language="VB.NET" Value="Public Function GetFeature (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetFeature(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public bool GetFeature (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetFeature(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.GetFeature(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetFeature : string -&gt; bool" Usage="iXmlPullParser.GetFeature name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of feature to be retrieved.</param>
        <summary>Returns the current value of the given feature.</summary>
        <returns>The value of the feature.</returns>
        <remarks>
          <para>Returns the current value of the given feature.</para>
          <para>&lt;strong&gt;Please note:&lt;/strong&gt; unknown features are
            &lt;strong&gt;always&lt;/strong&gt; returned as false.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#getFeature(java.lang.String)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.getFeature(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if string the feature name is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNamespace">
      <MemberSignature Language="VB.NET" Value="Public Function GetNamespace (prefix As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNamespace(System::String ^ prefix);" />
      <MemberSignature Language="C#" Value="public string? GetNamespace (string? prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespace(string prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.GetNamespace(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetNamespace : string -&gt; string" Usage="iXmlPullParser.GetNamespace prefix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNamespace", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetNamespace_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNamespace", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetNamespace_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <summary>Returns the URI corresponding to the given prefix,
            depending on current state of the parser.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the URI corresponding to the given prefix,
            depending on current state of the parser.</para>
          <para>If the prefix was not declared in the current scope,
            null is returned. The default namespace is included
            in the namespace table and is available via
            getNamespace (null).</para>
          <para>This method is a convenience method for</para>
          <code lang="text/java">for (int i = getNamespaceCount(getDepth ())-1; i &gt;= 0; i--) {
              if (getNamespacePrefix(i).equals( prefix )) {
                return getNamespaceUri(i);
              }
             }
             return null;
            </code>
          <para>&lt;strong&gt;Please note:&lt;/strong&gt; parser implementations
            may provide more efficient lookup, e.g. using a Hashtable.
            The 'xml' prefix is bound to "http://www.w3.org/XML/1998/namespace", as
            defined in the
            <see href="http://www.w3.org/TR/REC-xml-names/#ns-using">Namespaces in XML</see>
            specification. Analogous, the 'xmlns' prefix is resolved to
            <see href="http://www.w3.org/2000/xmlns/">http://www.w3.org/2000/xmlns/</see></para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#getNamespace(java.lang.String)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.getNamespace(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceCount">
      <MemberSignature Language="VB.NET" Value="Public Function GetNamespaceCount (depth As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetNamespaceCount(int depth);" />
      <MemberSignature Language="C#" Value="public int GetNamespaceCount (int depth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNamespaceCount(int32 depth) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.GetNamespaceCount(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaceCount : int -&gt; int" Usage="iXmlPullParser.GetNamespaceCount depth" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNamespaceCount", "(I)I", "GetGetNamespaceCount_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNamespaceCount", "(I)I", "GetGetNamespaceCount_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="depth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="depth">To be added.</param>
        <summary>Returns the numbers of elements in the namespace stack for the given
            depth.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the numbers of elements in the namespace stack for the given
            depth.
            If namespaces are not enabled, 0 is returned.</para>
          <para>&lt;b&gt;NOTE:&lt;/b&gt; when parser is on END_TAG then it is allowed to call
             this function with getDepth()+1 argument to retrieve position of namespace
             prefixes and URIs that were declared on corresponding START_TAG.</para>
          <para>&lt;b&gt;NOTE:&lt;/b&gt; to retrieve list of namespaces declared in current element:</para>
          <code lang="text/java">XmlPullParser pp = ...
                  int nsStart = pp.getNamespaceCount(pp.getDepth()-1);
                  int nsEnd = pp.getNamespaceCount(pp.getDepth());
                  for (int i = nsStart; i &lt; nsEnd; i++) {
                     String prefix = pp.getNamespacePrefix(i);
                     String ns = pp.getNamespaceUri(i);
                      // ...
                 }
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#getNamespaceCount(int)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.getNamespaceCount(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespacePrefix">
      <MemberSignature Language="VB.NET" Value="Public Function GetNamespacePrefix (pos As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNamespacePrefix(int pos);" />
      <MemberSignature Language="C#" Value="public string? GetNamespacePrefix (int pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespacePrefix(int32 pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.GetNamespacePrefix(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetNamespacePrefix : int -&gt; string" Usage="iXmlPullParser.GetNamespacePrefix pos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNamespacePrefix", "(I)Ljava/lang/String;", "GetGetNamespacePrefix_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNamespacePrefix", "(I)Ljava/lang/String;", "GetGetNamespacePrefix_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>Returns the namespace prefix for the given position
            in the namespace stack.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the namespace prefix for the given position
            in the namespace stack.
            Default namespace declaration (xmlns='...') will have null as prefix.
            If the given index is out of range, an exception is thrown.</para>
          <para>&lt;b&gt;Please note:&lt;/b&gt; when the parser is on an END_TAG,
            namespace prefixes that were declared
            in the corresponding START_TAG are still accessible
            although they are no longer in scope.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#getNamespacePrefix(int)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.getNamespacePrefix(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceUri">
      <MemberSignature Language="VB.NET" Value="Public Function GetNamespaceUri (pos As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetNamespaceUri(int pos);" />
      <MemberSignature Language="C#" Value="public string? GetNamespaceUri (int pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespaceUri(int32 pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.GetNamespaceUri(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member GetNamespaceUri : int -&gt; string" Usage="iXmlPullParser.GetNamespaceUri pos" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getNamespaceUri", "(I)Ljava/lang/String;", "GetGetNamespaceUri_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getNamespaceUri", "(I)Ljava/lang/String;", "GetGetNamespaceUri_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>Returns the namespace URI for the given position in the
            namespace stack
            If the position is out of range, an exception is thrown.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Returns the namespace URI for the given position in the
            namespace stack
            If the position is out of range, an exception is thrown.</para>
          <para>&lt;b&gt;NOTE:&lt;/b&gt; when parser is on END_TAG then namespace prefixes that were declared
             in corresponding START_TAG are still accessible even though they are not in scope</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#getNamespaceUri(int)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.getNamespaceUri(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Java::Lang::Object ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="C#" Value="public Java.Lang.Object? GetProperty (string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.GetProperty(System.String)" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : string -&gt; Java.Lang.Object" Usage="iXmlPullParser.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of property to be retrieved.</param>
        <summary>Look up the value of a property.</summary>
        <returns>The value of named property.</returns>
        <remarks>
          <para>Look up the value of a property.</para>
          <para>The property name is any fully-qualified URI.</para>
          <para>&lt;strong&gt;NOTE:&lt;/strong&gt; unknown properties are &lt;strong&gt;always&lt;/strong&gt;
            returned as null.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#getProperty(java.lang.String)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.getProperty(java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextCharacters">
      <MemberSignature Language="VB.NET" Value="Public Function GetTextCharacters (holderForStartAndLength As Integer()) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;char&gt; ^ GetTextCharacters(cli::array &lt;int&gt; ^ holderForStartAndLength);" />
      <MemberSignature Language="C#" Value="public char[]? GetTextCharacters (int[]? holderForStartAndLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetTextCharacters(int32[] holderForStartAndLength) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.GetTextCharacters(System.Int32[])" />
      <MemberSignature Language="F#" Value="abstract member GetTextCharacters : int[] -&gt; char[]" Usage="iXmlPullParser.GetTextCharacters holderForStartAndLength" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("getTextCharacters", "([I)[C", "GetGetTextCharacters_arrayIHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("getTextCharacters", "([I)[C", "GetGetTextCharacters_arrayIHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holderForStartAndLength" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="holderForStartAndLength">Must hold an 2-element int array
            into which the start offset and length values will be written.</param>
        <summary>Returns the buffer that contains the text of the current event,
            as well as the start offset and length relevant for the current
            event.</summary>
        <returns>char buffer that contains the text of the current event
             (null if the current event has no text associated).</returns>
        <remarks>
          <para>Returns the buffer that contains the text of the current event,
            as well as the start offset and length relevant for the current
            event. See getText(), next() and nextToken() for description of possible returned values.</para>
          <para>&lt;strong&gt;Please note:&lt;/strong&gt; this buffer must not
            be modified and its content MAY change after a call to
            next() or nextToken(). This method will always return the
            same value as getText(), except for ENTITY_REF. In the case
            of ENTITY ref, getText() returns the replacement text and
            this method returns the actual input buffer containing the
            entity name.
            If getText() returns null, this method returns null as well and
            the values returned in the holder array MUST be -1 (both start
            and length).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#getTextCharacters(int[])" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.getTextCharacters(int[])</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InputEncoding">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputEncoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InputEncoding { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? InputEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputEncoding" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.InputEncoding" />
      <MemberSignature Language="F#" Value="member this.InputEncoding : string" Usage="Org.XmlPull.V1.IXmlPullParser.InputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getInputEncoding", "()Ljava/lang/String;", "GetGetInputEncodingHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getInputEncoding", "()Ljava/lang/String;", "GetGetInputEncodingHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the input encoding if known, null otherwise.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefault">
      <MemberSignature Language="VB.NET" Value="Public Function IsAttributeDefault (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAttributeDefault(int index);" />
      <MemberSignature Language="C#" Value="public bool IsAttributeDefault (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAttributeDefault(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.IsAttributeDefault(System.Int32)" />
      <MemberSignature Language="F#" Value="abstract member IsAttributeDefault : int -&gt; bool" Usage="iXmlPullParser.IsAttributeDefault index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("isAttributeDefault", "(I)Z", "GetIsAttributeDefault_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("isAttributeDefault", "(I)Z", "GetIsAttributeDefault_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">zero-based index of attribute</param>
        <summary>Returns if the specified attribute was not in input was declared in XML.</summary>
        <returns>false if attribute was in input</returns>
        <remarks>
          <para>Returns if the specified attribute was not in input was declared in XML.
            If parser is non-validating it MUST always return false.
            This information is part of XML infoset:</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#isAttributeDefault(int)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.isAttributeDefault(int)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElementTag">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmptyElementTag As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmptyElementTag { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsEmptyElementTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElementTag" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.IsEmptyElementTag" />
      <MemberSignature Language="F#" Value="member this.IsEmptyElementTag : bool" Usage="Org.XmlPull.V1.IXmlPullParser.IsEmptyElementTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isEmptyElementTag", "()Z", "GetIsEmptyElementTagHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isEmptyElementTag", "()Z", "GetIsEmptyElementTagHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the current event is START_TAG and the tag
 is degenerated
 (e.g. &lt;foobar/&gt;).</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespace">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespace { bool get(); };" />
      <MemberSignature Language="C#" Value="public bool IsWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespace" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.IsWhitespace" />
      <MemberSignature Language="F#" Value="member this.IsWhitespace : bool" Usage="Org.XmlPull.V1.IXmlPullParser.IsWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("isWhitespace", "()Z", "GetIsWhitespaceHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("isWhitespace", "()Z", "GetIsWhitespaceHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether the current TEXT event contains only whitespace
 characters.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.LineNumber" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="Org.XmlPull.V1.IXmlPullParser.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getLineNumber", "()I", "GetGetLineNumberHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getLineNumber", "()I", "GetGetLineNumberHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current line number, starting from 1.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.Name" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Org.XmlPull.V1.IXmlPullParser.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For START_TAG or END_TAG events, the (local) name of the current
 element is returned when namespaces are enabled.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.Namespace" />
      <MemberSignature Language="F#" Value="member this.Namespace : string" Usage="Org.XmlPull.V1.IXmlPullParser.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getNamespace", "()Ljava/lang/String;", "GetGetNamespaceHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getNamespace", "()Ljava/lang/String;", "GetGetNamespaceHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the namespace URI of the current element.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="VB.NET" Value="Public Function Next () As XmlPullParserNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Org::XmlPull::V1::XmlPullParserNode Next();" />
      <MemberSignature Language="C#" Value="public Org.XmlPull.V1.XmlPullParserNode Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Org.XmlPull.V1.XmlPullParserNode Next() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.Next" />
      <MemberSignature Language="F#" Value="abstract member Next : unit -&gt; Org.XmlPull.V1.XmlPullParserNode" Usage="iXmlPullParser.Next " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("next", "()I", "GetNextHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("next", "()I", "GetNextHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.XmlPull.V1.XmlPullParserNode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get next parsing event - element content will be coalesced and only one
            TEXT event must be returned for whole element content
            (comments and processing instructions will be ignored and entity references
            must be expanded or exception must be thrown if entity reference can not be expanded).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Get next parsing event - element content will be coalesced and only one
            TEXT event must be returned for whole element content
            (comments and processing instructions will be ignored and entity references
            must be expanded or exception must be thrown if entity reference can not be expanded).
            If element content is empty (content is "") then no TEXT event will be reported.</para>
          <para>&lt;b&gt;NOTE:&lt;/b&gt; empty element (such as &amp;lt;tag/&gt;) will be reported
             with  two separate events: START_TAG, END_TAG - it must be so to preserve
              parsing equivalency of empty element to &amp;lt;tag&gt;&amp;lt;/tag&gt;.
             (see isEmptyElementTag ())</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#next()" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.next()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="NextTag">
      <MemberSignature Language="VB.NET" Value="Public Function NextTag () As XmlPullParserNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Org::XmlPull::V1::XmlPullParserNode NextTag();" />
      <MemberSignature Language="C#" Value="public Org.XmlPull.V1.XmlPullParserNode NextTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Org.XmlPull.V1.XmlPullParserNode NextTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.NextTag" />
      <MemberSignature Language="F#" Value="abstract member NextTag : unit -&gt; Org.XmlPull.V1.XmlPullParserNode" Usage="iXmlPullParser.NextTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nextTag", "()I", "GetNextTagHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nextTag", "()I", "GetNextTagHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.XmlPull.V1.XmlPullParserNode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call next() and return event if it is START_TAG or END_TAG
            otherwise throw an exception.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>Call next() and return event if it is START_TAG or END_TAG
            otherwise throw an exception.
            It will skip whitespace TEXT before actual tag if any.</para>
          <para>essentially it does this</para>
          <code lang="text/java">int eventType = next();
              if(eventType == TEXT &amp;amp;&amp;amp;  isWhitespace()) {   // skip whitespace
                 eventType = next();
              }
              if (eventType != START_TAG &amp;amp;&amp;amp;  eventType != END_TAG) {
                 throw new XmlPullParserException("expected start or end tag", this, null);
              }
              return eventType;
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#nextTag()" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.nextTag()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="NextText">
      <MemberSignature Language="VB.NET" Value="Public Function NextText () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ NextText();" />
      <MemberSignature Language="C#" Value="public string? NextText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NextText() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.NextText" />
      <MemberSignature Language="F#" Value="abstract member NextText : unit -&gt; string" Usage="iXmlPullParser.NextText " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nextText", "()Ljava/lang/String;", "GetNextTextHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nextText", "()Ljava/lang/String;", "GetNextTextHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If current event is START_TAG then if next element is TEXT then element content is returned
            or if next event is END_TAG then empty string is returned, otherwise exception is thrown.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>If current event is START_TAG then if next element is TEXT then element content is returned
            or if next event is END_TAG then empty string is returned, otherwise exception is thrown.
            After calling this function successfully parser will be positioned on END_TAG.</para>
          <para>The motivation for this function is to allow to parse consistently both
            empty elements and elements that has non empty content, for example for input: &lt;ol&gt;
            &lt;li&gt;&amp;lt;tag&amp;gt;foo&amp;lt;/tag&amp;gt;
            &lt;li&gt;&amp;lt;tag&amp;gt;&amp;lt;/tag&amp;gt; (which is equivalent to &amp;lt;tag/&amp;gt;
            both input can be parsed with the same code:</para>
          <code lang="text/java">p.nextTag()
              p.requireEvent(p.START_TAG, "", "tag");
              String content = p.nextText();
              p.requireEvent(p.END_TAG, "", "tag");
            </code>
          <para>This function together with nextTag make it very easy to parse XML that has
            no mixed content.</para>
          <para />
          <para>Essentially it does this</para>
          <code lang="text/java">if(getEventType() != START_TAG) {
                throw new XmlPullParserException(
                  "parser must be on START_TAG to read next text", this, null);
             }
             int eventType = next();
             if(eventType == TEXT) {
                String result = getText();
                eventType = next();
                if(eventType != END_TAG) {
                  throw new XmlPullParserException(
                     "event TEXT it must be immediately followed by END_TAG", this, null);
                 }
                 return result;
             } else if(eventType == END_TAG) {
                return "";
             } else {
                throw new XmlPullParserException(
                  "parser must be on START_TAG or TEXT to read text", this, null);
             }
            </code>
          <para>&lt;strong&gt;Warning:&lt;/strong&gt; Prior to API level 14, the pull parser returned by <c>android.util.Xml</c> did not always advance to the END_TAG event when this method was called.
            Work around by using manually advancing after calls to nextText():</para>
          <code lang="text/java">String text = xpp.nextText();
             if (xpp.getEventType() != XmlPullParser.END_TAG) {
                 xpp.next();
             }
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#nextText()" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.nextText()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="NextToken">
      <MemberSignature Language="VB.NET" Value="Public Function NextToken () As XmlPullParserNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Org::XmlPull::V1::XmlPullParserNode NextToken();" />
      <MemberSignature Language="C#" Value="public Org.XmlPull.V1.XmlPullParserNode NextToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Org.XmlPull.V1.XmlPullParserNode NextToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.NextToken" />
      <MemberSignature Language="F#" Value="abstract member NextToken : unit -&gt; Org.XmlPull.V1.XmlPullParserNode" Usage="iXmlPullParser.NextToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("nextToken", "()I", "GetNextTokenHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("nextToken", "()I", "GetNextTokenHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.XmlPull.V1.XmlPullParserNode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
            <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method works similarly to next() but will expose
            additional event types (COMMENT, CDSECT, DOCDECL, ENTITY_REF, PROCESSING_INSTRUCTION, or
            IGNORABLE_WHITESPACE) if they are available in input.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para>This method works similarly to next() but will expose
            additional event types (COMMENT, CDSECT, DOCDECL, ENTITY_REF, PROCESSING_INSTRUCTION, or
            IGNORABLE_WHITESPACE) if they are available in input.</para>
          <para>If special feature
            <see href="http://xmlpull.org/v1/doc/features.html#xml-roundtrip">FEATURE_XML_ROUNDTRIP</see>
            (identified by URI: http://xmlpull.org/v1/doc/features.html#xml-roundtrip)
            is enabled it is possible to do XML document round trip ie. reproduce
            exectly on output the XML input using getText():
            returned content is always unnormalized (exactly as in input).
            Otherwise returned content is end-of-line normalized as described
            <see href="http://www.w3.org/TR/REC-xml#sec-line-ends">XML 1.0 End-of-Line Handling</see>
            and. Also when this feature is enabled exact content of START_TAG, END_TAG,
            DOCDECL and PROCESSING_INSTRUCTION is available.</para>
          <para>Here is the list of tokens that can be  returned from nextToken()
            and what getText() and getTextCharacters() returns:&lt;dl&gt;
            &lt;dt&gt;START_DOCUMENT&lt;dd&gt;null
            &lt;dt&gt;END_DOCUMENT&lt;dd&gt;null
            &lt;dt&gt;START_TAG&lt;dd&gt;null unless FEATURE_XML_ROUNDTRIP
              enabled and then returns XML tag, ex: &amp;lt;tag attr='val'&gt;
            &lt;dt&gt;END_TAG&lt;dd&gt;null unless FEATURE_XML_ROUNDTRIP
             id enabled and then returns XML tag, ex: &amp;lt;/tag&gt;
            &lt;dt&gt;TEXT&lt;dd&gt;return element content.
             &lt;br&gt;Note: that element content may be delivered in multiple consecutive TEXT events.
            &lt;dt&gt;IGNORABLE_WHITESPACE&lt;dd&gt;return characters that are determined to be ignorable white
            space. If the FEATURE_XML_ROUNDTRIP is enabled all whitespace content outside root
            element will always reported as IGNORABLE_WHITESPACE otherwise reporting is optional.
             &lt;br&gt;Note: that element content may be delivered in multiple consecutive IGNORABLE_WHITESPACE events.
            &lt;dt&gt;CDSECT&lt;dd&gt;
            return text &lt;em&gt;inside&lt;/em&gt; CDATA
             (ex. 'fo&amp;lt;o' from &amp;lt;!CDATA[fo&amp;lt;o]]&gt;)
            &lt;dt&gt;PROCESSING_INSTRUCTION&lt;dd&gt;
             if FEATURE_XML_ROUNDTRIP is true
             return exact PI content ex: 'pi foo' from &amp;lt;?pi foo?&gt;
             otherwise it may be exact PI content or concatenation of PI target,
            space and data so for example for
              &amp;lt;?target    data?&gt; string &amp;quot;target data&amp;quot; may
                  be returned if FEATURE_XML_ROUNDTRIP is false.
            &lt;dt&gt;COMMENT&lt;dd&gt;return comment content ex. 'foo bar' from &amp;lt;!--foo bar--&gt;
            &lt;dt&gt;ENTITY_REF&lt;dd&gt;getText() MUST return entity replacement text if PROCESS_DOCDECL is false
            otherwise getText() MAY return null,
            additionally getTextCharacters() MUST return entity name
            (for example 'entity_name' for &amp;amp;entity_name;).
            &lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; this is the only place where value returned from getText() and
              getTextCharacters() &lt;b&gt;are different&lt;/b&gt;
            &lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; it is user responsibility to resolve entity reference
               if PROCESS_DOCDECL is false and there is no entity replacement text set in
               defineEntityReplacementText() method (getText() will be null)
            &lt;br&gt;&lt;b&gt;NOTE:&lt;/b&gt; character entities (ex. &amp;amp;#32;) and standard entities such as
             &amp;amp;amp; &amp;amp;lt; &amp;amp;gt; &amp;amp;quot; &amp;amp;apos; are reported as well
             and are &lt;b&gt;not&lt;/b&gt; reported as TEXT tokens but as ENTITY_REF tokens!
             This requirement is added to allow to do roundtrip of XML documents!
            &lt;dt&gt;DOCDECL&lt;dd&gt;
            if FEATURE_XML_ROUNDTRIP is true or PROCESS_DOCDECL is false
            then return what is inside of DOCDECL for example it returns:</para>
          <code lang="text/java">&amp;quot; titlepage SYSTEM "http://www.foo.bar/dtds/typo.dtd"
            [&amp;lt;!ENTITY % active.links "INCLUDE"&gt;]&amp;quot;</code>
          <para>for input document that contained:</para>
          <code lang="text/java">&amp;lt;!DOCTYPE titlepage SYSTEM "http://www.foo.bar/dtds/typo.dtd"
            [&amp;lt;!ENTITY % active.links "INCLUDE"&gt;]&gt;</code>
          <para>otherwise if FEATURE_XML_ROUNDTRIP is false and PROCESS_DOCDECL is true
               then what is returned is undefined (it may be even null)
            &lt;/dd&gt;
            &lt;/dl&gt;</para>
          <para>&lt;strong&gt;NOTE:&lt;/strong&gt; there is no guarantee that there will only one TEXT or
            IGNORABLE_WHITESPACE event from nextToken() as parser may chose to deliver element content in
            multiple tokens (dividing element content into chunks)</para>
          <para>&lt;strong&gt;NOTE:&lt;/strong&gt; whether returned text of token is end-of-line normalized
             is depending on FEATURE_XML_ROUNDTRIP.</para>
          <para>&lt;strong&gt;NOTE:&lt;/strong&gt; XMLDecl (&amp;lt;?xml ...?&amp;gt;) is not reported but its content
            is available through optional properties (see class description above).</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#nextToken()" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.nextToken()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="NoNamespace">
      <MemberSignature Language="VB.NET" Value="Public Const NoNamespace As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ NoNamespace;" />
      <MemberSignature Language="C#" Value="public const string NoNamespace;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string NoNamespace" />
      <MemberSignature Language="DocId" Value="F:Org.XmlPull.V1.IXmlPullParser.NoNamespace" />
      <MemberSignature Language="F#" Value="val mutable NoNamespace : string" Usage="Org.XmlPull.V1.IXmlPullParser.NoNamespace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("NO_NAMESPACE")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("NO_NAMESPACE")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(1)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(1)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This constant represents the default namespace (empty string "")</summary>
        <remarks>
          <para>This constant represents the default namespace (empty string "")</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#NO_NAMESPACE" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.NO_NAMESPACE</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PositionDescription">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PositionDescription As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PositionDescription { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? PositionDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositionDescription" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.PositionDescription" />
      <MemberSignature Language="F#" Value="member this.PositionDescription : string" Usage="Org.XmlPull.V1.IXmlPullParser.PositionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPositionDescription", "()Ljava/lang/String;", "GetGetPositionDescriptionHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPositionDescription", "()Ljava/lang/String;", "GetGetPositionDescriptionHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a short text describing the current parser state, including
 the position, a
 description of the current event and the data source if known.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Prefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Prefix { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.Prefix" />
      <MemberSignature Language="F#" Value="member this.Prefix : string" Usage="Org.XmlPull.V1.IXmlPullParser.Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getPrefix", "()Ljava/lang/String;", "GetGetPrefixHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getPrefix", "()Ljava/lang/String;", "GetGetPrefixHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the prefix of the current element.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Require">
      <MemberSignature Language="VB.NET" Value="Public Sub Require (type As XmlPullParserNode, namespace As String, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Require(Org::XmlPull::V1::XmlPullParserNode type, System::String ^ namespace, System::String ^ name);" />
      <MemberSignature Language="C#" Value="public void Require (Org.XmlPull.V1.XmlPullParserNode type, string? namespace, string? name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Require(valuetype Org.XmlPull.V1.XmlPullParserNode type, string namespace, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.Require(Org.XmlPull.V1.XmlPullParserNode,System.String,System.String)" />
      <MemberSignature Language="F#" Value="abstract member Require : Org.XmlPull.V1.XmlPullParserNode * string * string -&gt; unit" Usage="iXmlPullParser.Require (type, namespace, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("require", "(ILjava/lang/String;Ljava/lang/String;)V", "GetRequire_ILjava_lang_String_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("require", "(ILjava/lang/String;Ljava/lang/String;)V", "GetRequire_ILjava_lang_String_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Org.XmlPull.V1.XmlPullParserNode">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[Android.Runtime.GeneratedEnum]</AttributeName>
              <AttributeName Language="F#">[&lt;Android.Runtime.GeneratedEnum&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="namespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="namespace">To be added.</param>
        <param name="name">To be added.</param>
        <summary>Test if the current event is of the given type and if the
            namespace and name do match.</summary>
        <remarks>
          <para>Test if the current event is of the given type and if the
            namespace and name do match. null will match any namespace
            and any name. If the test is not passed, an exception is
            thrown. The exception text indicates the parser position,
            the expected event and the current event that is not meeting the
            requirement.</para>
          <para>Essentially it does this</para>
          <code lang="text/java">if (type != getEventType()
             || (namespace != null &amp;amp;&amp;amp;  !namespace.equals( getNamespace () ) )
             || (name != null &amp;amp;&amp;amp;  !name.equals( getName() ) ) )
                throw new XmlPullParserException( "expected "+ TYPES[ type ]+getPositionDescription());
            </code>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#require(int,%20java.lang.String,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.require(int, java.lang.String, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SetFeature">
      <MemberSignature Language="VB.NET" Value="Public Sub SetFeature (name As String, state As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetFeature(System::String ^ name, bool state);" />
      <MemberSignature Language="C#" Value="public void SetFeature (string? name, bool state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeature(string name, bool state) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.SetFeature(System.String,System.Boolean)" />
      <MemberSignature Language="F#" Value="abstract member SetFeature : string * bool -&gt; unit" Usage="iXmlPullParser.SetFeature (name, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="state" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="state">To be added.</param>
        <summary>Use this call to change the general behaviour of the parser,
            such as namespace processing or doctype declaration handling.</summary>
        <remarks>
          <para>Use this call to change the general behaviour of the parser,
            such as namespace processing or doctype declaration handling.
            This method must be called before the first call to next or
            nextToken. Otherwise, an exception is thrown.</para>
          <para>Example: call setFeature(FEATURE_PROCESS_NAMESPACES, true) in order
            to switch on namespace processing. The initial settings correspond
            to the properties requested from the XML Pull Parser factory.
            If none were requested, all features are deactivated by default.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#setFeature(java.lang.String,%20boolean)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.setFeature(java.lang.String, boolean)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException">If the feature is not supported or can not be set</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If string with the feature name is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetInput">
      <MemberSignature Language="VB.NET" Value="Public Sub SetInput (in As Reader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetInput(Java::IO::Reader ^ in);" />
      <MemberSignature Language="C#" Value="public void SetInput (Java.IO.Reader? in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInput(class Java.IO.Reader in) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.SetInput(Java.IO.Reader)" />
      <MemberSignature Language="F#" Value="abstract member SetInput : Java.IO.Reader -&gt; unit" Usage="iXmlPullParser.SetInput in" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInput", "(Ljava/io/Reader;)V", "GetSetInput_Ljava_io_Reader_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInput", "(Ljava/io/Reader;)V", "GetSetInput_Ljava_io_Reader_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.IO.Reader" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <summary>Set the input source for parser to the given reader and
            resets the parser.</summary>
        <remarks>
          <para>Set the input source for parser to the given reader and
            resets the parser. The event type is set to the initial value
            START_DOCUMENT.
            Setting the reader to null will just stop parsing and
            reset parser state,
            allowing the parser to free internal resources
            such as parsing buffers.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#setInput(java.io.Reader)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.setInput(java.io.Reader)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="SetInput">
      <MemberSignature Language="VB.NET" Value="Public Sub SetInput (inputStream As Stream, inputEncoding As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetInput(System::IO::Stream ^ inputStream, System::String ^ inputEncoding);" />
      <MemberSignature Language="C#" Value="public void SetInput (System.IO.Stream? inputStream, string? inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInput(class System.IO.Stream inputStream, string inputEncoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.SetInput(System.IO.Stream,System.String)" />
      <MemberSignature Language="F#" Value="abstract member SetInput : System.IO.Stream * string -&gt; unit" Usage="iXmlPullParser.SetInput (inputStream, inputEncoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setInput", "(Ljava/io/InputStream;Ljava/lang/String;)V", "GetSetInput_Ljava_io_InputStream_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setInput", "(Ljava/io/InputStream;Ljava/lang/String;)V", "GetSetInput_Ljava_io_InputStream_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="inputEncoding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputStream">contains a raw byte input stream of possibly
                unknown encoding (when inputEncoding is null).</param>
        <param name="inputEncoding">if not null it MUST be used as encoding for inputStream</param>
        <summary>Sets the input stream the parser is going to process.</summary>
        <remarks>
          <para>Sets the input stream the parser is going to process.
            This call resets the parser state and sets the event type
            to the initial value START_DOCUMENT.</para>
          <para>&lt;strong&gt;NOTE:&lt;/strong&gt; If an input encoding string is passed,
             it MUST be used. Otherwise,
             if inputEncoding is null, the parser SHOULD try to determine
             input encoding following XML 1.0 specification (see below).
             If encoding detection is supported then following feature
             <see href="http://xmlpull.org/v1/doc/features.html#detect-encoding">http://xmlpull.org/v1/doc/features.html#detect-encoding</see>
             MUST be true and otherwise it must be false.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#setInput(java.io.InputStream,%20java.lang.String)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.setInput(java.io.InputStream, java.lang.String)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="VB.NET" Value="Public Sub SetProperty (name As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetProperty(System::String ^ name, Java::Lang::Object ^ value);" />
      <MemberSignature Language="C#" Value="public void SetProperty (string? name, Java.Lang.Object? value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(string name, class Java.Lang.Object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Org.XmlPull.V1.IXmlPullParser.SetProperty(System.String,Java.Lang.Object)" />
      <MemberSignature Language="F#" Value="abstract member SetProperty : string * Java.Lang.Object -&gt; unit" Usage="iXmlPullParser.SetProperty (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Set the value of a property.</summary>
        <remarks>
          <para>Set the value of a property.</para>
          <para>The property name is any fully-qualified URI.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#setProperty(java.lang.String,%20java.lang.Object)" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.setProperty(java.lang.String, java.lang.Object)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException">If the property is not supported or can not be set</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If string with the property name is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="C#" Value="public string? Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.Text" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="Org.XmlPull.V1.IXmlPullParser.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyName>Mono.Android</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: Android.Runtime.Register("getText", "()Ljava/lang/String;", "GetGetTextHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: Android.Runtime.Register("getText", "()Ljava/lang/String;", "GetGetTextHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the text content of the current event as String.</summary>
        <value>To be added.</value>
        <remarks>
          <para>Portions of this page are modifications based on work created andÂ shared by the <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>Â and used according to terms described in theÂ <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Types">
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Types As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IList&lt;System::String ^&gt; ^ Types { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;string&gt;? Types { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;string&gt; Types" />
      <MemberSignature Language="DocId" Value="P:Org.XmlPull.V1.IXmlPullParser.Types" />
      <MemberSignature Language="F#" Value="member this.Types : System.Collections.Generic.IList&lt;string&gt;" Usage="Org.XmlPull.V1.IXmlPullParser.Types" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Android.Runtime.Register("TYPES")]</AttributeName>
          <AttributeName Language="F#">[&lt;Android.Runtime.Register("TYPES")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.Nullable(new System.Byte[] { 2, 1 })&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>This array can be used to convert the event type integer constants
            such as START_TAG or TEXT to
            to a string.</summary>
        <value>To be added.</value>
        <remarks>
          <para>This array can be used to convert the event type integer constants
            such as START_TAG or TEXT to
            to a string. For example, the value of TYPES[START_TAG] is
            the string "START_TAG".</para>
          <para>This array is intended for diagnostic output only. Relying
            on the contents of the array may be dangerous since malicious
            applications may alter the array, although it is final, due
            to limitations of the Java language.</para>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/org/xmlpull/v1/XmlPullParser#TYPES" title="Reference documentation">Java documentation for <code>org.xmlpull.v1.XmlPullParser.TYPES</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created andÂ shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
