<Type Name="IXmlPullParser" FullName="Org.XmlPull.V1.IXmlPullParser">
  <TypeSignature Language="C#" Value="public interface IXmlPullParser : Android.Runtime.IJavaObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IXmlPullParser implements class Android.Runtime.IJavaObject, class System.IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Android.Runtime.IJavaObject</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("org/xmlpull/v1/XmlPullParser", "", "Org.XmlPull.V1.IXmlPullParserInvoker")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs since="1">
    <summary>XML Pull Parser is an interface that defines parsing functionality provided
 in  (visit this website to
 learn more about API and its implementations).</summary>
    <remarks>
      <para tool="javadoc-to-mdoc">XML Pull Parser is an interface that defines parsing functionality provided
 in  (visit this website to
 learn more about API and its implementations).

 </para>
      <para tool="javadoc-to-mdoc">There are following different
 kinds of parser depending on which features are set:<list type="bullet"><item><term><format type="text/html"><b>non-validating</b></format> parser as defined in XML 1.0 spec when
   FEATURE_PROCESS_DOCDECL is set to true
 </term></item><item><term><format type="text/html"><b>validating parser</b></format> as defined in XML 1.0 spec when
   FEATURE_VALIDATION is true (and that implies that FEATURE_PROCESS_DOCDECL is true)
 </term></item><item><term>when FEATURE_PROCESS_DOCDECL is false (this is default and
   if different value is required necessary must be changed before parsing is started)
   then parser behaves like XML 1.0 compliant non-validating parser under condition that
  <i>no DOCDECL is present</i> in XML documents
   (internal entites can still be defined with defineEntityReplacementText()).
   This mode of operation is intended <format type="text/html"><b>for operation in constrained environments</b></format> such as J2ME.
 </term></item></list></para>
      <para tool="javadoc-to-mdoc">There are two key methods: next() and nextToken(). While next() provides
 access to high level parsing events, nextToken() allows access to lower
 level tokens.

 </para>
      <para tool="javadoc-to-mdoc">The current event state of the parser
 can be determined by calling the
  method.
 Initially, the parser is in the 
 state.

 </para>
      <para tool="javadoc-to-mdoc">The method  advances the parser to the
 next event. The int value returned from next determines the current parser
 state and is identical to the value returned from following calls to
 getEventType ().

 </para>
      <para tool="javadoc-to-mdoc">Th following event types are seen by next()<format type="text/html"><dl><dt><dd> An XML start tag was read.
 <dt><dd> Text content was read;
 the text content can be retrieved using the getText() method.
  (when in validating mode next() will not report ignorable whitespace, use nextToken() instead)
 <dt><dd> An end tag was read
 <dt><dd> No more events are available
 </dd></dt></dd></dt></dd></dt></dd></dt></dl></format></para>
      <para tool="javadoc-to-mdoc">after first next() or nextToken() (or any other next*() method)
 is called user application can obtain
 XML version, standalone and encoding from XML declaration
 in following ways:<list type="bullet"><item><term><format type="text/html"><b>version</b></format>:
  getProperty("")
       returns String ("1.0") or null if XMLDecl was not read or if property is not supported
 </term></item><item><term><format type="text/html"><b>standalone</b></format>:
  getProperty("")
       returns Boolean: null if there was no standalone declaration
  or if property is not supported
         otherwise returns Boolean(true) if standalone="yes" and Boolean(false) when standalone="no"
 </term></item><item><term><format type="text/html"><b>encoding</b></format>: obtained from getInputEncoding()
       null if stream had unknown encoding (not set in setInputStream)
           and it was not declared in XMLDecl
 </term></item></list>

 A minimal example for using this API may look as follows:
 <example><code lang="java">
 import java.io.IOException;
 import java.io.StringReader;

 import org.xmlpull.v1.XmlPullParser;
 import org.xmlpull.v1.XmlPullParserException;
 import org.xmlpull.v1.XmlPullParserFactory;

 public class SimpleXmlPullApp
 {

     public static void main (String args[])
         throws XmlPullParserException, IOException
     {
         XmlPullParserFactory factory = XmlPullParserFactory.newInstance();
         factory.setNamespaceAware(true);
         XmlPullParser xpp = factory.newPullParser();

         xpp.setInput( new StringReader ( "&lt;foo&gt;Hello World!&lt;/foo&gt;" ) );
         int eventType = xpp.getEventType();
         while (eventType != XmlPullParser.END_DOCUMENT) {
          if(eventType == XmlPullParser.START_DOCUMENT) {
              System.out.println("Start document");
          } else if(eventType == XmlPullParser.START_TAG) {
              System.out.println("Start tag "+xpp.getName());
          } else if(eventType == XmlPullParser.END_TAG) {
              System.out.println("End tag "+xpp.getName());
          } else if(eventType == XmlPullParser.TEXT) {
              System.out.println("Text "+xpp.getText());
          }
          eventType = xpp.next();
         }
         System.out.println("End document");
     }
 }
 </code></example></para>
      <para tool="javadoc-to-mdoc">The above example will generate the following output:
 <example><code lang="java">
 Start document
 Start tag foo
 Text Hello World!
 End tag foo
 End document
 </code></example></para>
      <para tool="javadoc-to-mdoc">For more details on API usage, please refer to the
 quick Introduction available at <format type="text/html"><h5 class="jd-tagtitle">See Also</h5></format><list type="bullet"><item><term><c><see cref="T:Org.XmlPull.V1.XmlPullParserFactory" /></c></term></item><item><term><c><see cref="!:Org.XmlPull.V1.XmlPullParser.defineEntityReplacementText(java.lang.String,java.lang.String)" /></c></term></item><item><term><c><see cref="!:Org.XmlPull.V1.XmlPullParser.getName()" /></c></term></item><item><term><c><see cref="!:Org.XmlPull.V1.XmlPullParser.getNamespace()" /></c></term></item><item><term><c><see cref="!:Org.XmlPull.V1.XmlPullParser.getText()" /></c></term></item><item><term><c><see cref="!:Org.XmlPull.V1.XmlPullParser.next()" /></c></term></item><item><term><c><see cref="!:Org.XmlPull.V1.XmlPullParser.nextToken()" /></c></term></item><item><term><c><see cref="!:Org.XmlPull.V1.XmlPullParser.setInput(java.io.InputStream,java.lang.String)" /></c></term></item><item><term><c><see cref="F:Org.XmlPull.V1.XmlPullParser.FeatureProcessDocdecl" /></c></term></item><item><term><c><see cref="F:Org.XmlPull.V1.XmlPullParser.FeatureValidation" /></c></term></item><item><term><c><see cref="!:Org.XmlPull.V1.XmlPullParser.START_DOCUMENT" /></c></term></item><item><term><c><see cref="!:Org.XmlPull.V1.XmlPullParser.START_TAG" /></c></term></item><item><term><c><see cref="!:Org.XmlPull.V1.XmlPullParser.TEXT" /></c></term></item><item><term><c><see cref="!:Org.XmlPull.V1.XmlPullParser.END_TAG" /></c></term></item><item><term><c><see cref="!:Org.XmlPull.V1.XmlPullParser.END_DOCUMENT" /></c></term></item></list></para>
      <para tool="javadoc-to-mdoc">
        <format type="text/html">
          <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html" target="_blank">[Android Documentation]</a>
        </format>
      </para>
    </remarks>
    <since version="Added in API level 1" />
  </Docs>
  <Members>
    <Member MemberName="AttributeCount">
      <MemberSignature Language="C#" Value="public int AttributeCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AttributeCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getAttributeCount", "()I", "GetGetAttributeCountHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the number of attributes of the current start tag, or
 -1 if the current event type is not START_TAG</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the number of attributes of the current start tag, or
 -1 if the current event type is not START_TAG</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getAttributeCount()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="ColumnNumber">
      <MemberSignature Language="C#" Value="public int ColumnNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getColumnNumber", "()I", "GetGetColumnNumberHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current column number, starting from 0.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current column number, starting from 0.
 When the parser does not know the current column number
 or can not determine it,  -1 is returned (e.g. for WBXML).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getColumnNumber()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="DefineEntityReplacementText">
      <MemberSignature Language="C#" Value="public void DefineEntityReplacementText (string entityName, string replacementText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DefineEntityReplacementText(string entityName, string replacementText) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("defineEntityReplacementText", "(Ljava/lang/String;Ljava/lang/String;)V", "GetDefineEntityReplacementText_Ljava_lang_String_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entityName" Type="System.String" />
        <Parameter Name="replacementText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entityName">To be added.</param>
        <param name="replacementText">To be added.</param>
        <summary>Set new value for entity replacement text as defined in
 .</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set new value for entity replacement text as defined in
 .
 If FEATURE_PROCESS_DOCDECL or FEATURE_VALIDATION are set, calling this
 function will result in an exception -- when processing of DOCDECL is
 enabled, there is no need to the entity replacement text manually.

 </para>
          <para tool="javadoc-to-mdoc">The motivation for this function is to allow very small
 implementations of XMLPULL that will work in J2ME environments.
 Though these implementations may not be able to process the document type
 declaration, they still can work with known DTDs by using this function.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Please notes:</b>
            </format> The given value is used literally as replacement text
 and it corresponds to declaring entity in DTD that has all special characters
 escaped: left angle bracket is replaced with &amp;lt;, ampersand with &amp;amp;
 and so on.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Note:</b>
            </format> The given value is the literal replacement text and must not
 contain any other entity reference (if it contains any entity reference
 there will be no further replacement).

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Note:</b>
            </format> The list of pre-defined entity names will
 always contain standard XML entities such as
 amp (&amp;amp;), lt (&amp;lt;), gt (&amp;gt;), quot (&amp;quot;), and apos (&amp;apos;).
 Those cannot be redefined by this method!</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#defineEntityReplacementText(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <altmember cref="F:Org.XmlPull.V1.XmlPullParser.FeatureProcessDocdecl" />
        <altmember cref="F:Org.XmlPull.V1.XmlPullParser.FeatureValidation" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getDepth", "()I", "GetGetDepthHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current depth of the element.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current depth of the element.
 Outside the root element, the depth is 0. The
 depth is incremented by 1 when a start tag is reached.
 The depth is decremented AFTER the end tag
 event was observed.

 <example><code lang="xml">
 &lt;!-- outside --&gt;     0
 &lt;root&gt;                  1
   sometext                 1
     &lt;foobar&gt;         2
     &lt;/foobar&gt;        2
 &lt;/root&gt;              1
 &lt;!-- outside --&gt;     0
 </code></example></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getDepth()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="EventType">
      <MemberSignature Language="C#" Value="public Org.XmlPull.V1.XmlPullParserNode EventType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Org.XmlPull.V1.XmlPullParserNode EventType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getEventType", "()I", "GetGetEventTypeHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.XmlPull.V1.XmlPullParserNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary tool="true">Returns the type of the current event (START_TAG, END_TAG, TEXT, etc.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the type of the current event (START_TAG, END_TAG, TEXT, etc.)</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getEventType()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="public string GetAttributeName (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttributeName(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAttributeName", "(I)Ljava/lang/String;", "GetGetAttributeName_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">zero-based index of attribute</param>
        <summary>Returns the local name of the specified attribute
 if namespaces are enabled or just attribute name if namespaces are disabled.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the local name of the specified attribute
 if namespaces are enabled or just attribute name if namespaces are disabled.
 Throws an IndexOutOfBoundsException if the index is out of range
 or current event type is not START_TAG.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getAttributeName(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeNamespace">
      <MemberSignature Language="C#" Value="public string GetAttributeNamespace (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttributeNamespace(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAttributeNamespace", "(I)Ljava/lang/String;", "GetGetAttributeNamespace_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">zero-based index of attribute</param>
        <summary>Returns the namespace URI of the attribute
 with the given index (starts from 0).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the namespace URI of the attribute
 with the given index (starts from 0).
 Returns an empty string ("") if namespaces are not enabled
 or the attribute has no namespace.
 Throws an IndexOutOfBoundsException if the index is out of range
 or the current event type is not START_TAG.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>NOTE:</i> if FEATURE_REPORT_NAMESPACE_ATTRIBUTES is set
 then namespace attributes (xmlns:ns='...') must be reported
 with namespace
 
 (visit this URL for description!).
 The default namespace attribute (xmlns="...") will be reported with empty namespace.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>NOTE:</i>The xml prefix is bound as defined in
 
 specification to "http://www.w3.org/XML/1998/namespace".</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getAttributeNamespace(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributePrefix">
      <MemberSignature Language="C#" Value="public string GetAttributePrefix (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttributePrefix(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAttributePrefix", "(I)Ljava/lang/String;", "GetGetAttributePrefix_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">zero-based index of attribute</param>
        <summary>Returns the prefix of the specified attribute
 Returns null if the element has no prefix.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the prefix of the specified attribute
 Returns null if the element has no prefix.
 If namespaces are disabled it will always return null.
 Throws an IndexOutOfBoundsException if the index is out of range
 or current event type is not START_TAG.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getAttributePrefix(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeType">
      <MemberSignature Language="C#" Value="public string GetAttributeType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttributeType(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAttributeType", "(I)Ljava/lang/String;", "GetGetAttributeType_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">zero-based index of attribute</param>
        <summary>Returns the type of the specified attribute
 If parser is non-validating it MUST return CDATA.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the type of the specified attribute
 If parser is non-validating it MUST return CDATA.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getAttributeType(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeValue">
      <MemberSignature Language="C#" Value="public string GetAttributeValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttributeValue(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAttributeValue", "(I)Ljava/lang/String;", "GetGetAttributeValue_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">zero-based index of attribute</param>
        <summary>Returns the given attributes value.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the given attributes value.
 Throws an IndexOutOfBoundsException if the index is out of range
 or current event type is not START_TAG.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>NOTE:</i> attribute value must be normalized
 (including entity replacement text if PROCESS_DOCDECL is false) as described in
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getAttributeValue(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeValue">
      <MemberSignature Language="C#" Value="public string GetAttributeValue (string namespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttributeValue(string namespace, string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getAttributeValue", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "GetGetAttributeValue_Ljava_lang_String_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespace">Namespace of the attribute if namespaces are enabled otherwise must be null</param>
        <param name="name">If namespaces enabled local name of attribute otherwise just attribute name</param>
        <summary>Returns the attributes value identified by namespace URI and namespace localName.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the attributes value identified by namespace URI and namespace localName.
 If namespaces are disabled namespace must be null.
 If current event type is not START_TAG then IndexOutOfBoundsException will be thrown.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>NOTE:</i> attribute value must be normalized
 (including entity replacement text if PROCESS_DOCDECL is false) as described in
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getAttributeValue(java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetFeature">
      <MemberSignature Language="C#" Value="public bool GetFeature (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetFeature(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getFeature", "(Ljava/lang/String;)Z", "GetGetFeature_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of feature to be retrieved.</param>
        <summary>Returns the current value of the given feature.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current value of the given feature.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>Please note:</i> unknown features are
 <i>always</i> returned as false.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getFeature(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Java.Lang.IllegalArgumentException">if string the feature name is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNamespace">
      <MemberSignature Language="C#" Value="public string GetNamespace (string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespace(string prefix) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getNamespace", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetNamespace_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="prefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="prefix">To be added.</param>
        <summary>Returns the URI corresponding to the given prefix,
 depending on current state of the parser.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the URI corresponding to the given prefix,
 depending on current state of the parser.

 </para>
          <para tool="javadoc-to-mdoc">If the prefix was not declared in the current scope,
 null is returned. The default namespace is included
 in the namespace table and is available via
 getNamespace (null).

 </para>
          <para tool="javadoc-to-mdoc">This method is a convenience method for

 <example><code lang="java">
  for (int i = getNamespaceCount(getDepth ())-1; i &gt;= 0; i--) {
   if (getNamespacePrefix(i).equals( prefix )) {
     return getNamespaceUri(i);
   }
  }
  return null;
 </code></example></para>
          <para tool="javadoc-to-mdoc">
            <i>Please note:</i> parser implementations
 may provide more efficient lookup, e.g. using a Hashtable.
 The 'xml' prefix is bound to "http://www.w3.org/XML/1998/namespace", as
 defined in the
 
 specification. Analogous, the 'xmlns' prefix is resolved to
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getNamespace(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceCount">
      <MemberSignature Language="C#" Value="public int GetNamespaceCount (int depth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 GetNamespaceCount(int32 depth) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getNamespaceCount", "(I)I", "GetGetNamespaceCount_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="depth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="depth">To be added.</param>
        <summary>Returns the numbers of elements in the namespace stack for the given
 depth.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the numbers of elements in the namespace stack for the given
 depth.
 If namespaces are not enabled, 0 is returned.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>NOTE:</b>
            </format> when parser is on END_TAG then it is allowed to call
  this function with getDepth()+1 argument to retrieve position of namespace
  prefixes and URIs that were declared on corresponding START_TAG.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>NOTE:</b>
            </format> to retrieve list of namespaces declared in current element:<example><code lang="java">
       XmlPullParser pp = ...
       int nsStart = pp.getNamespaceCount(pp.getDepth()-1);
       int nsEnd = pp.getNamespaceCount(pp.getDepth());
       for (int i = nsStart; i </code></example></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getNamespaceCount(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespacePrefix">
      <MemberSignature Language="C#" Value="public string GetNamespacePrefix (int pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespacePrefix(int32 pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getNamespacePrefix", "(I)Ljava/lang/String;", "GetGetNamespacePrefix_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>Returns the namespace prefix for the given position
 in the namespace stack.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the namespace prefix for the given position
 in the namespace stack.
 Default namespace declaration (xmlns='...') will have null as prefix.
 If the given index is out of range, an exception is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Please note:</b>
            </format> when the parser is on an END_TAG,
 namespace prefixes that were declared
 in the corresponding START_TAG are still accessible
 although they are no longer in scope.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getNamespacePrefix(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="GetNamespaceUri">
      <MemberSignature Language="C#" Value="public string GetNamespaceUri (int pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetNamespaceUri(int32 pos) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getNamespaceUri", "(I)Ljava/lang/String;", "GetGetNamespaceUri_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pos" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pos">To be added.</param>
        <summary>Returns the namespace URI for the given position in the
 namespace stack
 If the position is out of range, an exception is thrown.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the namespace URI for the given position in the
 namespace stack
 If the position is out of range, an exception is thrown.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>NOTE:</b>
            </format> when parser is on END_TAG then namespace prefixes that were declared
  in corresponding START_TAG are still accessible even though they are not in scope
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getNamespaceUri(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Java.Lang.Object GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.Object GetProperty(string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProperty", "(Ljava/lang/String;)Ljava/lang/Object;", "GetGetProperty_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">The name of property to be retrieved.</param>
        <summary>Look up the value of a property.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Look up the value of a property.

 The property name is any fully-qualified URI.
 </para>
          <para tool="javadoc-to-mdoc">
            <i>NOTE:</i> unknown properties are <i>always</i>
 returned as null.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getProperty(java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="GetTextCharacters">
      <MemberSignature Language="C#" Value="public char[] GetTextCharacters (int[] holderForStartAndLength);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance char[] GetTextCharacters(int32[] holderForStartAndLength) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getTextCharacters", "([I)[C", "GetGetTextCharacters_arrayIHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="holderForStartAndLength" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="holderForStartAndLength">Must hold an 2-element int array
 into which the start offset and length values will be written.</param>
        <summary>Returns the buffer that contains the text of the current event,
 as well as the start offset and length relevant for the current
 event.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the buffer that contains the text of the current event,
 as well as the start offset and length relevant for the current
 event. See getText(), next() and nextToken() for description of possible returned values.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>Please note:</i> this buffer must not
 be modified and its content MAY change after a call to
 next() or nextToken(). This method will always return the
 same value as getText(), except for ENTITY_REF. In the case
 of ENTITY ref, getText() returns the replacement text and
 this method returns the actual input buffer containing the
 entity name.
 If getText() returns null, this method returns null as well and
 the values returned in the holder array MUST be -1 (both start
 and length).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getTextCharacters(int[])" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="InputEncoding">
      <MemberSignature Language="C#" Value="public string InputEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getInputEncoding", "()Ljava/lang/String;", "GetGetInputEncodingHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the input encoding if known, null otherwise.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the input encoding if known, null otherwise.
 If setInput(InputStream, inputEncoding) was called with an inputEncoding
 value other than null, this value must be returned
 from this method. Otherwise, if inputEncoding is null and
 the parser supports the encoding detection feature
 (http://xmlpull.org/v1/doc/features.html#detect-encoding),
 it must return the detected encoding.
 If setInput(Reader) was called, null is returned.
 After first call to next if XML declaration was present this method
 will return encoding declared.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getInputEncoding()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefault">
      <MemberSignature Language="C#" Value="public bool IsAttributeDefault (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAttributeDefault(int32 index) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("isAttributeDefault", "(I)Z", "GetIsAttributeDefault_IHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">zero-based index of attribute</param>
        <summary>Returns if the specified attribute was not in input was declared in XML.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns if the specified attribute was not in input was declared in XML.
 If parser is non-validating it MUST always return false.
 This information is part of XML infoset:</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#isAttributeDefault(int)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="IsEmptyElementTag">
      <MemberSignature Language="C#" Value="public bool IsEmptyElementTag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmptyElementTag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isEmptyElementTag", "()Z", "GetIsEmptyElementTagHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns true if the current event is START_TAG and the tag
 is degenerated
 (e.g. &lt;foobar/&gt;).</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns true if the current event is START_TAG and the tag
 is degenerated
 (e.g. &lt;foobar/&gt;).
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>NOTE:</b>
            </format> if the parser is not on START_TAG, an exception
 will be thrown.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#isEmptyElementTag()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespace">
      <MemberSignature Language="C#" Value="public bool IsWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("isWhitespace", "()Z", "GetIsWhitespaceHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Checks whether the current TEXT event contains only whitespace
 characters.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Checks whether the current TEXT event contains only whitespace
 characters.
 For IGNORABLE_WHITESPACE, this is always true.
 For TEXT and CDSECT, false is returned when the current event text
 contains at least one non-white space character. For any other
 event type an exception is thrown.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Please note:</b>
            </format> non-validating parsers are not
 able to distinguish whitespace and ignorable whitespace,
 except from whitespace outside the root element. Ignorable
 whitespace is reported as separate event, which is exposed
 via nextToken only.

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#isWhitespace()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getLineNumber", "()I", "GetGetLineNumberHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the current line number, starting from 1.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the current line number, starting from 1.
 When the parser does not know the current line number
 or can not determine it,  -1 is returned (e.g. for WBXML).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getLineNumber()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getName", "()Ljava/lang/String;", "GetGetNameHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>For START_TAG or END_TAG events, the (local) name of the current
 element is returned when namespaces are enabled.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">For START_TAG or END_TAG events, the (local) name of the current
 element is returned when namespaces are enabled. When namespace
 processing is disabled, the raw name is returned.
 For ENTITY_REF events, the entity name is returned.
 If the current event is not START_TAG, END_TAG, or ENTITY_REF,
 null is returned.
 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>Please note:</b>
            </format> To reconstruct the raw element name
  when namespaces are enabled and the prefix is not null,
 you will need to  add the prefix and a colon to localName..

</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getName()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getNamespace", "()Ljava/lang/String;", "GetGetNamespaceHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the namespace URI of the current element.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the namespace URI of the current element.
 The default namespace is represented
 as empty string.
 If namespaces are not enabled, an empty String ("") is always returned.
 The current event must be START_TAG or END_TAG; otherwise,
 null is returned.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getNamespace()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Next">
      <MemberSignature Language="C#" Value="public Org.XmlPull.V1.XmlPullParserNode Next ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Org.XmlPull.V1.XmlPullParserNode Next() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("next", "()I", "GetNextHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.XmlPull.V1.XmlPullParserNode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Get next parsing event - element content will be coalesced and only one
 TEXT event must be returned for whole element content
 (comments and processing instructions will be ignored and entity references
 must be expanded or exception mus be thrown if entity reference can not be expanded).</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Get next parsing event - element content will be coalesced and only one
 TEXT event must be returned for whole element content
 (comments and processing instructions will be ignored and entity references
 must be expanded or exception mus be thrown if entity reference can not be expanded).
 If element content is empty (content is "") then no TEXT event will be reported.

 </para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <b>NOTE:</b>
            </format> empty element (such as &lt;tag/&gt;) will be reported
  with  two separate events: START_TAG, END_TAG - it must be so to preserve
   parsing equivalency of empty element to &lt;tag&gt;&lt;/tag&gt;.
  (see isEmptyElementTag ())</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#next()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="NextTag">
      <MemberSignature Language="C#" Value="public Org.XmlPull.V1.XmlPullParserNode NextTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Org.XmlPull.V1.XmlPullParserNode NextTag() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextTag", "()I", "GetNextTagHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.XmlPull.V1.XmlPullParserNode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Call next() and return event if it is START_TAG or END_TAG
 otherwise throw an exception.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">Call next() and return event if it is START_TAG or END_TAG
 otherwise throw an exception.
 It will skip whitespace TEXT before actual tag if any.

 </para>
          <para tool="javadoc-to-mdoc">essentially it does this
 <example><code lang="java">
   int eventType = next();
   if(eventType == TEXT &amp;&amp;  isWhitespace()) {   // skip whitespace
      eventType = next();
   }
   if (eventType != START_TAG &amp;&amp;  eventType != END_TAG) {
      throw new XmlPullParserException("expected start or end tag", this, null);
   }
   return eventType;
 </code></example></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#nextTag()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="NextText">
      <MemberSignature Language="C#" Value="public string NextText ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string NextText() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextText", "()Ljava/lang/String;", "GetNextTextHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>If current event is START_TAG then if next element is TEXT then element content is returned
 or if next event is END_TAG then empty string is returned, otherwise exception is thrown.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">If current event is START_TAG then if next element is TEXT then element content is returned
 or if next event is END_TAG then empty string is returned, otherwise exception is thrown.
 After calling this function successfully parser will be positioned on END_TAG.

 </para>
          <para tool="javadoc-to-mdoc">The motivation for this function is to allow to parse consistently both
 empty elements and elements that has non empty content, for example for input: <list type="number"><item><term>&lt;tag&gt;foo&lt;/tag&gt;
 </term></item><item><term>&lt;tag&gt;&lt;/tag&gt; (which is equivalent to &lt;tag/&gt;
 both input can be parsed with the same code:
 <example><code lang="java">
   p.nextTag()
   p.requireEvent(p.START_TAG, "", "tag");
   String content = p.nextText();
   p.requireEvent(p.END_TAG, "", "tag");
 </code></example>
 This function together with nextTag make it very easy to parse XML that has
 no mixed content.


 Essentially it does this
 <example><code lang="java">
  if(getEventType() != START_TAG) {
     throw new XmlPullParserException(
       "parser must be on START_TAG to read next text", this, null);
  }
  int eventType = next();
  if(eventType == TEXT) {
     String result = getText();
     eventType = next();
     if(eventType != END_TAG) {
       throw new XmlPullParserException(
          "event TEXT it must be immediately followed by END_TAG", this, null);
      }
      return result;
  } else if(eventType == END_TAG) {
     return "";
  } else {
     throw new XmlPullParserException(
       "parser must be on START_TAG or TEXT to read text", this, null);
  }
 </code></example></term></item></list></para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <i>Warning:</i> Prior to API level 14, the pull parser returned by <c>android.util.Xml</c> did not always advance to the END_TAG event when this method was called.
 Work around by using manually advancing after calls to nextText(): <example><code lang="java">
  String text = xpp.nextText();
  if (xpp.getEventType() != XmlPullParser.END_TAG) {
      xpp.next();
  }
 </code></example></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#nextText()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="NextToken">
      <MemberSignature Language="C#" Value="public Org.XmlPull.V1.XmlPullParserNode NextToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype Org.XmlPull.V1.XmlPullParserNode NextToken() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("nextToken", "()I", "GetNextTokenHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Org.XmlPull.V1.XmlPullParserNode</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>This method works similarly to next() but will expose
 additional event types (COMMENT, CDSECT, DOCDECL, ENTITY_REF, PROCESSING_INSTRUCTION, or
 IGNORABLE_WHITESPACE) if they are available in input.</summary>
        <returns>To be added.</returns>
        <remarks>
          <para tool="javadoc-to-mdoc">This method works similarly to next() but will expose
 additional event types (COMMENT, CDSECT, DOCDECL, ENTITY_REF, PROCESSING_INSTRUCTION, or
 IGNORABLE_WHITESPACE) if they are available in input.

 </para>
          <para tool="javadoc-to-mdoc">If special feature
 
 (identified by URI: http://xmlpull.org/v1/doc/features.html#xml-roundtrip)
 is enabled it is possible to do XML document round trip ie. reproduce
 exectly on output the XML input using getText():
 returned content is always unnormalized (exactly as in input).
 Otherwise returned content is end-of-line normalized as described
 
 and. Also when this feature is enabled exact content of START_TAG, END_TAG,
 DOCDECL and PROCESSING_INSTRUCTION is available.

 </para>
          <para tool="javadoc-to-mdoc">Here is the list of tokens that can be  returned from nextToken()
 and what getText() and getTextCharacters() returns:<format type="text/html"><dl><dt>START_DOCUMENT<dd>null
 <dt>END_DOCUMENT<dd>null
 <dt>START_TAG<dd>null unless FEATURE_XML_ROUNDTRIP
   enabled and then returns XML tag, ex: &lt;tag attr='val'&gt;
 <dt>END_TAG<dd>null unless FEATURE_XML_ROUNDTRIP
  id enabled and then returns XML tag, ex: &lt;/tag&gt;
 <dt>TEXT<dd>return element content.
  <br />Note: that element content may be delivered in multiple consecutive TEXT events.
 <dt>IGNORABLE_WHITESPACE<dd>return characters that are determined to be ignorable white
 space. If the FEATURE_XML_ROUNDTRIP is enabled all whitespace content outside root
 element will always reported as IGNORABLE_WHITESPACE otherwise reporting is optional.
  <br />Note: that element content may be delivered in multiple consecutive IGNORABLE_WHITESPACE events.
 <dt>CDSECT<dd>
 return text <i>inside</i> CDATA
  (ex. 'fo&lt;o' from &lt;!CDATA[fo&lt;o]]&gt;)
 <dt>PROCESSING_INSTRUCTION<dd>
  if FEATURE_XML_ROUNDTRIP is true
  return exact PI content ex: 'pi foo' from &lt;?pi foo?&gt;
  otherwise it may be exact PI content or concatenation of PI target,
 space and data so for example for
   &lt;?target    data?&gt; string "target data" may
       be returned if FEATURE_XML_ROUNDTRIP is false.
 <dt>COMMENT<dd>return comment content ex. 'foo bar' from &lt;!--foo bar--&gt;
 <dt>ENTITY_REF<dd>getText() MUST return entity replacement text if PROCESS_DOCDECL is false
 otherwise getText() MAY return null,
 additionally getTextCharacters() MUST return entity name
 (for example 'entity_name' for &amp;entity_name;).
 <br /><b>NOTE:</b> this is the only place where value returned from getText() and
   getTextCharacters() <b>are different</b><br /><b>NOTE:</b> it is user responsibility to resolve entity reference
    if PROCESS_DOCDECL is false and there is no entity replacement text set in
    defineEntityReplacementText() method (getText() will be null)
 <br /><b>NOTE:</b> character entities (ex. &amp;#32;) and standard entities such as
  &amp;amp; &amp;lt; &amp;gt; &amp;quot; &amp;apos; are reported as well
  and are <b>not</b> reported as TEXT tokens but as ENTITY_REF tokens!
  This requirement is added to allow to do roundtrip of XML documents!
 <dt>DOCDECL<dd>
 if FEATURE_XML_ROUNDTRIP is true or PROCESS_DOCDECL is false
 then return what is inside of DOCDECL for example it returns:<example><code lang="java">
 " titlepage SYSTEM "http://www.foo.bar/dtds/typo.dtd"
 [&lt;!ENTITY % active.links "INCLUDE"&gt;]"</code></example>for input document that contained:<example><code lang="xml">
 &lt;!DOCTYPE titlepage SYSTEM "http://www.foo.bar/dtds/typo.dtd"
 [&lt;!ENTITY % active.links "INCLUDE"&gt;]&gt;</code></example>
 otherwise if FEATURE_XML_ROUNDTRIP is false and PROCESS_DOCDECL is true
    then what is returned is undefined (it may be even null)
 </dd></dt></dd></dt></dd></dt></dd></dt></dd></dt></dd></dt></dd></dt></dd></dt></dd></dt></dd></dt></dd></dt></dl></format></para>
          <para tool="javadoc-to-mdoc" />
          <para tool="javadoc-to-mdoc">
            <i>NOTE:</i> there is no guarantee that there will only one TEXT or
 IGNORABLE_WHITESPACE event from nextToken() as parser may chose to deliver element content in
 multiple tokens (dividing element content into chunks)

 </para>
          <para tool="javadoc-to-mdoc">
            <i>NOTE:</i> whether returned text of token is end-of-line normalized
  is depending on FEATURE_XML_ROUNDTRIP.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>NOTE:</i> XMLDecl (&lt;?xml ...?&gt;) is not reported but its content
 is available through optional properties (see class description above).</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#nextToken()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="PositionDescription">
      <MemberSignature Language="C#" Value="public string PositionDescription { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PositionDescription" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPositionDescription", "()Ljava/lang/String;", "GetGetPositionDescriptionHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns a short text describing the current parser state, including
 the position, a
 description of the current event and the data source if known.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns a short text describing the current parser state, including
 the position, a
 description of the current event and the data source if known.
 This method is especially useful to provide meaningful
 error messages and for debugging purposes.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getPositionDescription()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Prefix">
      <MemberSignature Language="C#" Value="public string Prefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Prefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getPrefix", "()Ljava/lang/String;", "GetGetPrefixHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the prefix of the current element.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the prefix of the current element.
 If the element is in the default namespace (has no prefix),
 null is returned.
 If namespaces are not enabled, or the current event
 is not  START_TAG or END_TAG, null is returned.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getPrefix()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
    <Member MemberName="Require">
      <MemberSignature Language="C#" Value="public void Require (Org.XmlPull.V1.XmlPullParserNode type, string namespace, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Require(valuetype Org.XmlPull.V1.XmlPullParserNode type, string namespace, string name) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("require", "(ILjava/lang/String;Ljava/lang/String;)V", "GetRequire_ILjava_lang_String_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="Org.XmlPull.V1.XmlPullParserNode">
          <Attributes>
            <Attribute>
              <AttributeName>Android.Runtime.GeneratedEnum</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
        <Parameter Name="namespace" Type="System.String" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">To be added.</param>
        <param name="namespace">To be added.</param>
        <param name="name">To be added.</param>
        <summary>Test if the current event is of the given type and if the
 namespace and name do match. null will match any namespace
 and any name.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Test if the current event is of the given type and if the
 namespace and name do match. null will match any namespace
 and any name. If the test is not passed, an exception is
 thrown. The exception text indicates the parser position,
 the expected event and the current event that is not meeting the
 requirement.

 </para>
          <para tool="javadoc-to-mdoc">Essentially it does this
 <example><code lang="java">
  if (type != getEventType()
  || (namespace != null &amp;&amp;  !namespace.equals( getNamespace () ) )
  || (name != null &amp;&amp;  !name.equals( getName() ) ) )
     throw new XmlPullParserException( "expected "+ TYPES[ type ]+getPositionDescription());
 </code></example></para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#require(int, java.lang.String, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
        <exception cref="T:Java.IO.IOException" />
      </Docs>
    </Member>
    <Member MemberName="SetFeature">
      <MemberSignature Language="C#" Value="public void SetFeature (string name, bool state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetFeature(string name, bool state) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setFeature", "(Ljava/lang/String;Z)V", "GetSetFeature_Ljava_lang_String_ZHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="state" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="state">To be added.</param>
        <summary>Use this call to change the general behaviour of the parser,
 such as namespace processing or doctype declaration handling.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Use this call to change the general behaviour of the parser,
 such as namespace processing or doctype declaration handling.
 This method must be called before the first call to next or
 nextToken. Otherwise, an exception is thrown.
 </para>
          <para tool="javadoc-to-mdoc">Example: call setFeature(FEATURE_PROCESS_NAMESPACES, true) in order
 to switch on namespace processing. The initial settings correspond
 to the properties requested from the XML Pull Parser factory.
 If none were requested, all features are deactivated by default.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#setFeature(java.lang.String, boolean)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException">If the feature is not supported or can not be set</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If string with the feature name is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="SetInput">
      <MemberSignature Language="C#" Value="public void SetInput (Java.IO.Reader in);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInput(class Java.IO.Reader in) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInput", "(Ljava/io/Reader;)V", "GetSetInput_Ljava_io_Reader_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="in" Type="Java.IO.Reader" />
      </Parameters>
      <Docs>
        <param name="in">To be added.</param>
        <summary>Set the input source for parser to the given reader and
 resets the parser.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the input source for parser to the given reader and
 resets the parser. The event type is set to the initial value
 START_DOCUMENT.
 Setting the reader to null will just stop parsing and
 reset parser state,
 allowing the parser to free internal resources
 such as parsing buffers.
</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#setInput(java.io.Reader)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="SetInput">
      <MemberSignature Language="C#" Value="public void SetInput (System.IO.Stream inputStream, string inputEncoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetInput(class System.IO.Stream inputStream, string inputEncoding) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setInput", "(Ljava/io/InputStream;Ljava/lang/String;)V", "GetSetInput_Ljava_io_InputStream_Ljava_lang_String_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputStream" Type="System.IO.Stream" />
        <Parameter Name="inputEncoding" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="inputStream">contains a raw byte input stream of possibly
     unknown encoding (when inputEncoding is null).</param>
        <param name="inputEncoding">if not null it MUST be used as encoding for inputStream
</param>
        <summary>Sets the input stream the parser is going to process.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Sets the input stream the parser is going to process.
 This call resets the parser state and sets the event type
 to the initial value START_DOCUMENT.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>NOTE:</i> If an input encoding string is passed,
  it MUST be used. Otherwise,
  if inputEncoding is null, the parser SHOULD try to determine
  input encoding following XML 1.0 specification (see below).
  If encoding detection is supported then following feature
  
  MUST be true amd otherwise it must be false</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#setInput(java.io.InputStream, java.lang.String)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException" />
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public void SetProperty (string name, Java.Lang.Object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetProperty(string name, class Java.Lang.Object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("setProperty", "(Ljava/lang/String;Ljava/lang/Object;)V", "GetSetProperty_Ljava_lang_String_Ljava_lang_Object_Handler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="Java.Lang.Object" />
      </Parameters>
      <Docs>
        <param name="name">To be added.</param>
        <param name="value">To be added.</param>
        <summary>Set the value of a property.</summary>
        <remarks>
          <para tool="javadoc-to-mdoc">Set the value of a property.

 The property name is any fully-qualified URI.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#setProperty(java.lang.String, java.lang.Object)" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
        <exception cref="T:Org.XmlPull.V1.XmlPullParserException">If the property is not supported or can not be set</exception>
        <exception cref="T:Java.Lang.IllegalArgumentException">If string with the property name is null
</exception>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getText", "()Ljava/lang/String;", "GetGetTextHandler:Org.XmlPull.V1.IXmlPullParserInvoker, Mono.Android, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Returns the text content of the current event as String.</summary>
        <value>To be added.</value>
        <remarks>
          <para tool="javadoc-to-mdoc">Returns the text content of the current event as String.
 The value returned depends on current event type,
 for example for TEXT event it is element content
 (this is typical case when next() is used).

 See description of nextToken() for detailed description of
 possible returned values for different types of events.

 </para>
          <para tool="javadoc-to-mdoc">
            <i>NOTE:</i> in case of ENTITY_REF, this method returns
 the entity replacement text (or null if not available). This is
 the only case where
 getText() and getTextCharacters() return different values.</para>
          <para tool="javadoc-to-mdoc">
            <format type="text/html">
              <a href="http://developer.android.com/reference/org/xmlpull/v1/XmlPullParser.html#getText()" target="_blank">[Android Documentation]</a>
            </format>
          </para>
        </remarks>
        <since version="Added in API level 1" />
      </Docs>
    </Member>
  </Members>
</Type>
