<Type Name="CrossProfileApps" FullName="Android.Content.PM.CrossProfileApps">
  <TypeSignature Language="C#" Value="public class CrossProfileApps : Java.Lang.Object" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CrossProfileApps extends Java.Lang.Object" />
  <TypeSignature Language="DocId" Value="T:Android.Content.PM.CrossProfileApps" />
  <AssemblyInfo>
    <AssemblyName>Mono.Android</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Java.Lang.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Android.Runtime.Register("android/content/pm/CrossProfileApps", ApiSince=28, DoNotGenerateAcw=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Class for handling cross profile operations.</summary>
    <remarks>
      <para>
        <format type="text/html">
          <a href="https://developer.android.com/reference/android/content/pm/CrossProfileApps" title="Reference documentation">Java documentation for <code>android.content.pm.CrossProfileApps</code>.</a>
        </format>
      </para>
      <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CrossProfileApps (IntPtr javaReference, Android.Runtime.JniHandleOwnership transfer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(native int javaReference, valuetype Android.Runtime.JniHandleOwnership transfer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.CrossProfileApps.#ctor(System.IntPtr,Android.Runtime.JniHandleOwnership)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="javaReference" Type="System.IntPtr" />
        <Parameter Name="transfer" Type="Android.Runtime.JniHandleOwnership" />
      </Parameters>
      <Docs>
        <param name="javaReference">To be added.</param>
        <param name="transfer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionCanInteractAcrossProfilesChanged">
      <MemberSignature Language="C#" Value="public const string ActionCanInteractAcrossProfilesChanged;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string ActionCanInteractAcrossProfilesChanged" />
      <MemberSignature Language="DocId" Value="F:Android.Content.PM.CrossProfileApps.ActionCanInteractAcrossProfilesChanged" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("ACTION_CAN_INTERACT_ACROSS_PROFILES_CHANGED", ApiSince=30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Broadcast signalling that the receiving app's permission to interact across profiles has
            changed.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/CrossProfileApps#ACTION_CAN_INTERACT_ACROSS_PROFILES_CHANGED" title="Reference documentation">Java documentation for <code>android.content.pm.CrossProfileApps.ACTION_CAN_INTERACT_ACROSS_PROFILES_CHANGED</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInteractAcrossProfiles">
      <MemberSignature Language="C#" Value="public virtual bool CanInteractAcrossProfiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanInteractAcrossProfiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.CrossProfileApps.CanInteractAcrossProfiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canInteractAcrossProfiles", "()Z", "GetCanInteractAcrossProfilesHandler", ApiSince=30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns whether the calling package can interact across profiles.</summary>
        <returns>true if the calling package can interact across profiles.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/CrossProfileApps#canInteractAcrossProfiles()" title="Reference documentation">Java documentation for <code>android.content.pm.CrossProfileApps.canInteractAcrossProfiles()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRequestInteractAcrossProfiles">
      <MemberSignature Language="C#" Value="public virtual bool CanRequestInteractAcrossProfiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRequestInteractAcrossProfiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.CrossProfileApps.CanRequestInteractAcrossProfiles" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("canRequestInteractAcrossProfiles", "()Z", "GetCanRequestInteractAcrossProfilesHandler", ApiSince=30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns whether the calling package can request to navigate the user to
            the relevant settings page to request user consent to interact across profiles.</summary>
        <returns>true if the calling package can request to interact across profiles.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/CrossProfileApps#canRequestInteractAcrossProfiles()" title="Reference documentation">Java documentation for <code>android.content.pm.CrossProfileApps.canRequestInteractAcrossProfiles()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateRequestInteractAcrossProfilesIntent">
      <MemberSignature Language="C#" Value="public virtual Android.Content.Intent CreateRequestInteractAcrossProfilesIntent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Content.Intent CreateRequestInteractAcrossProfilesIntent() cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.CrossProfileApps.CreateRequestInteractAcrossProfilesIntent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("createRequestInteractAcrossProfilesIntent", "()Landroid/content/Intent;", "GetCreateRequestInteractAcrossProfilesIntentHandler", ApiSince=30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Content.Intent</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an <c>Intent</c> to open the settings page that allows the user to decide whether
            the calling app can interact across profiles.</summary>
        <returns>an <c>Intent</c> to open the settings page that allows the user to decide whether
            the app can interact across profiles</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/CrossProfileApps#createRequestInteractAcrossProfilesIntent()" title="Reference documentation">Java documentation for <code>android.content.pm.CrossProfileApps.createRequestInteractAcrossProfilesIntent()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProfileSwitchingIconDrawable">
      <MemberSignature Language="C#" Value="public virtual Android.Graphics.Drawables.Drawable GetProfileSwitchingIconDrawable (Android.OS.UserHandle userHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Android.Graphics.Drawables.Drawable GetProfileSwitchingIconDrawable(class Android.OS.UserHandle userHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.CrossProfileApps.GetProfileSwitchingIconDrawable(Android.OS.UserHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProfileSwitchingIconDrawable", "(Landroid/os/UserHandle;)Landroid/graphics/drawable/Drawable;", "GetGetProfileSwitchingIconDrawable_Landroid_os_UserHandle_Handler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Android.Graphics.Drawables.Drawable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userHandle" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="userHandle">The UserHandle of the target profile, must be one of the users returned by
                   <c>#getTargetUserProfiles()</c>, otherwise a <c>SecurityException</c> will
                   be thrown.</param>
        <summary>Return a drawable that calling app can show to user for the semantic of profile switching --
            launching its own activity in specified user profile.</summary>
        <returns>an icon that calling app can show user for the semantic of launching its own
                    activity in specified user profile.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/CrossProfileApps#getProfileSwitchingIconDrawable(android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.CrossProfileApps.getProfileSwitchingIconDrawable(android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProfileSwitchingLabel">
      <MemberSignature Language="C#" Value="public string GetProfileSwitchingLabel (Android.OS.UserHandle userHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetProfileSwitchingLabel(class Android.OS.UserHandle userHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.CrossProfileApps.GetProfileSwitchingLabel(Android.OS.UserHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userHandle" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="userHandle">The UserHandle of the target profile, must be one of the users returned by
                   <c>#getTargetUserProfiles()</c>, otherwise a <c>SecurityException</c> will
                   be thrown.</param>
        <summary>Return a label that calling app can show to user for the semantic of profile switching --
            launching its own activity in specified user profile.</summary>
        <returns>a label that calling app can show user for the semantic of launching its own
                    activity in the specified user profile.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/CrossProfileApps#getProfileSwitchingLabel(android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.CrossProfileApps.getProfileSwitchingLabel(android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProfileSwitchingLabelFormatted">
      <MemberSignature Language="C#" Value="public virtual Java.Lang.ICharSequence GetProfileSwitchingLabelFormatted (Android.OS.UserHandle userHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Java.Lang.ICharSequence GetProfileSwitchingLabelFormatted(class Android.OS.UserHandle userHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.CrossProfileApps.GetProfileSwitchingLabelFormatted(Android.OS.UserHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("getProfileSwitchingLabel", "(Landroid/os/UserHandle;)Ljava/lang/CharSequence;", "GetGetProfileSwitchingLabel_Landroid_os_UserHandle_Handler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Lang.ICharSequence</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userHandle" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="userHandle">The UserHandle of the target profile, must be one of the users returned by
                   <c>#getTargetUserProfiles()</c>, otherwise a <c>SecurityException</c> will
                   be thrown.</param>
        <summary>Return a label that calling app can show to user for the semantic of profile switching --
            launching its own activity in specified user profile.</summary>
        <returns>a label that calling app can show user for the semantic of launching its own
                    activity in the specified user profile.</returns>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/CrossProfileApps#getProfileSwitchingLabel(android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.CrossProfileApps.getProfileSwitchingLabel(android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="JniPeerMembers">
      <MemberSignature Language="C#" Value="public override Java.Interop.JniPeerMembers JniPeerMembers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Java.Interop.JniPeerMembers JniPeerMembers" />
      <MemberSignature Language="DocId" Value="P:Android.Content.PM.CrossProfileApps.JniPeerMembers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Java.Interop.JniPeerMembers</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActivity">
      <MemberSignature Language="C#" Value="public virtual void StartActivity (Android.Content.Intent intent, Android.OS.UserHandle targetUser, Android.App.Activity callingActivity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivity(class Android.Content.Intent intent, class Android.OS.UserHandle targetUser, class Android.App.Activity callingActivity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.CrossProfileApps.StartActivity(Android.Content.Intent,Android.OS.UserHandle,Android.App.Activity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startActivity", "(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/app/Activity;)V", "GetStartActivity_Landroid_content_Intent_Landroid_os_UserHandle_Landroid_app_Activity_Handler", ApiSince=30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="targetUser" Type="Android.OS.UserHandle" />
        <Parameter Name="callingActivity" Type="Android.App.Activity" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <param name="targetUser">To be added.</param>
        <param name="callingActivity">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartActivity">
      <MemberSignature Language="C#" Value="public virtual void StartActivity (Android.Content.Intent intent, Android.OS.UserHandle targetUser, Android.App.Activity callingActivity, Android.OS.Bundle options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartActivity(class Android.Content.Intent intent, class Android.OS.UserHandle targetUser, class Android.App.Activity callingActivity, class Android.OS.Bundle options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.CrossProfileApps.StartActivity(Android.Content.Intent,Android.OS.UserHandle,Android.App.Activity,Android.OS.Bundle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startActivity", "(Landroid/content/Intent;Landroid/os/UserHandle;Landroid/app/Activity;Landroid/os/Bundle;)V", "GetStartActivity_Landroid_content_Intent_Landroid_os_UserHandle_Landroid_app_Activity_Landroid_os_Bundle_Handler", ApiSince=30)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="intent" Type="Android.Content.Intent" />
        <Parameter Name="targetUser" Type="Android.OS.UserHandle" />
        <Parameter Name="callingActivity" Type="Android.App.Activity" />
        <Parameter Name="options" Type="Android.OS.Bundle" />
      </Parameters>
      <Docs>
        <param name="intent">To be added.</param>
        <param name="targetUser">To be added.</param>
        <param name="callingActivity">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartMainActivity">
      <MemberSignature Language="C#" Value="public virtual void StartMainActivity (Android.Content.ComponentName component, Android.OS.UserHandle targetUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartMainActivity(class Android.Content.ComponentName component, class Android.OS.UserHandle targetUser) cil managed" />
      <MemberSignature Language="DocId" Value="M:Android.Content.PM.CrossProfileApps.StartMainActivity(Android.Content.ComponentName,Android.OS.UserHandle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Android.Runtime.Register("startMainActivity", "(Landroid/content/ComponentName;Landroid/os/UserHandle;)V", "GetStartMainActivity_Landroid_content_ComponentName_Landroid_os_UserHandle_Handler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="Android.Content.ComponentName" />
        <Parameter Name="targetUser" Type="Android.OS.UserHandle" />
      </Parameters>
      <Docs>
        <param name="component">The ComponentName of the activity to launch, it must be exported and has
                   action <c>android.content.Intent#ACTION_MAIN</c>, category
                   <c>android.content.Intent#CATEGORY_LAUNCHER</c>. Otherwise, SecurityException will
                   be thrown.</param>
        <param name="targetUser">The UserHandle of the profile, must be one of the users returned by
                   <c>#getTargetUserProfiles()</c>, otherwise a <c>SecurityException</c> will
                   be thrown.</param>
        <summary>Starts the specified main activity of the caller package in the specified profile.</summary>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/CrossProfileApps#startMainActivity(android.content.ComponentName,%20android.os.UserHandle)" title="Reference documentation">Java documentation for <code>android.content.pm.CrossProfileApps.startMainActivity(android.content.ComponentName, android.os.UserHandle)</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUserProfiles">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt; TargetUserProfiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class Android.OS.UserHandle&gt; TargetUserProfiles" />
      <MemberSignature Language="DocId" Value="P:Android.Content.PM.CrossProfileApps.TargetUserProfiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: Android.Runtime.Register("getTargetUserProfiles", "()Ljava/util/List;", "GetGetTargetUserProfilesHandler", ApiSince=28)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Android.OS.UserHandle&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Return a list of user profiles that that the caller can use when calling other APIs in this
            class.</summary>
        <value>To be added.</value>
        <remarks>
          <para>
            <format type="text/html">
              <a href="https://developer.android.com/reference/android/content/pm/CrossProfileApps#getTargetUserProfiles()" title="Reference documentation">Java documentation for <code>android.content.pm.CrossProfileApps.getTargetUserProfiles()</code>.</a>
            </format>
          </para>
          <para>
                    Portions of this page are modifications based on work created and shared by the 
                    <format type="text/html"><a href="https://developers.google.com/terms/site-policies" title="Android Open Source Project">Android Open Source Project</a></format>
                     and used according to terms described in the 
                    <format type="text/html"><a href="https://creativecommons.org/licenses/by/2.5/" title="Creative Commons 2.5 Attribution License">Creative Commons 2.5 Attribution License.</a></format></para>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdClass">
      <MemberSignature Language="C#" Value="protected override IntPtr ThresholdClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int ThresholdClass" />
      <MemberSignature Language="DocId" Value="P:Android.Content.PM.CrossProfileApps.ThresholdClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThresholdType">
      <MemberSignature Language="C#" Value="protected override Type ThresholdType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ThresholdType" />
      <MemberSignature Language="DocId" Value="P:Android.Content.PM.CrossProfileApps.ThresholdType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Mono.Android</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable(System.Diagnostics.DebuggerBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
